#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShotgunDragonProjectile

#include "Basic.hpp"

#include "ShotgunDragonProjectile_classes.hpp"
#include "ShotgunDragonProjectile_parameters.hpp"


namespace SDK
{

// Function ShotgunDragonProjectile.ShotgunDragonProjectile_C.GetImpactEffectParameters
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// bool                                    IsDeathBlow                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSTRUCT_EffectParams             EffectParams                                           (Parm, OutParm, HasGetValueTypeHash)

void AShotgunDragonProjectile_C::GetImpactEffectParameters(const struct FHitResult& Hit, bool IsDeathBlow, struct FSTRUCT_EffectParams* EffectParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShotgunDragonProjectile_C", "GetImpactEffectParameters");

	Params::ShotgunDragonProjectile_C_GetImpactEffectParameters Parms{};

	Parms.Hit = std::move(Hit);
	Parms.IsDeathBlow = IsDeathBlow;

	UObject::ProcessEvent(Func, &Parms);

	if (EffectParams != nullptr)
		*EffectParams = std::move(Parms.EffectParams);
}


// Function ShotgunDragonProjectile.ShotgunDragonProjectile_C.GetIncendiaryEffectDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AShotgunDragonProjectile_C::GetIncendiaryEffectDuration(float* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShotgunDragonProjectile_C", "GetIncendiaryEffectDuration");

	Params::ShotgunDragonProjectile_C_GetIncendiaryEffectDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function ShotgunDragonProjectile.ShotgunDragonProjectile_C.GetIncendiaryEffectIntensity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// float                                   Intensity                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AShotgunDragonProjectile_C::GetIncendiaryEffectIntensity(const struct FHitResult& Hit, float* Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ShotgunDragonProjectile_C", "GetIncendiaryEffectIntensity");

	Params::ShotgunDragonProjectile_C_GetIncendiaryEffectIntensity Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);

	if (Intensity != nullptr)
		*Intensity = Parms.Intensity;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_MainMenu_InGame

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ENUM_MenuNavigationInput_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_GameDifficulty_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.ExecuteUbergraph_WIDGET_MainMenu_InGame
// 0x01D0 (0x01D0 - 0x0000)
struct WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSaveGames_Result;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySetMainMenuEnabled_Result;             // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MenuBase_C*                     K2Node_ComponentBoundEvent_Menu_5;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MenuBase_C*                     K2Node_ComponentBoundEvent_Menu_4;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetMenuLabel_Page;                        // 0x0030(0x0018)()
	class UWIDGET_MenuBase_C*                     K2Node_ComponentBoundEvent_SubMenu_1;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetMenuLabel_Page_1;                      // 0x0050(0x0018)()
	class UWIDGET_MenuBase_C*                     K2Node_ComponentBoundEvent_SubMenu;                // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0070(0x0018)()
	class FText                                   CallFunc_GetEmptyText_ReturnValue_1;               // 0x0088(0x0018)()
	class UWIDGET_MenuBase_C*                     K2Node_ComponentBoundEvent_Menu_3;                 // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetMenuLabel_Page_2;                      // 0x00A8(0x0018)()
	class UWIDGET_MenuBase_C*                     K2Node_ComponentBoundEvent_Menu_2;                 // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetEmptyText_ReturnValue_2;               // 0x00C8(0x0018)()
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_ComponentBoundEvent_Message;                // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple_1;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MenuBase_C*                     K2Node_ComponentBoundEvent_Menu_1;                 // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetMenuLabel_Page_3;                      // 0x0140(0x0018)()
	class UWIDGET_MenuBase_C*                     K2Node_ComponentBoundEvent_Menu;                   // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetEmptyText_ReturnValue_3;               // 0x0160(0x0018)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0178(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame) == 0x0001D0, "Wrong size on WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, EntryPoint) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000010, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_CanSaveGames_Result) == 0x000019, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_CanSaveGames_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_TrySetMainMenuEnabled_Result) == 0x00001A, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_TrySetMainMenuEnabled_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_ComponentBoundEvent_Menu_5) == 0x000020, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_ComponentBoundEvent_Menu_5' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_ComponentBoundEvent_Menu_4) == 0x000028, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_ComponentBoundEvent_Menu_4' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetMenuLabel_Page) == 0x000030, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetMenuLabel_Page' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_ComponentBoundEvent_SubMenu_1) == 0x000048, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_ComponentBoundEvent_SubMenu_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetMenuLabel_Page_1) == 0x000050, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetMenuLabel_Page_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_ComponentBoundEvent_SubMenu) == 0x000068, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_ComponentBoundEvent_SubMenu' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetEmptyText_ReturnValue) == 0x000070, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetEmptyText_ReturnValue_1) == 0x000088, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetEmptyText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_ComponentBoundEvent_Menu_3) == 0x0000A0, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_ComponentBoundEvent_Menu_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetMenuLabel_Page_2) == 0x0000A8, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetMenuLabel_Page_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_ComponentBoundEvent_Menu_2) == 0x0000C0, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_ComponentBoundEvent_Menu_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetEmptyText_ReturnValue_2) == 0x0000C8, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetEmptyText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetPlayerController_ReturnValue) == 0x0000E0, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_ComponentBoundEvent_Message) == 0x0000E8, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_ComponentBoundEvent_Message' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_SwitchString_CmpSuccess) == 0x0000F8, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetGameInstance_ReturnValue) == 0x000100, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_Not_PreBool_ReturnValue_1) == 0x000108, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_DynamicCast_AsGI_Single_Player) == 0x000110, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_Not_PreBool_ReturnValue_2) == 0x000119, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000120, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_DynamicCast_AsPAWN_Hacker_Simple_1) == 0x000128, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_DynamicCast_AsPAWN_Hacker_Simple_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_DynamicCast_bSuccess_2) == 0x000130, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_ComponentBoundEvent_Menu_1) == 0x000138, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_ComponentBoundEvent_Menu_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetMenuLabel_Page_3) == 0x000140, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetMenuLabel_Page_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_ComponentBoundEvent_Menu) == 0x000158, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_ComponentBoundEvent_Menu' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetEmptyText_ReturnValue_3) == 0x000160, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetEmptyText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_Event_MyGeometry) == 0x000178, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_Event_InDeltaTime) == 0x0001B0, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_GetPlayerController_ReturnValue_1) == 0x0001B8, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_DynamicCast_AsCON_Hacker) == 0x0001C0, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, K2Node_DynamicCast_bSuccess_3) == 0x0001C8, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame, CallFunc_IsUsingGamepad_Result) == 0x0001C9, "Member 'WIDGET_MainMenu_InGame_C_ExecuteUbergraph_WIDGET_MainMenu_InGame::CallFunc_IsUsingGamepad_Result' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_MainMenu_InGame_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_Tick) == 0x000004, "Wrong alignment on WIDGET_MainMenu_InGame_C_Tick");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_Tick) == 0x00003C, "Wrong size on WIDGET_MainMenu_InGame_C_Tick");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_MainMenu_InGame_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_3_OnMenuClosed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_3_OnMenuClosed__DelegateSignature final
{
public:
	class UWIDGET_MenuBase_C*                     Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_3_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_3_OnMenuClosed__DelegateSignature");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_3_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong size on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_3_OnMenuClosed__DelegateSignature");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_3_OnMenuClosed__DelegateSignature, Menu) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_3_OnMenuClosed__DelegateSignature::Menu' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_2_OnMenuOpened__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_2_OnMenuOpened__DelegateSignature final
{
public:
	class UWIDGET_MenuBase_C*                     Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_2_OnMenuOpened__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_2_OnMenuOpened__DelegateSignature");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_2_OnMenuOpened__DelegateSignature) == 0x000008, "Wrong size on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_2_OnMenuOpened__DelegateSignature");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_2_OnMenuOpened__DelegateSignature, Menu) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_DebugMenu_K2Node_ComponentBoundEvent_2_OnMenuOpened__DelegateSignature::Menu' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.BndEvt__WIDGET_MainMenu_InGame_WIDGET_MainMenu_InGameList_K2Node_ComponentBoundEvent_8_OnMenuAction__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_MainMenu_InGameList_K2Node_ComponentBoundEvent_8_OnMenuAction__DelegateSignature final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_MainMenu_InGameList_K2Node_ComponentBoundEvent_8_OnMenuAction__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_MainMenu_InGameList_K2Node_ComponentBoundEvent_8_OnMenuAction__DelegateSignature");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_MainMenu_InGameList_K2Node_ComponentBoundEvent_8_OnMenuAction__DelegateSignature) == 0x000010, "Wrong size on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_MainMenu_InGameList_K2Node_ComponentBoundEvent_8_OnMenuAction__DelegateSignature");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_MainMenu_InGameList_K2Node_ComponentBoundEvent_8_OnMenuAction__DelegateSignature, Message) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_MainMenu_InGameList_K2Node_ComponentBoundEvent_8_OnMenuAction__DelegateSignature::Message' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_7_OnMenuClosed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_7_OnMenuClosed__DelegateSignature final
{
public:
	class UWIDGET_MenuBase_C*                     Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_7_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_7_OnMenuClosed__DelegateSignature");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_7_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong size on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_7_OnMenuClosed__DelegateSignature");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_7_OnMenuClosed__DelegateSignature, Menu) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_7_OnMenuClosed__DelegateSignature::Menu' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_0_OnMenuOpened__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_0_OnMenuOpened__DelegateSignature final
{
public:
	class UWIDGET_MenuBase_C*                     Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_0_OnMenuOpened__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_0_OnMenuOpened__DelegateSignature");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_0_OnMenuOpened__DelegateSignature) == 0x000008, "Wrong size on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_0_OnMenuOpened__DelegateSignature");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_0_OnMenuOpened__DelegateSignature, Menu) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_SaveLoadMenu_K2Node_ComponentBoundEvent_0_OnMenuOpened__DelegateSignature::Menu' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_6_OnSubMenuClosed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_6_OnSubMenuClosed__DelegateSignature final
{
public:
	class UWIDGET_MenuBase_C*                     SubMenu;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_6_OnSubMenuClosed__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_6_OnSubMenuClosed__DelegateSignature");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_6_OnSubMenuClosed__DelegateSignature) == 0x000008, "Wrong size on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_6_OnSubMenuClosed__DelegateSignature");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_6_OnSubMenuClosed__DelegateSignature, SubMenu) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_6_OnSubMenuClosed__DelegateSignature::SubMenu' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_5_OnSubMenuOpened__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_5_OnSubMenuOpened__DelegateSignature final
{
public:
	class UWIDGET_MenuBase_C*                     SubMenu;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_5_OnSubMenuOpened__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_5_OnSubMenuOpened__DelegateSignature");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_5_OnSubMenuOpened__DelegateSignature) == 0x000008, "Wrong size on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_5_OnSubMenuOpened__DelegateSignature");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_5_OnSubMenuOpened__DelegateSignature, SubMenu) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_5_OnSubMenuOpened__DelegateSignature::SubMenu' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_4_OnMenuClosed__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_4_OnMenuClosed__DelegateSignature final
{
public:
	class UWIDGET_MenuBase_C*                     Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_4_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_4_OnMenuClosed__DelegateSignature");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_4_OnMenuClosed__DelegateSignature) == 0x000008, "Wrong size on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_4_OnMenuClosed__DelegateSignature");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_4_OnMenuClosed__DelegateSignature, Menu) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_4_OnMenuClosed__DelegateSignature::Menu' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_1_OnMenuOpened__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_1_OnMenuOpened__DelegateSignature final
{
public:
	class UWIDGET_MenuBase_C*                     Menu;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_1_OnMenuOpened__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_1_OnMenuOpened__DelegateSignature");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_1_OnMenuOpened__DelegateSignature) == 0x000008, "Wrong size on WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_1_OnMenuOpened__DelegateSignature");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_1_OnMenuOpened__DelegateSignature, Menu) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_BndEvt__WIDGET_MainMenu_InGame_WIDGET_OptionsScreen_K2Node_ComponentBoundEvent_1_OnMenuOpened__DelegateSignature::Menu' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.SetPlayerHUD
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MainMenu_InGame_C_SetPlayerHUD final
{
public:
	class UUserWidget*                            Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_SetPlayerHUD) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_SetPlayerHUD");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_SetPlayerHUD) == 0x000008, "Wrong size on WIDGET_MainMenu_InGame_C_SetPlayerHUD");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_SetPlayerHUD, Widget) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_SetPlayerHUD::Widget' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.ToggleMainMenu
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_MainMenu_InGame_C_ToggleMainMenu final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySetMainMenuEnabled_Result;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_ToggleMainMenu) == 0x000001, "Wrong alignment on WIDGET_MainMenu_InGame_C_ToggleMainMenu");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_ToggleMainMenu) == 0x000002, "Wrong size on WIDGET_MainMenu_InGame_C_ToggleMainMenu");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ToggleMainMenu, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_ToggleMainMenu::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_ToggleMainMenu, CallFunc_TrySetMainMenuEnabled_Result) == 0x000001, "Member 'WIDGET_MainMenu_InGame_C_ToggleMainMenu::CallFunc_TrySetMainMenuEnabled_Result' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.TrySetMainMenuEnabled
// 0x01D8 (0x01D8 - 0x0000)
struct WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PlayAnimation_0;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CountdownTimeRemaining;                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     SinglePlayerGI;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameCountdownCritical_Result;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00A8(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x00C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0118(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0018)()
	float                                         CallFunc_GetGameCountdownSecondsRemaining_Result;  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           CallFunc_GetDifficultyByType_Difficulty;           // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_186[0x2];                                      // 0x0186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A[0x6];                                      // 0x019A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetGameLockedForMenus_Result;             // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B2[0x6];                                      // 0x01B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetGameLockedForMenus_Result_1;           // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStreamingLevels_Result;                 // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled) == 0x0001D8, "Wrong size on WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, NewState) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::NewState' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, PlayAnimation_0) == 0x000001, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::PlayAnimation_0' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, Result) == 0x000002, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CountdownTimeRemaining) == 0x000004, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CountdownTimeRemaining' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, SinglePlayerGI) == 0x000008, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::SinglePlayerGI' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000018, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_IsGameCountdownCritical_Result) == 0x000021, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_IsGameCountdownCritical_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_SelectFloat_ReturnValue) == 0x000024, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000028, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_FromSeconds_ReturnValue) == 0x000030, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_BreakTimespan_Days) == 0x000038, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_BreakTimespan_Hours) == 0x00003C, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_BreakTimespan_Minutes) == 0x000040, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_BreakTimespan_Seconds) == 0x000044, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_BreakTimespan_Milliseconds) == 0x000048, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000A8, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_Conv_IntToText_ReturnValue_2) == 0x0000C0, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, K2Node_MakeStruct_FormatArgumentData_2) == 0x000118, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, K2Node_MakeArray_Array) == 0x000158, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_Format_ReturnValue) == 0x000168, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_GetGameCountdownSecondsRemaining_Result) == 0x000180, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_GetGameCountdownSecondsRemaining_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_GetDifficultyByType_Difficulty) == 0x000184, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_GetDifficultyByType_Difficulty' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000185, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_GetGameInstance_ReturnValue) == 0x000188, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, K2Node_DynamicCast_AsGI_Single_Player) == 0x000190, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, K2Node_DynamicCast_bSuccess_1) == 0x000198, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000199, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, K2Node_DynamicCast_AsINTERF_HUD) == 0x0001A0, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, K2Node_DynamicCast_bSuccess_2) == 0x0001B0, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_SetGameLockedForMenus_Result) == 0x0001B1, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_SetGameLockedForMenus_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x0001B8, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, K2Node_DynamicCast_bSuccess_3) == 0x0001C8, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_SetGameLockedForMenus_Result_1) == 0x0001C9, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_SetGameLockedForMenus_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_IsStreamingLevels_Result) == 0x0001CA, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_IsStreamingLevels_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x0001CB, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001CC, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled, CallFunc_PlayAnimation_ReturnValue) == 0x0001D0, "Member 'WIDGET_MainMenu_InGame_C_TrySetMainMenuEnabled::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.InvokeNavManager
// 0x0068 (0x0068 - 0x0000)
struct WIDGET_MainMenu_InGame_C_InvokeNavManager final
{
public:
	ENUM_MenuNavigationInput                      InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InputState;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> CallFunc_ReceiveNavBack_self_CastInput;            // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavBack_Result;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> CallFunc_ReceiveNavAccept_self_CastInput;          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavAccept_Result;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> CallFunc_ReceiveNavDown_self_CastInput;            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavDown_Result;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> CallFunc_ReceiveNavUp_self_CastInput;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavUp_Result;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_InvokeNavManager) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_InvokeNavManager");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_InvokeNavManager) == 0x000068, "Wrong size on WIDGET_MainMenu_InGame_C_InvokeNavManager");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, InputType) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::InputType' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, InputState) == 0x000001, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::InputState' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_ReceiveNavBack_self_CastInput) == 0x000008, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_ReceiveNavBack_self_CastInput' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_ReceiveNavBack_Result) == 0x000018, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_ReceiveNavBack_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_ReceiveNavAccept_self_CastInput) == 0x000020, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_ReceiveNavAccept_self_CastInput' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_ReceiveNavAccept_Result) == 0x000030, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_ReceiveNavAccept_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000031, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_ReceiveNavDown_self_CastInput) == 0x000038, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_ReceiveNavDown_self_CastInput' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_ReceiveNavDown_Result) == 0x000048, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_ReceiveNavDown_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_ReceiveNavUp_self_CastInput) == 0x000050, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_ReceiveNavUp_self_CastInput' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_ReceiveNavUp_Result) == 0x000060, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_ReceiveNavUp_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000061, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, K2Node_SwitchEnum_CmpSuccess) == 0x000062, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x000063, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, K2Node_SwitchEnum_CmpSuccess_2) == 0x000064, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, K2Node_SwitchEnum_CmpSuccess_3) == 0x000065, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_InvokeNavManager, K2Node_SwitchEnum_CmpSuccess_4) == 0x000066, "Member 'WIDGET_MainMenu_InGame_C_InvokeNavManager::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.SetMenuDim
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_MainMenu_InGame_C_SetMenuDim final
{
public:
	bool                                          IsDimmed;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_SetMenuDim) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_SetMenuDim");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_SetMenuDim) == 0x000018, "Wrong size on WIDGET_MainMenu_InGame_C_SetMenuDim");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_SetMenuDim, IsDimmed) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_SetMenuDim::IsDimmed' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_SetMenuDim, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WIDGET_MainMenu_InGame_C_SetMenuDim::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_SetMenuDim, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'WIDGET_MainMenu_InGame_C_SetMenuDim::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WIDGET_MainMenu_InGame.WIDGET_MainMenu_InGame_C.RefreshLoadGameState
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_MainMenu_InGame_C_RefreshLoadGameState final
{
public:
	bool                                          HasSaveFiles;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetExistingSaveGameNames_ReturnValue;     // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MainMenu_InGame_C_RefreshLoadGameState) == 0x000008, "Wrong alignment on WIDGET_MainMenu_InGame_C_RefreshLoadGameState");
static_assert(sizeof(WIDGET_MainMenu_InGame_C_RefreshLoadGameState) == 0x000038, "Wrong size on WIDGET_MainMenu_InGame_C_RefreshLoadGameState");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_RefreshLoadGameState, HasSaveFiles) == 0x000000, "Member 'WIDGET_MainMenu_InGame_C_RefreshLoadGameState::HasSaveFiles' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_RefreshLoadGameState, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'WIDGET_MainMenu_InGame_C_RefreshLoadGameState::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_RefreshLoadGameState, K2Node_DynamicCast_AsCON_Hacker) == 0x000010, "Member 'WIDGET_MainMenu_InGame_C_RefreshLoadGameState::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_RefreshLoadGameState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_MainMenu_InGame_C_RefreshLoadGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_RefreshLoadGameState, CallFunc_IsUsingGamepad_Result) == 0x000019, "Member 'WIDGET_MainMenu_InGame_C_RefreshLoadGameState::CallFunc_IsUsingGamepad_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_RefreshLoadGameState, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00001A, "Member 'WIDGET_MainMenu_InGame_C_RefreshLoadGameState::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_RefreshLoadGameState, CallFunc_GetIsEnabled_ReturnValue) == 0x00001B, "Member 'WIDGET_MainMenu_InGame_C_RefreshLoadGameState::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_RefreshLoadGameState, CallFunc_GetExistingSaveGameNames_ReturnValue) == 0x000020, "Member 'WIDGET_MainMenu_InGame_C_RefreshLoadGameState::CallFunc_GetExistingSaveGameNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_RefreshLoadGameState, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WIDGET_MainMenu_InGame_C_RefreshLoadGameState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MainMenu_InGame_C_RefreshLoadGameState, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'WIDGET_MainMenu_InGame_C_RefreshLoadGameState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}


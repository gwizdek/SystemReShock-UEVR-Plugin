#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEAPON_GrenadeManager

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WEAPON_GrenadeManager.WEAPON_GrenadeManager_C.ThrowExplosive
// 0x0004 (0x0004 - 0x0000)
struct WEAPON_GrenadeManager_C_ThrowExplosive final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_GrenadeManager_C_ThrowExplosive) == 0x000004, "Wrong alignment on WEAPON_GrenadeManager_C_ThrowExplosive");
static_assert(sizeof(WEAPON_GrenadeManager_C_ThrowExplosive) == 0x000004, "Wrong size on WEAPON_GrenadeManager_C_ThrowExplosive");
static_assert(offsetof(WEAPON_GrenadeManager_C_ThrowExplosive, Speed) == 0x000000, "Member 'WEAPON_GrenadeManager_C_ThrowExplosive::Speed' has a wrong offset!");

// Function WEAPON_GrenadeManager.WEAPON_GrenadeManager_C.TryDisarmExplosive
// 0x0002 (0x0002 - 0x0000)
struct WEAPON_GrenadeManager_C_TryDisarmExplosive final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryDisarmExplosive_Success;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_GrenadeManager_C_TryDisarmExplosive) == 0x000001, "Wrong alignment on WEAPON_GrenadeManager_C_TryDisarmExplosive");
static_assert(sizeof(WEAPON_GrenadeManager_C_TryDisarmExplosive) == 0x000002, "Wrong size on WEAPON_GrenadeManager_C_TryDisarmExplosive");
static_assert(offsetof(WEAPON_GrenadeManager_C_TryDisarmExplosive, Success) == 0x000000, "Member 'WEAPON_GrenadeManager_C_TryDisarmExplosive::Success' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_TryDisarmExplosive, CallFunc_TryDisarmExplosive_Success) == 0x000001, "Member 'WEAPON_GrenadeManager_C_TryDisarmExplosive::CallFunc_TryDisarmExplosive_Success' has a wrong offset!");

// Function WEAPON_GrenadeManager.WEAPON_GrenadeManager_C.TryStartFuseTimer
// 0x0038 (0x0038 - 0x0000)
struct WEAPON_GrenadeManager_C_TryStartFuseTimer final
{
public:
	class UITEM_ExplosiveBase_C*                  CallFunc_GetArmedExplosiveItem_Result;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsGrenade_Projectile_Base; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_GrenadeManager_C_TryStartFuseTimer) == 0x000008, "Wrong alignment on WEAPON_GrenadeManager_C_TryStartFuseTimer");
static_assert(sizeof(WEAPON_GrenadeManager_C_TryStartFuseTimer) == 0x000038, "Wrong size on WEAPON_GrenadeManager_C_TryStartFuseTimer");
static_assert(offsetof(WEAPON_GrenadeManager_C_TryStartFuseTimer, CallFunc_GetArmedExplosiveItem_Result) == 0x000000, "Member 'WEAPON_GrenadeManager_C_TryStartFuseTimer::CallFunc_GetArmedExplosiveItem_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_TryStartFuseTimer, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000008, "Member 'WEAPON_GrenadeManager_C_TryStartFuseTimer::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_TryStartFuseTimer, K2Node_ClassDynamicCast_AsGrenade_Projectile_Base) == 0x000010, "Member 'WEAPON_GrenadeManager_C_TryStartFuseTimer::K2Node_ClassDynamicCast_AsGrenade_Projectile_Base' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_TryStartFuseTimer, K2Node_ClassDynamicCast_bSuccess) == 0x000018, "Member 'WEAPON_GrenadeManager_C_TryStartFuseTimer::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_TryStartFuseTimer, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WEAPON_GrenadeManager_C_TryStartFuseTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_TryStartFuseTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'WEAPON_GrenadeManager_C_TryStartFuseTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WEAPON_GrenadeManager.WEAPON_GrenadeManager_C.LaunchExplosiveFromCamera
// 0x0030 (0x0030 - 0x0000)
struct WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera final
{
public:
	class UCameraComponent*                       CameraComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosiveProjectile_Base_C*            ExplosiveProjectile;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ExplosiveBase_C*                  RemovedExplosiveItem;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContactDamageFromSpeed_ContactDamage;  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGrenadeProjectile_Base_C*              K2Node_DynamicCast_AsGrenade_Projectile_Base;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetArmTimestamp_Timestamp;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera) == 0x000008, "Wrong alignment on WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera");
static_assert(sizeof(WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera) == 0x000030, "Wrong size on WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera");
static_assert(offsetof(WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera, CameraComponent) == 0x000000, "Member 'WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera::CameraComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera, ExplosiveProjectile) == 0x000008, "Member 'WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera::ExplosiveProjectile' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera, RemovedExplosiveItem) == 0x000010, "Member 'WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera::RemovedExplosiveItem' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera, Speed) == 0x000018, "Member 'WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera::Speed' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera, CallFunc_GetContactDamageFromSpeed_ContactDamage) == 0x00001C, "Member 'WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera::CallFunc_GetContactDamageFromSpeed_ContactDamage' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera, K2Node_DynamicCast_AsGrenade_Projectile_Base) == 0x000020, "Member 'WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera::K2Node_DynamicCast_AsGrenade_Projectile_Base' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera, CallFunc_GetArmTimestamp_Timestamp) == 0x00002C, "Member 'WEAPON_GrenadeManager_C_LaunchExplosiveFromCamera::CallFunc_GetArmTimestamp_Timestamp' has a wrong offset!");

// Function WEAPON_GrenadeManager.WEAPON_GrenadeManager_C.EVENT_OnFuseBeepTick
// 0x0060 (0x0060 - 0x0000)
struct WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick final
{
public:
	class UClass*                                 ProjectileClass;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ExplosiveBase_C*                  CallFunc_GetArmedExplosiveItem_Result;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsGrenade_Projectile_Base; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetElapsedTimeSinceExplosiveArmed_Result; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick) == 0x000008, "Wrong alignment on WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick");
static_assert(sizeof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick) == 0x000060, "Wrong size on WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick");
static_assert(offsetof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick, ProjectileClass) == 0x000000, "Member 'WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick::ProjectileClass' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick, CallFunc_GetArmedExplosiveItem_Result) == 0x000008, "Member 'WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick::CallFunc_GetArmedExplosiveItem_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000010, "Member 'WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick, K2Node_ClassDynamicCast_AsGrenade_Projectile_Base) == 0x000018, "Member 'WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick::K2Node_ClassDynamicCast_AsGrenade_Projectile_Base' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick, K2Node_ClassDynamicCast_bSuccess) == 0x000020, "Member 'WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick, CallFunc_GetElapsedTimeSinceExplosiveArmed_Result) == 0x000024, "Member 'WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick::CallFunc_GetElapsedTimeSinceExplosiveArmed_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick, CallFunc_GetWeaponMeshComponent_Result) == 0x000030, "Member 'WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000040, "Member 'WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'WEAPON_GrenadeManager_C_EVENT_OnFuseBeepTick::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_GroveTram

#include "Basic.hpp"

#include "ELEVATOR_Base_classes.hpp"
#include "ENUM_InnerOuter_structs.hpp"
#include "ENUM_DoorState_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_GroveTram.INTERACT_GroveTram_C
// 0x00A0 (0x0740 - 0x06A0)
class AINTERACT_GroveTram_C final : public AELEVATOR_Base_C
{
public:
	class UAudioComponent*                        GroveTramAmbSweetener3;                            // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        GroveTramAmbSweetener1;                            // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        GroveTramAmbSweetener;                             // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        GroveTramAmb;                                      // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_DoorBotR2;                                    // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_DoorBotR1;                                    // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_DoorBotL2;                                    // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_DoorBotL1;                                    // 0x06D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_DoorTopR2;                                    // 0x06E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_DoorTopR1;                                    // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_ControlTop;                                   // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_DoorTopL2;                                    // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_ControlL1;                                    // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_ControlR2;                                    // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_ControlL2;                                    // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_ControlR1;                                    // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_Main;                                         // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    Spot_DoorTopL1;                                    // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ControlButton2_TargetBox;                          // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ControlButton1_TargetBox;                          // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateEmissiveStrength(float Scale);
	void GetMoveDirectionVector(class FName TargetLevel_0, struct FVector* Direction);
	void TryOpenElevatorDoors(bool Force, bool* Result);
	void SetDoorState(ENUM_InnerOuter Target, ENUM_DoorState NewState);
	void GetControlsMeshComponent(class UStaticMeshComponent** MeshComponent);
	void GetGroveLevelIndexByDeckSymbol(const class FString& DeckSymbol, int32* Result);
	void InitializeElevatorControls();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_GroveTram_C">();
	}
	static class AINTERACT_GroveTram_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_GroveTram_C>();
	}
};
static_assert(alignof(AINTERACT_GroveTram_C) == 0x000008, "Wrong alignment on AINTERACT_GroveTram_C");
static_assert(sizeof(AINTERACT_GroveTram_C) == 0x000740, "Wrong size on AINTERACT_GroveTram_C");
static_assert(offsetof(AINTERACT_GroveTram_C, GroveTramAmbSweetener3) == 0x0006A0, "Member 'AINTERACT_GroveTram_C::GroveTramAmbSweetener3' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, GroveTramAmbSweetener1) == 0x0006A8, "Member 'AINTERACT_GroveTram_C::GroveTramAmbSweetener1' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, GroveTramAmbSweetener) == 0x0006B0, "Member 'AINTERACT_GroveTram_C::GroveTramAmbSweetener' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, GroveTramAmb) == 0x0006B8, "Member 'AINTERACT_GroveTram_C::GroveTramAmb' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_DoorBotR2) == 0x0006C0, "Member 'AINTERACT_GroveTram_C::Spot_DoorBotR2' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_DoorBotR1) == 0x0006C8, "Member 'AINTERACT_GroveTram_C::Spot_DoorBotR1' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_DoorBotL2) == 0x0006D0, "Member 'AINTERACT_GroveTram_C::Spot_DoorBotL2' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_DoorBotL1) == 0x0006D8, "Member 'AINTERACT_GroveTram_C::Spot_DoorBotL1' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_DoorTopR2) == 0x0006E0, "Member 'AINTERACT_GroveTram_C::Spot_DoorTopR2' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_DoorTopR1) == 0x0006E8, "Member 'AINTERACT_GroveTram_C::Spot_DoorTopR1' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_ControlTop) == 0x0006F0, "Member 'AINTERACT_GroveTram_C::Spot_ControlTop' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_DoorTopL2) == 0x0006F8, "Member 'AINTERACT_GroveTram_C::Spot_DoorTopL2' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_ControlL1) == 0x000700, "Member 'AINTERACT_GroveTram_C::Spot_ControlL1' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_ControlR2) == 0x000708, "Member 'AINTERACT_GroveTram_C::Spot_ControlR2' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_ControlL2) == 0x000710, "Member 'AINTERACT_GroveTram_C::Spot_ControlL2' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_ControlR1) == 0x000718, "Member 'AINTERACT_GroveTram_C::Spot_ControlR1' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_Main) == 0x000720, "Member 'AINTERACT_GroveTram_C::Spot_Main' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, Spot_DoorTopL1) == 0x000728, "Member 'AINTERACT_GroveTram_C::Spot_DoorTopL1' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, ControlButton2_TargetBox) == 0x000730, "Member 'AINTERACT_GroveTram_C::ControlButton2_TargetBox' has a wrong offset!");
static_assert(offsetof(AINTERACT_GroveTram_C, ControlButton1_TargetBox) == 0x000738, "Member 'AINTERACT_GroveTram_C::ControlButton1_TargetBox' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Crate_Base

#include "Basic.hpp"

#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "NamedInteger_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_EffectParams_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.ExecuteUbergraph_INTERACT_Crate_Base
// 0x0108 (0x0108 - 0x0000)
struct INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ReferenceParm)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0028(0x0030)(HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               K2Node_CustomEvent_SoundCue_1;                     // 0x0060(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               K2Node_CustomEvent_SoundCue;                       // 0x0088(0x0028)(HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base) == 0x000008, "Wrong alignment on INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base");
static_assert(sizeof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base) == 0x000108, "Wrong size on INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, EntryPoint) == 0x000000, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, K2Node_MakeArray_Array) == 0x000008, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, K2Node_MakeArray_Array_1) == 0x000018, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000028, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, K2Node_Event_DeltaSeconds) == 0x000058, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, K2Node_ComponentBoundEvent_bVisibleState) == 0x00005C, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00005D, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, K2Node_CustomEvent_SoundCue_1) == 0x000060, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::K2Node_CustomEvent_SoundCue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, K2Node_CustomEvent_SoundCue) == 0x000088, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::K2Node_CustomEvent_SoundCue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x0000B0, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, CallFunc_Len_ReturnValue) == 0x0000C0, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C4, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D0, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, CallFunc_GetGameInstance_ReturnValue) == 0x0000D8, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000E0, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, CallFunc_GetGameInstance_ReturnValue_1) == 0x0000F0, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x0000F8, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'INTERACT_Crate_Base_C_ExecuteUbergraph_INTERACT_Crate_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.PlaySoundAttachedToLid
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_Crate_Base_C_PlaySoundAttachedToLid final
{
public:
	TSoftObjectPtr<class USoundCue>               SoundCue;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Crate_Base_C_PlaySoundAttachedToLid) == 0x000008, "Wrong alignment on INTERACT_Crate_Base_C_PlaySoundAttachedToLid");
static_assert(sizeof(INTERACT_Crate_Base_C_PlaySoundAttachedToLid) == 0x000028, "Wrong size on INTERACT_Crate_Base_C_PlaySoundAttachedToLid");
static_assert(offsetof(INTERACT_Crate_Base_C_PlaySoundAttachedToLid, SoundCue) == 0x000000, "Member 'INTERACT_Crate_Base_C_PlaySoundAttachedToLid::SoundCue' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.PlaySoundAtLidLocation
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_Crate_Base_C_PlaySoundAtLidLocation final
{
public:
	TSoftObjectPtr<class USoundCue>               SoundCue;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Crate_Base_C_PlaySoundAtLidLocation) == 0x000008, "Wrong alignment on INTERACT_Crate_Base_C_PlaySoundAtLidLocation");
static_assert(sizeof(INTERACT_Crate_Base_C_PlaySoundAtLidLocation) == 0x000028, "Wrong size on INTERACT_Crate_Base_C_PlaySoundAtLidLocation");
static_assert(offsetof(INTERACT_Crate_Base_C_PlaySoundAtLidLocation, SoundCue) == 0x000000, "Member 'INTERACT_Crate_Base_C_PlaySoundAtLidLocation::SoundCue' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Crate_Base_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Crate_Base_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_Crate_Base_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_Crate_Base_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_Crate_Base_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_Crate_Base_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_Crate_Base_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_Crate_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Crate_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on INTERACT_Crate_Base_C_ReceiveTick");
static_assert(sizeof(INTERACT_Crate_Base_C_ReceiveTick) == 0x000004, "Wrong size on INTERACT_Crate_Base_C_ReceiveTick");
static_assert(offsetof(INTERACT_Crate_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'INTERACT_Crate_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.GetTargetShape
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Crate_Base_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Crate_Base_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_Crate_Base_C_GetTargetShape");
static_assert(sizeof(INTERACT_Crate_Base_C_GetTargetShape) == 0x000010, "Wrong size on INTERACT_Crate_Base_C_GetTargetShape");
static_assert(offsetof(INTERACT_Crate_Base_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_Crate_Base_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_Crate_Base_C_GetTargetShape::ShapeComponent' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.TryInteract
// 0x0138 (0x0138 - 0x0000)
struct INTERACT_Crate_Base_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0038(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0058(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x0078(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x00A0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x00E0(0x0020)(HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x010C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0130(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Crate_Base_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_Crate_Base_C_TryInteract");
static_assert(sizeof(INTERACT_Crate_Base_C_TryInteract) == 0x000138, "Wrong size on INTERACT_Crate_Base_C_TryInteract");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_Crate_Base_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_Crate_Base_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_Crate_Base_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_Crate_Base_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000038, "Member 'INTERACT_Crate_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000058, "Member 'INTERACT_Crate_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x000078, "Member 'INTERACT_Crate_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'INTERACT_Crate_Base_C_TryInteract::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x0000A0, "Member 'INTERACT_Crate_Base_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'INTERACT_Crate_Base_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0000C8, "Member 'INTERACT_Crate_Base_C_TryInteract::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, K2Node_DynamicCast_AsAnim_Montage) == 0x0000D0, "Member 'INTERACT_Crate_Base_C_TryInteract::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'INTERACT_Crate_Base_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x0000E0, "Member 'INTERACT_Crate_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, CallFunc_GetAnimInstance_ReturnValue) == 0x000100, "Member 'INTERACT_Crate_Base_C_TryInteract::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000108, "Member 'INTERACT_Crate_Base_C_TryInteract::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, K2Node_CreateDelegate_OutputDelegate) == 0x00010C, "Member 'INTERACT_Crate_Base_C_TryInteract::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x00011C, "Member 'INTERACT_Crate_Base_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000120, "Member 'INTERACT_Crate_Base_C_TryInteract::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, CallFunc_Montage_Play_ReturnValue) == 0x000128, "Member 'INTERACT_Crate_Base_C_TryInteract::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_TryInteract, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000130, "Member 'INTERACT_Crate_Base_C_TryInteract::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.InitializeCrate
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Crate_Base_C_InitializeCrate final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Crate_Base_C_InitializeCrate) == 0x000001, "Wrong alignment on INTERACT_Crate_Base_C_InitializeCrate");
static_assert(sizeof(INTERACT_Crate_Base_C_InitializeCrate) == 0x000001, "Wrong size on INTERACT_Crate_Base_C_InitializeCrate");
static_assert(offsetof(INTERACT_Crate_Base_C_InitializeCrate, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'INTERACT_Crate_Base_C_InitializeCrate::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.UpdateAngleToPlayer
// 0x0078 (0x0078 - 0x0000)
struct INTERACT_Crate_Base_C_UpdateAngleToPlayer final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Anim_Crate_C>  K2Node_DynamicCast_AsINTERF_Anim_Crate;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotationTowardsXY_ReturnValue;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAxis_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetAngle_Result;                          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Crate_Base_C_UpdateAngleToPlayer) == 0x000008, "Wrong alignment on INTERACT_Crate_Base_C_UpdateAngleToPlayer");
static_assert(sizeof(INTERACT_Crate_Base_C_UpdateAngleToPlayer) == 0x000078, "Wrong size on INTERACT_Crate_Base_C_UpdateAngleToPlayer");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, K2Node_DynamicCast_AsINTERF_Anim_Crate) == 0x000018, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::K2Node_DynamicCast_AsINTERF_Anim_Crate' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000030, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000044, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, CallFunc_GetActorForwardVector_ReturnValue) == 0x000050, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00005C, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, CallFunc_GetRotationTowardsXY_ReturnValue) == 0x000068, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::CallFunc_GetRotationTowardsXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00006C, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, CallFunc_ClampAxis_ReturnValue) == 0x000070, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::CallFunc_ClampAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateAngleToPlayer, CallFunc_SetAngle_Result) == 0x000074, "Member 'INTERACT_Crate_Base_C_UpdateAngleToPlayer::CallFunc_SetAngle_Result' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.UpdateLidTransition
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Crate_Base_C_UpdateLidTransition final
{
public:
	float                                         Phase;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentLidProgress_Result;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Anim_Crate_C>  K2Node_DynamicCast_AsINTERF_Anim_Crate;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetPhase_Result;                          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Crate_Base_C_UpdateLidTransition) == 0x000008, "Wrong alignment on INTERACT_Crate_Base_C_UpdateLidTransition");
static_assert(sizeof(INTERACT_Crate_Base_C_UpdateLidTransition) == 0x000038, "Wrong size on INTERACT_Crate_Base_C_UpdateLidTransition");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateLidTransition, Phase) == 0x000000, "Member 'INTERACT_Crate_Base_C_UpdateLidTransition::Phase' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateLidTransition, Progress) == 0x000004, "Member 'INTERACT_Crate_Base_C_UpdateLidTransition::Progress' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateLidTransition, CallFunc_GetCurrentLidProgress_Result) == 0x000008, "Member 'INTERACT_Crate_Base_C_UpdateLidTransition::CallFunc_GetCurrentLidProgress_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateLidTransition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Crate_Base_C_UpdateLidTransition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateLidTransition, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_Crate_Base_C_UpdateLidTransition::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateLidTransition, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'INTERACT_Crate_Base_C_UpdateLidTransition::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateLidTransition, K2Node_DynamicCast_AsINTERF_Anim_Crate) == 0x000020, "Member 'INTERACT_Crate_Base_C_UpdateLidTransition::K2Node_DynamicCast_AsINTERF_Anim_Crate' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateLidTransition, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_Crate_Base_C_UpdateLidTransition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateLidTransition, CallFunc_SetPhase_Result) == 0x000031, "Member 'INTERACT_Crate_Base_C_UpdateLidTransition::CallFunc_SetPhase_Result' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.StopChanneling
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_Crate_Base_C_StopChanneling final
{
public:
	class AActor*                                 NewChannelingInteract;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Crate_Base_C_StopChanneling) == 0x000008, "Wrong alignment on INTERACT_Crate_Base_C_StopChanneling");
static_assert(sizeof(INTERACT_Crate_Base_C_StopChanneling) == 0x000020, "Wrong size on INTERACT_Crate_Base_C_StopChanneling");
static_assert(offsetof(INTERACT_Crate_Base_C_StopChanneling, NewChannelingInteract) == 0x000000, "Member 'INTERACT_Crate_Base_C_StopChanneling::NewChannelingInteract' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_StopChanneling, Result) == 0x000008, "Member 'INTERACT_Crate_Base_C_StopChanneling::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_StopChanneling, CallFunc_StopChanneling_Result) == 0x000009, "Member 'INTERACT_Crate_Base_C_StopChanneling::CallFunc_StopChanneling_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_StopChanneling, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'INTERACT_Crate_Base_C_StopChanneling::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_StopChanneling, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000018, "Member 'INTERACT_Crate_Base_C_StopChanneling::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.BeginClosingLid
// 0x001C (0x001C - 0x0000)
struct INTERACT_Crate_Base_C_BeginClosingLid final
{
public:
	float                                         CallFunc_GetCurrentLidProgress_Result;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Crate_Base_C_BeginClosingLid) == 0x000004, "Wrong alignment on INTERACT_Crate_Base_C_BeginClosingLid");
static_assert(sizeof(INTERACT_Crate_Base_C_BeginClosingLid) == 0x00001C, "Wrong size on INTERACT_Crate_Base_C_BeginClosingLid");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginClosingLid, CallFunc_GetCurrentLidProgress_Result) == 0x000000, "Member 'INTERACT_Crate_Base_C_BeginClosingLid::CallFunc_GetCurrentLidProgress_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginClosingLid, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'INTERACT_Crate_Base_C_BeginClosingLid::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginClosingLid, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_Crate_Base_C_BeginClosingLid::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginClosingLid, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Crate_Base_C_BeginClosingLid::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginClosingLid, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_Crate_Base_C_BeginClosingLid::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginClosingLid, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000014, "Member 'INTERACT_Crate_Base_C_BeginClosingLid::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginClosingLid, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000018, "Member 'INTERACT_Crate_Base_C_BeginClosingLid::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.BeginLocking
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_Crate_Base_C_BeginLocking final
{
public:
	bool                                          CallFunc_TrySetLootVisibility_Result;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Crate_Base_C_BeginLocking) == 0x000008, "Wrong alignment on INTERACT_Crate_Base_C_BeginLocking");
static_assert(sizeof(INTERACT_Crate_Base_C_BeginLocking) == 0x000030, "Wrong size on INTERACT_Crate_Base_C_BeginLocking");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginLocking, CallFunc_TrySetLootVisibility_Result) == 0x000000, "Member 'INTERACT_Crate_Base_C_BeginLocking::CallFunc_TrySetLootVisibility_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginLocking, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'INTERACT_Crate_Base_C_BeginLocking::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginLocking, K2Node_DynamicCast_AsAnim_Montage) == 0x000010, "Member 'INTERACT_Crate_Base_C_BeginLocking::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginLocking, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_Crate_Base_C_BeginLocking::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginLocking, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'INTERACT_Crate_Base_C_BeginLocking::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_BeginLocking, CallFunc_Montage_Play_ReturnValue) == 0x000028, "Member 'INTERACT_Crate_Base_C_BeginLocking::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.UpdateCrateVisibility
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Crate_Base_C_UpdateCrateVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Crate_Base_C_UpdateCrateVisibility) == 0x000001, "Wrong alignment on INTERACT_Crate_Base_C_UpdateCrateVisibility");
static_assert(sizeof(INTERACT_Crate_Base_C_UpdateCrateVisibility) == 0x000001, "Wrong size on INTERACT_Crate_Base_C_UpdateCrateVisibility");
static_assert(offsetof(INTERACT_Crate_Base_C_UpdateCrateVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_Crate_Base_C_UpdateCrateVisibility::VisibilityState' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.FinishedUnlocking
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_Crate_Base_C_FinishedUnlocking final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TrySetLootVisibility_Result;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Crate_Base_C_FinishedUnlocking) == 0x000004, "Wrong alignment on INTERACT_Crate_Base_C_FinishedUnlocking");
static_assert(sizeof(INTERACT_Crate_Base_C_FinishedUnlocking) == 0x000008, "Wrong size on INTERACT_Crate_Base_C_FinishedUnlocking");
static_assert(offsetof(INTERACT_Crate_Base_C_FinishedUnlocking, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'INTERACT_Crate_Base_C_FinishedUnlocking::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_FinishedUnlocking, CallFunc_TrySetLootVisibility_Result) == 0x000004, "Member 'INTERACT_Crate_Base_C_FinishedUnlocking::CallFunc_TrySetLootVisibility_Result' has a wrong offset!");

// Function INTERACT_Crate_Base.INTERACT_Crate_Base_C.GetCurrentLidProgress
// 0x001C (0x001C - 0x0000)
struct INTERACT_Crate_Base_C_GetCurrentLidProgress final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Crate_Base_C_GetCurrentLidProgress) == 0x000004, "Wrong alignment on INTERACT_Crate_Base_C_GetCurrentLidProgress");
static_assert(sizeof(INTERACT_Crate_Base_C_GetCurrentLidProgress) == 0x00001C, "Wrong size on INTERACT_Crate_Base_C_GetCurrentLidProgress");
static_assert(offsetof(INTERACT_Crate_Base_C_GetCurrentLidProgress, Result) == 0x000000, "Member 'INTERACT_Crate_Base_C_GetCurrentLidProgress::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_GetCurrentLidProgress, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'INTERACT_Crate_Base_C_GetCurrentLidProgress::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_GetCurrentLidProgress, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'INTERACT_Crate_Base_C_GetCurrentLidProgress::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_GetCurrentLidProgress, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Crate_Base_C_GetCurrentLidProgress::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_GetCurrentLidProgress, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_Crate_Base_C_GetCurrentLidProgress::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_GetCurrentLidProgress, CallFunc_FMin_ReturnValue) == 0x000014, "Member 'INTERACT_Crate_Base_C_GetCurrentLidProgress::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Crate_Base_C_GetCurrentLidProgress, CallFunc_Ease_ReturnValue) == 0x000018, "Member 'INTERACT_Crate_Base_C_GetCurrentLidProgress::CallFunc_Ease_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_ForceBridge

#include "Basic.hpp"

#include "STRUCT_InteractResults_structs.hpp"
#include "CoreGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_EffectParams_structs.hpp"
#include "LevelVoxelization_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.ExecuteUbergraph_INTERACT_ForceBridge
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_CustomEvent_Montage;                        // 0x0030(0x0028)(HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_StartTimeOffset;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge");
static_assert(sizeof(INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge) == 0x000068, "Wrong size on INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge");
static_assert(offsetof(INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge, EntryPoint) == 0x000000, "Member 'INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge, Temp_object_Variable) == 0x000008, "Member 'INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge, K2Node_DynamicCast_AsAnim_Montage) == 0x000020, "Member 'INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge, K2Node_ComponentBoundEvent_bVisibleState) == 0x000029, "Member 'INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge, K2Node_CustomEvent_Montage) == 0x000030, "Member 'INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge, K2Node_CustomEvent_StartTimeOffset) == 0x000058, "Member 'INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge::K2Node_CustomEvent_StartTimeOffset' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge, K2Node_CustomEvent_Loaded) == 0x000060, "Member 'INTERACT_ForceBridge_C_ExecuteUbergraph_INTERACT_ForceBridge::K2Node_CustomEvent_Loaded' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.AsyncPlayTransitionMontage
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_ForceBridge_C_AsyncPlayTransitionMontage final
{
public:
	TSoftObjectPtr<class UAnimMontage>            Montage;                                           // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	float                                         StartTimeOffset;                                   // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceBridge_C_AsyncPlayTransitionMontage) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_AsyncPlayTransitionMontage");
static_assert(sizeof(INTERACT_ForceBridge_C_AsyncPlayTransitionMontage) == 0x000030, "Wrong size on INTERACT_ForceBridge_C_AsyncPlayTransitionMontage");
static_assert(offsetof(INTERACT_ForceBridge_C_AsyncPlayTransitionMontage, Montage) == 0x000000, "Member 'INTERACT_ForceBridge_C_AsyncPlayTransitionMontage::Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_AsyncPlayTransitionMontage, StartTimeOffset) == 0x000028, "Member 'INTERACT_ForceBridge_C_AsyncPlayTransitionMontage::StartTimeOffset' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ForceBridge_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_ForceBridge_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_ForceBridge_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_ForceBridge_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_ForceBridge_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.OnLoaded_AA4375064551318CF74DA5B12F09C1A1
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_ForceBridge_C_OnLoaded_AA4375064551318CF74DA5B12F09C1A1 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceBridge_C_OnLoaded_AA4375064551318CF74DA5B12F09C1A1) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_OnLoaded_AA4375064551318CF74DA5B12F09C1A1");
static_assert(sizeof(INTERACT_ForceBridge_C_OnLoaded_AA4375064551318CF74DA5B12F09C1A1) == 0x000008, "Wrong size on INTERACT_ForceBridge_C_OnLoaded_AA4375064551318CF74DA5B12F09C1A1");
static_assert(offsetof(INTERACT_ForceBridge_C_OnLoaded_AA4375064551318CF74DA5B12F09C1A1, Loaded) == 0x000000, "Member 'INTERACT_ForceBridge_C_OnLoaded_AA4375064551318CF74DA5B12F09C1A1::Loaded' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.UserConstructionScript
// 0x0158 (0x0158 - 0x0000)
struct INTERACT_ForceBridge_C_UserConstructionScript final
{
public:
	float                                         ForceBridgeHalfLength;                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(INTERACT_ForceBridge_C_UserConstructionScript) == 0x000004, "Wrong alignment on INTERACT_ForceBridge_C_UserConstructionScript");
static_assert(sizeof(INTERACT_ForceBridge_C_UserConstructionScript) == 0x000158, "Wrong size on INTERACT_ForceBridge_C_UserConstructionScript");
static_assert(offsetof(INTERACT_ForceBridge_C_UserConstructionScript, ForceBridgeHalfLength) == 0x000000, "Member 'INTERACT_ForceBridge_C_UserConstructionScript::ForceBridgeHalfLength' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'INTERACT_ForceBridge_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000010, "Member 'INTERACT_ForceBridge_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_2) == 0x00001C, "Member 'INTERACT_ForceBridge_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_3) == 0x000028, "Member 'INTERACT_ForceBridge_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UserConstructionScript, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000034, "Member 'INTERACT_ForceBridge_C_UserConstructionScript::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000038, "Member 'INTERACT_ForceBridge_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000C0, "Member 'INTERACT_ForceBridge_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_4) == 0x0000C4, "Member 'INTERACT_ForceBridge_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0000D0, "Member 'INTERACT_ForceBridge_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.InitializeForceBridge
// 0x0005 (0x0005 - 0x0000)
struct INTERACT_ForceBridge_C_InitializeForceBridge final
{
public:
	bool                                          CallFunc_IsForceBridgeActivatedAndPowered_Result;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForceBridgeActivatedAndPowered_Result_1; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_InitializeForceBridge) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_InitializeForceBridge");
static_assert(sizeof(INTERACT_ForceBridge_C_InitializeForceBridge) == 0x000005, "Wrong size on INTERACT_ForceBridge_C_InitializeForceBridge");
static_assert(offsetof(INTERACT_ForceBridge_C_InitializeForceBridge, CallFunc_IsForceBridgeActivatedAndPowered_Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_InitializeForceBridge::CallFunc_IsForceBridgeActivatedAndPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_InitializeForceBridge, CallFunc_IsForceBridgeActivatedAndPowered_Result_1) == 0x000001, "Member 'INTERACT_ForceBridge_C_InitializeForceBridge::CallFunc_IsForceBridgeActivatedAndPowered_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_InitializeForceBridge, CallFunc_IsVisible_ReturnValue) == 0x000002, "Member 'INTERACT_ForceBridge_C_InitializeForceBridge::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_InitializeForceBridge, CallFunc_IsVisible_ReturnValue_1) == 0x000003, "Member 'INTERACT_ForceBridge_C_InitializeForceBridge::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_InitializeForceBridge, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'INTERACT_ForceBridge_C_InitializeForceBridge::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_ForceBridge_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceBridge_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_ForceBridge_C_InitializeAttributes");
static_assert(sizeof(INTERACT_ForceBridge_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_ForceBridge_C_InitializeAttributes");
static_assert(offsetof(INTERACT_ForceBridge_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_ForceBridge_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_ForceBridge_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.UpdateForceBridgeCollisionState
// 0x0078 (0x0078 - 0x0000)
struct INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState final
{
public:
	TArray<class USceneComponent*>                ChildComponents;                                   // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          IsCollisionEnabled;                                // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVoxelNavModifierState                        Temp_byte_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVoxelNavModifierState                        Temp_byte_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_3;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryDetachInteract_Result;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVoxelNavModifierState                        K2Node_Select_Default;                             // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsForceBridgeEnabled_Result;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default_1;                           // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState");
static_assert(sizeof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState) == 0x000078, "Wrong size on INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, ChildComponents) == 0x000000, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::ChildComponents' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, IsCollisionEnabled) == 0x000010, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::IsCollisionEnabled' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, Temp_bool_Variable) == 0x000011, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, Temp_byte_Variable) == 0x000012, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, Temp_byte_Variable_1) == 0x000013, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, Temp_bool_Variable_1) == 0x000014, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, Temp_byte_Variable_2) == 0x00001C, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, Temp_byte_Variable_3) == 0x00001D, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, Temp_int_Array_Index_Variable) == 0x000020, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, CallFunc_Array_Get_Item) == 0x000028, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, K2Node_DynamicCast_AsINTERF_Interactable) == 0x000040, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, CallFunc_DoesImplementInterface_ReturnValue) == 0x000051, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, CallFunc_TryDetachInteract_Result) == 0x000052, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::CallFunc_TryDetachInteract_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, K2Node_Select_Default) == 0x000053, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, CallFunc_IsForceBridgeEnabled_Result) == 0x000054, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::CallFunc_IsForceBridgeEnabled_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, K2Node_Select_Default_1) == 0x000055, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, CallFunc_GetChildrenComponents_Children) == 0x000060, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeCollisionState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.UpdateForceBridgeAnimState
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_ForceBridge_C_UpdateForceBridgeAnimState final
{
public:
	bool                                          IsActiveAndPowered;                                // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForceBridgeActivatedAndPowered_Result;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_ForceBridge_C*                  K2Node_DynamicCast_AsAnim_BP_Force_Bridge;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_ForceBridge_C*                  K2Node_DynamicCast_AsAnim_BP_Force_Bridge_1;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_UpdateForceBridgeAnimState) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_UpdateForceBridgeAnimState");
static_assert(sizeof(INTERACT_ForceBridge_C_UpdateForceBridgeAnimState) == 0x000038, "Wrong size on INTERACT_ForceBridge_C_UpdateForceBridgeAnimState");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeAnimState, IsActiveAndPowered) == 0x000000, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeAnimState::IsActiveAndPowered' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeAnimState, CallFunc_IsForceBridgeActivatedAndPowered_Result) == 0x000001, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeAnimState::CallFunc_IsForceBridgeActivatedAndPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeAnimState, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeAnimState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeAnimState, K2Node_DynamicCast_AsAnim_BP_Force_Bridge) == 0x000010, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeAnimState::K2Node_DynamicCast_AsAnim_BP_Force_Bridge' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeAnimState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeAnimState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeAnimState, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000020, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeAnimState::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeAnimState, K2Node_DynamicCast_AsAnim_BP_Force_Bridge_1) == 0x000028, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeAnimState::K2Node_DynamicCast_AsAnim_BP_Force_Bridge_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeAnimState, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeAnimState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.IsForceBridgeActivated
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ForceBridge_C_IsForceBridgeActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_IsForceBridgeActivated) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_IsForceBridgeActivated");
static_assert(sizeof(INTERACT_ForceBridge_C_IsForceBridgeActivated) == 0x000001, "Wrong size on INTERACT_ForceBridge_C_IsForceBridgeActivated");
static_assert(offsetof(INTERACT_ForceBridge_C_IsForceBridgeActivated, Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_IsForceBridgeActivated::Result' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.IsForceBridgePoweredOn
// 0x000C (0x000C - 0x0000)
struct INTERACT_ForceBridge_C_IsForceBridgePoweredOn final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_IsForceBridgePoweredOn) == 0x000004, "Wrong alignment on INTERACT_ForceBridge_C_IsForceBridgePoweredOn");
static_assert(sizeof(INTERACT_ForceBridge_C_IsForceBridgePoweredOn) == 0x00000C, "Wrong size on INTERACT_ForceBridge_C_IsForceBridgePoweredOn");
static_assert(offsetof(INTERACT_ForceBridge_C_IsForceBridgePoweredOn, Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_IsForceBridgePoweredOn::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_IsForceBridgePoweredOn, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_ForceBridge_C_IsForceBridgePoweredOn::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_IsForceBridgePoweredOn, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_ForceBridge_C_IsForceBridgePoweredOn::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.IsForceBridgeActivatedAndPowered
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_ForceBridge_C_IsForceBridgeActivatedAndPowered final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForceBridgePoweredOn_Result;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_IsForceBridgeActivatedAndPowered) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_IsForceBridgeActivatedAndPowered");
static_assert(sizeof(INTERACT_ForceBridge_C_IsForceBridgeActivatedAndPowered) == 0x000002, "Wrong size on INTERACT_ForceBridge_C_IsForceBridgeActivatedAndPowered");
static_assert(offsetof(INTERACT_ForceBridge_C_IsForceBridgeActivatedAndPowered, Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_IsForceBridgeActivatedAndPowered::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_IsForceBridgeActivatedAndPowered, CallFunc_IsForceBridgePoweredOn_Result) == 0x000001, "Member 'INTERACT_ForceBridge_C_IsForceBridgeActivatedAndPowered::CallFunc_IsForceBridgePoweredOn_Result' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.IsForceBridgeEnabled
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_ForceBridge_C_IsForceBridgeEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForceBridgeActivatedAndPowered_Result;  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMalfunctionEnableState_Result;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_IsForceBridgeEnabled) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_IsForceBridgeEnabled");
static_assert(sizeof(INTERACT_ForceBridge_C_IsForceBridgeEnabled) == 0x000003, "Wrong size on INTERACT_ForceBridge_C_IsForceBridgeEnabled");
static_assert(offsetof(INTERACT_ForceBridge_C_IsForceBridgeEnabled, Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_IsForceBridgeEnabled::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_IsForceBridgeEnabled, CallFunc_IsForceBridgeActivatedAndPowered_Result) == 0x000001, "Member 'INTERACT_ForceBridge_C_IsForceBridgeEnabled::CallFunc_IsForceBridgeActivatedAndPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_IsForceBridgeEnabled, CallFunc_GetMalfunctionEnableState_Result) == 0x000002, "Member 'INTERACT_ForceBridge_C_IsForceBridgeEnabled::CallFunc_GetMalfunctionEnableState_Result' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.HasFinishedForceBridgeTransition
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_ForceBridge_C_HasFinishedForceBridgeTransition final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_HasFinishedForceBridgeTransition) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_HasFinishedForceBridgeTransition");
static_assert(sizeof(INTERACT_ForceBridge_C_HasFinishedForceBridgeTransition) == 0x000002, "Wrong size on INTERACT_ForceBridge_C_HasFinishedForceBridgeTransition");
static_assert(offsetof(INTERACT_ForceBridge_C_HasFinishedForceBridgeTransition, Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_HasFinishedForceBridgeTransition::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_HasFinishedForceBridgeTransition, CallFunc_Less_FloatFloat_ReturnValue) == 0x000001, "Member 'INTERACT_ForceBridge_C_HasFinishedForceBridgeTransition::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.TryResumeForceBridgeTransition
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_ForceBridge_C_TryResumeForceBridgeTransition final
{
public:
	class UAnimMontage*                           TransitionMontage;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         ElapsedTransitionTime;                             // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForceBridgeActivatedAndPowered_Result;  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0020(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_TryResumeForceBridgeTransition");
static_assert(sizeof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition) == 0x000068, "Wrong size on INTERACT_ForceBridge_C_TryResumeForceBridgeTransition");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, TransitionMontage) == 0x000000, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::TransitionMontage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, ElapsedTransitionTime) == 0x000008, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::ElapsedTransitionTime' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, Temp_bool_Variable) == 0x00000C, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, CallFunc_IsForceBridgeActivatedAndPowered_Result) == 0x00000D, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::CallFunc_IsForceBridgeActivatedAndPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000010, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, CallFunc_GetPlayLength_ReturnValue) == 0x000018, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, K2Node_Select_Default) == 0x000020, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000050, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, K2Node_DynamicCast_AsAnim_Montage) == 0x000058, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryResumeForceBridgeTransition, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'INTERACT_ForceBridge_C_TryResumeForceBridgeTransition::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.StartForceBridgeTransition
// 0x0100 (0x0100 - 0x0000)
struct INTERACT_ForceBridge_C_StartForceBridgeTransition final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               TransitionCue;                                     // 0x0008(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            TransitionMontage;                                 // 0x0030(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               K2Node_Select_Default;                             // 0x0098(0x0028)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default_1;                           // 0x00D0(0x0028)(HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceBridge_C_StartForceBridgeTransition) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_StartForceBridgeTransition");
static_assert(sizeof(INTERACT_ForceBridge_C_StartForceBridgeTransition) == 0x000100, "Wrong size on INTERACT_ForceBridge_C_StartForceBridgeTransition");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, State) == 0x000000, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::State' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, TransitionCue) == 0x000008, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::TransitionCue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, TransitionMontage) == 0x000030, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::TransitionMontage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, CallFunc_GetGameInstance_ReturnValue) == 0x000058, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, Temp_bool_Variable) == 0x000060, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, K2Node_DynamicCast_AsGI_Single_Player) == 0x000068, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, Temp_bool_Variable_1) == 0x000071, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, CallFunc_GetGameInstance_ReturnValue_1) == 0x000078, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000080, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00008C, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, K2Node_Select_Default) == 0x000098, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000C0, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, K2Node_Select_Default_1) == 0x0000D0, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_StartForceBridgeTransition, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x0000F8, "Member 'INTERACT_ForceBridge_C_StartForceBridgeTransition::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.PlayForceBridgeTransitionMontage
// 0x00A0 (0x00A0 - 0x0000)
struct INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimeOffset;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActiveAndPowered;                                // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForceBridgeActivatedAndPowered_Result;  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_ForceBridge_C*                  K2Node_DynamicCast_AsAnim_BP_Force_Bridge;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_ForceBridge_C*                  K2Node_DynamicCast_AsAnim_BP_Force_Bridge_1;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_ForceBridge_C*                  K2Node_DynamicCast_AsAnim_BP_Force_Bridge_2;       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_ForceBridge_C*                  K2Node_DynamicCast_AsAnim_BP_Force_Bridge_3;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_4;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_5;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage");
static_assert(sizeof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage) == 0x0000A0, "Wrong size on INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, Montage) == 0x000000, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, StartTimeOffset) == 0x000008, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::StartTimeOffset' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, IsActiveAndPowered) == 0x00000C, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::IsActiveAndPowered' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, CallFunc_IsForceBridgeActivatedAndPowered_Result) == 0x00000D, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::CallFunc_IsForceBridgeActivatedAndPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, K2Node_DynamicCast_AsAnim_BP_Force_Bridge) == 0x000018, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::K2Node_DynamicCast_AsAnim_BP_Force_Bridge' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000028, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, K2Node_DynamicCast_AsAnim_BP_Force_Bridge_1) == 0x000030, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::K2Node_DynamicCast_AsAnim_BP_Force_Bridge_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000039, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000040, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, K2Node_DynamicCast_AsAnim_BP_Force_Bridge_2) == 0x000048, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::K2Node_DynamicCast_AsAnim_BP_Force_Bridge_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, CallFunc_GetAnimInstance_ReturnValue_3) == 0x000058, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, K2Node_DynamicCast_AsAnim_BP_Force_Bridge_3) == 0x000060, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::K2Node_DynamicCast_AsAnim_BP_Force_Bridge_3' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, CallFunc_GetAnimInstance_ReturnValue_4) == 0x000080, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::CallFunc_GetAnimInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, CallFunc_GetAnimInstance_ReturnValue_5) == 0x000088, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::CallFunc_GetAnimInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, CallFunc_Montage_Play_ReturnValue) == 0x000090, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, CallFunc_Montage_Play_ReturnValue_1) == 0x000094, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000098, "Member 'INTERACT_ForceBridge_C_PlayForceBridgeTransitionMontage::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.SetForceBridgeVisibility
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_ForceBridge_C_SetForceBridgeVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              CallFunc_GetChildComponentsByClass_ReturnValue;    // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_SetForceBridgeVisibility) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_SetForceBridgeVisibility");
static_assert(sizeof(INTERACT_ForceBridge_C_SetForceBridgeVisibility) == 0x000038, "Wrong size on INTERACT_ForceBridge_C_SetForceBridgeVisibility");
static_assert(offsetof(INTERACT_ForceBridge_C_SetForceBridgeVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_ForceBridge_C_SetForceBridgeVisibility::VisibilityState' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetForceBridgeVisibility, Temp_int_Array_Index_Variable) == 0x000004, "Member 'INTERACT_ForceBridge_C_SetForceBridgeVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetForceBridgeVisibility, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'INTERACT_ForceBridge_C_SetForceBridgeVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetForceBridgeVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'INTERACT_ForceBridge_C_SetForceBridgeVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetForceBridgeVisibility, CallFunc_GetChildComponentsByClass_ReturnValue) == 0x000010, "Member 'INTERACT_ForceBridge_C_SetForceBridgeVisibility::CallFunc_GetChildComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetForceBridgeVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'INTERACT_ForceBridge_C_SetForceBridgeVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetForceBridgeVisibility, CallFunc_Array_Get_Item) == 0x000028, "Member 'INTERACT_ForceBridge_C_SetForceBridgeVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetForceBridgeVisibility, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'INTERACT_ForceBridge_C_SetForceBridgeVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetForceBridgeVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'INTERACT_ForceBridge_C_SetForceBridgeVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.OnForceBridgeStateChanged
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ForceBridge_C_OnForceBridgeStateChanged final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_OnForceBridgeStateChanged) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_OnForceBridgeStateChanged");
static_assert(sizeof(INTERACT_ForceBridge_C_OnForceBridgeStateChanged) == 0x000001, "Wrong size on INTERACT_ForceBridge_C_OnForceBridgeStateChanged");
static_assert(offsetof(INTERACT_ForceBridge_C_OnForceBridgeStateChanged, State) == 0x000000, "Member 'INTERACT_ForceBridge_C_OnForceBridgeStateChanged::State' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.UpdateNavAgentMutability
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_ForceBridge_C_UpdateNavAgentMutability final
{
public:
	bool                                          CallFunc_IsForceBridgePoweredOn_Result;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_UpdateNavAgentMutability) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_UpdateNavAgentMutability");
static_assert(sizeof(INTERACT_ForceBridge_C_UpdateNavAgentMutability) == 0x000002, "Wrong size on INTERACT_ForceBridge_C_UpdateNavAgentMutability");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateNavAgentMutability, CallFunc_IsForceBridgePoweredOn_Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_UpdateNavAgentMutability::CallFunc_IsForceBridgePoweredOn_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateNavAgentMutability, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'INTERACT_ForceBridge_C_UpdateNavAgentMutability::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.UpdateForceBridgeEffects
// 0x00B8 (0x00B8 - 0x0000)
struct INTERACT_ForceBridge_C_UpdateForceBridgeEffects final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsForceBridgeEnabled_Result;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0020(0x0030)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Object)>        K2Node_CreateDelegate_OutputDelegate;              // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLatentObjectEventHandle               CallFunc_CreateObjectEventHandle_ReturnValue;      // 0x0080(0x0010)(ContainsInstancedReference)
	TSoftObjectPtr<class UFXSystemAsset>          K2Node_Select_Default;                             // 0x0090(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_UpdateForceBridgeEffects");
static_assert(sizeof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects) == 0x0000B8, "Wrong size on INTERACT_ForceBridge_C_UpdateForceBridgeEffects");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEffects::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects, CallFunc_IsForceBridgeEnabled_Result) == 0x000008, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEffects::CallFunc_IsForceBridgeEnabled_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEffects::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000020, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEffects::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects, CallFunc_GetGameInstance_ReturnValue_1) == 0x000050, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEffects::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects, Temp_bool_Variable) == 0x000058, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEffects::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000060, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEffects::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEffects::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects, K2Node_CreateDelegate_OutputDelegate) == 0x00006C, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEffects::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects, CallFunc_CreateObjectEventHandle_ReturnValue) == 0x000080, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEffects::CallFunc_CreateObjectEventHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEffects, K2Node_Select_Default) == 0x000090, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEffects::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.EVENT_OnBridgeEffectsSpawned
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NiagaraComponent;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UNiagaraComponent*                      K2Node_DynamicCast_AsNiagara_Particle_System;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned");
static_assert(sizeof(INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned) == 0x000020, "Wrong size on INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned, Object) == 0x000000, "Member 'INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned::Object' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned, NiagaraComponent) == 0x000008, "Member 'INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned::NiagaraComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned, K2Node_DynamicCast_AsNiagara_Particle_System) == 0x000010, "Member 'INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned::K2Node_DynamicCast_AsNiagara_Particle_System' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned, CallFunc_IsVisible_ReturnValue) == 0x000019, "Member 'INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00001C, "Member 'INTERACT_ForceBridge_C_EVENT_OnBridgeEffectsSpawned::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.UpdateForceBridgeEmissive
// 0x000C (0x000C - 0x0000)
struct INTERACT_ForceBridge_C_UpdateForceBridgeEmissive final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceBridge_C_UpdateForceBridgeEmissive) == 0x000004, "Wrong alignment on INTERACT_ForceBridge_C_UpdateForceBridgeEmissive");
static_assert(sizeof(INTERACT_ForceBridge_C_UpdateForceBridgeEmissive) == 0x00000C, "Wrong size on INTERACT_ForceBridge_C_UpdateForceBridgeEmissive");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEmissive, Scale) == 0x000000, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEmissive::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEmissive, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000004, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEmissive::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeEmissive, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeEmissive::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.UpdateForceBridgeSpinSounds
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_ForceBridge_C_UpdateForceBridgeSpinSounds final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          OnBeginPlay;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_UpdateForceBridgeSpinSounds) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_UpdateForceBridgeSpinSounds");
static_assert(sizeof(INTERACT_ForceBridge_C_UpdateForceBridgeSpinSounds) == 0x000003, "Wrong size on INTERACT_ForceBridge_C_UpdateForceBridgeSpinSounds");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeSpinSounds, State) == 0x000000, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeSpinSounds::State' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeSpinSounds, OnBeginPlay) == 0x000001, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeSpinSounds::OnBeginPlay' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeSpinSounds, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeSpinSounds::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.UpdateForceBridgeMalfunctionTimer
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NextTickDelay;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedMalfunctionTime_Result;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer");
static_assert(sizeof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer) == 0x000040, "Wrong size on INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer, State) == 0x000000, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer::State' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer, NextTickDelay) == 0x000004, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer::NextTickDelay' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer, CallFunc_GetElapsedMalfunctionTime_Result) == 0x000008, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer::CallFunc_GetElapsedMalfunctionTime_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer, CallFunc_FMax_ReturnValue) == 0x000034, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000038, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'INTERACT_ForceBridge_C_UpdateForceBridgeMalfunctionTimer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.EVENT_OnMalfunctionDelayFinished
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ForceBridge_C_EVENT_OnMalfunctionDelayFinished final
{
public:
	bool                                          CallFunc_IsForceBridgeActivatedAndPowered_Result;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_EVENT_OnMalfunctionDelayFinished) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_EVENT_OnMalfunctionDelayFinished");
static_assert(sizeof(INTERACT_ForceBridge_C_EVENT_OnMalfunctionDelayFinished) == 0x000001, "Wrong size on INTERACT_ForceBridge_C_EVENT_OnMalfunctionDelayFinished");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnMalfunctionDelayFinished, CallFunc_IsForceBridgeActivatedAndPowered_Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_EVENT_OnMalfunctionDelayFinished::CallFunc_IsForceBridgeActivatedAndPowered_Result' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.GetMalfunctionPhaseOffset
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          RandomStream;                                      // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset) == 0x000004, "Wrong alignment on INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset");
static_assert(sizeof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset) == 0x000050, "Wrong size on INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, RandomStream) == 0x000004, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::RandomStream' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_RandomFloatFromStream_ReturnValue) == 0x000010, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000020, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_BreakVector_X) == 0x00002C, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_BreakVector_Y) == 0x000030, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_BreakVector_Z) == 0x000034, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_Round_ReturnValue) == 0x000038, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_Round_ReturnValue_1) == 0x00003C, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_Round_ReturnValue_2) == 0x000040, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_Multiply_IntInt_ReturnValue) == 0x000044, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'INTERACT_ForceBridge_C_GetMalfunctionPhaseOffset::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.GetElapsedMalfunctionTime
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_ForceBridge_C_GetElapsedMalfunctionTime final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMalfunctionPhaseOffset_Result;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceBridge_C_GetElapsedMalfunctionTime) == 0x000004, "Wrong alignment on INTERACT_ForceBridge_C_GetElapsedMalfunctionTime");
static_assert(sizeof(INTERACT_ForceBridge_C_GetElapsedMalfunctionTime) == 0x000014, "Wrong size on INTERACT_ForceBridge_C_GetElapsedMalfunctionTime");
static_assert(offsetof(INTERACT_ForceBridge_C_GetElapsedMalfunctionTime, Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_GetElapsedMalfunctionTime::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetElapsedMalfunctionTime, CallFunc_GetMalfunctionPhaseOffset_Result) == 0x000004, "Member 'INTERACT_ForceBridge_C_GetElapsedMalfunctionTime::CallFunc_GetMalfunctionPhaseOffset_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetElapsedMalfunctionTime, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000008, "Member 'INTERACT_ForceBridge_C_GetElapsedMalfunctionTime::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetElapsedMalfunctionTime, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_ForceBridge_C_GetElapsedMalfunctionTime::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetElapsedMalfunctionTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_ForceBridge_C_GetElapsedMalfunctionTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.GetMalfunctionEnableState
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_ForceBridge_C_GetMalfunctionEnableState final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetElapsedMalfunctionTime_Result;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_GetMalfunctionEnableState) == 0x000004, "Wrong alignment on INTERACT_ForceBridge_C_GetMalfunctionEnableState");
static_assert(sizeof(INTERACT_ForceBridge_C_GetMalfunctionEnableState) == 0x000018, "Wrong size on INTERACT_ForceBridge_C_GetMalfunctionEnableState");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionEnableState, Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_GetMalfunctionEnableState::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionEnableState, CallFunc_GetElapsedMalfunctionTime_Result) == 0x000004, "Member 'INTERACT_ForceBridge_C_GetMalfunctionEnableState::CallFunc_GetElapsedMalfunctionTime_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionEnableState, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_ForceBridge_C_GetMalfunctionEnableState::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionEnableState, CallFunc_FTrunc_ReturnValue) == 0x00000C, "Member 'INTERACT_ForceBridge_C_GetMalfunctionEnableState::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionEnableState, CallFunc_And_IntInt_ReturnValue) == 0x000010, "Member 'INTERACT_ForceBridge_C_GetMalfunctionEnableState::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetMalfunctionEnableState, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'INTERACT_ForceBridge_C_GetMalfunctionEnableState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.EVENT_OnDisableAttribChanged
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged) == 0x000014, "Wrong size on INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00000D, "Member 'INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000E, "Member 'INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000F, "Member 'INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x000010, "Member 'INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'INTERACT_ForceBridge_C_EVENT_OnDisableAttribChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.TryInteract
// 0x0100 (0x0100 - 0x0000)
struct INTERACT_ForceBridge_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          IsActiveAndPowered;                                // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WasActiveAndPowered;                               // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForceBridgeActivatedAndPowered_Result;  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInteractLocked_Result;                 // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInteractLocked_LockMessage;            // 0x0040(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0058(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsForceBridgeActivatedAndPowered_Result_1; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInteractBusy_Result;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInteractBusy_BusyMessage;              // 0x0080(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0098(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00B8(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x00D8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_TryInteract");
static_assert(sizeof(INTERACT_ForceBridge_C_TryInteract) == 0x000100, "Wrong size on INTERACT_ForceBridge_C_TryInteract");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_ForceBridge_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_ForceBridge_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_ForceBridge_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_ForceBridge_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, IsActiveAndPowered) == 0x000038, "Member 'INTERACT_ForceBridge_C_TryInteract::IsActiveAndPowered' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, WasActiveAndPowered) == 0x000039, "Member 'INTERACT_ForceBridge_C_TryInteract::WasActiveAndPowered' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, CallFunc_IsForceBridgeActivatedAndPowered_Result) == 0x00003A, "Member 'INTERACT_ForceBridge_C_TryInteract::CallFunc_IsForceBridgeActivatedAndPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, CallFunc_GetInteractLocked_Result) == 0x00003B, "Member 'INTERACT_ForceBridge_C_TryInteract::CallFunc_GetInteractLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, CallFunc_GetInteractLocked_LockMessage) == 0x000040, "Member 'INTERACT_ForceBridge_C_TryInteract::CallFunc_GetInteractLocked_LockMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000058, "Member 'INTERACT_ForceBridge_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, CallFunc_IsForceBridgeActivatedAndPowered_Result_1) == 0x000078, "Member 'INTERACT_ForceBridge_C_TryInteract::CallFunc_IsForceBridgeActivatedAndPowered_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, CallFunc_GetInteractBusy_Result) == 0x000079, "Member 'INTERACT_ForceBridge_C_TryInteract::CallFunc_GetInteractBusy_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, CallFunc_GetInteractBusy_BusyMessage) == 0x000080, "Member 'INTERACT_ForceBridge_C_TryInteract::CallFunc_GetInteractBusy_BusyMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000098, "Member 'INTERACT_ForceBridge_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000B8, "Member 'INTERACT_ForceBridge_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x0000D8, "Member 'INTERACT_ForceBridge_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x0000F8, "Member 'INTERACT_ForceBridge_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, K2Node_SwitchEnum_CmpSuccess) == 0x0000F9, "Member 'INTERACT_ForceBridge_C_TryInteract::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000FA, "Member 'INTERACT_ForceBridge_C_TryInteract::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_TryInteract, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000FB, "Member 'INTERACT_ForceBridge_C_TryInteract::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.IsInteractActivated
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ForceBridge_C_IsInteractActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_IsInteractActivated) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_IsInteractActivated");
static_assert(sizeof(INTERACT_ForceBridge_C_IsInteractActivated) == 0x000001, "Wrong size on INTERACT_ForceBridge_C_IsInteractActivated");
static_assert(offsetof(INTERACT_ForceBridge_C_IsInteractActivated, Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_IsInteractActivated::Result' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.SetInteractLocked
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_ForceBridge_C_SetInteractLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_SetInteractLocked) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_SetInteractLocked");
static_assert(sizeof(INTERACT_ForceBridge_C_SetInteractLocked) == 0x000003, "Wrong size on INTERACT_ForceBridge_C_SetInteractLocked");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractLocked, Locked) == 0x000000, "Member 'INTERACT_ForceBridge_C_SetInteractLocked::Locked' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractLocked, Result) == 0x000001, "Member 'INTERACT_ForceBridge_C_SetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractLocked, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'INTERACT_ForceBridge_C_SetInteractLocked::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.GetInteractLocked
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_ForceBridge_C_GetInteractLocked final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LockMessage;                                       // 0x0010(0x0018)(Parm, OutParm)
};
static_assert(alignof(INTERACT_ForceBridge_C_GetInteractLocked) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_GetInteractLocked");
static_assert(sizeof(INTERACT_ForceBridge_C_GetInteractLocked) == 0x000028, "Wrong size on INTERACT_ForceBridge_C_GetInteractLocked");
static_assert(offsetof(INTERACT_ForceBridge_C_GetInteractLocked, SourceActor) == 0x000000, "Member 'INTERACT_ForceBridge_C_GetInteractLocked::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetInteractLocked, Result) == 0x000008, "Member 'INTERACT_ForceBridge_C_GetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetInteractLocked, LockMessage) == 0x000010, "Member 'INTERACT_ForceBridge_C_GetInteractLocked::LockMessage' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.GetInteractBusy
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_ForceBridge_C_GetInteractBusy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BusyMessage;                                       // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_HasFinishedForceBridgeTransition_Result;  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_GetInteractBusy) == 0x000008, "Wrong alignment on INTERACT_ForceBridge_C_GetInteractBusy");
static_assert(sizeof(INTERACT_ForceBridge_C_GetInteractBusy) == 0x000028, "Wrong size on INTERACT_ForceBridge_C_GetInteractBusy");
static_assert(offsetof(INTERACT_ForceBridge_C_GetInteractBusy, Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_GetInteractBusy::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetInteractBusy, BusyMessage) == 0x000008, "Member 'INTERACT_ForceBridge_C_GetInteractBusy::BusyMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_GetInteractBusy, CallFunc_HasFinishedForceBridgeTransition_Result) == 0x000020, "Member 'INTERACT_ForceBridge_C_GetInteractBusy::CallFunc_HasFinishedForceBridgeTransition_Result' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.SetInteractPowered
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_ForceBridge_C_SetInteractPowered final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsActiveAndPowered;                                // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WasActiveAndPowered;                               // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForceBridgeActivatedAndPowered_Result;  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForceBridgeActivatedAndPowered_Result_1; // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_SetInteractPowered) == 0x000004, "Wrong alignment on INTERACT_ForceBridge_C_SetInteractPowered");
static_assert(sizeof(INTERACT_ForceBridge_C_SetInteractPowered) == 0x000010, "Wrong size on INTERACT_ForceBridge_C_SetInteractPowered");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractPowered, State) == 0x000000, "Member 'INTERACT_ForceBridge_C_SetInteractPowered::State' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractPowered, Result) == 0x000001, "Member 'INTERACT_ForceBridge_C_SetInteractPowered::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractPowered, IsActiveAndPowered) == 0x000002, "Member 'INTERACT_ForceBridge_C_SetInteractPowered::IsActiveAndPowered' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractPowered, WasActiveAndPowered) == 0x000003, "Member 'INTERACT_ForceBridge_C_SetInteractPowered::WasActiveAndPowered' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractPowered, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_ForceBridge_C_SetInteractPowered::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractPowered, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_ForceBridge_C_SetInteractPowered::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractPowered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000C, "Member 'INTERACT_ForceBridge_C_SetInteractPowered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractPowered, CallFunc_IsForceBridgeActivatedAndPowered_Result) == 0x00000D, "Member 'INTERACT_ForceBridge_C_SetInteractPowered::CallFunc_IsForceBridgeActivatedAndPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractPowered, CallFunc_IsForceBridgeActivatedAndPowered_Result_1) == 0x00000E, "Member 'INTERACT_ForceBridge_C_SetInteractPowered::CallFunc_IsForceBridgeActivatedAndPowered_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceBridge_C_SetInteractPowered, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x00000F, "Member 'INTERACT_ForceBridge_C_SetInteractPowered::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");

// Function INTERACT_ForceBridge.INTERACT_ForceBridge_C.CanModifyInteractPower
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ForceBridge_C_CanModifyInteractPower final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceBridge_C_CanModifyInteractPower) == 0x000001, "Wrong alignment on INTERACT_ForceBridge_C_CanModifyInteractPower");
static_assert(sizeof(INTERACT_ForceBridge_C_CanModifyInteractPower) == 0x000001, "Wrong size on INTERACT_ForceBridge_C_CanModifyInteractPower");
static_assert(offsetof(INTERACT_ForceBridge_C_CanModifyInteractPower, Result) == 0x000000, "Member 'INTERACT_ForceBridge_C_CanModifyInteractPower::Result' has a wrong offset!");

}


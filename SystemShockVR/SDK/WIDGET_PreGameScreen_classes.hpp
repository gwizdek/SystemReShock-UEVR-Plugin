#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_PreGameScreen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_PreGameScreen.WIDGET_PreGameScreen_C
// 0x0058 (0x02B8 - 0x0260)
class UWIDGET_PreGameScreen_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           Canvas_Main;                                       // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMG_BlackBackground;                               // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_SplashScreen_Loading_C*         WIDGET_LoadingScreen;                              // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_SplashScreen_NightDive_C*       WIDGET_SplashScreen_NightDive;                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_SplashScreen_Photosensitivity_C* WIDGET_SplashScreen_Photosensitivity;              // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_SplashScreen_Title_C*           WIDGET_SplashScreen_Title;                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_SplashScreen_Unreal_C*          WIDGET_SplashScreen_Unreal;                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         EnterStateTimestamp;                               // 0x02A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FadeIn;                                            // 0x02A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Splash;                                            // 0x02A5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FadeOut;                                           // 0x02A6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WaitingToEnd;                                      // 0x02A7(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CurrentSplashScreen;                               // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_LoadingScreen_C*                LoadingScreen;                                     // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WIDGET_PreGameScreen(int32 EntryPoint);
	void BndEvt__WIDGET_PreGameScreen_WIDGET_SplashScreen_Title_K2Node_ComponentBoundEvent_1_StartNewGame__DelegateSignature();
	void SetFirstSplashScreen();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void TryNextScreen();
	void StartNewGame();
	void SplashFinished();
	void UpdateSplashScreen();
	void LoadingSplashFinished();
	void EVENT_OnLoadingFinished();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_PreGameScreen_C">();
	}
	static class UWIDGET_PreGameScreen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_PreGameScreen_C>();
	}
};
static_assert(alignof(UWIDGET_PreGameScreen_C) == 0x000008, "Wrong alignment on UWIDGET_PreGameScreen_C");
static_assert(sizeof(UWIDGET_PreGameScreen_C) == 0x0002B8, "Wrong size on UWIDGET_PreGameScreen_C");
static_assert(offsetof(UWIDGET_PreGameScreen_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_PreGameScreen_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, Canvas_Main) == 0x000268, "Member 'UWIDGET_PreGameScreen_C::Canvas_Main' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, IMG_BlackBackground) == 0x000270, "Member 'UWIDGET_PreGameScreen_C::IMG_BlackBackground' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, WIDGET_LoadingScreen) == 0x000278, "Member 'UWIDGET_PreGameScreen_C::WIDGET_LoadingScreen' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, WIDGET_SplashScreen_NightDive) == 0x000280, "Member 'UWIDGET_PreGameScreen_C::WIDGET_SplashScreen_NightDive' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, WIDGET_SplashScreen_Photosensitivity) == 0x000288, "Member 'UWIDGET_PreGameScreen_C::WIDGET_SplashScreen_Photosensitivity' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, WIDGET_SplashScreen_Title) == 0x000290, "Member 'UWIDGET_PreGameScreen_C::WIDGET_SplashScreen_Title' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, WIDGET_SplashScreen_Unreal) == 0x000298, "Member 'UWIDGET_PreGameScreen_C::WIDGET_SplashScreen_Unreal' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, EnterStateTimestamp) == 0x0002A0, "Member 'UWIDGET_PreGameScreen_C::EnterStateTimestamp' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, FadeIn) == 0x0002A4, "Member 'UWIDGET_PreGameScreen_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, Splash) == 0x0002A5, "Member 'UWIDGET_PreGameScreen_C::Splash' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, FadeOut) == 0x0002A6, "Member 'UWIDGET_PreGameScreen_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, WaitingToEnd) == 0x0002A7, "Member 'UWIDGET_PreGameScreen_C::WaitingToEnd' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, CurrentSplashScreen) == 0x0002A8, "Member 'UWIDGET_PreGameScreen_C::CurrentSplashScreen' has a wrong offset!");
static_assert(offsetof(UWIDGET_PreGameScreen_C, LoadingScreen) == 0x0002B0, "Member 'UWIDGET_PreGameScreen_C::LoadingScreen' has a wrong offset!");

}


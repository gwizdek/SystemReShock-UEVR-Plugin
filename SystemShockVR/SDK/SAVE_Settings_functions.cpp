#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SAVE_Settings

#include "Basic.hpp"

#include "SAVE_Settings_classes.hpp"
#include "SAVE_Settings_parameters.hpp"


namespace SDK
{

// Function SAVE_Settings.SAVE_Settings_C.AreAllSettingsSaved
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsDefault                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::AreAllSettingsSaved(bool* IsDefault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "AreAllSettingsSaved");

	Params::SAVE_Settings_C_AreAllSettingsSaved Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDefault != nullptr)
		*IsDefault = Parms.IsDefault;
}


// Function SAVE_Settings.SAVE_Settings_C.SetHUDCurvature
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetHUDCurvature(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetHUDCurvature");

	Params::SAVE_Settings_C_SetHUDCurvature Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetHUDCurvature
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetHUDCurvature(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetHUDCurvature");

	Params::SAVE_Settings_C_GetHUDCurvature Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.InitializeSaveSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACON_Hacker_C*                    HackerCon                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGI_SinglePlayer_C*               SinglePlayer                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::InitializeSaveSettings(class ACON_Hacker_C* HackerCon, class UGI_SinglePlayer_C* SinglePlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "InitializeSaveSettings");

	Params::SAVE_Settings_C_InitializeSaveSettings Parms{};

	Parms.HackerCon = HackerCon;
	Parms.SinglePlayer = SinglePlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyHUDCurvature
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyHUDCurvature(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyHUDCurvature");

	Params::SAVE_Settings_C_ApplyHUDCurvature Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetMasterVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetMasterVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetMasterVolume");

	Params::SAVE_Settings_C_SetMasterVolume Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetMasterVolume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetMasterVolume(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetMasterVolume");

	Params::SAVE_Settings_C_GetMasterVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyMasterVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyMasterVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyMasterVolume");

	Params::SAVE_Settings_C_ApplyMasterVolume Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetMusicVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetMusicVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetMusicVolume");

	Params::SAVE_Settings_C_SetMusicVolume Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetMusicVolume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetMusicVolume(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetMusicVolume");

	Params::SAVE_Settings_C_GetMusicVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyMusicVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyMusicVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyMusicVolume");

	Params::SAVE_Settings_C_ApplyMusicVolume Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetVoiceVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetVoiceVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetVoiceVolume");

	Params::SAVE_Settings_C_SetVoiceVolume Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetVoiceVolume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetVoiceVolume(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetVoiceVolume");

	Params::SAVE_Settings_C_GetVoiceVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyVoiceVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyVoiceVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyVoiceVolume");

	Params::SAVE_Settings_C_ApplyVoiceVolume Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetEffectsVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetEffectsVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetEffectsVolume");

	Params::SAVE_Settings_C_SetEffectsVolume Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetEffectsVolume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetEffectsVolume(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetEffectsVolume");

	Params::SAVE_Settings_C_GetEffectsVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyEffectsVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyEffectsVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyEffectsVolume");

	Params::SAVE_Settings_C_ApplyEffectsVolume Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetEnvironmentVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetEnvironmentVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetEnvironmentVolume");

	Params::SAVE_Settings_C_SetEnvironmentVolume Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetEnvironmentVolume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Volume                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetEnvironmentVolume(float* Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetEnvironmentVolume");

	Params::SAVE_Settings_C_GetEnvironmentVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Volume != nullptr)
		*Volume = Parms.Volume;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyEnvironmentVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyEnvironmentVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyEnvironmentVolume");

	Params::SAVE_Settings_C_ApplyEnvironmentVolume Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetDefaultLanguage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           DefaultLanguage                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetDefaultLanguage(const class FString& DefaultLanguage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetDefaultLanguage");

	Params::SAVE_Settings_C_SetDefaultLanguage Parms{};

	Parms.DefaultLanguage = std::move(DefaultLanguage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetLanguage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetLanguage(const class FString& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetLanguage");

	Params::SAVE_Settings_C_SetLanguage Parms{};

	Parms.NewValue = std::move(NewValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetLanguage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FString                           Result                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetLanguage(class FString* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetLanguage");

	Params::SAVE_Settings_C_GetLanguage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyLanguage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyLanguage(const class FString& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyLanguage");

	Params::SAVE_Settings_C_ApplyLanguage Parms{};

	Parms.NewValue = std::move(NewValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetUIVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetUIVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetUIVolume");

	Params::SAVE_Settings_C_SetUIVolume Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetUIVolume
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetUIVolume(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetUIVolume");

	Params::SAVE_Settings_C_GetUIVolume Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyUIVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyUIVolume(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyUIVolume");

	Params::SAVE_Settings_C_ApplyUIVolume Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetDLSS
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUDLSSMode                              NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetDLSS(EUDLSSMode NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetDLSS");

	Params::SAVE_Settings_C_SetDLSS Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetDLSS
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EUDLSSMode                              Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetDLSS(EUDLSSMode* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetDLSS");

	Params::SAVE_Settings_C_GetDLSS Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyDLSS
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EUDLSSMode                              NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyDLSS(EUDLSSMode NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyDLSS");

	Params::SAVE_Settings_C_ApplyDLSS Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetSubtitlesEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetSubtitlesEnabled(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetSubtitlesEnabled");

	Params::SAVE_Settings_C_SetSubtitlesEnabled Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetSubtitlesEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetSubtitlesEnabled(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetSubtitlesEnabled");

	Params::SAVE_Settings_C_GetSubtitlesEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplySubtitlesEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplySubtitlesEnabled(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplySubtitlesEnabled");

	Params::SAVE_Settings_C_ApplySubtitlesEnabled Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetBrightness
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRealspace                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetBrightness(float NewValue, bool IsRealspace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetBrightness");

	Params::SAVE_Settings_C_SetBrightness Parms{};

	Parms.NewValue = NewValue;
	Parms.IsRealspace = IsRealspace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetBrightness
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsRealspace                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetBrightness(bool IsRealspace, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetBrightness");

	Params::SAVE_Settings_C_GetBrightness Parms{};

	Parms.IsRealspace = IsRealspace;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetGammaFromSpecificBrightness
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCameraComponent*                 Camera                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector4                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetGammaFromSpecificBrightness(class UCameraComponent* Camera, float Value, struct FVector4* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetGammaFromSpecificBrightness");

	Params::SAVE_Settings_C_GetGammaFromSpecificBrightness Parms{};

	Parms.Camera = Camera;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SAVE_Settings.SAVE_Settings_C.GetDefaultGammaFromCurrentBrightness
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector4                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetDefaultGammaFromCurrentBrightness(struct FVector4* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetDefaultGammaFromCurrentBrightness");

	Params::SAVE_Settings_C_GetDefaultGammaFromCurrentBrightness Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyBrightness
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRealspace                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyBrightness(float NewValue, bool IsRealspace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyBrightness");

	Params::SAVE_Settings_C_ApplyBrightness Parms{};

	Parms.NewValue = NewValue;
	Parms.IsRealspace = IsRealspace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetWindowMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWindowMode                             NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetWindowMode(EWindowMode NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetWindowMode");

	Params::SAVE_Settings_C_SetWindowMode Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetWindowMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EWindowMode                             Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetWindowMode(EWindowMode* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetWindowMode");

	Params::SAVE_Settings_C_GetWindowMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyWindowMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWindowMode                             NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyWindowMode(EWindowMode NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyWindowMode");

	Params::SAVE_Settings_C_ApplyWindowMode Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetResolution
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FIntPoint                        NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetResolution(const struct FIntPoint& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetResolution");

	Params::SAVE_Settings_C_SetResolution Parms{};

	Parms.NewValue = std::move(NewValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetResolution
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FIntPoint                        Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetResolution(struct FIntPoint* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetResolution");

	Params::SAVE_Settings_C_GetResolution Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyResolution
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FIntPoint                        NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyResolution(const struct FIntPoint& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyResolution");

	Params::SAVE_Settings_C_ApplyResolution Parms{};

	Parms.NewValue = std::move(NewValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetResolutionScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetResolutionScale(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetResolutionScale");

	Params::SAVE_Settings_C_SetResolutionScale Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetResolutionScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetResolutionScale(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetResolutionScale");

	Params::SAVE_Settings_C_GetResolutionScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyResolutionScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyResolutionScale(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyResolutionScale");

	Params::SAVE_Settings_C_ApplyResolutionScale Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetEnableHDR
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetEnableHDR(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetEnableHDR");

	Params::SAVE_Settings_C_SetEnableHDR Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetEnableHDR
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetEnableHDR(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetEnableHDR");

	Params::SAVE_Settings_C_GetEnableHDR Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyEnableHDR
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyEnableHDR(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyEnableHDR");

	Params::SAVE_Settings_C_ApplyEnableHDR Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetEnableMotionBlur
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetEnableMotionBlur(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetEnableMotionBlur");

	Params::SAVE_Settings_C_SetEnableMotionBlur Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetEnableMotionBlur
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetEnableMotionBlur(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetEnableMotionBlur");

	Params::SAVE_Settings_C_GetEnableMotionBlur Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyEnableMotionBlur
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyEnableMotionBlur(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyEnableMotionBlur");

	Params::SAVE_Settings_C_ApplyEnableMotionBlur Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetFOV
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRealspace                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetFOV(float NewValue, bool IsRealspace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetFOV");

	Params::SAVE_Settings_C_SetFOV Parms{};

	Parms.NewValue = NewValue;
	Parms.IsRealspace = IsRealspace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetFOV
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsRealspace                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetFOV(bool IsRealspace, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetFOV");

	Params::SAVE_Settings_C_GetFOV Parms{};

	Parms.IsRealspace = IsRealspace;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyFOV
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRealspace                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyFOV(float NewValue, bool IsRealspace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyFOV");

	Params::SAVE_Settings_C_ApplyFOV Parms{};

	Parms.NewValue = NewValue;
	Parms.IsRealspace = IsRealspace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetEnableVSync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetEnableVSync(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetEnableVSync");

	Params::SAVE_Settings_C_SetEnableVSync Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetEnableVSync
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetEnableVSync(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetEnableVSync");

	Params::SAVE_Settings_C_GetEnableVSync Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyEnableVSync
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyEnableVSync(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyEnableVSync");

	Params::SAVE_Settings_C_ApplyEnableVSync Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetInputBindCountForCategory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_InputCategory                      InputCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetInputBindCountForCategory(ENUM_InputCategory InputCategory, bool IsGamepad, int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetInputBindCountForCategory");

	Params::SAVE_Settings_C_GetInputBindCountForCategory Parms{};

	Parms.InputCategory = InputCategory;
	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetInputKeyMapForCategory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_InputCategory                      InputCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TMap<class FName, struct FSTRUCT_BoundInputActionPair>Result                                                 (Parm, OutParm)

void USAVE_Settings_C::GetInputKeyMapForCategory(ENUM_InputCategory InputCategory, bool IsGamepad, TMap<class FName, struct FSTRUCT_BoundInputActionPair>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetInputKeyMapForCategory");

	Params::SAVE_Settings_C_GetInputKeyMapForCategory Parms{};

	Parms.InputCategory = InputCategory;
	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SAVE_Settings.SAVE_Settings_C.GetDefaultBindPairForCategory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             InputAction                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InputCategory                      InputCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSTRUCT_BoundInputActionPair     Result                                                 (Parm, OutParm, HasGetValueTypeHash)

void USAVE_Settings_C::GetDefaultBindPairForCategory(class FName InputAction, ENUM_InputCategory InputCategory, bool IsGamepad, struct FSTRUCT_BoundInputActionPair* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetDefaultBindPairForCategory");

	Params::SAVE_Settings_C_GetDefaultBindPairForCategory Parms{};

	Parms.InputAction = InputAction;
	Parms.InputCategory = InputCategory;
	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SAVE_Settings.SAVE_Settings_C.ValidateAndFixInputBinds
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           RealspacePrefix                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           CyberspacePrefix                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           MinigamePrefix                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void USAVE_Settings_C::ValidateAndFixInputBinds(const class FString& RealspacePrefix, const class FString& CyberspacePrefix, const class FString& MinigamePrefix)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ValidateAndFixInputBinds");

	Params::SAVE_Settings_C_ValidateAndFixInputBinds Parms{};

	Parms.RealspacePrefix = std::move(RealspacePrefix);
	Parms.CyberspacePrefix = std::move(CyberspacePrefix);
	Parms.MinigamePrefix = std::move(MinigamePrefix);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.BuildDefaultInputKeyMap
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_InputCategory                      InputCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           InputActionPrefix                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TMap<class FName, struct FSTRUCT_BoundInputActionPair>Result                                                 (Parm, OutParm)

void USAVE_Settings_C::BuildDefaultInputKeyMap(ENUM_InputCategory InputCategory, const class FString& InputActionPrefix, bool IsGamepad, TMap<class FName, struct FSTRUCT_BoundInputActionPair>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "BuildDefaultInputKeyMap");

	Params::SAVE_Settings_C_BuildDefaultInputKeyMap Parms{};

	Parms.InputCategory = InputCategory;
	Parms.InputActionPrefix = std::move(InputActionPrefix);
	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SAVE_Settings.SAVE_Settings_C.GetOrCreateInputKeyMapForCategory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_InputCategory                      InputCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           InputActionPrefix                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TMap<class FName, struct FSTRUCT_BoundInputActionPair>Result                                                 (Parm, OutParm)
// bool                                    IsDefault                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetOrCreateInputKeyMapForCategory(ENUM_InputCategory InputCategory, const class FString& InputActionPrefix, bool IsGamepad, TMap<class FName, struct FSTRUCT_BoundInputActionPair>* Result, bool* IsDefault)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetOrCreateInputKeyMapForCategory");

	Params::SAVE_Settings_C_GetOrCreateInputKeyMapForCategory Parms{};

	Parms.InputCategory = InputCategory;
	Parms.InputActionPrefix = std::move(InputActionPrefix);
	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);

	if (IsDefault != nullptr)
		*IsDefault = Parms.IsDefault;
}


// Function SAVE_Settings.SAVE_Settings_C.SetInputKeyMapForCategory
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<class FName, struct FSTRUCT_BoundInputActionPair>NewKeyMap                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// ENUM_InputCategory                      InputCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           InputActionPrefix                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetInputKeyMapForCategory(const TMap<class FName, struct FSTRUCT_BoundInputActionPair>& NewKeyMap, ENUM_InputCategory InputCategory, const class FString& InputActionPrefix, bool IsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetInputKeyMapForCategory");

	Params::SAVE_Settings_C_SetInputKeyMapForCategory Parms{};

	Parms.NewKeyMap = std::move(NewKeyMap);
	Parms.InputCategory = InputCategory;
	Parms.InputActionPrefix = std::move(InputActionPrefix);
	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.ApplySavedKeyActionsForCategory
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_InputCategory                      InputCategory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           InputActionPrefix                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplySavedKeyActionsForCategory(ENUM_InputCategory InputCategory, const class FString& InputActionPrefix, bool IsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplySavedKeyActionsForCategory");

	Params::SAVE_Settings_C_ApplySavedKeyActionsForCategory Parms{};

	Parms.InputCategory = InputCategory;
	Parms.InputActionPrefix = std::move(InputActionPrefix);
	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetAimAssist
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetAimAssist(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetAimAssist");

	Params::SAVE_Settings_C_SetAimAssist Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetAimAssist
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetAimAssist(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetAimAssist");

	Params::SAVE_Settings_C_GetAimAssist Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyAimAssist
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyAimAssist(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyAimAssist");

	Params::SAVE_Settings_C_ApplyAimAssist Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetFocusAimToggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetFocusAimToggle(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetFocusAimToggle");

	Params::SAVE_Settings_C_SetFocusAimToggle Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetFocusAimToggle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetFocusAimToggle(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetFocusAimToggle");

	Params::SAVE_Settings_C_GetFocusAimToggle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyFocusAimToggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyFocusAimToggle(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyFocusAimToggle");

	Params::SAVE_Settings_C_ApplyFocusAimToggle Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetCrouchToggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetCrouchToggle(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetCrouchToggle");

	Params::SAVE_Settings_C_SetCrouchToggle Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetCrouchToggle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetCrouchToggle(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetCrouchToggle");

	Params::SAVE_Settings_C_GetCrouchToggle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyCrouchToggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyCrouchToggle(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyCrouchToggle");

	Params::SAVE_Settings_C_ApplyCrouchToggle Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetAutoPlayMediaLogs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetAutoPlayMediaLogs(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetAutoPlayMediaLogs");

	Params::SAVE_Settings_C_SetAutoPlayMediaLogs Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetAutoPlayMediaLogs
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetAutoPlayMediaLogs(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetAutoPlayMediaLogs");

	Params::SAVE_Settings_C_GetAutoPlayMediaLogs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyAutoPlayMediaLogs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyAutoPlayMediaLogs(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyAutoPlayMediaLogs");

	Params::SAVE_Settings_C_ApplyAutoPlayMediaLogs Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetAutoRotateMinimap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetAutoRotateMinimap(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetAutoRotateMinimap");

	Params::SAVE_Settings_C_SetAutoRotateMinimap Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetAutoRotateMinimap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetAutoRotateMinimap(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetAutoRotateMinimap");

	Params::SAVE_Settings_C_GetAutoRotateMinimap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyAutoRotateMinimap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyAutoRotateMinimap(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyAutoRotateMinimap");

	Params::SAVE_Settings_C_ApplyAutoRotateMinimap Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetShowTutorials
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetShowTutorials(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetShowTutorials");

	Params::SAVE_Settings_C_SetShowTutorials Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetShowTutorials
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetShowTutorials(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetShowTutorials");

	Params::SAVE_Settings_C_GetShowTutorials Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyShowTutorials
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyShowTutorials(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyShowTutorials");

	Params::SAVE_Settings_C_ApplyShowTutorials Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetFocusOnPuzzles
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetFocusOnPuzzles(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetFocusOnPuzzles");

	Params::SAVE_Settings_C_SetFocusOnPuzzles Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetFocusOnPuzzles
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetFocusOnPuzzles(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetFocusOnPuzzles");

	Params::SAVE_Settings_C_GetFocusOnPuzzles Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyFocusOnPuzzles
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyFocusOnPuzzles(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyFocusOnPuzzles");

	Params::SAVE_Settings_C_ApplyFocusOnPuzzles Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetAutoSlotHotbar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetAutoSlotHotbar(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetAutoSlotHotbar");

	Params::SAVE_Settings_C_SetAutoSlotHotbar Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetAutoSlotHotbar
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetAutoSlotHotbar(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetAutoSlotHotbar");

	Params::SAVE_Settings_C_GetAutoSlotHotbar Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyAutoSlotHotbar
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyAutoSlotHotbar(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyAutoSlotHotbar");

	Params::SAVE_Settings_C_ApplyAutoSlotHotbar Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetAutoReload
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetAutoReload(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetAutoReload");

	Params::SAVE_Settings_C_SetAutoReload Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetAutoReload
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetAutoReload(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetAutoReload");

	Params::SAVE_Settings_C_GetAutoReload Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyAutoReload
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyAutoReload(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyAutoReload");

	Params::SAVE_Settings_C_ApplyAutoReload Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetRealspaceLookSensitivity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetRealspaceLookSensitivity(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetRealspaceLookSensitivity");

	Params::SAVE_Settings_C_SetRealspaceLookSensitivity Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetRealspaceLookSensitivity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetRealspaceLookSensitivity(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetRealspaceLookSensitivity");

	Params::SAVE_Settings_C_GetRealspaceLookSensitivity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyRealspaceLookSensitivity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyRealspaceLookSensitivity(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyRealspaceLookSensitivity");

	Params::SAVE_Settings_C_ApplyRealspaceLookSensitivity Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetRealspaceInvertY
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetRealspaceInvertY(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetRealspaceInvertY");

	Params::SAVE_Settings_C_SetRealspaceInvertY Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetRealspaceInvertY
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetRealspaceInvertY(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetRealspaceInvertY");

	Params::SAVE_Settings_C_GetRealspaceInvertY Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyRealspaceInvertY
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyRealspaceInvertY(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyRealspaceInvertY");

	Params::SAVE_Settings_C_ApplyRealspaceInvertY Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetCyberspaceLookSensitivity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetCyberspaceLookSensitivity(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetCyberspaceLookSensitivity");

	Params::SAVE_Settings_C_SetCyberspaceLookSensitivity Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetCyberspaceLookSensitivity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetCyberspaceLookSensitivity(float* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetCyberspaceLookSensitivity");

	Params::SAVE_Settings_C_GetCyberspaceLookSensitivity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyCyberspaceLookSensitivity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyCyberspaceLookSensitivity(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyCyberspaceLookSensitivity");

	Params::SAVE_Settings_C_ApplyCyberspaceLookSensitivity Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetCyberspaceInvertY
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetCyberspaceInvertY(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetCyberspaceInvertY");

	Params::SAVE_Settings_C_SetCyberspaceInvertY Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetCyberspaceInvertY
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetCyberspaceInvertY(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetCyberspaceInvertY");

	Params::SAVE_Settings_C_GetCyberspaceInvertY Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyCyberspaceInvertY
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyCyberspaceInvertY(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyCyberspaceInvertY");

	Params::SAVE_Settings_C_ApplyCyberspaceInvertY Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetAmbientOcclusion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_OffLowMediumHigh                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetAmbientOcclusion(ENUM_OffLowMediumHigh NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetAmbientOcclusion");

	Params::SAVE_Settings_C_SetAmbientOcclusion Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetAmbientOcclusion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_OffLowMediumHigh                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetAmbientOcclusion(ENUM_OffLowMediumHigh* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetAmbientOcclusion");

	Params::SAVE_Settings_C_GetAmbientOcclusion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyAmbientOcclusion
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_OffLowMediumHigh                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyAmbientOcclusion(ENUM_OffLowMediumHigh NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyAmbientOcclusion");

	Params::SAVE_Settings_C_ApplyAmbientOcclusion Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetFogQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetFogQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetFogQuality");

	Params::SAVE_Settings_C_SetFogQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetFogQuality
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetFogQuality(ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetFogQuality");

	Params::SAVE_Settings_C_GetFogQuality Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyFogQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyFogQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyFogQuality");

	Params::SAVE_Settings_C_ApplyFogQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetPostProccessingQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetPostProccessingQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetPostProccessingQuality");

	Params::SAVE_Settings_C_SetPostProccessingQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetPostProccessingQuality
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetPostProccessingQuality(ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetPostProccessingQuality");

	Params::SAVE_Settings_C_GetPostProccessingQuality Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyPostProccessingQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyPostProccessingQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyPostProccessingQuality");

	Params::SAVE_Settings_C_ApplyPostProccessingQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetTextureQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetTextureQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetTextureQuality");

	Params::SAVE_Settings_C_SetTextureQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetTextureQuality
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetTextureQuality(ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetTextureQuality");

	Params::SAVE_Settings_C_GetTextureQuality Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyTextureQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyTextureQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyTextureQuality");

	Params::SAVE_Settings_C_ApplyTextureQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetShaderQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetShaderQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetShaderQuality");

	Params::SAVE_Settings_C_SetShaderQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetShaderQuality
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetShaderQuality(ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetShaderQuality");

	Params::SAVE_Settings_C_GetShaderQuality Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyShaderQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyShaderQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyShaderQuality");

	Params::SAVE_Settings_C_ApplyShaderQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetShadowQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetShadowQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetShadowQuality");

	Params::SAVE_Settings_C_SetShadowQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetShadowQuality
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetShadowQuality(ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetShadowQuality");

	Params::SAVE_Settings_C_GetShadowQuality Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyShadowQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyShadowQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyShadowQuality");

	Params::SAVE_Settings_C_ApplyShadowQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetEffectsQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetEffectsQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetEffectsQuality");

	Params::SAVE_Settings_C_SetEffectsQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetEffectsQuality
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetEffectsQuality(ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetEffectsQuality");

	Params::SAVE_Settings_C_GetEffectsQuality Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyEffectsQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyEffectsQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyEffectsQuality");

	Params::SAVE_Settings_C_ApplyEffectsQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetFoliageQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetFoliageQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetFoliageQuality");

	Params::SAVE_Settings_C_SetFoliageQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetFoliageQuality
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetFoliageQuality(ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetFoliageQuality");

	Params::SAVE_Settings_C_GetFoliageQuality Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyFoliageQuality
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_QualitySetting                     NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyFoliageQuality(ENUM_QualitySetting NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyFoliageQuality");

	Params::SAVE_Settings_C_ApplyFoliageQuality Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetHeadbobAmount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_OffReducedNormal                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetHeadbobAmount(ENUM_OffReducedNormal NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetHeadbobAmount");

	Params::SAVE_Settings_C_SetHeadbobAmount Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetHeadbobAmount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_OffReducedNormal                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetHeadbobAmount(ENUM_OffReducedNormal* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetHeadbobAmount");

	Params::SAVE_Settings_C_GetHeadbobAmount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyHeadbobAmount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_OffReducedNormal                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyHeadbobAmount(ENUM_OffReducedNormal NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyHeadbobAmount");

	Params::SAVE_Settings_C_ApplyHeadbobAmount Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetGoreAmount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_OffReducedNormal                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetGoreAmount(ENUM_OffReducedNormal NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetGoreAmount");

	Params::SAVE_Settings_C_SetGoreAmount Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetGoreAmount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_OffReducedNormal                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetGoreAmount(ENUM_OffReducedNormal* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetGoreAmount");

	Params::SAVE_Settings_C_GetGoreAmount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyGoreAmount
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_OffReducedNormal                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyGoreAmount(ENUM_OffReducedNormal NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyGoreAmount");

	Params::SAVE_Settings_C_ApplyGoreAmount Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetDismembermentEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetDismembermentEnabled(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetDismembermentEnabled");

	Params::SAVE_Settings_C_SetDismembermentEnabled Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetDismembermentEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetDismembermentEnabled(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetDismembermentEnabled");

	Params::SAVE_Settings_C_GetDismembermentEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyDismembermentEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyDismembermentEnabled(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyDismembermentEnabled");

	Params::SAVE_Settings_C_ApplyDismembermentEnabled Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetHUDOpacity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetHUDOpacity(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetHUDOpacity");

	Params::SAVE_Settings_C_SetHUDOpacity Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetHUDOpacity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetHUDOpacity(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetHUDOpacity");

	Params::SAVE_Settings_C_GetHUDOpacity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyHUDOpacity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyHUDOpacity(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyHUDOpacity");

	Params::SAVE_Settings_C_ApplyHUDOpacity Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetHotbarStyle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_HotbarStyle                        NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetHotbarStyle(ENUM_HotbarStyle NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetHotbarStyle");

	Params::SAVE_Settings_C_SetHotbarStyle Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetHotbarStyle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_HotbarStyle                        Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetHotbarStyle(ENUM_HotbarStyle* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetHotbarStyle");

	Params::SAVE_Settings_C_GetHotbarStyle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyHotbarStyle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_HotbarStyle                        NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyHotbarStyle(ENUM_HotbarStyle NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyHotbarStyle");

	Params::SAVE_Settings_C_ApplyHotbarStyle Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetSubtitleSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_SmallMediumLarge                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetSubtitleSize(ENUM_SmallMediumLarge NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetSubtitleSize");

	Params::SAVE_Settings_C_SetSubtitleSize Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetSubtitleSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_SmallMediumLarge                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetSubtitleSize(ENUM_SmallMediumLarge* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetSubtitleSize");

	Params::SAVE_Settings_C_GetSubtitleSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplySubtitleSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_SmallMediumLarge                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplySubtitleSize(ENUM_SmallMediumLarge NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplySubtitleSize");

	Params::SAVE_Settings_C_ApplySubtitleSize Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetSoundEffectCaptionsEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetSoundEffectCaptionsEnabled(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetSoundEffectCaptionsEnabled");

	Params::SAVE_Settings_C_SetSoundEffectCaptionsEnabled Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetSoundEffectCaptionsEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetSoundEffectCaptionsEnabled(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetSoundEffectCaptionsEnabled");

	Params::SAVE_Settings_C_GetSoundEffectCaptionsEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplySoundEffectCaptionsEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplySoundEffectCaptionsEnabled(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplySoundEffectCaptionsEnabled");

	Params::SAVE_Settings_C_ApplySoundEffectCaptionsEnabled Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetSoundEffectCaptionsSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_SmallMediumLarge                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetSoundEffectCaptionsSize(ENUM_SmallMediumLarge NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetSoundEffectCaptionsSize");

	Params::SAVE_Settings_C_SetSoundEffectCaptionsSize Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetSoundEffectCaptionsSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_SmallMediumLarge                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetSoundEffectCaptionsSize(ENUM_SmallMediumLarge* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetSoundEffectCaptionsSize");

	Params::SAVE_Settings_C_GetSoundEffectCaptionsSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplySoundEffectCaptionsSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_SmallMediumLarge                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplySoundEffectCaptionsSize(ENUM_SmallMediumLarge NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplySoundEffectCaptionsSize");

	Params::SAVE_Settings_C_ApplySoundEffectCaptionsSize Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetHUDColorTheme
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetHUDColorTheme(class FName NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetHUDColorTheme");

	Params::SAVE_Settings_C_SetHUDColorTheme Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetHUDColorTheme
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetHUDColorTheme(class FName* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetHUDColorTheme");

	Params::SAVE_Settings_C_GetHUDColorTheme Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyHUDColorTheme
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyHUDColorTheme(class FName NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyHUDColorTheme");

	Params::SAVE_Settings_C_ApplyHUDColorTheme Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetHUDTextSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_SmallMediumLarge                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::SetHUDTextSize(ENUM_SmallMediumLarge NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetHUDTextSize");

	Params::SAVE_Settings_C_SetHUDTextSize Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetHUDTextSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_SmallMediumLarge                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetHUDTextSize(ENUM_SmallMediumLarge* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetHUDTextSize");

	Params::SAVE_Settings_C_GetHUDTextSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyHUDTextSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_SmallMediumLarge                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyHUDTextSize(ENUM_SmallMediumLarge NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyHUDTextSize");

	Params::SAVE_Settings_C_ApplyHUDTextSize Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.InitializeSettingsForHacker
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::InitializeSettingsForHacker(class APAWN_Hacker_Simple_C* PlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "InitializeSettingsForHacker");

	Params::SAVE_Settings_C_InitializeSettingsForHacker Parms{};

	Parms.PlayerPawn = PlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.InitializeSettingsForPlayerHUD
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class IINTERF_HUD_C>   PlayerHUD                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::InitializeSettingsForPlayerHUD(TScriptInterface<class IINTERF_HUD_C> PlayerHUD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "InitializeSettingsForPlayerHUD");

	Params::SAVE_Settings_C_InitializeSettingsForPlayerHUD Parms{};

	Parms.PlayerHUD = PlayerHUD;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetMasterVolumeProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetMasterVolumeProfleValue(const class FString& Culture, const class FString& Platform, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetMasterVolumeProfleValue");

	Params::SAVE_Settings_C_GetMasterVolumeProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetMusicVolumeProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetMusicVolumeProfleValue(const class FString& Culture, const class FString& Platform, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetMusicVolumeProfleValue");

	Params::SAVE_Settings_C_GetMusicVolumeProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetVoiceVolumeProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetVoiceVolumeProfleValue(const class FString& Culture, const class FString& Platform, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetVoiceVolumeProfleValue");

	Params::SAVE_Settings_C_GetVoiceVolumeProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetEffectsVolumeProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetEffectsVolumeProfleValue(const class FString& Culture, const class FString& Platform, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetEffectsVolumeProfleValue");

	Params::SAVE_Settings_C_GetEffectsVolumeProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetEnvironmentVolumeProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetEnvironmentVolumeProfleValue(const class FString& Culture, const class FString& Platform, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetEnvironmentVolumeProfleValue");

	Params::SAVE_Settings_C_GetEnvironmentVolumeProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetAutoPlayMediaLogsProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetAutoPlayMediaLogsProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetAutoPlayMediaLogsProfileValue");

	Params::SAVE_Settings_C_GetAutoPlayMediaLogsProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetAutoRotateMinimapProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetAutoRotateMinimapProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetAutoRotateMinimapProfileValue");

	Params::SAVE_Settings_C_GetAutoRotateMinimapProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetShowTutorialsProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetShowTutorialsProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetShowTutorialsProfileValue");

	Params::SAVE_Settings_C_GetShowTutorialsProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetFocusOnPuzzlesProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetFocusOnPuzzlesProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetFocusOnPuzzlesProfileValue");

	Params::SAVE_Settings_C_GetFocusOnPuzzlesProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetAutoSlotHotbarProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetAutoSlotHotbarProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetAutoSlotHotbarProfileValue");

	Params::SAVE_Settings_C_GetAutoSlotHotbarProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetAutoReloadProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetAutoReloadProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetAutoReloadProfileValue");

	Params::SAVE_Settings_C_GetAutoReloadProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetAimAssistProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetAimAssistProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetAimAssistProfileValue");

	Params::SAVE_Settings_C_GetAimAssistProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetFocusAimToggleProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetFocusAimToggleProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetFocusAimToggleProfileValue");

	Params::SAVE_Settings_C_GetFocusAimToggleProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetCrouchToggleProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetCrouchToggleProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetCrouchToggleProfileValue");

	Params::SAVE_Settings_C_GetCrouchToggleProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetRealspaceLookSensitivityProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetRealspaceLookSensitivityProfileValue(const class FString& Culture, const class FString& Platform, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetRealspaceLookSensitivityProfileValue");

	Params::SAVE_Settings_C_GetRealspaceLookSensitivityProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetRealspaceInvertYProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetRealspaceInvertYProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetRealspaceInvertYProfileValue");

	Params::SAVE_Settings_C_GetRealspaceInvertYProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetCyberspaceLookSensitivityProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetCyberspaceLookSensitivityProfileValue(const class FString& Culture, const class FString& Platform, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetCyberspaceLookSensitivityProfileValue");

	Params::SAVE_Settings_C_GetCyberspaceLookSensitivityProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetCyberspaceInvertYProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetCyberspaceInvertYProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetCyberspaceInvertYProfileValue");

	Params::SAVE_Settings_C_GetCyberspaceInvertYProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyBrightnessForCharacter
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyBrightnessForCharacter(float NewValue, class APAWN_SystemShockCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyBrightnessForCharacter");

	Params::SAVE_Settings_C_ApplyBrightnessForCharacter Parms{};

	Parms.NewValue = NewValue;
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetBrightnessProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsRealspace                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetBrightnessProfileValue(const class FString& Culture, const class FString& Platform, bool IsRealspace, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetBrightnessProfileValue");

	Params::SAVE_Settings_C_GetBrightnessProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);
	Parms.IsRealspace = IsRealspace;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetWindowModeProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EWindowMode                             Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetWindowModeProfileValue(const class FString& Culture, const class FString& Platform, EWindowMode* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetWindowModeProfileValue");

	Params::SAVE_Settings_C_GetWindowModeProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetResolutionProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// struct FIntPoint                        Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetResolutionProfileValue(const class FString& Culture, const class FString& Platform, struct FIntPoint* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetResolutionProfileValue");

	Params::SAVE_Settings_C_GetResolutionProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SAVE_Settings.SAVE_Settings_C.GetResolutionScaleProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetResolutionScaleProfileValue(const class FString& Culture, const class FString& Platform, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetResolutionScaleProfileValue");

	Params::SAVE_Settings_C_GetResolutionScaleProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetEnableHDRProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetEnableHDRProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetEnableHDRProfileValue");

	Params::SAVE_Settings_C_GetEnableHDRProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetEnableMotionBlurProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetEnableMotionBlurProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetEnableMotionBlurProfileValue");

	Params::SAVE_Settings_C_GetEnableMotionBlurProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyFOVForCharacter
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::ApplyFOVForCharacter(float NewValue, class APAWN_SystemShockCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyFOVForCharacter");

	Params::SAVE_Settings_C_ApplyFOVForCharacter Parms{};

	Parms.NewValue = NewValue;
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetFOVProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    IsRealspace                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetFOVProfileValue(const class FString& Culture, const class FString& Platform, bool IsRealspace, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetFOVProfileValue");

	Params::SAVE_Settings_C_GetFOVProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);
	Parms.IsRealspace = IsRealspace;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetEnableVSyncProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetEnableVSyncProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetEnableVSyncProfileValue");

	Params::SAVE_Settings_C_GetEnableVSyncProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetDLSSProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EUDLSSMode                              Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetDLSSProfileValue(const class FString& Culture, const class FString& Platform, EUDLSSMode* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetDLSSProfileValue");

	Params::SAVE_Settings_C_GetDLSSProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetAmbientOcclusionProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_OffLowMediumHigh                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetAmbientOcclusionProfileValue(const class FString& Culture, const class FString& Platform, ENUM_OffLowMediumHigh* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetAmbientOcclusionProfileValue");

	Params::SAVE_Settings_C_GetAmbientOcclusionProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetFogQualityProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetFogQualityProfileValue(const class FString& Culture, const class FString& Platform, ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetFogQualityProfileValue");

	Params::SAVE_Settings_C_GetFogQualityProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetPostProccessingQualityProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetPostProccessingQualityProfileValue(const class FString& Culture, const class FString& Platform, ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetPostProccessingQualityProfileValue");

	Params::SAVE_Settings_C_GetPostProccessingQualityProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetTextureQualityProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetTextureQualityProfileValue(const class FString& Culture, const class FString& Platform, ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetTextureQualityProfileValue");

	Params::SAVE_Settings_C_GetTextureQualityProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetShaderQualityProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetShaderQualityProfileValue(const class FString& Culture, const class FString& Platform, ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetShaderQualityProfileValue");

	Params::SAVE_Settings_C_GetShaderQualityProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetShadowQualityProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetShadowQualityProfileValue(const class FString& Culture, const class FString& Platform, ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetShadowQualityProfileValue");

	Params::SAVE_Settings_C_GetShadowQualityProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetEffectsQualityProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetEffectsQualityProfileValue(const class FString& Culture, const class FString& Platform, ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetEffectsQualityProfileValue");

	Params::SAVE_Settings_C_GetEffectsQualityProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetFoliageQualityProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_QualitySetting                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetFoliageQualityProfileValue(const class FString& Culture, const class FString& Platform, ENUM_QualitySetting* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetFoliageQualityProfileValue");

	Params::SAVE_Settings_C_GetFoliageQualityProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetUIVolumeProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetUIVolumeProfleValue(const class FString& Culture, const class FString& Platform, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetUIVolumeProfleValue");

	Params::SAVE_Settings_C_GetUIVolumeProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetHUDCurvatureProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetHUDCurvatureProfleValue(const class FString& Culture, const class FString& Platform, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetHUDCurvatureProfleValue");

	Params::SAVE_Settings_C_GetHUDCurvatureProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetSubtitlesEnabledProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetSubtitlesEnabledProfleValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetSubtitlesEnabledProfleValue");

	Params::SAVE_Settings_C_GetSubtitlesEnabledProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetLanguageProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Result                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetLanguageProfleValue(const class FString& Culture, const class FString& Platform, class FString* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetLanguageProfleValue");

	Params::SAVE_Settings_C_GetLanguageProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function SAVE_Settings.SAVE_Settings_C.GetHeadbobAmountProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_OffReducedNormal                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetHeadbobAmountProfleValue(const class FString& Culture, const class FString& Platform, ENUM_OffReducedNormal* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetHeadbobAmountProfleValue");

	Params::SAVE_Settings_C_GetHeadbobAmountProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetGoreAmountProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_OffReducedNormal                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetGoreAmountProfleValue(const class FString& Culture, const class FString& Platform, ENUM_OffReducedNormal* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetGoreAmountProfleValue");

	Params::SAVE_Settings_C_GetGoreAmountProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetDismembermentEnabledProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetDismembermentEnabledProfleValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetDismembermentEnabledProfleValue");

	Params::SAVE_Settings_C_GetDismembermentEnabledProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetHUDOpacityProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetHUDOpacityProfleValue(const class FString& Culture, const class FString& Platform, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetHUDOpacityProfleValue");

	Params::SAVE_Settings_C_GetHUDOpacityProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetHotbarStyleProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_HotbarStyle                        Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetHotbarStyleProfleValue(const class FString& Culture, const class FString& Platform, ENUM_HotbarStyle* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetHotbarStyleProfleValue");

	Params::SAVE_Settings_C_GetHotbarStyleProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetSubtitleSizeProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_SmallMediumLarge                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetSubtitleSizeProfleValue(const class FString& Culture, const class FString& Platform, ENUM_SmallMediumLarge* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetSubtitleSizeProfleValue");

	Params::SAVE_Settings_C_GetSubtitleSizeProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetSoundEffectCaptionsEnabledProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetSoundEffectCaptionsEnabledProfleValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetSoundEffectCaptionsEnabledProfleValue");

	Params::SAVE_Settings_C_GetSoundEffectCaptionsEnabledProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetSoundEffectCaptionsSizeProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_SmallMediumLarge                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetSoundEffectCaptionsSizeProfleValue(const class FString& Culture, const class FString& Platform, ENUM_SmallMediumLarge* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetSoundEffectCaptionsSizeProfleValue");

	Params::SAVE_Settings_C_GetSoundEffectCaptionsSizeProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetHUDColorThemeProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetHUDColorThemeProfleValue(const class FString& Culture, const class FString& Platform, class FName* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetHUDColorThemeProfleValue");

	Params::SAVE_Settings_C_GetHUDColorThemeProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetHUDTextSizeProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ENUM_SmallMediumLarge                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::GetHUDTextSizeProfleValue(const class FString& Culture, const class FString& Platform, ENUM_SmallMediumLarge* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetHUDTextSizeProfleValue");

	Params::SAVE_Settings_C_GetHUDTextSizeProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.GetPlatformType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsConsole                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetPlatformType(bool* IsConsole)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetPlatformType");

	Params::SAVE_Settings_C_GetPlatformType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsConsole != nullptr)
		*IsConsole = Parms.IsConsole;
}


// Function SAVE_Settings.SAVE_Settings_C.SetReloadCanUseBatteries
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetReloadCanUseBatteries(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetReloadCanUseBatteries");

	Params::SAVE_Settings_C_SetReloadCanUseBatteries Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetReloadCanUseBatteries
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetReloadCanUseBatteries(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetReloadCanUseBatteries");

	Params::SAVE_Settings_C_GetReloadCanUseBatteries Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyReloadCanUseBatteries
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyReloadCanUseBatteries(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyReloadCanUseBatteries");

	Params::SAVE_Settings_C_ApplyReloadCanUseBatteries Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetReloadCanUseBatteriesProfileValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetReloadCanUseBatteriesProfileValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetReloadCanUseBatteriesProfileValue");

	Params::SAVE_Settings_C_GetReloadCanUseBatteriesProfileValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.InitializeSettingsForCurrentSpace
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     ControlledCharacter                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USAVE_Settings_C::InitializeSettingsForCurrentSpace(class APAWN_SystemShockCharacter_C* ControlledCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "InitializeSettingsForCurrentSpace");

	Params::SAVE_Settings_C_InitializeSettingsForCurrentSpace Parms{};

	Parms.ControlledCharacter = ControlledCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.SetControllerVibrationEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::SetControllerVibrationEnabled(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "SetControllerVibrationEnabled");

	Params::SAVE_Settings_C_SetControllerVibrationEnabled Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetControllerVibrationEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetControllerVibrationEnabled(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetControllerVibrationEnabled");

	Params::SAVE_Settings_C_GetControllerVibrationEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SAVE_Settings.SAVE_Settings_C.ApplyControllerVibrationSetting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::ApplyControllerVibrationSetting(bool NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "ApplyControllerVibrationSetting");

	Params::SAVE_Settings_C_ApplyControllerVibrationSetting Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SAVE_Settings.SAVE_Settings_C.GetControllerVibrationProfleValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Culture                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Platform                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USAVE_Settings_C::GetControllerVibrationProfleValue(const class FString& Culture, const class FString& Platform, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SAVE_Settings_C", "GetControllerVibrationProfleValue");

	Params::SAVE_Settings_C_GetControllerVibrationProfleValue Parms{};

	Parms.Culture = std::move(Culture);
	Parms.Platform = std::move(Platform);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


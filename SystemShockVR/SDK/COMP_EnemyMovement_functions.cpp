#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_EnemyMovement

#include "Basic.hpp"

#include "COMP_EnemyMovement_classes.hpp"
#include "COMP_EnemyMovement_parameters.hpp"


namespace SDK
{

// Function COMP_EnemyMovement.COMP_EnemyMovement_C.OnLocomotionChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsMoving                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::OnLocomotionChanged__DelegateSignature(bool IsMoving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "OnLocomotionChanged__DelegateSignature");

	Params::COMP_EnemyMovement_C_OnLocomotionChanged__DelegateSignature Parms{};

	Parms.IsMoving = IsMoving;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.OnTurningChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTurning                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::OnTurningChanged__DelegateSignature(bool IsTurning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "OnTurningChanged__DelegateSignature");

	Params::COMP_EnemyMovement_C_OnTurningChanged__DelegateSignature Parms{};

	Parms.IsTurning = IsTurning;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.ExecuteUbergraph_COMP_EnemyMovement
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::ExecuteUbergraph_COMP_EnemyMovement(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "ExecuteUbergraph_COMP_EnemyMovement");

	Params::COMP_EnemyMovement_C_ExecuteUbergraph_COMP_EnemyMovement Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "ReceiveTick");

	Params::COMP_EnemyMovement_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetMovePath
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AutoStop                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::SetMovePath(bool AutoStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetMovePath");

	Params::COMP_EnemyMovement_C_SetMovePath Parms{};

	Parms.AutoStop = AutoStop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetBodyTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOBJ_EnemyTarget_C*               Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::SetBodyTarget(class UOBJ_EnemyTarget_C* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetBodyTarget");

	Params::COMP_EnemyMovement_C_SetBodyTarget Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.UpdateMoveSpeed
// (Protected, BlueprintCallable, BlueprintEvent)

void UCOMP_EnemyMovement_C::UpdateMoveSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "UpdateMoveSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetTargetMoveSpeed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_MoveSpeed                          Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_SpeedType                          ChangeRate                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::SetTargetMoveSpeed(ENUM_MoveSpeed Speed, ENUM_SpeedType ChangeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetTargetMoveSpeed");

	Params::COMP_EnemyMovement_C_SetTargetMoveSpeed Parms{};

	Parms.Speed = Speed;
	Parms.ChangeRate = ChangeRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetBodyRotateSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_SpeedType                          RotateSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Changed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::SetBodyRotateSpeed(ENUM_SpeedType RotateSpeed, bool* Changed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetBodyRotateSpeed");

	Params::COMP_EnemyMovement_C_SetBodyRotateSpeed Parms{};

	Parms.RotateSpeed = RotateSpeed;

	UObject::ProcessEvent(Func, &Parms);

	if (Changed != nullptr)
		*Changed = Parms.Changed;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.CanRotateMoveDirectionInstantly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::CanRotateMoveDirectionInstantly(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "CanRotateMoveDirectionInstantly");

	Params::COMP_EnemyMovement_C_CanRotateMoveDirectionInstantly Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetMoveDirection_Current
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetMoveDirection_Current(struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetMoveDirection_Current");

	Params::COMP_EnemyMovement_C_GetMoveDirection_Current Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetMoveDirection_RotationSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_SpeedType                          RotationSpeed                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetMoveDirection_RotationSpeed(ENUM_SpeedType* RotationSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetMoveDirection_RotationSpeed");

	Params::COMP_EnemyMovement_C_GetMoveDirection_RotationSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RotationSpeed != nullptr)
		*RotationSpeed = Parms.RotationSpeed;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetMoveDirection_Current
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          MoveDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::SetMoveDirection_Current(const struct FVector& MoveDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetMoveDirection_Current");

	Params::COMP_EnemyMovement_C_SetMoveDirection_Current Parms{};

	Parms.MoveDirection = std::move(MoveDirection);

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetMoveDirection_RotationSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_SpeedType                          RotationSpeed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Changed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::SetMoveDirection_RotationSpeed(ENUM_SpeedType RotationSpeed, bool* Changed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetMoveDirection_RotationSpeed");

	Params::COMP_EnemyMovement_C_SetMoveDirection_RotationSpeed Parms{};

	Parms.RotationSpeed = RotationSpeed;

	UObject::ProcessEvent(Func, &Parms);

	if (Changed != nullptr)
		*Changed = Parms.Changed;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetTargetMoveSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_MoveSpeed                          MoveSpeed                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_SpeedType                          ChangeRate                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetTargetMoveSpeed(ENUM_MoveSpeed* MoveSpeed, ENUM_SpeedType* ChangeRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetTargetMoveSpeed");

	Params::COMP_EnemyMovement_C_GetTargetMoveSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MoveSpeed != nullptr)
		*MoveSpeed = Parms.MoveSpeed;

	if (ChangeRate != nullptr)
		*ChangeRate = Parms.ChangeRate;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetMoveSpeedValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_MoveSpeed                          MoveSpeed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Speed                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetMoveSpeedValue(ENUM_MoveSpeed MoveSpeed, float* Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetMoveSpeedValue");

	Params::COMP_EnemyMovement_C_GetMoveSpeedValue Parms{};

	Parms.MoveSpeed = MoveSpeed;

	UObject::ProcessEvent(Func, &Parms);

	if (Speed != nullptr)
		*Speed = Parms.Speed;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetBodyTargetType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_TargetType                         TargetType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::SetBodyTargetType(ENUM_TargetType TargetType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetBodyTargetType");

	Params::COMP_EnemyMovement_C_SetBodyTargetType Parms{};

	Parms.TargetType = TargetType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.DebugDrawAll
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_EnemyMovement_C::DebugDrawAll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "DebugDrawAll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetBodyRotationTargetType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_TargetType                         BodyRotationType_0                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetBodyRotationTargetType(ENUM_TargetType* BodyRotationType_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetBodyRotationTargetType");

	Params::COMP_EnemyMovement_C_GetBodyRotationTargetType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BodyRotationType_0 != nullptr)
		*BodyRotationType_0 = Parms.BodyRotationType_0;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetBodyRotateSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_SpeedType                          RotateSpeed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetBodyRotateSpeed(ENUM_SpeedType* RotateSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetBodyRotateSpeed");

	Params::COMP_EnemyMovement_C_GetBodyRotateSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RotateSpeed != nullptr)
		*RotateSpeed = Parms.RotateSpeed;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetBodyDirectionCurrent
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          BodyDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::SetBodyDirectionCurrent(const struct FVector& BodyDirection, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetBodyDirectionCurrent");

	Params::COMP_EnemyMovement_C_SetBodyDirectionCurrent Parms{};

	Parms.BodyDirection = std::move(BodyDirection);
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetBodyDirectionCurrent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    TwoD                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          BodyDirectionCurrent                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetBodyDirectionCurrent(bool TwoD, struct FVector* BodyDirectionCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetBodyDirectionCurrent");

	Params::COMP_EnemyMovement_C_GetBodyDirectionCurrent Parms{};

	Parms.TwoD = TwoD;

	UObject::ProcessEvent(Func, &Parms);

	if (BodyDirectionCurrent != nullptr)
		*BodyDirectionCurrent = std::move(Parms.BodyDirectionCurrent);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetUnscaledMoveSpeedCurrent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   MoveSpeedCurrent                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetUnscaledMoveSpeedCurrent(float* MoveSpeedCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetUnscaledMoveSpeedCurrent");

	Params::COMP_EnemyMovement_C_GetUnscaledMoveSpeedCurrent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MoveSpeedCurrent != nullptr)
		*MoveSpeedCurrent = Parms.MoveSpeedCurrent;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetMoveSpeedCurrent
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   MoveSpeedCurrent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::SetMoveSpeedCurrent(float MoveSpeedCurrent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetMoveSpeedCurrent");

	Params::COMP_EnemyMovement_C_SetMoveSpeedCurrent Parms{};

	Parms.MoveSpeedCurrent = MoveSpeedCurrent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetBodyRotateSpeedValueByType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   BodyRotateSpeed_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetBodyRotateSpeedValueByType(float* BodyRotateSpeed_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetBodyRotateSpeedValueByType");

	Params::COMP_EnemyMovement_C_GetBodyRotateSpeedValueByType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BodyRotateSpeed_0 != nullptr)
		*BodyRotateSpeed_0 = Parms.BodyRotateSpeed_0;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetAcceptanceRadius
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AcceptanceRadius                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::SetAcceptanceRadius(float AcceptanceRadius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetAcceptanceRadius");

	Params::COMP_EnemyMovement_C_SetAcceptanceRadius Parms{};

	Parms.AcceptanceRadius = AcceptanceRadius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetPawn
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APAWN_Enemy_C*                    Pawn_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetPawn(class APAWN_Enemy_C** Pawn_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetPawn");

	Params::COMP_EnemyMovement_C_GetPawn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pawn_0 != nullptr)
		*Pawn_0 = Parms.Pawn_0;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetBodyTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UOBJ_EnemyTarget_C*               Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetBodyTarget(class UOBJ_EnemyTarget_C** Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetBodyTarget");

	Params::COMP_EnemyMovement_C_GetBodyTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Target != nullptr)
		*Target = Parms.Target;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.Reset
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_EnemyMovement_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.UpdateMoveDirection
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::UpdateMoveDirection(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "UpdateMoveDirection");

	Params::COMP_EnemyMovement_C_UpdateMoveDirection Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.UpdateSpeedTransition
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::UpdateSpeedTransition(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "UpdateSpeedTransition");

	Params::COMP_EnemyMovement_C_UpdateSpeedTransition Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.UpdateBodyForward
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::UpdateBodyForward(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "UpdateBodyForward");

	Params::COMP_EnemyMovement_C_UpdateBodyForward Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.ApplyStandardMovement
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::ApplyStandardMovement(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "ApplyStandardMovement");

	Params::COMP_EnemyMovement_C_ApplyStandardMovement Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.ApplyClimbingMovement
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::ApplyClimbingMovement(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "ApplyClimbingMovement");

	Params::COMP_EnemyMovement_C_ApplyClimbingMovement Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetIsAlive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAlive                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::SetIsAlive(bool IsAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetIsAlive");

	Params::COMP_EnemyMovement_C_SetIsAlive Parms{};

	Parms.IsAlive = IsAlive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.Can Move Automatically
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::Can_Move_Automatically(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "Can Move Automatically");

	Params::COMP_EnemyMovement_C_Can_Move_Automatically Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.HasFullPathToTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsValid                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::HasFullPathToTarget(bool* IsValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "HasFullPathToTarget");

	Params::COMP_EnemyMovement_C_HasFullPathToTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsValid != nullptr)
		*IsValid = Parms.IsValid;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetAngleToTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_TargetAssignmentType               Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AngleToTarget                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetAngleToTarget(ENUM_TargetAssignmentType Type, float* AngleToTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetAngleToTarget");

	Params::COMP_EnemyMovement_C_GetAngleToTarget Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);

	if (AngleToTarget != nullptr)
		*AngleToTarget = Parms.AngleToTarget;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetImmediateMoveLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetImmediateMoveLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetImmediateMoveLocation");

	Params::COMP_EnemyMovement_C_GetImmediateMoveLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetImmediateMoveDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetImmediateMoveDirection(struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetImmediateMoveDirection");

	Params::COMP_EnemyMovement_C_GetImmediateMoveDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.TickEnemyMovement
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::TickEnemyMovement(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "TickEnemyMovement");

	Params::COMP_EnemyMovement_C_TickEnemyMovement Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.UpdateEnemyMovement
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::UpdateEnemyMovement(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "UpdateEnemyMovement");

	Params::COMP_EnemyMovement_C_UpdateEnemyMovement Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.InitializeEnemyMovement
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_EnemyMovement_C::InitializeEnemyMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "InitializeEnemyMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.EVENT_OnWalkScaleAttribChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::EVENT_OnWalkScaleAttribChanged(float CurrValue, float LastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "EVENT_OnWalkScaleAttribChanged");

	Params::COMP_EnemyMovement_C_EVENT_OnWalkScaleAttribChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.ResetBodyDirection
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_EnemyMovement_C::ResetBodyDirection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "ResetBodyDirection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.InitializeClimberTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UCOMP_EnemyMovement_C::InitializeClimberTransform()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "InitializeClimberTransform");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetMovementTickInterval
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewInterval                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::SetMovementTickInterval(float NewInterval)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetMovementTickInterval");

	Params::COMP_EnemyMovement_C_SetMovementTickInterval Parms{};

	Parms.NewInterval = NewInterval;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetForceUpdatePath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ForceUpdatePath_0                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::SetForceUpdatePath(bool ForceUpdatePath_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetForceUpdatePath");

	Params::COMP_EnemyMovement_C_SetForceUpdatePath Parms{};

	Parms.ForceUpdatePath_0 = ForceUpdatePath_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetNavigationTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UOBJ_EnemyTarget_C*               Target                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetNavigationTarget(class UOBJ_EnemyTarget_C** Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetNavigationTarget");

	Params::COMP_EnemyMovement_C_GetNavigationTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Target != nullptr)
		*Target = Parms.Target;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetNavigationTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UOBJ_EnemyTarget_C*               Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CreatePath                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::SetNavigationTarget(class UOBJ_EnemyTarget_C* Target, bool CreatePath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetNavigationTarget");

	Params::COMP_EnemyMovement_C_SetNavigationTarget Parms{};

	Parms.Target = Target;
	Parms.CreatePath = CreatePath;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.IsOnVerticalPathSection
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::IsOnVerticalPathSection(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "IsOnVerticalPathSection");

	Params::COMP_EnemyMovement_C_IsOnVerticalPathSection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.IsUsingCustomOrFlyingMovement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    UsingCustomMovement                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::IsUsingCustomOrFlyingMovement(bool* UsingCustomMovement)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "IsUsingCustomOrFlyingMovement");

	Params::COMP_EnemyMovement_C_IsUsingCustomOrFlyingMovement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UsingCustomMovement != nullptr)
		*UsingCustomMovement = Parms.UsingCustomMovement;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.DebugDrawNavPath
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UCOMP_EnemyMovement_C::DebugDrawNavPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "DebugDrawNavPath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.HasReachedDestination
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::HasReachedDestination(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "HasReachedDestination");

	Params::COMP_EnemyMovement_C_HasReachedDestination Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.SetAutoStopEnabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_EnemyMovement_C::SetAutoStopEnabled(bool Enabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "SetAutoStopEnabled");

	Params::COMP_EnemyMovement_C_SetAutoStopEnabled Parms{};

	Parms.Enabled = Enabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.HandleNavObstacles
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UCOMP_EnemyMovement_C::HandleNavObstacles()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "HandleNavObstacles");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_EnemyMovement.COMP_EnemyMovement_C.GetMoveSpeedTurnMultiplier
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Multiplier                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_EnemyMovement_C::GetMoveSpeedTurnMultiplier(float* Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_EnemyMovement_C", "GetMoveSpeedTurnMultiplier");

	Params::COMP_EnemyMovement_C_GetMoveSpeedTurnMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Multiplier != nullptr)
		*Multiplier = Parms.Multiplier;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_CyberDash

#include "Basic.hpp"


namespace SDK::Params
{

// Function ITEM_CyberDash.ITEM_CyberDash_C.UpdateDashPower
// 0x0048 (0x0048 - 0x0000)
struct ITEM_CyberDash_C_UpdateDashPower final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMoving;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpeedScale;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsActivated_Result;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_CyberDash_C_UpdateDashPower) == 0x000004, "Wrong alignment on ITEM_CyberDash_C_UpdateDashPower");
static_assert(sizeof(ITEM_CyberDash_C_UpdateDashPower) == 0x000048, "Wrong size on ITEM_CyberDash_C_UpdateDashPower");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, DeltaTime) == 0x000000, "Member 'ITEM_CyberDash_C_UpdateDashPower::DeltaTime' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, IsMoving) == 0x000004, "Member 'ITEM_CyberDash_C_UpdateDashPower::IsMoving' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, SpeedScale) == 0x000008, "Member 'ITEM_CyberDash_C_UpdateDashPower::SpeedScale' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00000C, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x000018, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_Ease_ReturnValue) == 0x00001C, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_Less_FloatFloat_ReturnValue) == 0x00002C, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_GetIsActivated_Result) == 0x000034, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_GetIsActivated_Result' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000040, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_UpdateDashPower, CallFunc_FMin_ReturnValue) == 0x000044, "Member 'ITEM_CyberDash_C_UpdateDashPower::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function ITEM_CyberDash.ITEM_CyberDash_C.GetOwnerPawn
// 0x0028 (0x0028 - 0x0000)
struct ITEM_CyberDash_C_GetOwnerPawn final
{
public:
	class APAWN_Avatar_C*                         Pawn;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_CyberDash_C_GetOwnerPawn) == 0x000008, "Wrong alignment on ITEM_CyberDash_C_GetOwnerPawn");
static_assert(sizeof(ITEM_CyberDash_C_GetOwnerPawn) == 0x000028, "Wrong size on ITEM_CyberDash_C_GetOwnerPawn");
static_assert(offsetof(ITEM_CyberDash_C_GetOwnerPawn, Pawn) == 0x000000, "Member 'ITEM_CyberDash_C_GetOwnerPawn::Pawn' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_GetOwnerPawn, CallFunc_GetInventory_Inventory) == 0x000008, "Member 'ITEM_CyberDash_C_GetOwnerPawn::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_GetOwnerPawn, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'ITEM_CyberDash_C_GetOwnerPawn::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_GetOwnerPawn, K2Node_DynamicCast_AsPAWN_Avatar) == 0x000018, "Member 'ITEM_CyberDash_C_GetOwnerPawn::K2Node_DynamicCast_AsPAWN_Avatar' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_GetOwnerPawn, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ITEM_CyberDash_C_GetOwnerPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_CyberDash.ITEM_CyberDash_C.GetCurrentDashPowerRatio
// 0x0004 (0x0004 - 0x0000)
struct ITEM_CyberDash_C_GetCurrentDashPowerRatio final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_CyberDash_C_GetCurrentDashPowerRatio) == 0x000004, "Wrong alignment on ITEM_CyberDash_C_GetCurrentDashPowerRatio");
static_assert(sizeof(ITEM_CyberDash_C_GetCurrentDashPowerRatio) == 0x000004, "Wrong size on ITEM_CyberDash_C_GetCurrentDashPowerRatio");
static_assert(offsetof(ITEM_CyberDash_C_GetCurrentDashPowerRatio, Result) == 0x000000, "Member 'ITEM_CyberDash_C_GetCurrentDashPowerRatio::Result' has a wrong offset!");

// Function ITEM_CyberDash.ITEM_CyberDash_C.GetIsActivated
// 0x0001 (0x0001 - 0x0000)
struct ITEM_CyberDash_C_GetIsActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_CyberDash_C_GetIsActivated) == 0x000001, "Wrong alignment on ITEM_CyberDash_C_GetIsActivated");
static_assert(sizeof(ITEM_CyberDash_C_GetIsActivated) == 0x000001, "Wrong size on ITEM_CyberDash_C_GetIsActivated");
static_assert(offsetof(ITEM_CyberDash_C_GetIsActivated, Result) == 0x000000, "Member 'ITEM_CyberDash_C_GetIsActivated::Result' has a wrong offset!");

// Function ITEM_CyberDash.ITEM_CyberDash_C.Activate
// 0x0020 (0x0020 - 0x0000)
struct ITEM_CyberDash_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_AttribManager_C*                  AttribMan;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Activate_Result;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_CyberDash_C_Activate) == 0x000008, "Wrong alignment on ITEM_CyberDash_C_Activate");
static_assert(sizeof(ITEM_CyberDash_C_Activate) == 0x000020, "Wrong size on ITEM_CyberDash_C_Activate");
static_assert(offsetof(ITEM_CyberDash_C_Activate, Character) == 0x000000, "Member 'ITEM_CyberDash_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_Activate, Result) == 0x000008, "Member 'ITEM_CyberDash_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_Activate, AttribMan) == 0x000010, "Member 'ITEM_CyberDash_C_Activate::AttribMan' has a wrong offset!");
static_assert(offsetof(ITEM_CyberDash_C_Activate, CallFunc_Activate_Result) == 0x000018, "Member 'ITEM_CyberDash_C_Activate::CallFunc_Activate_Result' has a wrong offset!");

// Function ITEM_CyberDash.ITEM_CyberDash_C.Deactivate
// 0x0001 (0x0001 - 0x0000)
struct ITEM_CyberDash_C_Deactivate final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_CyberDash_C_Deactivate) == 0x000001, "Wrong alignment on ITEM_CyberDash_C_Deactivate");
static_assert(sizeof(ITEM_CyberDash_C_Deactivate) == 0x000001, "Wrong size on ITEM_CyberDash_C_Deactivate");
static_assert(offsetof(ITEM_CyberDash_C_Deactivate, Result) == 0x000000, "Member 'ITEM_CyberDash_C_Deactivate::Result' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OBJ_EnemyTarget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.Get Target Location
// 0x0070 (0x0070 - 0x0000)
struct OBJ_EnemyTarget_C_Get_Target_Location final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetEventLocation_EventLocation;           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMoveDirection_Current_Direction;       // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OBJ_EnemyTarget_C_Get_Target_Location) == 0x000004, "Wrong alignment on OBJ_EnemyTarget_C_Get_Target_Location");
static_assert(sizeof(OBJ_EnemyTarget_C_Get_Target_Location) == 0x000070, "Wrong size on OBJ_EnemyTarget_C_Get_Target_Location");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Location, Location) == 0x000000, "Member 'OBJ_EnemyTarget_C_Get_Target_Location::Location' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'OBJ_EnemyTarget_C_Get_Target_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Location, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000018, "Member 'OBJ_EnemyTarget_C_Get_Target_Location::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Location, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000024, "Member 'OBJ_EnemyTarget_C_Get_Target_Location::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Location, CallFunc_GetEventLocation_EventLocation) == 0x000030, "Member 'OBJ_EnemyTarget_C_Get_Target_Location::CallFunc_GetEventLocation_EventLocation' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Location, CallFunc_Add_VectorVector_ReturnValue) == 0x00003C, "Member 'OBJ_EnemyTarget_C_Get_Target_Location::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Location, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'OBJ_EnemyTarget_C_Get_Target_Location::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Location, CallFunc_GetMoveDirection_Current_Direction) == 0x00004C, "Member 'OBJ_EnemyTarget_C_Get_Target_Location::CallFunc_GetMoveDirection_Current_Direction' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Location, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000058, "Member 'OBJ_EnemyTarget_C_Get_Target_Location::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Location, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000064, "Member 'OBJ_EnemyTarget_C_Get_Target_Location::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.Get Target Direction
// 0x00D4 (0x00D4 - 0x0000)
struct OBJ_EnemyTarget_C_Get_Target_Direction final
{
public:
	bool                                          TwoD;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Direction;                                         // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetMoveDirection_Current_Direction;       // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue_1;            // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetEventLocation_EventLocation;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OBJ_EnemyTarget_C_Get_Target_Direction) == 0x000004, "Wrong alignment on OBJ_EnemyTarget_C_Get_Target_Direction");
static_assert(sizeof(OBJ_EnemyTarget_C_Get_Target_Direction) == 0x0000D4, "Wrong size on OBJ_EnemyTarget_C_Get_Target_Direction");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, TwoD) == 0x000000, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::TwoD' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, Direction) == 0x000004, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::Direction' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, Temp_float_Variable) == 0x000010, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, Temp_bool_Variable) == 0x000014, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_Vector_Normal2D_ReturnValue) == 0x000018, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000030, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, K2Node_SwitchEnum_CmpSuccess) == 0x00003C, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_GetMoveDirection_Current_Direction) == 0x000040, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_GetMoveDirection_Current_Direction' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_Vector_Normal2D_ReturnValue_1) == 0x00004C, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_Vector_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, Temp_float_Variable_1) == 0x000058, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, Temp_bool_Variable_1) == 0x00005C, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_GetEventLocation_EventLocation) == 0x000060, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_GetEventLocation_EventLocation' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00006C, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000078, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_BreakVector_X) == 0x000084, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_BreakVector_Y) == 0x000088, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_BreakVector_Z) == 0x00008C, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_BreakVector_X_1) == 0x000090, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_BreakVector_Y_1) == 0x000094, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_BreakVector_Z_1) == 0x000098, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, K2Node_Select_Default) == 0x00009C, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, K2Node_Select_Default_1) == 0x0000A0, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_MakeVector_ReturnValue) == 0x0000A4, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_MakeVector_ReturnValue_1) == 0x0000B0, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_Normal_ReturnValue) == 0x0000BC, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_Get_Target_Direction, CallFunc_Normal_ReturnValue_1) == 0x0000C8, "Member 'OBJ_EnemyTarget_C_Get_Target_Direction::CallFunc_Normal_ReturnValue_1' has a wrong offset!");

// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.GetTargetTransform
// 0x0070 (0x0070 - 0x0000)
struct OBJ_EnemyTarget_C_GetTargetTransform final
{
public:
	struct FTransform                             Result;                                            // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(OBJ_EnemyTarget_C_GetTargetTransform) == 0x000010, "Wrong alignment on OBJ_EnemyTarget_C_GetTargetTransform");
static_assert(sizeof(OBJ_EnemyTarget_C_GetTargetTransform) == 0x000070, "Wrong size on OBJ_EnemyTarget_C_GetTargetTransform");
static_assert(offsetof(OBJ_EnemyTarget_C_GetTargetTransform, Result) == 0x000000, "Member 'OBJ_EnemyTarget_C_GetTargetTransform::Result' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_GetTargetTransform, CallFunc_Get_Target_Location_Location) == 0x000030, "Member 'OBJ_EnemyTarget_C_GetTargetTransform::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_GetTargetTransform, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'OBJ_EnemyTarget_C_GetTargetTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.GetTargetFootLocation
// 0x0038 (0x0038 - 0x0000)
struct OBJ_EnemyTarget_C_GetTargetFootLocation final
{
public:
	struct FVector                                NavigationLocation;                                // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetDetectedPawn_Pawn;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetDetectedPawn_Pawn_1;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OBJ_EnemyTarget_C_GetTargetFootLocation) == 0x000008, "Wrong alignment on OBJ_EnemyTarget_C_GetTargetFootLocation");
static_assert(sizeof(OBJ_EnemyTarget_C_GetTargetFootLocation) == 0x000038, "Wrong size on OBJ_EnemyTarget_C_GetTargetFootLocation");
static_assert(offsetof(OBJ_EnemyTarget_C_GetTargetFootLocation, NavigationLocation) == 0x000000, "Member 'OBJ_EnemyTarget_C_GetTargetFootLocation::NavigationLocation' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_GetTargetFootLocation, CallFunc_GetDetectedPawn_Pawn) == 0x000010, "Member 'OBJ_EnemyTarget_C_GetTargetFootLocation::CallFunc_GetDetectedPawn_Pawn' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_GetTargetFootLocation, CallFunc_GetShockAgentLocation_Location) == 0x000018, "Member 'OBJ_EnemyTarget_C_GetTargetFootLocation::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_GetTargetFootLocation, CallFunc_GetDetectedPawn_Pawn_1) == 0x000028, "Member 'OBJ_EnemyTarget_C_GetTargetFootLocation::CallFunc_GetDetectedPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_GetTargetFootLocation, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'OBJ_EnemyTarget_C_GetTargetFootLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_GetTargetFootLocation, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'OBJ_EnemyTarget_C_GetTargetFootLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.GetTargetCharacter
// 0x0018 (0x0018 - 0x0000)
struct OBJ_EnemyTarget_C_GetTargetCharacter final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetDetectedPawn_Pawn;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OBJ_EnemyTarget_C_GetTargetCharacter) == 0x000008, "Wrong alignment on OBJ_EnemyTarget_C_GetTargetCharacter");
static_assert(sizeof(OBJ_EnemyTarget_C_GetTargetCharacter) == 0x000018, "Wrong size on OBJ_EnemyTarget_C_GetTargetCharacter");
static_assert(offsetof(OBJ_EnemyTarget_C_GetTargetCharacter, Character) == 0x000000, "Member 'OBJ_EnemyTarget_C_GetTargetCharacter::Character' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_GetTargetCharacter, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'OBJ_EnemyTarget_C_GetTargetCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_GetTargetCharacter, CallFunc_GetDetectedPawn_Pawn) == 0x000010, "Member 'OBJ_EnemyTarget_C_GetTargetCharacter::CallFunc_GetDetectedPawn_Pawn' has a wrong offset!");

// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.HasRecentlySeenTarget
// 0x001C (0x001C - 0x0000)
struct OBJ_EnemyTarget_C_HasRecentlySeenTarget final
{
public:
	float                                         TimeThreshold;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLastSeenTimestamp_LastSeenTimestamp;   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OBJ_EnemyTarget_C_HasRecentlySeenTarget) == 0x000004, "Wrong alignment on OBJ_EnemyTarget_C_HasRecentlySeenTarget");
static_assert(sizeof(OBJ_EnemyTarget_C_HasRecentlySeenTarget) == 0x00001C, "Wrong size on OBJ_EnemyTarget_C_HasRecentlySeenTarget");
static_assert(offsetof(OBJ_EnemyTarget_C_HasRecentlySeenTarget, TimeThreshold) == 0x000000, "Member 'OBJ_EnemyTarget_C_HasRecentlySeenTarget::TimeThreshold' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_HasRecentlySeenTarget, Result) == 0x000004, "Member 'OBJ_EnemyTarget_C_HasRecentlySeenTarget::Result' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_HasRecentlySeenTarget, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000008, "Member 'OBJ_EnemyTarget_C_HasRecentlySeenTarget::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_HasRecentlySeenTarget, CallFunc_GetLastSeenTimestamp_LastSeenTimestamp) == 0x00000C, "Member 'OBJ_EnemyTarget_C_HasRecentlySeenTarget::CallFunc_GetLastSeenTimestamp_LastSeenTimestamp' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_HasRecentlySeenTarget, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'OBJ_EnemyTarget_C_HasRecentlySeenTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_HasRecentlySeenTarget, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'OBJ_EnemyTarget_C_HasRecentlySeenTarget::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(OBJ_EnemyTarget_C_HasRecentlySeenTarget, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'OBJ_EnemyTarget_C_HasRecentlySeenTarget::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function OBJ_EnemyTarget.OBJ_EnemyTarget_C.SetVector
// 0x000C (0x000C - 0x0000)
struct OBJ_EnemyTarget_C_SetVector final
{
public:
	struct FVector                                NewVector;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OBJ_EnemyTarget_C_SetVector) == 0x000004, "Wrong alignment on OBJ_EnemyTarget_C_SetVector");
static_assert(sizeof(OBJ_EnemyTarget_C_SetVector) == 0x00000C, "Wrong size on OBJ_EnemyTarget_C_SetVector");
static_assert(offsetof(OBJ_EnemyTarget_C_SetVector, NewVector) == 0x000000, "Member 'OBJ_EnemyTarget_C_SetVector::NewVector' has a wrong offset!");

}


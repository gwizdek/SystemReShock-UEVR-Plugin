#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PICKUP_Base

#include "Basic.hpp"

#include "PICKUP_Base_classes.hpp"
#include "PICKUP_Base_parameters.hpp"


namespace SDK
{

// Function PICKUP_Base.PICKUP_Base_C.OnPickedUp__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APICKUP_Base_C*                   PickupActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APICKUP_Base_C::OnPickedUp__DelegateSignature(class APICKUP_Base_C* PickupActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "OnPickedUp__DelegateSignature");

	Params::PICKUP_Base_C_OnPickedUp__DelegateSignature Parms{};

	Parms.PickupActor = PickupActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PICKUP_Base.PICKUP_Base_C.ExecuteUbergraph_PICKUP_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APICKUP_Base_C::ExecuteUbergraph_PICKUP_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "ExecuteUbergraph_PICKUP_Base");

	Params::PICKUP_Base_C_ExecuteUbergraph_PICKUP_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PICKUP_Base.PICKUP_Base_C.BndEvt__PICKUP_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::BndEvt__PICKUP_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "BndEvt__PICKUP_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");

	Params::PICKUP_Base_C_BndEvt__PICKUP_Base_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PICKUP_Base.PICKUP_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APICKUP_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PICKUP_Base.PICKUP_Base_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APICKUP_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PICKUP_Base.PICKUP_Base_C.TryInteract
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractionType                    InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_InteractResults          InteractResults                                        (Parm, OutParm, HasGetValueTypeHash)

void APICKUP_Base_C::TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "TryInteract");

	Params::PICKUP_Base_C_TryInteract Parms{};

	Parms.SourceActor = SourceActor;
	Parms.CursorPrimitive = CursorPrimitive;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractResults != nullptr)
		*InteractResults = std::move(Parms.InteractResults);
}


// Function PICKUP_Base.PICKUP_Base_C.CanPickupItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             FailMessage                                            (Parm, OutParm)

void APICKUP_Base_C::CanPickupItem(bool* Result, class FText* FailMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "CanPickupItem");

	Params::PICKUP_Base_C_CanPickupItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (FailMessage != nullptr)
		*FailMessage = std::move(Parms.FailMessage);
}


// Function PICKUP_Base.PICKUP_Base_C.GetPhysicsPrimitive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              Primitive                                              (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APICKUP_Base_C::GetPhysicsPrimitive(class UPrimitiveComponent** Primitive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "GetPhysicsPrimitive");

	Params::PICKUP_Base_C_GetPhysicsPrimitive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Primitive != nullptr)
		*Primitive = Parms.Primitive;
}


// Function PICKUP_Base.PICKUP_Base_C.GetTargetShape
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UShapeComponent*                  ShapeComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APICKUP_Base_C::GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "GetTargetShape");

	Params::PICKUP_Base_C_GetTargetShape Parms{};

	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);

	if (ShapeComponent != nullptr)
		*ShapeComponent = Parms.ShapeComponent;
}


// Function PICKUP_Base.PICKUP_Base_C.SetItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_Base_C*                     InItem                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APICKUP_Base_C::SetItem(class UITEM_Base_C* InItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "SetItem");

	Params::PICKUP_Base_C_SetItem Parms{};

	Parms.InItem = InItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PICKUP_Base.PICKUP_Base_C.GetItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UITEM_Base_C*                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APICKUP_Base_C::GetItem(class UITEM_Base_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "GetItem");

	Params::PICKUP_Base_C_GetItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.GetItemClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APICKUP_Base_C::GetItemClass(class UClass** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "GetItemClass");

	Params::PICKUP_Base_C_GetItemClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.GetItemCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APICKUP_Base_C::GetItemCount(int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "GetItemCount");

	Params::PICKUP_Base_C_GetItemCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.GetItemDisplayName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Result                                                 (Parm, OutParm)

void APICKUP_Base_C::GetItemDisplayName(class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "GetItemDisplayName");

	Params::PICKUP_Base_C_GetItemDisplayName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function PICKUP_Base.PICKUP_Base_C.HasItemInstance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::HasItemInstance(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "HasItemInstance");

	Params::PICKUP_Base_C_HasItemInstance Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.ShouldGrabItem
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::ShouldGrabItem(class APAWN_SystemShockCharacter_C* Character, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "ShouldGrabItem");

	Params::PICKUP_Base_C_ShouldGrabItem Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.ShouldTryGrantHeroicItem
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::ShouldTryGrantHeroicItem(class APAWN_SystemShockCharacter_C* Character, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "ShouldTryGrantHeroicItem");

	Params::PICKUP_Base_C_ShouldTryGrantHeroicItem Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.ShouldGrantDefaultAttributes
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::ShouldGrantDefaultAttributes(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "ShouldGrantDefaultAttributes");

	Params::PICKUP_Base_C_ShouldGrantDefaultAttributes Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.GenerateUpgradeMessage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Result                                                 (Parm, OutParm)

void APICKUP_Base_C::GenerateUpgradeMessage(class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "GenerateUpgradeMessage");

	Params::PICKUP_Base_C_GenerateUpgradeMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function PICKUP_Base.PICKUP_Base_C.GeneratePickupMessage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Result                                                 (Parm, OutParm)

void APICKUP_Base_C::GeneratePickupMessage(const class FText& Message, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "GeneratePickupMessage");

	Params::PICKUP_Base_C_GeneratePickupMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function PICKUP_Base.PICKUP_Base_C.GetBusyMessage
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Message                                                (Parm, OutParm)

void APICKUP_Base_C::GetBusyMessage(class FText* Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "GetBusyMessage");

	Params::PICKUP_Base_C_GetBusyMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Message != nullptr)
		*Message = std::move(Parms.Message);
}


// Function PICKUP_Base.PICKUP_Base_C.GetRenderIconClassCollection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FObjectClassCollection           Result                                                 (Parm, OutParm, HasGetValueTypeHash)

void APICKUP_Base_C::GetRenderIconClassCollection(struct FObjectClassCollection* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "GetRenderIconClassCollection");

	Params::PICKUP_Base_C_GetRenderIconClassCollection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function PICKUP_Base.PICKUP_Base_C.InitializeAttributes
// (Protected, BlueprintCallable, BlueprintEvent)

void APICKUP_Base_C::InitializeAttributes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "InitializeAttributes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PICKUP_Base.PICKUP_Base_C.OnPrePickup
// (Public, BlueprintCallable, BlueprintEvent)

void APICKUP_Base_C::OnPrePickup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "OnPrePickup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PICKUP_Base.PICKUP_Base_C.OnPickup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::OnPickup(class APAWN_SystemShockCharacter_C* Character, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "OnPickup");

	Params::PICKUP_Base_C_OnPickup Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.GetDefaultDescription
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Result                                                 (Parm, OutParm)

void APICKUP_Base_C::GetDefaultDescription(class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "GetDefaultDescription");

	Params::PICKUP_Base_C_GetDefaultDescription Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function PICKUP_Base.PICKUP_Base_C.TryGrantItem
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::TryGrantItem(class APAWN_SystemShockCharacter_C* Character, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "TryGrantItem");

	Params::PICKUP_Base_C_TryGrantItem Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.TryGrantHeroicItem
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSoftObjectPtr<class UAnimMontage>      Montage                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             FailMessage                                            (Parm, OutParm)

void APICKUP_Base_C::TryGrantHeroicItem(class APAWN_SystemShockCharacter_C* Character, TSoftObjectPtr<class UAnimMontage> Montage, bool* Result, class FText* FailMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "TryGrantHeroicItem");

	Params::PICKUP_Base_C_TryGrantHeroicItem Parms{};

	Parms.Character = Character;
	Parms.Montage = Montage;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (FailMessage != nullptr)
		*FailMessage = std::move(Parms.FailMessage);
}


// Function PICKUP_Base.PICKUP_Base_C.TryGrabItemFromGround
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::TryGrabItemFromGround(class APAWN_SystemShockCharacter_C* Character, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "TryGrabItemFromGround");

	Params::PICKUP_Base_C_TryGrabItemFromGround Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.TryActivateTimedTutorial
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APICKUP_Base_C::TryActivateTimedTutorial(class APAWN_SystemShockCharacter_C* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "TryActivateTimedTutorial");

	Params::PICKUP_Base_C_TryActivateTimedTutorial Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PICKUP_Base.PICKUP_Base_C.TryCompleteGameEvents
// (Public, BlueprintCallable, BlueprintEvent)

void APICKUP_Base_C::TryCompleteGameEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "TryCompleteGameEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PICKUP_Base.PICKUP_Base_C.TryRemoveInventoryLink
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::TryRemoveInventoryLink(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "TryRemoveInventoryLink");

	Params::PICKUP_Base_C_TryRemoveInventoryLink Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.TryInitializeItemInstance
// (Public, BlueprintCallable, BlueprintEvent)

void APICKUP_Base_C::TryInitializeItemInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "TryInitializeItemInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PICKUP_Base.PICKUP_Base_C.TryAttachToParentSocket
// (Public, BlueprintCallable, BlueprintEvent)

void APICKUP_Base_C::TryAttachToParentSocket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "TryAttachToParentSocket");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PICKUP_Base.PICKUP_Base_C.OnUpgradedItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           UpgradeClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           DowngradeClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_UpgradeResult                      UpgradeResult                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APICKUP_Base_C::OnUpgradedItem(class UClass* UpgradeClass, class UClass* DowngradeClass, ENUM_UpgradeResult UpgradeResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "OnUpgradedItem");

	Params::PICKUP_Base_C_OnUpgradedItem Parms{};

	Parms.UpgradeClass = UpgradeClass;
	Parms.DowngradeClass = DowngradeClass;
	Parms.UpgradeResult = UpgradeResult;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PICKUP_Base.PICKUP_Base_C.ShouldSaveActor
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStreamingSaveGameActorParams    Params_0                                               (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool APICKUP_Base_C::ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "ShouldSaveActor");

	Params::PICKUP_Base_C_ShouldSaveActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);

	return Parms.ReturnValue;
}


// Function PICKUP_Base.PICKUP_Base_C.IsTeleporting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::IsTeleporting(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "IsTeleporting");

	Params::PICKUP_Base_C_IsTeleporting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.CanTeleportPickup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::CanTeleportPickup(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "CanTeleportPickup");

	Params::PICKUP_Base_C_CanTeleportPickup Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.EVENT_OnFinishedMaterializingFromTeleport
// (Private, BlueprintCallable, BlueprintEvent)

void APICKUP_Base_C::EVENT_OnFinishedMaterializingFromTeleport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "EVENT_OnFinishedMaterializingFromTeleport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PICKUP_Base.PICKUP_Base_C.UpdatePickupVisibility
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibilityState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::UpdatePickupVisibility(bool VisibilityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "UpdatePickupVisibility");

	Params::PICKUP_Base_C_UpdatePickupVisibility Parms{};

	Parms.VisibilityState = VisibilityState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PICKUP_Base.PICKUP_Base_C.TryTeleportPickup
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   MaterializeDuration                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        SoundCue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNiagaraSystem*                   TeleportFX                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APICKUP_Base_C::TryTeleportPickup(const struct FVector& Location, const struct FRotator& Rotation, float MaterializeDuration, class USoundCue* SoundCue, class UNiagaraSystem* TeleportFX, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "TryTeleportPickup");

	Params::PICKUP_Base_C_TryTeleportPickup Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.MaterializeDuration = MaterializeDuration;
	Parms.SoundCue = SoundCue;
	Parms.TeleportFX = TeleportFX;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function PICKUP_Base.PICKUP_Base_C.UpdateMeshEmissiveStrength
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APICKUP_Base_C::UpdateMeshEmissiveStrength(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "UpdateMeshEmissiveStrength");

	Params::PICKUP_Base_C_UpdateMeshEmissiveStrength Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PICKUP_Base.PICKUP_Base_C.EVENT_OnDisableAttribChanged
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APICKUP_Base_C::EVENT_OnDisableAttribChanged(float CurrValue, float LastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PICKUP_Base_C", "EVENT_OnDisableAttribChanged");

	Params::PICKUP_Base_C_EVENT_OnDisableAttribChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;

	UObject::ProcessEvent(Func, &Parms);
}

}


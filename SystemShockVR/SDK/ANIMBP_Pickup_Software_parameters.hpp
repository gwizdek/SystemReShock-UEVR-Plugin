#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_Pickup_Software

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ANIMBP_Pickup_Software.ANIMBP_Pickup_Software_C.ExecuteUbergraph_ANIMBP_Pickup_Software
// 0x0078 (0x0078 - 0x0000)
struct ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_1;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software) == 0x000004, "Wrong alignment on ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software");
static_assert(sizeof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software) == 0x000078, "Wrong size on ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, EntryPoint) == 0x000000, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::EntryPoint' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_RandomRotator_ReturnValue) == 0x00000C, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x000018, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_RandomFloatInRange_ReturnValue) == 0x000024, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_Multiply_RotatorFloat_ReturnValue_1) == 0x000028, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_Multiply_RotatorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_RandomUnitVector_ReturnValue) == 0x000034, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000040, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000044, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_Add_FloatFloat_ReturnValue) == 0x00005C, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software, CallFunc_ComposeRotators_ReturnValue) == 0x00006C, "Member 'ANIMBP_Pickup_Software_C_ExecuteUbergraph_ANIMBP_Pickup_Software::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function ANIMBP_Pickup_Software.ANIMBP_Pickup_Software_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ANIMBP_Pickup_Software_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ANIMBP_Pickup_Software_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ANIMBP_Pickup_Software_C_BlueprintUpdateAnimation");
static_assert(sizeof(ANIMBP_Pickup_Software_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ANIMBP_Pickup_Software_C_BlueprintUpdateAnimation");
static_assert(offsetof(ANIMBP_Pickup_Software_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ANIMBP_Pickup_Software_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ANIMBP_Pickup_Software.ANIMBP_Pickup_Software_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ANIMBP_Pickup_Software_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ANIMBP_Pickup_Software_C_AnimGraph) == 0x000008, "Wrong alignment on ANIMBP_Pickup_Software_C_AnimGraph");
static_assert(sizeof(ANIMBP_Pickup_Software_C_AnimGraph) == 0x000010, "Wrong size on ANIMBP_Pickup_Software_C_AnimGraph");
static_assert(offsetof(ANIMBP_Pickup_Software_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ANIMBP_Pickup_Software_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}


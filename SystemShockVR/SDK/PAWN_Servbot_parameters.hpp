#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_Servbot

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "ENUM_DeathBlowType_structs.hpp"


namespace SDK::Params
{

// Function PAWN_Servbot.PAWN_ServBot_C.ExecuteUbergraph_PAWN_ServBot
// 0x000C (0x000C - 0x0000)
struct PAWN_ServBot_C_ExecuteUbergraph_PAWN_ServBot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_ServBot_C_ExecuteUbergraph_PAWN_ServBot) == 0x000004, "Wrong alignment on PAWN_ServBot_C_ExecuteUbergraph_PAWN_ServBot");
static_assert(sizeof(PAWN_ServBot_C_ExecuteUbergraph_PAWN_ServBot) == 0x00000C, "Wrong size on PAWN_ServBot_C_ExecuteUbergraph_PAWN_ServBot");
static_assert(offsetof(PAWN_ServBot_C_ExecuteUbergraph_PAWN_ServBot, EntryPoint) == 0x000000, "Member 'PAWN_ServBot_C_ExecuteUbergraph_PAWN_ServBot::EntryPoint' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_ExecuteUbergraph_PAWN_ServBot, CallFunc_MakeLiteralName_ReturnValue) == 0x000004, "Member 'PAWN_ServBot_C_ExecuteUbergraph_PAWN_ServBot::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");

// Function PAWN_Servbot.PAWN_ServBot_C.OnCharacterDied
// 0x00E8 (0x00E8 - 0x0000)
struct PAWN_ServBot_C_OnCharacterDied final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 OtherActor;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_DeathBlowType                            Temp_byte_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnCharacterDied_Result;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_DeathBlowType                            Temp_byte_Variable_1;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVoxelAudioComponent*                   CallFunc_SpawnVoxelSoundAttachedFromClass_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DeathBlowType                            K2Node_Select_Default;                             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Character_C> K2Node_DynamicCast_AsINTERF_ANIM_Character;        // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveDeathBlow_Result;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_SpawnEmitterAttached_ReturnValue;         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_ServBot_C_OnCharacterDied) == 0x000008, "Wrong alignment on PAWN_ServBot_C_OnCharacterDied");
static_assert(sizeof(PAWN_ServBot_C_OnCharacterDied) == 0x0000E8, "Wrong size on PAWN_ServBot_C_OnCharacterDied");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, ImpactData) == 0x000000, "Member 'PAWN_ServBot_C_OnCharacterDied::ImpactData' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, DamageInstance) == 0x000008, "Member 'PAWN_ServBot_C_OnCharacterDied::DamageInstance' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, OtherActor) == 0x000030, "Member 'PAWN_ServBot_C_OnCharacterDied::OtherActor' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, Result) == 0x000038, "Member 'PAWN_ServBot_C_OnCharacterDied::Result' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, Temp_byte_Variable) == 0x000039, "Member 'PAWN_ServBot_C_OnCharacterDied::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_OnCharacterDied_Result) == 0x00003A, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_OnCharacterDied_Result' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, Temp_byte_Variable_1) == 0x00003B, "Member 'PAWN_ServBot_C_OnCharacterDied::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_SpawnVoxelSoundAttachedFromClass_ReturnValue) == 0x000040, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_SpawnVoxelSoundAttachedFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, Temp_bool_Variable) == 0x000048, "Member 'PAWN_ServBot_C_OnCharacterDied::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00004A, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_GetAnimInstance_ReturnValue) == 0x000050, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, K2Node_Select_Default) == 0x000058, "Member 'PAWN_ServBot_C_OnCharacterDied::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, K2Node_DynamicCast_AsINTERF_ANIM_Character) == 0x000060, "Member 'PAWN_ServBot_C_OnCharacterDied::K2Node_DynamicCast_AsINTERF_ANIM_Character' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'PAWN_ServBot_C_OnCharacterDied::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_ReceiveDeathBlow_Result) == 0x000071, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_ReceiveDeathBlow_Result' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_GetActorRightVector_ReturnValue) == 0x000074, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00008C, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_RandomRotator_ReturnValue) == 0x0000A4, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_Normal_ReturnValue) == 0x0000B0, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000BC, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000C8, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000D4, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnCharacterDied, CallFunc_SpawnEmitterAttached_ReturnValue) == 0x0000E0, "Member 'PAWN_ServBot_C_OnCharacterDied::CallFunc_SpawnEmitterAttached_ReturnValue' has a wrong offset!");

// Function PAWN_Servbot.PAWN_ServBot_C.UpdateHoverAudio
// 0x001C (0x001C - 0x0000)
struct PAWN_ServBot_C_UpdateHoverAudio final
{
public:
	struct FVector                                CallFunc_GetLastUpdateVelocity_ReturnValue;        // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_ServBot_C_UpdateHoverAudio) == 0x000004, "Wrong alignment on PAWN_ServBot_C_UpdateHoverAudio");
static_assert(sizeof(PAWN_ServBot_C_UpdateHoverAudio) == 0x00001C, "Wrong size on PAWN_ServBot_C_UpdateHoverAudio");
static_assert(offsetof(PAWN_ServBot_C_UpdateHoverAudio, CallFunc_GetLastUpdateVelocity_ReturnValue) == 0x000000, "Member 'PAWN_ServBot_C_UpdateHoverAudio::CallFunc_GetLastUpdateVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_UpdateHoverAudio, CallFunc_VSize_ReturnValue) == 0x00000C, "Member 'PAWN_ServBot_C_UpdateHoverAudio::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_UpdateHoverAudio, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'PAWN_ServBot_C_UpdateHoverAudio::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_UpdateHoverAudio, CallFunc_FMin_ReturnValue) == 0x000014, "Member 'PAWN_ServBot_C_UpdateHoverAudio::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_UpdateHoverAudio, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'PAWN_ServBot_C_UpdateHoverAudio::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function PAWN_Servbot.PAWN_ServBot_C.InitializeCharacterAsDead
// 0x0002 (0x0002 - 0x0000)
struct PAWN_ServBot_C_InitializeCharacterAsDead final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeCharacterAsDead_Result;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_ServBot_C_InitializeCharacterAsDead) == 0x000001, "Wrong alignment on PAWN_ServBot_C_InitializeCharacterAsDead");
static_assert(sizeof(PAWN_ServBot_C_InitializeCharacterAsDead) == 0x000002, "Wrong size on PAWN_ServBot_C_InitializeCharacterAsDead");
static_assert(offsetof(PAWN_ServBot_C_InitializeCharacterAsDead, Result) == 0x000000, "Member 'PAWN_ServBot_C_InitializeCharacterAsDead::Result' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_InitializeCharacterAsDead, CallFunc_InitializeCharacterAsDead_Result) == 0x000001, "Member 'PAWN_ServBot_C_InitializeCharacterAsDead::CallFunc_InitializeCharacterAsDead_Result' has a wrong offset!");

// Function PAWN_Servbot.PAWN_ServBot_C.InitializeCharacter
// 0x000C (0x000C - 0x0000)
struct PAWN_ServBot_C_InitializeCharacter final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnemyAware_Result;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeCharacter_Result;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_ServBot_C_InitializeCharacter) == 0x000004, "Wrong alignment on PAWN_ServBot_C_InitializeCharacter");
static_assert(sizeof(PAWN_ServBot_C_InitializeCharacter) == 0x00000C, "Wrong size on PAWN_ServBot_C_InitializeCharacter");
static_assert(offsetof(PAWN_ServBot_C_InitializeCharacter, Result) == 0x000000, "Member 'PAWN_ServBot_C_InitializeCharacter::Result' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_InitializeCharacter, CallFunc_RandomFloat_ReturnValue) == 0x000004, "Member 'PAWN_ServBot_C_InitializeCharacter::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_InitializeCharacter, CallFunc_IsEnemyAware_Result) == 0x000008, "Member 'PAWN_ServBot_C_InitializeCharacter::CallFunc_IsEnemyAware_Result' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_InitializeCharacter, CallFunc_InitializeCharacter_Result) == 0x000009, "Member 'PAWN_ServBot_C_InitializeCharacter::CallFunc_InitializeCharacter_Result' has a wrong offset!");

// Function PAWN_Servbot.PAWN_ServBot_C.OnDynaDamage
// 0x00B0 (0x00B0 - 0x0000)
struct PAWN_ServBot_C_OnDynaDamage final
{
public:
	class FName                                   DynaElement;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnBeginPlay;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByIndex_Bag;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITEM_Base_C*>                   CallFunc_GetItemArray_Items;                       // 0x0088(0x0010)(ReferenceParm)
	class UITEM_Base_C*                           CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryDropItem_Result;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_ServBot_C_OnDynaDamage) == 0x000010, "Wrong alignment on PAWN_ServBot_C_OnDynaDamage");
static_assert(sizeof(PAWN_ServBot_C_OnDynaDamage) == 0x0000B0, "Wrong size on PAWN_ServBot_C_OnDynaDamage");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, DynaElement) == 0x000000, "Member 'PAWN_ServBot_C_OnDynaDamage::DynaElement' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, OnBeginPlay) == 0x000008, "Member 'PAWN_ServBot_C_OnDynaDamage::OnBeginPlay' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'PAWN_ServBot_C_OnDynaDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PAWN_ServBot_C_OnDynaDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000019, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00001A, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_GetForwardVector_ReturnValue) == 0x000050, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_GetInventoryComponent_Inventory) == 0x000060, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000068, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_GetBagByIndex_Bag) == 0x000078, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_GetBagByIndex_Bag' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_MakeLiteralName_ReturnValue) == 0x000080, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_GetItemArray_Items) == 0x000088, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_GetItemArray_Items' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_Array_Get_Item) == 0x000098, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_TryDropItem_Result) == 0x0000A0, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_TryDropItem_Result' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_Array_Length_ReturnValue) == 0x0000A4, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnDynaDamage, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'PAWN_ServBot_C_OnDynaDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PAWN_Servbot.PAWN_ServBot_C.OnEnemyAwarenessChanged
// 0x0003 (0x0003 - 0x0000)
struct PAWN_ServBot_C_OnEnemyAwarenessChanged final
{
public:
	bool                                          CallFunc_IsLowFiVisibilityEnabled_Result;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyAware_Result;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_ServBot_C_OnEnemyAwarenessChanged) == 0x000001, "Wrong alignment on PAWN_ServBot_C_OnEnemyAwarenessChanged");
static_assert(sizeof(PAWN_ServBot_C_OnEnemyAwarenessChanged) == 0x000003, "Wrong size on PAWN_ServBot_C_OnEnemyAwarenessChanged");
static_assert(offsetof(PAWN_ServBot_C_OnEnemyAwarenessChanged, CallFunc_IsLowFiVisibilityEnabled_Result) == 0x000000, "Member 'PAWN_ServBot_C_OnEnemyAwarenessChanged::CallFunc_IsLowFiVisibilityEnabled_Result' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnEnemyAwarenessChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_ServBot_C_OnEnemyAwarenessChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_OnEnemyAwarenessChanged, CallFunc_IsEnemyAware_Result) == 0x000002, "Member 'PAWN_ServBot_C_OnEnemyAwarenessChanged::CallFunc_IsEnemyAware_Result' has a wrong offset!");

// Function PAWN_Servbot.PAWN_ServBot_C.SetLowFiVisibilityState
// 0x0005 (0x0005 - 0x0000)
struct PAWN_ServBot_C_SetLowFiVisibilityState final
{
public:
	bool                                          NewLowFiState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnemyAware_Result;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_ServBot_C_SetLowFiVisibilityState) == 0x000001, "Wrong alignment on PAWN_ServBot_C_SetLowFiVisibilityState");
static_assert(sizeof(PAWN_ServBot_C_SetLowFiVisibilityState) == 0x000005, "Wrong size on PAWN_ServBot_C_SetLowFiVisibilityState");
static_assert(offsetof(PAWN_ServBot_C_SetLowFiVisibilityState, NewLowFiState) == 0x000000, "Member 'PAWN_ServBot_C_SetLowFiVisibilityState::NewLowFiState' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_SetLowFiVisibilityState, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PAWN_ServBot_C_SetLowFiVisibilityState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_SetLowFiVisibilityState, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PAWN_ServBot_C_SetLowFiVisibilityState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_SetLowFiVisibilityState, CallFunc_IsEnemyAware_Result) == 0x000003, "Member 'PAWN_ServBot_C_SetLowFiVisibilityState::CallFunc_IsEnemyAware_Result' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_SetLowFiVisibilityState, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'PAWN_ServBot_C_SetLowFiVisibilityState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function PAWN_Servbot.PAWN_ServBot_C.SetCharacterPropertiesToDead
// 0x0002 (0x0002 - 0x0000)
struct PAWN_ServBot_C_SetCharacterPropertiesToDead final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCharacterPropertiesToDead_Result;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_ServBot_C_SetCharacterPropertiesToDead) == 0x000001, "Wrong alignment on PAWN_ServBot_C_SetCharacterPropertiesToDead");
static_assert(sizeof(PAWN_ServBot_C_SetCharacterPropertiesToDead) == 0x000002, "Wrong size on PAWN_ServBot_C_SetCharacterPropertiesToDead");
static_assert(offsetof(PAWN_ServBot_C_SetCharacterPropertiesToDead, Result) == 0x000000, "Member 'PAWN_ServBot_C_SetCharacterPropertiesToDead::Result' has a wrong offset!");
static_assert(offsetof(PAWN_ServBot_C_SetCharacterPropertiesToDead, CallFunc_SetCharacterPropertiesToDead_Result) == 0x000001, "Member 'PAWN_ServBot_C_SetCharacterPropertiesToDead::CallFunc_SetCharacterPropertiesToDead_Result' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PATCH_ReflexAid

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PATCH_ReflexAid.PATCH_ReflexAid_C.GetEffects
// 0x0110 (0x0110 - 0x0000)
struct PATCH_ReflexAid_C_GetEffects final
{
public:
	class FText                                   EffectsText;                                       // 0x0000(0x0018)(Parm, OutParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_ShouldShowDetailedEffects_Result;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0030(0x0018)()
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00F8(0x0018)()
};
static_assert(alignof(PATCH_ReflexAid_C_GetEffects) == 0x000008, "Wrong alignment on PATCH_ReflexAid_C_GetEffects");
static_assert(sizeof(PATCH_ReflexAid_C_GetEffects) == 0x000110, "Wrong size on PATCH_ReflexAid_C_GetEffects");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, EffectsText) == 0x000000, "Member 'PATCH_ReflexAid_C_GetEffects::EffectsText' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, K2Node_MakeArray_Array) == 0x000018, "Member 'PATCH_ReflexAid_C_GetEffects::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, CallFunc_ShouldShowDetailedEffects_Result) == 0x000028, "Member 'PATCH_ReflexAid_C_GetEffects::CallFunc_ShouldShowDetailedEffects_Result' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, CallFunc_Format_ReturnValue) == 0x000030, "Member 'PATCH_ReflexAid_C_GetEffects::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'PATCH_ReflexAid_C_GetEffects::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00004C, "Member 'PATCH_ReflexAid_C_GetEffects::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000050, "Member 'PATCH_ReflexAid_C_GetEffects::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000054, "Member 'PATCH_ReflexAid_C_GetEffects::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, CallFunc_Round_ReturnValue) == 0x000058, "Member 'PATCH_ReflexAid_C_GetEffects::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x00005C, "Member 'PATCH_ReflexAid_C_GetEffects::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'PATCH_ReflexAid_C_GetEffects::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, CallFunc_Round_ReturnValue_1) == 0x0000A0, "Member 'PATCH_ReflexAid_C_GetEffects::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A8, "Member 'PATCH_ReflexAid_C_GetEffects::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, K2Node_MakeArray_Array_1) == 0x0000E8, "Member 'PATCH_ReflexAid_C_GetEffects::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetEffects, CallFunc_Format_ReturnValue_1) == 0x0000F8, "Member 'PATCH_ReflexAid_C_GetEffects::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function PATCH_ReflexAid.PATCH_ReflexAid_C.GetSideEffects
// 0x0048 (0x0048 - 0x0000)
struct PATCH_ReflexAid_C_GetSideEffects final
{
public:
	class FText                                   SideEffectsText;                                   // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_TextToLower_ReturnValue;                  // 0x0018(0x0018)()
	class FText                                   CallFunc_GetDefaultPatchSideEffectText_Result;     // 0x0030(0x0018)()
};
static_assert(alignof(PATCH_ReflexAid_C_GetSideEffects) == 0x000008, "Wrong alignment on PATCH_ReflexAid_C_GetSideEffects");
static_assert(sizeof(PATCH_ReflexAid_C_GetSideEffects) == 0x000048, "Wrong size on PATCH_ReflexAid_C_GetSideEffects");
static_assert(offsetof(PATCH_ReflexAid_C_GetSideEffects, SideEffectsText) == 0x000000, "Member 'PATCH_ReflexAid_C_GetSideEffects::SideEffectsText' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetSideEffects, CallFunc_TextToLower_ReturnValue) == 0x000018, "Member 'PATCH_ReflexAid_C_GetSideEffects::CallFunc_TextToLower_ReturnValue' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetSideEffects, CallFunc_GetDefaultPatchSideEffectText_Result) == 0x000030, "Member 'PATCH_ReflexAid_C_GetSideEffects::CallFunc_GetDefaultPatchSideEffectText_Result' has a wrong offset!");

// Function PATCH_ReflexAid.PATCH_ReflexAid_C.GetDuration
// 0x0038 (0x0038 - 0x0000)
struct PATCH_ReflexAid_C_GetDuration final
{
public:
	class FText                                   DurationText;                                      // 0x0000(0x0018)(Parm, OutParm)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDefaultPatchDurationText_Text;         // 0x0020(0x0018)()
};
static_assert(alignof(PATCH_ReflexAid_C_GetDuration) == 0x000008, "Wrong alignment on PATCH_ReflexAid_C_GetDuration");
static_assert(sizeof(PATCH_ReflexAid_C_GetDuration) == 0x000038, "Wrong size on PATCH_ReflexAid_C_GetDuration");
static_assert(offsetof(PATCH_ReflexAid_C_GetDuration, DurationText) == 0x000000, "Member 'PATCH_ReflexAid_C_GetDuration::DurationText' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetDuration, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'PATCH_ReflexAid_C_GetDuration::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetDuration, CallFunc_Round_ReturnValue) == 0x00001C, "Member 'PATCH_ReflexAid_C_GetDuration::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_GetDuration, CallFunc_GetDefaultPatchDurationText_Text) == 0x000020, "Member 'PATCH_ReflexAid_C_GetDuration::CallFunc_GetDefaultPatchDurationText_Text' has a wrong offset!");

// Function PATCH_ReflexAid.PATCH_ReflexAid_C.UseConsumable
// 0x0028 (0x0028 - 0x0000)
struct PATCH_ReflexAid_C_UseConsumable final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 ConsumedItem;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 CallFunc_UseConsumable_ConsumedItem;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue_1;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PATCH_ReflexAid_C_UseConsumable) == 0x000008, "Wrong alignment on PATCH_ReflexAid_C_UseConsumable");
static_assert(sizeof(PATCH_ReflexAid_C_UseConsumable) == 0x000028, "Wrong size on PATCH_ReflexAid_C_UseConsumable");
static_assert(offsetof(PATCH_ReflexAid_C_UseConsumable, Character) == 0x000000, "Member 'PATCH_ReflexAid_C_UseConsumable::Character' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_UseConsumable, ConsumedItem) == 0x000008, "Member 'PATCH_ReflexAid_C_UseConsumable::ConsumedItem' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_UseConsumable, CallFunc_ApplyMod_ReturnValue) == 0x000010, "Member 'PATCH_ReflexAid_C_UseConsumable::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_UseConsumable, CallFunc_UseConsumable_ConsumedItem) == 0x000018, "Member 'PATCH_ReflexAid_C_UseConsumable::CallFunc_UseConsumable_ConsumedItem' has a wrong offset!");
static_assert(offsetof(PATCH_ReflexAid_C_UseConsumable, CallFunc_ApplyMod_ReturnValue_1) == 0x000020, "Member 'PATCH_ReflexAid_C_UseConsumable::CallFunc_ApplyMod_ReturnValue_1' has a wrong offset!");

}


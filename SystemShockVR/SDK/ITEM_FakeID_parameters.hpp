#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_FakeID

#include "Basic.hpp"


namespace SDK::Params
{

// Function ITEM_FakeID.ITEM_FakeID_C.IsActivatable
// 0x0001 (0x0001 - 0x0000)
struct ITEM_FakeID_C_IsActivatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_FakeID_C_IsActivatable) == 0x000001, "Wrong alignment on ITEM_FakeID_C_IsActivatable");
static_assert(sizeof(ITEM_FakeID_C_IsActivatable) == 0x000001, "Wrong size on ITEM_FakeID_C_IsActivatable");
static_assert(offsetof(ITEM_FakeID_C_IsActivatable, Result) == 0x000000, "Member 'ITEM_FakeID_C_IsActivatable::Result' has a wrong offset!");

// Function ITEM_FakeID.ITEM_FakeID_C.Activate
// 0x0038 (0x0038 - 0x0000)
struct ITEM_FakeID_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Activate_Result;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DestroyItem_Result;                       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_FakeID_C_Activate) == 0x000008, "Wrong alignment on ITEM_FakeID_C_Activate");
static_assert(sizeof(ITEM_FakeID_C_Activate) == 0x000038, "Wrong size on ITEM_FakeID_C_Activate");
static_assert(offsetof(ITEM_FakeID_C_Activate, Character) == 0x000000, "Member 'ITEM_FakeID_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_FakeID_C_Activate, Result) == 0x000008, "Member 'ITEM_FakeID_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_FakeID_C_Activate, CallFunc_GetInventory_Inventory) == 0x000010, "Member 'ITEM_FakeID_C_Activate::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_FakeID_C_Activate, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'ITEM_FakeID_C_Activate::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_FakeID_C_Activate, CallFunc_Activate_Result) == 0x000020, "Member 'ITEM_FakeID_C_Activate::CallFunc_Activate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_FakeID_C_Activate, K2Node_DynamicCast_AsPAWN_Avatar) == 0x000028, "Member 'ITEM_FakeID_C_Activate::K2Node_DynamicCast_AsPAWN_Avatar' has a wrong offset!");
static_assert(offsetof(ITEM_FakeID_C_Activate, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ITEM_FakeID_C_Activate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_FakeID_C_Activate, CallFunc_DestroyItem_Result) == 0x000031, "Member 'ITEM_FakeID_C_Activate::CallFunc_DestroyItem_Result' has a wrong offset!");

}


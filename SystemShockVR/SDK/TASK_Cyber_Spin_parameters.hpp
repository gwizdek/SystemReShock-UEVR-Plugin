#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_Cyber_Spin

#include "Basic.hpp"


namespace SDK::Params
{

// Function TASK_Cyber_Spin.TASK_Cyber_Spin_C.ExecuteUbergraph_TASK_Cyber_Spin
// 0x0040 (0x0040 - 0x0000)
struct TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_CyberEnemy_C*                     K2Node_DynamicCast_AsPAWN_Cyber_Enemy;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OwnerActor;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin) == 0x000008, "Wrong alignment on TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin");
static_assert(sizeof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin) == 0x000040, "Wrong size on TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin");
static_assert(offsetof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin, EntryPoint) == 0x000000, "Member 'TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin::EntryPoint' has a wrong offset!");
static_assert(offsetof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin, K2Node_Event_OwnerController) == 0x000008, "Member 'TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin, K2Node_Event_ControlledPawn) == 0x000010, "Member 'TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin, K2Node_DynamicCast_AsPAWN_Cyber_Enemy) == 0x000018, "Member 'TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin::K2Node_DynamicCast_AsPAWN_Cyber_Enemy' has a wrong offset!");
static_assert(offsetof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin, CallFunc_RandomBool_ReturnValue) == 0x000021, "Member 'TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin, CallFunc_SelectFloat_ReturnValue) == 0x000024, "Member 'TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin, CallFunc_Not_PreBool_ReturnValue) == 0x00002C, "Member 'TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin, K2Node_Event_OwnerActor) == 0x000030, "Member 'TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin::K2Node_Event_OwnerActor' has a wrong offset!");
static_assert(offsetof(TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin, K2Node_Event_DeltaSeconds) == 0x000038, "Member 'TASK_Cyber_Spin_C_ExecuteUbergraph_TASK_Cyber_Spin::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function TASK_Cyber_Spin.TASK_Cyber_Spin_C.ReceiveTick
// 0x0010 (0x0010 - 0x0000)
struct TASK_Cyber_Spin_C_ReceiveTick final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TASK_Cyber_Spin_C_ReceiveTick) == 0x000008, "Wrong alignment on TASK_Cyber_Spin_C_ReceiveTick");
static_assert(sizeof(TASK_Cyber_Spin_C_ReceiveTick) == 0x000010, "Wrong size on TASK_Cyber_Spin_C_ReceiveTick");
static_assert(offsetof(TASK_Cyber_Spin_C_ReceiveTick, OwnerActor) == 0x000000, "Member 'TASK_Cyber_Spin_C_ReceiveTick::OwnerActor' has a wrong offset!");
static_assert(offsetof(TASK_Cyber_Spin_C_ReceiveTick, DeltaSeconds) == 0x000008, "Member 'TASK_Cyber_Spin_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function TASK_Cyber_Spin.TASK_Cyber_Spin_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct TASK_Cyber_Spin_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TASK_Cyber_Spin_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on TASK_Cyber_Spin_C_ReceiveExecuteAI");
static_assert(sizeof(TASK_Cyber_Spin_C_ReceiveExecuteAI) == 0x000010, "Wrong size on TASK_Cyber_Spin_C_ReceiveExecuteAI");
static_assert(offsetof(TASK_Cyber_Spin_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'TASK_Cyber_Spin_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(TASK_Cyber_Spin_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'TASK_Cyber_Spin_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}


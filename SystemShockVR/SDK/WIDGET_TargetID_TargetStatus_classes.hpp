#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_TargetID_TargetStatus

#include "Basic.hpp"

#include "ENUM_MeshColor_structs.hpp"
#include "ENUM_TargetID_TargetStatus_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_TargetID_TargetStatus.WIDGET_TargetID_TargetStatus_C
// 0x0028 (0x0288 - 0x0260)
class UWIDGET_TargetID_TargetStatus_C final : public UUserWidget
{
public:
	class UGridMeshWidget*                        MESH_TargetStatusBox;                              // 0x0260(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_TargetStatus;                                 // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	ENUM_TargetID_TargetStatus                    CurrentStatus;                                     // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x3];                                      // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScramblingTime;                                    // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FColor>                         StatusStateColours;                                // 0x0278(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void EVENT_OnHackingProgressChanged(float HackingProgress);
	void GetCurrentStatus(ENUM_TargetID_TargetStatus* Result);
	void UpdateTargetStatus(ENUM_TargetID_TargetStatus TargetIDState);
	void ScrambleTarget();
	void SetHackingEventBindings(class UHARDWARE_TargetIdentifier_Base_C* TargetIdenfitierItem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_TargetID_TargetStatus_C">();
	}
	static class UWIDGET_TargetID_TargetStatus_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_TargetID_TargetStatus_C>();
	}
};
static_assert(alignof(UWIDGET_TargetID_TargetStatus_C) == 0x000008, "Wrong alignment on UWIDGET_TargetID_TargetStatus_C");
static_assert(sizeof(UWIDGET_TargetID_TargetStatus_C) == 0x000288, "Wrong size on UWIDGET_TargetID_TargetStatus_C");
static_assert(offsetof(UWIDGET_TargetID_TargetStatus_C, MESH_TargetStatusBox) == 0x000260, "Member 'UWIDGET_TargetID_TargetStatus_C::MESH_TargetStatusBox' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetStatus_C, TEXT_TargetStatus) == 0x000268, "Member 'UWIDGET_TargetID_TargetStatus_C::TEXT_TargetStatus' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetStatus_C, CurrentStatus) == 0x000270, "Member 'UWIDGET_TargetID_TargetStatus_C::CurrentStatus' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetStatus_C, ScramblingTime) == 0x000274, "Member 'UWIDGET_TargetID_TargetStatus_C::ScramblingTime' has a wrong offset!");
static_assert(offsetof(UWIDGET_TargetID_TargetStatus_C, StatusStateColours) == 0x000278, "Member 'UWIDGET_TargetID_TargetStatus_C::StatusStateColours' has a wrong offset!");

}


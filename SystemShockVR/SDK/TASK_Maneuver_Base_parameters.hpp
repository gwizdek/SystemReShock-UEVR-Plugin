#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_Maneuver_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function TASK_Maneuver_Base.TASK_Maneuver_Base_C.ExecuteUbergraph_TASK_Maneuver_Base
// 0x0028 (0x0028 - 0x0000)
struct TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base) == 0x000008, "Wrong alignment on TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base");
static_assert(sizeof(TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base) == 0x000028, "Wrong size on TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base");
static_assert(offsetof(TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base, EntryPoint) == 0x000000, "Member 'TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base, K2Node_Event_OwnerController) == 0x000008, "Member 'TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base, K2Node_Event_ControlledPawn) == 0x000010, "Member 'TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000018, "Member 'TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'TASK_Maneuver_Base_C_ExecuteUbergraph_TASK_Maneuver_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function TASK_Maneuver_Base.TASK_Maneuver_Base_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct TASK_Maneuver_Base_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TASK_Maneuver_Base_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on TASK_Maneuver_Base_C_ReceiveExecuteAI");
static_assert(sizeof(TASK_Maneuver_Base_C_ReceiveExecuteAI) == 0x000010, "Wrong size on TASK_Maneuver_Base_C_ReceiveExecuteAI");
static_assert(offsetof(TASK_Maneuver_Base_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'TASK_Maneuver_Base_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'TASK_Maneuver_Base_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function TASK_Maneuver_Base.TASK_Maneuver_Base_C.EVENT_OnQueryFinished
// 0x0090 (0x0090 - 0x0000)
struct TASK_Maneuver_Base_C_EVENT_OnQueryFinished final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector4>                       WeightedWorldLocations;                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                WorldLocation;                                     // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector4ToVector_ReturnValue;         // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnLocationFound_Result;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryPathToSpatialQueryLocation_ReturnValue; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_SpawnObject_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished) == 0x000010, "Wrong alignment on TASK_Maneuver_Base_C_EVENT_OnQueryFinished");
static_assert(sizeof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished) == 0x000090, "Wrong size on TASK_Maneuver_Base_C_EVENT_OnQueryFinished");
static_assert(offsetof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished, bResult) == 0x000000, "Member 'TASK_Maneuver_Base_C_EVENT_OnQueryFinished::bResult' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished, WeightedWorldLocations) == 0x000008, "Member 'TASK_Maneuver_Base_C_EVENT_OnQueryFinished::WeightedWorldLocations' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished, WorldLocation) == 0x000018, "Member 'TASK_Maneuver_Base_C_EVENT_OnQueryFinished::WorldLocation' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished, CallFunc_Array_Get_Item) == 0x000030, "Member 'TASK_Maneuver_Base_C_EVENT_OnQueryFinished::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished, CallFunc_Conv_Vector4ToVector_ReturnValue) == 0x000040, "Member 'TASK_Maneuver_Base_C_EVENT_OnQueryFinished::CallFunc_Conv_Vector4ToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished, CallFunc_OnLocationFound_Result) == 0x00004C, "Member 'TASK_Maneuver_Base_C_EVENT_OnQueryFinished::CallFunc_OnLocationFound_Result' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished, CallFunc_GetDisplayName_ReturnValue) == 0x000050, "Member 'TASK_Maneuver_Base_C_EVENT_OnQueryFinished::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'TASK_Maneuver_Base_C_EVENT_OnQueryFinished::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished, CallFunc_TryPathToSpatialQueryLocation_ReturnValue) == 0x000070, "Member 'TASK_Maneuver_Base_C_EVENT_OnQueryFinished::CallFunc_TryPathToSpatialQueryLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished, CallFunc_SpawnObject_ReturnValue) == 0x000078, "Member 'TASK_Maneuver_Base_C_EVENT_OnQueryFinished::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_EVENT_OnQueryFinished, CallFunc_MakeLiteralByte_ReturnValue) == 0x000080, "Member 'TASK_Maneuver_Base_C_EVENT_OnQueryFinished::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");

// Function TASK_Maneuver_Base.TASK_Maneuver_Base_C.DrawWeightedLocations
// 0x0170 (0x0170 - 0x0000)
struct TASK_Maneuver_Base_C_DrawWeightedLocations final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector4>                       WeightedWorldLocations;                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         WeightPower;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SkipValue;                                         // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentWeight;                                     // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LowestWeight;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HighestWeight;                                     // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndex;                                         // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               WeightedLocation;                                  // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_X;                           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Y;                           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Z;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_W;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector4>                       CallFunc_GetWeightedLocations_ReturnValue;         // 0x00B8(0x0010)(ReferenceParm)
	uint8                                         Pad_C8[0x8];                                       // 0x00C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_Array_Get_Item;                           // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector4>                       CallFunc_GetWeightedLocations_ReturnValue_1;       // 0x00E0(0x0010)(ReferenceParm)
	struct FVector4                               CallFunc_Array_Get_Item_1;                         // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_X_1;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Y_1;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Z_1;                         // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_W_1;                         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector4>                       CallFunc_GetWeightedLocations_ReturnValue_2;       // 0x0120(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_X_2;                         // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Y_2;                         // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Z_2;                         // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_W_2;                         // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector4ToVector_ReturnValue;         // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TASK_Maneuver_Base_C_DrawWeightedLocations) == 0x000010, "Wrong alignment on TASK_Maneuver_Base_C_DrawWeightedLocations");
static_assert(sizeof(TASK_Maneuver_Base_C_DrawWeightedLocations) == 0x000170, "Wrong size on TASK_Maneuver_Base_C_DrawWeightedLocations");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, Result) == 0x000000, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::Result' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, WeightedWorldLocations) == 0x000008, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::WeightedWorldLocations' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, WeightPower) == 0x000018, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::WeightPower' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CurrentIndex) == 0x00001C, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CurrentIndex' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, Color) == 0x000020, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::Color' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, SkipValue) == 0x000030, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::SkipValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CurrentWeight) == 0x000034, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CurrentWeight' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, LowestWeight) == 0x000038, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::LowestWeight' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, HighestWeight) == 0x00003C, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::HighestWeight' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, LastIndex) == 0x000040, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::LastIndex' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, WeightedLocation) == 0x000050, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::WeightedLocation' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, Temp_int_Array_Index_Variable) == 0x000068, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Array_Contains_ReturnValue) == 0x00006C, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_VLerp_ReturnValue) == 0x000070, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, Temp_int_Array_Index_Variable_1) == 0x00007C, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Lerp_ReturnValue) == 0x000080, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_LinearColorLerp_ReturnValue) == 0x000084, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_SelectColor_ReturnValue) == 0x000094, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BreakVector4_X) == 0x0000A4, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BreakVector4_Y) == 0x0000A8, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BreakVector4_Z) == 0x0000AC, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BreakVector4_W) == 0x0000B0, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x0000B4, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_GetWeightedLocations_ReturnValue) == 0x0000B8, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_GetWeightedLocations_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_GetWeightedLocations_ReturnValue_1) == 0x0000E0, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_GetWeightedLocations_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Array_Get_Item_1) == 0x0000F0, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BreakVector4_X_1) == 0x000104, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BreakVector4_X_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BreakVector4_Y_1) == 0x000108, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BreakVector4_Y_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BreakVector4_Z_1) == 0x00010C, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BreakVector4_Z_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BreakVector4_W_1) == 0x000110, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BreakVector4_W_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Array_Length_ReturnValue_1) == 0x000118, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_GetWeightedLocations_ReturnValue_2) == 0x000120, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_GetWeightedLocations_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Array_LastIndex_ReturnValue) == 0x000130, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BreakVector4_X_2) == 0x000134, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BreakVector4_X_2' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BreakVector4_Y_2) == 0x000138, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BreakVector4_Y_2' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BreakVector4_Z_2) == 0x00013C, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BreakVector4_Z_2' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BreakVector4_W_2) == 0x000140, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BreakVector4_W_2' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, Temp_int_Loop_Counter_Variable_1) == 0x000144, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_MapRangeClamped_ReturnValue) == 0x000148, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Less_IntInt_ReturnValue_1) == 0x00014C, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Add_IntInt_ReturnValue_1) == 0x000150, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Less_FloatFloat_ReturnValue) == 0x000154, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000155, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BooleanOR_ReturnValue) == 0x000156, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000157, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000158, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_Conv_Vector4ToVector_ReturnValue) == 0x00015C, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_Conv_Vector4ToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_DrawWeightedLocations, CallFunc_BooleanOR_ReturnValue_1) == 0x000168, "Member 'TASK_Maneuver_Base_C_DrawWeightedLocations::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function TASK_Maneuver_Base.TASK_Maneuver_Base_C.OnLocationFound
// 0x0010 (0x0010 - 0x0000)
struct TASK_Maneuver_Base_C_OnLocationFound final
{
public:
	struct FVector                                FoundLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TASK_Maneuver_Base_C_OnLocationFound) == 0x000004, "Wrong alignment on TASK_Maneuver_Base_C_OnLocationFound");
static_assert(sizeof(TASK_Maneuver_Base_C_OnLocationFound) == 0x000010, "Wrong size on TASK_Maneuver_Base_C_OnLocationFound");
static_assert(offsetof(TASK_Maneuver_Base_C_OnLocationFound, FoundLocation) == 0x000000, "Member 'TASK_Maneuver_Base_C_OnLocationFound::FoundLocation' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_OnLocationFound, Result) == 0x00000C, "Member 'TASK_Maneuver_Base_C_OnLocationFound::Result' has a wrong offset!");

// Function TASK_Maneuver_Base.TASK_Maneuver_Base_C.GetTargetPawn
// 0x0020 (0x0020 - 0x0000)
struct TASK_Maneuver_Base_C_GetTargetPawn final
{
public:
	class APAWN_SystemShockCharacter_C*           Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetDetectedPawn_Pawn;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TASK_Maneuver_Base_C_GetTargetPawn) == 0x000008, "Wrong alignment on TASK_Maneuver_Base_C_GetTargetPawn");
static_assert(sizeof(TASK_Maneuver_Base_C_GetTargetPawn) == 0x000020, "Wrong size on TASK_Maneuver_Base_C_GetTargetPawn");
static_assert(offsetof(TASK_Maneuver_Base_C_GetTargetPawn, Result) == 0x000000, "Member 'TASK_Maneuver_Base_C_GetTargetPawn::Result' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_GetTargetPawn, CallFunc_GetTarget_Target) == 0x000008, "Member 'TASK_Maneuver_Base_C_GetTargetPawn::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_GetTargetPawn, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'TASK_Maneuver_Base_C_GetTargetPawn::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_GetTargetPawn, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'TASK_Maneuver_Base_C_GetTargetPawn::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TASK_Maneuver_Base_C_GetTargetPawn, CallFunc_GetDetectedPawn_Pawn) == 0x000018, "Member 'TASK_Maneuver_Base_C_GetTargetPawn::CallFunc_GetDetectedPawn_Pawn' has a wrong offset!");

}


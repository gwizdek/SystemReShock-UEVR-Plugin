#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Settings_MultiSelector

#include "Basic.hpp"

#include "WIDGET_Settings_MultiSelector_classes.hpp"
#include "WIDGET_Settings_MultiSelector_parameters.hpp"


namespace SDK
{

// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.ExecuteUbergraph_WIDGET_Settings_MultiSelector
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Settings_MultiSelector_C::ExecuteUbergraph_WIDGET_Settings_MultiSelector(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "ExecuteUbergraph_WIDGET_Settings_MultiSelector");

	Params::WIDGET_Settings_MultiSelector_C_ExecuteUbergraph_WIDGET_Settings_MultiSelector Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWIDGET_Settings_MultiSelector_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Settings_MultiSelector_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "PreConstruct");

	Params::WIDGET_Settings_MultiSelector_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.PopulateQualitySettings
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_Settings_MultiSelector_C::PopulateQualitySettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "PopulateQualitySettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.PopulateUniqueSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_Settings_MultiSelector_C::PopulateUniqueSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "PopulateUniqueSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.CreateMultiSelectorPips
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_Settings_MultiSelector_C::CreateMultiSelectorPips()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "CreateMultiSelectorPips");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.IncrementSelectedOption
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_Settings_MultiSelector_C::IncrementSelectedOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "IncrementSelectedOption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.DecrementSelectedOption
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_Settings_MultiSelector_C::DecrementSelectedOption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "DecrementSelectedOption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.SetSelectedMultiSelectorPip
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewSelectedPipIndex                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Settings_MultiSelector_C::SetSelectedMultiSelectorPip(int32 NewSelectedPipIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "SetSelectedMultiSelectorPip");

	Params::WIDGET_Settings_MultiSelector_C_SetSelectedMultiSelectorPip Parms{};

	Parms.NewSelectedPipIndex = NewSelectedPipIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.EVENT_OnMouseEnter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWIDGET_Settings_MultiSelector_C::EVENT_OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "EVENT_OnMouseEnter");

	Params::WIDGET_Settings_MultiSelector_C_EVENT_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.EVENT_OnMouseExit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWIDGET_Settings_MultiSelector_C::EVENT_OnMouseExit(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "EVENT_OnMouseExit");

	Params::WIDGET_Settings_MultiSelector_C_EVENT_OnMouseExit Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.EVENT_SelectorRightArrow_OnMouseDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWIDGET_Settings_MultiSelector_C::EVENT_SelectorRightArrow_OnMouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "EVENT_SelectorRightArrow_OnMouseDown");

	Params::WIDGET_Settings_MultiSelector_C_EVENT_SelectorRightArrow_OnMouseDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.EVENT_SelectorLeftArrow_OnMouseDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWIDGET_Settings_MultiSelector_C::EVENT_SelectorLeftArrow_OnMouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "EVENT_SelectorLeftArrow_OnMouseDown");

	Params::WIDGET_Settings_MultiSelector_C_EVENT_SelectorLeftArrow_OnMouseDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.UpdateMultiSelectorLabel
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_Settings_MultiSelector_C::UpdateMultiSelectorLabel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "UpdateMultiSelectorLabel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.InitializeMenuListItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWIDGET_MenuListBase_C*           ParentList                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Settings_MultiSelector_C::InitializeMenuListItem(class UWIDGET_MenuListBase_C* ParentList, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "InitializeMenuListItem");

	Params::WIDGET_Settings_MultiSelector_C_InitializeMenuListItem Parms{};

	Parms.ParentList = ParentList;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.SetIsHighlighted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewHighlightedState                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ForceInstant                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Settings_MultiSelector_C::SetIsHighlighted(bool NewHighlightedState, bool ForceInstant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "SetIsHighlighted");

	Params::WIDGET_Settings_MultiSelector_C_SetIsHighlighted Parms{};

	Parms.NewHighlightedState = NewHighlightedState;
	Parms.ForceInstant = ForceInstant;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.SetOptionEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsOptionEnabled                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Settings_MultiSelector_C::SetOptionEnabled(bool IsOptionEnabled, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "SetOptionEnabled");

	Params::WIDGET_Settings_MultiSelector_C_SetOptionEnabled Parms{};

	Parms.IsOptionEnabled = IsOptionEnabled;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.OnMultiSelectorValueModifiedByUser
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_Settings_MultiSelector_C::OnMultiSelectorValueModifiedByUser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "OnMultiSelectorValueModifiedByUser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.ReceiveNavLeft
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Settings_MultiSelector_C::ReceiveNavLeft(bool InputState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "ReceiveNavLeft");

	Params::WIDGET_Settings_MultiSelector_C_ReceiveNavLeft Parms{};

	Parms.InputState = InputState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_Settings_MultiSelector.WIDGET_Settings_MultiSelector_C.ReceiveNavRight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_Settings_MultiSelector_C::ReceiveNavRight(bool InputState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Settings_MultiSelector_C", "ReceiveNavRight");

	Params::WIDGET_Settings_MultiSelector_C_ReceiveNavRight Parms{};

	Parms.InputState = InputState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_CircuitMesh

#include "Basic.hpp"

#include "COMP_CircuitMesh_classes.hpp"
#include "COMP_CircuitMesh_parameters.hpp"


namespace SDK
{

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.PoweredStateChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_CircuitMesh_C*              Circuit                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_PowerState                         PowerState_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_CircuitMesh_C::PoweredStateChanged__DelegateSignature(class UCOMP_CircuitMesh_C* Circuit, ENUM_PowerState PowerState_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "PoweredStateChanged__DelegateSignature");

	Params::COMP_CircuitMesh_C_PoweredStateChanged__DelegateSignature Parms{};

	Parms.Circuit = Circuit;
	Parms.PowerState_0 = PowerState_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.ExecuteUbergraph_COMP_CircuitMesh
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_CircuitMesh_C::ExecuteUbergraph_COMP_CircuitMesh(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "ExecuteUbergraph_COMP_CircuitMesh");

	Params::COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.ReceiveEndPlay
// (Event, Public, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_CircuitMesh_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "ReceiveEndPlay");

	Params::COMP_CircuitMesh_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.AsyncLoadMesh
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UStaticMesh>       StaticMesh_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UCOMP_CircuitMesh_C::AsyncLoadMesh(TSoftObjectPtr<class UStaticMesh> StaticMesh_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "AsyncLoadMesh");

	Params::COMP_CircuitMesh_C_AsyncLoadMesh Parms{};

	Parms.StaticMesh_0 = StaticMesh_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_CircuitMesh_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "ReceiveTick");

	Params::COMP_CircuitMesh_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.OnLoaded_E480C1A14932C8045B5E2C81A4DAD4FA
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_CircuitMesh_C::OnLoaded_E480C1A14932C8045B5E2C81A4DAD4FA(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "OnLoaded_E480C1A14932C8045B5E2C81A4DAD4FA");

	Params::COMP_CircuitMesh_C_OnLoaded_E480C1A14932C8045B5E2C81A4DAD4FA Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.RegisterCircuitPuzzle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACIRCUITPUZZLE_Base_C*            CircuitPuzzle_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_CircuitMesh_C::RegisterCircuitPuzzle(class ACIRCUITPUZZLE_Base_C* CircuitPuzzle_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "RegisterCircuitPuzzle");

	Params::COMP_CircuitMesh_C_RegisterCircuitPuzzle Parms{};

	Parms.CircuitPuzzle_0 = CircuitPuzzle_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.ClearPowerSources
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_CircuitMesh_C::ClearPowerSources()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "ClearPowerSources");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.ReceivePowerFromCircuit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_CircuitMesh_C*              PowerOriginCircuit                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_CircuitMesh_C::ReceivePowerFromCircuit(class UCOMP_CircuitMesh_C* PowerOriginCircuit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "ReceivePowerFromCircuit");

	Params::COMP_CircuitMesh_C_ReceivePowerFromCircuit Parms{};

	Parms.PowerOriginCircuit = PowerOriginCircuit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.GetNorth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    North_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_CircuitMesh_C::GetNorth(bool* North_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "GetNorth");

	Params::COMP_CircuitMesh_C_GetNorth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (North_0 != nullptr)
		*North_0 = Parms.North_0;
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.GetEast
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    East_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_CircuitMesh_C::GetEast(bool* East_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "GetEast");

	Params::COMP_CircuitMesh_C_GetEast Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (East_0 != nullptr)
		*East_0 = Parms.East_0;
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.GetSouth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    South_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_CircuitMesh_C::GetSouth(bool* South_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "GetSouth");

	Params::COMP_CircuitMesh_C_GetSouth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (South_0 != nullptr)
		*South_0 = Parms.South_0;
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.GetWest
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    West_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_CircuitMesh_C::GetWest(bool* West_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "GetWest");

	Params::COMP_CircuitMesh_C_GetWest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (West_0 != nullptr)
		*West_0 = Parms.West_0;
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.GetTargetRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_CircuitMesh_C::GetTargetRotation(struct FRotator* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "GetTargetRotation");

	Params::COMP_CircuitMesh_C_GetTargetRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.TryModifyComponentTickState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_CircuitMesh_C::TryModifyComponentTickState(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "TryModifyComponentTickState");

	Params::COMP_CircuitMesh_C_TryModifyComponentTickState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.RotateClockwise
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HandleSideEffects                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TSet<class UCOMP_CircuitMesh_C*>        RotatedCircuits                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UCOMP_CircuitMesh_C::RotateClockwise(bool HandleSideEffects, TSet<class UCOMP_CircuitMesh_C*>& RotatedCircuits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "RotateClockwise");

	Params::COMP_CircuitMesh_C_RotateClockwise Parms{};

	Parms.HandleSideEffects = HandleSideEffects;
	Parms.RotatedCircuits = std::move(RotatedCircuits);

	UObject::ProcessEvent(Func, &Parms);

	RotatedCircuits = std::move(Parms.RotatedCircuits);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.UpdatePower
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanSupplyPower                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_CircuitMesh_C::UpdatePower(bool CanSupplyPower, float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "UpdatePower");

	Params::COMP_CircuitMesh_C_UpdatePower Parms{};

	Parms.CanSupplyPower = CanSupplyPower;
	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.UpdateRotation
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Finished                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_CircuitMesh_C::UpdateRotation(float DeltaTime, bool* Finished)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "UpdateRotation");

	Params::COMP_CircuitMesh_C_UpdateRotation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Finished != nullptr)
		*Finished = Parms.Finished;
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.UpdateMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_CircuitMesh_C::UpdateMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "UpdateMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.ApplyCircuitData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_GeneratedCircuitType               Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Directions                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACIRCUITPUZZLE_Base_C*            CircuitPuzzle_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_CircuitMesh_C::ApplyCircuitData(ENUM_GeneratedCircuitType Type, int32 Directions, class ACIRCUITPUZZLE_Base_C* CircuitPuzzle_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "ApplyCircuitData");

	Params::COMP_CircuitMesh_C_ApplyCircuitData Parms{};

	Parms.Type = Type;
	Parms.Directions = Directions;
	Parms.CircuitPuzzle_0 = CircuitPuzzle_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.IsCellFocusable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_CircuitMesh_C::IsCellFocusable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "IsCellFocusable");

	Params::COMP_CircuitMesh_C_IsCellFocusable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.SetModifiedCellParameters
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   Params_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_CircuitMesh_C::SetModifiedCellParameters(uint8 Params_0, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "SetModifiedCellParameters");

	Params::COMP_CircuitMesh_C_SetModifiedCellParameters Parms{};

	Parms.Params_0 = Params_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.SetCellVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsVisible_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_CircuitMesh_C::SetCellVisibility(bool IsVisible_0, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "SetCellVisibility");

	Params::COMP_CircuitMesh_C_SetCellVisibility Parms{};

	Parms.IsVisible_0 = IsVisible_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_CircuitMesh.COMP_CircuitMesh_C.IsCellRotatable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_CircuitMesh_C::IsCellRotatable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_CircuitMesh_C", "IsCellRotatable");

	Params::COMP_CircuitMesh_C_IsCellRotatable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TRIGGER_MusicVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TRIGGER_MusicVolume.TRIGGER_MusicVolume_C
// 0x0020 (0x0240 - 0x0220)
class ATRIGGER_MusicVolume_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          HasPlayed;                                         // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MusicCue_C*                         MusicCue;                                          // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TRIGGER_MusicVolume(int32 EntryPoint);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnEnterVolume(class UGI_SinglePlayer_C* GameInstance, class UGI_SinglePlayer_C** OutGameInstance);
	bool ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0);
	bool ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms);
	bool ReceivePendingCharacterVelocity(const struct FVector& Velocity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TRIGGER_MusicVolume_C">();
	}
	static class ATRIGGER_MusicVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATRIGGER_MusicVolume_C>();
	}
};
static_assert(alignof(ATRIGGER_MusicVolume_C) == 0x000008, "Wrong alignment on ATRIGGER_MusicVolume_C");
static_assert(sizeof(ATRIGGER_MusicVolume_C) == 0x000240, "Wrong size on ATRIGGER_MusicVolume_C");
static_assert(offsetof(ATRIGGER_MusicVolume_C, UberGraphFrame) == 0x000220, "Member 'ATRIGGER_MusicVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATRIGGER_MusicVolume_C, Box) == 0x000228, "Member 'ATRIGGER_MusicVolume_C::Box' has a wrong offset!");
static_assert(offsetof(ATRIGGER_MusicVolume_C, HasPlayed) == 0x000230, "Member 'ATRIGGER_MusicVolume_C::HasPlayed' has a wrong offset!");
static_assert(offsetof(ATRIGGER_MusicVolume_C, MusicCue) == 0x000238, "Member 'ATRIGGER_MusicVolume_C::MusicCue' has a wrong offset!");

}


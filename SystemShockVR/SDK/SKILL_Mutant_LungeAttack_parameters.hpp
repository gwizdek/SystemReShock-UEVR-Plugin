#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SKILL_Mutant_LungeAttack

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SKILL_Mutant_LungeAttack.SKILL_Mutant_LungeAttack_C.GetKnockbackDirection
// 0x0088 (0x0088 - 0x0000)
struct SKILL_Mutant_LungeAttack_C_GetKnockbackDirection final
{
public:
	class UPrimitiveComponent*                    OverlapComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitboxComponent;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection) == 0x000008, "Wrong alignment on SKILL_Mutant_LungeAttack_C_GetKnockbackDirection");
static_assert(sizeof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection) == 0x000088, "Wrong size on SKILL_Mutant_LungeAttack_C_GetKnockbackDirection");
static_assert(offsetof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection, OverlapComponent) == 0x000000, "Member 'SKILL_Mutant_LungeAttack_C_GetKnockbackDirection::OverlapComponent' has a wrong offset!");
static_assert(offsetof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection, HitboxComponent) == 0x000008, "Member 'SKILL_Mutant_LungeAttack_C_GetKnockbackDirection::HitboxComponent' has a wrong offset!");
static_assert(offsetof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection, Direction) == 0x000010, "Member 'SKILL_Mutant_LungeAttack_C_GetKnockbackDirection::Direction' has a wrong offset!");
static_assert(offsetof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection, CallFunc_Vector_Up_ReturnValue) == 0x00001C, "Member 'SKILL_Mutant_LungeAttack_C_GetKnockbackDirection::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection, CallFunc_GetSkillPawn_SkillPawn) == 0x000028, "Member 'SKILL_Mutant_LungeAttack_C_GetKnockbackDirection::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'SKILL_Mutant_LungeAttack_C_GetKnockbackDirection::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection, CallFunc_GetTarget_Target) == 0x000040, "Member 'SKILL_Mutant_LungeAttack_C_GetKnockbackDirection::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection, CallFunc_Get_Target_Location_Location) == 0x000048, "Member 'SKILL_Mutant_LungeAttack_C_GetKnockbackDirection::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000054, "Member 'SKILL_Mutant_LungeAttack_C_GetKnockbackDirection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection, CallFunc_Normal_ReturnValue) == 0x000060, "Member 'SKILL_Mutant_LungeAttack_C_GetKnockbackDirection::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x00006C, "Member 'SKILL_Mutant_LungeAttack_C_GetKnockbackDirection::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SKILL_Mutant_LungeAttack_C_GetKnockbackDirection, CallFunc_Normal_ReturnValue_1) == 0x000078, "Member 'SKILL_Mutant_LungeAttack_C_GetKnockbackDirection::CallFunc_Normal_ReturnValue_1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Button_Base

#include "Basic.hpp"

#include "INTERACT_Button_Base_classes.hpp"
#include "INTERACT_Button_Base_parameters.hpp"


namespace SDK
{

// Function INTERACT_Button_Base.INTERACT_Button_Base_C.ExecuteUbergraph_INTERACT_Button_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Button_Base_C::ExecuteUbergraph_INTERACT_Button_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "ExecuteUbergraph_INTERACT_Button_Base");

	Params::INTERACT_Button_Base_C_ExecuteUbergraph_INTERACT_Button_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AINTERACT_Button_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_Base_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.OnInteractSuccess
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Button_Base_C::OnInteractSuccess(class AActor* SourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "OnInteractSuccess");

	Params::INTERACT_Button_Base_C_OnInteractSuccess Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.OnBrokenInteraction
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::OnBrokenInteraction(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "OnBrokenInteraction");

	Params::INTERACT_Button_Base_C_OnBrokenInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.InitializeButtonState
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_Base_C::InitializeButtonState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "InitializeButtonState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.IsButtonFunctional
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    CheckPower                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::IsButtonFunctional(bool CheckPower, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "IsButtonFunctional");

	Params::INTERACT_Button_Base_C_IsButtonFunctional Parms{};

	Parms.CheckPower = CheckPower;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.IsButtonPoweredOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::IsButtonPoweredOn(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "IsButtonPoweredOn");

	Params::INTERACT_Button_Base_C_IsButtonPoweredOn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.HasButtonBeenActivated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::HasButtonBeenActivated(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "HasButtonBeenActivated");

	Params::INTERACT_Button_Base_C_HasButtonBeenActivated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.IsEveryTargetInteractUnlocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::IsEveryTargetInteractUnlocked(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "IsEveryTargetInteractUnlocked");

	Params::INTERACT_Button_Base_C_IsEveryTargetInteractUnlocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.GetSuccessMessage
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Result                                                 (Parm, OutParm)

void AINTERACT_Button_Base_C::GetSuccessMessage(class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "GetSuccessMessage");

	Params::INTERACT_Button_Base_C_GetSuccessMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.OnLockedInteraction
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::OnLockedInteraction(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "OnLockedInteraction");

	Params::INTERACT_Button_Base_C_OnLockedInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.InitializeAttributes
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_Base_C::InitializeAttributes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "InitializeAttributes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.UnlockSpecifiedInteracts
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::UnlockSpecifiedInteracts(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "UnlockSpecifiedInteracts");

	Params::INTERACT_Button_Base_C_UnlockSpecifiedInteracts Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.UpdateButtonEmissiveStrength
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Strength                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Button_Base_C::UpdateButtonEmissiveStrength(float Scale, float* Strength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "UpdateButtonEmissiveStrength");

	Params::INTERACT_Button_Base_C_UpdateButtonEmissiveStrength Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);

	if (Strength != nullptr)
		*Strength = Parms.Strength;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.MarkButtonHasBeenActivated
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_Base_C::MarkButtonHasBeenActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "MarkButtonHasBeenActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.UpdateTargetGameEventStates
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_Base_C::UpdateTargetGameEventStates()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "UpdateTargetGameEventStates");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.EVENT_OnTargetLockStateChanged
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AINTERACT_Base_C*                 Interact                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Button_Base_C::EVENT_OnTargetLockStateChanged(class AINTERACT_Base_C* Interact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "EVENT_OnTargetLockStateChanged");

	Params::INTERACT_Button_Base_C_EVENT_OnTargetLockStateChanged Parms{};

	Parms.Interact = Interact;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.GetAlreadyActivatedMessage
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Result                                                 (Parm, OutParm)

void AINTERACT_Button_Base_C::GetAlreadyActivatedMessage(class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "GetAlreadyActivatedMessage");

	Params::INTERACT_Button_Base_C_GetAlreadyActivatedMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.IsInteractableFunctional
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AINTERACT_Base_C*                 Interactable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::IsInteractableFunctional(class AINTERACT_Base_C* Interactable, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "IsInteractableFunctional");

	Params::INTERACT_Button_Base_C_IsInteractableFunctional Parms{};

	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.CanInteractWithTargetInteractables
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CheckBusy                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             FailMessage                                            (Parm, OutParm)

void AINTERACT_Button_Base_C::CanInteractWithTargetInteractables(bool CheckBusy, bool* Result, class FText* FailMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "CanInteractWithTargetInteractables");

	Params::INTERACT_Button_Base_C_CanInteractWithTargetInteractables Parms{};

	Parms.CheckBusy = CheckBusy;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (FailMessage != nullptr)
		*FailMessage = std::move(Parms.FailMessage);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.CanInteractWithInteractable
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AINTERACT_Base_C*                 Interactable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CheckBusy                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             FailMessage                                            (Parm, OutParm)

void AINTERACT_Button_Base_C::CanInteractWithInteractable(class AINTERACT_Base_C* Interactable, bool CheckBusy, bool* Result, class FText* FailMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "CanInteractWithInteractable");

	Params::INTERACT_Button_Base_C_CanInteractWithInteractable Parms{};

	Parms.Interactable = Interactable;
	Parms.CheckBusy = CheckBusy;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (FailMessage != nullptr)
		*FailMessage = std::move(Parms.FailMessage);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.PerformTargetInteraction
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_Base_C::PerformTargetInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "PerformTargetInteraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.OnTargetLockStateChanged
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_Base_C::OnTargetLockStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "OnTargetLockStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.CanModifyInteractable
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AINTERACT_Base_C*                 Interactable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractionType                    InteractType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::CanModifyInteractable(class AINTERACT_Base_C* Interactable, ENUM_InteractionType InteractType, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "CanModifyInteractable");

	Params::INTERACT_Button_Base_C_CanModifyInteractable Parms{};

	Parms.Interactable = Interactable;
	Parms.InteractType = InteractType;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.CanModifyGameState
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::CanModifyGameState(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "CanModifyGameState");

	Params::INTERACT_Button_Base_C_CanModifyGameState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.CanModifyAnyTargetState
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::CanModifyAnyTargetState(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "CanModifyAnyTargetState");

	Params::INTERACT_Button_Base_C_CanModifyAnyTargetState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.OnButtonBecameDysfunctional
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_Base_C::OnButtonBecameDysfunctional()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "OnButtonBecameDysfunctional");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.BindEventsForInteract
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AINTERACT_Base_C*                 Interactable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Button_Base_C::BindEventsForInteract(class AINTERACT_Base_C* Interactable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "BindEventsForInteract");

	Params::INTERACT_Button_Base_C_BindEventsForInteract Parms{};

	Parms.Interactable = Interactable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.EVENT_OnTargetInteractDestroyed
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AINTERACT_Base_C*                 Interact                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Button_Base_C::EVENT_OnTargetInteractDestroyed(class AINTERACT_Base_C* Interact)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "EVENT_OnTargetInteractDestroyed");

	Params::INTERACT_Button_Base_C_EVENT_OnTargetInteractDestroyed Parms{};

	Parms.Interact = Interact;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.EVENT_OnDisableAttribChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Button_Base_C::EVENT_OnDisableAttribChanged(float CurrValue, float LastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "EVENT_OnDisableAttribChanged");

	Params::INTERACT_Button_Base_C_EVENT_OnDisableAttribChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.GetTargetShape
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UShapeComponent*                  ShapeComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Button_Base_C::GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "GetTargetShape");

	Params::INTERACT_Button_Base_C_GetTargetShape Parms{};

	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);

	if (ShapeComponent != nullptr)
		*ShapeComponent = Parms.ShapeComponent;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.ShouldSaveActor
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStreamingSaveGameActorParams    Params_0                                               (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AINTERACT_Button_Base_C::ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "ShouldSaveActor");

	Params::INTERACT_Button_Base_C_ShouldSaveActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);

	return Parms.ReturnValue;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.SetInteractPowered
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::SetInteractPowered(bool State, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "SetInteractPowered");

	Params::INTERACT_Button_Base_C_SetInteractPowered Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.CanModifyInteractPower
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_Base_C::CanModifyInteractPower(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "CanModifyInteractPower");

	Params::INTERACT_Button_Base_C_CanModifyInteractPower Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button_Base.INTERACT_Button_Base_C.TryInteract
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractionType                    InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_InteractResults          InteractResults                                        (Parm, OutParm, HasGetValueTypeHash)

void AINTERACT_Button_Base_C::TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_Base_C", "TryInteract");

	Params::INTERACT_Button_Base_C_TryInteract Parms{};

	Parms.SourceActor = SourceActor;
	Parms.CursorPrimitive = CursorPrimitive;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractResults != nullptr)
		*InteractResults = std::move(Parms.InteractResults);
}

}


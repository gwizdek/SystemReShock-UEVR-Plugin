#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_LootableBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "INTERACT_Channeling_Base_classes.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_LootableBase.INTERACT_LootableBase_C
// 0x0058 (0x03A8 - 0x0350)
class AINTERACT_LootableBase_C : public AINTERACT_Channeling_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_LootableBase_C;            // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_ScannableObject_C*                COMP_Scannable_Loot;                               // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_LootableInventory_C*              COMP_LootableInventory;                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpen;                                            // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WasEmpty;                                          // 0x0369(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36A[0x6];                                      // 0x036A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LootableDisplayName;                               // 0x0370(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FDataTableRowHandle                    BadgeRowHandle;                                    // 0x0388(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableRowHandle                    CompleteGameEvent;                                 // 0x0398(0x0010)(Edit, BlueprintVisible, NoDestructor)

public:
	void ExecuteUbergraph_INTERACT_LootableBase(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void IsLootableOpened(bool* Result);
	void ShouldCloseLootWindow(class AActor* NewChannelingInteract, bool* Result);
	void GetLootableDisplayName(class FText* Text);
	void GetLootableMeshComponent(class UMeshComponent** MeshComponent);
	void InitializeLootInteract();
	void TryCompleteGameEvent();
	void CanResumeChannelingInteraction(bool* Result);
	void TryGrantBadgeItem();
	void OnLootStateChanged(bool OnBeginPlay);
	void SetLootableDisplayName(const class FText& NewName);
	void GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void StopChanneling(class AActor* NewChannelingInteract, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_LootableBase_C">();
	}
	static class AINTERACT_LootableBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_LootableBase_C>();
	}
};
static_assert(alignof(AINTERACT_LootableBase_C) == 0x000008, "Wrong alignment on AINTERACT_LootableBase_C");
static_assert(sizeof(AINTERACT_LootableBase_C) == 0x0003A8, "Wrong size on AINTERACT_LootableBase_C");
static_assert(offsetof(AINTERACT_LootableBase_C, UberGraphFrame_INTERACT_LootableBase_C) == 0x000350, "Member 'AINTERACT_LootableBase_C::UberGraphFrame_INTERACT_LootableBase_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_LootableBase_C, COMP_Scannable_Loot) == 0x000358, "Member 'AINTERACT_LootableBase_C::COMP_Scannable_Loot' has a wrong offset!");
static_assert(offsetof(AINTERACT_LootableBase_C, COMP_LootableInventory) == 0x000360, "Member 'AINTERACT_LootableBase_C::COMP_LootableInventory' has a wrong offset!");
static_assert(offsetof(AINTERACT_LootableBase_C, IsOpen) == 0x000368, "Member 'AINTERACT_LootableBase_C::IsOpen' has a wrong offset!");
static_assert(offsetof(AINTERACT_LootableBase_C, WasEmpty) == 0x000369, "Member 'AINTERACT_LootableBase_C::WasEmpty' has a wrong offset!");
static_assert(offsetof(AINTERACT_LootableBase_C, LootableDisplayName) == 0x000370, "Member 'AINTERACT_LootableBase_C::LootableDisplayName' has a wrong offset!");
static_assert(offsetof(AINTERACT_LootableBase_C, BadgeRowHandle) == 0x000388, "Member 'AINTERACT_LootableBase_C::BadgeRowHandle' has a wrong offset!");
static_assert(offsetof(AINTERACT_LootableBase_C, CompleteGameEvent) == 0x000398, "Member 'AINTERACT_LootableBase_C::CompleteGameEvent' has a wrong offset!");

}


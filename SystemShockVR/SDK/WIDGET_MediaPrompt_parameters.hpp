#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_MediaPrompt

#include "Basic.hpp"

#include "STRUCT_MediaObject_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_NarrativeSpeakers_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.ExecuteUbergraph_WIDGET_MediaPrompt
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt) == 0x000004, "Wrong alignment on WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt");
static_assert(sizeof(WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt) == 0x000048, "Wrong size on WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt");
static_assert(offsetof(WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt, EntryPoint) == 0x000000, "Member 'WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt, K2Node_Event_MyGeometry) == 0x000008, "Member 'WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt, K2Node_Event_InDeltaTime) == 0x000040, "Member 'WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'WIDGET_MediaPrompt_C_ExecuteUbergraph_WIDGET_MediaPrompt::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_MediaPrompt_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaPrompt_C_Tick) == 0x000004, "Wrong alignment on WIDGET_MediaPrompt_C_Tick");
static_assert(sizeof(WIDGET_MediaPrompt_C_Tick) == 0x00003C, "Wrong size on WIDGET_MediaPrompt_C_Tick");
static_assert(offsetof(WIDGET_MediaPrompt_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_MediaPrompt_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_MediaPrompt_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MediaPrompt_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaPrompt_C_PreConstruct) == 0x000001, "Wrong alignment on WIDGET_MediaPrompt_C_PreConstruct");
static_assert(sizeof(WIDGET_MediaPrompt_C_PreConstruct) == 0x000001, "Wrong size on WIDGET_MediaPrompt_C_PreConstruct");
static_assert(offsetof(WIDGET_MediaPrompt_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WIDGET_MediaPrompt_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.InitializeMediaPrompt
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_MediaPrompt_C_InitializeMediaPrompt final
{
public:
	class UWIDGET_PlayerHUD_C*                    PlayerHUD_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaPrompt_C_InitializeMediaPrompt) == 0x000008, "Wrong alignment on WIDGET_MediaPrompt_C_InitializeMediaPrompt");
static_assert(sizeof(WIDGET_MediaPrompt_C_InitializeMediaPrompt) == 0x000010, "Wrong size on WIDGET_MediaPrompt_C_InitializeMediaPrompt");
static_assert(offsetof(WIDGET_MediaPrompt_C_InitializeMediaPrompt, PlayerHUD_0) == 0x000000, "Member 'WIDGET_MediaPrompt_C_InitializeMediaPrompt::PlayerHUD_0' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_InitializeMediaPrompt, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'WIDGET_MediaPrompt_C_InitializeMediaPrompt::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.EnableMediaPrompt
// 0x00B0 (0x00B0 - 0x0000)
struct WIDGET_MediaPrompt_C_EnableMediaPrompt final
{
public:
	class UITEM_MediaBase_C*                      MediaItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MediaObject                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ResumeMediaPrompt_Success;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaPrompt_C_EnableMediaPrompt) == 0x000008, "Wrong alignment on WIDGET_MediaPrompt_C_EnableMediaPrompt");
static_assert(sizeof(WIDGET_MediaPrompt_C_EnableMediaPrompt) == 0x0000B0, "Wrong size on WIDGET_MediaPrompt_C_EnableMediaPrompt");
static_assert(offsetof(WIDGET_MediaPrompt_C_EnableMediaPrompt, MediaItem) == 0x000000, "Member 'WIDGET_MediaPrompt_C_EnableMediaPrompt::MediaItem' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_EnableMediaPrompt, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WIDGET_MediaPrompt_C_EnableMediaPrompt::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_EnableMediaPrompt, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'WIDGET_MediaPrompt_C_EnableMediaPrompt::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_EnableMediaPrompt, CallFunc_GetObjectClass_ReturnValue_1) == 0x000018, "Member 'WIDGET_MediaPrompt_C_EnableMediaPrompt::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_EnableMediaPrompt, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'WIDGET_MediaPrompt_C_EnableMediaPrompt::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_EnableMediaPrompt, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A0, "Member 'WIDGET_MediaPrompt_C_EnableMediaPrompt::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_EnableMediaPrompt, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x0000A4, "Member 'WIDGET_MediaPrompt_C_EnableMediaPrompt::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_EnableMediaPrompt, CallFunc_ResumeMediaPrompt_Success) == 0x0000A8, "Member 'WIDGET_MediaPrompt_C_EnableMediaPrompt::CallFunc_ResumeMediaPrompt_Success' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.ResumeMediaPrompt
// 0x0318 (0x0318 - 0x0000)
struct WIDGET_MediaPrompt_C_ResumeMediaPrompt final
{
public:
	class UITEM_MediaBase_C*                      MediaItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timestamp;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_NarrativeSpeakers              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0090(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x00A8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00E8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0128(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0138(0x0018)()
	struct FSTRUCT_NarrativeSpeakers              CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0150(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01C0(0x0040)(HasGetValueTypeHash)
	class UEMAIL_ITEM_Base_C*                     K2Node_DynamicCast_AsEMAIL_ITEM_Base;              // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0210(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0250(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0260(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0278(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0288(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UNOTE_Base_C*                           K2Node_DynamicCast_AsNOTE_Base;                    // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEMAIL_ITEM_Base_C*                     K2Node_DynamicCast_AsEMAIL_ITEM_Base_1;            // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_AudioLog_C*                       K2Node_DynamicCast_AsITEM_Audio_Log;               // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanShowPromptForNewMedia_Result;          // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPlayMedia_Result;                      // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BB[0x1];                                      // 0x02BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x02C0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x02D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x02D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x02E8(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0300(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x0310(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaPrompt_C_ResumeMediaPrompt) == 0x000008, "Wrong alignment on WIDGET_MediaPrompt_C_ResumeMediaPrompt");
static_assert(sizeof(WIDGET_MediaPrompt_C_ResumeMediaPrompt) == 0x000318, "Wrong size on WIDGET_MediaPrompt_C_ResumeMediaPrompt");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, MediaItem) == 0x000000, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::MediaItem' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, Timestamp) == 0x000008, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::Timestamp' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, Success) == 0x00000C, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::Success' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_MakeArray_Array) == 0x000080, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_Format_ReturnValue) == 0x000090, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_MakeStruct_FormatArgumentData) == 0x0000A8, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000E8, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_MakeArray_Array_1) == 0x000128, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_Format_ReturnValue_1) == 0x000138, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000150, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001B8, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001C0, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_DynamicCast_AsEMAIL_ITEM_Base) == 0x000200, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_DynamicCast_AsEMAIL_ITEM_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_DynamicCast_bSuccess) == 0x000208, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_MakeStruct_FormatArgumentData_3) == 0x000210, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_MakeArray_Array_2) == 0x000250, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_Format_ReturnValue_2) == 0x000260, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_CreateDelegate_OutputDelegate) == 0x000278, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000288, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_DynamicCast_AsNOTE_Base) == 0x000290, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_DynamicCast_AsNOTE_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_DynamicCast_bSuccess_1) == 0x000298, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_DynamicCast_AsEMAIL_ITEM_Base_1) == 0x0002A0, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_DynamicCast_AsEMAIL_ITEM_Base_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_DynamicCast_bSuccess_2) == 0x0002A8, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_DynamicCast_AsITEM_Audio_Log) == 0x0002B0, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_DynamicCast_AsITEM_Audio_Log' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_DynamicCast_bSuccess_3) == 0x0002B8, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_CanShowPromptForNewMedia_Result) == 0x0002B9, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_CanShowPromptForNewMedia_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_CanPlayMedia_Result) == 0x0002BA, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_CanPlayMedia_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_MakeStruct_Color) == 0x0002BC, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_CreateDelegate_OutputDelegate_1) == 0x0002C0, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0002D0, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_MakeArray_Array_3) == 0x0002D8, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_Format_ReturnValue_3) == 0x0002E8, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, K2Node_CreateDelegate_OutputDelegate_2) == 0x000300, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ResumeMediaPrompt, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x000310, "Member 'WIDGET_MediaPrompt_C_ResumeMediaPrompt::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.DisableMediaPrompt
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MediaPrompt_C_DisableMediaPrompt final
{
public:
	bool                                          Immediate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaPrompt_C_DisableMediaPrompt) == 0x000004, "Wrong alignment on WIDGET_MediaPrompt_C_DisableMediaPrompt");
static_assert(sizeof(WIDGET_MediaPrompt_C_DisableMediaPrompt) == 0x000008, "Wrong size on WIDGET_MediaPrompt_C_DisableMediaPrompt");
static_assert(offsetof(WIDGET_MediaPrompt_C_DisableMediaPrompt, Immediate) == 0x000000, "Member 'WIDGET_MediaPrompt_C_DisableMediaPrompt::Immediate' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_DisableMediaPrompt, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'WIDGET_MediaPrompt_C_DisableMediaPrompt::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.ReceiveMediaKey
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_MediaPrompt_C_ReceiveMediaKey final
{
public:
	bool                                          Down;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaPrompt_C_ReceiveMediaKey) == 0x000008, "Wrong alignment on WIDGET_MediaPrompt_C_ReceiveMediaKey");
static_assert(sizeof(WIDGET_MediaPrompt_C_ReceiveMediaKey) == 0x000048, "Wrong size on WIDGET_MediaPrompt_C_ReceiveMediaKey");
static_assert(offsetof(WIDGET_MediaPrompt_C_ReceiveMediaKey, Down) == 0x000000, "Member 'WIDGET_MediaPrompt_C_ReceiveMediaKey::Down' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ReceiveMediaKey, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WIDGET_MediaPrompt_C_ReceiveMediaKey::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ReceiveMediaKey, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'WIDGET_MediaPrompt_C_ReceiveMediaKey::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ReceiveMediaKey, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x000018, "Member 'WIDGET_MediaPrompt_C_ReceiveMediaKey::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ReceiveMediaKey, CallFunc_FMax_ReturnValue) == 0x00001C, "Member 'WIDGET_MediaPrompt_C_ReceiveMediaKey::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ReceiveMediaKey, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WIDGET_MediaPrompt_C_ReceiveMediaKey::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ReceiveMediaKey, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'WIDGET_MediaPrompt_C_ReceiveMediaKey::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ReceiveMediaKey, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000038, "Member 'WIDGET_MediaPrompt_C_ReceiveMediaKey::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ReceiveMediaKey, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000040, "Member 'WIDGET_MediaPrompt_C_ReceiveMediaKey::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ReceiveMediaKey, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'WIDGET_MediaPrompt_C_ReceiveMediaKey::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.EVENT_TryPromptQueuedMedia
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_MediaPrompt_C_EVENT_TryPromptQueuedMedia final
{
public:
	class UITEM_MediaBase_C*                      MediaItemToPrompt;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaPrompt_C_EVENT_TryPromptQueuedMedia) == 0x000008, "Wrong alignment on WIDGET_MediaPrompt_C_EVENT_TryPromptQueuedMedia");
static_assert(sizeof(WIDGET_MediaPrompt_C_EVENT_TryPromptQueuedMedia) == 0x000010, "Wrong size on WIDGET_MediaPrompt_C_EVENT_TryPromptQueuedMedia");
static_assert(offsetof(WIDGET_MediaPrompt_C_EVENT_TryPromptQueuedMedia, MediaItemToPrompt) == 0x000000, "Member 'WIDGET_MediaPrompt_C_EVENT_TryPromptQueuedMedia::MediaItemToPrompt' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_EVENT_TryPromptQueuedMedia, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WIDGET_MediaPrompt_C_EVENT_TryPromptQueuedMedia::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.UpdateMediaPromptVisibility
// 0x003C (0x003C - 0x0000)
struct WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility final
{
public:
	float                                         ColorAlpha;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_MultiplyColorAlpha_ModifiedColor;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_MultiplyColorAlpha_ModifiedColor_1;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_MultiplyColorAlpha_ModifiedColor_2;       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_MultiplyColorAlpha_ModifiedColor_3;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility) == 0x000004, "Wrong alignment on WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility");
static_assert(sizeof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility) == 0x00003C, "Wrong size on WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, ColorAlpha) == 0x000000, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::ColorAlpha' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, Progress) == 0x000004, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::Progress' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000008, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, K2Node_MakeStruct_Color) == 0x00000C, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, CallFunc_MultiplyColorAlpha_ModifiedColor) == 0x000010, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::CallFunc_MultiplyColorAlpha_ModifiedColor' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, CallFunc_MultiplyColorAlpha_ModifiedColor_1) == 0x000018, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::CallFunc_MultiplyColorAlpha_ModifiedColor_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, CallFunc_MultiplyColorAlpha_ModifiedColor_2) == 0x00001C, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::CallFunc_MultiplyColorAlpha_ModifiedColor_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, CallFunc_MultiplyColorAlpha_ModifiedColor_3) == 0x000020, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::CallFunc_MultiplyColorAlpha_ModifiedColor_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, Temp_bool_Variable) == 0x000024, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, K2Node_Select_Default) == 0x000028, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, CallFunc_BooleanOR_ReturnValue) == 0x00002C, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00002D, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000030, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'WIDGET_MediaPrompt_C_UpdateMediaPromptVisibility::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.EVENT_CloseAndPlayMedia
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MediaPrompt_C_EVENT_CloseAndPlayMedia final
{
public:
	bool                                          CallFunc_PlayMedia_Result;                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaPrompt_C_EVENT_CloseAndPlayMedia) == 0x000001, "Wrong alignment on WIDGET_MediaPrompt_C_EVENT_CloseAndPlayMedia");
static_assert(sizeof(WIDGET_MediaPrompt_C_EVENT_CloseAndPlayMedia) == 0x000001, "Wrong size on WIDGET_MediaPrompt_C_EVENT_CloseAndPlayMedia");
static_assert(offsetof(WIDGET_MediaPrompt_C_EVENT_CloseAndPlayMedia, CallFunc_PlayMedia_Result) == 0x000000, "Member 'WIDGET_MediaPrompt_C_EVENT_CloseAndPlayMedia::CallFunc_PlayMedia_Result' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.ForceQueueMediaItem
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_MediaPrompt_C_ForceQueueMediaItem final
{
public:
	class UITEM_MediaBase_C*                      MediaItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_MediaPrompt_C_ForceQueueMediaItem) == 0x000008, "Wrong alignment on WIDGET_MediaPrompt_C_ForceQueueMediaItem");
static_assert(sizeof(WIDGET_MediaPrompt_C_ForceQueueMediaItem) == 0x000018, "Wrong size on WIDGET_MediaPrompt_C_ForceQueueMediaItem");
static_assert(offsetof(WIDGET_MediaPrompt_C_ForceQueueMediaItem, MediaItem) == 0x000000, "Member 'WIDGET_MediaPrompt_C_ForceQueueMediaItem::MediaItem' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_ForceQueueMediaItem, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WIDGET_MediaPrompt_C_ForceQueueMediaItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.TryQueueMediaItem
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_MediaPrompt_C_TryQueueMediaItem final
{
public:
	class UITEM_MediaBase_C*                      MediaItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMediaPriority_Priority;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMediaPriority_Priority_1;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaPrompt_C_TryQueueMediaItem) == 0x000008, "Wrong alignment on WIDGET_MediaPrompt_C_TryQueueMediaItem");
static_assert(sizeof(WIDGET_MediaPrompt_C_TryQueueMediaItem) == 0x000018, "Wrong size on WIDGET_MediaPrompt_C_TryQueueMediaItem");
static_assert(offsetof(WIDGET_MediaPrompt_C_TryQueueMediaItem, MediaItem) == 0x000000, "Member 'WIDGET_MediaPrompt_C_TryQueueMediaItem::MediaItem' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_TryQueueMediaItem, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WIDGET_MediaPrompt_C_TryQueueMediaItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_TryQueueMediaItem, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'WIDGET_MediaPrompt_C_TryQueueMediaItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_TryQueueMediaItem, CallFunc_GetMediaPriority_Priority) == 0x00000C, "Member 'WIDGET_MediaPrompt_C_TryQueueMediaItem::CallFunc_GetMediaPriority_Priority' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_TryQueueMediaItem, CallFunc_GetMediaPriority_Priority_1) == 0x000010, "Member 'WIDGET_MediaPrompt_C_TryQueueMediaItem::CallFunc_GetMediaPriority_Priority_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_TryQueueMediaItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'WIDGET_MediaPrompt_C_TryQueueMediaItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.TryCancelQueuedMediaItem
// 0x0014 (0x0014 - 0x0000)
struct WIDGET_MediaPrompt_C_TryCancelQueuedMediaItem final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaPrompt_C_TryCancelQueuedMediaItem) == 0x000004, "Wrong alignment on WIDGET_MediaPrompt_C_TryCancelQueuedMediaItem");
static_assert(sizeof(WIDGET_MediaPrompt_C_TryCancelQueuedMediaItem) == 0x000014, "Wrong size on WIDGET_MediaPrompt_C_TryCancelQueuedMediaItem");
static_assert(offsetof(WIDGET_MediaPrompt_C_TryCancelQueuedMediaItem, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WIDGET_MediaPrompt_C_TryCancelQueuedMediaItem::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_TryCancelQueuedMediaItem, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WIDGET_MediaPrompt_C_TryCancelQueuedMediaItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.CanHoldKeyToPlayLog
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog) == 0x000001, "Wrong alignment on WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog");
static_assert(sizeof(WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog) == 0x000004, "Wrong size on WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog, Result) == 0x000000, "Member 'WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog, CallFunc_IsVisible_ReturnValue) == 0x000002, "Member 'WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'WIDGET_MediaPrompt_C_CanHoldKeyToPlayLog::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.GetPulsingColorValue
// 0x0090 (0x0090 - 0x0000)
struct WIDGET_MediaPrompt_C_GetPulsingColorValue final
{
public:
	struct FColor                                 Color;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateProgress;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakePulsatingValue_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaPrompt_C_GetPulsingColorValue) == 0x000004, "Wrong alignment on WIDGET_MediaPrompt_C_GetPulsingColorValue");
static_assert(sizeof(WIDGET_MediaPrompt_C_GetPulsingColorValue) == 0x000090, "Wrong size on WIDGET_MediaPrompt_C_GetPulsingColorValue");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, Color) == 0x000000, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::Color' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, StateProgress) == 0x000004, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::StateProgress' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, Progress) == 0x000008, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::Progress' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00000C, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x000010, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_MakePulsatingValue_ReturnValue) == 0x000018, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_MakePulsatingValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_Ease_ReturnValue) == 0x00001C, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, Temp_bool_Variable) == 0x000020, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_FClamp_ReturnValue) == 0x00002C, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000030, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000040, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, K2Node_Select_Default) == 0x000044, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x000048, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_LinearColorLerp_ReturnValue) == 0x000058, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_BreakColor_R) == 0x000068, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_BreakColor_G) == 0x00006C, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_BreakColor_B) == 0x000070, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_BreakColor_A) == 0x000074, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000078, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_MakeColor_ReturnValue) == 0x00007C, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetPulsingColorValue, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x00008C, "Member 'WIDGET_MediaPrompt_C_GetPulsingColorValue::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.GetHoldingButtonColorValue
// 0x005C (0x005C - 0x0000)
struct WIDGET_MediaPrompt_C_GetHoldingButtonColorValue final
{
public:
	struct FColor                                 Color;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateProgress;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoldKeyProgress;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetPulsingColorValue_Color;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue) == 0x000004, "Wrong alignment on WIDGET_MediaPrompt_C_GetHoldingButtonColorValue");
static_assert(sizeof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue) == 0x00005C, "Wrong size on WIDGET_MediaPrompt_C_GetHoldingButtonColorValue");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, Color) == 0x000000, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::Color' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, StateProgress) == 0x000004, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::StateProgress' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, HoldKeyProgress) == 0x000008, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::HoldKeyProgress' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00000C, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000010, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, CallFunc_GetPulsingColorValue_Color) == 0x000024, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::CallFunc_GetPulsingColorValue_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x00002C, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, CallFunc_LinearColorLerp_ReturnValue) == 0x00003C, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x00004C, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000050, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetHoldingButtonColorValue, CallFunc_FClamp_ReturnValue_1) == 0x000058, "Member 'WIDGET_MediaPrompt_C_GetHoldingButtonColorValue::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.MultiplyColorAlpha
// 0x0044 (0x0044 - 0x0000)
struct WIDGET_MediaPrompt_C_MultiplyColorAlpha final
{
public:
	struct FColor                                 InitialColor;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AlphaMultiplier;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 ModifiedColor;                                     // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaPrompt_C_MultiplyColorAlpha) == 0x000004, "Wrong alignment on WIDGET_MediaPrompt_C_MultiplyColorAlpha");
static_assert(sizeof(WIDGET_MediaPrompt_C_MultiplyColorAlpha) == 0x000044, "Wrong size on WIDGET_MediaPrompt_C_MultiplyColorAlpha");
static_assert(offsetof(WIDGET_MediaPrompt_C_MultiplyColorAlpha, InitialColor) == 0x000000, "Member 'WIDGET_MediaPrompt_C_MultiplyColorAlpha::InitialColor' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_MultiplyColorAlpha, AlphaMultiplier) == 0x000004, "Member 'WIDGET_MediaPrompt_C_MultiplyColorAlpha::AlphaMultiplier' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_MultiplyColorAlpha, ModifiedColor) == 0x000008, "Member 'WIDGET_MediaPrompt_C_MultiplyColorAlpha::ModifiedColor' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_MultiplyColorAlpha, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x00000C, "Member 'WIDGET_MediaPrompt_C_MultiplyColorAlpha::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_MultiplyColorAlpha, CallFunc_BreakColor_R) == 0x00001C, "Member 'WIDGET_MediaPrompt_C_MultiplyColorAlpha::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_MultiplyColorAlpha, CallFunc_BreakColor_G) == 0x000020, "Member 'WIDGET_MediaPrompt_C_MultiplyColorAlpha::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_MultiplyColorAlpha, CallFunc_BreakColor_B) == 0x000024, "Member 'WIDGET_MediaPrompt_C_MultiplyColorAlpha::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_MultiplyColorAlpha, CallFunc_BreakColor_A) == 0x000028, "Member 'WIDGET_MediaPrompt_C_MultiplyColorAlpha::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_MultiplyColorAlpha, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'WIDGET_MediaPrompt_C_MultiplyColorAlpha::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_MultiplyColorAlpha, CallFunc_MakeColor_ReturnValue) == 0x000030, "Member 'WIDGET_MediaPrompt_C_MultiplyColorAlpha::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_MultiplyColorAlpha, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x000040, "Member 'WIDGET_MediaPrompt_C_MultiplyColorAlpha::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.CanShowPromptForNewMedia
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_MediaPrompt_C_CanShowPromptForNewMedia final
{
public:
	class UITEM_MediaBase_C*                      MediaItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewMediaPriority;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OldMediaPriority;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMediaDisplayVisible_Result;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMediaPriority_Priority;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMediaPriority_Priority_1;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia) == 0x000008, "Wrong alignment on WIDGET_MediaPrompt_C_CanShowPromptForNewMedia");
static_assert(sizeof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia) == 0x000028, "Wrong size on WIDGET_MediaPrompt_C_CanShowPromptForNewMedia");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia, MediaItem) == 0x000000, "Member 'WIDGET_MediaPrompt_C_CanShowPromptForNewMedia::MediaItem' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia, Result) == 0x000008, "Member 'WIDGET_MediaPrompt_C_CanShowPromptForNewMedia::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia, NewMediaPriority) == 0x00000C, "Member 'WIDGET_MediaPrompt_C_CanShowPromptForNewMedia::NewMediaPriority' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia, OldMediaPriority) == 0x000010, "Member 'WIDGET_MediaPrompt_C_CanShowPromptForNewMedia::OldMediaPriority' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'WIDGET_MediaPrompt_C_CanShowPromptForNewMedia::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia, CallFunc_IsMediaDisplayVisible_Result) == 0x000015, "Member 'WIDGET_MediaPrompt_C_CanShowPromptForNewMedia::CallFunc_IsMediaDisplayVisible_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia, CallFunc_IsVisible_ReturnValue) == 0x000016, "Member 'WIDGET_MediaPrompt_C_CanShowPromptForNewMedia::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia, CallFunc_Not_PreBool_ReturnValue) == 0x000017, "Member 'WIDGET_MediaPrompt_C_CanShowPromptForNewMedia::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia, CallFunc_Not_PreBool_ReturnValue_1) == 0x000018, "Member 'WIDGET_MediaPrompt_C_CanShowPromptForNewMedia::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia, CallFunc_Greater_IntInt_ReturnValue) == 0x000019, "Member 'WIDGET_MediaPrompt_C_CanShowPromptForNewMedia::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia, CallFunc_GetMediaPriority_Priority) == 0x00001C, "Member 'WIDGET_MediaPrompt_C_CanShowPromptForNewMedia::CallFunc_GetMediaPriority_Priority' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_CanShowPromptForNewMedia, CallFunc_GetMediaPriority_Priority_1) == 0x000020, "Member 'WIDGET_MediaPrompt_C_CanShowPromptForNewMedia::CallFunc_GetMediaPriority_Priority_1' has a wrong offset!");

// Function WIDGET_MediaPrompt.WIDGET_MediaPrompt_C.GetMediaPriority
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_MediaPrompt_C_GetMediaPriority final
{
public:
	class UITEM_MediaBase_C*                      MediaItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Priority_0;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEMAIL_ITEM_Base_C*                     K2Node_DynamicCast_AsEMAIL_ITEM_Base;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_AudioLog_C*                       K2Node_DynamicCast_AsITEM_Audio_Log;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaPrompt_C_GetMediaPriority) == 0x000008, "Wrong alignment on WIDGET_MediaPrompt_C_GetMediaPriority");
static_assert(sizeof(WIDGET_MediaPrompt_C_GetMediaPriority) == 0x000030, "Wrong size on WIDGET_MediaPrompt_C_GetMediaPriority");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetMediaPriority, MediaItem) == 0x000000, "Member 'WIDGET_MediaPrompt_C_GetMediaPriority::MediaItem' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetMediaPriority, Priority_0) == 0x000008, "Member 'WIDGET_MediaPrompt_C_GetMediaPriority::Priority_0' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetMediaPriority, K2Node_DynamicCast_AsEMAIL_ITEM_Base) == 0x000010, "Member 'WIDGET_MediaPrompt_C_GetMediaPriority::K2Node_DynamicCast_AsEMAIL_ITEM_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetMediaPriority, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_MediaPrompt_C_GetMediaPriority::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetMediaPriority, K2Node_DynamicCast_AsITEM_Audio_Log) == 0x000020, "Member 'WIDGET_MediaPrompt_C_GetMediaPriority::K2Node_DynamicCast_AsITEM_Audio_Log' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaPrompt_C_GetMediaPriority, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'WIDGET_MediaPrompt_C_GetMediaPriority::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}


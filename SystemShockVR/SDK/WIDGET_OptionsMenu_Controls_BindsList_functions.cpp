#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_OptionsMenu_Controls_BindsList

#include "Basic.hpp"

#include "WIDGET_OptionsMenu_Controls_BindsList_classes.hpp"
#include "WIDGET_OptionsMenu_Controls_BindsList_parameters.hpp"


namespace SDK
{

// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.InitializeList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWIDGET_MenuBase_C*               ParentScreen                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_OptionsMenu_Controls_BindsList_C::InitializeList(class UWIDGET_MenuBase_C* ParentScreen)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "InitializeList");

	Params::WIDGET_OptionsMenu_Controls_BindsList_C_InitializeList Parms{};

	Parms.ParentScreen = ParentScreen;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.StashKeyAction
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             KeyMapping                                             (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// ENUM_PrimarySecondary                   Rank                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_OptionsMenu_Controls_BindsList_C::StashKeyAction(class FName ActionName, const struct FKey& KeyMapping, ENUM_PrimarySecondary Rank)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "StashKeyAction");

	Params::WIDGET_OptionsMenu_Controls_BindsList_C_StashKeyAction Parms{};

	Parms.ActionName = ActionName;
	Parms.KeyMapping = std::move(KeyMapping);
	Parms.Rank = Rank;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.GetStashedKeyForAction
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ActionName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_PrimarySecondary                   Rank                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Result                                                 (Parm, OutParm, HasGetValueTypeHash)

void UWIDGET_OptionsMenu_Controls_BindsList_C::GetStashedKeyForAction(class FName ActionName, ENUM_PrimarySecondary Rank, struct FKey* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "GetStashedKeyForAction");

	Params::WIDGET_OptionsMenu_Controls_BindsList_C_GetStashedKeyForAction Parms{};

	Parms.ActionName = ActionName;
	Parms.Rank = Rank;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.IsGamepadBindsList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_OptionsMenu_Controls_BindsList_C::IsGamepadBindsList(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "IsGamepadBindsList");

	Params::WIDGET_OptionsMenu_Controls_BindsList_C_IsGamepadBindsList Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.SetIsOptionListeningForInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsListening                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_OptionsMenu_Controls_BindsList_C::SetIsOptionListeningForInput(bool IsListening)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "SetIsOptionListeningForInput");

	Params::WIDGET_OptionsMenu_Controls_BindsList_C_SetIsOptionListeningForInput Parms{};

	Parms.IsListening = IsListening;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.GetIsOptionListeningForInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_OptionsMenu_Controls_BindsList_C::GetIsOptionListeningForInput(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "GetIsOptionListeningForInput");

	Params::WIDGET_OptionsMenu_Controls_BindsList_C_GetIsOptionListeningForInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.UpdateCurrentVisuals
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_OptionsMenu_Controls_BindsList_C::UpdateCurrentVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "UpdateCurrentVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.HasInputKeyMapChanged
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TMap<class FName, struct FSTRUCT_BoundInputActionPair>OldKeyMap                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TMap<class FName, struct FSTRUCT_BoundInputActionPair>NewKeyMap                                              (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_OptionsMenu_Controls_BindsList_C::HasInputKeyMapChanged(const TMap<class FName, struct FSTRUCT_BoundInputActionPair>& OldKeyMap, const TMap<class FName, struct FSTRUCT_BoundInputActionPair>& NewKeyMap, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "HasInputKeyMapChanged");

	Params::WIDGET_OptionsMenu_Controls_BindsList_C_HasInputKeyMapChanged Parms{};

	Parms.OldKeyMap = std::move(OldKeyMap);
	Parms.NewKeyMap = std::move(NewKeyMap);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.ResetStashedBinds
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_OptionsMenu_Controls_BindsList_C::ResetStashedBinds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "ResetStashedBinds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.OnListClose
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_OptionsMenu_Controls_BindsList_C::OnListClose()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "OnListClose");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.OnListOpen
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_OptionsMenu_Controls_BindsList_C::OnListOpen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "OnListOpen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.ReceiveNavAlt1
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_OptionsMenu_Controls_BindsList_C::ReceiveNavAlt1(bool InputState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "ReceiveNavAlt1");

	Params::WIDGET_OptionsMenu_Controls_BindsList_C_ReceiveNavAlt1 Parms{};

	Parms.InputState = InputState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.ReceiveNavAlt2
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_OptionsMenu_Controls_BindsList_C::ReceiveNavAlt2(bool InputState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "ReceiveNavAlt2");

	Params::WIDGET_OptionsMenu_Controls_BindsList_C_ReceiveNavAlt2 Parms{};

	Parms.InputState = InputState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.ReceiveNavBack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_OptionsMenu_Controls_BindsList_C::ReceiveNavBack(bool InputState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "ReceiveNavBack");

	Params::WIDGET_OptionsMenu_Controls_BindsList_C_ReceiveNavBack Parms{};

	Parms.InputState = InputState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_OptionsMenu_Controls_BindsList.WIDGET_OptionsMenu_Controls_BindsList_C.EVENT_OnOptionChanged
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_OptionsMenu_Controls_BindsList_C::EVENT_OnOptionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_OptionsMenu_Controls_BindsList_C", "EVENT_OnOptionChanged");

	UObject::ProcessEvent(Func, nullptr);
}

}


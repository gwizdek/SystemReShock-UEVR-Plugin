#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_Move

#include "Basic.hpp"

#include "TASK_Move_classes.hpp"
#include "TASK_Move_parameters.hpp"


namespace SDK
{

// Function TASK_Move.TASK_Move_C.ExecuteUbergraph_TASK_Move
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Move_C::ExecuteUbergraph_TASK_Move(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Move_C", "ExecuteUbergraph_TASK_Move");

	Params::TASK_Move_C_ExecuteUbergraph_TASK_Move Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Move.TASK_Move_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Move_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Move_C", "ReceiveTickAI");

	Params::TASK_Move_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Move.TASK_Move_C.ReceiveAbortAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Move_C::ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Move_C", "ReceiveAbortAI");

	Params::TASK_Move_C_ReceiveAbortAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Move.TASK_Move_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Move_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Move_C", "ReceiveExecuteAI");

	Params::TASK_Move_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Move.TASK_Move_C.0_Stop
// (Public, BlueprintCallable, BlueprintEvent)

void UTASK_Move_C::Zero_Stop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Move_C", "0_Stop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TASK_Move.TASK_Move_C.1_Walk
// (Public, BlueprintCallable, BlueprintEvent)

void UTASK_Move_C::One_Walk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Move_C", "1_Walk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TASK_Move.TASK_Move_C.2_Jog
// (Public, BlueprintCallable, BlueprintEvent)

void UTASK_Move_C::Two_Jog()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Move_C", "2_Jog");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TASK_Move.TASK_Move_C.3_Sprint
// (Public, BlueprintCallable, BlueprintEvent)

void UTASK_Move_C::Three_Sprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Move_C", "3_Sprint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TASK_Move.TASK_Move_C.4_Turn
// (Public, BlueprintCallable, BlueprintEvent)

void UTASK_Move_C::Four_Turn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Move_C", "4_Turn");

	UObject::ProcessEvent(Func, nullptr);
}

}


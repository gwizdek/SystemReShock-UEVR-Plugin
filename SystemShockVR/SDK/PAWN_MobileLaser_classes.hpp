#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_MobileLaser

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PAWN_Enemy_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PAWN_MobileLaser.PAWN_MobileLaser_C
// 0x00B0 (0x0AC0 - 0x0A10)
class APAWN_MobileLaser_C final : public APAWN_Enemy_C
{
public:
	uint8                                         Pad_A01[0x7];                                      // 0x0A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_PAWN_MobileLaser_C;                 // 0x0A08(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_VoxelAudio_C*                     TreadAudio;                                        // 0x0A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     MouthAudio;                                        // 0x0A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        RTread_Spawn;                                      // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        LTread_Spawn;                                      // 0x0A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   BeamGlowLight;                                     // 0x0A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          RightForearmHitbox;                                // 0x0A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ScanBox;                                           // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_MeleeDamageComponent_C*           COMP_MeleeDamageComponent;                         // 0x0A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   RootBoneName;                                      // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SpineBoneName;                                     // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPhysicalAnimationData                 DeathRattlePhysicsData;                            // 0x0A60(0x0024)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_A84[0x4];                                      // 0x0A84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               TreadSound;                                        // 0x0A88(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          IsMoving;                                          // 0x0AB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTurning;                                         // 0x0AB1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsTreadSoundPlaying;                               // 0x0AB2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_PAWN_MobileLaser(int32 EntryPoint);
	void UpdateTreadsAudio();
	void EVENT_OnTurningChanged(bool IsTurning_0);
	void EVENT_OnLocomotionChanged(bool IsMoving_0);
	void ReceiveBeginPlay();
	void OnLoaded_7641D7A14FD0F0721A480E9681E723DF(class UObject* Loaded);
	void StopTreadsAudio();
	void GetProxyBarrelWorldLocation(struct FVector* ProxyBarrelLocation);
	void OnCharacterDied(class UOBJ_ImpactData_C* ImpactData, const struct FAttribDamageInstance& DamageInstance, class AActor* OtherActor, bool* Result);
	void InitializeCharacterAsDead(bool* Result);
	void OnDynaDamage(class FName DynaElement, bool OnBeginPlay);
	void OnLowFiBehaviorStateChanged(bool NewLowFiState);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PAWN_MobileLaser_C">();
	}
	static class APAWN_MobileLaser_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APAWN_MobileLaser_C>();
	}
};
static_assert(alignof(APAWN_MobileLaser_C) == 0x000010, "Wrong alignment on APAWN_MobileLaser_C");
static_assert(sizeof(APAWN_MobileLaser_C) == 0x000AC0, "Wrong size on APAWN_MobileLaser_C");
static_assert(offsetof(APAWN_MobileLaser_C, UberGraphFrame_PAWN_MobileLaser_C) == 0x000A08, "Member 'APAWN_MobileLaser_C::UberGraphFrame_PAWN_MobileLaser_C' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, TreadAudio) == 0x000A10, "Member 'APAWN_MobileLaser_C::TreadAudio' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, MouthAudio) == 0x000A18, "Member 'APAWN_MobileLaser_C::MouthAudio' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, RTread_Spawn) == 0x000A20, "Member 'APAWN_MobileLaser_C::RTread_Spawn' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, LTread_Spawn) == 0x000A28, "Member 'APAWN_MobileLaser_C::LTread_Spawn' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, BeamGlowLight) == 0x000A30, "Member 'APAWN_MobileLaser_C::BeamGlowLight' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, RightForearmHitbox) == 0x000A38, "Member 'APAWN_MobileLaser_C::RightForearmHitbox' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, ScanBox) == 0x000A40, "Member 'APAWN_MobileLaser_C::ScanBox' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, COMP_MeleeDamageComponent) == 0x000A48, "Member 'APAWN_MobileLaser_C::COMP_MeleeDamageComponent' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, RootBoneName) == 0x000A50, "Member 'APAWN_MobileLaser_C::RootBoneName' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, SpineBoneName) == 0x000A58, "Member 'APAWN_MobileLaser_C::SpineBoneName' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, DeathRattlePhysicsData) == 0x000A60, "Member 'APAWN_MobileLaser_C::DeathRattlePhysicsData' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, TreadSound) == 0x000A88, "Member 'APAWN_MobileLaser_C::TreadSound' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, IsMoving) == 0x000AB0, "Member 'APAWN_MobileLaser_C::IsMoving' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, IsTurning) == 0x000AB1, "Member 'APAWN_MobileLaser_C::IsTurning' has a wrong offset!");
static_assert(offsetof(APAWN_MobileLaser_C, IsTreadSoundPlaying) == 0x000AB2, "Member 'APAWN_MobileLaser_C::IsTreadSoundPlaying' has a wrong offset!");

}


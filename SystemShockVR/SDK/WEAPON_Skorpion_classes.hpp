#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEAPON_Skorpion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ITEM_ProjectileWeapon_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WEAPON_Skorpion.WEAPON_Skorpion_C
// 0x0028 (0x0578 - 0x0550)
class UWEAPON_Skorpion_C final : public UITEM_ProjectileWeapon_Base_C
{
public:
	bool                                          HasBarrelAttachment;                               // 0x0550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastHeatPercentage;                                // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastHeatTimestamp;                                 // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayBeforeCooling;                                // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CriticalHeatThreshold;                             // 0x0560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CoolingRate;                                       // 0x0564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasLastUsingErraticTrajectory;                     // 0x0568(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           HeatUpdateTimerHandle;                             // 0x0570(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void FireProjectile(class AActor** FiredProjectile, struct FVector* Direction);
	void GetProjectileClass(class UClass** Result);
	void InitializeProjectile(class ABulletProjectile_MachineGun_C* Projectile);
	void AddHeat();
	void UpdateHeat();
	void OnUpdateHeat();
	void PrecomputeHeatSideEffects();
	void TryStartHeatTimer();
	void TryStopHeatTimer();
	void SetHasBarrelAttachment(bool State);
	void GetHeatPercentage(float* Result);
	void OnWeaponBecameActivatable(class APAWN_SystemShockCharacter_C* Character, bool ShowImmediately);
	void OnBecomeUnactivatable(bool* Result);
	void ComputeSpreadDirection(const struct FVector& BarrelDirection, struct FVector* SpreadDirection);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WEAPON_Skorpion_C">();
	}
	static class UWEAPON_Skorpion_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWEAPON_Skorpion_C>();
	}
};
static_assert(alignof(UWEAPON_Skorpion_C) == 0x000008, "Wrong alignment on UWEAPON_Skorpion_C");
static_assert(sizeof(UWEAPON_Skorpion_C) == 0x000578, "Wrong size on UWEAPON_Skorpion_C");
static_assert(offsetof(UWEAPON_Skorpion_C, HasBarrelAttachment) == 0x000550, "Member 'UWEAPON_Skorpion_C::HasBarrelAttachment' has a wrong offset!");
static_assert(offsetof(UWEAPON_Skorpion_C, LastHeatPercentage) == 0x000554, "Member 'UWEAPON_Skorpion_C::LastHeatPercentage' has a wrong offset!");
static_assert(offsetof(UWEAPON_Skorpion_C, LastHeatTimestamp) == 0x000558, "Member 'UWEAPON_Skorpion_C::LastHeatTimestamp' has a wrong offset!");
static_assert(offsetof(UWEAPON_Skorpion_C, DelayBeforeCooling) == 0x00055C, "Member 'UWEAPON_Skorpion_C::DelayBeforeCooling' has a wrong offset!");
static_assert(offsetof(UWEAPON_Skorpion_C, CriticalHeatThreshold) == 0x000560, "Member 'UWEAPON_Skorpion_C::CriticalHeatThreshold' has a wrong offset!");
static_assert(offsetof(UWEAPON_Skorpion_C, CoolingRate) == 0x000564, "Member 'UWEAPON_Skorpion_C::CoolingRate' has a wrong offset!");
static_assert(offsetof(UWEAPON_Skorpion_C, WasLastUsingErraticTrajectory) == 0x000568, "Member 'UWEAPON_Skorpion_C::WasLastUsingErraticTrajectory' has a wrong offset!");
static_assert(offsetof(UWEAPON_Skorpion_C, HeatUpdateTimerHandle) == 0x000570, "Member 'UWEAPON_Skorpion_C::HeatUpdateTimerHandle' has a wrong offset!");

}


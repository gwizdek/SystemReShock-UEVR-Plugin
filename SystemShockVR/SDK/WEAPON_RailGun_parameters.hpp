#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEAPON_RailGun

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "STRUCT_WeaponMode_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WEAPON_RailGun.WEAPON_RailGun_C.ExecuteUbergraph_WEAPON_RailGun
// 0x01E8 (0x01E8 - 0x0000)
struct WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_9;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_8;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_7;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_6;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_5;                       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_1;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_4;                       // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_2;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_6;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_3;                  // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_7;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_4;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_8;                            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_5;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_9;                            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_6;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_5;            // 0x0194(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_6;            // 0x01A4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_7;            // 0x01B4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_8;            // 0x01C4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_9;            // 0x01D4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun");
static_assert(sizeof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun) == 0x0001E8, "Wrong size on WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, EntryPoint) == 0x000000, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::EntryPoint' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CustomEvent_Loaded_9) == 0x000048, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CustomEvent_Loaded_9' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CreateDelegate_OutputDelegate_4) == 0x000050, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, Temp_object_Variable) == 0x000060, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_AsAnim_Montage) == 0x000068, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CustomEvent_Loaded_8) == 0x000078, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CustomEvent_Loaded_8' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, Temp_object_Variable_1) == 0x000080, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_AsAnim_Montage_1) == 0x000088, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CustomEvent_Loaded_7) == 0x000098, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CustomEvent_Loaded_7' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, Temp_object_Variable_2) == 0x0000A0, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_AsNiagara_System) == 0x0000A8, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CustomEvent_Loaded_6) == 0x0000B8, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CustomEvent_Loaded_6' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, Temp_object_Variable_3) == 0x0000C0, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_AsSound_Cue) == 0x0000C8, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CustomEvent_Loaded_5) == 0x0000D8, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CustomEvent_Loaded_5' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, Temp_object_Variable_4) == 0x0000E0, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_AsSound_Cue_1) == 0x0000E8, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_AsSound_Cue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_bSuccess_4) == 0x0000F0, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CustomEvent_Loaded_4) == 0x0000F8, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, Temp_object_Variable_5) == 0x000100, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_AsSound_Cue_2) == 0x000108, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_AsSound_Cue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_bSuccess_5) == 0x000110, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CustomEvent_Loaded_3) == 0x000118, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, Temp_object_Variable_6) == 0x000120, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_AsSound_Cue_3) == 0x000128, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_AsSound_Cue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_bSuccess_6) == 0x000130, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CustomEvent_Loaded_2) == 0x000138, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, Temp_object_Variable_7) == 0x000140, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_AsSound_Cue_4) == 0x000148, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_AsSound_Cue_4' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_bSuccess_7) == 0x000150, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CustomEvent_Loaded_1) == 0x000158, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, Temp_object_Variable_8) == 0x000160, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_AsSound_Cue_5) == 0x000168, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_AsSound_Cue_5' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_bSuccess_8) == 0x000170, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CustomEvent_Loaded) == 0x000178, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, Temp_object_Variable_9) == 0x000180, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_AsSound_Cue_6) == 0x000188, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_AsSound_Cue_6' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_DynamicCast_bSuccess_9) == 0x000190, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CreateDelegate_OutputDelegate_5) == 0x000194, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CreateDelegate_OutputDelegate_6) == 0x0001A4, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001B4, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CreateDelegate_OutputDelegate_8) == 0x0001C4, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun, K2Node_CreateDelegate_OutputDelegate_9) == 0x0001D4, "Member 'WEAPON_RailGun_C_ExecuteUbergraph_WEAPON_RailGun::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnLoaded_5720FE574376ACD59DD48CAE01523587
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_OnLoaded_5720FE574376ACD59DD48CAE01523587 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_OnLoaded_5720FE574376ACD59DD48CAE01523587) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnLoaded_5720FE574376ACD59DD48CAE01523587");
static_assert(sizeof(WEAPON_RailGun_C_OnLoaded_5720FE574376ACD59DD48CAE01523587) == 0x000008, "Wrong size on WEAPON_RailGun_C_OnLoaded_5720FE574376ACD59DD48CAE01523587");
static_assert(offsetof(WEAPON_RailGun_C_OnLoaded_5720FE574376ACD59DD48CAE01523587, Loaded) == 0x000000, "Member 'WEAPON_RailGun_C_OnLoaded_5720FE574376ACD59DD48CAE01523587::Loaded' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnLoaded_8743A92249565054FE40349F7DA41F6B
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_OnLoaded_8743A92249565054FE40349F7DA41F6B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_OnLoaded_8743A92249565054FE40349F7DA41F6B) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnLoaded_8743A92249565054FE40349F7DA41F6B");
static_assert(sizeof(WEAPON_RailGun_C_OnLoaded_8743A92249565054FE40349F7DA41F6B) == 0x000008, "Wrong size on WEAPON_RailGun_C_OnLoaded_8743A92249565054FE40349F7DA41F6B");
static_assert(offsetof(WEAPON_RailGun_C_OnLoaded_8743A92249565054FE40349F7DA41F6B, Loaded) == 0x000000, "Member 'WEAPON_RailGun_C_OnLoaded_8743A92249565054FE40349F7DA41F6B::Loaded' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnLoaded_E9FE140D4F405DCA7BCD9497199571BA
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_OnLoaded_E9FE140D4F405DCA7BCD9497199571BA final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_OnLoaded_E9FE140D4F405DCA7BCD9497199571BA) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnLoaded_E9FE140D4F405DCA7BCD9497199571BA");
static_assert(sizeof(WEAPON_RailGun_C_OnLoaded_E9FE140D4F405DCA7BCD9497199571BA) == 0x000008, "Wrong size on WEAPON_RailGun_C_OnLoaded_E9FE140D4F405DCA7BCD9497199571BA");
static_assert(offsetof(WEAPON_RailGun_C_OnLoaded_E9FE140D4F405DCA7BCD9497199571BA, Loaded) == 0x000000, "Member 'WEAPON_RailGun_C_OnLoaded_E9FE140D4F405DCA7BCD9497199571BA::Loaded' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnLoaded_4A73B99447DF07AACEF2F6A768C4B39A
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_OnLoaded_4A73B99447DF07AACEF2F6A768C4B39A final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_OnLoaded_4A73B99447DF07AACEF2F6A768C4B39A) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnLoaded_4A73B99447DF07AACEF2F6A768C4B39A");
static_assert(sizeof(WEAPON_RailGun_C_OnLoaded_4A73B99447DF07AACEF2F6A768C4B39A) == 0x000008, "Wrong size on WEAPON_RailGun_C_OnLoaded_4A73B99447DF07AACEF2F6A768C4B39A");
static_assert(offsetof(WEAPON_RailGun_C_OnLoaded_4A73B99447DF07AACEF2F6A768C4B39A, Loaded) == 0x000000, "Member 'WEAPON_RailGun_C_OnLoaded_4A73B99447DF07AACEF2F6A768C4B39A::Loaded' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnLoaded_01A2328B4439EFE397747EA95F5CF048
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_OnLoaded_01A2328B4439EFE397747EA95F5CF048 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_OnLoaded_01A2328B4439EFE397747EA95F5CF048) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnLoaded_01A2328B4439EFE397747EA95F5CF048");
static_assert(sizeof(WEAPON_RailGun_C_OnLoaded_01A2328B4439EFE397747EA95F5CF048) == 0x000008, "Wrong size on WEAPON_RailGun_C_OnLoaded_01A2328B4439EFE397747EA95F5CF048");
static_assert(offsetof(WEAPON_RailGun_C_OnLoaded_01A2328B4439EFE397747EA95F5CF048, Loaded) == 0x000000, "Member 'WEAPON_RailGun_C_OnLoaded_01A2328B4439EFE397747EA95F5CF048::Loaded' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnLoaded_9AA6C2524D1EB4CCC75E44A27E6C9798
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_OnLoaded_9AA6C2524D1EB4CCC75E44A27E6C9798 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_OnLoaded_9AA6C2524D1EB4CCC75E44A27E6C9798) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnLoaded_9AA6C2524D1EB4CCC75E44A27E6C9798");
static_assert(sizeof(WEAPON_RailGun_C_OnLoaded_9AA6C2524D1EB4CCC75E44A27E6C9798) == 0x000008, "Wrong size on WEAPON_RailGun_C_OnLoaded_9AA6C2524D1EB4CCC75E44A27E6C9798");
static_assert(offsetof(WEAPON_RailGun_C_OnLoaded_9AA6C2524D1EB4CCC75E44A27E6C9798, Loaded) == 0x000000, "Member 'WEAPON_RailGun_C_OnLoaded_9AA6C2524D1EB4CCC75E44A27E6C9798::Loaded' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnLoaded_C6FD450A44CCB16F84FB0B9A936A06CB
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_OnLoaded_C6FD450A44CCB16F84FB0B9A936A06CB final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_OnLoaded_C6FD450A44CCB16F84FB0B9A936A06CB) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnLoaded_C6FD450A44CCB16F84FB0B9A936A06CB");
static_assert(sizeof(WEAPON_RailGun_C_OnLoaded_C6FD450A44CCB16F84FB0B9A936A06CB) == 0x000008, "Wrong size on WEAPON_RailGun_C_OnLoaded_C6FD450A44CCB16F84FB0B9A936A06CB");
static_assert(offsetof(WEAPON_RailGun_C_OnLoaded_C6FD450A44CCB16F84FB0B9A936A06CB, Loaded) == 0x000000, "Member 'WEAPON_RailGun_C_OnLoaded_C6FD450A44CCB16F84FB0B9A936A06CB::Loaded' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnLoaded_93B8DF1F43B0049ED402B9B57C3A1446
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_OnLoaded_93B8DF1F43B0049ED402B9B57C3A1446 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_OnLoaded_93B8DF1F43B0049ED402B9B57C3A1446) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnLoaded_93B8DF1F43B0049ED402B9B57C3A1446");
static_assert(sizeof(WEAPON_RailGun_C_OnLoaded_93B8DF1F43B0049ED402B9B57C3A1446) == 0x000008, "Wrong size on WEAPON_RailGun_C_OnLoaded_93B8DF1F43B0049ED402B9B57C3A1446");
static_assert(offsetof(WEAPON_RailGun_C_OnLoaded_93B8DF1F43B0049ED402B9B57C3A1446, Loaded) == 0x000000, "Member 'WEAPON_RailGun_C_OnLoaded_93B8DF1F43B0049ED402B9B57C3A1446::Loaded' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnLoaded_D7391D554DCE817853AC78A6A6BFBB87
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_OnLoaded_D7391D554DCE817853AC78A6A6BFBB87 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_OnLoaded_D7391D554DCE817853AC78A6A6BFBB87) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnLoaded_D7391D554DCE817853AC78A6A6BFBB87");
static_assert(sizeof(WEAPON_RailGun_C_OnLoaded_D7391D554DCE817853AC78A6A6BFBB87) == 0x000008, "Wrong size on WEAPON_RailGun_C_OnLoaded_D7391D554DCE817853AC78A6A6BFBB87");
static_assert(offsetof(WEAPON_RailGun_C_OnLoaded_D7391D554DCE817853AC78A6A6BFBB87, Loaded) == 0x000000, "Member 'WEAPON_RailGun_C_OnLoaded_D7391D554DCE817853AC78A6A6BFBB87::Loaded' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnLoaded_A4273C444AFB5C6132FEDD80D1E89B1C
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_OnLoaded_A4273C444AFB5C6132FEDD80D1E89B1C final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_OnLoaded_A4273C444AFB5C6132FEDD80D1E89B1C) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnLoaded_A4273C444AFB5C6132FEDD80D1E89B1C");
static_assert(sizeof(WEAPON_RailGun_C_OnLoaded_A4273C444AFB5C6132FEDD80D1E89B1C) == 0x000008, "Wrong size on WEAPON_RailGun_C_OnLoaded_A4273C444AFB5C6132FEDD80D1E89B1C");
static_assert(offsetof(WEAPON_RailGun_C_OnLoaded_A4273C444AFB5C6132FEDD80D1E89B1C, Loaded) == 0x000000, "Member 'WEAPON_RailGun_C_OnLoaded_A4273C444AFB5C6132FEDD80D1E89B1C::Loaded' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.HasAmmoInMagazineOrChamber
// 0x0003 (0x0003 - 0x0000)
struct WEAPON_RailGun_C_HasAmmoInMagazineOrChamber final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasFullyRecharged_Result;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAmmoInMagazineOrChamber_Result;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_HasAmmoInMagazineOrChamber) == 0x000001, "Wrong alignment on WEAPON_RailGun_C_HasAmmoInMagazineOrChamber");
static_assert(sizeof(WEAPON_RailGun_C_HasAmmoInMagazineOrChamber) == 0x000003, "Wrong size on WEAPON_RailGun_C_HasAmmoInMagazineOrChamber");
static_assert(offsetof(WEAPON_RailGun_C_HasAmmoInMagazineOrChamber, Result) == 0x000000, "Member 'WEAPON_RailGun_C_HasAmmoInMagazineOrChamber::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_HasAmmoInMagazineOrChamber, CallFunc_HasFullyRecharged_Result) == 0x000001, "Member 'WEAPON_RailGun_C_HasAmmoInMagazineOrChamber::CallFunc_HasFullyRecharged_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_HasAmmoInMagazineOrChamber, CallFunc_HasAmmoInMagazineOrChamber_Result) == 0x000002, "Member 'WEAPON_RailGun_C_HasAmmoInMagazineOrChamber::CallFunc_HasAmmoInMagazineOrChamber_Result' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.GetProjectileClass
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_GetProjectileClass final
{
public:
	class UClass*                                 Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_GetProjectileClass) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_GetProjectileClass");
static_assert(sizeof(WEAPON_RailGun_C_GetProjectileClass) == 0x000008, "Wrong size on WEAPON_RailGun_C_GetProjectileClass");
static_assert(offsetof(WEAPON_RailGun_C_GetProjectileClass, Result) == 0x000000, "Member 'WEAPON_RailGun_C_GetProjectileClass::Result' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.FireProjectile
// 0x0030 (0x0030 - 0x0000)
struct WEAPON_RailGun_C_FireProjectile final
{
public:
	class AActor*                                 FiredProjectile;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FireProjectile_FiredProjectile;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FireProjectile_Direction;                 // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_FireProjectile) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_FireProjectile");
static_assert(sizeof(WEAPON_RailGun_C_FireProjectile) == 0x000030, "Wrong size on WEAPON_RailGun_C_FireProjectile");
static_assert(offsetof(WEAPON_RailGun_C_FireProjectile, FiredProjectile) == 0x000000, "Member 'WEAPON_RailGun_C_FireProjectile::FiredProjectile' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_FireProjectile, Direction) == 0x000008, "Member 'WEAPON_RailGun_C_FireProjectile::Direction' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_FireProjectile, CallFunc_FireProjectile_FiredProjectile) == 0x000018, "Member 'WEAPON_RailGun_C_FireProjectile::CallFunc_FireProjectile_FiredProjectile' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_FireProjectile, CallFunc_FireProjectile_Direction) == 0x000020, "Member 'WEAPON_RailGun_C_FireProjectile::CallFunc_FireProjectile_Direction' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.EjectShell
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_EjectShell final
{
public:
	class UAudioComponent*                        CallFunc_PlayRailgunSoundCue_AudioComponent;       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_EjectShell) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_EjectShell");
static_assert(sizeof(WEAPON_RailGun_C_EjectShell) == 0x000008, "Wrong size on WEAPON_RailGun_C_EjectShell");
static_assert(offsetof(WEAPON_RailGun_C_EjectShell, CallFunc_PlayRailgunSoundCue_AudioComponent) == 0x000000, "Member 'WEAPON_RailGun_C_EjectShell::CallFunc_PlayRailgunSoundCue_AudioComponent' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.HasFullyRecharged
// 0x000C (0x000C - 0x0000)
struct WEAPON_RailGun_C_HasFullyRecharged final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRechargeRatio_Result;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_HasFullyRecharged) == 0x000004, "Wrong alignment on WEAPON_RailGun_C_HasFullyRecharged");
static_assert(sizeof(WEAPON_RailGun_C_HasFullyRecharged) == 0x00000C, "Wrong size on WEAPON_RailGun_C_HasFullyRecharged");
static_assert(offsetof(WEAPON_RailGun_C_HasFullyRecharged, Result) == 0x000000, "Member 'WEAPON_RailGun_C_HasFullyRecharged::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_HasFullyRecharged, CallFunc_GetRechargeRatio_Result) == 0x000004, "Member 'WEAPON_RailGun_C_HasFullyRecharged::CallFunc_GetRechargeRatio_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_HasFullyRecharged, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'WEAPON_RailGun_C_HasFullyRecharged::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnWeaponBecameActivatable
// 0x0010 (0x0010 - 0x0000)
struct WEAPON_RailGun_C_OnWeaponBecameActivatable final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowImmediately;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_OnWeaponBecameActivatable) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnWeaponBecameActivatable");
static_assert(sizeof(WEAPON_RailGun_C_OnWeaponBecameActivatable) == 0x000010, "Wrong size on WEAPON_RailGun_C_OnWeaponBecameActivatable");
static_assert(offsetof(WEAPON_RailGun_C_OnWeaponBecameActivatable, Character) == 0x000000, "Member 'WEAPON_RailGun_C_OnWeaponBecameActivatable::Character' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnWeaponBecameActivatable, ShowImmediately) == 0x000008, "Member 'WEAPON_RailGun_C_OnWeaponBecameActivatable::ShowImmediately' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.GetRechargeRatio
// 0x0004 (0x0004 - 0x0000)
struct WEAPON_RailGun_C_GetRechargeRatio final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_GetRechargeRatio) == 0x000004, "Wrong alignment on WEAPON_RailGun_C_GetRechargeRatio");
static_assert(sizeof(WEAPON_RailGun_C_GetRechargeRatio) == 0x000004, "Wrong size on WEAPON_RailGun_C_GetRechargeRatio");
static_assert(offsetof(WEAPON_RailGun_C_GetRechargeRatio, Result) == 0x000000, "Member 'WEAPON_RailGun_C_GetRechargeRatio::Result' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.GetCurrentRechargeRate
// 0x000C (0x000C - 0x0000)
struct WEAPON_RailGun_C_GetCurrentRechargeRate final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentRechargeDuration_Result;        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_GetCurrentRechargeRate) == 0x000004, "Wrong alignment on WEAPON_RailGun_C_GetCurrentRechargeRate");
static_assert(sizeof(WEAPON_RailGun_C_GetCurrentRechargeRate) == 0x00000C, "Wrong size on WEAPON_RailGun_C_GetCurrentRechargeRate");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentRechargeRate, Result) == 0x000000, "Member 'WEAPON_RailGun_C_GetCurrentRechargeRate::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentRechargeRate, CallFunc_GetCurrentRechargeDuration_Result) == 0x000004, "Member 'WEAPON_RailGun_C_GetCurrentRechargeRate::CallFunc_GetCurrentRechargeDuration_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentRechargeRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'WEAPON_RailGun_C_GetCurrentRechargeRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.GetCurrentRechargeDuration
// 0x000C (0x000C - 0x0000)
struct WEAPON_RailGun_C_GetCurrentRechargeDuration final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_GetCurrentRechargeDuration) == 0x000004, "Wrong alignment on WEAPON_RailGun_C_GetCurrentRechargeDuration");
static_assert(sizeof(WEAPON_RailGun_C_GetCurrentRechargeDuration) == 0x00000C, "Wrong size on WEAPON_RailGun_C_GetCurrentRechargeDuration");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentRechargeDuration, Result) == 0x000000, "Member 'WEAPON_RailGun_C_GetCurrentRechargeDuration::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentRechargeDuration, Temp_bool_Variable) == 0x000004, "Member 'WEAPON_RailGun_C_GetCurrentRechargeDuration::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentRechargeDuration, K2Node_Select_Default) == 0x000008, "Member 'WEAPON_RailGun_C_GetCurrentRechargeDuration::K2Node_Select_Default' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.GetElapsedTimeSinceFired
// 0x0010 (0x0010 - 0x0000)
struct WEAPON_RailGun_C_GetElapsedTimeSinceFired final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_GetElapsedTimeSinceFired) == 0x000004, "Wrong alignment on WEAPON_RailGun_C_GetElapsedTimeSinceFired");
static_assert(sizeof(WEAPON_RailGun_C_GetElapsedTimeSinceFired) == 0x000010, "Wrong size on WEAPON_RailGun_C_GetElapsedTimeSinceFired");
static_assert(offsetof(WEAPON_RailGun_C_GetElapsedTimeSinceFired, Result) == 0x000000, "Member 'WEAPON_RailGun_C_GetElapsedTimeSinceFired::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetElapsedTimeSinceFired, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'WEAPON_RailGun_C_GetElapsedTimeSinceFired::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetElapsedTimeSinceFired, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'WEAPON_RailGun_C_GetElapsedTimeSinceFired::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetElapsedTimeSinceFired, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'WEAPON_RailGun_C_GetElapsedTimeSinceFired::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.GetRechargeRatioRemaining
// 0x000C (0x000C - 0x0000)
struct WEAPON_RailGun_C_GetRechargeRatioRemaining final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRechargeRatio_Result;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_GetRechargeRatioRemaining) == 0x000004, "Wrong alignment on WEAPON_RailGun_C_GetRechargeRatioRemaining");
static_assert(sizeof(WEAPON_RailGun_C_GetRechargeRatioRemaining) == 0x00000C, "Wrong size on WEAPON_RailGun_C_GetRechargeRatioRemaining");
static_assert(offsetof(WEAPON_RailGun_C_GetRechargeRatioRemaining, Result) == 0x000000, "Member 'WEAPON_RailGun_C_GetRechargeRatioRemaining::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetRechargeRatioRemaining, CallFunc_GetRechargeRatio_Result) == 0x000004, "Member 'WEAPON_RailGun_C_GetRechargeRatioRemaining::CallFunc_GetRechargeRatio_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetRechargeRatioRemaining, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'WEAPON_RailGun_C_GetRechargeRatioRemaining::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.GetElapsedTimeUntilFullyRecharged
// 0x0010 (0x0010 - 0x0000)
struct WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRechargeRatioRemaining_Result;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentRechargeDuration_Result;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged) == 0x000004, "Wrong alignment on WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged");
static_assert(sizeof(WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged) == 0x000010, "Wrong size on WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged");
static_assert(offsetof(WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged, Result) == 0x000000, "Member 'WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged, CallFunc_GetRechargeRatioRemaining_Result) == 0x000004, "Member 'WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged::CallFunc_GetRechargeRatioRemaining_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged, CallFunc_GetCurrentRechargeDuration_Result) == 0x000008, "Member 'WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged::CallFunc_GetCurrentRechargeDuration_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'WEAPON_RailGun_C_GetElapsedTimeUntilFullyRecharged::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.GetCurrentChargeDamageBonus
// 0x0034 (0x0034 - 0x0000)
struct WEAPON_RailGun_C_GetCurrentChargeDamageBonus final
{
public:
	int32                                         DamageBonus;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue_1;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus) == 0x000004, "Wrong alignment on WEAPON_RailGun_C_GetCurrentChargeDamageBonus");
static_assert(sizeof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus) == 0x000034, "Wrong size on WEAPON_RailGun_C_GetCurrentChargeDamageBonus");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, DamageBonus) == 0x000000, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::DamageBonus' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000004, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x000008, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, CallFunc_Conv_ByteToFloat_ReturnValue_1) == 0x000010, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::CallFunc_Conv_ByteToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000018, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000028, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, CallFunc_Round_ReturnValue) == 0x00002C, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetCurrentChargeDamageBonus, CallFunc_Min_ReturnValue) == 0x000030, "Member 'WEAPON_RailGun_C_GetCurrentChargeDamageBonus::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.ForceStartRechargeTimer
// 0x0018 (0x0018 - 0x0000)
struct WEAPON_RailGun_C_ForceStartRechargeTimer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_ForceStartRechargeTimer) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_ForceStartRechargeTimer");
static_assert(sizeof(WEAPON_RailGun_C_ForceStartRechargeTimer) == 0x000018, "Wrong size on WEAPON_RailGun_C_ForceStartRechargeTimer");
static_assert(offsetof(WEAPON_RailGun_C_ForceStartRechargeTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WEAPON_RailGun_C_ForceStartRechargeTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ForceStartRechargeTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'WEAPON_RailGun_C_ForceStartRechargeTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.TryStartRechargeTimer
// 0x0004 (0x0004 - 0x0000)
struct WEAPON_RailGun_C_TryStartRechargeTimer final
{
public:
	bool                                          CallFunc_HasFullyRecharged_Result;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_TryStartRechargeTimer) == 0x000001, "Wrong alignment on WEAPON_RailGun_C_TryStartRechargeTimer");
static_assert(sizeof(WEAPON_RailGun_C_TryStartRechargeTimer) == 0x000004, "Wrong size on WEAPON_RailGun_C_TryStartRechargeTimer");
static_assert(offsetof(WEAPON_RailGun_C_TryStartRechargeTimer, CallFunc_HasFullyRecharged_Result) == 0x000000, "Member 'WEAPON_RailGun_C_TryStartRechargeTimer::CallFunc_HasFullyRecharged_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartRechargeTimer, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WEAPON_RailGun_C_TryStartRechargeTimer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartRechargeTimer, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000002, "Member 'WEAPON_RailGun_C_TryStartRechargeTimer::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartRechargeTimer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'WEAPON_RailGun_C_TryStartRechargeTimer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.TryStopRechargeTimer
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_RailGun_C_TryStopRechargeTimer final
{
public:
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_TryStopRechargeTimer) == 0x000001, "Wrong alignment on WEAPON_RailGun_C_TryStopRechargeTimer");
static_assert(sizeof(WEAPON_RailGun_C_TryStopRechargeTimer) == 0x000001, "Wrong size on WEAPON_RailGun_C_TryStopRechargeTimer");
static_assert(offsetof(WEAPON_RailGun_C_TryStopRechargeTimer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000000, "Member 'WEAPON_RailGun_C_TryStopRechargeTimer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.TryStartManualRecharge
// 0x0040 (0x0040 - 0x0000)
struct WEAPON_RailGun_C_TryStartManualRecharge final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMontageCurrentlyPlaying_Result;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivatable_Result;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDefaultBlendOutTime_ReturnValue;       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTimeUntilFullyRecharged_Result; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_TryStartManualRecharge) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_TryStartManualRecharge");
static_assert(sizeof(WEAPON_RailGun_C_TryStartManualRecharge) == 0x000040, "Wrong size on WEAPON_RailGun_C_TryStartManualRecharge");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, Result) == 0x000000, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CharacterOwner) == 0x000008, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CharacterOwner' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_IsMontageCurrentlyPlaying_Result) == 0x000010, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_IsMontageCurrentlyPlaying_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_GetAttribValue_ReturnValue) == 0x000014, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_Round_ReturnValue) == 0x000018, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_Not_PreBool_ReturnValue_1) == 0x00001D, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_GetOwnerCharacter_Character) == 0x000020, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_IsActivatable_Result) == 0x000028, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_IsActivatable_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_GetDefaultBlendOutTime_ReturnValue) == 0x00002C, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_GetDefaultBlendOutTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_GetElapsedTimeUntilFullyRecharged_Result) == 0x000030, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_GetElapsedTimeUntilFullyRecharged_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStartManualRecharge, CallFunc_IsValid_ReturnValue_1) == 0x00003A, "Member 'WEAPON_RailGun_C_TryStartManualRecharge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.TryStopManualRecharge
// 0x0070 (0x0070 - 0x0000)
struct WEAPON_RailGun_C_TryStopManualRecharge final
{
public:
	bool                                          PlayStopMontage;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetOverrideIdleSequence_Result;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_TryStopManualRecharge) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_TryStopManualRecharge");
static_assert(sizeof(WEAPON_RailGun_C_TryStopManualRecharge) == 0x000070, "Wrong size on WEAPON_RailGun_C_TryStopManualRecharge");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, PlayStopMontage) == 0x000000, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::PlayStopMontage' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, Result) == 0x000001, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, CharacterOwner) == 0x000008, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::CharacterOwner' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, CallFunc_IsEquipped_Result) == 0x000010, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::CallFunc_IsEquipped_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, K2Node_DynamicCast_AsPlayer_Controller) == 0x000020, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, CallFunc_IsValid_ReturnValue_1) == 0x00002A, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000030, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000040, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, CallFunc_SetOverrideIdleSequence_Result) == 0x000051, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::CallFunc_SetOverrideIdleSequence_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, CallFunc_GetOwnerCharacter_Character) == 0x000058, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, CallFunc_IsValid_ReturnValue_2) == 0x000060, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_TryStopManualRecharge, CallFunc_ForceBeginAction_Action) == 0x000068, "Member 'WEAPON_RailGun_C_TryStopManualRecharge::CallFunc_ForceBeginAction_Action' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.ModifyRechargeDurations
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_RailGun_C_ModifyRechargeDurations final
{
public:
	float                                         DefaultDuration;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ManualDuration;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_ModifyRechargeDurations) == 0x000004, "Wrong alignment on WEAPON_RailGun_C_ModifyRechargeDurations");
static_assert(sizeof(WEAPON_RailGun_C_ModifyRechargeDurations) == 0x000008, "Wrong size on WEAPON_RailGun_C_ModifyRechargeDurations");
static_assert(offsetof(WEAPON_RailGun_C_ModifyRechargeDurations, DefaultDuration) == 0x000000, "Member 'WEAPON_RailGun_C_ModifyRechargeDurations::DefaultDuration' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ModifyRechargeDurations, ManualDuration) == 0x000004, "Member 'WEAPON_RailGun_C_ModifyRechargeDurations::ManualDuration' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.UpdateLastRechargeRatio
// 0x0028 (0x0028 - 0x0000)
struct WEAPON_RailGun_C_UpdateLastRechargeRatio final
{
public:
	float                                         ElapsedTime;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTimestamp;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentRechargeRate_Result;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_UpdateLastRechargeRatio) == 0x000004, "Wrong alignment on WEAPON_RailGun_C_UpdateLastRechargeRatio");
static_assert(sizeof(WEAPON_RailGun_C_UpdateLastRechargeRatio) == 0x000028, "Wrong size on WEAPON_RailGun_C_UpdateLastRechargeRatio");
static_assert(offsetof(WEAPON_RailGun_C_UpdateLastRechargeRatio, ElapsedTime) == 0x000000, "Member 'WEAPON_RailGun_C_UpdateLastRechargeRatio::ElapsedTime' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateLastRechargeRatio, CurrentTimestamp) == 0x000004, "Member 'WEAPON_RailGun_C_UpdateLastRechargeRatio::CurrentTimestamp' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateLastRechargeRatio, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'WEAPON_RailGun_C_UpdateLastRechargeRatio::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateLastRechargeRatio, CallFunc_Less_FloatFloat_ReturnValue) == 0x000009, "Member 'WEAPON_RailGun_C_UpdateLastRechargeRatio::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateLastRechargeRatio, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00000A, "Member 'WEAPON_RailGun_C_UpdateLastRechargeRatio::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateLastRechargeRatio, CallFunc_GetCurrentRechargeRate_Result) == 0x00000C, "Member 'WEAPON_RailGun_C_UpdateLastRechargeRatio::CallFunc_GetCurrentRechargeRate_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateLastRechargeRatio, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'WEAPON_RailGun_C_UpdateLastRechargeRatio::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateLastRechargeRatio, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'WEAPON_RailGun_C_UpdateLastRechargeRatio::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateLastRechargeRatio, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'WEAPON_RailGun_C_UpdateLastRechargeRatio::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateLastRechargeRatio, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'WEAPON_RailGun_C_UpdateLastRechargeRatio::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateLastRechargeRatio, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'WEAPON_RailGun_C_UpdateLastRechargeRatio::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateLastRechargeRatio, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000024, "Member 'WEAPON_RailGun_C_UpdateLastRechargeRatio::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.UpdateRechargeFX
// 0x0020 (0x0020 - 0x0000)
struct WEAPON_RailGun_C_UpdateRechargeFX final
{
public:
	bool                                          Destroy;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RechargeRatio;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ManualRecharge;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_UpdateRechargeFX) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_UpdateRechargeFX");
static_assert(sizeof(WEAPON_RailGun_C_UpdateRechargeFX) == 0x000020, "Wrong size on WEAPON_RailGun_C_UpdateRechargeFX");
static_assert(offsetof(WEAPON_RailGun_C_UpdateRechargeFX, Destroy) == 0x000000, "Member 'WEAPON_RailGun_C_UpdateRechargeFX::Destroy' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateRechargeFX, RechargeRatio) == 0x000004, "Member 'WEAPON_RailGun_C_UpdateRechargeFX::RechargeRatio' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateRechargeFX, ManualRecharge) == 0x000008, "Member 'WEAPON_RailGun_C_UpdateRechargeFX::ManualRecharge' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateRechargeFX, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WEAPON_RailGun_C_UpdateRechargeFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateRechargeFX, CallFunc_IsValid_ReturnValue_1) == 0x00000A, "Member 'WEAPON_RailGun_C_UpdateRechargeFX::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateRechargeFX, CallFunc_IsValid_ReturnValue_2) == 0x00000B, "Member 'WEAPON_RailGun_C_UpdateRechargeFX::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateRechargeFX, CallFunc_IsValid_ReturnValue_3) == 0x00000C, "Member 'WEAPON_RailGun_C_UpdateRechargeFX::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateRechargeFX, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000D, "Member 'WEAPON_RailGun_C_UpdateRechargeFX::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateRechargeFX, CallFunc_GetWeaponMeshComponent_Result) == 0x000010, "Member 'WEAPON_RailGun_C_UpdateRechargeFX::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_UpdateRechargeFX, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000018, "Member 'WEAPON_RailGun_C_UpdateRechargeFX::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnRechargeManually
// 0x00D8 (0x00D8 - 0x0000)
struct WEAPON_RailGun_C_OnRechargeManually final
{
public:
	int32                                         EnergyCost;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentEnergy;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnergyCostRatio;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        EnergyAttribInstance;                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_PlayRailgunSoundCue_AudioComponent;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_PlayRailgunSoundCue_AudioComponent_1;     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRechargeRatioRemaining_Result;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStopManualRecharge_Result;             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetOverrideIdleSequence_Result;           // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModResult                       CallFunc_SetBaseValue_ReturnValue;                 // 0x00D0(0x0005)(NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_OnRechargeManually) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnRechargeManually");
static_assert(sizeof(WEAPON_RailGun_C_OnRechargeManually) == 0x0000D8, "Wrong size on WEAPON_RailGun_C_OnRechargeManually");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, EnergyCost) == 0x000000, "Member 'WEAPON_RailGun_C_OnRechargeManually::EnergyCost' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CurrentEnergy) == 0x000004, "Member 'WEAPON_RailGun_C_OnRechargeManually::CurrentEnergy' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, EnergyCostRatio) == 0x000008, "Member 'WEAPON_RailGun_C_OnRechargeManually::EnergyCostRatio' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, EnergyAttribInstance) == 0x000010, "Member 'WEAPON_RailGun_C_OnRechargeManually::EnergyAttribInstance' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CharacterOwner) == 0x000018, "Member 'WEAPON_RailGun_C_OnRechargeManually::CharacterOwner' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_GetValue_ReturnValue) == 0x000020, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Round_ReturnValue) == 0x000024, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_GetController_ReturnValue) == 0x000028, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, K2Node_DynamicCast_AsPlayer_Controller) == 0x000030, "Member 'WEAPON_RailGun_C_OnRechargeManually::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WEAPON_RailGun_C_OnRechargeManually::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_PlayRailgunSoundCue_AudioComponent) == 0x000040, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_PlayRailgunSoundCue_AudioComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_PlayRailgunSoundCue_AudioComponent_1) == 0x000048, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_PlayRailgunSoundCue_AudioComponent_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000054, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_GetRechargeRatioRemaining_Result) == 0x000058, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_GetRechargeRatioRemaining_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00005C, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_FMin_ReturnValue) == 0x000060, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000064, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Lerp_ReturnValue) == 0x000068, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Min_ReturnValue) == 0x00006C, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Round_ReturnValue_1) == 0x000070, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Multiply_IntInt_ReturnValue) == 0x000074, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Max_ReturnValue) == 0x000078, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Conv_IntToByte_ReturnValue) == 0x00007C, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_GetOwnerCharacter_Character) == 0x000080, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000088, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_IsEquipped_Result) == 0x000089, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_IsEquipped_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_TryStopManualRecharge_Result) == 0x00008A, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_TryStopManualRecharge_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Not_PreBool_ReturnValue) == 0x00008B, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_BooleanAND_ReturnValue) == 0x00008C, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_GetAttribInstance_ReturnValue) == 0x000090, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000098, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_GetAnimInstance_ReturnValue) == 0x0000A0, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x0000B0, "Member 'WEAPON_RailGun_C_OnRechargeManually::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, K2Node_DynamicCast_bSuccess_1) == 0x0000C0, "Member 'WEAPON_RailGun_C_OnRechargeManually::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_SetOverrideIdleSequence_Result) == 0x0000C1, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_SetOverrideIdleSequence_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000C4, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Max_ReturnValue_1) == 0x0000C8, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0000CC, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRechargeManually, CallFunc_SetBaseValue_ReturnValue) == 0x0000D0, "Member 'WEAPON_RailGun_C_OnRechargeManually::CallFunc_SetBaseValue_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnUpdateRecharge
// 0x0108 (0x0108 - 0x0000)
struct WEAPON_RailGun_C_OnUpdateRecharge final
{
public:
	bool                                          DuringTick;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastRailRechargeStopCount;                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastRailRechargeStartCount;                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RechargeRatio;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result_1;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_PlayRailgunSoundCue_AudioComponent;       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_PlayRailgunSoundCue_AudioComponent_1;     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_2;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_3;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_2;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue_3;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_PlayRailgunSoundCue_AudioComponent_2;     // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStopManualRecharge_Result;             // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRechargeRatio_Result;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTimeSinceFired_Result;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result_2;          // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_EnergyWeapon_C> K2Node_DynamicCast_AsINTERF_ANIM_Energy_Weapon;    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTimeSinceFired_Result;                 // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_EnergyWeapon_C> K2Node_DynamicCast_AsINTERF_ANIM_Energy_Weapon_1;  // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetChargeValue_Result;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_OnUpdateRecharge) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnUpdateRecharge");
static_assert(sizeof(WEAPON_RailGun_C_OnUpdateRecharge) == 0x000108, "Wrong size on WEAPON_RailGun_C_OnUpdateRecharge");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, DuringTick) == 0x000000, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::DuringTick' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, LastRailRechargeStopCount) == 0x000004, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::LastRailRechargeStopCount' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, LastRailRechargeStartCount) == 0x000008, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::LastRailRechargeStartCount' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, RechargeRatio) == 0x00000C, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::RechargeRatio' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000010, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_GetWeaponMeshComponent_Result) == 0x000018, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_GetWeaponMeshComponent_Result_1) == 0x000020, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_GetWeaponMeshComponent_Result_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_PlayRailgunSoundCue_AudioComponent) == 0x000028, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_PlayRailgunSoundCue_AudioComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000034, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_FMax_ReturnValue) == 0x000038, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_FMax_ReturnValue_1) == 0x00003C, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000040, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000044, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000048, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Round_ReturnValue) == 0x000050, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Round_ReturnValue_1) == 0x000054, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000058, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_PlayRailgunSoundCue_AudioComponent_1) == 0x000060, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_PlayRailgunSoundCue_AudioComponent_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000068, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_FMax_ReturnValue_2) == 0x00006C, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000070, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000074, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_FMax_ReturnValue_3) == 0x000078, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00007C, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000080, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Round_ReturnValue_2) == 0x000084, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Round_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000088, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00008C, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_Round_ReturnValue_3) == 0x000090, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_Round_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_PlayRailgunSoundCue_AudioComponent_2) == 0x000098, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_PlayRailgunSoundCue_AudioComponent_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_TryStopManualRecharge_Result) == 0x0000A0, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_TryStopManualRecharge_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_GetRechargeRatio_Result) == 0x0000A4, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_GetRechargeRatio_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_GetElapsedTimeSinceFired_Result) == 0x0000A8, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_GetElapsedTimeSinceFired_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_GetWeaponMeshComponent_Result_2) == 0x0000B0, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_GetWeaponMeshComponent_Result_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x0000B8, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_GetAnimInstance_ReturnValue) == 0x0000C8, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000D0, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, K2Node_DynamicCast_AsINTERF_ANIM_Energy_Weapon) == 0x0000D8, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::K2Node_DynamicCast_AsINTERF_ANIM_Energy_Weapon' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_SetTimeSinceFired_Result) == 0x0000E9, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_SetTimeSinceFired_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, K2Node_DynamicCast_AsINTERF_ANIM_Energy_Weapon_1) == 0x0000F0, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::K2Node_DynamicCast_AsINTERF_ANIM_Energy_Weapon_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnUpdateRecharge, CallFunc_SetChargeValue_Result) == 0x000101, "Member 'WEAPON_RailGun_C_OnUpdateRecharge::CallFunc_SetChargeValue_Result' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.Deactivate
// 0x0018 (0x0018 - 0x0000)
struct WEAPON_RailGun_C_Deactivate final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStopManualRecharge_Result;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTeleporting_Result;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Deactivate_Result;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_Deactivate) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_Deactivate");
static_assert(sizeof(WEAPON_RailGun_C_Deactivate) == 0x000018, "Wrong size on WEAPON_RailGun_C_Deactivate");
static_assert(offsetof(WEAPON_RailGun_C_Deactivate, Result) == 0x000000, "Member 'WEAPON_RailGun_C_Deactivate::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_Deactivate, CallFunc_TryStopManualRecharge_Result) == 0x000001, "Member 'WEAPON_RailGun_C_Deactivate::CallFunc_TryStopManualRecharge_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_Deactivate, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'WEAPON_RailGun_C_Deactivate::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_Deactivate, CallFunc_IsTeleporting_Result) == 0x000010, "Member 'WEAPON_RailGun_C_Deactivate::CallFunc_IsTeleporting_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_Deactivate, CallFunc_Deactivate_Result) == 0x000011, "Member 'WEAPON_RailGun_C_Deactivate::CallFunc_Deactivate_Result' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnBecomeUnactivatable
// 0x0003 (0x0003 - 0x0000)
struct WEAPON_RailGun_C_OnBecomeUnactivatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStopManualRecharge_Result;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBecomeUnactivatable_Result;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_OnBecomeUnactivatable) == 0x000001, "Wrong alignment on WEAPON_RailGun_C_OnBecomeUnactivatable");
static_assert(sizeof(WEAPON_RailGun_C_OnBecomeUnactivatable) == 0x000003, "Wrong size on WEAPON_RailGun_C_OnBecomeUnactivatable");
static_assert(offsetof(WEAPON_RailGun_C_OnBecomeUnactivatable, Result) == 0x000000, "Member 'WEAPON_RailGun_C_OnBecomeUnactivatable::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnBecomeUnactivatable, CallFunc_TryStopManualRecharge_Result) == 0x000001, "Member 'WEAPON_RailGun_C_OnBecomeUnactivatable::CallFunc_TryStopManualRecharge_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnBecomeUnactivatable, CallFunc_OnBecomeUnactivatable_Result) == 0x000002, "Member 'WEAPON_RailGun_C_OnBecomeUnactivatable::CallFunc_OnBecomeUnactivatable_Result' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.CycleCurrentMode
// 0x0003 (0x0003 - 0x0000)
struct WEAPON_RailGun_C_CycleCurrentMode final
{
public:
	bool                                          Previous;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStartManualRecharge_Result;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_CycleCurrentMode) == 0x000001, "Wrong alignment on WEAPON_RailGun_C_CycleCurrentMode");
static_assert(sizeof(WEAPON_RailGun_C_CycleCurrentMode) == 0x000003, "Wrong size on WEAPON_RailGun_C_CycleCurrentMode");
static_assert(offsetof(WEAPON_RailGun_C_CycleCurrentMode, Previous) == 0x000000, "Member 'WEAPON_RailGun_C_CycleCurrentMode::Previous' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_CycleCurrentMode, Result) == 0x000001, "Member 'WEAPON_RailGun_C_CycleCurrentMode::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_CycleCurrentMode, CallFunc_TryStartManualRecharge_Result) == 0x000002, "Member 'WEAPON_RailGun_C_CycleCurrentMode::CallFunc_TryStartManualRecharge_Result' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.ReceiveAnimationMessage
// 0x0050 (0x0050 - 0x0000)
struct WEAPON_RailGun_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetOverrideIdleSequence_Result;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_ReceiveAnimationMessage");
static_assert(sizeof(WEAPON_RailGun_C_ReceiveAnimationMessage) == 0x000050, "Wrong size on WEAPON_RailGun_C_ReceiveAnimationMessage");
static_assert(offsetof(WEAPON_RailGun_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'WEAPON_RailGun_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'WEAPON_RailGun_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ReceiveAnimationMessage, CallFunc_GetOwnerCharacter_Character) == 0x000018, "Member 'WEAPON_RailGun_C_ReceiveAnimationMessage::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x000020, "Member 'WEAPON_RailGun_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ReceiveAnimationMessage, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000028, "Member 'WEAPON_RailGun_C_ReceiveAnimationMessage::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ReceiveAnimationMessage, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'WEAPON_RailGun_C_ReceiveAnimationMessage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ReceiveAnimationMessage, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000038, "Member 'WEAPON_RailGun_C_ReceiveAnimationMessage::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ReceiveAnimationMessage, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WEAPON_RailGun_C_ReceiveAnimationMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ReceiveAnimationMessage, CallFunc_SetOverrideIdleSequence_Result) == 0x000049, "Member 'WEAPON_RailGun_C_ReceiveAnimationMessage::CallFunc_SetOverrideIdleSequence_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00004A, "Member 'WEAPON_RailGun_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x00004B, "Member 'WEAPON_RailGun_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.CanActivate
// 0x0010 (0x0010 - 0x0000)
struct WEAPON_RailGun_C_CanActivate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanActivate_Result;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_CanActivate) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_CanActivate");
static_assert(sizeof(WEAPON_RailGun_C_CanActivate) == 0x000010, "Wrong size on WEAPON_RailGun_C_CanActivate");
static_assert(offsetof(WEAPON_RailGun_C_CanActivate, Character) == 0x000000, "Member 'WEAPON_RailGun_C_CanActivate::Character' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_CanActivate, Result) == 0x000008, "Member 'WEAPON_RailGun_C_CanActivate::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_CanActivate, CallFunc_CanActivate_Result) == 0x000009, "Member 'WEAPON_RailGun_C_CanActivate::CallFunc_CanActivate_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_CanActivate, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'WEAPON_RailGun_C_CanActivate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.GetWeaponMode
// 0x0328 (0x0328 - 0x0000)
struct WEAPON_RailGun_C_GetWeaponMode final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     Mode;                                              // 0x0008(0x0100)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CurrentMode;                                       // 0x0108(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CurrentDamageBonus;                                // 0x0208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponMode_Mode;                       // 0x0210(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentChargeDamageBonus_DamageBonus;  // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_GetWeaponMode) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_GetWeaponMode");
static_assert(sizeof(WEAPON_RailGun_C_GetWeaponMode) == 0x000328, "Wrong size on WEAPON_RailGun_C_GetWeaponMode");
static_assert(offsetof(WEAPON_RailGun_C_GetWeaponMode, Index_0) == 0x000000, "Member 'WEAPON_RailGun_C_GetWeaponMode::Index_0' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetWeaponMode, Mode) == 0x000008, "Member 'WEAPON_RailGun_C_GetWeaponMode::Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetWeaponMode, CurrentMode) == 0x000108, "Member 'WEAPON_RailGun_C_GetWeaponMode::CurrentMode' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetWeaponMode, CurrentDamageBonus) == 0x000208, "Member 'WEAPON_RailGun_C_GetWeaponMode::CurrentDamageBonus' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetWeaponMode, CallFunc_GetWeaponMode_Mode) == 0x000210, "Member 'WEAPON_RailGun_C_GetWeaponMode::CallFunc_GetWeaponMode_Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetWeaponMode, CallFunc_Greater_IntInt_ReturnValue) == 0x000310, "Member 'WEAPON_RailGun_C_GetWeaponMode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetWeaponMode, CallFunc_Divide_IntInt_ReturnValue) == 0x000314, "Member 'WEAPON_RailGun_C_GetWeaponMode::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetWeaponMode, CallFunc_Add_IntInt_ReturnValue) == 0x000318, "Member 'WEAPON_RailGun_C_GetWeaponMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetWeaponMode, CallFunc_Add_IntInt_ReturnValue_1) == 0x00031C, "Member 'WEAPON_RailGun_C_GetWeaponMode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_GetWeaponMode, CallFunc_GetCurrentChargeDamageBonus_DamageBonus) == 0x000320, "Member 'WEAPON_RailGun_C_GetWeaponMode::CallFunc_GetCurrentChargeDamageBonus_DamageBonus' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.OnRailgunFired
// 0x0078 (0x0078 - 0x0000)
struct WEAPON_RailGun_C_OnRailgunFired final
{
public:
	struct FVector                                KnockbackImpulse;                                  // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageBonusRatio;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentChargeDamageBonus_DamageBonus;  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_PlayRailgunSoundCue_AudioComponent;       // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_OnRailgunFired) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_OnRailgunFired");
static_assert(sizeof(WEAPON_RailGun_C_OnRailgunFired) == 0x000078, "Wrong size on WEAPON_RailGun_C_OnRailgunFired");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, KnockbackImpulse) == 0x000000, "Member 'WEAPON_RailGun_C_OnRailgunFired::KnockbackImpulse' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CharacterOwner) == 0x000010, "Member 'WEAPON_RailGun_C_OnRailgunFired::CharacterOwner' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, DamageBonusRatio) == 0x000018, "Member 'WEAPON_RailGun_C_OnRailgunFired::DamageBonusRatio' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_Lerp_ReturnValue) == 0x00001C, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_IsMovingOnGround_ReturnValue) == 0x000020, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_GetActorForwardVector_ReturnValue) == 0x000024, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000048, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_GetCurrentChargeDamageBonus_DamageBonus) == 0x00004C, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_GetCurrentChargeDamageBonus_DamageBonus' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_GetOwnerCharacter_Character) == 0x000050, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000058, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00005C, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_GetWeaponMeshComponent_Result) == 0x000060, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_PlayRailgunSoundCue_AudioComponent) == 0x000068, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_PlayRailgunSoundCue_AudioComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_OnRailgunFired, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000070, "Member 'WEAPON_RailGun_C_OnRailgunFired::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.PlayRailgunSoundCue
// 0x0028 (0x0028 - 0x0000)
struct WEAPON_RailGun_C_PlayRailgunSoundCue final
{
public:
	class USoundCue*                              SoundCue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AudioComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_RailGun_C_PlayRailgunSoundCue) == 0x000008, "Wrong alignment on WEAPON_RailGun_C_PlayRailgunSoundCue");
static_assert(sizeof(WEAPON_RailGun_C_PlayRailgunSoundCue) == 0x000028, "Wrong size on WEAPON_RailGun_C_PlayRailgunSoundCue");
static_assert(offsetof(WEAPON_RailGun_C_PlayRailgunSoundCue, SoundCue) == 0x000000, "Member 'WEAPON_RailGun_C_PlayRailgunSoundCue::SoundCue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_PlayRailgunSoundCue, AudioComponent) == 0x000008, "Member 'WEAPON_RailGun_C_PlayRailgunSoundCue::AudioComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_PlayRailgunSoundCue, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WEAPON_RailGun_C_PlayRailgunSoundCue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_PlayRailgunSoundCue, CallFunc_GetWeaponMeshComponent_Result) == 0x000018, "Member 'WEAPON_RailGun_C_PlayRailgunSoundCue::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_RailGun_C_PlayRailgunSoundCue, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000020, "Member 'WEAPON_RailGun_C_PlayRailgunSoundCue::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function WEAPON_RailGun.WEAPON_RailGun_C.ShouldAutoReload
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_RailGun_C_ShouldAutoReload final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_RailGun_C_ShouldAutoReload) == 0x000001, "Wrong alignment on WEAPON_RailGun_C_ShouldAutoReload");
static_assert(sizeof(WEAPON_RailGun_C_ShouldAutoReload) == 0x000001, "Wrong size on WEAPON_RailGun_C_ShouldAutoReload");
static_assert(offsetof(WEAPON_RailGun_C_ShouldAutoReload, Result) == 0x000000, "Member 'WEAPON_RailGun_C_ShouldAutoReload::Result' has a wrong offset!");

}


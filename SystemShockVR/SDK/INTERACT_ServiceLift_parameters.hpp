#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_ServiceLift

#include "Basic.hpp"

#include "NamedInteger_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_EffectParams_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_ServiceLift.INTERACT_ServiceLift_C.ExecuteUbergraph_INTERACT_ServiceLift
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_ServiceLift_C_ExecuteUbergraph_INTERACT_ServiceLift final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ServiceLift_C_ExecuteUbergraph_INTERACT_ServiceLift) == 0x000004, "Wrong alignment on INTERACT_ServiceLift_C_ExecuteUbergraph_INTERACT_ServiceLift");
static_assert(sizeof(INTERACT_ServiceLift_C_ExecuteUbergraph_INTERACT_ServiceLift) == 0x000004, "Wrong size on INTERACT_ServiceLift_C_ExecuteUbergraph_INTERACT_ServiceLift");
static_assert(offsetof(INTERACT_ServiceLift_C_ExecuteUbergraph_INTERACT_ServiceLift, EntryPoint) == 0x000000, "Member 'INTERACT_ServiceLift_C_ExecuteUbergraph_INTERACT_ServiceLift::EntryPoint' has a wrong offset!");

// Function INTERACT_ServiceLift.INTERACT_ServiceLift_C.UpdateLiftLights
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_ServiceLift_C_UpdateLiftLights final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsFunctional;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLiftFunctional_Result;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ServiceLift_C_UpdateLiftLights) == 0x000004, "Wrong alignment on INTERACT_ServiceLift_C_UpdateLiftLights");
static_assert(sizeof(INTERACT_ServiceLift_C_UpdateLiftLights) == 0x000020, "Wrong size on INTERACT_ServiceLift_C_UpdateLiftLights");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateLiftLights, State) == 0x000000, "Member 'INTERACT_ServiceLift_C_UpdateLiftLights::State' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateLiftLights, IsFunctional) == 0x000001, "Member 'INTERACT_ServiceLift_C_UpdateLiftLights::IsFunctional' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateLiftLights, Temp_bool_Variable) == 0x000002, "Member 'INTERACT_ServiceLift_C_UpdateLiftLights::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateLiftLights, Temp_float_Variable) == 0x000004, "Member 'INTERACT_ServiceLift_C_UpdateLiftLights::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateLiftLights, Temp_float_Variable_1) == 0x000008, "Member 'INTERACT_ServiceLift_C_UpdateLiftLights::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateLiftLights, Temp_bool_Variable_1) == 0x00000C, "Member 'INTERACT_ServiceLift_C_UpdateLiftLights::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateLiftLights, Temp_float_Variable_2) == 0x000010, "Member 'INTERACT_ServiceLift_C_UpdateLiftLights::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateLiftLights, CallFunc_IsLiftFunctional_Result) == 0x000014, "Member 'INTERACT_ServiceLift_C_UpdateLiftLights::CallFunc_IsLiftFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateLiftLights, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'INTERACT_ServiceLift_C_UpdateLiftLights::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateLiftLights, CallFunc_BooleanAND_ReturnValue_1) == 0x000016, "Member 'INTERACT_ServiceLift_C_UpdateLiftLights::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateLiftLights, K2Node_Select_Default) == 0x000018, "Member 'INTERACT_ServiceLift_C_UpdateLiftLights::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateLiftLights, K2Node_Select_Default_1) == 0x00001C, "Member 'INTERACT_ServiceLift_C_UpdateLiftLights::K2Node_Select_Default_1' has a wrong offset!");

// Function INTERACT_ServiceLift.INTERACT_ServiceLift_C.InitializeLift
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ServiceLift_C_InitializeLift final
{
public:
	bool                                          CallFunc_IsLiftEnabled_Result;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ServiceLift_C_InitializeLift) == 0x000001, "Wrong alignment on INTERACT_ServiceLift_C_InitializeLift");
static_assert(sizeof(INTERACT_ServiceLift_C_InitializeLift) == 0x000001, "Wrong size on INTERACT_ServiceLift_C_InitializeLift");
static_assert(offsetof(INTERACT_ServiceLift_C_InitializeLift, CallFunc_IsLiftEnabled_Result) == 0x000000, "Member 'INTERACT_ServiceLift_C_InitializeLift::CallFunc_IsLiftEnabled_Result' has a wrong offset!");

// Function INTERACT_ServiceLift.INTERACT_ServiceLift_C.SetInteractLocked
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_ServiceLift_C_SetInteractLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInteractLocked_Result;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ServiceLift_C_SetInteractLocked) == 0x000001, "Wrong alignment on INTERACT_ServiceLift_C_SetInteractLocked");
static_assert(sizeof(INTERACT_ServiceLift_C_SetInteractLocked) == 0x000004, "Wrong size on INTERACT_ServiceLift_C_SetInteractLocked");
static_assert(offsetof(INTERACT_ServiceLift_C_SetInteractLocked, Locked) == 0x000000, "Member 'INTERACT_ServiceLift_C_SetInteractLocked::Locked' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_SetInteractLocked, Result) == 0x000001, "Member 'INTERACT_ServiceLift_C_SetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_SetInteractLocked, CallFunc_SetInteractLocked_Result) == 0x000002, "Member 'INTERACT_ServiceLift_C_SetInteractLocked::CallFunc_SetInteractLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_SetInteractLocked, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'INTERACT_ServiceLift_C_SetInteractLocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_ServiceLift.INTERACT_ServiceLift_C.PlayStopFX
// 0x0090 (0x0090 - 0x0000)
struct INTERACT_ServiceLift_C_PlayStopFX final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array_1;                          // 0x0028(0x0010)(ReferenceParm)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0038(0x0030)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              K2Node_MakeArray_Array_2;                          // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(INTERACT_ServiceLift_C_PlayStopFX) == 0x000008, "Wrong alignment on INTERACT_ServiceLift_C_PlayStopFX");
static_assert(sizeof(INTERACT_ServiceLift_C_PlayStopFX) == 0x000090, "Wrong size on INTERACT_ServiceLift_C_PlayStopFX");
static_assert(offsetof(INTERACT_ServiceLift_C_PlayStopFX, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'INTERACT_ServiceLift_C_PlayStopFX::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_PlayStopFX, K2Node_MakeArray_Array) == 0x000008, "Member 'INTERACT_ServiceLift_C_PlayStopFX::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_PlayStopFX, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_ServiceLift_C_PlayStopFX::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_PlayStopFX, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_ServiceLift_C_PlayStopFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_PlayStopFX, K2Node_MakeArray_Array_1) == 0x000028, "Member 'INTERACT_ServiceLift_C_PlayStopFX::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_PlayStopFX, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000038, "Member 'INTERACT_ServiceLift_C_PlayStopFX::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_PlayStopFX, CallFunc_GetGameInstance_ReturnValue_1) == 0x000068, "Member 'INTERACT_ServiceLift_C_PlayStopFX::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_PlayStopFX, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000070, "Member 'INTERACT_ServiceLift_C_PlayStopFX::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_PlayStopFX, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'INTERACT_ServiceLift_C_PlayStopFX::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_PlayStopFX, K2Node_MakeArray_Array_2) == 0x000080, "Member 'INTERACT_ServiceLift_C_PlayStopFX::K2Node_MakeArray_Array_2' has a wrong offset!");

// Function INTERACT_ServiceLift.INTERACT_ServiceLift_C.UpdateEmissiveStrength
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_ServiceLift_C_UpdateEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLiftEnabled_Result;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ServiceLift_C_UpdateEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_ServiceLift_C_UpdateEmissiveStrength");
static_assert(sizeof(INTERACT_ServiceLift_C_UpdateEmissiveStrength) == 0x000008, "Wrong size on INTERACT_ServiceLift_C_UpdateEmissiveStrength");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_ServiceLift_C_UpdateEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_ServiceLift_C_UpdateEmissiveStrength, CallFunc_IsLiftEnabled_Result) == 0x000004, "Member 'INTERACT_ServiceLift_C_UpdateEmissiveStrength::CallFunc_IsLiftEnabled_Result' has a wrong offset!");

}


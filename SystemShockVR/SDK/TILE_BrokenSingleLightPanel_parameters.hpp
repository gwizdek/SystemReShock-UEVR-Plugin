#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TILE_BrokenSingleLightPanel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"


namespace SDK::Params
{

// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.ExecuteUbergraph_TILE_BrokenSingleLightPanel
// 0x0008 (0x0008 - 0x0000)
struct TILE_BrokenSingleLightPanel_C_ExecuteUbergraph_TILE_BrokenSingleLightPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TILE_BrokenSingleLightPanel_C_ExecuteUbergraph_TILE_BrokenSingleLightPanel) == 0x000004, "Wrong alignment on TILE_BrokenSingleLightPanel_C_ExecuteUbergraph_TILE_BrokenSingleLightPanel");
static_assert(sizeof(TILE_BrokenSingleLightPanel_C_ExecuteUbergraph_TILE_BrokenSingleLightPanel) == 0x000008, "Wrong size on TILE_BrokenSingleLightPanel_C_ExecuteUbergraph_TILE_BrokenSingleLightPanel");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_ExecuteUbergraph_TILE_BrokenSingleLightPanel, EntryPoint) == 0x000000, "Member 'TILE_BrokenSingleLightPanel_C_ExecuteUbergraph_TILE_BrokenSingleLightPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_ExecuteUbergraph_TILE_BrokenSingleLightPanel, K2Node_ComponentBoundEvent_bVisibleState) == 0x000004, "Member 'TILE_BrokenSingleLightPanel_C_ExecuteUbergraph_TILE_BrokenSingleLightPanel::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");

// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.BndEvt__TILE_BrokenSingleLightPanel_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct TILE_BrokenSingleLightPanel_C_BndEvt__TILE_BrokenSingleLightPanel_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TILE_BrokenSingleLightPanel_C_BndEvt__TILE_BrokenSingleLightPanel_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on TILE_BrokenSingleLightPanel_C_BndEvt__TILE_BrokenSingleLightPanel_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(TILE_BrokenSingleLightPanel_C_BndEvt__TILE_BrokenSingleLightPanel_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on TILE_BrokenSingleLightPanel_C_BndEvt__TILE_BrokenSingleLightPanel_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_BndEvt__TILE_BrokenSingleLightPanel_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'TILE_BrokenSingleLightPanel_C_BndEvt__TILE_BrokenSingleLightPanel_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.PlayBreakEffects
// 0x0048 (0x0048 - 0x0000)
struct TILE_BrokenSingleLightPanel_C_PlayBreakEffects final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateSunLightChannel_ReturnValue;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TILE_BrokenSingleLightPanel_C_PlayBreakEffects) == 0x000008, "Wrong alignment on TILE_BrokenSingleLightPanel_C_PlayBreakEffects");
static_assert(sizeof(TILE_BrokenSingleLightPanel_C_PlayBreakEffects) == 0x000048, "Wrong size on TILE_BrokenSingleLightPanel_C_PlayBreakEffects");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_PlayBreakEffects, SourceActor) == 0x000000, "Member 'TILE_BrokenSingleLightPanel_C_PlayBreakEffects::SourceActor' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_PlayBreakEffects, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'TILE_BrokenSingleLightPanel_C_PlayBreakEffects::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_PlayBreakEffects, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000018, "Member 'TILE_BrokenSingleLightPanel_C_PlayBreakEffects::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_PlayBreakEffects, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'TILE_BrokenSingleLightPanel_C_PlayBreakEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_PlayBreakEffects, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'TILE_BrokenSingleLightPanel_C_PlayBreakEffects::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_PlayBreakEffects, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'TILE_BrokenSingleLightPanel_C_PlayBreakEffects::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_PlayBreakEffects, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'TILE_BrokenSingleLightPanel_C_PlayBreakEffects::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_PlayBreakEffects, CallFunc_UpdateSunLightChannel_ReturnValue) == 0x000039, "Member 'TILE_BrokenSingleLightPanel_C_PlayBreakEffects::CallFunc_UpdateSunLightChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_PlayBreakEffects, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00003C, "Member 'TILE_BrokenSingleLightPanel_C_PlayBreakEffects::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");

// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.UpdateBrokenLightPanelVisibility
// 0x0048 (0x0048 - 0x0000)
struct TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                ChildComponents;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_GetSimulatingPhysicsComponents_ReturnValue; // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility) == 0x000008, "Wrong alignment on TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility");
static_assert(sizeof(TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility) == 0x000048, "Wrong size on TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility, VisibilityState) == 0x000000, "Member 'TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility::VisibilityState' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility, ChildComponents) == 0x000008, "Member 'TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility::ChildComponents' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility, Temp_int_Array_Index_Variable) == 0x000018, "Member 'TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility, CallFunc_GetSimulatingPhysicsComponents_ReturnValue) == 0x000028, "Member 'TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility::CallFunc_GetSimulatingPhysicsComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility, CallFunc_Array_Get_Item) == 0x000038, "Member 'TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'TILE_BrokenSingleLightPanel_C_UpdateBrokenLightPanelVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.SetThemeColor
// 0x0010 (0x0010 - 0x0000)
struct TILE_BrokenSingleLightPanel_C_SetThemeColor final
{
public:
	struct FVector4                               Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TILE_BrokenSingleLightPanel_C_SetThemeColor) == 0x000010, "Wrong alignment on TILE_BrokenSingleLightPanel_C_SetThemeColor");
static_assert(sizeof(TILE_BrokenSingleLightPanel_C_SetThemeColor) == 0x000010, "Wrong size on TILE_BrokenSingleLightPanel_C_SetThemeColor");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_SetThemeColor, Color) == 0x000000, "Member 'TILE_BrokenSingleLightPanel_C_SetThemeColor::Color' has a wrong offset!");

// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.ShouldSaveActor
// 0x0038 (0x0038 - 0x0000)
struct TILE_BrokenSingleLightPanel_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          K2Node_MakeStruct_StreamingSaveGameActorParams;    // 0x0020(0x0018)()
};
static_assert(alignof(TILE_BrokenSingleLightPanel_C_ShouldSaveActor) == 0x000008, "Wrong alignment on TILE_BrokenSingleLightPanel_C_ShouldSaveActor");
static_assert(sizeof(TILE_BrokenSingleLightPanel_C_ShouldSaveActor) == 0x000038, "Wrong size on TILE_BrokenSingleLightPanel_C_ShouldSaveActor");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'TILE_BrokenSingleLightPanel_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'TILE_BrokenSingleLightPanel_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_ShouldSaveActor, K2Node_MakeStruct_StreamingSaveGameActorParams) == 0x000020, "Member 'TILE_BrokenSingleLightPanel_C_ShouldSaveActor::K2Node_MakeStruct_StreamingSaveGameActorParams' has a wrong offset!");

// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.ReceivePendingBodyTransforms
// 0x0020 (0x0020 - 0x0000)
struct TILE_BrokenSingleLightPanel_C_ReceivePendingBodyTransforms final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     BodyTransforms;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TILE_BrokenSingleLightPanel_C_ReceivePendingBodyTransforms) == 0x000008, "Wrong alignment on TILE_BrokenSingleLightPanel_C_ReceivePendingBodyTransforms");
static_assert(sizeof(TILE_BrokenSingleLightPanel_C_ReceivePendingBodyTransforms) == 0x000020, "Wrong size on TILE_BrokenSingleLightPanel_C_ReceivePendingBodyTransforms");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_ReceivePendingBodyTransforms, SkeletalMeshComponent) == 0x000000, "Member 'TILE_BrokenSingleLightPanel_C_ReceivePendingBodyTransforms::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_ReceivePendingBodyTransforms, BodyTransforms) == 0x000008, "Member 'TILE_BrokenSingleLightPanel_C_ReceivePendingBodyTransforms::BodyTransforms' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_ReceivePendingBodyTransforms, ReturnValue) == 0x000018, "Member 'TILE_BrokenSingleLightPanel_C_ReceivePendingBodyTransforms::ReturnValue' has a wrong offset!");

// Function TILE_BrokenSingleLightPanel.TILE_BrokenSingleLightPanel_C.ReceivePendingCharacterVelocity
// 0x0010 (0x0010 - 0x0000)
struct TILE_BrokenSingleLightPanel_C_ReceivePendingCharacterVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TILE_BrokenSingleLightPanel_C_ReceivePendingCharacterVelocity) == 0x000004, "Wrong alignment on TILE_BrokenSingleLightPanel_C_ReceivePendingCharacterVelocity");
static_assert(sizeof(TILE_BrokenSingleLightPanel_C_ReceivePendingCharacterVelocity) == 0x000010, "Wrong size on TILE_BrokenSingleLightPanel_C_ReceivePendingCharacterVelocity");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_ReceivePendingCharacterVelocity, Velocity) == 0x000000, "Member 'TILE_BrokenSingleLightPanel_C_ReceivePendingCharacterVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(TILE_BrokenSingleLightPanel_C_ReceivePendingCharacterVelocity, ReturnValue) == 0x00000C, "Member 'TILE_BrokenSingleLightPanel_C_ReceivePendingCharacterVelocity::ReturnValue' has a wrong offset!");

}


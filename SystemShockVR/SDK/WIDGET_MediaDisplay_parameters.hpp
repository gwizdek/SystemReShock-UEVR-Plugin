#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_MediaDisplay

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_MediaType_structs.hpp"
#include "STRUCT_MediaObject_structs.hpp"
#include "STRUCT_NarrativeSpeakers_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.ExecuteUbergraph_WIDGET_MediaDisplay
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_MediaDisplay_C_ExecuteUbergraph_WIDGET_MediaDisplay final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaDisplay_C_ExecuteUbergraph_WIDGET_MediaDisplay) == 0x000008, "Wrong alignment on WIDGET_MediaDisplay_C_ExecuteUbergraph_WIDGET_MediaDisplay");
static_assert(sizeof(WIDGET_MediaDisplay_C_ExecuteUbergraph_WIDGET_MediaDisplay) == 0x000010, "Wrong size on WIDGET_MediaDisplay_C_ExecuteUbergraph_WIDGET_MediaDisplay");
static_assert(offsetof(WIDGET_MediaDisplay_C_ExecuteUbergraph_WIDGET_MediaDisplay, EntryPoint) == 0x000000, "Member 'WIDGET_MediaDisplay_C_ExecuteUbergraph_WIDGET_MediaDisplay::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_ExecuteUbergraph_WIDGET_MediaDisplay, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'WIDGET_MediaDisplay_C_ExecuteUbergraph_WIDGET_MediaDisplay::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.InitializeMediaDisplay
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MediaDisplay_C_InitializeMediaDisplay final
{
public:
	class UWIDGET_PlayerHUD_C*                    PlayerHUD_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaDisplay_C_InitializeMediaDisplay) == 0x000008, "Wrong alignment on WIDGET_MediaDisplay_C_InitializeMediaDisplay");
static_assert(sizeof(WIDGET_MediaDisplay_C_InitializeMediaDisplay) == 0x000008, "Wrong size on WIDGET_MediaDisplay_C_InitializeMediaDisplay");
static_assert(offsetof(WIDGET_MediaDisplay_C_InitializeMediaDisplay, PlayerHUD_0) == 0x000000, "Member 'WIDGET_MediaDisplay_C_InitializeMediaDisplay::PlayerHUD_0' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.DisplayMediaFromData
// 0x0310 (0x0310 - 0x0000)
struct WIDGET_MediaDisplay_C_DisplayMediaFromData final
{
public:
	ENUM_MediaType                                MediaType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    MediaData;                                         // 0x0008(0x0080)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FText                                   Type;                                              // 0x0088(0x0018)(Edit, BlueprintVisible)
	class FText                                   Subject;                                           // 0x00A0(0x0018)(Edit, BlueprintVisible)
	int32                                         FrameRate;                                         // 0x00B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColCount;                                          // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowCount;                                          // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Portrait;                                          // 0x00C8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   Sender;                                            // 0x00F0(0x0018)(Edit, BlueprintVisible)
	class FText                                   Message;                                           // 0x0108(0x0018)(Edit, BlueprintVisible)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_AsDate_DateTime_ReturnValue;              // 0x0128(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_NarrativeSpeakers              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0148(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01B8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x01F8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0238(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0248(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0260(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x02B0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02C8(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x02E0(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue_2;                // 0x02F8(0x0018)()
};
static_assert(alignof(WIDGET_MediaDisplay_C_DisplayMediaFromData) == 0x000008, "Wrong alignment on WIDGET_MediaDisplay_C_DisplayMediaFromData");
static_assert(sizeof(WIDGET_MediaDisplay_C_DisplayMediaFromData) == 0x000310, "Wrong size on WIDGET_MediaDisplay_C_DisplayMediaFromData");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, MediaType) == 0x000000, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::MediaType' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, MediaData) == 0x000008, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::MediaData' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, Type) == 0x000088, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::Type' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, Subject) == 0x0000A0, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::Subject' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, FrameRate) == 0x0000B8, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::FrameRate' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, ColCount) == 0x0000BC, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::ColCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, RowCount) == 0x0000C0, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::RowCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, Portrait) == 0x0000C8, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::Portrait' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, Sender) == 0x0000F0, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::Sender' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, Message) == 0x000108, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::Message' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, CallFunc_TextIsEmpty_ReturnValue) == 0x000120, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, CallFunc_Not_PreBool_ReturnValue) == 0x000121, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, CallFunc_AsDate_DateTime_ReturnValue) == 0x000128, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::CallFunc_AsDate_DateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, K2Node_SwitchEnum_CmpSuccess) == 0x000140, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000148, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001B0, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, K2Node_MakeStruct_FormatArgumentData) == 0x0001B8, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, K2Node_MakeStruct_FormatArgumentData_1) == 0x0001F8, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, K2Node_MakeArray_Array) == 0x000238, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, CallFunc_Format_ReturnValue) == 0x000248, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, K2Node_MakeStruct_FormatArgumentData_2) == 0x000260, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, K2Node_MakeArray_Array_1) == 0x0002A0, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, CallFunc_TextToUpper_ReturnValue) == 0x0002B0, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, CallFunc_Format_ReturnValue_1) == 0x0002C8, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, CallFunc_TextToUpper_ReturnValue_1) == 0x0002E0, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromData, CallFunc_TextToUpper_ReturnValue_2) == 0x0002F8, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromData::CallFunc_TextToUpper_ReturnValue_2' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.DisplayMediaFromItem
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_MediaDisplay_C_DisplayMediaFromItem final
{
public:
	class UITEM_MediaBase_C*                      MediaItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaDisplay_C_DisplayMediaFromItem) == 0x000008, "Wrong alignment on WIDGET_MediaDisplay_C_DisplayMediaFromItem");
static_assert(sizeof(WIDGET_MediaDisplay_C_DisplayMediaFromItem) == 0x000020, "Wrong size on WIDGET_MediaDisplay_C_DisplayMediaFromItem");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItem, MediaItem) == 0x000000, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItem::MediaItem' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItem, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItem, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItem::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.DisplayMediaFromItemClass
// 0x0138 (0x0138 - 0x0000)
struct WIDGET_MediaDisplay_C_DisplayMediaFromItemClass final
{
public:
	class UClass*                                 MediaItemClass;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MediaType                                MediaType;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Message;                                           // 0x0010(0x0018)(Edit, BlueprintVisible)
	class FText                                   Sender;                                            // 0x0028(0x0018)(Edit, BlueprintVisible)
	class FText                                   Subject;                                           // 0x0040(0x0018)(Edit, BlueprintVisible)
	class FText                                   Type;                                              // 0x0058(0x0018)(Edit, BlueprintVisible)
	int32                                         ColCount;                                          // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowCount;                                          // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFileMediaSource*                       Media;                                             // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Portrait;                                          // 0x0080(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UEMAIL_ITEM_Base_C*                     Email;                                             // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MediaObject                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B0(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass) == 0x000008, "Wrong alignment on WIDGET_MediaDisplay_C_DisplayMediaFromItemClass");
static_assert(sizeof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass) == 0x000138, "Wrong size on WIDGET_MediaDisplay_C_DisplayMediaFromItemClass");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, MediaItemClass) == 0x000000, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::MediaItemClass' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, MediaType) == 0x000008, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::MediaType' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, Message) == 0x000010, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::Message' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, Sender) == 0x000028, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::Sender' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, Subject) == 0x000040, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::Subject' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, Type) == 0x000058, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::Type' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, ColCount) == 0x000070, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::ColCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, RowCount) == 0x000074, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::RowCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, Media) == 0x000078, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::Media' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, Portrait) == 0x000080, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::Portrait' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, Email) == 0x0000A8, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::Email' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B0, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromItemClass, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000130, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromItemClass::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.DisplayMediaFromParameters
// 0x0090 (0x0090 - 0x0000)
struct WIDGET_MediaDisplay_C_DisplayMediaFromParameters final
{
public:
	TSoftObjectPtr<class UTexture2D>              PortraitTexture;                                   // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         PortraitRowCount;                                  // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitColCount;                                  // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitFrameRate;                                 // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Type;                                              // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Subject;                                           // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Sender;                                            // 0x0068(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TDelegate<void(class USoundCue* SoundCue)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_MediaDisplay_C_DisplayMediaFromParameters) == 0x000008, "Wrong alignment on WIDGET_MediaDisplay_C_DisplayMediaFromParameters");
static_assert(sizeof(WIDGET_MediaDisplay_C_DisplayMediaFromParameters) == 0x000090, "Wrong size on WIDGET_MediaDisplay_C_DisplayMediaFromParameters");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromParameters, PortraitTexture) == 0x000000, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromParameters::PortraitTexture' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromParameters, PortraitRowCount) == 0x000028, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromParameters::PortraitRowCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromParameters, PortraitColCount) == 0x00002C, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromParameters::PortraitColCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromParameters, PortraitFrameRate) == 0x000030, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromParameters::PortraitFrameRate' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromParameters, Type) == 0x000038, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromParameters::Type' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromParameters, Subject) == 0x000050, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromParameters::Subject' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromParameters, Sender) == 0x000068, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromParameters::Sender' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFromParameters, K2Node_CreateDelegate_OutputDelegate) == 0x000080, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFromParameters::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.DisplayMediaFeedInterrupt
// 0x0058 (0x0058 - 0x0000)
struct WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt final
{
public:
	TSoftObjectPtr<class UTexture2D>              PortraitTexture;                                   // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         PortraitRowCount;                                  // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitColCount;                                  // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitFrameRate;                                 // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DisplayStatic;                                     // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt) == 0x000008, "Wrong alignment on WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt");
static_assert(sizeof(WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt) == 0x000058, "Wrong size on WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt, PortraitTexture) == 0x000000, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt::PortraitTexture' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt, PortraitRowCount) == 0x000028, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt::PortraitRowCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt, PortraitColCount) == 0x00002C, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt::PortraitColCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt, PortraitFrameRate) == 0x000030, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt::PortraitFrameRate' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt, DisplayStatic) == 0x000034, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt::DisplayStatic' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000038, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000050, "Member 'WIDGET_MediaDisplay_C_DisplayMediaFeedInterrupt::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.DisplayShodanMediaFeedInterrupt
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MediaDisplay_C_DisplayShodanMediaFeedInterrupt final
{
public:
	bool                                          DisplayStatic;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaDisplay_C_DisplayShodanMediaFeedInterrupt) == 0x000001, "Wrong alignment on WIDGET_MediaDisplay_C_DisplayShodanMediaFeedInterrupt");
static_assert(sizeof(WIDGET_MediaDisplay_C_DisplayShodanMediaFeedInterrupt) == 0x000001, "Wrong size on WIDGET_MediaDisplay_C_DisplayShodanMediaFeedInterrupt");
static_assert(offsetof(WIDGET_MediaDisplay_C_DisplayShodanMediaFeedInterrupt, DisplayStatic) == 0x000000, "Member 'WIDGET_MediaDisplay_C_DisplayShodanMediaFeedInterrupt::DisplayStatic' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.SetMediaPortraitTexture
// 0x0088 (0x0088 - 0x0000)
struct WIDGET_MediaDisplay_C_SetMediaPortraitTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              PortraitTexture;                                   // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         PortraitRowCount;                                  // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitColCount;                                  // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitFrameRate;                                 // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_3;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture) == 0x000008, "Wrong alignment on WIDGET_MediaDisplay_C_SetMediaPortraitTexture");
static_assert(sizeof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture) == 0x000088, "Wrong size on WIDGET_MediaDisplay_C_SetMediaPortraitTexture");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, PortraitTexture) == 0x000000, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::PortraitTexture' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, PortraitRowCount) == 0x000028, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::PortraitRowCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, PortraitColCount) == 0x00002C, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::PortraitColCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, PortraitFrameRate) == 0x000030, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::PortraitFrameRate' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, Temp_bool_Variable) == 0x000034, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000038, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, Temp_object_Variable) == 0x000040, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, K2Node_DynamicCast_AsTexture_2D) == 0x000048, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, K2Node_Select_Default) == 0x000058, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, CallFunc_Multiply_IntInt_ReturnValue) == 0x000060, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, CallFunc_Max_ReturnValue) == 0x000064, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, CallFunc_Max_ReturnValue_1) == 0x000068, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00006C, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000070, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000074, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, CallFunc_Max_ReturnValue_2) == 0x000078, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::CallFunc_Max_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00007C, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, CallFunc_Max_ReturnValue_3) == 0x000080, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::CallFunc_Max_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_SetMediaPortraitTexture, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000084, "Member 'WIDGET_MediaDisplay_C_SetMediaPortraitTexture::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.UpdateMediaItemDisplay
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MediaDisplay_C_UpdateMediaItemDisplay final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaDisplay_C_UpdateMediaItemDisplay) == 0x000004, "Wrong alignment on WIDGET_MediaDisplay_C_UpdateMediaItemDisplay");
static_assert(sizeof(WIDGET_MediaDisplay_C_UpdateMediaItemDisplay) == 0x000008, "Wrong size on WIDGET_MediaDisplay_C_UpdateMediaItemDisplay");
static_assert(offsetof(WIDGET_MediaDisplay_C_UpdateMediaItemDisplay, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'WIDGET_MediaDisplay_C_UpdateMediaItemDisplay::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_UpdateMediaItemDisplay, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'WIDGET_MediaDisplay_C_UpdateMediaItemDisplay::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.StopCurrentMedia
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MediaDisplay_C_StopCurrentMedia final
{
public:
	bool                                          CallFunc_TryStopCurrentAudioLogCue_Result;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaDisplay_C_StopCurrentMedia) == 0x000001, "Wrong alignment on WIDGET_MediaDisplay_C_StopCurrentMedia");
static_assert(sizeof(WIDGET_MediaDisplay_C_StopCurrentMedia) == 0x000001, "Wrong size on WIDGET_MediaDisplay_C_StopCurrentMedia");
static_assert(offsetof(WIDGET_MediaDisplay_C_StopCurrentMedia, CallFunc_TryStopCurrentAudioLogCue_Result) == 0x000000, "Member 'WIDGET_MediaDisplay_C_StopCurrentMedia::CallFunc_TryStopCurrentAudioLogCue_Result' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.EVENT_AudioLogFinished
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_MediaDisplay_C_EVENT_AudioLogFinished final
{
public:
	class USoundCue*                              SoundCue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class USoundCue* SoundCue)>    K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_MediaDisplay_C_EVENT_AudioLogFinished) == 0x000008, "Wrong alignment on WIDGET_MediaDisplay_C_EVENT_AudioLogFinished");
static_assert(sizeof(WIDGET_MediaDisplay_C_EVENT_AudioLogFinished) == 0x000038, "Wrong size on WIDGET_MediaDisplay_C_EVENT_AudioLogFinished");
static_assert(offsetof(WIDGET_MediaDisplay_C_EVENT_AudioLogFinished, SoundCue) == 0x000000, "Member 'WIDGET_MediaDisplay_C_EVENT_AudioLogFinished::SoundCue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_EVENT_AudioLogFinished, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WIDGET_MediaDisplay_C_EVENT_AudioLogFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_EVENT_AudioLogFinished, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000018, "Member 'WIDGET_MediaDisplay_C_EVENT_AudioLogFinished::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_EVENT_AudioLogFinished, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WIDGET_MediaDisplay_C_EVENT_AudioLogFinished::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_EVENT_AudioLogFinished, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'WIDGET_MediaDisplay_C_EVENT_AudioLogFinished::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.ShowMediaText
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_MediaDisplay_C_ShowMediaText final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaDisplay_C_ShowMediaText) == 0x000008, "Wrong alignment on WIDGET_MediaDisplay_C_ShowMediaText");
static_assert(sizeof(WIDGET_MediaDisplay_C_ShowMediaText) == 0x000018, "Wrong size on WIDGET_MediaDisplay_C_ShowMediaText");
static_assert(offsetof(WIDGET_MediaDisplay_C_ShowMediaText, Visible) == 0x000000, "Member 'WIDGET_MediaDisplay_C_ShowMediaText::Visible' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_ShowMediaText, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WIDGET_MediaDisplay_C_ShowMediaText::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_ShowMediaText, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'WIDGET_MediaDisplay_C_ShowMediaText::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WIDGET_MediaDisplay.WIDGET_MediaDisplay_C.ResetMediaTurnOffTime
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MediaDisplay_C_ResetMediaTurnOffTime final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaDisplay_C_ResetMediaTurnOffTime) == 0x000004, "Wrong alignment on WIDGET_MediaDisplay_C_ResetMediaTurnOffTime");
static_assert(sizeof(WIDGET_MediaDisplay_C_ResetMediaTurnOffTime) == 0x000008, "Wrong size on WIDGET_MediaDisplay_C_ResetMediaTurnOffTime");
static_assert(offsetof(WIDGET_MediaDisplay_C_ResetMediaTurnOffTime, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'WIDGET_MediaDisplay_C_ResetMediaTurnOffTime::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaDisplay_C_ResetMediaTurnOffTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'WIDGET_MediaDisplay_C_ResetMediaTurnOffTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

}


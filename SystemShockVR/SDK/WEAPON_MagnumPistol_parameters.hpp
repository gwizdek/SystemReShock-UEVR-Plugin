#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEAPON_MagnumPistol

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.ExecuteUbergraph_WEAPON_MagnumPistol
// 0x0158 (0x0158 - 0x0000)
struct WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_6;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_5;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_4;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_1;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_2;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_3;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   K2Node_DynamicCast_AsForce_Feedback_Effect;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_6;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System_1;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x0124(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_5;            // 0x0134(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_6;            // 0x0144(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol");
static_assert(sizeof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol) == 0x000158, "Wrong size on WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, EntryPoint) == 0x000000, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::EntryPoint' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CustomEvent_Loaded_6) == 0x000048, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CustomEvent_Loaded_6' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, Temp_object_Variable) == 0x000050, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_AsNiagara_System) == 0x000058, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CustomEvent_Loaded_5) == 0x000068, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CustomEvent_Loaded_5' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, Temp_object_Variable_1) == 0x000070, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_AsSound_Cue) == 0x000078, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CustomEvent_Loaded_4) == 0x000088, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, Temp_object_Variable_2) == 0x000090, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_AsSound_Cue_1) == 0x000098, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_AsSound_Cue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CustomEvent_Loaded_3) == 0x0000A8, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, Temp_object_Variable_3) == 0x0000B0, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_AsSound_Cue_2) == 0x0000B8, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_AsSound_Cue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CustomEvent_Loaded_2) == 0x0000C8, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, Temp_object_Variable_4) == 0x0000D0, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_AsSound_Cue_3) == 0x0000D8, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_AsSound_Cue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_bSuccess_4) == 0x0000E0, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CustomEvent_Loaded_1) == 0x0000E8, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, Temp_object_Variable_5) == 0x0000F0, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_AsForce_Feedback_Effect) == 0x0000F8, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_AsForce_Feedback_Effect' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_bSuccess_5) == 0x000100, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CustomEvent_Loaded) == 0x000108, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, Temp_object_Variable_6) == 0x000110, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_AsNiagara_System_1) == 0x000118, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_AsNiagara_System_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_DynamicCast_bSuccess_6) == 0x000120, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CreateDelegate_OutputDelegate_4) == 0x000124, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CreateDelegate_OutputDelegate_5) == 0x000134, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol, K2Node_CreateDelegate_OutputDelegate_6) == 0x000144, "Member 'WEAPON_MagnumPistol_C_ExecuteUbergraph_WEAPON_MagnumPistol::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.OnLoaded_9B2E297A4AFBF37B24895BA5F6B916DC
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_MagnumPistol_C_OnLoaded_9B2E297A4AFBF37B24895BA5F6B916DC final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_OnLoaded_9B2E297A4AFBF37B24895BA5F6B916DC) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_OnLoaded_9B2E297A4AFBF37B24895BA5F6B916DC");
static_assert(sizeof(WEAPON_MagnumPistol_C_OnLoaded_9B2E297A4AFBF37B24895BA5F6B916DC) == 0x000008, "Wrong size on WEAPON_MagnumPistol_C_OnLoaded_9B2E297A4AFBF37B24895BA5F6B916DC");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnLoaded_9B2E297A4AFBF37B24895BA5F6B916DC, Loaded) == 0x000000, "Member 'WEAPON_MagnumPistol_C_OnLoaded_9B2E297A4AFBF37B24895BA5F6B916DC::Loaded' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.OnLoaded_0170C2FE491A018C0B59EDAF707EBA59
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_MagnumPistol_C_OnLoaded_0170C2FE491A018C0B59EDAF707EBA59 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_OnLoaded_0170C2FE491A018C0B59EDAF707EBA59) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_OnLoaded_0170C2FE491A018C0B59EDAF707EBA59");
static_assert(sizeof(WEAPON_MagnumPistol_C_OnLoaded_0170C2FE491A018C0B59EDAF707EBA59) == 0x000008, "Wrong size on WEAPON_MagnumPistol_C_OnLoaded_0170C2FE491A018C0B59EDAF707EBA59");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnLoaded_0170C2FE491A018C0B59EDAF707EBA59, Loaded) == 0x000000, "Member 'WEAPON_MagnumPistol_C_OnLoaded_0170C2FE491A018C0B59EDAF707EBA59::Loaded' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.OnLoaded_76AE236949D93883787F2B9B8ACCE612
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_MagnumPistol_C_OnLoaded_76AE236949D93883787F2B9B8ACCE612 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_OnLoaded_76AE236949D93883787F2B9B8ACCE612) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_OnLoaded_76AE236949D93883787F2B9B8ACCE612");
static_assert(sizeof(WEAPON_MagnumPistol_C_OnLoaded_76AE236949D93883787F2B9B8ACCE612) == 0x000008, "Wrong size on WEAPON_MagnumPistol_C_OnLoaded_76AE236949D93883787F2B9B8ACCE612");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnLoaded_76AE236949D93883787F2B9B8ACCE612, Loaded) == 0x000000, "Member 'WEAPON_MagnumPistol_C_OnLoaded_76AE236949D93883787F2B9B8ACCE612::Loaded' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.OnLoaded_CAEA8A9B4D8C012A38284A94B12400A6
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_MagnumPistol_C_OnLoaded_CAEA8A9B4D8C012A38284A94B12400A6 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_OnLoaded_CAEA8A9B4D8C012A38284A94B12400A6) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_OnLoaded_CAEA8A9B4D8C012A38284A94B12400A6");
static_assert(sizeof(WEAPON_MagnumPistol_C_OnLoaded_CAEA8A9B4D8C012A38284A94B12400A6) == 0x000008, "Wrong size on WEAPON_MagnumPistol_C_OnLoaded_CAEA8A9B4D8C012A38284A94B12400A6");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnLoaded_CAEA8A9B4D8C012A38284A94B12400A6, Loaded) == 0x000000, "Member 'WEAPON_MagnumPistol_C_OnLoaded_CAEA8A9B4D8C012A38284A94B12400A6::Loaded' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.OnLoaded_158F1CD24F82FB7BE0F484A918DB786B
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_MagnumPistol_C_OnLoaded_158F1CD24F82FB7BE0F484A918DB786B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_OnLoaded_158F1CD24F82FB7BE0F484A918DB786B) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_OnLoaded_158F1CD24F82FB7BE0F484A918DB786B");
static_assert(sizeof(WEAPON_MagnumPistol_C_OnLoaded_158F1CD24F82FB7BE0F484A918DB786B) == 0x000008, "Wrong size on WEAPON_MagnumPistol_C_OnLoaded_158F1CD24F82FB7BE0F484A918DB786B");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnLoaded_158F1CD24F82FB7BE0F484A918DB786B, Loaded) == 0x000000, "Member 'WEAPON_MagnumPistol_C_OnLoaded_158F1CD24F82FB7BE0F484A918DB786B::Loaded' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.OnLoaded_4F11A09449D36806B5153F99CD167E2D
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_MagnumPistol_C_OnLoaded_4F11A09449D36806B5153F99CD167E2D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_OnLoaded_4F11A09449D36806B5153F99CD167E2D) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_OnLoaded_4F11A09449D36806B5153F99CD167E2D");
static_assert(sizeof(WEAPON_MagnumPistol_C_OnLoaded_4F11A09449D36806B5153F99CD167E2D) == 0x000008, "Wrong size on WEAPON_MagnumPistol_C_OnLoaded_4F11A09449D36806B5153F99CD167E2D");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnLoaded_4F11A09449D36806B5153F99CD167E2D, Loaded) == 0x000000, "Member 'WEAPON_MagnumPistol_C_OnLoaded_4F11A09449D36806B5153F99CD167E2D::Loaded' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.OnLoaded_1728849E46066522302C81AB380A5060
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_MagnumPistol_C_OnLoaded_1728849E46066522302C81AB380A5060 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_OnLoaded_1728849E46066522302C81AB380A5060) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_OnLoaded_1728849E46066522302C81AB380A5060");
static_assert(sizeof(WEAPON_MagnumPistol_C_OnLoaded_1728849E46066522302C81AB380A5060) == 0x000008, "Wrong size on WEAPON_MagnumPistol_C_OnLoaded_1728849E46066522302C81AB380A5060");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnLoaded_1728849E46066522302C81AB380A5060, Loaded) == 0x000000, "Member 'WEAPON_MagnumPistol_C_OnLoaded_1728849E46066522302C81AB380A5060::Loaded' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.FireProjectile
// 0x0040 (0x0040 - 0x0000)
struct WEAPON_MagnumPistol_C_FireProjectile final
{
public:
	class AActor*                                 FiredProjectile;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FireProjectile_FiredProjectile;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FireProjectile_Direction;                 // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABulletProjectile_MagnumRound_C*        K2Node_DynamicCast_AsBullet_Projectile_Magnum_Round; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_FireProjectile) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_FireProjectile");
static_assert(sizeof(WEAPON_MagnumPistol_C_FireProjectile) == 0x000040, "Wrong size on WEAPON_MagnumPistol_C_FireProjectile");
static_assert(offsetof(WEAPON_MagnumPistol_C_FireProjectile, FiredProjectile) == 0x000000, "Member 'WEAPON_MagnumPistol_C_FireProjectile::FiredProjectile' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_FireProjectile, Direction) == 0x000008, "Member 'WEAPON_MagnumPistol_C_FireProjectile::Direction' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_FireProjectile, CallFunc_FireProjectile_FiredProjectile) == 0x000018, "Member 'WEAPON_MagnumPistol_C_FireProjectile::CallFunc_FireProjectile_FiredProjectile' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_FireProjectile, CallFunc_FireProjectile_Direction) == 0x000020, "Member 'WEAPON_MagnumPistol_C_FireProjectile::CallFunc_FireProjectile_Direction' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_FireProjectile, K2Node_DynamicCast_AsBullet_Projectile_Magnum_Round) == 0x000030, "Member 'WEAPON_MagnumPistol_C_FireProjectile::K2Node_DynamicCast_AsBullet_Projectile_Magnum_Round' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_FireProjectile, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WEAPON_MagnumPistol_C_FireProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.GetProjectileClass
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_MagnumPistol_C_GetProjectileClass final
{
public:
	class UClass*                                 Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_GetProjectileClass) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_GetProjectileClass");
static_assert(sizeof(WEAPON_MagnumPistol_C_GetProjectileClass) == 0x000008, "Wrong size on WEAPON_MagnumPistol_C_GetProjectileClass");
static_assert(offsetof(WEAPON_MagnumPistol_C_GetProjectileClass, Result) == 0x000000, "Member 'WEAPON_MagnumPistol_C_GetProjectileClass::Result' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.InitializeMagnumProjectile
// 0x00F0 (0x00F0 - 0x0000)
struct WEAPON_MagnumPistol_C_InitializeMagnumProjectile final
{
public:
	class ABulletProjectile_MagnumRound_C*        MagnumProjectile;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnergyUsed;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentEnergy;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    TargetAcquireEnergyDrainMod;                       // 0x0018(0x00A0)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_InitializeMagnumProjectile");
static_assert(sizeof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile) == 0x0000F0, "Wrong size on WEAPON_MagnumPistol_C_InitializeMagnumProjectile");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, MagnumProjectile) == 0x000000, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::MagnumProjectile' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, EnergyUsed) == 0x000008, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::EnergyUsed' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, CurrentEnergy) == 0x00000C, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::CurrentEnergy' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, CharacterOwner) == 0x000010, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::CharacterOwner' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, TargetAcquireEnergyDrainMod) == 0x000018, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::TargetAcquireEnergyDrainMod' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, Temp_bool_Variable) == 0x0000B8, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, Temp_float_Variable) == 0x0000BC, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, Temp_float_Variable_1) == 0x0000C0, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, K2Node_Select_Default) == 0x0000C4, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, CallFunc_ApplyMod_ReturnValue) == 0x0000C8, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, CallFunc_Round_ReturnValue) == 0x0000D0, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, CallFunc_FMin_ReturnValue) == 0x0000D8, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000DC, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, CallFunc_GetOwnerCharacter_Character) == 0x0000E0, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, CallFunc_GetAttribValue_ReturnValue) == 0x0000E8, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_InitializeMagnumProjectile, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000EC, "Member 'WEAPON_MagnumPistol_C_InitializeMagnumProjectile::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.CycleCurrentMode
// 0x0005 (0x0005 - 0x0000)
struct WEAPON_MagnumPistol_C_CycleCurrentMode final
{
public:
	bool                                          Previous;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DesiredLaserState;                                 // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActivatable_Result;                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanToggleLaserSight_Result;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_CycleCurrentMode) == 0x000001, "Wrong alignment on WEAPON_MagnumPistol_C_CycleCurrentMode");
static_assert(sizeof(WEAPON_MagnumPistol_C_CycleCurrentMode) == 0x000005, "Wrong size on WEAPON_MagnumPistol_C_CycleCurrentMode");
static_assert(offsetof(WEAPON_MagnumPistol_C_CycleCurrentMode, Previous) == 0x000000, "Member 'WEAPON_MagnumPistol_C_CycleCurrentMode::Previous' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CycleCurrentMode, Result) == 0x000001, "Member 'WEAPON_MagnumPistol_C_CycleCurrentMode::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CycleCurrentMode, DesiredLaserState) == 0x000002, "Member 'WEAPON_MagnumPistol_C_CycleCurrentMode::DesiredLaserState' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CycleCurrentMode, CallFunc_IsActivatable_Result) == 0x000003, "Member 'WEAPON_MagnumPistol_C_CycleCurrentMode::CallFunc_IsActivatable_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CycleCurrentMode, CallFunc_CanToggleLaserSight_Result) == 0x000004, "Member 'WEAPON_MagnumPistol_C_CycleCurrentMode::CallFunc_CanToggleLaserSight_Result' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.CanToggleLaserSight
// 0x0020 (0x0020 - 0x0000)
struct WEAPON_MagnumPistol_C_CanToggleLaserSight final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_CanToggleLaserSight) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_CanToggleLaserSight");
static_assert(sizeof(WEAPON_MagnumPistol_C_CanToggleLaserSight) == 0x000020, "Wrong size on WEAPON_MagnumPistol_C_CanToggleLaserSight");
static_assert(offsetof(WEAPON_MagnumPistol_C_CanToggleLaserSight, Result) == 0x000000, "Member 'WEAPON_MagnumPistol_C_CanToggleLaserSight::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CanToggleLaserSight, CharacterOwner) == 0x000008, "Member 'WEAPON_MagnumPistol_C_CanToggleLaserSight::CharacterOwner' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CanToggleLaserSight, CallFunc_GetOwnerCharacter_Character) == 0x000010, "Member 'WEAPON_MagnumPistol_C_CanToggleLaserSight::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CanToggleLaserSight, CallFunc_GetAttribValue_ReturnValue) == 0x000018, "Member 'WEAPON_MagnumPistol_C_CanToggleLaserSight::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CanToggleLaserSight, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'WEAPON_MagnumPistol_C_CanToggleLaserSight::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CanToggleLaserSight, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'WEAPON_MagnumPistol_C_CanToggleLaserSight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CanToggleLaserSight, CallFunc_IsValid_ReturnValue_1) == 0x00001E, "Member 'WEAPON_MagnumPistol_C_CanToggleLaserSight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.CanAcquireTarget
// 0x0020 (0x0020 - 0x0000)
struct WEAPON_MagnumPistol_C_CanAcquireTarget final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribManagerComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_CanAcquireTarget) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_CanAcquireTarget");
static_assert(sizeof(WEAPON_MagnumPistol_C_CanAcquireTarget) == 0x000020, "Wrong size on WEAPON_MagnumPistol_C_CanAcquireTarget");
static_assert(offsetof(WEAPON_MagnumPistol_C_CanAcquireTarget, Actor) == 0x000000, "Member 'WEAPON_MagnumPistol_C_CanAcquireTarget::Actor' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CanAcquireTarget, Result) == 0x000008, "Member 'WEAPON_MagnumPistol_C_CanAcquireTarget::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CanAcquireTarget, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'WEAPON_MagnumPistol_C_CanAcquireTarget::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_CanAcquireTarget, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WEAPON_MagnumPistol_C_CanAcquireTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.TryToggleLaserSight
// 0x0005 (0x0005 - 0x0000)
struct WEAPON_MagnumPistol_C_TryToggleLaserSight final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanToggleLaserSight_Result;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryActivateLaserSight_Result;             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryDeactivateLaserSight_Result;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_TryToggleLaserSight) == 0x000001, "Wrong alignment on WEAPON_MagnumPistol_C_TryToggleLaserSight");
static_assert(sizeof(WEAPON_MagnumPistol_C_TryToggleLaserSight) == 0x000005, "Wrong size on WEAPON_MagnumPistol_C_TryToggleLaserSight");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryToggleLaserSight, Result) == 0x000000, "Member 'WEAPON_MagnumPistol_C_TryToggleLaserSight::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryToggleLaserSight, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WEAPON_MagnumPistol_C_TryToggleLaserSight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryToggleLaserSight, CallFunc_CanToggleLaserSight_Result) == 0x000002, "Member 'WEAPON_MagnumPistol_C_TryToggleLaserSight::CallFunc_CanToggleLaserSight_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryToggleLaserSight, CallFunc_TryActivateLaserSight_Result) == 0x000003, "Member 'WEAPON_MagnumPistol_C_TryToggleLaserSight::CallFunc_TryActivateLaserSight_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryToggleLaserSight, CallFunc_TryDeactivateLaserSight_Result) == 0x000004, "Member 'WEAPON_MagnumPistol_C_TryToggleLaserSight::CallFunc_TryDeactivateLaserSight_Result' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.OnTargetAcquired
// 0x00C0 (0x00C0 - 0x0000)
struct WEAPON_MagnumPistol_C_OnTargetAcquired final
{
public:
	struct FAttribModApplyData                    TargetAcquireEnergyDrainMod;                       // 0x0000(0x00A0)(Edit, BlueprintVisible)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_OnTargetAcquired) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_OnTargetAcquired");
static_assert(sizeof(WEAPON_MagnumPistol_C_OnTargetAcquired) == 0x0000C0, "Wrong size on WEAPON_MagnumPistol_C_OnTargetAcquired");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnTargetAcquired, TargetAcquireEnergyDrainMod) == 0x000000, "Member 'WEAPON_MagnumPistol_C_OnTargetAcquired::TargetAcquireEnergyDrainMod' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnTargetAcquired, CallFunc_GetOwnerCharacter_Character) == 0x0000A0, "Member 'WEAPON_MagnumPistol_C_OnTargetAcquired::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnTargetAcquired, CallFunc_ApplyMod_ReturnValue) == 0x0000A8, "Member 'WEAPON_MagnumPistol_C_OnTargetAcquired::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnTargetAcquired, CallFunc_GetWeaponMeshComponent_Result) == 0x0000B0, "Member 'WEAPON_MagnumPistol_C_OnTargetAcquired::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnTargetAcquired, CallFunc_SpawnSoundAttached_ReturnValue) == 0x0000B8, "Member 'WEAPON_MagnumPistol_C_OnTargetAcquired::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.UpdateTargetLocator
// 0x0190 (0x0190 - 0x0000)
struct WEAPON_MagnumPistol_C_UpdateTargetLocator final
{
public:
	bool                                          IsLocatorEnabled;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TraceHitLocation;                                  // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceDirection;                                    // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetNormal;                                      // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetDistance;                                    // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdjustedNormal;                                    // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdjustedHitLocation;                               // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue_1;               // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0xF];                                       // 0x0081(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x00D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                K2Node_Select_Default;                             // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_UpdateTargetLocator) == 0x000010, "Wrong alignment on WEAPON_MagnumPistol_C_UpdateTargetLocator");
static_assert(sizeof(WEAPON_MagnumPistol_C_UpdateTargetLocator) == 0x000190, "Wrong size on WEAPON_MagnumPistol_C_UpdateTargetLocator");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, IsLocatorEnabled) == 0x000000, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::IsLocatorEnabled' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, TraceHitLocation) == 0x000004, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::TraceHitLocation' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, TraceDirection) == 0x000010, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::TraceDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, TargetNormal) == 0x00001C, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::TargetNormal' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, TargetDistance) == 0x000028, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::TargetDistance' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, AdjustedNormal) == 0x00002C, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::AdjustedNormal' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, AdjustedHitLocation) == 0x000038, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::AdjustedHitLocation' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000044, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_MakeRotFromZ_ReturnValue) == 0x000050, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00005C, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_MakeRotFromZ_ReturnValue_1) == 0x000068, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_MakeRotFromZ_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000074, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000080, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C0, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_Ease_ReturnValue) == 0x0000C4, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_Lerp_ReturnValue) == 0x0000C8, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x0000CC, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, Temp_bool_Variable) == 0x0000D0, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x0000D4, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, K2Node_Select_Default) == 0x00015C, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_IsValid_ReturnValue) == 0x000168, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000170, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_IsValid_ReturnValue_1) == 0x000178, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00017C, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_Lerp_ReturnValue_1) == 0x000180, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_UpdateTargetLocator, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000184, "Member 'WEAPON_MagnumPistol_C_UpdateTargetLocator::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.TryActivateLaserSight
// 0x0078 (0x0078 - 0x0000)
struct WEAPON_MagnumPistol_C_TryActivateLaserSight final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result_1;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_TryActivateLaserSight) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_TryActivateLaserSight");
static_assert(sizeof(WEAPON_MagnumPistol_C_TryActivateLaserSight) == 0x000078, "Wrong size on WEAPON_MagnumPistol_C_TryActivateLaserSight");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, Result) == 0x000000, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, CharacterOwner) == 0x000008, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::CharacterOwner' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000010, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, K2Node_DynamicCast_AsNiagara_System) == 0x000018, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, CallFunc_GetWeaponMeshComponent_Result) == 0x000028, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000030, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000038, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, CallFunc_GetOwnerCharacter_Character) == 0x000040, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000048, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, CallFunc_GetWeaponMeshComponent_Result_1) == 0x000060, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::CallFunc_GetWeaponMeshComponent_Result_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, CallFunc_Not_PreBool_ReturnValue) == 0x000069, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryActivateLaserSight, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000070, "Member 'WEAPON_MagnumPistol_C_TryActivateLaserSight::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.TryDeactivateLaserSight
// 0x0058 (0x0058 - 0x0000)
struct WEAPON_MagnumPistol_C_TryDeactivateLaserSight final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_Actor;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_TryDeactivateLaserSight) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_TryDeactivateLaserSight");
static_assert(sizeof(WEAPON_MagnumPistol_C_TryDeactivateLaserSight) == 0x000058, "Wrong size on WEAPON_MagnumPistol_C_TryDeactivateLaserSight");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryDeactivateLaserSight, Result) == 0x000000, "Member 'WEAPON_MagnumPistol_C_TryDeactivateLaserSight::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryDeactivateLaserSight, CharacterOwner) == 0x000008, "Member 'WEAPON_MagnumPistol_C_TryDeactivateLaserSight::CharacterOwner' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryDeactivateLaserSight, CallFunc_GetWeaponMeshComponent_Result) == 0x000010, "Member 'WEAPON_MagnumPistol_C_TryDeactivateLaserSight::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryDeactivateLaserSight, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000018, "Member 'WEAPON_MagnumPistol_C_TryDeactivateLaserSight::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryDeactivateLaserSight, CallFunc_GetOwnerActor_Actor) == 0x000020, "Member 'WEAPON_MagnumPistol_C_TryDeactivateLaserSight::CallFunc_GetOwnerActor_Actor' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryDeactivateLaserSight, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000028, "Member 'WEAPON_MagnumPistol_C_TryDeactivateLaserSight::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryDeactivateLaserSight, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WEAPON_MagnumPistol_C_TryDeactivateLaserSight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryDeactivateLaserSight, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000038, "Member 'WEAPON_MagnumPistol_C_TryDeactivateLaserSight::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryDeactivateLaserSight, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'WEAPON_MagnumPistol_C_TryDeactivateLaserSight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryDeactivateLaserSight, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WEAPON_MagnumPistol_C_TryDeactivateLaserSight::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.EquipTick
// 0x0310 (0x0310 - 0x0000)
struct WEAPON_MagnumPistol_C_EquipTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 NewHitActor;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetDistance;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetNormal;                                      // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceDirection;                                    // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SightLocation;                                     // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CameraTransform;                                   // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             SightTransform;                                    // 0x0080(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWeaponObstructed_Result;                // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanAcquireTarget_Result;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMaxCombatTraceDistance_Distance;       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxCombatTraceDistance_Distance_1;     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0130(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0140(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x2];                                      // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0214(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_288[0x8];                                      // 0x0288(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetHeadTransform_Transform;               // 0x0290(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMaxCombatTraceDistance_Distance_2;     // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TriangulateRayDirection_TriangulatedDirection; // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_EquipTick) == 0x000010, "Wrong alignment on WEAPON_MagnumPistol_C_EquipTick");
static_assert(sizeof(WEAPON_MagnumPistol_C_EquipTick) == 0x000310, "Wrong size on WEAPON_MagnumPistol_C_EquipTick");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, DeltaTime) == 0x000000, "Member 'WEAPON_MagnumPistol_C_EquipTick::DeltaTime' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, NewHitActor) == 0x000008, "Member 'WEAPON_MagnumPistol_C_EquipTick::NewHitActor' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, TargetDistance) == 0x000010, "Member 'WEAPON_MagnumPistol_C_EquipTick::TargetDistance' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, TargetNormal) == 0x000014, "Member 'WEAPON_MagnumPistol_C_EquipTick::TargetNormal' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, TargetLocation) == 0x000020, "Member 'WEAPON_MagnumPistol_C_EquipTick::TargetLocation' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, TraceDirection) == 0x00002C, "Member 'WEAPON_MagnumPistol_C_EquipTick::TraceDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, SightLocation) == 0x000038, "Member 'WEAPON_MagnumPistol_C_EquipTick::SightLocation' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CameraTransform) == 0x000050, "Member 'WEAPON_MagnumPistol_C_EquipTick::CameraTransform' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, SightTransform) == 0x000080, "Member 'WEAPON_MagnumPistol_C_EquipTick::SightTransform' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CharacterOwner) == 0x0000B0, "Member 'WEAPON_MagnumPistol_C_EquipTick::CharacterOwner' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B8, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_IsWeaponObstructed_Result) == 0x0000C4, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_IsWeaponObstructed_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_CanAcquireTarget_Result) == 0x0000C5, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_CanAcquireTarget_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_Not_PreBool_ReturnValue) == 0x0000C6, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000C7, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_GetMaxCombatTraceDistance_Distance) == 0x0000C8, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_GetMaxCombatTraceDistance_Distance' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000CC, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000D0, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000D4, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000D8, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_FMin_ReturnValue) == 0x0000DC, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_GetCurrentAction_CurrentAction) == 0x0000E8, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_IsValid_ReturnValue_1) == 0x0000F0, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000F4, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_Not_PreBool_ReturnValue_1) == 0x000100, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BooleanAND_ReturnValue) == 0x000101, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_GetForwardVector_ReturnValue) == 0x000104, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_GetMaxCombatTraceDistance_Distance_1) == 0x000110, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_GetMaxCombatTraceDistance_Distance_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000114, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_IsValid_ReturnValue_2) == 0x00012C, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, K2Node_MakeArray_Array) == 0x000130, "Member 'WEAPON_MagnumPistol_C_EquipTick::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_LineTraceSingle_OutHit) == 0x000140, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_LineTraceSingle_ReturnValue) == 0x0001C8, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakTransform_Location) == 0x0001CC, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakTransform_Rotation) == 0x0001D8, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakTransform_Scale) == 0x0001E4, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_bBlockingHit) == 0x0001F0, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001F1, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_Time) == 0x0001F4, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_Distance) == 0x0001F8, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_Location) == 0x0001FC, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_ImpactPoint) == 0x000208, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_Normal) == 0x000214, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_ImpactNormal) == 0x000220, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_PhysMat) == 0x000230, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_HitActor) == 0x000238, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_HitComponent) == 0x000240, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_HitBoneName) == 0x000248, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_HitItem) == 0x000250, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_ElementIndex) == 0x000254, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_FaceIndex) == 0x000258, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_TraceStart) == 0x00025C, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_BreakHitResult_TraceEnd) == 0x000268, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_GetForwardVector_ReturnValue_1) == 0x000274, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_GetOwnerCharacter_Character) == 0x000280, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_GetHeadTransform_Transform) == 0x000290, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_GetHeadTransform_Transform' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_GetMaxCombatTraceDistance_Distance_2) == 0x0002C0, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_GetMaxCombatTraceDistance_Distance_2' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_TriangulateRayDirection_TriangulatedDirection) == 0x0002C4, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_TriangulateRayDirection_TriangulatedDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0002D0, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_InverseTransformLocation_ReturnValue) == 0x000300, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_EquipTick, CallFunc_IsValid_ReturnValue_3) == 0x00030C, "Member 'WEAPON_MagnumPistol_C_EquipTick::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.OnWeaponBecameActivatable
// 0x0010 (0x0010 - 0x0000)
struct WEAPON_MagnumPistol_C_OnWeaponBecameActivatable final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowImmediately;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryActivateLaserSight_Result;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_OnWeaponBecameActivatable) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_OnWeaponBecameActivatable");
static_assert(sizeof(WEAPON_MagnumPistol_C_OnWeaponBecameActivatable) == 0x000010, "Wrong size on WEAPON_MagnumPistol_C_OnWeaponBecameActivatable");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnWeaponBecameActivatable, Character) == 0x000000, "Member 'WEAPON_MagnumPistol_C_OnWeaponBecameActivatable::Character' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnWeaponBecameActivatable, ShowImmediately) == 0x000008, "Member 'WEAPON_MagnumPistol_C_OnWeaponBecameActivatable::ShowImmediately' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnWeaponBecameActivatable, CallFunc_TryActivateLaserSight_Result) == 0x000009, "Member 'WEAPON_MagnumPistol_C_OnWeaponBecameActivatable::CallFunc_TryActivateLaserSight_Result' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.OnBecomeUnactivatable
// 0x0003 (0x0003 - 0x0000)
struct WEAPON_MagnumPistol_C_OnBecomeUnactivatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryDeactivateLaserSight_Result;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBecomeUnactivatable_Result;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_OnBecomeUnactivatable) == 0x000001, "Wrong alignment on WEAPON_MagnumPistol_C_OnBecomeUnactivatable");
static_assert(sizeof(WEAPON_MagnumPistol_C_OnBecomeUnactivatable) == 0x000003, "Wrong size on WEAPON_MagnumPistol_C_OnBecomeUnactivatable");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnBecomeUnactivatable, Result) == 0x000000, "Member 'WEAPON_MagnumPistol_C_OnBecomeUnactivatable::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnBecomeUnactivatable, CallFunc_TryDeactivateLaserSight_Result) == 0x000001, "Member 'WEAPON_MagnumPistol_C_OnBecomeUnactivatable::CallFunc_TryDeactivateLaserSight_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_OnBecomeUnactivatable, CallFunc_OnBecomeUnactivatable_Result) == 0x000002, "Member 'WEAPON_MagnumPistol_C_OnBecomeUnactivatable::CallFunc_OnBecomeUnactivatable_Result' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.EVENT_OnEnergyDepleted
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_MagnumPistol_C_EVENT_OnEnergyDepleted final
{
public:
	bool                                          CallFunc_TryDeactivateLaserSight_Result;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_EVENT_OnEnergyDepleted) == 0x000001, "Wrong alignment on WEAPON_MagnumPistol_C_EVENT_OnEnergyDepleted");
static_assert(sizeof(WEAPON_MagnumPistol_C_EVENT_OnEnergyDepleted) == 0x000001, "Wrong size on WEAPON_MagnumPistol_C_EVENT_OnEnergyDepleted");
static_assert(offsetof(WEAPON_MagnumPistol_C_EVENT_OnEnergyDepleted, CallFunc_TryDeactivateLaserSight_Result) == 0x000000, "Member 'WEAPON_MagnumPistol_C_EVENT_OnEnergyDepleted::CallFunc_TryDeactivateLaserSight_Result' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.TryDeactivateLaserDot
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_MagnumPistol_C_TryDeactivateLaserDot final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_TryDeactivateLaserDot) == 0x000001, "Wrong alignment on WEAPON_MagnumPistol_C_TryDeactivateLaserDot");
static_assert(sizeof(WEAPON_MagnumPistol_C_TryDeactivateLaserDot) == 0x000001, "Wrong size on WEAPON_MagnumPistol_C_TryDeactivateLaserDot");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryDeactivateLaserDot, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WEAPON_MagnumPistol_C_TryDeactivateLaserDot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.TryCreateVisualEventForLaserSight
// 0x0048 (0x0048 - 0x0000)
struct WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight final
{
public:
	struct FVector                                EventLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceDirection;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight");
static_assert(sizeof(WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight) == 0x000048, "Wrong size on WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight, EventLocation) == 0x000000, "Member 'WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight::EventLocation' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight, TraceDirection) == 0x00000C, "Member 'WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight::TraceDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000018, "Member 'WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00001C, "Member 'WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000028, "Member 'WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight, CallFunc_Add_FloatFloat_ReturnValue) == 0x00002C, "Member 'WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000030, "Member 'WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight, CallFunc_GetOwnerCharacter_Character) == 0x000040, "Member 'WEAPON_MagnumPistol_C_TryCreateVisualEventForLaserSight::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct WEAPON_MagnumPistol_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryToggleLaserSight_Result;               // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_ReceiveAnimationMessage");
static_assert(sizeof(WEAPON_MagnumPistol_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on WEAPON_MagnumPistol_C_ReceiveAnimationMessage");
static_assert(offsetof(WEAPON_MagnumPistol_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'WEAPON_MagnumPistol_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'WEAPON_MagnumPistol_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x000011, "Member 'WEAPON_MagnumPistol_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ReceiveAnimationMessage, CallFunc_TryToggleLaserSight_Result) == 0x000012, "Member 'WEAPON_MagnumPistol_C_ReceiveAnimationMessage::CallFunc_TryToggleLaserSight_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000013, "Member 'WEAPON_MagnumPistol_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.PlayDischargeSoundFX
// 0x0018 (0x0018 - 0x0000)
struct WEAPON_MagnumPistol_C_PlayDischargeSoundFX final
{
public:
	float                                         VolumeScale;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchScale;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_PlayDischargeSoundCue_AudioComponent;     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_PlayDischargeSoundFX) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_PlayDischargeSoundFX");
static_assert(sizeof(WEAPON_MagnumPistol_C_PlayDischargeSoundFX) == 0x000018, "Wrong size on WEAPON_MagnumPistol_C_PlayDischargeSoundFX");
static_assert(offsetof(WEAPON_MagnumPistol_C_PlayDischargeSoundFX, VolumeScale) == 0x000000, "Member 'WEAPON_MagnumPistol_C_PlayDischargeSoundFX::VolumeScale' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_PlayDischargeSoundFX, PitchScale) == 0x000004, "Member 'WEAPON_MagnumPistol_C_PlayDischargeSoundFX::PitchScale' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_PlayDischargeSoundFX, CallFunc_PlayDischargeSoundCue_AudioComponent) == 0x000008, "Member 'WEAPON_MagnumPistol_C_PlayDischargeSoundFX::CallFunc_PlayDischargeSoundCue_AudioComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_PlayDischargeSoundFX, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WEAPON_MagnumPistol_C_PlayDischargeSoundFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.PlayDischargeForceFeedback
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_MagnumPistol_C_PlayDischargeForceFeedback final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_PlayDischargeForceFeedback) == 0x000001, "Wrong alignment on WEAPON_MagnumPistol_C_PlayDischargeForceFeedback");
static_assert(sizeof(WEAPON_MagnumPistol_C_PlayDischargeForceFeedback) == 0x000001, "Wrong size on WEAPON_MagnumPistol_C_PlayDischargeForceFeedback");
static_assert(offsetof(WEAPON_MagnumPistol_C_PlayDischargeForceFeedback, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WEAPON_MagnumPistol_C_PlayDischargeForceFeedback::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.SetLaserActiveParameter
// 0x0018 (0x0018 - 0x0000)
struct WEAPON_MagnumPistol_C_SetLaserActiveParameter final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_SetLaserActiveParameter) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_SetLaserActiveParameter");
static_assert(sizeof(WEAPON_MagnumPistol_C_SetLaserActiveParameter) == 0x000018, "Wrong size on WEAPON_MagnumPistol_C_SetLaserActiveParameter");
static_assert(offsetof(WEAPON_MagnumPistol_C_SetLaserActiveParameter, State) == 0x000000, "Member 'WEAPON_MagnumPistol_C_SetLaserActiveParameter::State' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_SetLaserActiveParameter, CallFunc_GetWeaponMeshComponent_Result) == 0x000008, "Member 'WEAPON_MagnumPistol_C_SetLaserActiveParameter::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_SetLaserActiveParameter, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000010, "Member 'WEAPON_MagnumPistol_C_SetLaserActiveParameter::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.SetLaserSightTargetProgress
// 0x0010 (0x0010 - 0x0000)
struct WEAPON_MagnumPistol_C_SetLaserSightTargetProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_MagnumPistol_C_SetLaserSightTargetProgress) == 0x000008, "Wrong alignment on WEAPON_MagnumPistol_C_SetLaserSightTargetProgress");
static_assert(sizeof(WEAPON_MagnumPistol_C_SetLaserSightTargetProgress) == 0x000010, "Wrong size on WEAPON_MagnumPistol_C_SetLaserSightTargetProgress");
static_assert(offsetof(WEAPON_MagnumPistol_C_SetLaserSightTargetProgress, Progress) == 0x000000, "Member 'WEAPON_MagnumPistol_C_SetLaserSightTargetProgress::Progress' has a wrong offset!");
static_assert(offsetof(WEAPON_MagnumPistol_C_SetLaserSightTargetProgress, CallFunc_GetWeaponMeshComponent_Result) == 0x000008, "Member 'WEAPON_MagnumPistol_C_SetLaserSightTargetProgress::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");

// Function WEAPON_MagnumPistol.WEAPON_MagnumPistol_C.SetHasLaserSightFeature
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_MagnumPistol_C_SetHasLaserSightFeature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_MagnumPistol_C_SetHasLaserSightFeature) == 0x000001, "Wrong alignment on WEAPON_MagnumPistol_C_SetHasLaserSightFeature");
static_assert(sizeof(WEAPON_MagnumPistol_C_SetHasLaserSightFeature) == 0x000001, "Wrong size on WEAPON_MagnumPistol_C_SetHasLaserSightFeature");
static_assert(offsetof(WEAPON_MagnumPistol_C_SetHasLaserSightFeature, State) == 0x000000, "Member 'WEAPON_MagnumPistol_C_SetHasLaserSightFeature::State' has a wrong offset!");

}


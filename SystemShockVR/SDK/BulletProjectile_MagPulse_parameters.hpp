#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BulletProjectile_MagPulse

#include "Basic.hpp"

#include "NamedInteger_structs.hpp"
#include "Engine_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "STRUCT_EffectParams_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BulletProjectile_MagPulse.BulletProjectile_MagPulse_C.ExecuteUbergraph_BulletProjectile_MagPulse
// 0x000C (0x000C - 0x0000)
struct BulletProjectile_MagPulse_C_ExecuteUbergraph_BulletProjectile_MagPulse final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BulletProjectile_MagPulse_C_ExecuteUbergraph_BulletProjectile_MagPulse) == 0x000004, "Wrong alignment on BulletProjectile_MagPulse_C_ExecuteUbergraph_BulletProjectile_MagPulse");
static_assert(sizeof(BulletProjectile_MagPulse_C_ExecuteUbergraph_BulletProjectile_MagPulse) == 0x00000C, "Wrong size on BulletProjectile_MagPulse_C_ExecuteUbergraph_BulletProjectile_MagPulse");
static_assert(offsetof(BulletProjectile_MagPulse_C_ExecuteUbergraph_BulletProjectile_MagPulse, EntryPoint) == 0x000000, "Member 'BulletProjectile_MagPulse_C_ExecuteUbergraph_BulletProjectile_MagPulse::EntryPoint' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ExecuteUbergraph_BulletProjectile_MagPulse, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BulletProjectile_MagPulse_C_ExecuteUbergraph_BulletProjectile_MagPulse::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ExecuteUbergraph_BulletProjectile_MagPulse, CallFunc_Greater_ByteByte_ReturnValue) == 0x000008, "Member 'BulletProjectile_MagPulse_C_ExecuteUbergraph_BulletProjectile_MagPulse::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");

// Function BulletProjectile_MagPulse.BulletProjectile_MagPulse_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BulletProjectile_MagPulse_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BulletProjectile_MagPulse_C_ReceiveTick) == 0x000004, "Wrong alignment on BulletProjectile_MagPulse_C_ReceiveTick");
static_assert(sizeof(BulletProjectile_MagPulse_C_ReceiveTick) == 0x000004, "Wrong size on BulletProjectile_MagPulse_C_ReceiveTick");
static_assert(offsetof(BulletProjectile_MagPulse_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BulletProjectile_MagPulse_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BulletProjectile_MagPulse.BulletProjectile_MagPulse_C.SetChargeState
// 0x0020 (0x0020 - 0x0000)
struct BulletProjectile_MagPulse_C_SetChargeState final
{
public:
	uint8                                         Count;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MagneticDamage_0;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ElectricDamage_0;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUpgraded_0;                                      // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_GetTracerSystemComponent_SystemComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BulletProjectile_MagPulse_C_SetChargeState) == 0x000008, "Wrong alignment on BulletProjectile_MagPulse_C_SetChargeState");
static_assert(sizeof(BulletProjectile_MagPulse_C_SetChargeState) == 0x000020, "Wrong size on BulletProjectile_MagPulse_C_SetChargeState");
static_assert(offsetof(BulletProjectile_MagPulse_C_SetChargeState, Count) == 0x000000, "Member 'BulletProjectile_MagPulse_C_SetChargeState::Count' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_SetChargeState, MagneticDamage_0) == 0x000004, "Member 'BulletProjectile_MagPulse_C_SetChargeState::MagneticDamage_0' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_SetChargeState, ElectricDamage_0) == 0x000008, "Member 'BulletProjectile_MagPulse_C_SetChargeState::ElectricDamage_0' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_SetChargeState, IsUpgraded_0) == 0x00000C, "Member 'BulletProjectile_MagPulse_C_SetChargeState::IsUpgraded_0' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_SetChargeState, CallFunc_GetTracerSystemComponent_SystemComponent) == 0x000010, "Member 'BulletProjectile_MagPulse_C_SetChargeState::CallFunc_GetTracerSystemComponent_SystemComponent' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_SetChargeState, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BulletProjectile_MagPulse_C_SetChargeState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_SetChargeState, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'BulletProjectile_MagPulse_C_SetChargeState::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BulletProjectile_MagPulse.BulletProjectile_MagPulse_C.TryBulletCollision
// 0x0090 (0x0090 - 0x0000)
struct BulletProjectile_MagPulse_C_TryBulletCollision final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         FrameHitDeltaTime;                                 // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x008C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryBulletCollision_Result;                // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BulletProjectile_MagPulse_C_TryBulletCollision) == 0x000004, "Wrong alignment on BulletProjectile_MagPulse_C_TryBulletCollision");
static_assert(sizeof(BulletProjectile_MagPulse_C_TryBulletCollision) == 0x000090, "Wrong size on BulletProjectile_MagPulse_C_TryBulletCollision");
static_assert(offsetof(BulletProjectile_MagPulse_C_TryBulletCollision, Hit) == 0x000000, "Member 'BulletProjectile_MagPulse_C_TryBulletCollision::Hit' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_TryBulletCollision, FrameHitDeltaTime) == 0x000088, "Member 'BulletProjectile_MagPulse_C_TryBulletCollision::FrameHitDeltaTime' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_TryBulletCollision, Result) == 0x00008C, "Member 'BulletProjectile_MagPulse_C_TryBulletCollision::Result' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_TryBulletCollision, CallFunc_TryBulletCollision_Result) == 0x00008D, "Member 'BulletProjectile_MagPulse_C_TryBulletCollision::CallFunc_TryBulletCollision_Result' has a wrong offset!");

// Function BulletProjectile_MagPulse.BulletProjectile_MagPulse_C.UpdatePropertiesFromChargeCount
// 0x003C (0x003C - 0x0000)
struct BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_5;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_2;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount) == 0x000004, "Wrong alignment on BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount");
static_assert(sizeof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount) == 0x00003C, "Wrong size on BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, Temp_bool_Variable) == 0x000000, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, Temp_float_Variable) == 0x000004, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, Temp_float_Variable_1) == 0x000008, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, Temp_byte_Variable) == 0x00000C, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, Temp_float_Variable_2) == 0x000010, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, Temp_float_Variable_3) == 0x000014, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, Temp_float_Variable_4) == 0x000018, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, Temp_byte_Variable_1) == 0x00001C, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, Temp_float_Variable_5) == 0x000020, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, Temp_float_Variable_6) == 0x000024, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, Temp_float_Variable_7) == 0x000028, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, K2Node_Select_Default) == 0x00002C, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, K2Node_Select_Default_1) == 0x000030, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, K2Node_Select_Default_2) == 0x000034, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'BulletProjectile_MagPulse_C_UpdatePropertiesFromChargeCount::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BulletProjectile_MagPulse.BulletProjectile_MagPulse_C.UpdateProjectileTrajectory
// 0x00D4 (0x00D4 - 0x0000)
struct BulletProjectile_MagPulse_C_UpdateProjectileTrajectory final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchAdjustment;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedBulletLifetime_Result;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0044(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory) == 0x000004, "Wrong alignment on BulletProjectile_MagPulse_C_UpdateProjectileTrajectory");
static_assert(sizeof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory) == 0x0000D4, "Wrong size on BulletProjectile_MagPulse_C_UpdateProjectileTrajectory");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, DeltaTime) == 0x000000, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::DeltaTime' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, PitchAdjustment) == 0x000004, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::PitchAdjustment' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000008, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_GetElapsedBulletLifetime_Result) == 0x000028, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_GetElapsedBulletLifetime_Result' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_FMax_ReturnValue) == 0x00002C, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_MakeRotator_ReturnValue) == 0x000034, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_FMin_ReturnValue) == 0x000040, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000044, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_Ease_ReturnValue) == 0x0000CC, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_UpdateProjectileTrajectory, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D0, "Member 'BulletProjectile_MagPulse_C_UpdateProjectileTrajectory::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function BulletProjectile_MagPulse.BulletProjectile_MagPulse_C.ApplyRadialDamageAroundHit
// 0x04D0 (0x04D0 - 0x0000)
struct BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         ScaledMagneticRadius;                              // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpactDistance;                                    // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactDirection;                                   // 0x0090(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x009C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           HitCharacter;                                      // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    StasisModToApply;                                  // 0x00B0(0x00A0)(Edit, BlueprintVisible)
	struct FAttribModApplyData                    EnergyDrainModToApply;                             // 0x0150(0x00A0)(Edit, BlueprintVisible)
	struct FAttribModApplyData                    DamageModToApply;                                  // 0x01F0(0x00A0)(Edit, BlueprintVisible)
	struct FVector                                SourceLocation;                                    // 0x0290(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBaseBulletDamage_Result;               // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue_1;                   // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorNormalAndLength_OutLength;       // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorNormalAndLength_ReturnValue;     // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody; // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue;   // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33E[0x2];                                      // 0x033E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0388(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x03BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x03BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BE[0x2];                                      // 0x03BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x03C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x03D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x03E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x03EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0424(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43C[0x4];                                      // 0x043C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0440(0x0010)(ConstParm, ReferenceParm)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUnobstructedPropagationPathBetweenPoints_ReturnValue; // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_ImpactData_C*                      CallFunc_SpawnObject_ReturnValue;                  // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue_2;                   // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0470(0x0010)(ConstParm, ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0488(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x3];                                      // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit) == 0x000008, "Wrong alignment on BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit");
static_assert(sizeof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit) == 0x0004D0, "Wrong size on BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, Hit) == 0x000000, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::Hit' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, ScaledMagneticRadius) == 0x000088, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::ScaledMagneticRadius' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, ImpactDistance) == 0x00008C, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::ImpactDistance' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, ImpactDirection) == 0x000090, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::ImpactDirection' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, ImpactPoint) == 0x00009C, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, HitCharacter) == 0x0000A8, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::HitCharacter' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, StasisModToApply) == 0x0000B0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::StasisModToApply' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, EnergyDrainModToApply) == 0x000150, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::EnergyDrainModToApply' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, DamageModToApply) == 0x0001F0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::DamageModToApply' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, SourceLocation) == 0x000290, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::SourceLocation' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, GameInstance) == 0x0002A0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::GameInstance' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, Temp_int_Array_Index_Variable) == 0x0002A8, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_GetInstigator_ReturnValue) == 0x0002B0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_ApplyMod_ReturnValue) == 0x0002B8, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0002C0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002C4, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_GetBaseBulletDamage_Result) == 0x0002C8, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_GetBaseBulletDamage_Result' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002CC, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_Round_ReturnValue) == 0x0002D0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0002D4, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, Temp_int_Loop_Counter_Variable) == 0x0002D8, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_Add_IntInt_ReturnValue) == 0x0002DC, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_ApplyMod_ReturnValue_1) == 0x0002E0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_ApplyMod_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0002E8, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002EC, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002F8, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000304, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_GetVectorNormalAndLength_OutLength) == 0x000310, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_GetVectorNormalAndLength_OutLength' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_GetVectorNormalAndLength_ReturnValue) == 0x000314, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_GetVectorNormalAndLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_GetClosestPointOnCollision_OutPointOnBody) == 0x000320, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_GetClosestPointOnCollision_OutPointOnBody' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_GetClosestPointOnCollision_ReturnValue) == 0x00032C, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_GetClosestPointOnCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000330, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_bBlockingHit) == 0x00033C, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x00033D, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_Time) == 0x000340, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_Distance) == 0x000344, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_Location) == 0x000348, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_ImpactPoint) == 0x000354, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_Normal) == 0x000360, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_ImpactNormal) == 0x00036C, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_PhysMat) == 0x000378, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_HitActor) == 0x000380, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_HitComponent) == 0x000388, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_HitBoneName) == 0x000390, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_HitItem) == 0x000398, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_ElementIndex) == 0x00039C, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_FaceIndex) == 0x0003A0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_TraceStart) == 0x0003A4, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_TraceEnd) == 0x0003B0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_bBlockingHit_1) == 0x0003BC, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x0003BD, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_Time_1) == 0x0003C0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_Distance_1) == 0x0003C4, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_Location_1) == 0x0003C8, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0003D4, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_Normal_1) == 0x0003E0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0003EC, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_PhysMat_1) == 0x0003F8, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_HitActor_1) == 0x000400, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_HitComponent_1) == 0x000408, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_HitBoneName_1) == 0x000410, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_HitItem_1) == 0x000418, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_ElementIndex_1) == 0x00041C, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_FaceIndex_1) == 0x000420, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_TraceStart_1) == 0x000424, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_BreakHitResult_TraceEnd_1) == 0x000430, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, K2Node_MakeArray_Array) == 0x000440, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_GetInstigator_ReturnValue_1) == 0x000450, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_HasUnobstructedPropagationPathBetweenPoints_ReturnValue) == 0x000458, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_HasUnobstructedPropagationPathBetweenPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_SpawnObject_ReturnValue) == 0x000460, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_ApplyMod_ReturnValue_2) == 0x000468, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_ApplyMod_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, K2Node_MakeArray_Array_1) == 0x000470, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_GetGameInstance_ReturnValue) == 0x000480, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_SphereOverlapActors_OutActors) == 0x000488, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_SphereOverlapActors_ReturnValue) == 0x000498, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, K2Node_DynamicCast_AsGI_Single_Player) == 0x0004A0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, K2Node_DynamicCast_bSuccess) == 0x0004A8, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_Array_Get_Item) == 0x0004B0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0004B8, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, K2Node_DynamicCast_bSuccess_1) == 0x0004C0, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_Array_Length_ReturnValue) == 0x0004C4, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit, CallFunc_Less_IntInt_ReturnValue) == 0x0004C8, "Member 'BulletProjectile_MagPulse_C_ApplyRadialDamageAroundHit::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BulletProjectile_MagPulse.BulletProjectile_MagPulse_C.CreateElectromagneticVortex
// 0x0270 (0x0270 - 0x0000)
struct BulletProjectile_MagPulse_C_CreateElectromagneticVortex final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ATRIGGER_ElectromagneticVortex_C*       VortexActor;                                       // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable_1;                              // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_ByteByte_ReturnValue;           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevel*                                 CallFunc_GetActorLevel_ReturnValue;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18E[0x2];                                      // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_218[0x8];                                      // 0x0218(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	class ATRIGGER_ElectromagneticVortex_C*       CallFunc_SpawnActorInLevel_ReturnValue;            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex) == 0x000010, "Wrong alignment on BulletProjectile_MagPulse_C_CreateElectromagneticVortex");
static_assert(sizeof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex) == 0x000270, "Wrong size on BulletProjectile_MagPulse_C_CreateElectromagneticVortex");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, Hit) == 0x000000, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::Hit' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, VortexActor) == 0x000088, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::VortexActor' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, Temp_float_Variable) == 0x000090, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, Temp_float_Variable_1) == 0x000094, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, Temp_float_Variable_2) == 0x000098, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, Temp_byte_Variable) == 0x00009C, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, Temp_int_Variable) == 0x0000A0, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, Temp_byte_Variable_1) == 0x0000A4, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_GetGameInstance_ReturnValue) == 0x0000A8, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, Temp_int_Variable_1) == 0x0000B0, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000B8, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, Temp_int_Variable_2) == 0x0000C4, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_GetGameInstance_ReturnValue_1) == 0x0000C8, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000D0, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x0000E0, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, K2Node_DynamicCast_bSuccess_1) == 0x0000E8, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_GetInstigator_ReturnValue) == 0x0000F0, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_LessEqual_ByteByte_ReturnValue) == 0x0000F8, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_LessEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, K2Node_Select_Default) == 0x0000FC, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_GetActorLevel_ReturnValue) == 0x000100, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_GetActorLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_Location) == 0x000114, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_Normal) == 0x00012C, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_ImpactNormal) == 0x000138, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_PhysMat) == 0x000148, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_HitActor) == 0x000150, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_HitComponent) == 0x000158, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_HitBoneName) == 0x000160, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_HitItem) == 0x000168, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_ElementIndex) == 0x00016C, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_FaceIndex) == 0x000170, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_TraceStart) == 0x000174, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_TraceEnd) == 0x000180, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_bBlockingHit_1) == 0x00018C, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00018D, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_Time_1) == 0x000190, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_Distance_1) == 0x000194, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_Location_1) == 0x000198, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_ImpactPoint_1) == 0x0001A4, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_Normal_1) == 0x0001B0, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0001BC, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_PhysMat_1) == 0x0001C8, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_HitActor_1) == 0x0001D0, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_HitComponent_1) == 0x0001D8, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_HitBoneName_1) == 0x0001E0, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_HitItem_1) == 0x0001E8, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_ElementIndex_1) == 0x0001EC, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_FaceIndex_1) == 0x0001F0, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_TraceStart_1) == 0x0001F4, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_BreakHitResult_TraceEnd_1) == 0x000200, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_MakeRotFromZ_ReturnValue) == 0x00020C, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_MakeTransform_ReturnValue) == 0x000220, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_SpawnActorInLevel_ReturnValue) == 0x000250, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_SpawnActorInLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, K2Node_Select_Default_1) == 0x000258, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00025C, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000260, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000264, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_CreateElectromagneticVortex, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000268, "Member 'BulletProjectile_MagPulse_C_CreateElectromagneticVortex::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");

// Function BulletProjectile_MagPulse.BulletProjectile_MagPulse_C.GetImpactEffectParameters
// 0x0148 (0x0148 - 0x0000)
struct BulletProjectile_MagPulse_C_GetImpactEffectParameters final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          IsDeathBlow;                                       // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_EffectParams                   EffectParams;                                      // 0x0090(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FNamedInteger>                  IntParameters;                                     // 0x00C0(0x0010)(Edit, BlueprintVisible)
	struct FSTRUCT_EffectParams                   CallFunc_GetImpactEffectParameters_EffectParams;   // 0x00D0(0x0030)(HasGetValueTypeHash)
	struct FSTRUCT_EffectParams                   K2Node_SetFieldsInStruct_StructOut;                // 0x0100(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNamedInteger                          K2Node_MakeStruct_NamedInteger;                    // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BulletProjectile_MagPulse_C_GetImpactEffectParameters) == 0x000008, "Wrong alignment on BulletProjectile_MagPulse_C_GetImpactEffectParameters");
static_assert(sizeof(BulletProjectile_MagPulse_C_GetImpactEffectParameters) == 0x000148, "Wrong size on BulletProjectile_MagPulse_C_GetImpactEffectParameters");
static_assert(offsetof(BulletProjectile_MagPulse_C_GetImpactEffectParameters, Hit) == 0x000000, "Member 'BulletProjectile_MagPulse_C_GetImpactEffectParameters::Hit' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_GetImpactEffectParameters, IsDeathBlow) == 0x000088, "Member 'BulletProjectile_MagPulse_C_GetImpactEffectParameters::IsDeathBlow' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_GetImpactEffectParameters, EffectParams) == 0x000090, "Member 'BulletProjectile_MagPulse_C_GetImpactEffectParameters::EffectParams' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_GetImpactEffectParameters, IntParameters) == 0x0000C0, "Member 'BulletProjectile_MagPulse_C_GetImpactEffectParameters::IntParameters' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_GetImpactEffectParameters, CallFunc_GetImpactEffectParameters_EffectParams) == 0x0000D0, "Member 'BulletProjectile_MagPulse_C_GetImpactEffectParameters::CallFunc_GetImpactEffectParameters_EffectParams' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_GetImpactEffectParameters, K2Node_SetFieldsInStruct_StructOut) == 0x000100, "Member 'BulletProjectile_MagPulse_C_GetImpactEffectParameters::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_GetImpactEffectParameters, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000130, "Member 'BulletProjectile_MagPulse_C_GetImpactEffectParameters::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_GetImpactEffectParameters, K2Node_MakeStruct_NamedInteger) == 0x000134, "Member 'BulletProjectile_MagPulse_C_GetImpactEffectParameters::K2Node_MakeStruct_NamedInteger' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_GetImpactEffectParameters, CallFunc_Array_Add_ReturnValue) == 0x000140, "Member 'BulletProjectile_MagPulse_C_GetImpactEffectParameters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BulletProjectile_MagPulse.BulletProjectile_MagPulse_C.OnSpawnedBulletImpactEffects
// 0x0020 (0x0020 - 0x0000)
struct BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects final
{
public:
	class UNiagaraComponent*                      EffectsComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects) == 0x000008, "Wrong alignment on BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects");
static_assert(sizeof(BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects) == 0x000020, "Wrong size on BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects");
static_assert(offsetof(BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects, EffectsComponent) == 0x000000, "Member 'BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects::EffectsComponent' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects, Temp_byte_Variable) == 0x000008, "Member 'BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects, Temp_float_Variable) == 0x00000C, "Member 'BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects, Temp_float_Variable_1) == 0x000010, "Member 'BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects, Temp_float_Variable_2) == 0x000014, "Member 'BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects, K2Node_Select_Default) == 0x000018, "Member 'BulletProjectile_MagPulse_C_OnSpawnedBulletImpactEffects::K2Node_Select_Default' has a wrong offset!");

}


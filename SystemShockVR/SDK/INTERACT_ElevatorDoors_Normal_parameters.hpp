#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_ElevatorDoors_Normal

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_ElevatorDoors_Normal.INTERACT_ElevatorDoors_Normal_C.SetTileCollisionEnabled
// 0x0006 (0x0006 - 0x0000)
struct INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled) == 0x000001, "Wrong alignment on INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled");
static_assert(sizeof(INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled) == 0x000006, "Wrong size on INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled");
static_assert(offsetof(INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled, Enable) == 0x000000, "Member 'INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled::Enable' has a wrong offset!");
static_assert(offsetof(INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled, Result) == 0x000001, "Member 'INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled, Temp_bool_Variable) == 0x000002, "Member 'INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled, Temp_byte_Variable) == 0x000003, "Member 'INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled, Temp_byte_Variable_1) == 0x000004, "Member 'INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled, K2Node_Select_Default) == 0x000005, "Member 'INTERACT_ElevatorDoors_Normal_C_SetTileCollisionEnabled::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_ElevatorDoors_Normal.INTERACT_ElevatorDoors_Normal_C.UpdateEmissiveStrength
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveStrength;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateEmissiveStrength_Result;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength");
static_assert(sizeof(INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength) == 0x000014, "Wrong size on INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength");
static_assert(offsetof(INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength, Result) == 0x000004, "Member 'INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength, EmissiveStrength) == 0x000008, "Member 'INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength::EmissiveStrength' has a wrong offset!");
static_assert(offsetof(INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength, CallFunc_UpdateEmissiveStrength_Result) == 0x00000C, "Member 'INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength::CallFunc_UpdateEmissiveStrength_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_ElevatorDoors_Normal_C_UpdateEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_ElevatorDoors_Normal.INTERACT_ElevatorDoors_Normal_C.SetElevatorDoorsVisible
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ElevatorDoors_Normal_C_SetElevatorDoorsVisible final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ElevatorDoors_Normal_C_SetElevatorDoorsVisible) == 0x000001, "Wrong alignment on INTERACT_ElevatorDoors_Normal_C_SetElevatorDoorsVisible");
static_assert(sizeof(INTERACT_ElevatorDoors_Normal_C_SetElevatorDoorsVisible) == 0x000001, "Wrong size on INTERACT_ElevatorDoors_Normal_C_SetElevatorDoorsVisible");
static_assert(offsetof(INTERACT_ElevatorDoors_Normal_C_SetElevatorDoorsVisible, VisibilityState) == 0x000000, "Member 'INTERACT_ElevatorDoors_Normal_C_SetElevatorDoorsVisible::VisibilityState' has a wrong offset!");

}


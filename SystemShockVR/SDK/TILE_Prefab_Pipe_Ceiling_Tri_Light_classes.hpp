#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TILE_Prefab_Pipe_Ceiling_Tri_Light

#include "Basic.hpp"

#include "INTERACT_BreakableSharedLightPanel_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TILE_Prefab_Pipe_Ceiling_Tri_Light.TILE_Prefab_Pipe_Ceiling_Tri_Light_C
// 0x0030 (0x0470 - 0x0440)
class ATILE_Prefab_Pipe_Ceiling_Tri_Light_C final : public AINTERACT_BreakableSharedLightPanel_C
{
public:
	class UStaticMeshComponent*                   BrokenGlass3;                                      // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BrokenGlass2;                                      // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BrokenGlass1;                                      // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BrokenGlass;                                       // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LightGlass1;                                       // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TILE_Prefab_Pipe_Ceiling_Tri_Light_C">();
	}
	static class ATILE_Prefab_Pipe_Ceiling_Tri_Light_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATILE_Prefab_Pipe_Ceiling_Tri_Light_C>();
	}
};
static_assert(alignof(ATILE_Prefab_Pipe_Ceiling_Tri_Light_C) == 0x000008, "Wrong alignment on ATILE_Prefab_Pipe_Ceiling_Tri_Light_C");
static_assert(sizeof(ATILE_Prefab_Pipe_Ceiling_Tri_Light_C) == 0x000470, "Wrong size on ATILE_Prefab_Pipe_Ceiling_Tri_Light_C");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Tri_Light_C, BrokenGlass3) == 0x000440, "Member 'ATILE_Prefab_Pipe_Ceiling_Tri_Light_C::BrokenGlass3' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Tri_Light_C, BrokenGlass2) == 0x000448, "Member 'ATILE_Prefab_Pipe_Ceiling_Tri_Light_C::BrokenGlass2' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Tri_Light_C, BrokenGlass1) == 0x000450, "Member 'ATILE_Prefab_Pipe_Ceiling_Tri_Light_C::BrokenGlass1' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Tri_Light_C, BrokenGlass) == 0x000458, "Member 'ATILE_Prefab_Pipe_Ceiling_Tri_Light_C::BrokenGlass' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Tri_Light_C, LightGlass1) == 0x000460, "Member 'ATILE_Prefab_Pipe_Ceiling_Tri_Light_C::LightGlass1' has a wrong offset!");
static_assert(offsetof(ATILE_Prefab_Pipe_Ceiling_Tri_Light_C, SpotLight) == 0x000468, "Member 'ATILE_Prefab_Pipe_Ceiling_Tri_Light_C::SpotLight' has a wrong offset!");

}


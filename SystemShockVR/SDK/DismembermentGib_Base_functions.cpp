#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DismembermentGib_Base

#include "Basic.hpp"

#include "DismembermentGib_Base_classes.hpp"
#include "DismembermentGib_Base_parameters.hpp"


namespace SDK
{

// Function DismembermentGib_Base.DismembermentGib_Base_C.ExecuteUbergraph_DismembermentGib_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADismembermentGib_Base_C::ExecuteUbergraph_DismembermentGib_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentGib_Base_C", "ExecuteUbergraph_DismembermentGib_Base");

	Params::DismembermentGib_Base_C_ExecuteUbergraph_DismembermentGib_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DismembermentGib_Base.DismembermentGib_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ADismembermentGib_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentGib_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DismembermentGib_Base.DismembermentGib_Base_C.InitializeHeroGib
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void ADismembermentGib_Base_C::InitializeHeroGib()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentGib_Base_C", "InitializeHeroGib");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DismembermentGib_Base.DismembermentGib_Base_C.DestroyHeroGib
// (Protected, BlueprintCallable, BlueprintEvent)

void ADismembermentGib_Base_C::DestroyHeroGib()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentGib_Base_C", "DestroyHeroGib");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DismembermentGib_Base.DismembermentGib_Base_C.GetMeshComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMeshComponent*                   MeshComponent                                          (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ADismembermentGib_Base_C::GetMeshComponent(class UMeshComponent** MeshComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentGib_Base_C", "GetMeshComponent");

	Params::DismembermentGib_Base_C_GetMeshComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MeshComponent != nullptr)
		*MeshComponent = Parms.MeshComponent;
}


// Function DismembermentGib_Base.DismembermentGib_Base_C.ShouldSaveActor
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStreamingSaveGameActorParams    Params_0                                               (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ADismembermentGib_Base_C::ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentGib_Base_C", "ShouldSaveActor");

	Params::DismembermentGib_Base_C_ShouldSaveActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);

	return Parms.ReturnValue;
}


// Function DismembermentGib_Base.DismembermentGib_Base_C.ReceivePendingBodyTransforms
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FTransform>               BodyTransforms                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ADismembermentGib_Base_C::ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentGib_Base_C", "ReceivePendingBodyTransforms");

	Params::DismembermentGib_Base_C_ReceivePendingBodyTransforms Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.BodyTransforms = std::move(BodyTransforms);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function DismembermentGib_Base.DismembermentGib_Base_C.ReceivePendingCharacterVelocity
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ADismembermentGib_Base_C::ReceivePendingCharacterVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DismembermentGib_Base_C", "ReceivePendingCharacterVelocity");

	Params::DismembermentGib_Base_C_ReceivePendingCharacterVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


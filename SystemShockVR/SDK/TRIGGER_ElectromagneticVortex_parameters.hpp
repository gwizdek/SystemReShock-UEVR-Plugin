#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TRIGGER_ElectromagneticVortex

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.ExecuteUbergraph_TRIGGER_ElectromagneticVortex
// 0x000C (0x000C - 0x0000)
struct TRIGGER_ElectromagneticVortex_C_ExecuteUbergraph_TRIGGER_ElectromagneticVortex final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_ElectromagneticVortex_C_ExecuteUbergraph_TRIGGER_ElectromagneticVortex) == 0x000004, "Wrong alignment on TRIGGER_ElectromagneticVortex_C_ExecuteUbergraph_TRIGGER_ElectromagneticVortex");
static_assert(sizeof(TRIGGER_ElectromagneticVortex_C_ExecuteUbergraph_TRIGGER_ElectromagneticVortex) == 0x00000C, "Wrong size on TRIGGER_ElectromagneticVortex_C_ExecuteUbergraph_TRIGGER_ElectromagneticVortex");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_ExecuteUbergraph_TRIGGER_ElectromagneticVortex, EntryPoint) == 0x000000, "Member 'TRIGGER_ElectromagneticVortex_C_ExecuteUbergraph_TRIGGER_ElectromagneticVortex::EntryPoint' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_ExecuteUbergraph_TRIGGER_ElectromagneticVortex, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'TRIGGER_ElectromagneticVortex_C_ExecuteUbergraph_TRIGGER_ElectromagneticVortex::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_ExecuteUbergraph_TRIGGER_ElectromagneticVortex, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'TRIGGER_ElectromagneticVortex_C_ExecuteUbergraph_TRIGGER_ElectromagneticVortex::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct TRIGGER_ElectromagneticVortex_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRIGGER_ElectromagneticVortex_C_ReceiveTick) == 0x000004, "Wrong alignment on TRIGGER_ElectromagneticVortex_C_ReceiveTick");
static_assert(sizeof(TRIGGER_ElectromagneticVortex_C_ReceiveTick) == 0x000004, "Wrong size on TRIGGER_ElectromagneticVortex_C_ReceiveTick");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'TRIGGER_ElectromagneticVortex_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.InitializeElectromagneticVortex
// 0x001C (0x001C - 0x0000)
struct TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex final
{
public:
	float                                         Impulse;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LifeTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ElectricDamage;                                    // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MagneticDamage;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MagneticSlowPercent;                               // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex) == 0x000004, "Wrong alignment on TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex");
static_assert(sizeof(TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex) == 0x00001C, "Wrong size on TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex, Impulse) == 0x000000, "Member 'TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex::Impulse' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex, Radius) == 0x000004, "Member 'TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex::Radius' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex, LifeTime) == 0x000008, "Member 'TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex::LifeTime' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex, ElectricDamage) == 0x00000C, "Member 'TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex::ElectricDamage' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex, MagneticDamage) == 0x000010, "Member 'TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex::MagneticDamage' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex, MagneticSlowPercent) == 0x000014, "Member 'TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex::MagneticSlowPercent' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000018, "Member 'TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.UpdateElectromagneticVortex
// 0x00E0 (0x00E0 - 0x0000)
struct TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CandidateActor;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentImpulseStrength;                            // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VortexProgress;                                    // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedVortexTime;                                 // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_Base_C*                         K2Node_DynamicCast_AsPICKUP_Base;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADEBRIS_Base_C*                         K2Node_DynamicCast_AsDEBRIS_Base;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetDebrisMeshComponent_Result;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x00A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex) == 0x000008, "Wrong alignment on TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex");
static_assert(sizeof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex) == 0x0000E0, "Wrong size on TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, DeltaTime) == 0x000000, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::DeltaTime' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, PrimitiveComponent) == 0x000008, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::PrimitiveComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CandidateActor) == 0x000010, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CandidateActor' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CurrentImpulseStrength) == 0x000018, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CurrentImpulseStrength' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, VortexProgress) == 0x00001C, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::VortexProgress' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, ElapsedVortexTime) == 0x000020, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::ElapsedVortexTime' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, Temp_object_Variable) == 0x000028, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_IsActive_ReturnValue) == 0x000040, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, K2Node_DynamicCast_AsPICKUP_Base) == 0x000050, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::K2Node_DynamicCast_AsPICKUP_Base' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000060, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000064, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, K2Node_DynamicCast_AsDEBRIS_Base) == 0x000070, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::K2Node_DynamicCast_AsDEBRIS_Base' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_GetDebrisMeshComponent_Result) == 0x000080, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_GetDebrisMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_Ease_ReturnValue) == 0x000088, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00008C, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, K2Node_MakeArray_Array) == 0x000098, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_SphereOverlapActors_OutActors) == 0x0000A8, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_SphereOverlapActors_ReturnValue) == 0x0000B8, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C8, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_FMin_ReturnValue) == 0x0000CC, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x0000D8, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000DC, "Member 'TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.TryTickElectromagneticDamage
// 0x05A8 (0x05A8 - 0x0000)
struct TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage final
{
public:
	float                                         TotalElapsedTime;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnergyToDrain;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MagneticEffectScale;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageScale;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    MagneticDrainMod;                                  // 0x0010(0x00A0)(Edit, BlueprintVisible)
	struct FAttribModApplyData                    MagneticSlowMod;                                   // 0x00B0(0x00A0)(Edit, BlueprintVisible)
	struct FAttribModApplyData                    MagneticDamageMod;                                 // 0x0150(0x00A0)(Edit, BlueprintVisible)
	struct FAttribModApplyData                    ElectricDamageMod;                                 // 0x01F0(0x00A0)(Edit, BlueprintVisible)
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x0298(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpactDistance;                                    // 0x02A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x02A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EpicenterLocation;                                 // 0x02B4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribManagerComponent*                HitAttribManager;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           HitCharacter;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MagneticDamagePerTick;                             // 0x02E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ElectricDamagePerTick;                             // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ElapsedTickCount;                                  // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DesiredTotalTickCount;                             // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTotalTickCount;                                 // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31E[0x2];                                      // 0x031E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_MakeBox_ReturnValue;                      // 0x0350(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_ClosestPointOnBox_ReturnValue;            // 0x036C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0378(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0384(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D1[0x7];                                      // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribManagerComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_DestructibleBase_C*           K2Node_DynamicCast_AsINTERACT_Destructible_Base;   // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character_1; // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3FB[0x1];                                      // 0x03FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0405(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0406(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_407[0x1];                                      // 0x0407(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_ImpactData_C*                      CallFunc_SpawnObject_ReturnValue;                  // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSubclassOf<class AActor>>             K2Node_MakeArray_Array;                            // 0x0410(0x0010)(ConstParm, ReferenceParm)
	class FName                                   CallFunc_GetAttachParentSocketName_ReturnValue;    // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue_1;       // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue_2;       // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_441[0x3];                                      // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue_1;                   // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x0488(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  CallFunc_ApplyDamageMod_OutDamageInstance;         // 0x04B0(0x0028)()
	class UAttribMod*                             CallFunc_ApplyDamageMod_ReturnValue;               // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  CallFunc_ApplyDamageMod_OutDamageInstance_1;       // 0x04E0(0x0028)()
	class UAttribMod*                             CallFunc_ApplyDamageMod_ReturnValue_1;             // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51D[0x3];                                      // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody; // 0x0530(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue;   // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_541[0x3];                                      // 0x0541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0544(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0554(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorNormalAndLength_OutLength;       // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorNormalAndLength_ReturnValue;     // 0x0564(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetUnobstructedCullableDynamicActorsInSphere_ReturnValue; // 0x0570(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_599[0x3];                                      // 0x0599(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x059C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage) == 0x000008, "Wrong alignment on TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage");
static_assert(sizeof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage) == 0x0005A8, "Wrong size on TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, TotalElapsedTime) == 0x000000, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::TotalElapsedTime' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, EnergyToDrain) == 0x000004, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::EnergyToDrain' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, MagneticEffectScale) == 0x000008, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::MagneticEffectScale' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, DamageScale) == 0x00000C, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::DamageScale' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, MagneticDrainMod) == 0x000010, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::MagneticDrainMod' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, MagneticSlowMod) == 0x0000B0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::MagneticSlowMod' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, MagneticDamageMod) == 0x000150, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::MagneticDamageMod' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, ElectricDamageMod) == 0x0001F0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::ElectricDamageMod' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, ImpactData) == 0x000290, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::ImpactData' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, ImpactNormal) == 0x000298, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::ImpactNormal' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, ImpactDistance) == 0x0002A4, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::ImpactDistance' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, ImpactPoint) == 0x0002A8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::ImpactPoint' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, EpicenterLocation) == 0x0002B4, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::EpicenterLocation' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, HitComponent) == 0x0002C0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::HitComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, HitAttribManager) == 0x0002C8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::HitAttribManager' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, HitCharacter) == 0x0002D0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::HitCharacter' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, HitActor) == 0x0002D8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::HitActor' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, GameInstance) == 0x0002E0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::GameInstance' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, MagneticDamagePerTick) == 0x0002E8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::MagneticDamagePerTick' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, ElectricDamagePerTick) == 0x0002EC, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::ElectricDamagePerTick' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, ElapsedTickCount) == 0x0002F0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::ElapsedTickCount' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, DesiredTotalTickCount) == 0x0002F4, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::DesiredTotalTickCount' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, MaxTotalTickCount) == 0x0002F8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::MaxTotalTickCount' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, Temp_int_Loop_Counter_Variable) == 0x0002FC, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000300, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, Temp_int_Array_Index_Variable) == 0x000304, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Lerp_ReturnValue) == 0x000308, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetAttribValue_ReturnValue) == 0x00030C, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000310, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000314, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000318, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00031C, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00031D, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetActorBounds_Origin) == 0x000320, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetActorBounds_BoxExtent) == 0x00032C, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Add_VectorVector_ReturnValue) == 0x000338, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000344, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_MakeBox_ReturnValue) == 0x000350, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_MakeBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_ClosestPointOnBox_ReturnValue) == 0x00036C, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_ClosestPointOnBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000378, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000384, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetAttachParent_ReturnValue) == 0x000390, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Normal_ReturnValue) == 0x000398, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_DynamicCast_AsPrimitive_Component) == 0x0003A8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_DynamicCast_bSuccess) == 0x0003B0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, Temp_float_Variable) == 0x0003B4, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetAttachParentActor_ReturnValue) == 0x0003B8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0003C0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0003C8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_DynamicCast_bSuccess_1) == 0x0003D0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetComponentByClass_ReturnValue) == 0x0003D8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_DynamicCast_AsINTERACT_Destructible_Base) == 0x0003E0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_DynamicCast_AsINTERACT_Destructible_Base' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_DynamicCast_bSuccess_2) == 0x0003E8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_DynamicCast_AsPAWN_System_Shock_Character_1) == 0x0003F0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_DynamicCast_AsPAWN_System_Shock_Character_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_DynamicCast_bSuccess_3) == 0x0003F8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_BooleanOR_ReturnValue) == 0x0003F9, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, Temp_bool_Variable) == 0x0003FA, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0003FC, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Ease_ReturnValue) == 0x000400, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_IsValid_ReturnValue) == 0x000404, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_IsValid_ReturnValue_1) == 0x000405, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_IsValid_ReturnValue_2) == 0x000406, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_SpawnObject_ReturnValue) == 0x000408, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_MakeArray_Array) == 0x000410, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetAttachParentSocketName_ReturnValue) == 0x000420, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetAttachParentSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetAttachParentActor_ReturnValue_1) == 0x000428, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetAttachParentActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000430, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetAttachParentActor_ReturnValue_2) == 0x000438, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetAttachParentActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000440, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Min_ReturnValue) == 0x000444, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_Select_Default) == 0x000448, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00044C, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Round_ReturnValue) == 0x000450, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000454, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_FTrunc_ReturnValue) == 0x000458, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_ApplyMod_ReturnValue) == 0x000460, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_ApplyMod_ReturnValue_1) == 0x000468, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_ApplyMod_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, Temp_name_Variable) == 0x000470, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000478, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00047C, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000480, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000484, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x000488, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00048C, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x000490, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000494, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000498, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetInstigator_ReturnValue) == 0x0004A0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetInstigator_ReturnValue_1) == 0x0004A8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_ApplyDamageMod_OutDamageInstance) == 0x0004B0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_ApplyDamageMod_OutDamageInstance' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_ApplyDamageMod_ReturnValue) == 0x0004D8, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_ApplyDamageMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_ApplyDamageMod_OutDamageInstance_1) == 0x0004E0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_ApplyDamageMod_OutDamageInstance_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_ApplyDamageMod_ReturnValue_1) == 0x000508, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_ApplyDamageMod_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000510, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000514, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Divide_IntInt_ReturnValue) == 0x000518, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, Temp_bool_Variable_1) == 0x00051C, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_Select_Default_1) == 0x000520, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000528, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Subtract_IntInt_ReturnValue) == 0x00052C, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetClosestPointOnCollision_OutPointOnBody) == 0x000530, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetClosestPointOnCollision_OutPointOnBody' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetClosestPointOnCollision_ReturnValue) == 0x00053C, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetClosestPointOnCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Greater_IntInt_ReturnValue) == 0x000540, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000544, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000550, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000554, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetVectorNormalAndLength_OutLength) == 0x000560, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetVectorNormalAndLength_OutLength' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetVectorNormalAndLength_ReturnValue) == 0x000564, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetVectorNormalAndLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetUnobstructedCullableDynamicActorsInSphere_ReturnValue) == 0x000570, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetUnobstructedCullableDynamicActorsInSphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_GetGameInstance_ReturnValue) == 0x000580, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Array_Get_Item) == 0x000588, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_DynamicCast_AsGI_Single_Player) == 0x000590, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, K2Node_DynamicCast_bSuccess_4) == 0x000598, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Array_Length_ReturnValue) == 0x00059C, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage, CallFunc_Less_IntInt_ReturnValue) == 0x0005A0, "Member 'TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.TryCreateVortexEffects
// 0x0010 (0x0010 - 0x0000)
struct TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects) == 0x000008, "Wrong alignment on TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects");
static_assert(sizeof(TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects) == 0x000010, "Wrong size on TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000008, "Member 'TRIGGER_ElectromagneticVortex_C_TryCreateVortexEffects::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");

// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.ShouldSaveActor
// 0x0038 (0x0038 - 0x0000)
struct TRIGGER_ElectromagneticVortex_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          K2Node_MakeStruct_StreamingSaveGameActorParams;    // 0x0020(0x0018)()
};
static_assert(alignof(TRIGGER_ElectromagneticVortex_C_ShouldSaveActor) == 0x000008, "Wrong alignment on TRIGGER_ElectromagneticVortex_C_ShouldSaveActor");
static_assert(sizeof(TRIGGER_ElectromagneticVortex_C_ShouldSaveActor) == 0x000038, "Wrong size on TRIGGER_ElectromagneticVortex_C_ShouldSaveActor");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'TRIGGER_ElectromagneticVortex_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'TRIGGER_ElectromagneticVortex_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_ShouldSaveActor, K2Node_MakeStruct_StreamingSaveGameActorParams) == 0x000020, "Member 'TRIGGER_ElectromagneticVortex_C_ShouldSaveActor::K2Node_MakeStruct_StreamingSaveGameActorParams' has a wrong offset!");

// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.ReceivePendingBodyTransforms
// 0x0020 (0x0020 - 0x0000)
struct TRIGGER_ElectromagneticVortex_C_ReceivePendingBodyTransforms final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     BodyTransforms;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_ElectromagneticVortex_C_ReceivePendingBodyTransforms) == 0x000008, "Wrong alignment on TRIGGER_ElectromagneticVortex_C_ReceivePendingBodyTransforms");
static_assert(sizeof(TRIGGER_ElectromagneticVortex_C_ReceivePendingBodyTransforms) == 0x000020, "Wrong size on TRIGGER_ElectromagneticVortex_C_ReceivePendingBodyTransforms");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_ReceivePendingBodyTransforms, SkeletalMeshComponent) == 0x000000, "Member 'TRIGGER_ElectromagneticVortex_C_ReceivePendingBodyTransforms::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_ReceivePendingBodyTransforms, BodyTransforms) == 0x000008, "Member 'TRIGGER_ElectromagneticVortex_C_ReceivePendingBodyTransforms::BodyTransforms' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_ReceivePendingBodyTransforms, ReturnValue) == 0x000018, "Member 'TRIGGER_ElectromagneticVortex_C_ReceivePendingBodyTransforms::ReturnValue' has a wrong offset!");

// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.ReceivePendingCharacterVelocity
// 0x0010 (0x0010 - 0x0000)
struct TRIGGER_ElectromagneticVortex_C_ReceivePendingCharacterVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_ElectromagneticVortex_C_ReceivePendingCharacterVelocity) == 0x000004, "Wrong alignment on TRIGGER_ElectromagneticVortex_C_ReceivePendingCharacterVelocity");
static_assert(sizeof(TRIGGER_ElectromagneticVortex_C_ReceivePendingCharacterVelocity) == 0x000010, "Wrong size on TRIGGER_ElectromagneticVortex_C_ReceivePendingCharacterVelocity");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_ReceivePendingCharacterVelocity, Velocity) == 0x000000, "Member 'TRIGGER_ElectromagneticVortex_C_ReceivePendingCharacterVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(TRIGGER_ElectromagneticVortex_C_ReceivePendingCharacterVelocity, ReturnValue) == 0x00000C, "Member 'TRIGGER_ElectromagneticVortex_C_ReceivePendingCharacterVelocity::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_RepulsorLift

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_RepulsorTargets_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "LevelVoxelization_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.ExecuteUbergraph_INTERACT_RepulsorLift
// 0x00D0 (0x00D0 - 0x0000)
struct INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift");
static_assert(sizeof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift) == 0x0000D0, "Wrong size on INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, EntryPoint) == 0x000000, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000008, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000010, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000018, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000020, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000B0, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, K2Node_ComponentBoundEvent_OtherActor) == 0x0000B8, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, K2Node_ComponentBoundEvent_OtherComp) == 0x0000C0, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000C8, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, K2Node_ComponentBoundEvent_bVisibleState) == 0x0000CC, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, CallFunc_IsOverlappingActor_ReturnValue) == 0x0000CD, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift, CallFunc_Not_PreBool_ReturnValue) == 0x0000CE, "Member 'INTERACT_RepulsorLift_C_ExecuteUbergraph_INTERACT_RepulsorLift::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_RepulsorLift_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_RepulsorLift_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_RepulsorLift_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_RepulsorLift_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_RepulsorLift_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_RepulsorLift_C_BndEvt__COMP_CullableNavModifier_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'INTERACT_RepulsorLift_C_BndEvt__RepulsorField_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_RepulsorLift_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_ReceiveTick) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_ReceiveTick");
static_assert(sizeof(INTERACT_RepulsorLift_C_ReceiveTick) == 0x000004, "Wrong size on INTERACT_RepulsorLift_C_ReceiveTick");
static_assert(offsetof(INTERACT_RepulsorLift_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'INTERACT_RepulsorLift_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.UserConstructionScript
// 0x0160 (0x0160 - 0x0000)
struct INTERACT_RepulsorLift_C_UserConstructionScript final
{
public:
	float                                         RepulsorFieldHalfHeight;                           // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0010(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GridSnap_Float_ReturnValue;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x00C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_UserConstructionScript) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_UserConstructionScript");
static_assert(sizeof(INTERACT_RepulsorLift_C_UserConstructionScript) == 0x000160, "Wrong size on INTERACT_RepulsorLift_C_UserConstructionScript");
static_assert(offsetof(INTERACT_RepulsorLift_C_UserConstructionScript, RepulsorFieldHalfHeight) == 0x000000, "Member 'INTERACT_RepulsorLift_C_UserConstructionScript::RepulsorFieldHalfHeight' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000004, "Member 'INTERACT_RepulsorLift_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000010, "Member 'INTERACT_RepulsorLift_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000098, "Member 'INTERACT_RepulsorLift_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_2) == 0x0000A4, "Member 'INTERACT_RepulsorLift_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_3) == 0x0000B0, "Member 'INTERACT_RepulsorLift_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UserConstructionScript, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000BC, "Member 'INTERACT_RepulsorLift_C_UserConstructionScript::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UserConstructionScript, CallFunc_GridSnap_Float_ReturnValue) == 0x0000C0, "Member 'INTERACT_RepulsorLift_C_UserConstructionScript::CallFunc_GridSnap_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0000C4, "Member 'INTERACT_RepulsorLift_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00014C, "Member 'INTERACT_RepulsorLift_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000150, "Member 'INTERACT_RepulsorLift_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000158, "Member 'INTERACT_RepulsorLift_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.InitializeRepulsorLift
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_RepulsorLift_C_InitializeRepulsorLift final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRepulsorLiftEnabledAndPowered_Result;   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 NewSecurityLevel)>       K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSecurityForCurrentLevel_Result;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_InitializeRepulsorLift) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_InitializeRepulsorLift");
static_assert(sizeof(INTERACT_RepulsorLift_C_InitializeRepulsorLift) == 0x000040, "Wrong size on INTERACT_RepulsorLift_C_InitializeRepulsorLift");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeRepulsorLift, GameInstance) == 0x000000, "Member 'INTERACT_RepulsorLift_C_InitializeRepulsorLift::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeRepulsorLift, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'INTERACT_RepulsorLift_C_InitializeRepulsorLift::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeRepulsorLift, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'INTERACT_RepulsorLift_C_InitializeRepulsorLift::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeRepulsorLift, CallFunc_IsRepulsorLiftEnabledAndPowered_Result) == 0x00000A, "Member 'INTERACT_RepulsorLift_C_InitializeRepulsorLift::CallFunc_IsRepulsorLiftEnabledAndPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeRepulsorLift, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'INTERACT_RepulsorLift_C_InitializeRepulsorLift::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeRepulsorLift, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'INTERACT_RepulsorLift_C_InitializeRepulsorLift::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeRepulsorLift, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'INTERACT_RepulsorLift_C_InitializeRepulsorLift::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeRepulsorLift, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_RepulsorLift_C_InitializeRepulsorLift::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeRepulsorLift, CallFunc_GetSecurityForCurrentLevel_Result) == 0x000034, "Member 'INTERACT_RepulsorLift_C_InitializeRepulsorLift::CallFunc_GetSecurityForCurrentLevel_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeRepulsorLift, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'INTERACT_RepulsorLift_C_InitializeRepulsorLift::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_RepulsorLift_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_InitializeAttributes");
static_assert(sizeof(INTERACT_RepulsorLift_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_RepulsorLift_C_InitializeAttributes");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_RepulsorLift_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_RepulsorLift_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.UpdateRepulsorField
// 0x02E8 (0x02E8 - 0x0000)
struct INTERACT_RepulsorLift_C_UpdateRepulsorField final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SelfDistance;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_RepulsorLift_C*               OverlappingRepulsor;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ApplyVelocity;                                     // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ActorVelocity;                                     // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorLocation;                                     // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DampingImpulse;                                    // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CurrentActor;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impulse;                                           // 0x0060(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0080(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue; // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentVelocity_ReturnValue;         // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosiveProjectile_Base_C*            K2Node_DynamicCast_AsExplosive_Projectile_Base;    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADEBRIS_Base_C*                         K2Node_DynamicCast_AsDEBRIS_Base;                  // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetDebrisMeshComponent_Result;            // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              K2Node_DynamicCast_AsDismemberment_Limb_Base;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRepulsorImpulseAtLocation_Impulse;     // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHorizontalDampingImpulse_DampingImpulse; // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHorizontalDampingImpulse_DampingImpulse_1; // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRepulsorImpulseAtLocation_Impulse_1;   // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACORPSE_SkeletalBase_C*                 K2Node_DynamicCast_AsCORPSE_Skeletal_Base;         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0214(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X_3;                          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue_1;                    // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0258(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_RepulsorLift_C*               K2Node_DynamicCast_AsINTERACT_Repulsor_Lift;       // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         K2Node_DynamicCast_AsPICKUP_Base;                  // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetPhysicsPrimitive_Primitive;            // 0x02A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x02C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_UpdateRepulsorField) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_UpdateRepulsorField");
static_assert(sizeof(INTERACT_RepulsorLift_C_UpdateRepulsorField) == 0x0002E8, "Wrong size on INTERACT_RepulsorLift_C_UpdateRepulsorField");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, SkeletalMeshComponent) == 0x000000, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, SelfDistance) == 0x000008, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::SelfDistance' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, OverlappingRepulsor) == 0x000010, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::OverlappingRepulsor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, ApplyVelocity) == 0x000018, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::ApplyVelocity' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, ActorVelocity) == 0x00001C, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::ActorVelocity' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, ActorLocation) == 0x000028, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::ActorLocation' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, PrimitiveComponent) == 0x000038, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::PrimitiveComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, Character) == 0x000040, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, DampingImpulse) == 0x000048, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::DampingImpulse' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CurrentActor) == 0x000058, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CurrentActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, Impulse) == 0x000060, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::Impulse' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_TryInteract_InteractResults) == 0x000080, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0000A0, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue) == 0x0000A4, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetPhysicsAngularVelocityInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_VSizeSquared_ReturnValue) == 0x0000B0, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000B4, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetComponentVelocity_ReturnValue) == 0x0000B8, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetComponentVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000C4, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_AsExplosive_Projectile_Base) == 0x0000D0, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_AsExplosive_Projectile_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_bSuccess) == 0x0000D8, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x0000E0, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_AsDEBRIS_Base) == 0x0000E8, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_AsDEBRIS_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetDebrisMeshComponent_Result) == 0x0000F8, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetDebrisMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_AsDismemberment_Limb_Base) == 0x000100, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_AsDismemberment_Limb_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetRepulsorImpulseAtLocation_Impulse) == 0x00010C, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetRepulsorImpulseAtLocation_Impulse' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetVelocity_ReturnValue) == 0x000118, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000124, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetHorizontalDampingImpulse_DampingImpulse) == 0x000130, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetHorizontalDampingImpulse_DampingImpulse' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetHorizontalDampingImpulse_DampingImpulse_1) == 0x00013C, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetHorizontalDampingImpulse_DampingImpulse_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000148, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Add_VectorVector_ReturnValue) == 0x000154, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000160, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000164, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000168, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000174, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetRepulsorImpulseAtLocation_Impulse_1) == 0x000180, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetRepulsorImpulseAtLocation_Impulse_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_AsCORPSE_Skeletal_Base) == 0x000190, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_AsCORPSE_Skeletal_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_bSuccess_3) == 0x000198, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_AsPAWN_Enemy) == 0x0001A0, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_bSuccess_4) == 0x0001A8, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001AC, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0001B8, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_BreakVector_X) == 0x0001C4, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_BreakVector_Y) == 0x0001C8, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_BreakVector_Z) == 0x0001CC, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_BreakVector_X_1) == 0x0001D0, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_BreakVector_Y_1) == 0x0001D4, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_BreakVector_Z_1) == 0x0001D8, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_MakeVector2D_ReturnValue) == 0x0001DC, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001E4, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001EC, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0001F4, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_VSize2D_ReturnValue) == 0x000200, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_BreakVector_X_2) == 0x000204, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_BreakVector_Y_2) == 0x000208, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_BreakVector_Z_2) == 0x00020C, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Less_FloatFloat_ReturnValue) == 0x000210, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_MakeVector2D_ReturnValue_2) == 0x000214, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x00021C, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000228, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_BreakVector_X_3) == 0x00022C, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_BreakVector_Y_3) == 0x000230, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_BreakVector_Z_3) == 0x000234, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_MakeVector2D_ReturnValue_3) == 0x000238, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000240, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, Temp_int_Loop_Counter_Variable_1) == 0x000248, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_VSize2D_ReturnValue_1) == 0x00024C, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_VSize2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Add_IntInt_ReturnValue_1) == 0x000250, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000258, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Array_Get_Item) == 0x000268, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_AsINTERACT_Repulsor_Lift) == 0x000270, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_AsINTERACT_Repulsor_Lift' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_bSuccess_5) == 0x000278, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Array_Length_ReturnValue) == 0x00027C, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Less_IntInt_ReturnValue) == 0x000280, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000284, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000288, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Add_FloatFloat_ReturnValue) == 0x00028C, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000290, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_AsPICKUP_Base) == 0x000298, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_AsPICKUP_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_bSuccess_6) == 0x0002A0, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_GetPhysicsPrimitive_Primitive) == 0x0002A8, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_GetPhysicsPrimitive_Primitive' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0002B0, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, K2Node_DynamicCast_bSuccess_7) == 0x0002B8, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Map_Keys_Keys) == 0x0002C0, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Array_Length_ReturnValue_1) == 0x0002D0, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Array_Get_Item_1) == 0x0002D8, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorField, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002E0, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorField::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.BeginOverlapActor
// 0x00D8 (0x00D8 - 0x0000)
struct INTERACT_RepulsorLift_C_BeginOverlapActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryDisableLowFiBehavior_Result;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldDisableBehaviorCullingWhilePatrolling_Result; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosiveProjectile_Base_C*            K2Node_DynamicCast_AsExplosive_Projectile_Base;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              K2Node_DynamicCast_AsDismemberment_Limb_Base;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_2;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAffectCharacter_Result;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADEBRIS_Base_C*                         K2Node_DynamicCast_AsDEBRIS_Base;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetDebrisMeshComponent_Result;            // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_3;       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACORPSE_SkeletalBase_C*                 K2Node_DynamicCast_AsCORPSE_Skeletal_Base;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_4;       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_5;       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         K2Node_DynamicCast_AsPICKUP_Base;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetPhysicsPrimitive_Primitive;            // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_BeginOverlapActor) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_BeginOverlapActor");
static_assert(sizeof(INTERACT_RepulsorLift_C_BeginOverlapActor) == 0x0000D8, "Wrong size on INTERACT_RepulsorLift_C_BeginOverlapActor");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, Actor) == 0x000000, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::Actor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, Character) == 0x000008, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_TryDisableLowFiBehavior_Result) == 0x000010, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_TryDisableLowFiBehavior_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000018, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000024, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_ShouldDisableBehaviorCullingWhilePatrolling_Result) == 0x000028, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_ShouldDisableBehaviorCullingWhilePatrolling_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x00002C, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_AsExplosive_Projectile_Base) == 0x000030, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_AsExplosive_Projectile_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000040, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_AsDismemberment_Limb_Base) == 0x000048, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_AsDismemberment_Limb_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_GetPlayTimeInSeconds_ReturnValue_2) == 0x000054, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_GetPlayTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_CanAffectCharacter_Result) == 0x000058, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_CanAffectCharacter_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_AsDEBRIS_Base) == 0x000060, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_AsDEBRIS_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_GetDebrisMeshComponent_Result) == 0x000070, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_GetDebrisMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_GetPlayTimeInSeconds_ReturnValue_3) == 0x000078, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_GetPlayTimeInSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_CreateDelegate_OutputDelegate) == 0x00007C, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_AsCORPSE_Skeletal_Base) == 0x000090, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_AsCORPSE_Skeletal_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_bSuccess_4) == 0x000098, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_GetPlayTimeInSeconds_ReturnValue_4) == 0x00009C, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_GetPlayTimeInSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_GetPlayTimeInSeconds_ReturnValue_5) == 0x0000A0, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_GetPlayTimeInSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_Map_Length_ReturnValue) == 0x0000A4, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A8, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_AsPICKUP_Base) == 0x0000B0, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_AsPICKUP_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_bSuccess_5) == 0x0000B8, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0000C0, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, K2Node_DynamicCast_bSuccess_6) == 0x0000C8, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_BeginOverlapActor, CallFunc_GetPhysicsPrimitive_Primitive) == 0x0000D0, "Member 'INTERACT_RepulsorLift_C_BeginOverlapActor::CallFunc_GetPhysicsPrimitive_Primitive' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.EndOverlapActor
// 0x00C0 (0x00C0 - 0x0000)
struct INTERACT_RepulsorLift_C_EndOverlapActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryEnableLowFiBehavior_Result;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldDisableBehaviorCullingWhilePatrolling_Result; // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AExplosiveProjectile_Base_C*            K2Node_DynamicCast_AsExplosive_Projectile_Base;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADismembermentLimb_Base_C*              K2Node_DynamicCast_AsDismemberment_Limb_Base;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue_1;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ADEBRIS_Base_C*                         K2Node_DynamicCast_AsDEBRIS_Base;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetDebrisMeshComponent_Result;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_2;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACORPSE_SkeletalBase_C*                 K2Node_DynamicCast_AsCORPSE_Skeletal_Base;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue_3;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue_4;                 // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x1];                                       // 0x0083(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         K2Node_DynamicCast_AsPICKUP_Base;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetPhysicsPrimitive_Primitive;            // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue_5;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_EndOverlapActor) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_EndOverlapActor");
static_assert(sizeof(INTERACT_RepulsorLift_C_EndOverlapActor) == 0x0000C0, "Wrong size on INTERACT_RepulsorLift_C_EndOverlapActor");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, Actor) == 0x000000, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::Actor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, Character) == 0x000008, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_TryEnableLowFiBehavior_Result) == 0x000010, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_TryEnableLowFiBehavior_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000018, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_ShouldDisableBehaviorCullingWhilePatrolling_Result) == 0x000021, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_ShouldDisableBehaviorCullingWhilePatrolling_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_AsExplosive_Projectile_Base) == 0x000028, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_AsExplosive_Projectile_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000038, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_Map_Remove_ReturnValue) == 0x000040, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_AsDismemberment_Limb_Base) == 0x000048, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_AsDismemberment_Limb_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_Map_Remove_ReturnValue_1) == 0x000051, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_Map_Remove_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_AsDEBRIS_Base) == 0x000058, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_AsDEBRIS_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_bSuccess_3) == 0x000060, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_GetDebrisMeshComponent_Result) == 0x000068, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_GetDebrisMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_Map_Remove_ReturnValue_2) == 0x000070, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_Map_Remove_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_AsCORPSE_Skeletal_Base) == 0x000078, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_AsCORPSE_Skeletal_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_bSuccess_4) == 0x000080, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_Map_Remove_ReturnValue_3) == 0x000081, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_Map_Remove_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_Map_Remove_ReturnValue_4) == 0x000082, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_Map_Remove_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_Map_Length_ReturnValue) == 0x000084, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000088, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_AsPICKUP_Base) == 0x000090, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_AsPICKUP_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_bSuccess_5) == 0x000098, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_GetPhysicsPrimitive_Primitive) == 0x0000A0, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_GetPhysicsPrimitive_Primitive' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, CallFunc_Map_Remove_ReturnValue_5) == 0x0000A8, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::CallFunc_Map_Remove_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0000B0, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EndOverlapActor, K2Node_DynamicCast_bSuccess_6) == 0x0000B8, "Member 'INTERACT_RepulsorLift_C_EndOverlapActor::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.UpdateInitialOverlaps
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_RepulsorLift_C_UpdateInitialOverlaps final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_UpdateInitialOverlaps");
static_assert(sizeof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps) == 0x000050, "Wrong size on INTERACT_RepulsorLift_C_UpdateInitialOverlaps");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps, Temp_int_Array_Index_Variable) == 0x000000, "Member 'INTERACT_RepulsorLift_C_UpdateInitialOverlaps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps, Temp_object_Variable) == 0x000008, "Member 'INTERACT_RepulsorLift_C_UpdateInitialOverlaps::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'INTERACT_RepulsorLift_C_UpdateInitialOverlaps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps, CallFunc_ComponentOverlapActors_OutActors) == 0x000020, "Member 'INTERACT_RepulsorLift_C_UpdateInitialOverlaps::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps, CallFunc_ComponentOverlapActors_ReturnValue) == 0x000030, "Member 'INTERACT_RepulsorLift_C_UpdateInitialOverlaps::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'INTERACT_RepulsorLift_C_UpdateInitialOverlaps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps, CallFunc_Array_Get_Item) == 0x000038, "Member 'INTERACT_RepulsorLift_C_UpdateInitialOverlaps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'INTERACT_RepulsorLift_C_UpdateInitialOverlaps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'INTERACT_RepulsorLift_C_UpdateInitialOverlaps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps, CallFunc_Map_Length_ReturnValue) == 0x000048, "Member 'INTERACT_RepulsorLift_C_UpdateInitialOverlaps::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateInitialOverlaps, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'INTERACT_RepulsorLift_C_UpdateInitialOverlaps::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.OnRepulsorStateChanged
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_RepulsorLift_C_OnRepulsorStateChanged final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_RepulsorLift_C*                 K2Node_DynamicCast_AsAnim_BP_Repulsor_Lift;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_RepulsorLift_C*                 K2Node_DynamicCast_AsAnim_BP_Repulsor_Lift_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_OnRepulsorStateChanged) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_OnRepulsorStateChanged");
static_assert(sizeof(INTERACT_RepulsorLift_C_OnRepulsorStateChanged) == 0x000038, "Wrong size on INTERACT_RepulsorLift_C_OnRepulsorStateChanged");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnRepulsorStateChanged, State) == 0x000000, "Member 'INTERACT_RepulsorLift_C_OnRepulsorStateChanged::State' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnRepulsorStateChanged, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_RepulsorLift_C_OnRepulsorStateChanged::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnRepulsorStateChanged, K2Node_DynamicCast_AsAnim_BP_Repulsor_Lift) == 0x000010, "Member 'INTERACT_RepulsorLift_C_OnRepulsorStateChanged::K2Node_DynamicCast_AsAnim_BP_Repulsor_Lift' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnRepulsorStateChanged, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_RepulsorLift_C_OnRepulsorStateChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnRepulsorStateChanged, CallFunc_Montage_Play_ReturnValue) == 0x00001C, "Member 'INTERACT_RepulsorLift_C_OnRepulsorStateChanged::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnRepulsorStateChanged, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000020, "Member 'INTERACT_RepulsorLift_C_OnRepulsorStateChanged::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnRepulsorStateChanged, K2Node_DynamicCast_AsAnim_BP_Repulsor_Lift_1) == 0x000028, "Member 'INTERACT_RepulsorLift_C_OnRepulsorStateChanged::K2Node_DynamicCast_AsAnim_BP_Repulsor_Lift_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnRepulsorStateChanged, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'INTERACT_RepulsorLift_C_OnRepulsorStateChanged::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnRepulsorStateChanged, CallFunc_Montage_Play_ReturnValue_1) == 0x000034, "Member 'INTERACT_RepulsorLift_C_OnRepulsorStateChanged::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.SetRepulsorEnabled
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_RepulsorLift_C_SetRepulsorEnabled final
{
public:
	bool                                          IsEnabled_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRepulsorLiftEnabledAndPowered_Result;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_SetRepulsorEnabled) == 0x000001, "Wrong alignment on INTERACT_RepulsorLift_C_SetRepulsorEnabled");
static_assert(sizeof(INTERACT_RepulsorLift_C_SetRepulsorEnabled) == 0x000002, "Wrong size on INTERACT_RepulsorLift_C_SetRepulsorEnabled");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorEnabled, IsEnabled_0) == 0x000000, "Member 'INTERACT_RepulsorLift_C_SetRepulsorEnabled::IsEnabled_0' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorEnabled, CallFunc_IsRepulsorLiftEnabledAndPowered_Result) == 0x000001, "Member 'INTERACT_RepulsorLift_C_SetRepulsorEnabled::CallFunc_IsRepulsorLiftEnabledAndPowered_Result' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.CanAffectCharacter
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_RepulsorLift_C_CanAffectCharacter final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_CanAffectCharacter) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_CanAffectCharacter");
static_assert(sizeof(INTERACT_RepulsorLift_C_CanAffectCharacter) == 0x000020, "Wrong size on INTERACT_RepulsorLift_C_CanAffectCharacter");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanAffectCharacter, Character) == 0x000000, "Member 'INTERACT_RepulsorLift_C_CanAffectCharacter::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanAffectCharacter, Result) == 0x000008, "Member 'INTERACT_RepulsorLift_C_CanAffectCharacter::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanAffectCharacter, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000010, "Member 'INTERACT_RepulsorLift_C_CanAffectCharacter::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanAffectCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_RepulsorLift_C_CanAffectCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanAffectCharacter, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'INTERACT_RepulsorLift_C_CanAffectCharacter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.ShouldApplyMods
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_RepulsorLift_C_ShouldApplyMods final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasActiveModWithCategory_ReturnValue;     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_ShouldApplyMods) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_ShouldApplyMods");
static_assert(sizeof(INTERACT_RepulsorLift_C_ShouldApplyMods) == 0x000010, "Wrong size on INTERACT_RepulsorLift_C_ShouldApplyMods");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldApplyMods, Character) == 0x000000, "Member 'INTERACT_RepulsorLift_C_ShouldApplyMods::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldApplyMods, Result) == 0x000008, "Member 'INTERACT_RepulsorLift_C_ShouldApplyMods::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldApplyMods, CallFunc_HasActiveModWithCategory_ReturnValue) == 0x000009, "Member 'INTERACT_RepulsorLift_C_ShouldApplyMods::CallFunc_HasActiveModWithCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldApplyMods, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'INTERACT_RepulsorLift_C_ShouldApplyMods::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.ShouldRemoveMods
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_RepulsorLift_C_ShouldRemoveMods final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_ShouldRemoveMods) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_ShouldRemoveMods");
static_assert(sizeof(INTERACT_RepulsorLift_C_ShouldRemoveMods) == 0x000028, "Wrong size on INTERACT_RepulsorLift_C_ShouldRemoveMods");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldRemoveMods, Character) == 0x000000, "Member 'INTERACT_RepulsorLift_C_ShouldRemoveMods::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldRemoveMods, Result) == 0x000008, "Member 'INTERACT_RepulsorLift_C_ShouldRemoveMods::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldRemoveMods, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000010, "Member 'INTERACT_RepulsorLift_C_ShouldRemoveMods::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldRemoveMods, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'INTERACT_RepulsorLift_C_ShouldRemoveMods::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldRemoveMods, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'INTERACT_RepulsorLift_C_ShouldRemoveMods::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.TryRemoveMods
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_RepulsorLift_C_TryRemoveMods final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_ExpireModsWithCategories_ReturnValue;     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldRemoveMods_Result;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_TryRemoveMods) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_TryRemoveMods");
static_assert(sizeof(INTERACT_RepulsorLift_C_TryRemoveMods) == 0x000020, "Wrong size on INTERACT_RepulsorLift_C_TryRemoveMods");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryRemoveMods, Character) == 0x000000, "Member 'INTERACT_RepulsorLift_C_TryRemoveMods::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryRemoveMods, K2Node_MakeArray_Array) == 0x000008, "Member 'INTERACT_RepulsorLift_C_TryRemoveMods::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryRemoveMods, CallFunc_ExpireModsWithCategories_ReturnValue) == 0x000018, "Member 'INTERACT_RepulsorLift_C_TryRemoveMods::CallFunc_ExpireModsWithCategories_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryRemoveMods, CallFunc_ShouldRemoveMods_Result) == 0x00001C, "Member 'INTERACT_RepulsorLift_C_TryRemoveMods::CallFunc_ShouldRemoveMods_Result' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.TryApplyMods
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_RepulsorLift_C_TryApplyMods final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldApplyMods_Result;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_TryApplyMods) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_TryApplyMods");
static_assert(sizeof(INTERACT_RepulsorLift_C_TryApplyMods) == 0x000020, "Wrong size on INTERACT_RepulsorLift_C_TryApplyMods");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryApplyMods, Character) == 0x000000, "Member 'INTERACT_RepulsorLift_C_TryApplyMods::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryApplyMods, CallFunc_ApplyMod_ReturnValue) == 0x000008, "Member 'INTERACT_RepulsorLift_C_TryApplyMods::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryApplyMods, CallFunc_ShouldApplyMods_Result) == 0x000010, "Member 'INTERACT_RepulsorLift_C_TryApplyMods::CallFunc_ShouldApplyMods_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryApplyMods, CallFunc_ApplyMod_ReturnValue_1) == 0x000018, "Member 'INTERACT_RepulsorLift_C_TryApplyMods::CallFunc_ApplyMod_ReturnValue_1' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.OnCharacterEndOverlapRepulsor
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value;                           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor");
static_assert(sizeof(INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor) == 0x000040, "Wrong size on INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor, OverlappedActor) == 0x000000, "Member 'INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor::OverlappedActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor, OtherActor) == 0x000008, "Member 'INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor, Character) == 0x000010, "Member 'INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000028, "Member 'INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000031, "Member 'INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor, CallFunc_Map_Find_Value) == 0x000034, "Member 'INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'INTERACT_RepulsorLift_C_OnCharacterEndOverlapRepulsor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.InitializeMaterials
// 0x002C (0x002C - 0x0000)
struct INTERACT_RepulsorLift_C_InitializeMaterials final
{
public:
	float                                         TimeOffset;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_InitializeMaterials) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_InitializeMaterials");
static_assert(sizeof(INTERACT_RepulsorLift_C_InitializeMaterials) == 0x00002C, "Wrong size on INTERACT_RepulsorLift_C_InitializeMaterials");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeMaterials, TimeOffset) == 0x000000, "Member 'INTERACT_RepulsorLift_C_InitializeMaterials::TimeOffset' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeMaterials, Temp_bool_Variable) == 0x000004, "Member 'INTERACT_RepulsorLift_C_InitializeMaterials::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeMaterials, Temp_struct_Variable) == 0x000008, "Member 'INTERACT_RepulsorLift_C_InitializeMaterials::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeMaterials, K2Node_Select_Default) == 0x000018, "Member 'INTERACT_RepulsorLift_C_InitializeMaterials::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_InitializeMaterials, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'INTERACT_RepulsorLift_C_InitializeMaterials::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.UpdateMaterials
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_RepulsorLift_C_UpdateMaterials final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_UpdateMaterials) == 0x000001, "Wrong alignment on INTERACT_RepulsorLift_C_UpdateMaterials");
static_assert(sizeof(INTERACT_RepulsorLift_C_UpdateMaterials) == 0x000003, "Wrong size on INTERACT_RepulsorLift_C_UpdateMaterials");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateMaterials, State) == 0x000000, "Member 'INTERACT_RepulsorLift_C_UpdateMaterials::State' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateMaterials, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'INTERACT_RepulsorLift_C_UpdateMaterials::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateMaterials, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'INTERACT_RepulsorLift_C_UpdateMaterials::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.ReverseRepulsorField
// 0x0005 (0x0005 - 0x0000)
struct INTERACT_RepulsorLift_C_ReverseRepulsorField final
{
public:
	ENUM_RepulsorTargets                          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_RepulsorTargets                          Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_RepulsorTargets                          Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_RepulsorTargets                          K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRepulsorTarget_NewParam;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_ReverseRepulsorField) == 0x000001, "Wrong alignment on INTERACT_RepulsorLift_C_ReverseRepulsorField");
static_assert(sizeof(INTERACT_RepulsorLift_C_ReverseRepulsorField) == 0x000005, "Wrong size on INTERACT_RepulsorLift_C_ReverseRepulsorField");
static_assert(offsetof(INTERACT_RepulsorLift_C_ReverseRepulsorField, Temp_byte_Variable) == 0x000000, "Member 'INTERACT_RepulsorLift_C_ReverseRepulsorField::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ReverseRepulsorField, Temp_byte_Variable_1) == 0x000001, "Member 'INTERACT_RepulsorLift_C_ReverseRepulsorField::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ReverseRepulsorField, Temp_byte_Variable_2) == 0x000002, "Member 'INTERACT_RepulsorLift_C_ReverseRepulsorField::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ReverseRepulsorField, K2Node_Select_Default) == 0x000003, "Member 'INTERACT_RepulsorLift_C_ReverseRepulsorField::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ReverseRepulsorField, CallFunc_SetRepulsorTarget_NewParam) == 0x000004, "Member 'INTERACT_RepulsorLift_C_ReverseRepulsorField::CallFunc_SetRepulsorTarget_NewParam' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.SetRepulsorTarget
// 0x0080 (0x0080 - 0x0000)
struct INTERACT_RepulsorLift_C_SetRepulsorTarget final
{
public:
	ENUM_RepulsorTargets                          NewTarget;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewParam;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRepulsorLiftPowered_Result;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRepulsorLiftEnabledAndPowered_Result;   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRepulsorLiftEnabledAndPowered_Result_1; // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x0038(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_RepulsorTargets                          Temp_byte_Variable;                                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               K2Node_Select_Default;                             // 0x0058(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_SetRepulsorTarget) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_SetRepulsorTarget");
static_assert(sizeof(INTERACT_RepulsorLift_C_SetRepulsorTarget) == 0x000080, "Wrong size on INTERACT_RepulsorLift_C_SetRepulsorTarget");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, NewTarget) == 0x000000, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::NewTarget' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, NewParam) == 0x000001, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::NewParam' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, Temp_int_Array_Index_Variable) == 0x000004, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, CallFunc_IsRepulsorLiftPowered_Result) == 0x000010, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::CallFunc_IsRepulsorLiftPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, CallFunc_IsRepulsorLiftEnabledAndPowered_Result) == 0x000011, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::CallFunc_IsRepulsorLiftEnabledAndPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, CallFunc_IsRepulsorLiftEnabledAndPowered_Result_1) == 0x000012, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::CallFunc_IsRepulsorLiftEnabledAndPowered_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000034, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, CallFunc_Map_Keys_Keys) == 0x000038, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, CallFunc_Array_Get_Item) == 0x000048, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, Temp_byte_Variable) == 0x000055, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000056, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetRepulsorTarget, K2Node_Select_Default) == 0x000058, "Member 'INTERACT_RepulsorLift_C_SetRepulsorTarget::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.UpdateParticleSystems
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_RepulsorLift_C_UpdateParticleSystems final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldFlipParticleDirection_Result;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldFlipParticleDirection_Result_1;     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_UpdateParticleSystems) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_UpdateParticleSystems");
static_assert(sizeof(INTERACT_RepulsorLift_C_UpdateParticleSystems) == 0x000014, "Wrong size on INTERACT_RepulsorLift_C_UpdateParticleSystems");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateParticleSystems, State) == 0x000000, "Member 'INTERACT_RepulsorLift_C_UpdateParticleSystems::State' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateParticleSystems, CallFunc_ShouldFlipParticleDirection_Result) == 0x000001, "Member 'INTERACT_RepulsorLift_C_UpdateParticleSystems::CallFunc_ShouldFlipParticleDirection_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateParticleSystems, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'INTERACT_RepulsorLift_C_UpdateParticleSystems::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateParticleSystems, CallFunc_ShouldFlipParticleDirection_Result_1) == 0x000008, "Member 'INTERACT_RepulsorLift_C_UpdateParticleSystems::CallFunc_ShouldFlipParticleDirection_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateParticleSystems, CallFunc_SelectFloat_ReturnValue_1) == 0x00000C, "Member 'INTERACT_RepulsorLift_C_UpdateParticleSystems::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateParticleSystems, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'INTERACT_RepulsorLift_C_UpdateParticleSystems::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.UpdateRepulsorLight
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_RepulsorLift_C_UpdateRepulsorLight final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_RepulsorTargets                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_UpdateRepulsorLight) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_UpdateRepulsorLight");
static_assert(sizeof(INTERACT_RepulsorLift_C_UpdateRepulsorLight) == 0x000014, "Wrong size on INTERACT_RepulsorLift_C_UpdateRepulsorLight");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorLight, State) == 0x000000, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorLight::State' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorLight, Temp_byte_Variable) == 0x000001, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorLight::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorLight, CallFunc_IsVisible_ReturnValue) == 0x000002, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorLight::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorLight, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorLight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateRepulsorLight, K2Node_Select_Default) == 0x000004, "Member 'INTERACT_RepulsorLift_C_UpdateRepulsorLight::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.RepulseSkeletalMeshComponent
// 0x0170 (0x0170 - 0x0000)
struct INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpulseWeight;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceFromRepulsor;                              // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impulse;                                           // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoneVelocity;                                      // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoneLocation;                                      // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0034(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BoneIndex;                                         // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody; // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue;   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnySimulatingPhysics_ReturnValue;       // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue;                // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PerlinNoise1D_ReturnValue_1;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetHorizontalDampingImpulse_DampingImpulse; // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRepulsorImpulseAtLocation_Impulse;     // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBoneName_ReturnValue;                  // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumBones_ReturnValue;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x3];                                      // 0x0169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent");
static_assert(sizeof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent) == 0x000170, "Wrong size on INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, SkeletalMeshComponent) == 0x000000, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, ImpulseWeight) == 0x000008, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::ImpulseWeight' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, DistanceFromRepulsor) == 0x00000C, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::DistanceFromRepulsor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, Impulse) == 0x000010, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::Impulse' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, BoneVelocity) == 0x00001C, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::BoneVelocity' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, BoneLocation) == 0x000028, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::BoneLocation' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, BoneName) == 0x000034, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::BoneName' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, BoneIndex) == 0x00003C, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::BoneIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, Temp_bool_Variable) == 0x000040, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, Temp_float_Variable) == 0x000044, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000048, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00004C, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000054, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000058, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, K2Node_Select_Default) == 0x00005C, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetClosestPointOnCollision_OutPointOnBody) == 0x000060, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetClosestPointOnCollision_OutPointOnBody' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetClosestPointOnCollision_ReturnValue) == 0x00006C, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetClosestPointOnCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000070, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000074, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_IsAnySimulatingPhysics_ReturnValue) == 0x000084, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_IsAnySimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_BreakVector_X) == 0x000088, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_BreakVector_Y) == 0x00008C, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_BreakVector_Z) == 0x000090, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000098, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_PerlinNoise1D_ReturnValue) == 0x00009C, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_PerlinNoise1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_PerlinNoise1D_ReturnValue_1) == 0x0000A0, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_PerlinNoise1D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0000A4, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetComponentBounds_Origin) == 0x0000A8, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetComponentBounds_BoxExtent) == 0x0000B4, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetComponentBounds_SphereRadius) == 0x0000C0, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_MakeVector_ReturnValue) == 0x0000C8, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D4, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Divide_VectorInt_ReturnValue) == 0x0000E0, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000EC, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetSocketLocation_ReturnValue) == 0x0000F8, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetHorizontalDampingImpulse_DampingImpulse) == 0x000104, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetHorizontalDampingImpulse_DampingImpulse' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetOwner_ReturnValue) == 0x000110, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetRepulsorImpulseAtLocation_Impulse) == 0x000118, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetRepulsorImpulseAtLocation_Impulse' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000124, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000130, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00013C, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000148, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetBoneName_ReturnValue) == 0x000154, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetBoneName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_GetNumBones_ReturnValue) == 0x00015C, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_GetNumBones_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, Temp_int_Variable) == 0x000160, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Subtract_IntInt_ReturnValue) == 0x000164, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000168, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent, CallFunc_Add_IntInt_ReturnValue) == 0x00016C, "Member 'INTERACT_RepulsorLift_C_RepulseSkeletalMeshComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.ShouldFlipParticleDirection
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_RepulsorLift_C_ShouldFlipParticleDirection final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_ShouldFlipParticleDirection");
static_assert(sizeof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection) == 0x000058, "Wrong size on INTERACT_RepulsorLift_C_ShouldFlipParticleDirection");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, Result) == 0x000000, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_GetActorUpVector_ReturnValue) == 0x000004, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_BreakVector_X) == 0x000010, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_BreakVector_Y) == 0x000014, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_BreakVector_Z) == 0x000018, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_BreakVector_X_1) == 0x000028, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_BreakVector_Y_1) == 0x00002C, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000034, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_BreakVector_X_2) == 0x000040, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_BreakVector_Y_2) == 0x000044, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_BreakVector_Z_2) == 0x000048, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00004C, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_ShouldFlipParticleDirection, CallFunc_Less_FloatFloat_ReturnValue) == 0x000054, "Member 'INTERACT_RepulsorLift_C_ShouldFlipParticleDirection::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.GetRepulsorImpulseAtLocation
// 0x00F0 (0x00F0 - 0x0000)
struct INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation final
{
public:
	class AActor*                                 CurrentActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorLocation;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorVelocity;                                     // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impulse;                                           // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpulseRampProgress;                               // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ActorVelocityZ;                                    // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightDeltaToArrow;                                // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_RepulsorTargets                          Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakePulsatingValue_ReturnValue;           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        K2Node_Select_Default;                             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation");
static_assert(sizeof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation) == 0x0000F0, "Wrong size on INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CurrentActor) == 0x000000, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CurrentActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, ActorLocation) == 0x000008, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::ActorLocation' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, ActorVelocity) == 0x000014, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::ActorVelocity' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, Impulse) == 0x000020, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::Impulse' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, ImpulseRampProgress) == 0x00002C, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::ImpulseRampProgress' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, ActorVelocityZ) == 0x000030, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::ActorVelocityZ' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, HeightDeltaToArrow) == 0x000034, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::HeightDeltaToArrow' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, Temp_byte_Variable) == 0x000038, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_BreakVector_X) == 0x00003C, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_BreakVector_Y) == 0x000040, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_BreakVector_Z) == 0x000044, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_BreakVector_X_1) == 0x000048, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_BreakVector_Y_1) == 0x00004C, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_BreakVector_Z_1) == 0x000050, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000054, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Map_Find_Value) == 0x000058, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Map_Find_ReturnValue) == 0x00005C, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000060, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_SignOfFloat_ReturnValue) == 0x000068, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_FMin_ReturnValue) == 0x00006C, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_SignOfFloat_ReturnValue_1) == 0x000070, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000074, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_MakePulsatingValue_ReturnValue) == 0x000078, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_MakePulsatingValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00007C, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Abs_ReturnValue) == 0x000080, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000084, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Lerp_ReturnValue) == 0x000088, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Abs_ReturnValue_1) == 0x00008C, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000090, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000094, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000098, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00009C, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_MakeVector_ReturnValue) == 0x0000A0, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, K2Node_Select_Default) == 0x0000B0, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000B8, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_BreakVector_X_2) == 0x0000C4, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_BreakVector_Y_2) == 0x0000C8, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_BreakVector_Z_2) == 0x0000CC, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0000D0, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x0000D4, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x0000D8, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000DC, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0000E0, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation, CallFunc_MakeVector_ReturnValue_1) == 0x0000E4, "Member 'INTERACT_RepulsorLift_C_GetRepulsorImpulseAtLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.GetHorizontalDampingImpulse
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse final
{
public:
	struct FVector                                ActorVelocity;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DampingImpulse;                                    // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse");
static_assert(sizeof(INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse) == 0x000048, "Wrong size on INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse, ActorVelocity) == 0x000000, "Member 'INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse::ActorVelocity' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse, DampingImpulse) == 0x00000C, "Member 'INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse::DampingImpulse' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse, CallFunc_BreakVector_X) == 0x000018, "Member 'INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse, CallFunc_BreakVector_Y) == 0x00001C, "Member 'INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse, CallFunc_BreakVector_Z) == 0x000020, "Member 'INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000034, "Member 'INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00003C, "Member 'INTERACT_RepulsorLift_C_GetHorizontalDampingImpulse::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.SetShouldBeVisible
// 0x0006 (0x0006 - 0x0000)
struct INTERACT_RepulsorLift_C_SetShouldBeVisible final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRepulsorLiftEnabledAndPowered_Result;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryDisableLowFiBehavior_Result;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryEnableLowFiBehavior_Result;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_SetShouldBeVisible) == 0x000001, "Wrong alignment on INTERACT_RepulsorLift_C_SetShouldBeVisible");
static_assert(sizeof(INTERACT_RepulsorLift_C_SetShouldBeVisible) == 0x000006, "Wrong size on INTERACT_RepulsorLift_C_SetShouldBeVisible");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetShouldBeVisible, State) == 0x000000, "Member 'INTERACT_RepulsorLift_C_SetShouldBeVisible::State' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetShouldBeVisible, CallFunc_IsRepulsorLiftEnabledAndPowered_Result) == 0x000001, "Member 'INTERACT_RepulsorLift_C_SetShouldBeVisible::CallFunc_IsRepulsorLiftEnabledAndPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetShouldBeVisible, CallFunc_TryDisableLowFiBehavior_Result) == 0x000002, "Member 'INTERACT_RepulsorLift_C_SetShouldBeVisible::CallFunc_TryDisableLowFiBehavior_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetShouldBeVisible, CallFunc_TryEnableLowFiBehavior_Result) == 0x000003, "Member 'INTERACT_RepulsorLift_C_SetShouldBeVisible::CallFunc_TryEnableLowFiBehavior_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetShouldBeVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'INTERACT_RepulsorLift_C_SetShouldBeVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetShouldBeVisible, CallFunc_Not_PreBool_ReturnValue_1) == 0x000005, "Member 'INTERACT_RepulsorLift_C_SetShouldBeVisible::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.TryEnableLowFiBehavior
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_RepulsorLift_C_TryEnableLowFiBehavior final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanEnableLowFiBehavior_Result;            // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_TryEnableLowFiBehavior) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_TryEnableLowFiBehavior");
static_assert(sizeof(INTERACT_RepulsorLift_C_TryEnableLowFiBehavior) == 0x000030, "Wrong size on INTERACT_RepulsorLift_C_TryEnableLowFiBehavior");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryEnableLowFiBehavior, Result) == 0x000000, "Member 'INTERACT_RepulsorLift_C_TryEnableLowFiBehavior::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryEnableLowFiBehavior, Temp_int_Array_Index_Variable) == 0x000004, "Member 'INTERACT_RepulsorLift_C_TryEnableLowFiBehavior::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryEnableLowFiBehavior, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'INTERACT_RepulsorLift_C_TryEnableLowFiBehavior::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryEnableLowFiBehavior, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'INTERACT_RepulsorLift_C_TryEnableLowFiBehavior::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryEnableLowFiBehavior, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'INTERACT_RepulsorLift_C_TryEnableLowFiBehavior::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryEnableLowFiBehavior, CallFunc_Array_Get_Item) == 0x000020, "Member 'INTERACT_RepulsorLift_C_TryEnableLowFiBehavior::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryEnableLowFiBehavior, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'INTERACT_RepulsorLift_C_TryEnableLowFiBehavior::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryEnableLowFiBehavior, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'INTERACT_RepulsorLift_C_TryEnableLowFiBehavior::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryEnableLowFiBehavior, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'INTERACT_RepulsorLift_C_TryEnableLowFiBehavior::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryEnableLowFiBehavior, CallFunc_CanEnableLowFiBehavior_Result) == 0x00002E, "Member 'INTERACT_RepulsorLift_C_TryEnableLowFiBehavior::CallFunc_CanEnableLowFiBehavior_Result' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.TryDisableLowFiBehavior
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_RepulsorLift_C_TryDisableLowFiBehavior final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_TryDisableLowFiBehavior) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_TryDisableLowFiBehavior");
static_assert(sizeof(INTERACT_RepulsorLift_C_TryDisableLowFiBehavior) == 0x000040, "Wrong size on INTERACT_RepulsorLift_C_TryDisableLowFiBehavior");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryDisableLowFiBehavior, Result) == 0x000000, "Member 'INTERACT_RepulsorLift_C_TryDisableLowFiBehavior::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryDisableLowFiBehavior, Temp_int_Array_Index_Variable) == 0x000004, "Member 'INTERACT_RepulsorLift_C_TryDisableLowFiBehavior::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryDisableLowFiBehavior, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'INTERACT_RepulsorLift_C_TryDisableLowFiBehavior::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryDisableLowFiBehavior, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'INTERACT_RepulsorLift_C_TryDisableLowFiBehavior::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryDisableLowFiBehavior, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'INTERACT_RepulsorLift_C_TryDisableLowFiBehavior::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryDisableLowFiBehavior, CallFunc_Map_Length_ReturnValue) == 0x000020, "Member 'INTERACT_RepulsorLift_C_TryDisableLowFiBehavior::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryDisableLowFiBehavior, CallFunc_Array_Get_Item) == 0x000028, "Member 'INTERACT_RepulsorLift_C_TryDisableLowFiBehavior::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryDisableLowFiBehavior, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'INTERACT_RepulsorLift_C_TryDisableLowFiBehavior::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryDisableLowFiBehavior, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'INTERACT_RepulsorLift_C_TryDisableLowFiBehavior::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryDisableLowFiBehavior, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'INTERACT_RepulsorLift_C_TryDisableLowFiBehavior::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.PrepareActorForNewFidelity
// 0x00D0 (0x00D0 - 0x0000)
struct INTERACT_RepulsorLift_C_PrepareActorForNewFidelity final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LowFi;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosiveProjectile_Base_C*            K2Node_DynamicCast_AsExplosive_Projectile_Base;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADismembermentLimb_Base_C*              K2Node_DynamicCast_AsDismemberment_Limb_Base;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Zero_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADEBRIS_Base_C*                         K2Node_DynamicCast_AsDEBRIS_Base;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_GetDebrisMeshComponent_Result;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Zero_ReturnValue_1;                // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Zero_ReturnValue_2;                // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Zero_ReturnValue_3;                // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         K2Node_DynamicCast_AsPICKUP_Base;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACORPSE_SkeletalBase_C*                 K2Node_DynamicCast_AsCORPSE_Skeletal_Base;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_PrepareActorForNewFidelity");
static_assert(sizeof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity) == 0x0000D0, "Wrong size on INTERACT_RepulsorLift_C_PrepareActorForNewFidelity");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, Actor) == 0x000000, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::Actor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, LowFi) == 0x000008, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::LowFi' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, PrimitiveComponent) == 0x000010, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::PrimitiveComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_AsExplosive_Projectile_Base) == 0x000018, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_AsExplosive_Projectile_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_AsDismemberment_Limb_Base) == 0x000028, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_AsDismemberment_Limb_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000038, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, CallFunc_Vector_Zero_ReturnValue) == 0x000040, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::CallFunc_Vector_Zero_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_AsDEBRIS_Base) == 0x000050, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_AsDEBRIS_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, CallFunc_GetDebrisMeshComponent_Result) == 0x000060, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::CallFunc_GetDebrisMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, CallFunc_Vector_Zero_ReturnValue_1) == 0x000068, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::CallFunc_Vector_Zero_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, CallFunc_Vector_Zero_ReturnValue_2) == 0x000074, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::CallFunc_Vector_Zero_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, CallFunc_Vector_Zero_ReturnValue_3) == 0x000080, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::CallFunc_Vector_Zero_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, CallFunc_Not_PreBool_ReturnValue) == 0x00008C, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000090, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_bSuccess_3) == 0x000098, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_AsPICKUP_Base) == 0x0000A0, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_AsPICKUP_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_AsCORPSE_Skeletal_Base) == 0x0000B0, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_AsCORPSE_Skeletal_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_bSuccess_5) == 0x0000B8, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0000C0, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_PrepareActorForNewFidelity, K2Node_DynamicCast_bSuccess_6) == 0x0000C8, "Member 'INTERACT_RepulsorLift_C_PrepareActorForNewFidelity::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.UpdateHumPitchMultiplier
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_RepulsorLift_C_UpdateHumPitchMultiplier final
{
public:
	ENUM_RepulsorTargets                          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_UpdateHumPitchMultiplier) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_UpdateHumPitchMultiplier");
static_assert(sizeof(INTERACT_RepulsorLift_C_UpdateHumPitchMultiplier) == 0x000008, "Wrong size on INTERACT_RepulsorLift_C_UpdateHumPitchMultiplier");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateHumPitchMultiplier, Temp_byte_Variable) == 0x000000, "Member 'INTERACT_RepulsorLift_C_UpdateHumPitchMultiplier::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateHumPitchMultiplier, K2Node_Select_Default) == 0x000004, "Member 'INTERACT_RepulsorLift_C_UpdateHumPitchMultiplier::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.UpdateNavAgentsCanChange
// 0x0007 (0x0007 - 0x0000)
struct INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange) == 0x000001, "Wrong alignment on INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange");
static_assert(sizeof(INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange) == 0x000007, "Wrong size on INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange, State) == 0x000000, "Member 'INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange::State' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange, CallFunc_Not_PreBool_ReturnValue_2) == 0x000004, "Member 'INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange, CallFunc_BooleanAND_ReturnValue_1) == 0x000006, "Member 'INTERACT_RepulsorLift_C_UpdateNavAgentsCanChange::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.UpdateNavModifierDirection
// 0x0006 (0x0006 - 0x0000)
struct INTERACT_RepulsorLift_C_UpdateNavModifierDirection final
{
public:
	EVoxelNavModifierState                        Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EVoxelNavModifierState                        Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsCollisionEnabled_ReturnValue;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVoxelNavModifierState                        K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_UpdateNavModifierDirection) == 0x000001, "Wrong alignment on INTERACT_RepulsorLift_C_UpdateNavModifierDirection");
static_assert(sizeof(INTERACT_RepulsorLift_C_UpdateNavModifierDirection) == 0x000006, "Wrong size on INTERACT_RepulsorLift_C_UpdateNavModifierDirection");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavModifierDirection, Temp_byte_Variable) == 0x000000, "Member 'INTERACT_RepulsorLift_C_UpdateNavModifierDirection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavModifierDirection, Temp_byte_Variable_1) == 0x000001, "Member 'INTERACT_RepulsorLift_C_UpdateNavModifierDirection::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavModifierDirection, Temp_bool_Variable) == 0x000002, "Member 'INTERACT_RepulsorLift_C_UpdateNavModifierDirection::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavModifierDirection, CallFunc_K2_IsCollisionEnabled_ReturnValue) == 0x000003, "Member 'INTERACT_RepulsorLift_C_UpdateNavModifierDirection::CallFunc_K2_IsCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavModifierDirection, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'INTERACT_RepulsorLift_C_UpdateNavModifierDirection::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateNavModifierDirection, K2Node_Select_Default) == 0x000005, "Member 'INTERACT_RepulsorLift_C_UpdateNavModifierDirection::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.IsRepulsorLiftEnabledAndPowered
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_RepulsorLift_C_IsRepulsorLiftEnabledAndPowered final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRepulsorLiftPowered_Result;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_IsRepulsorLiftEnabledAndPowered) == 0x000001, "Wrong alignment on INTERACT_RepulsorLift_C_IsRepulsorLiftEnabledAndPowered");
static_assert(sizeof(INTERACT_RepulsorLift_C_IsRepulsorLiftEnabledAndPowered) == 0x000002, "Wrong size on INTERACT_RepulsorLift_C_IsRepulsorLiftEnabledAndPowered");
static_assert(offsetof(INTERACT_RepulsorLift_C_IsRepulsorLiftEnabledAndPowered, Result) == 0x000000, "Member 'INTERACT_RepulsorLift_C_IsRepulsorLiftEnabledAndPowered::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_IsRepulsorLiftEnabledAndPowered, CallFunc_IsRepulsorLiftPowered_Result) == 0x000001, "Member 'INTERACT_RepulsorLift_C_IsRepulsorLiftEnabledAndPowered::CallFunc_IsRepulsorLiftPowered_Result' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.IsRepulsorLiftPowered
// 0x000C (0x000C - 0x0000)
struct INTERACT_RepulsorLift_C_IsRepulsorLiftPowered final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_IsRepulsorLiftPowered) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_IsRepulsorLiftPowered");
static_assert(sizeof(INTERACT_RepulsorLift_C_IsRepulsorLiftPowered) == 0x00000C, "Wrong size on INTERACT_RepulsorLift_C_IsRepulsorLiftPowered");
static_assert(offsetof(INTERACT_RepulsorLift_C_IsRepulsorLiftPowered, Result) == 0x000000, "Member 'INTERACT_RepulsorLift_C_IsRepulsorLiftPowered::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_IsRepulsorLiftPowered, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_RepulsorLift_C_IsRepulsorLiftPowered::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_IsRepulsorLiftPowered, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_RepulsorLift_C_IsRepulsorLiftPowered::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.IsLockedBySecurity
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_RepulsorLift_C_IsLockedBySecurity final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSecurityForCurrentLevel_Result;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_IsLockedBySecurity) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_IsLockedBySecurity");
static_assert(sizeof(INTERACT_RepulsorLift_C_IsLockedBySecurity) == 0x000028, "Wrong size on INTERACT_RepulsorLift_C_IsLockedBySecurity");
static_assert(offsetof(INTERACT_RepulsorLift_C_IsLockedBySecurity, Result) == 0x000000, "Member 'INTERACT_RepulsorLift_C_IsLockedBySecurity::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_IsLockedBySecurity, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_RepulsorLift_C_IsLockedBySecurity::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_IsLockedBySecurity, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_RepulsorLift_C_IsLockedBySecurity::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_IsLockedBySecurity, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_RepulsorLift_C_IsLockedBySecurity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_IsLockedBySecurity, CallFunc_GetSecurityForCurrentLevel_Result) == 0x00001C, "Member 'INTERACT_RepulsorLift_C_IsLockedBySecurity::CallFunc_GetSecurityForCurrentLevel_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_IsLockedBySecurity, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'INTERACT_RepulsorLift_C_IsLockedBySecurity::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.EVENT_OnLevelSecurityChanged
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged final
{
public:
	int32                                         NewSecurityLevel;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRepulsorLiftEnabledAndPowered_Result;   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 NewSecurityLevel)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged");
static_assert(sizeof(INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged) == 0x000030, "Wrong size on INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged, NewSecurityLevel) == 0x000000, "Member 'INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged::NewSecurityLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged, CallFunc_IsRepulsorLiftEnabledAndPowered_Result) == 0x000004, "Member 'INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged::CallFunc_IsRepulsorLiftEnabledAndPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'INTERACT_RepulsorLift_C_EVENT_OnLevelSecurityChanged::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.EVENT_OnDisableAttribChanged
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveScale;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged) == 0x000018, "Wrong size on INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged, EmissiveScale) == 0x000008, "Member 'INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged::EmissiveScale' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000011, "Member 'INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000012, "Member 'INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000014, "Member 'INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000015, "Member 'INTERACT_RepulsorLift_C_EVENT_OnDisableAttribChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.EVENT_UpdateLightColor
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_RepulsorLift_C_EVENT_UpdateLightColor final
{
public:
	struct FLinearColor                           NewColor;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TargetColor;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_RepulsorTargets                          Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LinearColor_IsNearEqual_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLightColor_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_CInterpTo_ReturnValue;                    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_EVENT_UpdateLightColor) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_EVENT_UpdateLightColor");
static_assert(sizeof(INTERACT_RepulsorLift_C_EVENT_UpdateLightColor) == 0x000058, "Wrong size on INTERACT_RepulsorLift_C_EVENT_UpdateLightColor");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_UpdateLightColor, NewColor) == 0x000000, "Member 'INTERACT_RepulsorLift_C_EVENT_UpdateLightColor::NewColor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_UpdateLightColor, TargetColor) == 0x000010, "Member 'INTERACT_RepulsorLift_C_EVENT_UpdateLightColor::TargetColor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_UpdateLightColor, Temp_byte_Variable) == 0x000020, "Member 'INTERACT_RepulsorLift_C_EVENT_UpdateLightColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_UpdateLightColor, CallFunc_LinearColor_IsNearEqual_ReturnValue) == 0x000021, "Member 'INTERACT_RepulsorLift_C_EVENT_UpdateLightColor::CallFunc_LinearColor_IsNearEqual_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_UpdateLightColor, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000024, "Member 'INTERACT_RepulsorLift_C_EVENT_UpdateLightColor::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_UpdateLightColor, CallFunc_GetLightColor_ReturnValue) == 0x000028, "Member 'INTERACT_RepulsorLift_C_EVENT_UpdateLightColor::CallFunc_GetLightColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_UpdateLightColor, CallFunc_CInterpTo_ReturnValue) == 0x000038, "Member 'INTERACT_RepulsorLift_C_EVENT_UpdateLightColor::CallFunc_CInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_EVENT_UpdateLightColor, K2Node_Select_Default) == 0x000048, "Member 'INTERACT_RepulsorLift_C_EVENT_UpdateLightColor::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.UpdateMeshEmissiveStrength
// 0x000C (0x000C - 0x0000)
struct INTERACT_RepulsorLift_C_UpdateMeshEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_UpdateMeshEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_UpdateMeshEmissiveStrength");
static_assert(sizeof(INTERACT_RepulsorLift_C_UpdateMeshEmissiveStrength) == 0x00000C, "Wrong size on INTERACT_RepulsorLift_C_UpdateMeshEmissiveStrength");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateMeshEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_RepulsorLift_C_UpdateMeshEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateMeshEmissiveStrength, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000004, "Member 'INTERACT_RepulsorLift_C_UpdateMeshEmissiveStrength::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_UpdateMeshEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_RepulsorLift_C_UpdateMeshEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.StartLightColorUpdate
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_RepulsorLift_C_StartLightColorUpdate final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RepulsorLift_C_StartLightColorUpdate) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_StartLightColorUpdate");
static_assert(sizeof(INTERACT_RepulsorLift_C_StartLightColorUpdate) == 0x000018, "Wrong size on INTERACT_RepulsorLift_C_StartLightColorUpdate");
static_assert(offsetof(INTERACT_RepulsorLift_C_StartLightColorUpdate, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_RepulsorLift_C_StartLightColorUpdate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_StartLightColorUpdate, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'INTERACT_RepulsorLift_C_StartLightColorUpdate::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.CanEnableLowFiBehavior
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_RepulsorLift_C_CanEnableLowFiBehavior final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldDisableBehaviorCullingWhilePatrolling_Result; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_CanEnableLowFiBehavior");
static_assert(sizeof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior) == 0x000048, "Wrong size on INTERACT_RepulsorLift_C_CanEnableLowFiBehavior");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, Result) == 0x000000, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, Temp_int_Array_Index_Variable) == 0x000004, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, CallFunc_Array_Get_Item) == 0x000028, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000038, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, CallFunc_ShouldDisableBehaviorCullingWhilePatrolling_Result) == 0x000041, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::CallFunc_ShouldDisableBehaviorCullingWhilePatrolling_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, CallFunc_IsValid_ReturnValue) == 0x000042, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanEnableLowFiBehavior, CallFunc_BooleanAND_ReturnValue) == 0x000043, "Member 'INTERACT_RepulsorLift_C_CanEnableLowFiBehavior::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.TryInteract
// 0x0110 (0x0110 - 0x0000)
struct INTERACT_RepulsorLift_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0038(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetInteractLocked_Result;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInteractLocked_LockMessage;            // 0x0060(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0078(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00A0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_SetRepulsorTarget_NewParam;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x00C8(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_4;        // 0x00E8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_SetRepulsorTarget_NewParam_1;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_TryInteract");
static_assert(sizeof(INTERACT_RepulsorLift_C_TryInteract) == 0x000110, "Wrong size on INTERACT_RepulsorLift_C_TryInteract");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_RepulsorLift_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_RepulsorLift_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_RepulsorLift_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_RepulsorLift_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000038, "Member 'INTERACT_RepulsorLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, CallFunc_GetInteractLocked_Result) == 0x000058, "Member 'INTERACT_RepulsorLift_C_TryInteract::CallFunc_GetInteractLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, CallFunc_GetInteractLocked_LockMessage) == 0x000060, "Member 'INTERACT_RepulsorLift_C_TryInteract::CallFunc_GetInteractLocked_LockMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000078, "Member 'INTERACT_RepulsorLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000098, "Member 'INTERACT_RepulsorLift_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000A0, "Member 'INTERACT_RepulsorLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, CallFunc_SetRepulsorTarget_NewParam) == 0x0000C0, "Member 'INTERACT_RepulsorLift_C_TryInteract::CallFunc_SetRepulsorTarget_NewParam' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x0000C8, "Member 'INTERACT_RepulsorLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_4) == 0x0000E8, "Member 'INTERACT_RepulsorLift_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_4' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, CallFunc_SetRepulsorTarget_NewParam_1) == 0x000108, "Member 'INTERACT_RepulsorLift_C_TryInteract::CallFunc_SetRepulsorTarget_NewParam_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_TryInteract, K2Node_SwitchEnum_CmpSuccess) == 0x000109, "Member 'INTERACT_RepulsorLift_C_TryInteract::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.GetInteractLocked
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_RepulsorLift_C_GetInteractLocked final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LockMessage;                                       // 0x0010(0x0018)(Parm, OutParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSecurityLockText_Result;               // 0x0030(0x0018)()
};
static_assert(alignof(INTERACT_RepulsorLift_C_GetInteractLocked) == 0x000008, "Wrong alignment on INTERACT_RepulsorLift_C_GetInteractLocked");
static_assert(sizeof(INTERACT_RepulsorLift_C_GetInteractLocked) == 0x000048, "Wrong size on INTERACT_RepulsorLift_C_GetInteractLocked");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetInteractLocked, SourceActor) == 0x000000, "Member 'INTERACT_RepulsorLift_C_GetInteractLocked::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetInteractLocked, Result) == 0x000008, "Member 'INTERACT_RepulsorLift_C_GetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetInteractLocked, LockMessage) == 0x000010, "Member 'INTERACT_RepulsorLift_C_GetInteractLocked::LockMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetInteractLocked, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'INTERACT_RepulsorLift_C_GetInteractLocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetInteractLocked, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'INTERACT_RepulsorLift_C_GetInteractLocked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_GetInteractLocked, CallFunc_GetSecurityLockText_Result) == 0x000030, "Member 'INTERACT_RepulsorLift_C_GetInteractLocked::CallFunc_GetSecurityLockText_Result' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.IsInteractActivated
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_RepulsorLift_C_IsInteractActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_IsInteractActivated) == 0x000001, "Wrong alignment on INTERACT_RepulsorLift_C_IsInteractActivated");
static_assert(sizeof(INTERACT_RepulsorLift_C_IsInteractActivated) == 0x000001, "Wrong size on INTERACT_RepulsorLift_C_IsInteractActivated");
static_assert(offsetof(INTERACT_RepulsorLift_C_IsInteractActivated, Result) == 0x000000, "Member 'INTERACT_RepulsorLift_C_IsInteractActivated::Result' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.SetInteractLocked
// 0x0005 (0x0005 - 0x0000)
struct INTERACT_RepulsorLift_C_SetInteractLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_SetInteractLocked) == 0x000001, "Wrong alignment on INTERACT_RepulsorLift_C_SetInteractLocked");
static_assert(sizeof(INTERACT_RepulsorLift_C_SetInteractLocked) == 0x000005, "Wrong size on INTERACT_RepulsorLift_C_SetInteractLocked");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetInteractLocked, Locked) == 0x000000, "Member 'INTERACT_RepulsorLift_C_SetInteractLocked::Locked' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetInteractLocked, Result) == 0x000001, "Member 'INTERACT_RepulsorLift_C_SetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetInteractLocked, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'INTERACT_RepulsorLift_C_SetInteractLocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetInteractLocked, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'INTERACT_RepulsorLift_C_SetInteractLocked::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetInteractLocked, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'INTERACT_RepulsorLift_C_SetInteractLocked::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.SetInteractPowered
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_RepulsorLift_C_SetInteractPowered final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsRepulsorLiftEnabledAndPowered_Result;   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_SetInteractPowered) == 0x000004, "Wrong alignment on INTERACT_RepulsorLift_C_SetInteractPowered");
static_assert(sizeof(INTERACT_RepulsorLift_C_SetInteractPowered) == 0x000010, "Wrong size on INTERACT_RepulsorLift_C_SetInteractPowered");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetInteractPowered, State) == 0x000000, "Member 'INTERACT_RepulsorLift_C_SetInteractPowered::State' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetInteractPowered, Result) == 0x000001, "Member 'INTERACT_RepulsorLift_C_SetInteractPowered::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetInteractPowered, CallFunc_IsRepulsorLiftEnabledAndPowered_Result) == 0x000002, "Member 'INTERACT_RepulsorLift_C_SetInteractPowered::CallFunc_IsRepulsorLiftEnabledAndPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetInteractPowered, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_RepulsorLift_C_SetInteractPowered::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetInteractPowered, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_RepulsorLift_C_SetInteractPowered::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RepulsorLift_C_SetInteractPowered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000C, "Member 'INTERACT_RepulsorLift_C_SetInteractPowered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function INTERACT_RepulsorLift.INTERACT_RepulsorLift_C.CanModifyInteractPower
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_RepulsorLift_C_CanModifyInteractPower final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RepulsorLift_C_CanModifyInteractPower) == 0x000001, "Wrong alignment on INTERACT_RepulsorLift_C_CanModifyInteractPower");
static_assert(sizeof(INTERACT_RepulsorLift_C_CanModifyInteractPower) == 0x000001, "Wrong size on INTERACT_RepulsorLift_C_CanModifyInteractPower");
static_assert(offsetof(INTERACT_RepulsorLift_C_CanModifyInteractPower, Result) == 0x000000, "Member 'INTERACT_RepulsorLift_C_CanModifyInteractPower::Result' has a wrong offset!");

}


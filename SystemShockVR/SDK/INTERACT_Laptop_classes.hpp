#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Laptop

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "INTERACT_Base_classes.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "ENUM_HackerGender_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_Laptop.INTERACT_Laptop_C
// 0x00B0 (0x03B8 - 0x0308)
class AINTERACT_Laptop_C final : public AINTERACT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_Laptop_C;                  // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       Screen;                                            // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TargetBox;                                         // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxOverlapB;                                       // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BoxOverlapA;                                       // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CaptureSequenceActor;                              // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     HackerBodyRig;                                     // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     HackerArmsRig;                                     // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASkeletalMeshActor*                     LaptopRig;                                         // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Apartment_BathroomDoor_C*           BathroomDoorActor;                                 // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Apartment_Kitchen_C*                KitchenActor;                                      // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AINTERACT_Base_C*>               InteractedWithApartmentActors;                     // 0x0368(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FTimerHandle                           BruteforcePasswordTimerHandle;                     // 0x0378(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           EmissiveTimerHandle;                               // 0x0380(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ScreenMaterial;                                    // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBROADCAST_Base_C*                      CurrentScreenContent;                              // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFinishedBruteforcingPassword;                    // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugHackingSequence;                              // 0x0399(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39A[0x6];                                      // 0x039A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnApartmentSequenceFinished;                       // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsInteracting;                                     // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CutsceneTransitionProgress;                        // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void TransitionToCutsceneFOV();
	void UpdateSceneMeshEmissives();
	void EVENT_OnLaptopSequenceFinished();
	void OnInteractedWithApartmentActor(class AINTERACT_Base_C* InteractActor);
	void FinishBruteforcingPassword();
	void NextScreen();
	void EVENT_LaptopMoveExpired(class UMOVECONTROL_Base_C* MoveControl);
	void GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent);
	void StartMountingLaptop();
	void TryInitializeLaptopScreen();
	void TryInitializeHackerMeshes();
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void StartApartmentSequence();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_INTERACT_Laptop(int32 EntryPoint);
	void OnApartmentSequenceFinished__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_Laptop_C">();
	}
	static class AINTERACT_Laptop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_Laptop_C>();
	}
};
static_assert(alignof(AINTERACT_Laptop_C) == 0x000008, "Wrong alignment on AINTERACT_Laptop_C");
static_assert(sizeof(AINTERACT_Laptop_C) == 0x0003B8, "Wrong size on AINTERACT_Laptop_C");
static_assert(offsetof(AINTERACT_Laptop_C, UberGraphFrame_INTERACT_Laptop_C) == 0x000308, "Member 'AINTERACT_Laptop_C::UberGraphFrame_INTERACT_Laptop_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, Screen) == 0x000310, "Member 'AINTERACT_Laptop_C::Screen' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, TargetBox) == 0x000318, "Member 'AINTERACT_Laptop_C::TargetBox' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, BoxOverlapB) == 0x000320, "Member 'AINTERACT_Laptop_C::BoxOverlapB' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, BoxOverlapA) == 0x000328, "Member 'AINTERACT_Laptop_C::BoxOverlapA' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, HackerPawn) == 0x000330, "Member 'AINTERACT_Laptop_C::HackerPawn' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, CaptureSequenceActor) == 0x000338, "Member 'AINTERACT_Laptop_C::CaptureSequenceActor' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, HackerBodyRig) == 0x000340, "Member 'AINTERACT_Laptop_C::HackerBodyRig' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, HackerArmsRig) == 0x000348, "Member 'AINTERACT_Laptop_C::HackerArmsRig' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, LaptopRig) == 0x000350, "Member 'AINTERACT_Laptop_C::LaptopRig' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, BathroomDoorActor) == 0x000358, "Member 'AINTERACT_Laptop_C::BathroomDoorActor' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, KitchenActor) == 0x000360, "Member 'AINTERACT_Laptop_C::KitchenActor' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, InteractedWithApartmentActors) == 0x000368, "Member 'AINTERACT_Laptop_C::InteractedWithApartmentActors' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, BruteforcePasswordTimerHandle) == 0x000378, "Member 'AINTERACT_Laptop_C::BruteforcePasswordTimerHandle' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, EmissiveTimerHandle) == 0x000380, "Member 'AINTERACT_Laptop_C::EmissiveTimerHandle' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, ScreenMaterial) == 0x000388, "Member 'AINTERACT_Laptop_C::ScreenMaterial' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, CurrentScreenContent) == 0x000390, "Member 'AINTERACT_Laptop_C::CurrentScreenContent' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, IsFinishedBruteforcingPassword) == 0x000398, "Member 'AINTERACT_Laptop_C::IsFinishedBruteforcingPassword' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, DebugHackingSequence) == 0x000399, "Member 'AINTERACT_Laptop_C::DebugHackingSequence' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, OnApartmentSequenceFinished) == 0x0003A0, "Member 'AINTERACT_Laptop_C::OnApartmentSequenceFinished' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, IsInteracting) == 0x0003B0, "Member 'AINTERACT_Laptop_C::IsInteracting' has a wrong offset!");
static_assert(offsetof(AINTERACT_Laptop_C, CutsceneTransitionProgress) == 0x0003B4, "Member 'AINTERACT_Laptop_C::CutsceneTransitionProgress' has a wrong offset!");

}


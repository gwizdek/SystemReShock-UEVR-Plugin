#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DEC_HasAvailableComboOfType

#include "Basic.hpp"

#include "ENUM_SkillType_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DEC_HasAvailableComboOfType.DEC_HasAvailableComboOfType_C
// 0x0020 (0x00C0 - 0x00A0)
class UDEC_HasAvailableComboOfType_C final : public UBTDecorator_BlueprintBase
{
public:
	TArray<ENUM_SkillType>                        ComboTypes;                                        // 0x00A0(0x0010)(Edit, BlueprintVisible)
	bool                                          FailOnHave;                                        // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          EnemyPawn;                                         // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DEC_HasAvailableComboOfType_C">();
	}
	static class UDEC_HasAvailableComboOfType_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDEC_HasAvailableComboOfType_C>();
	}
};
static_assert(alignof(UDEC_HasAvailableComboOfType_C) == 0x000008, "Wrong alignment on UDEC_HasAvailableComboOfType_C");
static_assert(sizeof(UDEC_HasAvailableComboOfType_C) == 0x0000C0, "Wrong size on UDEC_HasAvailableComboOfType_C");
static_assert(offsetof(UDEC_HasAvailableComboOfType_C, ComboTypes) == 0x0000A0, "Member 'UDEC_HasAvailableComboOfType_C::ComboTypes' has a wrong offset!");
static_assert(offsetof(UDEC_HasAvailableComboOfType_C, FailOnHave) == 0x0000B0, "Member 'UDEC_HasAvailableComboOfType_C::FailOnHave' has a wrong offset!");
static_assert(offsetof(UDEC_HasAvailableComboOfType_C, EnemyPawn) == 0x0000B8, "Member 'UDEC_HasAvailableComboOfType_C::EnemyPawn' has a wrong offset!");

}


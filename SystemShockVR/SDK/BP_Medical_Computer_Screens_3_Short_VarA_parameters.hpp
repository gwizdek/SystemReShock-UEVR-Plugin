#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Medical_Computer_Screens_3_Short_VarA

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Medical_Computer_Screens_3_Short_VarA.BP_Medical_Computer_Screens_3_Short_VarA_C.UserConstructionScript
// 0x0030 (0x0030 - 0x0000)
struct BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPointLightComponent*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPointLightComponent*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript");
static_assert(sizeof(BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript) == 0x000030, "Wrong size on BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript");
static_assert(offsetof(BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_Medical_Computer_Screens_3_Short_VarA_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}


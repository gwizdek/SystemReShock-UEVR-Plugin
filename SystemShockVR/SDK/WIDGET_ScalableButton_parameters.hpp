#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_ScalableButton

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.OnMouseButtonActivated__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_ScalableButton_C_OnMouseButtonActivated__DelegateSignature final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_ScalableButton_C_OnMouseButtonActivated__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_ScalableButton_C_OnMouseButtonActivated__DelegateSignature");
static_assert(sizeof(WIDGET_ScalableButton_C_OnMouseButtonActivated__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_ScalableButton_C_OnMouseButtonActivated__DelegateSignature");
static_assert(offsetof(WIDGET_ScalableButton_C_OnMouseButtonActivated__DelegateSignature, MyGeometry) == 0x000000, "Member 'WIDGET_ScalableButton_C_OnMouseButtonActivated__DelegateSignature::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_OnMouseButtonActivated__DelegateSignature, MouseEvent) == 0x000038, "Member 'WIDGET_ScalableButton_C_OnMouseButtonActivated__DelegateSignature::MouseEvent' has a wrong offset!");

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.ExecuteUbergraph_WIDGET_ScalableButton
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_ScalableButton_C_ExecuteUbergraph_WIDGET_ScalableButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_ScalableButton_C_ExecuteUbergraph_WIDGET_ScalableButton) == 0x000008, "Wrong alignment on WIDGET_ScalableButton_C_ExecuteUbergraph_WIDGET_ScalableButton");
static_assert(sizeof(WIDGET_ScalableButton_C_ExecuteUbergraph_WIDGET_ScalableButton) == 0x000010, "Wrong size on WIDGET_ScalableButton_C_ExecuteUbergraph_WIDGET_ScalableButton");
static_assert(offsetof(WIDGET_ScalableButton_C_ExecuteUbergraph_WIDGET_ScalableButton, EntryPoint) == 0x000000, "Member 'WIDGET_ScalableButton_C_ExecuteUbergraph_WIDGET_ScalableButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_ExecuteUbergraph_WIDGET_ScalableButton, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WIDGET_ScalableButton_C_ExecuteUbergraph_WIDGET_ScalableButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_ExecuteUbergraph_WIDGET_ScalableButton, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'WIDGET_ScalableButton_C_ExecuteUbergraph_WIDGET_ScalableButton::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_ScalableButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_ScalableButton_C_PreConstruct) == 0x000001, "Wrong alignment on WIDGET_ScalableButton_C_PreConstruct");
static_assert(sizeof(WIDGET_ScalableButton_C_PreConstruct) == 0x000001, "Wrong size on WIDGET_ScalableButton_C_PreConstruct");
static_assert(offsetof(WIDGET_ScalableButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WIDGET_ScalableButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.EVENT_OnMouseButtonDown
// 0x0470 (0x0470 - 0x0000)
struct WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0168(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0178(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0188(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0240(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_2;                    // 0x02F8(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_3;                    // 0x03B0(0x00B8)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown) == 0x000008, "Wrong alignment on WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown");
static_assert(sizeof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown) == 0x000470, "Wrong size on WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown, CallFunc_PlayAnimation_ReturnValue) == 0x000160, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown, K2Node_CreateDelegate_OutputDelegate) == 0x000168, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000178, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown, CallFunc_PlayAnimation_ReturnValue_1) == 0x000180, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000188, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown, CallFunc_Handled_ReturnValue_1) == 0x000240, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown, CallFunc_Handled_ReturnValue_2) == 0x0002F8, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown::CallFunc_Handled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown, CallFunc_Handled_ReturnValue_3) == 0x0003B0, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown::CallFunc_Handled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown, CallFunc_Not_PreBool_ReturnValue) == 0x000468, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.EVENT_OnMouseButtonUp
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp) == 0x000008, "Wrong alignment on WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp");
static_assert(sizeof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp) == 0x000218, "Wrong size on WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp, ReturnValue) == 0x0000A8, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseButtonUp::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.EVENT_OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WIDGET_ScalableButton_C_EVENT_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_ScalableButton_C_EVENT_OnMouseEnter) == 0x000008, "Wrong alignment on WIDGET_ScalableButton_C_EVENT_OnMouseEnter");
static_assert(sizeof(WIDGET_ScalableButton_C_EVENT_OnMouseEnter) == 0x0000B0, "Wrong size on WIDGET_ScalableButton_C_EVENT_OnMouseEnter");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseEnter::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseEnter, CallFunc_PlayAnimation_ReturnValue) == 0x0000A8, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseEnter::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.EVENT_OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WIDGET_ScalableButton_C_EVENT_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_ScalableButton_C_EVENT_OnMouseLeave) == 0x000008, "Wrong alignment on WIDGET_ScalableButton_C_EVENT_OnMouseLeave");
static_assert(sizeof(WIDGET_ScalableButton_C_EVENT_OnMouseLeave) == 0x000078, "Wrong size on WIDGET_ScalableButton_C_EVENT_OnMouseLeave");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseLeave::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnMouseLeave, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'WIDGET_ScalableButton_C_EVENT_OnMouseLeave::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.SetButtonEnabled
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_ScalableButton_C_SetButtonEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_ScalableButton_C_SetButtonEnabled) == 0x000001, "Wrong alignment on WIDGET_ScalableButton_C_SetButtonEnabled");
static_assert(sizeof(WIDGET_ScalableButton_C_SetButtonEnabled) == 0x000002, "Wrong size on WIDGET_ScalableButton_C_SetButtonEnabled");
static_assert(offsetof(WIDGET_ScalableButton_C_SetButtonEnabled, Enabled) == 0x000000, "Member 'WIDGET_ScalableButton_C_SetButtonEnabled::Enabled' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_SetButtonEnabled, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'WIDGET_ScalableButton_C_SetButtonEnabled::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.ResetButton
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_ScalableButton_C_ResetButton final
{
public:
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_1;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_ScalableButton_C_ResetButton) == 0x000004, "Wrong alignment on WIDGET_ScalableButton_C_ResetButton");
static_assert(sizeof(WIDGET_ScalableButton_C_ResetButton) == 0x000008, "Wrong size on WIDGET_ScalableButton_C_ResetButton");
static_assert(offsetof(WIDGET_ScalableButton_C_ResetButton, CallFunc_GetMeshUIColor_Color) == 0x000000, "Member 'WIDGET_ScalableButton_C_ResetButton::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_ResetButton, CallFunc_GetMeshUIColor_Color_1) == 0x000004, "Member 'WIDGET_ScalableButton_C_ResetButton::CallFunc_GetMeshUIColor_Color_1' has a wrong offset!");

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.EVENT_OnActivationFinished
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_ScalableButton_C_EVENT_OnActivationFinished final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_ScalableButton_C_EVENT_OnActivationFinished) == 0x000001, "Wrong alignment on WIDGET_ScalableButton_C_EVENT_OnActivationFinished");
static_assert(sizeof(WIDGET_ScalableButton_C_EVENT_OnActivationFinished) == 0x000001, "Wrong size on WIDGET_ScalableButton_C_EVENT_OnActivationFinished");
static_assert(offsetof(WIDGET_ScalableButton_C_EVENT_OnActivationFinished, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'WIDGET_ScalableButton_C_EVENT_OnActivationFinished::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.OnEnabledStateChanged
// 0x001C (0x001C - 0x0000)
struct WIDGET_ScalableButton_C_OnEnabledStateChanged final
{
public:
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_1;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_2;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_3;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_4;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color_1;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_ScalableButton_C_OnEnabledStateChanged) == 0x000004, "Wrong alignment on WIDGET_ScalableButton_C_OnEnabledStateChanged");
static_assert(sizeof(WIDGET_ScalableButton_C_OnEnabledStateChanged) == 0x00001C, "Wrong size on WIDGET_ScalableButton_C_OnEnabledStateChanged");
static_assert(offsetof(WIDGET_ScalableButton_C_OnEnabledStateChanged, CallFunc_GetMeshUIColor_Color) == 0x000000, "Member 'WIDGET_ScalableButton_C_OnEnabledStateChanged::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_OnEnabledStateChanged, CallFunc_GetMeshUIColor_Color_1) == 0x000004, "Member 'WIDGET_ScalableButton_C_OnEnabledStateChanged::CallFunc_GetMeshUIColor_Color_1' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_OnEnabledStateChanged, K2Node_MakeStruct_Color) == 0x000008, "Member 'WIDGET_ScalableButton_C_OnEnabledStateChanged::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_OnEnabledStateChanged, CallFunc_GetMeshUIColor_Color_2) == 0x00000C, "Member 'WIDGET_ScalableButton_C_OnEnabledStateChanged::CallFunc_GetMeshUIColor_Color_2' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_OnEnabledStateChanged, CallFunc_GetMeshUIColor_Color_3) == 0x000010, "Member 'WIDGET_ScalableButton_C_OnEnabledStateChanged::CallFunc_GetMeshUIColor_Color_3' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_OnEnabledStateChanged, CallFunc_GetMeshUIColor_Color_4) == 0x000014, "Member 'WIDGET_ScalableButton_C_OnEnabledStateChanged::CallFunc_GetMeshUIColor_Color_4' has a wrong offset!");
static_assert(offsetof(WIDGET_ScalableButton_C_OnEnabledStateChanged, K2Node_MakeStruct_Color_1) == 0x000018, "Member 'WIDGET_ScalableButton_C_OnEnabledStateChanged::K2Node_MakeStruct_Color_1' has a wrong offset!");

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.SetCaption
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_ScalableButton_C_SetCaption final
{
public:
	class FText                                   Caption_0;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_ScalableButton_C_SetCaption) == 0x000008, "Wrong alignment on WIDGET_ScalableButton_C_SetCaption");
static_assert(sizeof(WIDGET_ScalableButton_C_SetCaption) == 0x000018, "Wrong size on WIDGET_ScalableButton_C_SetCaption");
static_assert(offsetof(WIDGET_ScalableButton_C_SetCaption, Caption_0) == 0x000000, "Member 'WIDGET_ScalableButton_C_SetCaption::Caption_0' has a wrong offset!");

// Function WIDGET_ScalableButton.WIDGET_ScalableButton_C.GetButtonEnabled
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_ScalableButton_C_GetButtonEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_ScalableButton_C_GetButtonEnabled) == 0x000001, "Wrong alignment on WIDGET_ScalableButton_C_GetButtonEnabled");
static_assert(sizeof(WIDGET_ScalableButton_C_GetButtonEnabled) == 0x000001, "Wrong size on WIDGET_ScalableButton_C_GetButtonEnabled");
static_assert(offsetof(WIDGET_ScalableButton_C_GetButtonEnabled, IsEnabled) == 0x000000, "Member 'WIDGET_ScalableButton_C_GetButtonEnabled::IsEnabled' has a wrong offset!");

}


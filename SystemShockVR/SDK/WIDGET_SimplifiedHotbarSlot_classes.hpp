#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SimplifiedHotbarSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_SimplifiedHotbarSlot.WIDGET_SimplifiedHotbarSlot_C
// 0x0088 (0x02E8 - 0x0260)
class UWIDGET_SimplifiedHotbarSlot_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TransitionExpanded;                                // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TransitionEquipped;                                // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TransitionOccupied;                                // 0x0278(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_ItemIcon;                                     // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_SlotBackground;                               // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_ItemCount;                                    // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_SlotItemName;                                 // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_SlotNumber;                                   // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    PlayerHUD;                                         // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	int32                                         LastItemCount;                                     // 0x02C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotNumber;                                        // 0x02C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasEquipped;                                       // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FrameOpacity;                                      // 0x02CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   BoundSlot;                                         // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelectedSlot;                                    // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SimplifiedHotbarCategoryModal_C* ParentSimplifiedHotbarModal;                       // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WIDGET_SimplifiedHotbarSlot(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void SetSlotNumber(int32 Number);
	void GetSlotIndex(int32* SlotIndex);
	void BindSlotToHotbar(class UWIDGET_HotbarSlot_C*& HotbarSlot);
	void Update_Hotbar_Slot_Appearance();
	void SetItemCount();
	void SetItemName();
	void SetItemIcon();
	void SetTextColor();
	void SetFrameColor();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_SimplifiedHotbarSlot_C">();
	}
	static class UWIDGET_SimplifiedHotbarSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_SimplifiedHotbarSlot_C>();
	}
};
static_assert(alignof(UWIDGET_SimplifiedHotbarSlot_C) == 0x000008, "Wrong alignment on UWIDGET_SimplifiedHotbarSlot_C");
static_assert(sizeof(UWIDGET_SimplifiedHotbarSlot_C) == 0x0002E8, "Wrong size on UWIDGET_SimplifiedHotbarSlot_C");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_SimplifiedHotbarSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, TransitionExpanded) == 0x000268, "Member 'UWIDGET_SimplifiedHotbarSlot_C::TransitionExpanded' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, TransitionEquipped) == 0x000270, "Member 'UWIDGET_SimplifiedHotbarSlot_C::TransitionEquipped' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, TransitionOccupied) == 0x000278, "Member 'UWIDGET_SimplifiedHotbarSlot_C::TransitionOccupied' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, MESH_ItemIcon) == 0x000280, "Member 'UWIDGET_SimplifiedHotbarSlot_C::MESH_ItemIcon' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, MESH_SlotBackground) == 0x000288, "Member 'UWIDGET_SimplifiedHotbarSlot_C::MESH_SlotBackground' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, TEXT_ItemCount) == 0x000290, "Member 'UWIDGET_SimplifiedHotbarSlot_C::TEXT_ItemCount' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, TEXT_SlotItemName) == 0x000298, "Member 'UWIDGET_SimplifiedHotbarSlot_C::TEXT_SlotItemName' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, TEXT_SlotNumber) == 0x0002A0, "Member 'UWIDGET_SimplifiedHotbarSlot_C::TEXT_SlotNumber' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, PlayerHUD) == 0x0002A8, "Member 'UWIDGET_SimplifiedHotbarSlot_C::PlayerHUD' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, SlottableObject) == 0x0002B0, "Member 'UWIDGET_SimplifiedHotbarSlot_C::SlottableObject' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, LastItemCount) == 0x0002C0, "Member 'UWIDGET_SimplifiedHotbarSlot_C::LastItemCount' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, SlotNumber) == 0x0002C4, "Member 'UWIDGET_SimplifiedHotbarSlot_C::SlotNumber' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, WasEquipped) == 0x0002C8, "Member 'UWIDGET_SimplifiedHotbarSlot_C::WasEquipped' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, FrameOpacity) == 0x0002CC, "Member 'UWIDGET_SimplifiedHotbarSlot_C::FrameOpacity' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, BoundSlot) == 0x0002D0, "Member 'UWIDGET_SimplifiedHotbarSlot_C::BoundSlot' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, IsSelectedSlot) == 0x0002D8, "Member 'UWIDGET_SimplifiedHotbarSlot_C::IsSelectedSlot' has a wrong offset!");
static_assert(offsetof(UWIDGET_SimplifiedHotbarSlot_C, ParentSimplifiedHotbarModal) == 0x0002E0, "Member 'UWIDGET_SimplifiedHotbarSlot_C::ParentSimplifiedHotbarModal' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_RestStation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "LevelVoxelization_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_RestStation.INTERACT_RestStation_C.ExecuteUbergraph_INTERACT_RestStation
// 0x00D8 (0x00D8 - 0x0000)
struct INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryOpenDoorWhileClosing_Result;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation");
static_assert(sizeof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation) == 0x0000D8, "Wrong size on INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, EntryPoint) == 0x000000, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, K2Node_ComponentBoundEvent_bVisibleState) == 0x000004, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000008, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000010, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000018, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000020, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000B0, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, K2Node_ComponentBoundEvent_OtherActor) == 0x0000B8, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, K2Node_ComponentBoundEvent_OtherComp) == 0x0000C0, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000C8, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, K2Node_Event_DeltaSeconds) == 0x0000CC, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation, CallFunc_TryOpenDoorWhileClosing_Result) == 0x0000D0, "Member 'INTERACT_RestStation_C_ExecuteUbergraph_INTERACT_RestStation::CallFunc_TryOpenDoorWhileClosing_Result' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.BndEvt__Interact_RestStation_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_RestStation_C_BndEvt__Interact_RestStation_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_BndEvt__Interact_RestStation_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_RestStation_C_BndEvt__Interact_RestStation_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_RestStation_C_BndEvt__Interact_RestStation_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_RestStation_C_BndEvt__Interact_RestStation_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_RestStation_C_BndEvt__Interact_RestStation_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_RestStation_C_BndEvt__Interact_RestStation_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_RestStation_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_ReceiveTick) == 0x000004, "Wrong alignment on INTERACT_RestStation_C_ReceiveTick");
static_assert(sizeof(INTERACT_RestStation_C_ReceiveTick) == 0x000004, "Wrong size on INTERACT_RestStation_C_ReceiveTick");
static_assert(offsetof(INTERACT_RestStation_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'INTERACT_RestStation_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'INTERACT_RestStation_C_BndEvt__MotionSensor_Door_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_RestStation_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_UserConstructionScript) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_UserConstructionScript");
static_assert(sizeof(INTERACT_RestStation_C_UserConstructionScript) == 0x000018, "Wrong size on INTERACT_RestStation_C_UserConstructionScript");
static_assert(offsetof(INTERACT_RestStation_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'INTERACT_RestStation_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'INTERACT_RestStation_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000010, "Member 'INTERACT_RestStation_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_RestStation_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_GetTargetShape");
static_assert(sizeof(INTERACT_RestStation_C_GetTargetShape) == 0x000018, "Wrong size on INTERACT_RestStation_C_GetTargetShape");
static_assert(offsetof(INTERACT_RestStation_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_RestStation_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_RestStation_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'INTERACT_RestStation_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000011, "Member 'INTERACT_RestStation_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000012, "Member 'INTERACT_RestStation_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000013, "Member 'INTERACT_RestStation_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.TryInteract
// 0x01A8 (0x01A8 - 0x0000)
struct INTERACT_RestStation_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0038(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0058(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsRestStationFunctional_Result;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0080(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00A0(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x00C0(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_4;        // 0x00E0(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_5;        // 0x0100(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_6;        // 0x0120(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_7;        // 0x0140(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_8;        // 0x0168(0x0020)(HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_193[0x5];                                      // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue_1;        // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_TryInteract");
static_assert(sizeof(INTERACT_RestStation_C_TryInteract) == 0x0001A8, "Wrong size on INTERACT_RestStation_C_TryInteract");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_RestStation_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_RestStation_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_RestStation_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_RestStation_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x000038, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000058, "Member 'INTERACT_RestStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_IsRestStationFunctional_Result) == 0x000078, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_IsRestStationFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000079, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000080, "Member 'INTERACT_RestStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000A0, "Member 'INTERACT_RestStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x0000C0, "Member 'INTERACT_RestStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_4) == 0x0000E0, "Member 'INTERACT_RestStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_4' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_5) == 0x000100, "Member 'INTERACT_RestStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_5' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_6) == 0x000120, "Member 'INTERACT_RestStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_6' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_7) == 0x000140, "Member 'INTERACT_RestStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_7' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000160, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000161, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_8) == 0x000168, "Member 'INTERACT_RestStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_8' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_GetAnimInstance_ReturnValue) == 0x000188, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000190, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000191, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_Not_PreBool_ReturnValue_1) == 0x000192, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000198, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_IsAnyMontagePlaying_ReturnValue_1) == 0x0001A0, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_IsAnyMontagePlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0001A1, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001A2, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x0001A3, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryInteract, CallFunc_BooleanOR_ReturnValue) == 0x0001A4, "Member 'INTERACT_RestStation_C_TryInteract::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.InitializeRestStation
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_RestStation_C_InitializeRestStation final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVoxelNavModifierState                        Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVoxelNavModifierState                        Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EVoxelNavModifierState                        K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_InitializeRestStation) == 0x000004, "Wrong alignment on INTERACT_RestStation_C_InitializeRestStation");
static_assert(sizeof(INTERACT_RestStation_C_InitializeRestStation) == 0x000010, "Wrong size on INTERACT_RestStation_C_InitializeRestStation");
static_assert(offsetof(INTERACT_RestStation_C_InitializeRestStation, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'INTERACT_RestStation_C_InitializeRestStation::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeRestStation, Temp_byte_Variable) == 0x000001, "Member 'INTERACT_RestStation_C_InitializeRestStation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeRestStation, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'INTERACT_RestStation_C_InitializeRestStation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeRestStation, Temp_byte_Variable_1) == 0x000003, "Member 'INTERACT_RestStation_C_InitializeRestStation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeRestStation, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'INTERACT_RestStation_C_InitializeRestStation::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeRestStation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_RestStation_C_InitializeRestStation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeRestStation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_RestStation_C_InitializeRestStation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeRestStation, Temp_bool_Variable) == 0x00000D, "Member 'INTERACT_RestStation_C_InitializeRestStation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeRestStation, K2Node_Select_Default) == 0x00000E, "Member 'INTERACT_RestStation_C_InitializeRestStation::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_RestStation_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_RestStation_C_InitializeAttributes");
static_assert(sizeof(INTERACT_RestStation_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_RestStation_C_InitializeAttributes");
static_assert(offsetof(INTERACT_RestStation_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_RestStation_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_RestStation_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.InitializeOpenState
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_RestStation_C_InitializeOpenState final
{
public:
	bool                                          OpenState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door;             // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door_1;           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseDoor_Result;                         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenDoor_Result;                          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_InitializeOpenState) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_InitializeOpenState");
static_assert(sizeof(INTERACT_RestStation_C_InitializeOpenState) == 0x000048, "Wrong size on INTERACT_RestStation_C_InitializeOpenState");
static_assert(offsetof(INTERACT_RestStation_C_InitializeOpenState, OpenState) == 0x000000, "Member 'INTERACT_RestStation_C_InitializeOpenState::OpenState' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeOpenState, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_RestStation_C_InitializeOpenState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeOpenState, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000010, "Member 'INTERACT_RestStation_C_InitializeOpenState::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeOpenState, K2Node_DynamicCast_AsINTERF_ANIM_Door) == 0x000018, "Member 'INTERACT_RestStation_C_InitializeOpenState::K2Node_DynamicCast_AsINTERF_ANIM_Door' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeOpenState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_RestStation_C_InitializeOpenState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeOpenState, K2Node_DynamicCast_AsINTERF_ANIM_Door_1) == 0x000030, "Member 'INTERACT_RestStation_C_InitializeOpenState::K2Node_DynamicCast_AsINTERF_ANIM_Door_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeOpenState, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'INTERACT_RestStation_C_InitializeOpenState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeOpenState, CallFunc_CloseDoor_Result) == 0x000041, "Member 'INTERACT_RestStation_C_InitializeOpenState::CallFunc_CloseDoor_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeOpenState, CallFunc_OpenDoor_Result) == 0x000042, "Member 'INTERACT_RestStation_C_InitializeOpenState::CallFunc_OpenDoor_Result' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.InitializeLockedState
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_RestStation_C_InitializeLockedState final
{
public:
	bool                                          LockedState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door;             // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLocked_Result;                         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_InitializeLockedState) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_InitializeLockedState");
static_assert(sizeof(INTERACT_RestStation_C_InitializeLockedState) == 0x000028, "Wrong size on INTERACT_RestStation_C_InitializeLockedState");
static_assert(offsetof(INTERACT_RestStation_C_InitializeLockedState, LockedState) == 0x000000, "Member 'INTERACT_RestStation_C_InitializeLockedState::LockedState' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeLockedState, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_RestStation_C_InitializeLockedState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeLockedState, K2Node_DynamicCast_AsINTERF_ANIM_Door) == 0x000010, "Member 'INTERACT_RestStation_C_InitializeLockedState::K2Node_DynamicCast_AsINTERF_ANIM_Door' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeLockedState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_RestStation_C_InitializeLockedState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeLockedState, CallFunc_SetLocked_Result) == 0x000021, "Member 'INTERACT_RestStation_C_InitializeLockedState::CallFunc_SetLocked_Result' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.InitializeSeatCoverState
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_RestStation_C_InitializeSeatCoverState final
{
public:
	bool                                          SeatCoverState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_RestStation_ToiletSeat_C*       K2Node_DynamicCast_AsAnim_BP_Rest_Station_Toilet_Seat; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_InitializeSeatCoverState) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_InitializeSeatCoverState");
static_assert(sizeof(INTERACT_RestStation_C_InitializeSeatCoverState) == 0x000020, "Wrong size on INTERACT_RestStation_C_InitializeSeatCoverState");
static_assert(offsetof(INTERACT_RestStation_C_InitializeSeatCoverState, SeatCoverState) == 0x000000, "Member 'INTERACT_RestStation_C_InitializeSeatCoverState::SeatCoverState' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeSeatCoverState, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_RestStation_C_InitializeSeatCoverState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeSeatCoverState, K2Node_DynamicCast_AsAnim_BP_Rest_Station_Toilet_Seat) == 0x000010, "Member 'INTERACT_RestStation_C_InitializeSeatCoverState::K2Node_DynamicCast_AsAnim_BP_Rest_Station_Toilet_Seat' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_InitializeSeatCoverState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_RestStation_C_InitializeSeatCoverState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.ToggleDoor
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_RestStation_C_ToggleDoor final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_ToggleDoor) == 0x000001, "Wrong alignment on INTERACT_RestStation_C_ToggleDoor");
static_assert(sizeof(INTERACT_RestStation_C_ToggleDoor) == 0x000001, "Wrong size on INTERACT_RestStation_C_ToggleDoor");
static_assert(offsetof(INTERACT_RestStation_C_ToggleDoor, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'INTERACT_RestStation_C_ToggleDoor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.ToggleSeatCover
// 0x0070 (0x0070 - 0x0000)
struct INTERACT_RestStation_C_ToggleSeatCover final
{
public:
	class UAnimBP_RestStation_ToiletSeat_C*       AnimInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0010(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_RestStation_ToiletSeat_C*       K2Node_DynamicCast_AsAnim_BP_Rest_Station_Toilet_Seat; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_ToggleSeatCover) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_ToggleSeatCover");
static_assert(sizeof(INTERACT_RestStation_C_ToggleSeatCover) == 0x000070, "Wrong size on INTERACT_RestStation_C_ToggleSeatCover");
static_assert(offsetof(INTERACT_RestStation_C_ToggleSeatCover, AnimInstance) == 0x000000, "Member 'INTERACT_RestStation_C_ToggleSeatCover::AnimInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ToggleSeatCover, Temp_bool_Variable) == 0x000008, "Member 'INTERACT_RestStation_C_ToggleSeatCover::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ToggleSeatCover, K2Node_Select_Default) == 0x000010, "Member 'INTERACT_RestStation_C_ToggleSeatCover::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ToggleSeatCover, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000038, "Member 'INTERACT_RestStation_C_ToggleSeatCover::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ToggleSeatCover, K2Node_DynamicCast_AsAnim_Montage) == 0x000040, "Member 'INTERACT_RestStation_C_ToggleSeatCover::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ToggleSeatCover, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'INTERACT_RestStation_C_ToggleSeatCover::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ToggleSeatCover, CallFunc_Montage_Play_ReturnValue) == 0x00004C, "Member 'INTERACT_RestStation_C_ToggleSeatCover::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ToggleSeatCover, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'INTERACT_RestStation_C_ToggleSeatCover::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ToggleSeatCover, CallFunc_GetAnimInstance_ReturnValue) == 0x000058, "Member 'INTERACT_RestStation_C_ToggleSeatCover::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ToggleSeatCover, K2Node_DynamicCast_AsAnim_BP_Rest_Station_Toilet_Seat) == 0x000060, "Member 'INTERACT_RestStation_C_ToggleSeatCover::K2Node_DynamicCast_AsAnim_BP_Rest_Station_Toilet_Seat' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_ToggleSeatCover, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'INTERACT_RestStation_C_ToggleSeatCover::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.TryStartAutoCloseTimer
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_RestStation_C_TryStartAutoCloseTimer final
{
public:
	bool                                          CallFunc_IsRestStationFunctional_Result;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_TryStartAutoCloseTimer) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_TryStartAutoCloseTimer");
static_assert(sizeof(INTERACT_RestStation_C_TryStartAutoCloseTimer) == 0x000058, "Wrong size on INTERACT_RestStation_C_TryStartAutoCloseTimer");
static_assert(offsetof(INTERACT_RestStation_C_TryStartAutoCloseTimer, CallFunc_IsRestStationFunctional_Result) == 0x000000, "Member 'INTERACT_RestStation_C_TryStartAutoCloseTimer::CallFunc_IsRestStationFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStartAutoCloseTimer, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'INTERACT_RestStation_C_TryStartAutoCloseTimer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStartAutoCloseTimer, Temp_object_Variable) == 0x000008, "Member 'INTERACT_RestStation_C_TryStartAutoCloseTimer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStartAutoCloseTimer, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'INTERACT_RestStation_C_TryStartAutoCloseTimer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStartAutoCloseTimer, CallFunc_ComponentOverlapActors_OutActors) == 0x000020, "Member 'INTERACT_RestStation_C_TryStartAutoCloseTimer::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStartAutoCloseTimer, CallFunc_ComponentOverlapActors_ReturnValue) == 0x000030, "Member 'INTERACT_RestStation_C_TryStartAutoCloseTimer::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStartAutoCloseTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'INTERACT_RestStation_C_TryStartAutoCloseTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStartAutoCloseTimer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000044, "Member 'INTERACT_RestStation_C_TryStartAutoCloseTimer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStartAutoCloseTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'INTERACT_RestStation_C_TryStartAutoCloseTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStartAutoCloseTimer, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000050, "Member 'INTERACT_RestStation_C_TryStartAutoCloseTimer::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStartAutoCloseTimer, CallFunc_Not_PreBool_ReturnValue_2) == 0x000051, "Member 'INTERACT_RestStation_C_TryStartAutoCloseTimer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStartAutoCloseTimer, CallFunc_BooleanAND_ReturnValue_1) == 0x000052, "Member 'INTERACT_RestStation_C_TryStartAutoCloseTimer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.TryStopAutoCloseTimer
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_RestStation_C_TryStopAutoCloseTimer final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_TryStopAutoCloseTimer) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_TryStopAutoCloseTimer");
static_assert(sizeof(INTERACT_RestStation_C_TryStopAutoCloseTimer) == 0x000028, "Wrong size on INTERACT_RestStation_C_TryStopAutoCloseTimer");
static_assert(offsetof(INTERACT_RestStation_C_TryStopAutoCloseTimer, Temp_object_Variable) == 0x000000, "Member 'INTERACT_RestStation_C_TryStopAutoCloseTimer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStopAutoCloseTimer, CallFunc_ComponentOverlapActors_OutActors) == 0x000010, "Member 'INTERACT_RestStation_C_TryStopAutoCloseTimer::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryStopAutoCloseTimer, CallFunc_ComponentOverlapActors_ReturnValue) == 0x000020, "Member 'INTERACT_RestStation_C_TryStopAutoCloseTimer::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.PlayDoorMontageForCurrentState
// 0x0080 (0x0080 - 0x0000)
struct INTERACT_RestStation_C_PlayDoorMontageForCurrentState final
{
public:
	float                                         StartTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           MontageToPlay;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAnimMontage* Montage, bool bInterrupted)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0038(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_PlayDoorMontageForCurrentState");
static_assert(sizeof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState) == 0x000080, "Wrong size on INTERACT_RestStation_C_PlayDoorMontageForCurrentState");
static_assert(offsetof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState, StartTime) == 0x000000, "Member 'INTERACT_RestStation_C_PlayDoorMontageForCurrentState::StartTime' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState, MontageToPlay) == 0x000008, "Member 'INTERACT_RestStation_C_PlayDoorMontageForCurrentState::MontageToPlay' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState, AnimInstance) == 0x000010, "Member 'INTERACT_RestStation_C_PlayDoorMontageForCurrentState::AnimInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState, Temp_bool_Variable) == 0x000018, "Member 'INTERACT_RestStation_C_PlayDoorMontageForCurrentState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'INTERACT_RestStation_C_PlayDoorMontageForCurrentState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState, CallFunc_GetAnimInstance_ReturnValue) == 0x000030, "Member 'INTERACT_RestStation_C_PlayDoorMontageForCurrentState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState, K2Node_Select_Default) == 0x000038, "Member 'INTERACT_RestStation_C_PlayDoorMontageForCurrentState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000060, "Member 'INTERACT_RestStation_C_PlayDoorMontageForCurrentState::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState, CallFunc_Montage_Play_ReturnValue) == 0x000068, "Member 'INTERACT_RestStation_C_PlayDoorMontageForCurrentState::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState, K2Node_DynamicCast_AsAnim_Montage) == 0x000070, "Member 'INTERACT_RestStation_C_PlayDoorMontageForCurrentState::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'INTERACT_RestStation_C_PlayDoorMontageForCurrentState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_PlayDoorMontageForCurrentState, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000079, "Member 'INTERACT_RestStation_C_PlayDoorMontageForCurrentState::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.OpenOrCloseDoor
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_RestStation_C_OpenOrCloseDoor final
{
public:
	bool                                          OpenState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MontageStartTime;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door;             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door_1;           // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CloseDoor_Result;                         // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenDoor_Result;                          // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_OpenOrCloseDoor) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_OpenOrCloseDoor");
static_assert(sizeof(INTERACT_RestStation_C_OpenOrCloseDoor) == 0x000068, "Wrong size on INTERACT_RestStation_C_OpenOrCloseDoor");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, OpenState) == 0x000000, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::OpenState' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, MontageStartTime) == 0x000004, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::MontageStartTime' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, AnimInstance) == 0x000008, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::AnimInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000010, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000014, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, K2Node_DynamicCast_AsINTERF_ANIM_Door) == 0x000038, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::K2Node_DynamicCast_AsINTERF_ANIM_Door' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, K2Node_DynamicCast_AsINTERF_ANIM_Door_1) == 0x000050, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::K2Node_DynamicCast_AsINTERF_ANIM_Door_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, CallFunc_CloseDoor_Result) == 0x000061, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::CallFunc_CloseDoor_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OpenOrCloseDoor, CallFunc_OpenDoor_Result) == 0x000062, "Member 'INTERACT_RestStation_C_OpenOrCloseDoor::CallFunc_OpenDoor_Result' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.LockOrUnlockDoor
// 0x00A0 (0x00A0 - 0x0000)
struct INTERACT_RestStation_C_LockOrUnlockDoor final
{
public:
	bool                                          LockedState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          AnimInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0018(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0060(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Door_C>   K2Node_DynamicCast_AsINTERF_ANIM_Door;             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLocked_Result;                         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_LockOrUnlockDoor) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_LockOrUnlockDoor");
static_assert(sizeof(INTERACT_RestStation_C_LockOrUnlockDoor) == 0x0000A0, "Wrong size on INTERACT_RestStation_C_LockOrUnlockDoor");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, LockedState) == 0x000000, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::LockedState' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, AnimInstance) == 0x000008, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::AnimInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, Temp_bool_Variable) == 0x000010, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, K2Node_Select_Default) == 0x000018, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000040, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000048, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, K2Node_DynamicCast_AsAnim_Montage) == 0x000050, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00005C, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, K2Node_CreateDelegate_OutputDelegate) == 0x000060, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, K2Node_DynamicCast_AsINTERF_ANIM_Door) == 0x000078, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::K2Node_DynamicCast_AsINTERF_ANIM_Door' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, CallFunc_SetLocked_Result) == 0x000089, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::CallFunc_SetLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, CallFunc_GetAnimInstance_ReturnValue) == 0x000090, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_LockOrUnlockDoor, CallFunc_Montage_Play_ReturnValue) == 0x000098, "Member 'INTERACT_RestStation_C_LockOrUnlockDoor::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.OnDoorMontageFinished
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_RestStation_C_OnDoorMontageFinished final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_OnDoorMontageFinished) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_OnDoorMontageFinished");
static_assert(sizeof(INTERACT_RestStation_C_OnDoorMontageFinished) == 0x000028, "Wrong size on INTERACT_RestStation_C_OnDoorMontageFinished");
static_assert(offsetof(INTERACT_RestStation_C_OnDoorMontageFinished, Temp_object_Variable) == 0x000000, "Member 'INTERACT_RestStation_C_OnDoorMontageFinished::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OnDoorMontageFinished, CallFunc_ComponentOverlapActors_OutActors) == 0x000010, "Member 'INTERACT_RestStation_C_OnDoorMontageFinished::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_OnDoorMontageFinished, CallFunc_ComponentOverlapActors_ReturnValue) == 0x000020, "Member 'INTERACT_RestStation_C_OnDoorMontageFinished::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.OnLockedMontageFinished
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_RestStation_C_OnLockedMontageFinished final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_OnLockedMontageFinished) == 0x000001, "Wrong alignment on INTERACT_RestStation_C_OnLockedMontageFinished");
static_assert(sizeof(INTERACT_RestStation_C_OnLockedMontageFinished) == 0x000001, "Wrong size on INTERACT_RestStation_C_OnLockedMontageFinished");
static_assert(offsetof(INTERACT_RestStation_C_OnLockedMontageFinished, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'INTERACT_RestStation_C_OnLockedMontageFinished::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.ToggleFaucet
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_RestStation_C_ToggleFaucet final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_ToggleFaucet) == 0x000001, "Wrong alignment on INTERACT_RestStation_C_ToggleFaucet");
static_assert(sizeof(INTERACT_RestStation_C_ToggleFaucet) == 0x000001, "Wrong size on INTERACT_RestStation_C_ToggleFaucet");
static_assert(offsetof(INTERACT_RestStation_C_ToggleFaucet, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'INTERACT_RestStation_C_ToggleFaucet::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.SetFaucetState
// 0x0080 (0x0080 - 0x0000)
struct INTERACT_RestStation_C_SetFaucetState final
{
public:
	bool                                          FaucetState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_2;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_3;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_SetFaucetState) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_SetFaucetState");
static_assert(sizeof(INTERACT_RestStation_C_SetFaucetState) == 0x000080, "Wrong size on INTERACT_RestStation_C_SetFaucetState");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, FaucetState) == 0x000000, "Member 'INTERACT_RestStation_C_SetFaucetState::FaucetState' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_RestStation_C_SetFaucetState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, CallFunc_GetGameInstance_ReturnValue_1) == 0x000010, "Member 'INTERACT_RestStation_C_SetFaucetState::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_RestStation_C_SetFaucetState::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_RestStation_C_SetFaucetState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000028, "Member 'INTERACT_RestStation_C_SetFaucetState::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'INTERACT_RestStation_C_SetFaucetState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, CallFunc_GetGameInstance_ReturnValue_2) == 0x000038, "Member 'INTERACT_RestStation_C_SetFaucetState::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, K2Node_DynamicCast_AsGI_Single_Player_2) == 0x000040, "Member 'INTERACT_RestStation_C_SetFaucetState::K2Node_DynamicCast_AsGI_Single_Player_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'INTERACT_RestStation_C_SetFaucetState::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00004C, "Member 'INTERACT_RestStation_C_SetFaucetState::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000058, "Member 'INTERACT_RestStation_C_SetFaucetState::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, CallFunc_GetGameInstance_ReturnValue_3) == 0x000068, "Member 'INTERACT_RestStation_C_SetFaucetState::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, K2Node_DynamicCast_AsGI_Single_Player_3) == 0x000070, "Member 'INTERACT_RestStation_C_SetFaucetState::K2Node_DynamicCast_AsGI_Single_Player_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'INTERACT_RestStation_C_SetFaucetState::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_SetFaucetState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000079, "Member 'INTERACT_RestStation_C_SetFaucetState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.FlushToilet
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_RestStation_C_FlushToilet final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_FlushToilet) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_FlushToilet");
static_assert(sizeof(INTERACT_RestStation_C_FlushToilet) == 0x000020, "Wrong size on INTERACT_RestStation_C_FlushToilet");
static_assert(offsetof(INTERACT_RestStation_C_FlushToilet, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'INTERACT_RestStation_C_FlushToilet::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_FlushToilet, K2Node_DynamicCast_AsGI_Single_Player) == 0x000008, "Member 'INTERACT_RestStation_C_FlushToilet::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_FlushToilet, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_RestStation_C_FlushToilet::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_FlushToilet, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'INTERACT_RestStation_C_FlushToilet::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.UpdateButtonColor
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_RestStation_C_UpdateButtonColor final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LockedState;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_UpdateButtonColor) == 0x000004, "Wrong alignment on INTERACT_RestStation_C_UpdateButtonColor");
static_assert(sizeof(INTERACT_RestStation_C_UpdateButtonColor) == 0x000020, "Wrong size on INTERACT_RestStation_C_UpdateButtonColor");
static_assert(offsetof(INTERACT_RestStation_C_UpdateButtonColor, Progress) == 0x000000, "Member 'INTERACT_RestStation_C_UpdateButtonColor::Progress' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateButtonColor, LockedState) == 0x000004, "Member 'INTERACT_RestStation_C_UpdateButtonColor::LockedState' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateButtonColor, Temp_bool_Variable) == 0x000005, "Member 'INTERACT_RestStation_C_UpdateButtonColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateButtonColor, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_RestStation_C_UpdateButtonColor::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateButtonColor, K2Node_Select_Default) == 0x00000C, "Member 'INTERACT_RestStation_C_UpdateButtonColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateButtonColor, CallFunc_LinearColorLerp_ReturnValue) == 0x000010, "Member 'INTERACT_RestStation_C_UpdateButtonColor::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.UpdateVacancyColor
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_RestStation_C_UpdateVacancyColor final
{
public:
	bool                                          LockedState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_UpdateVacancyColor) == 0x000004, "Wrong alignment on INTERACT_RestStation_C_UpdateVacancyColor");
static_assert(sizeof(INTERACT_RestStation_C_UpdateVacancyColor) == 0x000014, "Wrong size on INTERACT_RestStation_C_UpdateVacancyColor");
static_assert(offsetof(INTERACT_RestStation_C_UpdateVacancyColor, LockedState) == 0x000000, "Member 'INTERACT_RestStation_C_UpdateVacancyColor::LockedState' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateVacancyColor, CallFunc_SelectColor_ReturnValue) == 0x000004, "Member 'INTERACT_RestStation_C_UpdateVacancyColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.UpdateRestStation
// 0x001C (0x001C - 0x0000)
struct INTERACT_RestStation_C_UpdateRestStation final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTime;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_UpdateRestStation) == 0x000004, "Wrong alignment on INTERACT_RestStation_C_UpdateRestStation");
static_assert(sizeof(INTERACT_RestStation_C_UpdateRestStation) == 0x00001C, "Wrong size on INTERACT_RestStation_C_UpdateRestStation");
static_assert(offsetof(INTERACT_RestStation_C_UpdateRestStation, Progress) == 0x000000, "Member 'INTERACT_RestStation_C_UpdateRestStation::Progress' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateRestStation, ElapsedTime) == 0x000004, "Member 'INTERACT_RestStation_C_UpdateRestStation::ElapsedTime' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateRestStation, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_RestStation_C_UpdateRestStation::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateRestStation, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00000C, "Member 'INTERACT_RestStation_C_UpdateRestStation::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateRestStation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_RestStation_C_UpdateRestStation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateRestStation, CallFunc_FMin_ReturnValue) == 0x000014, "Member 'INTERACT_RestStation_C_UpdateRestStation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateRestStation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'INTERACT_RestStation_C_UpdateRestStation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.UpdateContainmentSensorLight
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_RestStation_C_UpdateContainmentSensorLight final
{
public:
	bool                                          SensorState;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_UpdateContainmentSensorLight) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_UpdateContainmentSensorLight");
static_assert(sizeof(INTERACT_RestStation_C_UpdateContainmentSensorLight) == 0x000068, "Wrong size on INTERACT_RestStation_C_UpdateContainmentSensorLight");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, SensorState) == 0x000000, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::SensorState' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, Temp_object_Variable) == 0x000008, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, Temp_bool_Variable) == 0x000018, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, Temp_float_Variable) == 0x00001C, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, Temp_float_Variable_1) == 0x000020, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, Temp_bool_Variable_1) == 0x000024, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, Temp_float_Variable_2) == 0x000028, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, Temp_float_Variable_3) == 0x00002C, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, CallFunc_ComponentOverlapActors_OutActors) == 0x000040, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, CallFunc_ComponentOverlapActors_ReturnValue) == 0x000050, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, K2Node_Select_Default) == 0x000060, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateContainmentSensorLight, K2Node_Select_Default_1) == 0x000064, "Member 'INTERACT_RestStation_C_UpdateContainmentSensorLight::K2Node_Select_Default_1' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.UpdateOverheadLight
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_RestStation_C_UpdateOverheadLight final
{
public:
	bool                                          OpenState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldLightBeEnabled;                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_UpdateOverheadLight) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_UpdateOverheadLight");
static_assert(sizeof(INTERACT_RestStation_C_UpdateOverheadLight) == 0x000040, "Wrong size on INTERACT_RestStation_C_UpdateOverheadLight");
static_assert(offsetof(INTERACT_RestStation_C_UpdateOverheadLight, OpenState) == 0x000000, "Member 'INTERACT_RestStation_C_UpdateOverheadLight::OpenState' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateOverheadLight, ShouldLightBeEnabled) == 0x000001, "Member 'INTERACT_RestStation_C_UpdateOverheadLight::ShouldLightBeEnabled' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateOverheadLight, Temp_object_Variable) == 0x000008, "Member 'INTERACT_RestStation_C_UpdateOverheadLight::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateOverheadLight, Temp_bool_Variable) == 0x000018, "Member 'INTERACT_RestStation_C_UpdateOverheadLight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateOverheadLight, Temp_float_Variable) == 0x00001C, "Member 'INTERACT_RestStation_C_UpdateOverheadLight::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateOverheadLight, Temp_float_Variable_1) == 0x000020, "Member 'INTERACT_RestStation_C_UpdateOverheadLight::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateOverheadLight, CallFunc_ComponentOverlapActors_OutActors) == 0x000028, "Member 'INTERACT_RestStation_C_UpdateOverheadLight::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateOverheadLight, CallFunc_ComponentOverlapActors_ReturnValue) == 0x000038, "Member 'INTERACT_RestStation_C_UpdateOverheadLight::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateOverheadLight, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'INTERACT_RestStation_C_UpdateOverheadLight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateOverheadLight, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'INTERACT_RestStation_C_UpdateOverheadLight::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateOverheadLight, CallFunc_BooleanOR_ReturnValue) == 0x00003B, "Member 'INTERACT_RestStation_C_UpdateOverheadLight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateOverheadLight, K2Node_Select_Default) == 0x00003C, "Member 'INTERACT_RestStation_C_UpdateOverheadLight::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.UpdateAuxiliaryLights
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_RestStation_C_UpdateAuxiliaryLights final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_UpdateAuxiliaryLights) == 0x000004, "Wrong alignment on INTERACT_RestStation_C_UpdateAuxiliaryLights");
static_assert(sizeof(INTERACT_RestStation_C_UpdateAuxiliaryLights) == 0x000010, "Wrong size on INTERACT_RestStation_C_UpdateAuxiliaryLights");
static_assert(offsetof(INTERACT_RestStation_C_UpdateAuxiliaryLights, Temp_bool_Variable) == 0x000000, "Member 'INTERACT_RestStation_C_UpdateAuxiliaryLights::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateAuxiliaryLights, Temp_float_Variable) == 0x000004, "Member 'INTERACT_RestStation_C_UpdateAuxiliaryLights::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateAuxiliaryLights, Temp_float_Variable_1) == 0x000008, "Member 'INTERACT_RestStation_C_UpdateAuxiliaryLights::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateAuxiliaryLights, K2Node_Select_Default) == 0x00000C, "Member 'INTERACT_RestStation_C_UpdateAuxiliaryLights::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.UpdateEmissiveStrength
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_RestStation_C_UpdateEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_RestStation_C_UpdateEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_RestStation_C_UpdateEmissiveStrength");
static_assert(sizeof(INTERACT_RestStation_C_UpdateEmissiveStrength) == 0x000008, "Wrong size on INTERACT_RestStation_C_UpdateEmissiveStrength");
static_assert(offsetof(INTERACT_RestStation_C_UpdateEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_RestStation_C_UpdateEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'INTERACT_RestStation_C_UpdateEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.TryOpenDoorWhileClosing
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_RestStation_C_TryOpenDoorWhileClosing final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_1;     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_GetPosition_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_TryOpenDoorWhileClosing) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_TryOpenDoorWhileClosing");
static_assert(sizeof(INTERACT_RestStation_C_TryOpenDoorWhileClosing) == 0x000038, "Wrong size on INTERACT_RestStation_C_TryOpenDoorWhileClosing");
static_assert(offsetof(INTERACT_RestStation_C_TryOpenDoorWhileClosing, Result) == 0x000000, "Member 'INTERACT_RestStation_C_TryOpenDoorWhileClosing::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryOpenDoorWhileClosing, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000001, "Member 'INTERACT_RestStation_C_TryOpenDoorWhileClosing::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryOpenDoorWhileClosing, CallFunc_K2_IsTimerActiveHandle_ReturnValue_1) == 0x000002, "Member 'INTERACT_RestStation_C_TryOpenDoorWhileClosing::CallFunc_K2_IsTimerActiveHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryOpenDoorWhileClosing, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'INTERACT_RestStation_C_TryOpenDoorWhileClosing::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryOpenDoorWhileClosing, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_RestStation_C_TryOpenDoorWhileClosing::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryOpenDoorWhileClosing, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000010, "Member 'INTERACT_RestStation_C_TryOpenDoorWhileClosing::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryOpenDoorWhileClosing, CallFunc_Montage_GetPosition_ReturnValue) == 0x000018, "Member 'INTERACT_RestStation_C_TryOpenDoorWhileClosing::CallFunc_Montage_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryOpenDoorWhileClosing, CallFunc_GetPlayLength_ReturnValue) == 0x00001C, "Member 'INTERACT_RestStation_C_TryOpenDoorWhileClosing::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryOpenDoorWhileClosing, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_RestStation_C_TryOpenDoorWhileClosing::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryOpenDoorWhileClosing, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000028, "Member 'INTERACT_RestStation_C_TryOpenDoorWhileClosing::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_TryOpenDoorWhileClosing, CallFunc_Montage_IsPlaying_ReturnValue) == 0x000030, "Member 'INTERACT_RestStation_C_TryOpenDoorWhileClosing::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.EVENT_OnDisableAttribChanged
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_RestStation_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveScale;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_RestStation_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_RestStation_C_EVENT_OnDisableAttribChanged) == 0x000018, "Wrong size on INTERACT_RestStation_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_RestStation_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_RestStation_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_RestStation_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_EVENT_OnDisableAttribChanged, EmissiveScale) == 0x000008, "Member 'INTERACT_RestStation_C_EVENT_OnDisableAttribChanged::EmissiveScale' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_RestStation_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_EVENT_OnDisableAttribChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_RestStation_C_EVENT_OnDisableAttribChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_EVENT_OnDisableAttribChanged, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000011, "Member 'INTERACT_RestStation_C_EVENT_OnDisableAttribChanged::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_EVENT_OnDisableAttribChanged, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000012, "Member 'INTERACT_RestStation_C_EVENT_OnDisableAttribChanged::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_EVENT_OnDisableAttribChanged, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000013, "Member 'INTERACT_RestStation_C_EVENT_OnDisableAttribChanged::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_EVENT_OnDisableAttribChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000014, "Member 'INTERACT_RestStation_C_EVENT_OnDisableAttribChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.EVENT_OnDoorMontageEnded
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_RestStation_C_EVENT_OnDoorMontageEnded final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_EVENT_OnDoorMontageEnded) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_EVENT_OnDoorMontageEnded");
static_assert(sizeof(INTERACT_RestStation_C_EVENT_OnDoorMontageEnded) == 0x000010, "Wrong size on INTERACT_RestStation_C_EVENT_OnDoorMontageEnded");
static_assert(offsetof(INTERACT_RestStation_C_EVENT_OnDoorMontageEnded, Montage) == 0x000000, "Member 'INTERACT_RestStation_C_EVENT_OnDoorMontageEnded::Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_EVENT_OnDoorMontageEnded, bInterrupted) == 0x000008, "Member 'INTERACT_RestStation_C_EVENT_OnDoorMontageEnded::bInterrupted' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.UpdateRestStationVisibility
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_RestStation_C_UpdateRestStationVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_UpdateRestStationVisibility) == 0x000001, "Wrong alignment on INTERACT_RestStation_C_UpdateRestStationVisibility");
static_assert(sizeof(INTERACT_RestStation_C_UpdateRestStationVisibility) == 0x000004, "Wrong size on INTERACT_RestStation_C_UpdateRestStationVisibility");
static_assert(offsetof(INTERACT_RestStation_C_UpdateRestStationVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_RestStation_C_UpdateRestStationVisibility::VisibilityState' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateRestStationVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'INTERACT_RestStation_C_UpdateRestStationVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateRestStationVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'INTERACT_RestStation_C_UpdateRestStationVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_UpdateRestStationVisibility, CallFunc_BooleanAND_ReturnValue_1) == 0x000003, "Member 'INTERACT_RestStation_C_UpdateRestStationVisibility::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.IsHiddenInteractablePrimitive
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_RestStation_C_IsHiddenInteractablePrimitive final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_IsHiddenInteractablePrimitive) == 0x000008, "Wrong alignment on INTERACT_RestStation_C_IsHiddenInteractablePrimitive");
static_assert(sizeof(INTERACT_RestStation_C_IsHiddenInteractablePrimitive) == 0x000018, "Wrong size on INTERACT_RestStation_C_IsHiddenInteractablePrimitive");
static_assert(offsetof(INTERACT_RestStation_C_IsHiddenInteractablePrimitive, Character) == 0x000000, "Member 'INTERACT_RestStation_C_IsHiddenInteractablePrimitive::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_IsHiddenInteractablePrimitive, CursorPrimitive) == 0x000008, "Member 'INTERACT_RestStation_C_IsHiddenInteractablePrimitive::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_IsHiddenInteractablePrimitive, Result) == 0x000010, "Member 'INTERACT_RestStation_C_IsHiddenInteractablePrimitive::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_IsHiddenInteractablePrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'INTERACT_RestStation_C_IsHiddenInteractablePrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function INTERACT_RestStation.INTERACT_RestStation_C.IsRestStationFunctional
// 0x000C (0x000C - 0x0000)
struct INTERACT_RestStation_C_IsRestStationFunctional final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_RestStation_C_IsRestStationFunctional) == 0x000004, "Wrong alignment on INTERACT_RestStation_C_IsRestStationFunctional");
static_assert(sizeof(INTERACT_RestStation_C_IsRestStationFunctional) == 0x00000C, "Wrong size on INTERACT_RestStation_C_IsRestStationFunctional");
static_assert(offsetof(INTERACT_RestStation_C_IsRestStationFunctional, Result) == 0x000000, "Member 'INTERACT_RestStation_C_IsRestStationFunctional::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_IsRestStationFunctional, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_RestStation_C_IsRestStationFunctional::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_RestStation_C_IsRestStationFunctional, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_RestStation_C_IsRestStationFunctional::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

}


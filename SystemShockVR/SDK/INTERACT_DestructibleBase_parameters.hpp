#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_DestructibleBase

#include "Basic.hpp"

#include "AttributeSystem_structs.hpp"
#include "ENUM_EnemyType_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "CoreGame_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.ExecuteUbergraph_INTERACT_DestructibleBase
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_DestructibleBase_C_ExecuteUbergraph_INTERACT_DestructibleBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DestructibleBase_C_ExecuteUbergraph_INTERACT_DestructibleBase) == 0x000004, "Wrong alignment on INTERACT_DestructibleBase_C_ExecuteUbergraph_INTERACT_DestructibleBase");
static_assert(sizeof(INTERACT_DestructibleBase_C_ExecuteUbergraph_INTERACT_DestructibleBase) == 0x000004, "Wrong size on INTERACT_DestructibleBase_C_ExecuteUbergraph_INTERACT_DestructibleBase");
static_assert(offsetof(INTERACT_DestructibleBase_C_ExecuteUbergraph_INTERACT_DestructibleBase, EntryPoint) == 0x000000, "Member 'INTERACT_DestructibleBase_C_ExecuteUbergraph_INTERACT_DestructibleBase::EntryPoint' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.InitializeDestructible
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_DestructibleBase_C_InitializeDestructible final
{
public:
	bool                                          CallFunc_IsDead_Result;                            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAttribHandler_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateDeathSettings_Result;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_InitializeDestructible) == 0x000001, "Wrong alignment on INTERACT_DestructibleBase_C_InitializeDestructible");
static_assert(sizeof(INTERACT_DestructibleBase_C_InitializeDestructible) == 0x000004, "Wrong size on INTERACT_DestructibleBase_C_InitializeDestructible");
static_assert(offsetof(INTERACT_DestructibleBase_C_InitializeDestructible, CallFunc_IsDead_Result) == 0x000000, "Member 'INTERACT_DestructibleBase_C_InitializeDestructible::CallFunc_IsDead_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_InitializeDestructible, CallFunc_HasAttribHandler_ReturnValue) == 0x000001, "Member 'INTERACT_DestructibleBase_C_InitializeDestructible::CallFunc_HasAttribHandler_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_InitializeDestructible, CallFunc_UpdateDeathSettings_Result) == 0x000002, "Member 'INTERACT_DestructibleBase_C_InitializeDestructible::CallFunc_UpdateDeathSettings_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_InitializeDestructible, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'INTERACT_DestructibleBase_C_InitializeDestructible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.InitializeAttributes
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_DestructibleBase_C_InitializeAttributes final
{
public:
	bool                                          GrantDefaultAttribs;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDefaultAttribute>              AttribOverrides;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	TArray<struct FDefaultAttribute>              CallFunc_GetDefaultOverrideAttributes_Result;      // 0x0018(0x0010)(ReferenceParm)
	TArray<struct FEnumHandle>                    K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_InitializeAttributes) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_InitializeAttributes");
static_assert(sizeof(INTERACT_DestructibleBase_C_InitializeAttributes) == 0x000048, "Wrong size on INTERACT_DestructibleBase_C_InitializeAttributes");
static_assert(offsetof(INTERACT_DestructibleBase_C_InitializeAttributes, GrantDefaultAttribs) == 0x000000, "Member 'INTERACT_DestructibleBase_C_InitializeAttributes::GrantDefaultAttribs' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_InitializeAttributes, AttribOverrides) == 0x000008, "Member 'INTERACT_DestructibleBase_C_InitializeAttributes::AttribOverrides' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_InitializeAttributes, CallFunc_GetDefaultOverrideAttributes_Result) == 0x000018, "Member 'INTERACT_DestructibleBase_C_InitializeAttributes::CallFunc_GetDefaultOverrideAttributes_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_InitializeAttributes, K2Node_MakeArray_Array) == 0x000028, "Member 'INTERACT_DestructibleBase_C_InitializeAttributes::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'INTERACT_DestructibleBase_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.IsAlive
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_DestructibleBase_C_IsAlive final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_Result;                            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_IsAlive) == 0x000001, "Wrong alignment on INTERACT_DestructibleBase_C_IsAlive");
static_assert(sizeof(INTERACT_DestructibleBase_C_IsAlive) == 0x000003, "Wrong size on INTERACT_DestructibleBase_C_IsAlive");
static_assert(offsetof(INTERACT_DestructibleBase_C_IsAlive, Result) == 0x000000, "Member 'INTERACT_DestructibleBase_C_IsAlive::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_IsAlive, CallFunc_IsDead_Result) == 0x000001, "Member 'INTERACT_DestructibleBase_C_IsAlive::CallFunc_IsDead_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_IsAlive, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'INTERACT_DestructibleBase_C_IsAlive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.IsDead
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_DestructibleBase_C_IsDead final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttributeDef*                          CallFunc_GetHealthAttrib_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAttribHandler_ReturnValue;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_IsDead) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_IsDead");
static_assert(sizeof(INTERACT_DestructibleBase_C_IsDead) == 0x000018, "Wrong size on INTERACT_DestructibleBase_C_IsDead");
static_assert(offsetof(INTERACT_DestructibleBase_C_IsDead, Result) == 0x000000, "Member 'INTERACT_DestructibleBase_C_IsDead::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_IsDead, CallFunc_GetHealthAttrib_ReturnValue) == 0x000008, "Member 'INTERACT_DestructibleBase_C_IsDead::CallFunc_GetHealthAttrib_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_IsDead, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_DestructibleBase_C_IsDead::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_IsDead, CallFunc_HasAttribHandler_ReturnValue) == 0x000014, "Member 'INTERACT_DestructibleBase_C_IsDead::CallFunc_HasAttribHandler_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_IsDead, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000015, "Member 'INTERACT_DestructibleBase_C_IsDead::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.OnTakeDamage
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_DestructibleBase_C_OnTakeDamage final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                UserParams;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_OnTakeDamage) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_OnTakeDamage");
static_assert(sizeof(INTERACT_DestructibleBase_C_OnTakeDamage) == 0x000040, "Wrong size on INTERACT_DestructibleBase_C_OnTakeDamage");
static_assert(offsetof(INTERACT_DestructibleBase_C_OnTakeDamage, OtherActor) == 0x000000, "Member 'INTERACT_DestructibleBase_C_OnTakeDamage::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_OnTakeDamage, DamageInstance) == 0x000008, "Member 'INTERACT_DestructibleBase_C_OnTakeDamage::DamageInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_OnTakeDamage, UserParams) == 0x000030, "Member 'INTERACT_DestructibleBase_C_OnTakeDamage::UserParams' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_OnTakeDamage, Result) == 0x000038, "Member 'INTERACT_DestructibleBase_C_OnTakeDamage::Result' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.OnDeath
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_DestructibleBase_C_OnDeath final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAttributeDef*>                  Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_UpdateDeathSettings_Result;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_OnDeath) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_OnDeath");
static_assert(sizeof(INTERACT_DestructibleBase_C_OnDeath) == 0x000038, "Wrong size on INTERACT_DestructibleBase_C_OnDeath");
static_assert(offsetof(INTERACT_DestructibleBase_C_OnDeath, SourceActor) == 0x000000, "Member 'INTERACT_DestructibleBase_C_OnDeath::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_OnDeath, Result) == 0x000008, "Member 'INTERACT_DestructibleBase_C_OnDeath::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_OnDeath, Temp_object_Variable) == 0x000010, "Member 'INTERACT_DestructibleBase_C_OnDeath::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_OnDeath, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'INTERACT_DestructibleBase_C_OnDeath::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_OnDeath, CallFunc_UpdateDeathSettings_Result) == 0x000030, "Member 'INTERACT_DestructibleBase_C_OnDeath::CallFunc_UpdateDeathSettings_Result' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.EVENT_OnDamageReceived
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_DestructibleBase_C_EVENT_OnDamageReceived final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                UserParams;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnDeath_Result;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnTakeDamage_Result;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_EVENT_OnDamageReceived) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_EVENT_OnDamageReceived");
static_assert(sizeof(INTERACT_DestructibleBase_C_EVENT_OnDamageReceived) == 0x000048, "Wrong size on INTERACT_DestructibleBase_C_EVENT_OnDamageReceived");
static_assert(offsetof(INTERACT_DestructibleBase_C_EVENT_OnDamageReceived, OtherActor) == 0x000000, "Member 'INTERACT_DestructibleBase_C_EVENT_OnDamageReceived::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_EVENT_OnDamageReceived, DamageInstance) == 0x000008, "Member 'INTERACT_DestructibleBase_C_EVENT_OnDamageReceived::DamageInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_EVENT_OnDamageReceived, UserParams) == 0x000030, "Member 'INTERACT_DestructibleBase_C_EVENT_OnDamageReceived::UserParams' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_EVENT_OnDamageReceived, CallFunc_OnDeath_Result) == 0x000038, "Member 'INTERACT_DestructibleBase_C_EVENT_OnDamageReceived::CallFunc_OnDeath_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_EVENT_OnDamageReceived, CallFunc_OnTakeDamage_Result) == 0x000039, "Member 'INTERACT_DestructibleBase_C_EVENT_OnDamageReceived::CallFunc_OnTakeDamage_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_EVENT_OnDamageReceived, CallFunc_GetAttribValue_ReturnValue) == 0x00003C, "Member 'INTERACT_DestructibleBase_C_EVENT_OnDamageReceived::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_EVENT_OnDamageReceived, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'INTERACT_DestructibleBase_C_EVENT_OnDamageReceived::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.UpdateDeathSettings
// 0x0070 (0x0070 - 0x0000)
struct INTERACT_DestructibleBase_C_UpdateDeathSettings final
{
public:
	bool                                          DuringBeginPlay;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
};
static_assert(alignof(INTERACT_DestructibleBase_C_UpdateDeathSettings) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_UpdateDeathSettings");
static_assert(sizeof(INTERACT_DestructibleBase_C_UpdateDeathSettings) == 0x000070, "Wrong size on INTERACT_DestructibleBase_C_UpdateDeathSettings");
static_assert(offsetof(INTERACT_DestructibleBase_C_UpdateDeathSettings, DuringBeginPlay) == 0x000000, "Member 'INTERACT_DestructibleBase_C_UpdateDeathSettings::DuringBeginPlay' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_UpdateDeathSettings, Result) == 0x000001, "Member 'INTERACT_DestructibleBase_C_UpdateDeathSettings::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_UpdateDeathSettings, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'INTERACT_DestructibleBase_C_UpdateDeathSettings::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_UpdateDeathSettings, K2Node_MakeArray_Array) == 0x000048, "Member 'INTERACT_DestructibleBase_C_UpdateDeathSettings::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_UpdateDeathSettings, CallFunc_Format_ReturnValue) == 0x000058, "Member 'INTERACT_DestructibleBase_C_UpdateDeathSettings::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.TryInteract
// 0x0078 (0x0078 - 0x0000)
struct INTERACT_DestructibleBase_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0038(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0058(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DestructibleBase_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_TryInteract");
static_assert(sizeof(INTERACT_DestructibleBase_C_TryInteract) == 0x000078, "Wrong size on INTERACT_DestructibleBase_C_TryInteract");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_DestructibleBase_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_DestructibleBase_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_DestructibleBase_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_DestructibleBase_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000038, "Member 'INTERACT_DestructibleBase_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x000058, "Member 'INTERACT_DestructibleBase_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.TryCompleteOnDestroyGameEvent
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent");
static_assert(sizeof(INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent) == 0x000020, "Wrong size on INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent, GameInstance) == 0x000000, "Member 'INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent, CallFunc_NotEqual_NameName_ReturnValue) == 0x000019, "Member 'INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent, CallFunc_IsValid_ReturnValue) == 0x00001A, "Member 'INTERACT_DestructibleBase_C_TryCompleteOnDestroyGameEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.TryCompleteOnDamageGameEvent
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent");
static_assert(sizeof(INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent) == 0x000028, "Wrong size on INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent, GameInstance) == 0x000000, "Member 'INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent, CallFunc_NotEqual_NameName_ReturnValue) == 0x000010, "Member 'INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'INTERACT_DestructibleBase_C_TryCompleteOnDamageGameEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.CanInteractBeDestroyed
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_DestructibleBase_C_CanInteractBeDestroyed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_CanInteractBeDestroyed) == 0x000001, "Wrong alignment on INTERACT_DestructibleBase_C_CanInteractBeDestroyed");
static_assert(sizeof(INTERACT_DestructibleBase_C_CanInteractBeDestroyed) == 0x000001, "Wrong size on INTERACT_DestructibleBase_C_CanInteractBeDestroyed");
static_assert(offsetof(INTERACT_DestructibleBase_C_CanInteractBeDestroyed, Result) == 0x000000, "Member 'INTERACT_DestructibleBase_C_CanInteractBeDestroyed::Result' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.GetInteractDestroyed
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_DestructibleBase_C_GetInteractDestroyed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDead_Result;                            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_GetInteractDestroyed) == 0x000001, "Wrong alignment on INTERACT_DestructibleBase_C_GetInteractDestroyed");
static_assert(sizeof(INTERACT_DestructibleBase_C_GetInteractDestroyed) == 0x000002, "Wrong size on INTERACT_DestructibleBase_C_GetInteractDestroyed");
static_assert(offsetof(INTERACT_DestructibleBase_C_GetInteractDestroyed, Result) == 0x000000, "Member 'INTERACT_DestructibleBase_C_GetInteractDestroyed::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_GetInteractDestroyed, CallFunc_IsDead_Result) == 0x000001, "Member 'INTERACT_DestructibleBase_C_GetInteractDestroyed::CallFunc_IsDead_Result' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.IsTargetIdentifiable
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_DestructibleBase_C_IsTargetIdentifiable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_IsTargetIdentifiable) == 0x000001, "Wrong alignment on INTERACT_DestructibleBase_C_IsTargetIdentifiable");
static_assert(sizeof(INTERACT_DestructibleBase_C_IsTargetIdentifiable) == 0x000001, "Wrong size on INTERACT_DestructibleBase_C_IsTargetIdentifiable");
static_assert(offsetof(INTERACT_DestructibleBase_C_IsTargetIdentifiable, Result) == 0x000000, "Member 'INTERACT_DestructibleBase_C_IsTargetIdentifiable::Result' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.GetArmorAugmentationPercentage
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_DestructibleBase_C_GetArmorAugmentationPercentage final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DestructibleBase_C_GetArmorAugmentationPercentage) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_GetArmorAugmentationPercentage");
static_assert(sizeof(INTERACT_DestructibleBase_C_GetArmorAugmentationPercentage) == 0x000010, "Wrong size on INTERACT_DestructibleBase_C_GetArmorAugmentationPercentage");
static_assert(offsetof(INTERACT_DestructibleBase_C_GetArmorAugmentationPercentage, ImpactData) == 0x000000, "Member 'INTERACT_DestructibleBase_C_GetArmorAugmentationPercentage::ImpactData' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_GetArmorAugmentationPercentage, Result) == 0x000008, "Member 'INTERACT_DestructibleBase_C_GetArmorAugmentationPercentage::Result' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.CanHackDestructible
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_DestructibleBase_C_CanHackDestructible final
{
public:
	class APAWN_SystemShockCharacter_C*           SourceCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_DestructibleBase_C_CanHackDestructible) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_CanHackDestructible");
static_assert(sizeof(INTERACT_DestructibleBase_C_CanHackDestructible) == 0x000010, "Wrong size on INTERACT_DestructibleBase_C_CanHackDestructible");
static_assert(offsetof(INTERACT_DestructibleBase_C_CanHackDestructible, SourceCharacter) == 0x000000, "Member 'INTERACT_DestructibleBase_C_CanHackDestructible::SourceCharacter' has a wrong offset!");
static_assert(offsetof(INTERACT_DestructibleBase_C_CanHackDestructible, Result) == 0x000008, "Member 'INTERACT_DestructibleBase_C_CanHackDestructible::Result' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.GetThreatLevel
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_DestructibleBase_C_GetThreatLevel final
{
public:
	int32                                         ThreatLevel;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DestructibleBase_C_GetThreatLevel) == 0x000004, "Wrong alignment on INTERACT_DestructibleBase_C_GetThreatLevel");
static_assert(sizeof(INTERACT_DestructibleBase_C_GetThreatLevel) == 0x000004, "Wrong size on INTERACT_DestructibleBase_C_GetThreatLevel");
static_assert(offsetof(INTERACT_DestructibleBase_C_GetThreatLevel, ThreatLevel) == 0x000000, "Member 'INTERACT_DestructibleBase_C_GetThreatLevel::ThreatLevel' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.GetEnemyTypeForTargeting
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_DestructibleBase_C_GetEnemyTypeForTargeting final
{
public:
	ENUM_EnemyType                                Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DestructibleBase_C_GetEnemyTypeForTargeting) == 0x000001, "Wrong alignment on INTERACT_DestructibleBase_C_GetEnemyTypeForTargeting");
static_assert(sizeof(INTERACT_DestructibleBase_C_GetEnemyTypeForTargeting) == 0x000001, "Wrong size on INTERACT_DestructibleBase_C_GetEnemyTypeForTargeting");
static_assert(offsetof(INTERACT_DestructibleBase_C_GetEnemyTypeForTargeting, Result) == 0x000000, "Member 'INTERACT_DestructibleBase_C_GetEnemyTypeForTargeting::Result' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.GetDefaultOverrideAttributes
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_DestructibleBase_C_GetDefaultOverrideAttributes final
{
public:
	TArray<struct FDefaultAttribute>              Result;                                            // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(INTERACT_DestructibleBase_C_GetDefaultOverrideAttributes) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_GetDefaultOverrideAttributes");
static_assert(sizeof(INTERACT_DestructibleBase_C_GetDefaultOverrideAttributes) == 0x000010, "Wrong size on INTERACT_DestructibleBase_C_GetDefaultOverrideAttributes");
static_assert(offsetof(INTERACT_DestructibleBase_C_GetDefaultOverrideAttributes, Result) == 0x000000, "Member 'INTERACT_DestructibleBase_C_GetDefaultOverrideAttributes::Result' has a wrong offset!");

// Function INTERACT_DestructibleBase.INTERACT_DestructibleBase_C.GetDetectionComponent
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_DestructibleBase_C_GetDetectionComponent final
{
public:
	class UCOMP_EnemyDetection_C*                 Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_DestructibleBase_C_GetDetectionComponent) == 0x000008, "Wrong alignment on INTERACT_DestructibleBase_C_GetDetectionComponent");
static_assert(sizeof(INTERACT_DestructibleBase_C_GetDetectionComponent) == 0x000008, "Wrong size on INTERACT_DestructibleBase_C_GetDetectionComponent");
static_assert(offsetof(INTERACT_DestructibleBase_C_GetDetectionComponent, Result) == 0x000000, "Member 'INTERACT_DestructibleBase_C_GetDetectionComponent::Result' has a wrong offset!");

}


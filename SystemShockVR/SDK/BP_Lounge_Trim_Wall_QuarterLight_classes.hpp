#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lounge_Trim_Wall_QuarterLight

#include "Basic.hpp"

#include "INTERACT_BreakableSharedLightPanel_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lounge_Trim_Wall_QuarterLight.BP_Lounge_Trim_Wall_QuarterLight_C
// 0x0060 (0x04A0 - 0x0440)
class ABP_Lounge_Trim_Wall_QuarterLight_C final : public AINTERACT_BreakableSharedLightPanel_C
{
public:
	class UStaticMeshComponent*                   LightGlass1;                                       // 0x0440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass9;                                            // 0x0448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass8;                                            // 0x0450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass7;                                            // 0x0458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass6;                                            // 0x0460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass1;                                            // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass5;                                            // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass4;                                            // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass3;                                            // 0x0480(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Glass2;                                            // 0x0488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BrokenGlass;                                       // 0x0490(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x0498(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lounge_Trim_Wall_QuarterLight_C">();
	}
	static class ABP_Lounge_Trim_Wall_QuarterLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lounge_Trim_Wall_QuarterLight_C>();
	}
};
static_assert(alignof(ABP_Lounge_Trim_Wall_QuarterLight_C) == 0x000008, "Wrong alignment on ABP_Lounge_Trim_Wall_QuarterLight_C");
static_assert(sizeof(ABP_Lounge_Trim_Wall_QuarterLight_C) == 0x0004A0, "Wrong size on ABP_Lounge_Trim_Wall_QuarterLight_C");
static_assert(offsetof(ABP_Lounge_Trim_Wall_QuarterLight_C, LightGlass1) == 0x000440, "Member 'ABP_Lounge_Trim_Wall_QuarterLight_C::LightGlass1' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Wall_QuarterLight_C, Glass9) == 0x000448, "Member 'ABP_Lounge_Trim_Wall_QuarterLight_C::Glass9' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Wall_QuarterLight_C, Glass8) == 0x000450, "Member 'ABP_Lounge_Trim_Wall_QuarterLight_C::Glass8' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Wall_QuarterLight_C, Glass7) == 0x000458, "Member 'ABP_Lounge_Trim_Wall_QuarterLight_C::Glass7' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Wall_QuarterLight_C, Glass6) == 0x000460, "Member 'ABP_Lounge_Trim_Wall_QuarterLight_C::Glass6' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Wall_QuarterLight_C, Glass1) == 0x000468, "Member 'ABP_Lounge_Trim_Wall_QuarterLight_C::Glass1' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Wall_QuarterLight_C, Glass5) == 0x000470, "Member 'ABP_Lounge_Trim_Wall_QuarterLight_C::Glass5' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Wall_QuarterLight_C, Glass4) == 0x000478, "Member 'ABP_Lounge_Trim_Wall_QuarterLight_C::Glass4' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Wall_QuarterLight_C, Glass3) == 0x000480, "Member 'ABP_Lounge_Trim_Wall_QuarterLight_C::Glass3' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Wall_QuarterLight_C, Glass2) == 0x000488, "Member 'ABP_Lounge_Trim_Wall_QuarterLight_C::Glass2' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Wall_QuarterLight_C, BrokenGlass) == 0x000490, "Member 'ABP_Lounge_Trim_Wall_QuarterLight_C::BrokenGlass' has a wrong offset!");
static_assert(offsetof(ABP_Lounge_Trim_Wall_QuarterLight_C, SpotLight) == 0x000498, "Member 'ABP_Lounge_Trim_Wall_QuarterLight_C::SpotLight' has a wrong offset!");

}


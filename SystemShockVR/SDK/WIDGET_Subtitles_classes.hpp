#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Subtitles

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_SubtitleParseMode_structs.hpp"
#include "STRUCT_MediaObject_structs.hpp"
#include "STRUCT_SubtitleToDisplay_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "ENUM_HackerGender_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_Subtitles.WIDGET_Subtitles_C
// 0x0110 (0x0370 - 0x0260)
class UWIDGET_Subtitles_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ANIM_ShowNextLine;                                 // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANIM_RevealSubtitles;                              // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Background;                                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DebugText;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMAGE_SpeakerBacking;                              // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           SubtitleContainer;                                 // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_Speaker;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXTMESH_SubtitleDisplayLine;                      // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_MediaDisplay_C*                 MediaDisplay;                                      // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MediaObject                    MediaData;                                         // 0x02B0(0x0080)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FSTRUCT_SubtitleToDisplay>      SubtitlesToDisplay;                                // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         CurrentSubtitleIndex;                              // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentSubtitleTimeRemaining;                      // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSubtitlesActive;                                 // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsSubtitleIndefinite;                              // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsInterrupted;                                     // 0x034A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34B[0x5];                                      // 0x034B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LastSpeaker;                                       // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         PlayerHUD;                                         // 0x0360(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WIDGET_Subtitles(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void SequenceEvent_0();
	void InitilalizeSubtitleWidget(class UWIDGET_MediaDisplay_C* MediaDisplay_0, TScriptInterface<class IINTERF_HUD_C> Player_HUD);
	void ClearSubtitles();
	void SetSubtitlesEnabled(bool State);
	void DisplayNewSubtitles(const class FString& ContextString, float StartTime);
	void DisplaySubtitleFromMediaItemClass(class UClass* MediaItemClass, float StartTime);
	void DisplaySubtitleFromCutscene(class FName SubtitleRowName);
	void DisplaySubtitleFromAtmospherics(class FName SubtitleRowName, float StartTime);
	void DisplaySubtitleFromTaunt(const struct FSTRUCT_MediaObject& Media_Data, float StartTime);
	void DisplaySubtitleFromDialogueCaption(const struct FSTRUCT_DialogueCaptionObject& DialogueCaption, float StartTime);
	void TryAdvanceSubtitlesToStartTime(float StartTime, bool* Result, float* StartTimeOnLine);
	void ParseTranscriptionText(const class FString& ContextString);
	void CreateSubtitleLineStruct(const class FString& BuiltString, const class FString& BuiltTime, const class FString& InterruptSpeaker);
	void UpdateSpeakerText();
	void TryUpdateSubtitleText(float StartTimeOnLine, bool* Result);
	void RevealSubtitles();
	void HideSubtitles();
	void ThrowParseError(const class FString& ContextString);
	void ThrowMissingSubtitlesError(const class FString& ContextString);
	void ThrowMissingSpeakerError();
	void TryHideSubtitlesForSoundCue(class USoundCue* SoundCue, bool* Result);
	void TryHideSubtitlesForMediaHandle(const struct FDataTableRowHandle& MediaHandle, bool* Result);
	void SetLineTransition(float DeltaTime);
	void TickSubtitles(float DeltaTime);
	void IsDisplayingSubtitles(bool* Result);
	void ShouldDisplaySubtitles(bool* Result);
	void SequenceEvent__ENTRYPOINTWIDGET_Subtitles_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_Subtitles_C">();
	}
	static class UWIDGET_Subtitles_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_Subtitles_C>();
	}
};
static_assert(alignof(UWIDGET_Subtitles_C) == 0x000008, "Wrong alignment on UWIDGET_Subtitles_C");
static_assert(sizeof(UWIDGET_Subtitles_C) == 0x000370, "Wrong size on UWIDGET_Subtitles_C");
static_assert(offsetof(UWIDGET_Subtitles_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_Subtitles_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, ANIM_ShowNextLine) == 0x000268, "Member 'UWIDGET_Subtitles_C::ANIM_ShowNextLine' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, ANIM_RevealSubtitles) == 0x000270, "Member 'UWIDGET_Subtitles_C::ANIM_RevealSubtitles' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, Background) == 0x000278, "Member 'UWIDGET_Subtitles_C::Background' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, DebugText) == 0x000280, "Member 'UWIDGET_Subtitles_C::DebugText' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, IMAGE_SpeakerBacking) == 0x000288, "Member 'UWIDGET_Subtitles_C::IMAGE_SpeakerBacking' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, SubtitleContainer) == 0x000290, "Member 'UWIDGET_Subtitles_C::SubtitleContainer' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, TEXT_Speaker) == 0x000298, "Member 'UWIDGET_Subtitles_C::TEXT_Speaker' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, TEXTMESH_SubtitleDisplayLine) == 0x0002A0, "Member 'UWIDGET_Subtitles_C::TEXTMESH_SubtitleDisplayLine' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, MediaDisplay) == 0x0002A8, "Member 'UWIDGET_Subtitles_C::MediaDisplay' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, MediaData) == 0x0002B0, "Member 'UWIDGET_Subtitles_C::MediaData' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, SubtitlesToDisplay) == 0x000330, "Member 'UWIDGET_Subtitles_C::SubtitlesToDisplay' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, CurrentSubtitleIndex) == 0x000340, "Member 'UWIDGET_Subtitles_C::CurrentSubtitleIndex' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, CurrentSubtitleTimeRemaining) == 0x000344, "Member 'UWIDGET_Subtitles_C::CurrentSubtitleTimeRemaining' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, IsSubtitlesActive) == 0x000348, "Member 'UWIDGET_Subtitles_C::IsSubtitlesActive' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, IsSubtitleIndefinite) == 0x000349, "Member 'UWIDGET_Subtitles_C::IsSubtitleIndefinite' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, IsInterrupted) == 0x00034A, "Member 'UWIDGET_Subtitles_C::IsInterrupted' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, LastSpeaker) == 0x000350, "Member 'UWIDGET_Subtitles_C::LastSpeaker' has a wrong offset!");
static_assert(offsetof(UWIDGET_Subtitles_C, PlayerHUD) == 0x000360, "Member 'UWIDGET_Subtitles_C::PlayerHUD' has a wrong offset!");

}


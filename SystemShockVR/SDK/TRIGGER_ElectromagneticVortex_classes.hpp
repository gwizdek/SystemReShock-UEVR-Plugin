#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TRIGGER_ElectromagneticVortex

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C
// 0x0040 (0x0260 - 0x0220)
class ATRIGGER_ElectromagneticVortex_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MagneticImpulse;                                   // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VortexCreationTimestamp;                           // 0x0234(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VortexRadius;                                      // 0x0238(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VortexLifetime;                                    // 0x023C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentDamageTickCount;                            // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalElectricDamage;                               // 0x0244(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalMagneticDamage;                               // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxMagneticSlowPercent;                            // 0x024C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         VortexEffect;                                      // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VortexEffectComponent;                             // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TRIGGER_ElectromagneticVortex(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void InitializeElectromagneticVortex(float Impulse, float Radius, float LifeTime, int32 ElectricDamage, int32 MagneticDamage, int32 MagneticSlowPercent);
	void UpdateElectromagneticVortex(float DeltaTime);
	void TryTickElectromagneticDamage(float TotalElapsedTime);
	void TryCreateVortexEffects();
	bool ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0);
	bool ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms);
	bool ReceivePendingCharacterVelocity(const struct FVector& Velocity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TRIGGER_ElectromagneticVortex_C">();
	}
	static class ATRIGGER_ElectromagneticVortex_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATRIGGER_ElectromagneticVortex_C>();
	}
};
static_assert(alignof(ATRIGGER_ElectromagneticVortex_C) == 0x000008, "Wrong alignment on ATRIGGER_ElectromagneticVortex_C");
static_assert(sizeof(ATRIGGER_ElectromagneticVortex_C) == 0x000260, "Wrong size on ATRIGGER_ElectromagneticVortex_C");
static_assert(offsetof(ATRIGGER_ElectromagneticVortex_C, UberGraphFrame) == 0x000220, "Member 'ATRIGGER_ElectromagneticVortex_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATRIGGER_ElectromagneticVortex_C, DefaultSceneRoot) == 0x000228, "Member 'ATRIGGER_ElectromagneticVortex_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ATRIGGER_ElectromagneticVortex_C, MagneticImpulse) == 0x000230, "Member 'ATRIGGER_ElectromagneticVortex_C::MagneticImpulse' has a wrong offset!");
static_assert(offsetof(ATRIGGER_ElectromagneticVortex_C, VortexCreationTimestamp) == 0x000234, "Member 'ATRIGGER_ElectromagneticVortex_C::VortexCreationTimestamp' has a wrong offset!");
static_assert(offsetof(ATRIGGER_ElectromagneticVortex_C, VortexRadius) == 0x000238, "Member 'ATRIGGER_ElectromagneticVortex_C::VortexRadius' has a wrong offset!");
static_assert(offsetof(ATRIGGER_ElectromagneticVortex_C, VortexLifetime) == 0x00023C, "Member 'ATRIGGER_ElectromagneticVortex_C::VortexLifetime' has a wrong offset!");
static_assert(offsetof(ATRIGGER_ElectromagneticVortex_C, CurrentDamageTickCount) == 0x000240, "Member 'ATRIGGER_ElectromagneticVortex_C::CurrentDamageTickCount' has a wrong offset!");
static_assert(offsetof(ATRIGGER_ElectromagneticVortex_C, TotalElectricDamage) == 0x000244, "Member 'ATRIGGER_ElectromagneticVortex_C::TotalElectricDamage' has a wrong offset!");
static_assert(offsetof(ATRIGGER_ElectromagneticVortex_C, TotalMagneticDamage) == 0x000248, "Member 'ATRIGGER_ElectromagneticVortex_C::TotalMagneticDamage' has a wrong offset!");
static_assert(offsetof(ATRIGGER_ElectromagneticVortex_C, MaxMagneticSlowPercent) == 0x00024C, "Member 'ATRIGGER_ElectromagneticVortex_C::MaxMagneticSlowPercent' has a wrong offset!");
static_assert(offsetof(ATRIGGER_ElectromagneticVortex_C, VortexEffect) == 0x000250, "Member 'ATRIGGER_ElectromagneticVortex_C::VortexEffect' has a wrong offset!");
static_assert(offsetof(ATRIGGER_ElectromagneticVortex_C, VortexEffectComponent) == 0x000258, "Member 'ATRIGGER_ElectromagneticVortex_C::VortexEffectComponent' has a wrong offset!");

}


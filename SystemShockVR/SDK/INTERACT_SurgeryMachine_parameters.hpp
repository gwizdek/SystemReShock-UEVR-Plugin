#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_SurgeryMachine

#include "Basic.hpp"

#include "AttributeSystem_structs.hpp"
#include "ENUM_SurgeryMachineState_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_LeftRight_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ExecuteUbergraph_INTERACT_SurgeryMachine
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeIntoBlink;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine");
static_assert(sizeof(INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine) == 0x000030, "Wrong size on INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine, EntryPoint) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine, K2Node_CustomEvent_TimeIntoBlink) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine::K2Node_CustomEvent_TimeIntoBlink' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine, K2Node_ComponentBoundEvent_bVisibleState) == 0x000028, "Member 'INTERACT_SurgeryMachine_C_ExecuteUbergraph_INTERACT_SurgeryMachine::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_SurgeryMachine_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_SurgeryMachine_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_SurgeryMachine_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_SurgeryMachine_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_SurgeryMachine_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ButtonBlink
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_SurgeryMachine_C_ButtonBlink final
{
public:
	float                                         TimeIntoBlink;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_ButtonBlink) == 0x000004, "Wrong alignment on INTERACT_SurgeryMachine_C_ButtonBlink");
static_assert(sizeof(INTERACT_SurgeryMachine_C_ButtonBlink) == 0x000004, "Wrong size on INTERACT_SurgeryMachine_C_ButtonBlink");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ButtonBlink, TimeIntoBlink) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_ButtonBlink::TimeIntoBlink' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_SurgeryMachine_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_ReceiveTick) == 0x000004, "Wrong alignment on INTERACT_SurgeryMachine_C_ReceiveTick");
static_assert(sizeof(INTERACT_SurgeryMachine_C_ReceiveTick) == 0x000004, "Wrong size on INTERACT_SurgeryMachine_C_ReceiveTick");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_SurgeryMachine_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_GetTargetShape");
static_assert(sizeof(INTERACT_SurgeryMachine_C_GetTargetShape) == 0x000018, "Wrong size on INTERACT_SurgeryMachine_C_GetTargetShape");
static_assert(offsetof(INTERACT_SurgeryMachine_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000011, "Member 'INTERACT_SurgeryMachine_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.TryInteract
// 0x01F0 (0x01F0 - 0x0000)
struct INTERACT_SurgeryMachine_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0048(0x0020)(HasGetValueTypeHash)
	ENUM_LeftRight                                Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0070(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_LeftRight                                Temp_byte_Variable_1;                              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0098(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00B8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsSurgeryMachineDisabled_Result;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x00E0(0x0020)(HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPerformChannelingSequence_Result;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_AngleBetweenVectors_ReturnValue;          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_4;        // 0x0140(0x0020)(HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_5;        // 0x0170(0x0020)(HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSurgeryMachineDestroyed_Result;         // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSafeToInteract_Result;                  // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19B[0x5];                                      // 0x019B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_6;        // 0x01A0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_LeftRight                                K2Node_Select_Default;                             // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_7;        // 0x01C8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_TryInteract");
static_assert(sizeof(INTERACT_SurgeryMachine_C_TryInteract) == 0x0001F0, "Wrong size on INTERACT_SurgeryMachine_C_TryInteract");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, HackerPawn) == 0x000038, "Member 'INTERACT_SurgeryMachine_C_TryInteract::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, Temp_bool_Variable) == 0x000040, "Member 'INTERACT_SurgeryMachine_C_TryInteract::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, Temp_byte_Variable) == 0x000068, "Member 'INTERACT_SurgeryMachine_C_TryInteract::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000070, "Member 'INTERACT_SurgeryMachine_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000090, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, Temp_byte_Variable_1) == 0x000091, "Member 'INTERACT_SurgeryMachine_C_TryInteract::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000098, "Member 'INTERACT_SurgeryMachine_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000B8, "Member 'INTERACT_SurgeryMachine_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_IsSurgeryMachineDisabled_Result) == 0x0000D8, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_IsSurgeryMachineDisabled_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x0000D9, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x0000E0, "Member 'INTERACT_SurgeryMachine_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_GetForwardVector_ReturnValue) == 0x000100, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00010C, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000118, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000124, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_CanPerformChannelingSequence_Result) == 0x000130, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_CanPerformChannelingSequence_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_AngleBetweenVectors_ReturnValue) == 0x000134, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_AngleBetweenVectors_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_Less_FloatFloat_ReturnValue) == 0x000138, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_4) == 0x000140, "Member 'INTERACT_SurgeryMachine_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_4' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000160, "Member 'INTERACT_SurgeryMachine_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'INTERACT_SurgeryMachine_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_5) == 0x000170, "Member 'INTERACT_SurgeryMachine_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_5' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_GetInventoryComponent_Inventory) == 0x000190, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_IsSurgeryMachineDestroyed_Result) == 0x000198, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_IsSurgeryMachineDestroyed_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_Not_PreBool_ReturnValue_1) == 0x000199, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_IsSafeToInteract_Result) == 0x00019A, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_IsSafeToInteract_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_6) == 0x0001A0, "Member 'INTERACT_SurgeryMachine_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_6' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001C0, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, K2Node_Select_Default) == 0x0001C1, "Member 'INTERACT_SurgeryMachine_C_TryInteract::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_7) == 0x0001C8, "Member 'INTERACT_SurgeryMachine_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_7' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001E8, "Member 'INTERACT_SurgeryMachine_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.InitializeSurgeryMachine
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_SurgeryMachine_C_InitializeSurgeryMachine final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChannelingWithInteractable_Result;      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSurgeryMachineDestroyed_Result;         // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAttribHandler_ReturnValue;             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateDeathSettings_Result;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UNiagaraComponent*>              K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_InitializeSurgeryMachine");
static_assert(sizeof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine) == 0x000060, "Wrong size on INTERACT_SurgeryMachine_C_InitializeSurgeryMachine");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_IsChannelingWithInteractable_Result) == 0x000012, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_IsChannelingWithInteractable_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_Not_PreBool_ReturnValue_1) == 0x000014, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_IsVisible_ReturnValue) == 0x000015, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_IsSurgeryMachineDestroyed_Result) == 0x000016, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_IsSurgeryMachineDestroyed_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_HasAttribHandler_ReturnValue) == 0x000017, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_HasAttribHandler_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_UpdateDeathSettings_Result) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_UpdateDeathSettings_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_Not_PreBool_ReturnValue_2) == 0x000019, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00001A, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, K2Node_MakeArray_Array) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, K2Node_MakeArray_Array_1) == 0x000030, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000040, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000050, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_InitializeSurgeryMachine, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000058, "Member 'INTERACT_SurgeryMachine_C_InitializeSurgeryMachine::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.BindAttributeEvents
// 0x0024 (0x0024 - 0x0000)
struct INTERACT_SurgeryMachine_C_BindAttributeEvents final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_BindAttributeEvents) == 0x000004, "Wrong alignment on INTERACT_SurgeryMachine_C_BindAttributeEvents");
static_assert(sizeof(INTERACT_SurgeryMachine_C_BindAttributeEvents) == 0x000024, "Wrong size on INTERACT_SurgeryMachine_C_BindAttributeEvents");
static_assert(offsetof(INTERACT_SurgeryMachine_C_BindAttributeEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_BindAttributeEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_BindAttributeEvents, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_BindAttributeEvents::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_BindAttributeEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'INTERACT_SurgeryMachine_C_BindAttributeEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.UpdateMeshEmissiveStrength
// 0x000C (0x000C - 0x0000)
struct INTERACT_SurgeryMachine_C_UpdateMeshEmissiveStrength final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_UpdateMeshEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_SurgeryMachine_C_UpdateMeshEmissiveStrength");
static_assert(sizeof(INTERACT_SurgeryMachine_C_UpdateMeshEmissiveStrength) == 0x00000C, "Wrong size on INTERACT_SurgeryMachine_C_UpdateMeshEmissiveStrength");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMeshEmissiveStrength, Value) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_UpdateMeshEmissiveStrength::Value' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMeshEmissiveStrength, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_UpdateMeshEmissiveStrength::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.OnSurgeryMachineDestroyed
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_SurgeryMachine_C_OnSurgeryMachineDestroyed final
{
public:
	TArray<class UAttributeDef*>                  Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_UpdateDeathSettings_Result;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_OnSurgeryMachineDestroyed) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_OnSurgeryMachineDestroyed");
static_assert(sizeof(INTERACT_SurgeryMachine_C_OnSurgeryMachineDestroyed) == 0x000028, "Wrong size on INTERACT_SurgeryMachine_C_OnSurgeryMachineDestroyed");
static_assert(offsetof(INTERACT_SurgeryMachine_C_OnSurgeryMachineDestroyed, Temp_object_Variable) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_OnSurgeryMachineDestroyed::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_OnSurgeryMachineDestroyed, CallFunc_UpdateDeathSettings_Result) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_OnSurgeryMachineDestroyed::CallFunc_UpdateDeathSettings_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_OnSurgeryMachineDestroyed, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'INTERACT_SurgeryMachine_C_OnSurgeryMachineDestroyed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.UpdateDeathSettings
// 0x0070 (0x0070 - 0x0000)
struct INTERACT_SurgeryMachine_C_UpdateDeathSettings final
{
public:
	bool                                          DuringBeginPlay;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
};
static_assert(alignof(INTERACT_SurgeryMachine_C_UpdateDeathSettings) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_UpdateDeathSettings");
static_assert(sizeof(INTERACT_SurgeryMachine_C_UpdateDeathSettings) == 0x000070, "Wrong size on INTERACT_SurgeryMachine_C_UpdateDeathSettings");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateDeathSettings, DuringBeginPlay) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_UpdateDeathSettings::DuringBeginPlay' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateDeathSettings, Result) == 0x000001, "Member 'INTERACT_SurgeryMachine_C_UpdateDeathSettings::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateDeathSettings, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_UpdateDeathSettings::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateDeathSettings, K2Node_MakeArray_Array) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_UpdateDeathSettings::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateDeathSettings, CallFunc_Format_ReturnValue) == 0x000058, "Member 'INTERACT_SurgeryMachine_C_UpdateDeathSettings::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.UpdateMaterial
// 0x00C0 (0x00C0 - 0x0000)
struct INTERACT_SurgeryMachine_C_UpdateMaterial final
{
public:
	float                                         ScanLength;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ScanMontage;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LaserProgress;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RampProgress;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_3;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_4;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_3;       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_5;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_4;       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_6;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_3;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_7;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_5;       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_5;        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_4;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_8;                       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_9;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_10;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_11;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_12;                      // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_13;                      // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_6;       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_6;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_5;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_UpdateMaterial) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_UpdateMaterial");
static_assert(sizeof(INTERACT_SurgeryMachine_C_UpdateMaterial) == 0x0000C0, "Wrong size on INTERACT_SurgeryMachine_C_UpdateMaterial");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, ScanLength) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::ScanLength' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, ScanMontage) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::ScanMontage' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, LaserProgress) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::LaserProgress' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, RampProgress) == 0x000014, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::RampProgress' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000024, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000030, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_FClamp_ReturnValue_1) == 0x000034, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_1) == 0x00003C, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_2) == 0x000040, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_3) == 0x000044, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_4) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x00004C, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000050, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_GetGameTimeInSeconds_ReturnValue_3) == 0x000054, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_GetGameTimeInSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000058, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00005C, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_5) == 0x000060, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_FClamp_ReturnValue_2) == 0x000064, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_GetGameTimeInSeconds_ReturnValue_4) == 0x000068, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_GetGameTimeInSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x00006C, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000070, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_6) == 0x000074, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_FClamp_ReturnValue_3) == 0x000078, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_7) == 0x00007C, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_GetGameTimeInSeconds_ReturnValue_5) == 0x000080, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_GetGameTimeInSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Subtract_FloatFloat_ReturnValue_5) == 0x000084, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Subtract_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000088, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_FClamp_ReturnValue_4) == 0x00008C, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_8) == 0x000090, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_9) == 0x000094, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_10) == 0x000098, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_11) == 0x00009C, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_12) == 0x0000A0, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Lerp_ReturnValue_13) == 0x0000A4, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Lerp_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_GetGameTimeInSeconds_ReturnValue_6) == 0x0000A8, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_GetGameTimeInSeconds_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Subtract_FloatFloat_ReturnValue_6) == 0x0000AC, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Subtract_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x0000B0, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x0000B4, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateMaterial, CallFunc_FClamp_ReturnValue_5) == 0x0000B8, "Member 'INTERACT_SurgeryMachine_C_UpdateMaterial::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_OnStateFinished
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_SurgeryMachine_C_EVENT_OnStateFinished final
{
public:
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_SurgeryMachineState                      CallFunc_GetNextState_NewState;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EVENT_OnStateFinished) == 0x000004, "Wrong alignment on INTERACT_SurgeryMachine_C_EVENT_OnStateFinished");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EVENT_OnStateFinished) == 0x000008, "Wrong size on INTERACT_SurgeryMachine_C_EVENT_OnStateFinished");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnStateFinished, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnStateFinished::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnStateFinished, CallFunc_GetNextState_NewState) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnStateFinished::CallFunc_GetNextState_NewState' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.PlayNanoBot
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_SurgeryMachine_C_PlayNanoBot final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_PlayNanoBot) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_PlayNanoBot");
static_assert(sizeof(INTERACT_SurgeryMachine_C_PlayNanoBot) == 0x000038, "Wrong size on INTERACT_SurgeryMachine_C_PlayNanoBot");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlayNanoBot, Activate) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_PlayNanoBot::Activate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlayNanoBot, Temp_int_Array_Index_Variable) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_PlayNanoBot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlayNanoBot, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_PlayNanoBot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlayNanoBot, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_PlayNanoBot::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlayNanoBot, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_PlayNanoBot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlayNanoBot, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'INTERACT_SurgeryMachine_C_PlayNanoBot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlayNanoBot, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_PlayNanoBot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlayNanoBot, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'INTERACT_SurgeryMachine_C_PlayNanoBot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlayNanoBot, CallFunc_Array_Get_Item) == 0x000028, "Member 'INTERACT_SurgeryMachine_C_PlayNanoBot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlayNanoBot, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'INTERACT_SurgeryMachine_C_PlayNanoBot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.PlaySmokeParticle
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_SurgeryMachine_C_PlaySmokeParticle final
{
public:
	bool                                          HatchOpening;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          K2Node_Select_Default;                             // 0x0028(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_PlaySmokeParticle) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_PlaySmokeParticle");
static_assert(sizeof(INTERACT_SurgeryMachine_C_PlaySmokeParticle) == 0x000050, "Wrong size on INTERACT_SurgeryMachine_C_PlaySmokeParticle");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlaySmokeParticle, HatchOpening) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_PlaySmokeParticle::HatchOpening' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlaySmokeParticle, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_PlaySmokeParticle::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlaySmokeParticle, Temp_bool_Variable) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_PlaySmokeParticle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlaySmokeParticle, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_PlaySmokeParticle::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlaySmokeParticle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_PlaySmokeParticle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_PlaySmokeParticle, K2Node_Select_Default) == 0x000028, "Member 'INTERACT_SurgeryMachine_C_PlaySmokeParticle::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.TryCompleteTutorial
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_SurgeryMachine_C_TryCompleteTutorial final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryCompleteTutorial_Result;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_TryCompleteTutorial) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_TryCompleteTutorial");
static_assert(sizeof(INTERACT_SurgeryMachine_C_TryCompleteTutorial) == 0x000020, "Wrong size on INTERACT_SurgeryMachine_C_TryCompleteTutorial");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryCompleteTutorial, GameInstance) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_TryCompleteTutorial::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryCompleteTutorial, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_TryCompleteTutorial::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryCompleteTutorial, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_TryCompleteTutorial::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryCompleteTutorial, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_TryCompleteTutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryCompleteTutorial, CallFunc_TryCompleteTutorial_Result) == 0x000019, "Member 'INTERACT_SurgeryMachine_C_TryCompleteTutorial::CallFunc_TryCompleteTutorial_Result' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterState
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterState final
{
public:
	ENUM_SurgeryMachineState                      NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeElapsedInState;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsResuming;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_SurgeryMachineState                      StateToUpdate;                                     // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterState) == 0x000004, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterState");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterState) == 0x000028, "Wrong size on INTERACT_SurgeryMachine_C_EnterState");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, NewState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterState::NewState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, TimeElapsedInState) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EnterState::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, IsResuming) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterState::IsResuming' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, StateToUpdate) == 0x000009, "Member 'INTERACT_SurgeryMachine_C_EnterState::StateToUpdate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'INTERACT_SurgeryMachine_C_EnterState::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_EnterState::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'INTERACT_SurgeryMachine_C_EnterState::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_EnterState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, Temp_int_Variable) == 0x00001C, "Member 'INTERACT_SurgeryMachine_C_EnterState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, CallFunc_Conv_IntToByte_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterState::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, CallFunc_GetValidValue_ReturnValue) == 0x000021, "Member 'INTERACT_SurgeryMachine_C_EnterState::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000022, "Member 'INTERACT_SurgeryMachine_C_EnterState::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterState, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'INTERACT_SurgeryMachine_C_EnterState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterOpeningToReceive
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterOpeningToReceive final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterOpeningToReceive) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterOpeningToReceive");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterOpeningToReceive) == 0x000020, "Wrong size on INTERACT_SurgeryMachine_C_EnterOpeningToReceive");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToReceive, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToReceive::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToReceive, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToReceive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToReceive, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToReceive::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterOpenedToReceive
// 0x00E0 (0x00E0 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterOpenedToReceive final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ResumeMontage_RemainingTime;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_SurgeryMachine_C*               K2Node_DynamicCast_AsAnim_BP_Surgery_Machine;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_LeftRight                                Temp_byte_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0070(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetUseIK_Result;                          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterOpenedToReceive");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive) == 0x0000E0, "Wrong size on INTERACT_SurgeryMachine_C_EnterOpenedToReceive");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, K2Node_DynamicCast_AsAnim_Montage) == 0x000028, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, CallFunc_ResumeMontage_RemainingTime) == 0x000040, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::CallFunc_ResumeMontage_RemainingTime' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, K2Node_DynamicCast_AsAnim_BP_Surgery_Machine) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::K2Node_DynamicCast_AsAnim_BP_Surgery_Machine' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, Temp_byte_Variable) == 0x000051, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000068, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, K2Node_Select_Default) == 0x000070, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000098, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0000A0, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, K2Node_DynamicCast_AsAnim_Montage_1) == 0x0000A8, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x0000B8, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, CallFunc_ForceBeginAction_Action) == 0x0000D0, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::CallFunc_ForceBeginAction_Action' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToReceive, CallFunc_SetUseIK_Result) == 0x0000D8, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToReceive::CallFunc_SetUseIK_Result' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterClosingToScan
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterClosingToScan final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ResumeMontage_RemainingTime;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimBP_SurgeryMachine_C*               K2Node_DynamicCast_AsAnim_BP_Surgery_Machine;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterClosingToScan) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterClosingToScan");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterClosingToScan) == 0x000058, "Wrong size on INTERACT_SurgeryMachine_C_EnterClosingToScan");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToScan, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToScan::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToScan, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToScan::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToScan, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToScan::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToScan, K2Node_DynamicCast_AsAnim_Montage) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToScan::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToScan, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToScan::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToScan, CallFunc_ResumeMontage_RemainingTime) == 0x000024, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToScan::CallFunc_ResumeMontage_RemainingTime' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToScan, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToScan::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToScan, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToScan::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToScan, K2Node_DynamicCast_AsAnim_BP_Surgery_Machine) == 0x000040, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToScan::K2Node_DynamicCast_AsAnim_BP_Surgery_Machine' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToScan, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToScan::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToScan, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000050, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToScan::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterWaitingToScan
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterWaitingToScan final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterWaitingToScan) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterWaitingToScan");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterWaitingToScan) == 0x000028, "Wrong size on INTERACT_SurgeryMachine_C_EnterWaitingToScan");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToScan, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToScan::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToScan, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToScan::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToScan, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToScan::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToScan, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToScan::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToScan, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToScan::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterScanRampUp
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterScanRampUp final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterScanRampUp) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterScanRampUp");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterScanRampUp) == 0x000028, "Wrong size on INTERACT_SurgeryMachine_C_EnterScanRampUp");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScanRampUp, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterScanRampUp::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScanRampUp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EnterScanRampUp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScanRampUp, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterScanRampUp::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScanRampUp, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'INTERACT_SurgeryMachine_C_EnterScanRampUp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScanRampUp, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterScanRampUp::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterScan
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterScan final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ResumeMontage_RemainingTime;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterScan) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterScan");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterScan) == 0x000050, "Wrong size on INTERACT_SurgeryMachine_C_EnterScan");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScan, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterScan::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScan, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterScan::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScan, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_EnterScan::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScan, K2Node_DynamicCast_AsAnim_Montage) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_EnterScan::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScan, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterScan::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScan, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'INTERACT_SurgeryMachine_C_EnterScan::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScan, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'INTERACT_SurgeryMachine_C_EnterScan::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScan, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'INTERACT_SurgeryMachine_C_EnterScan::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScan, CallFunc_ResumeMontage_RemainingTime) == 0x000034, "Member 'INTERACT_SurgeryMachine_C_EnterScan::CallFunc_ResumeMontage_RemainingTime' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScan, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'INTERACT_SurgeryMachine_C_EnterScan::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScan, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_EnterScan::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterScanRampDown
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterScanRampDown final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterScanRampDown) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterScanRampDown");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterScanRampDown) == 0x000028, "Wrong size on INTERACT_SurgeryMachine_C_EnterScanRampDown");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScanRampDown, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterScanRampDown::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScanRampDown, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EnterScanRampDown::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScanRampDown, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterScanRampDown::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScanRampDown, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'INTERACT_SurgeryMachine_C_EnterScanRampDown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterScanRampDown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterScanRampDown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterWaitingToHeal
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterWaitingToHeal final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterWaitingToHeal) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterWaitingToHeal");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterWaitingToHeal) == 0x000028, "Wrong size on INTERACT_SurgeryMachine_C_EnterWaitingToHeal");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToHeal, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToHeal::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToHeal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToHeal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToHeal, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToHeal::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToHeal, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToHeal::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToHeal, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToHeal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToHeal, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToHeal::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterHealRampUp
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterHealRampUp final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterHealRampUp) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterHealRampUp");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterHealRampUp) == 0x000028, "Wrong size on INTERACT_SurgeryMachine_C_EnterHealRampUp");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHealRampUp, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterHealRampUp::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHealRampUp, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EnterHealRampUp::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHealRampUp, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterHealRampUp::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHealRampUp, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'INTERACT_SurgeryMachine_C_EnterHealRampUp::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHealRampUp, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterHealRampUp::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterHeal
// 0x00F8 (0x00F8 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterHeal final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttribModApplyData                    HealMod;                                           // 0x0008(0x00A0)(Edit, BlueprintVisible)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_GetActiveModWithCategory_ReturnValue;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x2];                                       // 0x00DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00E0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterHeal) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterHeal");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterHeal) == 0x0000F8, "Wrong size on INTERACT_SurgeryMachine_C_EnterHeal");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, HealMod) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::HealMod' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, CallFunc_GetGameInstance_ReturnValue) == 0x0000A8, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000B0, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, CallFunc_IsValid_ReturnValue) == 0x0000B9, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, CallFunc_GetAttribValue_ReturnValue) == 0x0000BC, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, CallFunc_ApplyMod_ReturnValue) == 0x0000C8, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, CallFunc_GetActiveModWithCategory_ReturnValue) == 0x0000D0, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::CallFunc_GetActiveModWithCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, CallFunc_IsValid_ReturnValue_1) == 0x0000D8, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, CallFunc_Not_PreBool_ReturnValue) == 0x0000D9, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000DC, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, K2Node_CreateDelegate_OutputDelegate) == 0x0000E0, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHeal, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000F0, "Member 'INTERACT_SurgeryMachine_C_EnterHeal::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterHealRampDown
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterHealRampDown final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterHealRampDown) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterHealRampDown");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterHealRampDown) == 0x000028, "Wrong size on INTERACT_SurgeryMachine_C_EnterHealRampDown");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHealRampDown, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterHealRampDown::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHealRampDown, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EnterHealRampDown::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHealRampDown, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterHealRampDown::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHealRampDown, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_EnterHealRampDown::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterHealRampDown, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterHealRampDown::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterWaitingToRelease
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterWaitingToRelease final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterWaitingToRelease) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterWaitingToRelease");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterWaitingToRelease) == 0x000028, "Wrong size on INTERACT_SurgeryMachine_C_EnterWaitingToRelease");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToRelease, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToRelease::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToRelease, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToRelease::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToRelease, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToRelease::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToRelease, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToRelease::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToRelease, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToRelease::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterWaitingToRelease, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterWaitingToRelease::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterOpeningToRelease
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterOpeningToRelease final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_SurgeryMachine_C*               K2Node_DynamicCast_AsAnim_BP_Surgery_Machine;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterOpeningToRelease");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease) == 0x000068, "Wrong size on INTERACT_SurgeryMachine_C_EnterOpeningToRelease");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, K2Node_DynamicCast_AsAnim_Montage) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000030, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, K2Node_DynamicCast_AsAnim_BP_Surgery_Machine) == 0x000038, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::K2Node_DynamicCast_AsAnim_BP_Surgery_Machine' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, CallFunc_Montage_Play_ReturnValue) == 0x000044, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, CallFunc_FMax_ReturnValue) == 0x00005C, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpeningToRelease, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'INTERACT_SurgeryMachine_C_EnterOpeningToRelease::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterOpenedToRelease
// 0x00C8 (0x00C8 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterOpenedToRelease final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ExitMontage;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CurrentHackerAction;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	ENUM_LeftRight                                Temp_byte_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0068(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterOpenedToRelease");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease) == 0x0000C8, "Wrong size on INTERACT_SurgeryMachine_C_EnterOpenedToRelease");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, ExitMontage) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::ExitMontage' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, CurrentHackerAction) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::CurrentHackerAction' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, Temp_byte_Variable) == 0x00002C, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, CallFunc_GetMontage_Result) == 0x000030, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, CallFunc_GetCurrentAction_CurrentAction) == 0x000040, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, K2Node_CreateDelegate_OutputDelegate_1) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, K2Node_Select_Default) == 0x000068, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000090, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, CallFunc_ForceBeginAction_Action) == 0x000098, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::CallFunc_ForceBeginAction_Action' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, K2Node_DynamicCast_AsAnim_Montage) == 0x0000A0, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000AC, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000BC, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterOpenedToRelease, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000C0, "Member 'INTERACT_SurgeryMachine_C_EnterOpenedToRelease::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterClosingToRearm
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterClosingToRearm final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_SurgeryMachine_C*               K2Node_DynamicCast_AsAnim_BP_Surgery_Machine;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterClosingToRearm) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterClosingToRearm");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterClosingToRearm) == 0x000068, "Wrong size on INTERACT_SurgeryMachine_C_EnterClosingToRearm");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToRearm, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToRearm::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToRearm, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToRearm::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToRearm, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToRearm::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToRearm, K2Node_DynamicCast_AsAnim_Montage) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToRearm::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToRearm, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToRearm::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToRearm, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToRearm::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToRearm, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToRearm::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToRearm, K2Node_DynamicCast_AsAnim_BP_Surgery_Machine) == 0x000040, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToRearm::K2Node_DynamicCast_AsAnim_BP_Surgery_Machine' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToRearm, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToRearm::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToRearm, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000050, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToRearm::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToRearm, CallFunc_Montage_Play_ReturnValue) == 0x000058, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToRearm::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterClosingToRearm, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000060, "Member 'INTERACT_SurgeryMachine_C_EnterClosingToRearm::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_EnableIdleOverride
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride final
{
public:
	ENUM_LeftRight                                Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetOverrideIdleSequence_Result;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride) == 0x000030, "Wrong size on INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride, Temp_byte_Variable) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride, K2Node_Select_Default) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride, CallFunc_SetOverrideIdleSequence_Result) == 0x000029, "Member 'INTERACT_SurgeryMachine_C_EVENT_EnableIdleOverride::CallFunc_SetOverrideIdleSequence_Result' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_DisableIdleOverride
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetOverrideIdleSequence_Result;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride) == 0x000028, "Wrong size on INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride, CallFunc_SetOverrideIdleSequence_Result) == 0x000021, "Member 'INTERACT_SurgeryMachine_C_EVENT_DisableIdleOverride::CallFunc_SetOverrideIdleSequence_Result' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_OnCharacterExitFinished
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_SurgeryMachine_C_EVENT_OnCharacterExitFinished final
{
public:
	TDelegate<void(class UMOVECONTROL_Base_C* MoveControl)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EVENT_OnCharacterExitFinished) == 0x000004, "Wrong alignment on INTERACT_SurgeryMachine_C_EVENT_OnCharacterExitFinished");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EVENT_OnCharacterExitFinished) == 0x000010, "Wrong size on INTERACT_SurgeryMachine_C_EVENT_OnCharacterExitFinished");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnCharacterExitFinished, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnCharacterExitFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ApplyEnterMoveControl
// 0x0170 (0x0170 - 0x0000)
struct INTERACT_SurgeryMachine_C_ApplyEnterMoveControl final
{
public:
	struct FRotator                               EndRotation;                                       // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                EndLocation;                                       // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               MaintainRotation;                                  // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                MaintainLocation;                                  // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               StartRotation;                                     // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                StartLocation;                                     // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ToHackerVector;                                    // 0x0048(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  Hacker;                                            // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_2;    // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_3;    // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_4;    // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_5;    // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_4;    // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_6;    // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_5;    // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x013C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterMoveControl_Result;               // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_SurgeryMachine_C*                  CallFunc_SpawnObject_ReturnValue;                  // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_ApplyEnterMoveControl");
static_assert(sizeof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl) == 0x000170, "Wrong size on INTERACT_SurgeryMachine_C_ApplyEnterMoveControl");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, EndRotation) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::EndRotation' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, EndLocation) == 0x00000C, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::EndLocation' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, MaintainRotation) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::MaintainRotation' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, MaintainLocation) == 0x000024, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::MaintainLocation' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, StartRotation) == 0x000030, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::StartRotation' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, StartLocation) == 0x00003C, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::StartLocation' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, ToHackerVector) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::ToHackerVector' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, Hacker) == 0x000058, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::Hacker' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000060, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x00006C, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000078, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000084, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentRotation_ReturnValue_2) == 0x000090, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x00009C, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentRotation_ReturnValue_3) == 0x0000A8, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x0000B4, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000C0, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentRotation_ReturnValue_4) == 0x0000CC, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentRotation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentRotation_ReturnValue_5) == 0x0000D8, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentRotation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentLocation_ReturnValue_4) == 0x0000E4, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentRotation_ReturnValue_6) == 0x0000F0, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentRotation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetComponentLocation_ReturnValue_5) == 0x0000FC, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetComponentLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000108, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000114, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_GetActorForwardVector_ReturnValue) == 0x000120, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00012C, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_Dot_VectorVector_ReturnValue) == 0x000138, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x00013C, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_Less_FloatFloat_ReturnValue) == 0x000144, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000148, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000158, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_RegisterMoveControl_Result) == 0x000161, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_RegisterMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ApplyEnterMoveControl, CallFunc_SpawnObject_ReturnValue) == 0x000168, "Member 'INTERACT_SurgeryMachine_C_ApplyEnterMoveControl::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.UpdateVisibilityState
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_SurgeryMachine_C_UpdateVisibilityState final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_UpdateVisibilityState) == 0x000001, "Wrong alignment on INTERACT_SurgeryMachine_C_UpdateVisibilityState");
static_assert(sizeof(INTERACT_SurgeryMachine_C_UpdateVisibilityState) == 0x000001, "Wrong size on INTERACT_SurgeryMachine_C_UpdateVisibilityState");
static_assert(offsetof(INTERACT_SurgeryMachine_C_UpdateVisibilityState, State) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_UpdateVisibilityState::State' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_OnMoveControlExpire
// 0x0070 (0x0070 - 0x0000)
struct INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire final
{
public:
	class UMOVECONTROL_Base_C*                    MoveControl;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UMOVECONTROL_Base_C* MoveControl)> K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetUseIK_Result;                          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire) == 0x000070, "Wrong size on INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, MoveControl) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::MoveControl' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000038, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, CallFunc_GetInventoryComponent_Inventory) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, CallFunc_GetAnimInstance_ReturnValue) == 0x000050, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000058, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire, CallFunc_SetUseIK_Result) == 0x000069, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnMoveControlExpire::CallFunc_SetUseIK_Result' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.TryResumeSurgery
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_SurgeryMachine_C_TryResumeSurgery final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_VerifyInventoryOnResume_Success;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APAWN_SystemShockCharacter_C* Character)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APAWN_SystemShockCharacter_C* Character)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_TryResumeSurgery) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_TryResumeSurgery");
static_assert(sizeof(INTERACT_SurgeryMachine_C_TryResumeSurgery) == 0x000060, "Wrong size on INTERACT_SurgeryMachine_C_TryResumeSurgery");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryResumeSurgery, Character) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_TryResumeSurgery::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryResumeSurgery, CallFunc_VerifyInventoryOnResume_Success) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_TryResumeSurgery::CallFunc_VerifyInventoryOnResume_Success' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryResumeSurgery, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00000C, "Member 'INTERACT_SurgeryMachine_C_TryResumeSurgery::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryResumeSurgery, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_TryResumeSurgery::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryResumeSurgery, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_TryResumeSurgery::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryResumeSurgery, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'INTERACT_SurgeryMachine_C_TryResumeSurgery::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryResumeSurgery, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000038, "Member 'INTERACT_SurgeryMachine_C_TryResumeSurgery::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryResumeSurgery, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'INTERACT_SurgeryMachine_C_TryResumeSurgery::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryResumeSurgery, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'INTERACT_SurgeryMachine_C_TryResumeSurgery::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryResumeSurgery, CallFunc_GetInventoryComponent_Inventory) == 0x000048, "Member 'INTERACT_SurgeryMachine_C_TryResumeSurgery::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryResumeSurgery, CallFunc_GetBagByType_Bag) == 0x000050, "Member 'INTERACT_SurgeryMachine_C_TryResumeSurgery::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_TryResumeSurgery, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'INTERACT_SurgeryMachine_C_TryResumeSurgery::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.VerifyInventoryOnResume
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_SurgeryMachine_C_VerifyInventoryOnResume final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipmentDisabled_Result;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_VerifyInventoryOnResume) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_VerifyInventoryOnResume");
static_assert(sizeof(INTERACT_SurgeryMachine_C_VerifyInventoryOnResume) == 0x000018, "Wrong size on INTERACT_SurgeryMachine_C_VerifyInventoryOnResume");
static_assert(offsetof(INTERACT_SurgeryMachine_C_VerifyInventoryOnResume, Success) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_VerifyInventoryOnResume::Success' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_VerifyInventoryOnResume, CallFunc_GetInventoryComponent_Inventory) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_VerifyInventoryOnResume::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_VerifyInventoryOnResume, CallFunc_IsEquipmentDisabled_Result) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_VerifyInventoryOnResume::CallFunc_IsEquipmentDisabled_Result' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ResumeMontage
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_SurgeryMachine_C_ResumeMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeIntoMontage;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLaserMesh;                                      // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RemainingTime;                                     // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_ResumeMontage) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_ResumeMontage");
static_assert(sizeof(INTERACT_SurgeryMachine_C_ResumeMontage) == 0x000030, "Wrong size on INTERACT_SurgeryMachine_C_ResumeMontage");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ResumeMontage, Montage) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_ResumeMontage::Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ResumeMontage, TimeIntoMontage) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_ResumeMontage::TimeIntoMontage' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ResumeMontage, UseLaserMesh) == 0x00000C, "Member 'INTERACT_SurgeryMachine_C_ResumeMontage::UseLaserMesh' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ResumeMontage, RemainingTime) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_ResumeMontage::RemainingTime' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ResumeMontage, Temp_bool_Variable) == 0x000014, "Member 'INTERACT_SurgeryMachine_C_ResumeMontage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ResumeMontage, K2Node_Select_Default) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_ResumeMontage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ResumeMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_ResumeMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ResumeMontage, CallFunc_Montage_Play_ReturnValue) == 0x000028, "Member 'INTERACT_SurgeryMachine_C_ResumeMontage::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.GetNextState
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_SurgeryMachine_C_GetNextState final
{
public:
	ENUM_SurgeryMachineState                      OriginalState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_SurgeryMachineState                      NewState;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_GetNextState) == 0x000001, "Wrong alignment on INTERACT_SurgeryMachine_C_GetNextState");
static_assert(sizeof(INTERACT_SurgeryMachine_C_GetNextState) == 0x000003, "Wrong size on INTERACT_SurgeryMachine_C_GetNextState");
static_assert(offsetof(INTERACT_SurgeryMachine_C_GetNextState, OriginalState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_GetNextState::OriginalState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_GetNextState, NewState) == 0x000001, "Member 'INTERACT_SurgeryMachine_C_GetNextState::NewState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_GetNextState, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'INTERACT_SurgeryMachine_C_GetNextState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EnterRearm
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_SurgeryMachine_C_EnterRearm final
{
public:
	float                                         TimeElapsedInState;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EnterRearm) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EnterRearm");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EnterRearm) == 0x000028, "Wrong size on INTERACT_SurgeryMachine_C_EnterRearm");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterRearm, TimeElapsedInState) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EnterRearm::TimeElapsedInState' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterRearm, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EnterRearm::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterRearm, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EnterRearm::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterRearm, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'INTERACT_SurgeryMachine_C_EnterRearm::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EnterRearm, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'INTERACT_SurgeryMachine_C_EnterRearm::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.ResumeChannelingInteraction
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_SurgeryMachine_C_ResumeChannelingInteraction final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_ResumeChannelingInteraction) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_ResumeChannelingInteraction");
static_assert(sizeof(INTERACT_SurgeryMachine_C_ResumeChannelingInteraction) == 0x000008, "Wrong size on INTERACT_SurgeryMachine_C_ResumeChannelingInteraction");
static_assert(offsetof(INTERACT_SurgeryMachine_C_ResumeChannelingInteraction, HackerPawn) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_ResumeChannelingInteraction::HackerPawn' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.StopChanneling
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_SurgeryMachine_C_StopChanneling final
{
public:
	class AActor*                                 NewChannelingInteract;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExpireMoveControl_Result;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_StopChanneling) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_StopChanneling");
static_assert(sizeof(INTERACT_SurgeryMachine_C_StopChanneling) == 0x000020, "Wrong size on INTERACT_SurgeryMachine_C_StopChanneling");
static_assert(offsetof(INTERACT_SurgeryMachine_C_StopChanneling, NewChannelingInteract) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_StopChanneling::NewChannelingInteract' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_StopChanneling, Result) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_StopChanneling::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_StopChanneling, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_StopChanneling::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_StopChanneling, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_SurgeryMachine_C_StopChanneling::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_StopChanneling, CallFunc_ExpireMoveControl_Result) == 0x000019, "Member 'INTERACT_SurgeryMachine_C_StopChanneling::CallFunc_ExpireMoveControl_Result' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.IsSurgeryMachineDestroyed
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_SurgeryMachine_C_IsSurgeryMachineDestroyed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_IsSurgeryMachineDestroyed) == 0x000001, "Wrong alignment on INTERACT_SurgeryMachine_C_IsSurgeryMachineDestroyed");
static_assert(sizeof(INTERACT_SurgeryMachine_C_IsSurgeryMachineDestroyed) == 0x000001, "Wrong size on INTERACT_SurgeryMachine_C_IsSurgeryMachineDestroyed");
static_assert(offsetof(INTERACT_SurgeryMachine_C_IsSurgeryMachineDestroyed, Result) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_IsSurgeryMachineDestroyed::Result' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_OnDamageReceived
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                UserParams;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived) == 0x000008, "Wrong alignment on INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived) == 0x000040, "Wrong size on INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived, OtherActor) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived::OtherActor' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived, DamageInstance) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived::DamageInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived, UserParams) == 0x000030, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived::UserParams' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived, CallFunc_GetAttribValue_ReturnValue) == 0x000038, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnDamageReceived::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.EVENT_OnDisableAttribChanged
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnabledRatio;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged) == 0x000014, "Wrong size on INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged, EnabledRatio) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged::EnabledRatio' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_SurgeryMachine_C_EVENT_OnDisableAttribChanged::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.IsSurgeryMachineDisabled
// 0x000C (0x000C - 0x0000)
struct INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAttribHandler_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled) == 0x000004, "Wrong alignment on INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled");
static_assert(sizeof(INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled) == 0x00000C, "Wrong size on INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled");
static_assert(offsetof(INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled, Result) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled, CallFunc_HasAttribHandler_ReturnValue) == 0x000008, "Member 'INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled::CallFunc_HasAttribHandler_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000009, "Member 'INTERACT_SurgeryMachine_C_IsSurgeryMachineDisabled::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_SurgeryMachine.INTERACT_SurgeryMachine_C.HasActiveChannelingMoveControl
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasActiveChannelingMoveControl_Result;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl) == 0x000001, "Wrong alignment on INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl");
static_assert(sizeof(INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl) == 0x000004, "Wrong size on INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl");
static_assert(offsetof(INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl, Result) == 0x000000, "Member 'INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl, CallFunc_HasActiveChannelingMoveControl_Result) == 0x000001, "Member 'INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl::CallFunc_HasActiveChannelingMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'INTERACT_SurgeryMachine_C_HasActiveChannelingMoveControl::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ExplosiveProjectile_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ENUM_Axis_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ExplosiveProjectile_Base.ExplosiveProjectile_Base_C
// 0x0128 (0x0348 - 0x0220)
class AExplosiveProjectile_Base_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Descriptor_C*                     COMP_Descriptor;                                   // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAttribManagerComponent*                AttribManager;                                     // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_PhysicsImpactHandler_C*           COMP_PhysicsImpactHandler;                         // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAttribDamageType*                      DamageType;                                        // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageValue;                                       // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArmorPenetration;                                  // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlastRadius;                                       // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlastImpulse;                                      // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SoundDetectionRangeScale;                          // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxCameraShakeMagnitude;                           // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinRadialDamagePercentage;                         // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TeleportTimerHandle;                               // 0x0270(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasBeenDetonated;                                  // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IgnoreSameInstigator;                              // 0x0279(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         LaunchFX;                                          // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          BlastFX;                                           // 0x0288(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class USoundCue*                              LaunchSoundCue;                                    // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              PropulsionLoopCue;                                 // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               BlastSoundCue;                                     // 0x02C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UNiagaraSystem*                         CachedBlastFX;                                     // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              CachedBlastSoundCue;                               // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          TrailFX;                                           // 0x02F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         TrailVerticalOffset;                               // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_Axis                                     TrailVerticalAxis;                                 // 0x0324(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TrailColor;                                        // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      TrailComponent;                                    // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVoxelAudioComponent*                   PropulsionAudioComponent;                          // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ExplosiveProjectile_Base(int32 EntryPoint);
	void StreamExplosiveAssets();
	void BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams);
	void ReceiveBeginPlay();
	void OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069(class UObject* Loaded);
	void OnLoaded_12A5614F482FB743652E76BC115EB237(class UObject* Loaded);
	void OnLoaded_1001838C477EB2B0BA9CEF96E9984340(class UObject* Loaded);
	void InitializeExplosive();
	void InitializeDamageSettings(class UAttribDamageType* InDamageType, int32 InDamageValue, int32 InArmorPenetration, int32 InBlastRadius, int32 InBlastImpulse);
	void InitializeAttributes();
	void PlayExplosionEffects(class UNiagaraComponent** SpawnedFX);
	void ApplyExplosionDamage();
	void ApplyCameraShake();
	void DetonateExplosive();
	void CleanupExplosive();
	void CreateExplosionSoundDetectionEvent();
	void OnDamageAppliedToActors(const TMap<class UAttribMod*, struct FAttribDamageInstance>& DamageInstances);
	void IsTeleporting(bool* Result);
	void CanTeleportExplosive(bool* Result);
	void GetExplosiveEffectsAttachParent(class USceneComponent** Result);
	void GetExplosivePhysicsComponent(class UPrimitiveComponent** PhysicsComponent);
	void MarkHasBeenDetonated(bool* Success);
	void EVENT_OnDisableAttribChanged(float CurrValue, float LastValue);
	void EVENT_UpdateEnemyExplosiveCollisionResponse();
	void GetExplosiveLocation(struct FVector* Location);
	void SpawnTrailEffects(class UNiagaraSystem* TrailSystem);
	void TryPlayLaunchEffects();
	void TryTeleportExplosive(const struct FVector& Location, const struct FRotator& Rotation, float MaterializeDuration, class USoundCue* SoundCue, class UNiagaraSystem* TeleportFX, bool* Result);
	void EVENT_OnFinishedMaterializingFromTeleport();
	void UpdateExplosiveVisibility(bool State);
	void GetLocalTrailOffset(struct FVector* Result);
	void SetExplosionIgnoresOwner(bool State);
	void GetTrailColor(struct FLinearColor* Result);
	bool ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0);
	bool ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms);
	bool ReceivePendingCharacterVelocity(const struct FVector& Velocity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ExplosiveProjectile_Base_C">();
	}
	static class AExplosiveProjectile_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AExplosiveProjectile_Base_C>();
	}
};
static_assert(alignof(AExplosiveProjectile_Base_C) == 0x000008, "Wrong alignment on AExplosiveProjectile_Base_C");
static_assert(sizeof(AExplosiveProjectile_Base_C) == 0x000348, "Wrong size on AExplosiveProjectile_Base_C");
static_assert(offsetof(AExplosiveProjectile_Base_C, UberGraphFrame) == 0x000220, "Member 'AExplosiveProjectile_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, DefaultSceneRoot) == 0x000228, "Member 'AExplosiveProjectile_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, COMP_Descriptor) == 0x000230, "Member 'AExplosiveProjectile_Base_C::COMP_Descriptor' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, AttribManager) == 0x000238, "Member 'AExplosiveProjectile_Base_C::AttribManager' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, COMP_PhysicsImpactHandler) == 0x000240, "Member 'AExplosiveProjectile_Base_C::COMP_PhysicsImpactHandler' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, DamageType) == 0x000248, "Member 'AExplosiveProjectile_Base_C::DamageType' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, DamageValue) == 0x000250, "Member 'AExplosiveProjectile_Base_C::DamageValue' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, ArmorPenetration) == 0x000254, "Member 'AExplosiveProjectile_Base_C::ArmorPenetration' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, BlastRadius) == 0x000258, "Member 'AExplosiveProjectile_Base_C::BlastRadius' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, BlastImpulse) == 0x00025C, "Member 'AExplosiveProjectile_Base_C::BlastImpulse' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, SoundDetectionRangeScale) == 0x000260, "Member 'AExplosiveProjectile_Base_C::SoundDetectionRangeScale' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, MaxCameraShakeMagnitude) == 0x000264, "Member 'AExplosiveProjectile_Base_C::MaxCameraShakeMagnitude' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, MinRadialDamagePercentage) == 0x000268, "Member 'AExplosiveProjectile_Base_C::MinRadialDamagePercentage' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, TeleportTimerHandle) == 0x000270, "Member 'AExplosiveProjectile_Base_C::TeleportTimerHandle' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, HasBeenDetonated) == 0x000278, "Member 'AExplosiveProjectile_Base_C::HasBeenDetonated' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, IgnoreSameInstigator) == 0x000279, "Member 'AExplosiveProjectile_Base_C::IgnoreSameInstigator' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, LaunchFX) == 0x000280, "Member 'AExplosiveProjectile_Base_C::LaunchFX' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, BlastFX) == 0x000288, "Member 'AExplosiveProjectile_Base_C::BlastFX' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, LaunchSoundCue) == 0x0002B0, "Member 'AExplosiveProjectile_Base_C::LaunchSoundCue' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, PropulsionLoopCue) == 0x0002B8, "Member 'AExplosiveProjectile_Base_C::PropulsionLoopCue' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, BlastSoundCue) == 0x0002C0, "Member 'AExplosiveProjectile_Base_C::BlastSoundCue' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, CachedBlastFX) == 0x0002E8, "Member 'AExplosiveProjectile_Base_C::CachedBlastFX' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, CachedBlastSoundCue) == 0x0002F0, "Member 'AExplosiveProjectile_Base_C::CachedBlastSoundCue' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, TrailFX) == 0x0002F8, "Member 'AExplosiveProjectile_Base_C::TrailFX' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, TrailVerticalOffset) == 0x000320, "Member 'AExplosiveProjectile_Base_C::TrailVerticalOffset' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, TrailVerticalAxis) == 0x000324, "Member 'AExplosiveProjectile_Base_C::TrailVerticalAxis' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, TrailColor) == 0x000328, "Member 'AExplosiveProjectile_Base_C::TrailColor' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, TrailComponent) == 0x000338, "Member 'AExplosiveProjectile_Base_C::TrailComponent' has a wrong offset!");
static_assert(offsetof(AExplosiveProjectile_Base_C, PropulsionAudioComponent) == 0x000340, "Member 'AExplosiveProjectile_Base_C::PropulsionAudioComponent' has a wrong offset!");

}


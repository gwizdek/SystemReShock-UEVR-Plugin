#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BulletProjectile_MagnesiumRound

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_EffectParams_structs.hpp"


namespace SDK::Params
{

// Function BulletProjectile_MagnesiumRound.BulletProjectile_MagnesiumRound_C.GetImpactEffectParameters
// 0x0178 (0x0178 - 0x0000)
struct BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          IsDeathBlow;                                       // 0x0088(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_EffectParams                   EffectParams;                                      // 0x0090(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	float                                         Intensity;                                         // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNamedFloat>                    FloatParameters;                                   // 0x00C8(0x0010)(Edit, BlueprintVisible)
	struct FSTRUCT_EffectParams                   CallFunc_GetImpactEffectParameters_EffectParams;   // 0x00D8(0x0030)(HasGetValueTypeHash)
	float                                         CallFunc_GetIncendiaryEffectIntensity_Intensity;   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNamedFloat                            K2Node_MakeStruct_NamedFloat;                      // 0x010C(0x000C)(NoDestructor)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNamedFloat                            K2Node_MakeStruct_NamedFloat_1;                    // 0x011C(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_EffectParams                   K2Node_SetFieldsInStruct_StructOut;                // 0x0130(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FNamedFloat                            K2Node_MakeStruct_NamedFloat_2;                    // 0x0164(0x000C)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters) == 0x000008, "Wrong alignment on BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters");
static_assert(sizeof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters) == 0x000178, "Wrong size on BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, Hit) == 0x000000, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::Hit' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, IsDeathBlow) == 0x000088, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::IsDeathBlow' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, EffectParams) == 0x000090, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::EffectParams' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, Intensity) == 0x0000C0, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::Intensity' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, FloatParameters) == 0x0000C8, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::FloatParameters' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, CallFunc_GetImpactEffectParameters_EffectParams) == 0x0000D8, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::CallFunc_GetImpactEffectParameters_EffectParams' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, CallFunc_GetIncendiaryEffectIntensity_Intensity) == 0x000108, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::CallFunc_GetIncendiaryEffectIntensity_Intensity' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, K2Node_MakeStruct_NamedFloat) == 0x00010C, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::K2Node_MakeStruct_NamedFloat' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, CallFunc_Ease_ReturnValue) == 0x000118, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, K2Node_MakeStruct_NamedFloat_1) == 0x00011C, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::K2Node_MakeStruct_NamedFloat_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, CallFunc_Array_Add_ReturnValue) == 0x000128, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, K2Node_SetFieldsInStruct_StructOut) == 0x000130, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, CallFunc_Array_Add_ReturnValue_1) == 0x000160, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, K2Node_MakeStruct_NamedFloat_2) == 0x000164, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::K2Node_MakeStruct_NamedFloat_2' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters, CallFunc_Array_Add_ReturnValue_2) == 0x000170, "Member 'BulletProjectile_MagnesiumRound_C_GetImpactEffectParameters::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function BulletProjectile_MagnesiumRound.BulletProjectile_MagnesiumRound_C.GetIncendiaryEffectIntensity
// 0x0128 (0x0128 - 0x0000)
struct BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         Intensity;                                         // 0x0088(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              HitSurfaceType;                                    // 0x008C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      HitPhysMat;                                        // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0123(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0126(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity) == 0x000008, "Wrong alignment on BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity");
static_assert(sizeof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity) == 0x000128, "Wrong size on BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, Hit) == 0x000000, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::Hit' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, Intensity) == 0x000088, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::Intensity' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, HitSurfaceType) == 0x00008C, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::HitSurfaceType' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, HitPhysMat) == 0x000090, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::HitPhysMat' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_bBlockingHit) == 0x000098, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_bInitialOverlap) == 0x000099, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_Time) == 0x00009C, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_Distance) == 0x0000A0, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_Location) == 0x0000A4, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_ImpactPoint) == 0x0000B0, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_Normal) == 0x0000BC, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C8, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_PhysMat) == 0x0000D8, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_HitActor) == 0x0000E0, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_HitComponent) == 0x0000E8, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_HitBoneName) == 0x0000F0, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_ElementIndex) == 0x0000FC, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_FaceIndex) == 0x000100, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_TraceStart) == 0x000104, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BreakHitResult_TraceEnd) == 0x000110, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_IsValid_ReturnValue) == 0x00011C, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00011D, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00011E, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BooleanOR_ReturnValue) == 0x00011F, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000120, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000121, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000122, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000123, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BooleanOR_ReturnValue_1) == 0x000124, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BooleanOR_ReturnValue_2) == 0x000125, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity, CallFunc_BooleanOR_ReturnValue_3) == 0x000126, "Member 'BulletProjectile_MagnesiumRound_C_GetIncendiaryEffectIntensity::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

}


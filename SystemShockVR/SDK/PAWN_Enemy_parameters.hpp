#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_Enemy

#include "Basic.hpp"

#include "STRUCT_LocalBehaviorAnimations_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "ENUM_LocalBehaviorType_structs.hpp"
#include "STRUCT_InventoryBagParams_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_EnemyStats_structs.hpp"
#include "STRUCT_HardItemParams_structs.hpp"
#include "ENUM_EnemyType_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "STRUCT_EnemyTemplate_structs.hpp"
#include "STRUCT_CombatDifficultySettings_structs.hpp"
#include "ENUM_GameDifficulty_structs.hpp"
#include "STRUCT_DismemberableLimb_structs.hpp"
#include "ENUM_Emotions_structs.hpp"
#include "STRUCT_DeathBlowData_structs.hpp"
#include "STRUCT_AnimatedLimb_structs.hpp"
#include "STRUCT_LootBonusData_structs.hpp"
#include "SystemReShock_structs.hpp"
#include "ENUM_TargetAssignmentType_structs.hpp"


namespace SDK::Params
{

// Function PAWN_Enemy.PAWN_Enemy_C.OnEnemyBehaviorStateChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Enemy_C_OnEnemyBehaviorStateChanged__DelegateSignature final
{
public:
	class APAWN_Enemy_C*                          Enemy;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_OnEnemyBehaviorStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnEnemyBehaviorStateChanged__DelegateSignature");
static_assert(sizeof(PAWN_Enemy_C_OnEnemyBehaviorStateChanged__DelegateSignature) == 0x000008, "Wrong size on PAWN_Enemy_C_OnEnemyBehaviorStateChanged__DelegateSignature");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyBehaviorStateChanged__DelegateSignature, Enemy) == 0x000000, "Member 'PAWN_Enemy_C_OnEnemyBehaviorStateChanged__DelegateSignature::Enemy' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ExecuteUbergraph_PAWN_Enemy
// 0x0120 (0x0120 - 0x0000)
struct PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                            K2Node_Event_NewController;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Enemy_C*                           K2Node_DynamicCast_AsCON_Enemy;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_ComponentBoundEvent_Pawn;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_Location;               // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Loudness;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bAudibleState;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_ComponentBoundEvent_Pawn_1;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_Location_1;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_LimbName;               // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              K2Node_ComponentBoundEvent_LimbData;               // 0x0060(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              K2Node_ComponentBoundEvent_LimbActor;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_OnBeginPlay_1;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_ComponentBoundEvent_DynaElementName;        // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_OnBeginPlay;            // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_Cursor_Primitive;                     // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_Cursor_Primitive_1;                   // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy) == 0x000008, "Wrong alignment on PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy");
static_assert(sizeof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy) == 0x000120, "Wrong size on PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, EntryPoint) == 0x000000, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::EntryPoint' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_bVisibleState_1) == 0x000004, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_bVisibleState_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_Event_EndPlayReason) == 0x000005, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000006, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_SwitchEnum_CmpSuccess) == 0x000007, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_Event_NewController) == 0x000008, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_DynamicCast_AsCON_Enemy) == 0x000010, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_DynamicCast_AsCON_Enemy' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_Pawn) == 0x000020, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_Pawn' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_Location) == 0x000028, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_Location' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_Loudness) == 0x000034, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_Loudness' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_bAudibleState) == 0x000038, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_bAudibleState' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_bVisibleState) == 0x000039, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_Pawn_1) == 0x000040, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_Pawn_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_Location_1) == 0x000048, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_Location_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_LimbName) == 0x000054, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_LimbName' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_LimbData) == 0x000060, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_LimbData' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_LimbActor) == 0x0000F8, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_LimbActor' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_OnBeginPlay_1) == 0x000100, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_OnBeginPlay_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_DynaElementName) == 0x000104, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_DynaElementName' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_ComponentBoundEvent_OnBeginPlay) == 0x00010C, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_ComponentBoundEvent_OnBeginPlay' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_Event_Cursor_Primitive) == 0x000110, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_Event_Cursor_Primitive' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy, K2Node_Event_Cursor_Primitive_1) == 0x000118, "Member 'PAWN_Enemy_C_ExecuteUbergraph_PAWN_Enemy::K2Node_Event_Cursor_Primitive_1' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_6_OnDynaDamage__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_6_OnDynaDamage__DelegateSignature final
{
public:
	class FName                                   DynaElementName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnBeginPlay;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_6_OnDynaDamage__DelegateSignature) == 0x000004, "Wrong alignment on PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_6_OnDynaDamage__DelegateSignature");
static_assert(sizeof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_6_OnDynaDamage__DelegateSignature) == 0x00000C, "Wrong size on PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_6_OnDynaDamage__DelegateSignature");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_6_OnDynaDamage__DelegateSignature, DynaElementName) == 0x000000, "Member 'PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_6_OnDynaDamage__DelegateSignature::DynaElementName' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_6_OnDynaDamage__DelegateSignature, OnBeginPlay) == 0x000008, "Member 'PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_6_OnDynaDamage__DelegateSignature::OnBeginPlay' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature final
{
public:
	class FName                                   LimbName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              LimbData;                                          // 0x0008(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              LimbActor;                                         // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnBeginPlay;                                       // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature) == 0x000008, "Wrong alignment on PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature");
static_assert(sizeof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature) == 0x0000B0, "Wrong size on PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature, LimbName) == 0x000000, "Member 'PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature::LimbName' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature, LimbData) == 0x000008, "Member 'PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature::LimbData' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature, LimbActor) == 0x0000A0, "Member 'PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature::LimbActor' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature, OnBeginPlay) == 0x0000A8, "Member 'PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_DismembermentManager_K2Node_ComponentBoundEvent_1_OnLimbDismembered__DelegateSignature::OnBeginPlay' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.BndEvt__PAWN_Enemy_COMP_ScannableObject_K2Node_ComponentBoundEvent_5_VoxelScannableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_ScannableObject_K2Node_ComponentBoundEvent_5_VoxelScannableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_ScannableObject_K2Node_ComponentBoundEvent_5_VoxelScannableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_ScannableObject_K2Node_ComponentBoundEvent_5_VoxelScannableVisibilitySignature__DelegateSignature");
static_assert(sizeof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_ScannableObject_K2Node_ComponentBoundEvent_5_VoxelScannableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_ScannableObject_K2Node_ComponentBoundEvent_5_VoxelScannableVisibilitySignature__DelegateSignature");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_ScannableObject_K2Node_ComponentBoundEvent_5_VoxelScannableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_ScannableObject_K2Node_ComponentBoundEvent_5_VoxelScannableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.BndEvt__PAWN_Enemy_COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_4_CullableAudibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_4_CullableAudibilitySignature__DelegateSignature final
{
public:
	bool                                          bAudibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_4_CullableAudibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_4_CullableAudibilitySignature__DelegateSignature");
static_assert(sizeof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_4_CullableAudibilitySignature__DelegateSignature) == 0x000001, "Wrong size on PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_4_CullableAudibilitySignature__DelegateSignature");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_4_CullableAudibilitySignature__DelegateSignature, bAudibleState) == 0x000000, "Member 'PAWN_Enemy_C_BndEvt__PAWN_Enemy_COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_4_CullableAudibilitySignature__DelegateSignature::bAudibleState' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on PAWN_Enemy_C_ReceiveEndPlay");
static_assert(sizeof(PAWN_Enemy_C_ReceiveEndPlay) == 0x000001, "Wrong size on PAWN_Enemy_C_ReceiveEndPlay");
static_assert(offsetof(PAWN_Enemy_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PAWN_Enemy_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.BndEvt__COMP_VoxelNavAgent_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_BndEvt__COMP_VoxelNavAgent_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_BndEvt__COMP_VoxelNavAgent_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on PAWN_Enemy_C_BndEvt__COMP_VoxelNavAgent_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(PAWN_Enemy_C_BndEvt__COMP_VoxelNavAgent_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on PAWN_Enemy_C_BndEvt__COMP_VoxelNavAgent_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__COMP_VoxelNavAgent_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'PAWN_Enemy_C_BndEvt__COMP_VoxelNavAgent_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Enemy_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_ReceivePossessed) == 0x000008, "Wrong alignment on PAWN_Enemy_C_ReceivePossessed");
static_assert(sizeof(PAWN_Enemy_C_ReceivePossessed) == 0x000008, "Wrong size on PAWN_Enemy_C_ReceivePossessed");
static_assert(offsetof(PAWN_Enemy_C_ReceivePossessed, NewController) == 0x000000, "Member 'PAWN_Enemy_C_ReceivePossessed::NewController' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_0_OnHearPawn__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_0_OnHearPawn__DelegateSignature final
{
public:
	class APAWN_SystemShockCharacter_C*           Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Loudness;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_0_OnHearPawn__DelegateSignature) == 0x000008, "Wrong alignment on PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_0_OnHearPawn__DelegateSignature");
static_assert(sizeof(PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_0_OnHearPawn__DelegateSignature) == 0x000018, "Wrong size on PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_0_OnHearPawn__DelegateSignature");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_0_OnHearPawn__DelegateSignature, Pawn) == 0x000000, "Member 'PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_0_OnHearPawn__DelegateSignature::Pawn' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_0_OnHearPawn__DelegateSignature, Location) == 0x000008, "Member 'PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_0_OnHearPawn__DelegateSignature::Location' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_0_OnHearPawn__DelegateSignature, Loudness) == 0x000014, "Member 'PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_0_OnHearPawn__DelegateSignature::Loudness' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_2_OnSeePawn__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_2_OnSeePawn__DelegateSignature final
{
public:
	class APAWN_SystemShockCharacter_C*           Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_2_OnSeePawn__DelegateSignature) == 0x000008, "Wrong alignment on PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_2_OnSeePawn__DelegateSignature");
static_assert(sizeof(PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_2_OnSeePawn__DelegateSignature) == 0x000018, "Wrong size on PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_2_OnSeePawn__DelegateSignature");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_2_OnSeePawn__DelegateSignature, Pawn) == 0x000000, "Member 'PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_2_OnSeePawn__DelegateSignature::Pawn' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_2_OnSeePawn__DelegateSignature, Location) == 0x000008, "Member 'PAWN_Enemy_C_BndEvt__COMP_EnemySensingComponent_K2Node_ComponentBoundEvent_2_OnSeePawn__DelegateSignature::Location' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnCursorLeave
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Enemy_C_OnCursorLeave final
{
public:
	class UPrimitiveComponent*                    Cursor_Primitive;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_OnCursorLeave) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnCursorLeave");
static_assert(sizeof(PAWN_Enemy_C_OnCursorLeave) == 0x000008, "Wrong size on PAWN_Enemy_C_OnCursorLeave");
static_assert(offsetof(PAWN_Enemy_C_OnCursorLeave, Cursor_Primitive) == 0x000000, "Member 'PAWN_Enemy_C_OnCursorLeave::Cursor_Primitive' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnCursorEnter
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Enemy_C_OnCursorEnter final
{
public:
	class UPrimitiveComponent*                    Cursor_Primitive;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_OnCursorEnter) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnCursorEnter");
static_assert(sizeof(PAWN_Enemy_C_OnCursorEnter) == 0x000008, "Wrong size on PAWN_Enemy_C_OnCursorEnter");
static_assert(offsetof(PAWN_Enemy_C_OnCursorEnter, Cursor_Primitive) == 0x000000, "Member 'PAWN_Enemy_C_OnCursorEnter::Cursor_Primitive' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.UserConstructionScript
// 0x0028 (0x0028 - 0x0000)
struct PAWN_Enemy_C_UserConstructionScript final
{
public:
	TArray<float>                                 K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ReferenceParm)
	TArray<class UMeshComponent*>                 CallFunc_GetChildComponentsByClass_ReturnValue;    // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_TrySetEnemyName_Result;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_UserConstructionScript) == 0x000008, "Wrong alignment on PAWN_Enemy_C_UserConstructionScript");
static_assert(sizeof(PAWN_Enemy_C_UserConstructionScript) == 0x000028, "Wrong size on PAWN_Enemy_C_UserConstructionScript");
static_assert(offsetof(PAWN_Enemy_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'PAWN_Enemy_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_UserConstructionScript, CallFunc_GetChildComponentsByClass_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_UserConstructionScript::CallFunc_GetChildComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_UserConstructionScript, CallFunc_TrySetEnemyName_Result) == 0x000020, "Member 'PAWN_Enemy_C_UserConstructionScript::CallFunc_TrySetEnemyName_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetTarget
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Enemy_C_SetTarget final
{
public:
	ENUM_TargetAssignmentType                     AssignType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Can_Move_Automatically_Result;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetTarget) == 0x000008, "Wrong alignment on PAWN_Enemy_C_SetTarget");
static_assert(sizeof(PAWN_Enemy_C_SetTarget) == 0x000018, "Wrong size on PAWN_Enemy_C_SetTarget");
static_assert(offsetof(PAWN_Enemy_C_SetTarget, AssignType) == 0x000000, "Member 'PAWN_Enemy_C_SetTarget::AssignType' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetTarget, Target) == 0x000008, "Member 'PAWN_Enemy_C_SetTarget::Target' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetTarget, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'PAWN_Enemy_C_SetTarget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetTarget, CallFunc_Can_Move_Automatically_Result) == 0x000011, "Member 'PAWN_Enemy_C_SetTarget::CallFunc_Can_Move_Automatically_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetTarget
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Enemy_C_GetTarget final
{
public:
	ENUM_TargetAssignmentType                     Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     Target;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetNavigationTarget_target;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetHeadlookTarget_Target;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetBodyTarget_Target;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetTarget) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetTarget");
static_assert(sizeof(PAWN_Enemy_C_GetTarget) == 0x000030, "Wrong size on PAWN_Enemy_C_GetTarget");
static_assert(offsetof(PAWN_Enemy_C_GetTarget, Type) == 0x000000, "Member 'PAWN_Enemy_C_GetTarget::Type' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetTarget, Target) == 0x000008, "Member 'PAWN_Enemy_C_GetTarget::Target' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetTarget, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'PAWN_Enemy_C_GetTarget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetTarget, CallFunc_GetNavigationTarget_target) == 0x000018, "Member 'PAWN_Enemy_C_GetTarget::CallFunc_GetNavigationTarget_target' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetTarget, CallFunc_GetHeadlookTarget_Target) == 0x000020, "Member 'PAWN_Enemy_C_GetTarget::CallFunc_GetHeadlookTarget_Target' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetTarget, CallFunc_GetBodyTarget_Target) == 0x000028, "Member 'PAWN_Enemy_C_GetTarget::CallFunc_GetBodyTarget_Target' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnCharacterDied
// 0x0090 (0x0090 - 0x0000)
struct PAWN_Enemy_C_OnCharacterDied final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 OtherActor;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DeathBlowMontage;                                  // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnCharacterDied_Result;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStopGroundAlignmentTimer_Result;       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySetLightState_Result;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCustomPrimitiveDataFloat_ReturnValue;  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttributeDef*                          CallFunc_GetArmorAttrib_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttributeDef*                          CallFunc_GetHealthAttrib_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAttributeDef*>                  K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_TryGenerateLoot_Result;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCharacterPropertiesToDead_Result;      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnCharacterDied) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnCharacterDied");
static_assert(sizeof(PAWN_Enemy_C_OnCharacterDied) == 0x000090, "Wrong size on PAWN_Enemy_C_OnCharacterDied");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, ImpactData) == 0x000000, "Member 'PAWN_Enemy_C_OnCharacterDied::ImpactData' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, DamageInstance) == 0x000008, "Member 'PAWN_Enemy_C_OnCharacterDied::DamageInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, OtherActor) == 0x000030, "Member 'PAWN_Enemy_C_OnCharacterDied::OtherActor' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, Result) == 0x000038, "Member 'PAWN_Enemy_C_OnCharacterDied::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, DeathBlowMontage) == 0x00003C, "Member 'PAWN_Enemy_C_OnCharacterDied::DeathBlowMontage' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, CallFunc_OnCharacterDied_Result) == 0x000040, "Member 'PAWN_Enemy_C_OnCharacterDied::CallFunc_OnCharacterDied_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, CallFunc_TryStopGroundAlignmentTimer_Result) == 0x000041, "Member 'PAWN_Enemy_C_OnCharacterDied::CallFunc_TryStopGroundAlignmentTimer_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, CallFunc_TrySetLightState_Result) == 0x000042, "Member 'PAWN_Enemy_C_OnCharacterDied::CallFunc_TrySetLightState_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, CallFunc_GetCustomPrimitiveDataFloat_ReturnValue) == 0x000044, "Member 'PAWN_Enemy_C_OnCharacterDied::CallFunc_GetCustomPrimitiveDataFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, CallFunc_GetArmorAttrib_ReturnValue) == 0x000048, "Member 'PAWN_Enemy_C_OnCharacterDied::CallFunc_GetArmorAttrib_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000050, "Member 'PAWN_Enemy_C_OnCharacterDied::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, CallFunc_GetHealthAttrib_ReturnValue) == 0x000058, "Member 'PAWN_Enemy_C_OnCharacterDied::CallFunc_GetHealthAttrib_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, K2Node_MakeArray_Array) == 0x000060, "Member 'PAWN_Enemy_C_OnCharacterDied::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, CallFunc_TryGenerateLoot_Result) == 0x000070, "Member 'PAWN_Enemy_C_OnCharacterDied::CallFunc_TryGenerateLoot_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, CallFunc_SetCharacterPropertiesToDead_Result) == 0x000071, "Member 'PAWN_Enemy_C_OnCharacterDied::CallFunc_SetCharacterPropertiesToDead_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, CallFunc_GetGameInstance_ReturnValue) == 0x000078, "Member 'PAWN_Enemy_C_OnCharacterDied::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, K2Node_DynamicCast_AsGI_Single_Player) == 0x000080, "Member 'PAWN_Enemy_C_OnCharacterDied::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterDied, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'PAWN_Enemy_C_OnCharacterDied::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ReceiveAnimationMessage
// 0x0058 (0x0058 - 0x0000)
struct PAWN_Enemy_C_ReceiveAnimationMessage final
{
public:
	EActorMessagePriority                         Priority;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkill_C*                               ActiveSkill;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitboxState;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         HitboxTags;                                        // 0x0030(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_ReceiveAnimationMessage_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USkill_C*                               CallFunc_GetActiveSkill_Skill;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on PAWN_Enemy_C_ReceiveAnimationMessage");
static_assert(sizeof(PAWN_Enemy_C_ReceiveAnimationMessage) == 0x000058, "Wrong size on PAWN_Enemy_C_ReceiveAnimationMessage");
static_assert(offsetof(PAWN_Enemy_C_ReceiveAnimationMessage, Priority) == 0x000000, "Member 'PAWN_Enemy_C_ReceiveAnimationMessage::Priority' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ReceiveAnimationMessage, Message) == 0x000008, "Member 'PAWN_Enemy_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ReceiveAnimationMessage, ReturnValue) == 0x000018, "Member 'PAWN_Enemy_C_ReceiveAnimationMessage::ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ReceiveAnimationMessage, ActiveSkill) == 0x000020, "Member 'PAWN_Enemy_C_ReceiveAnimationMessage::ActiveSkill' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ReceiveAnimationMessage, HitboxState) == 0x000028, "Member 'PAWN_Enemy_C_ReceiveAnimationMessage::HitboxState' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ReceiveAnimationMessage, HitboxTags) == 0x000030, "Member 'PAWN_Enemy_C_ReceiveAnimationMessage::HitboxTags' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_ReturnValue) == 0x000040, "Member 'PAWN_Enemy_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x000041, "Member 'PAWN_Enemy_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000042, "Member 'PAWN_Enemy_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ReceiveAnimationMessage, CallFunc_GetActiveSkill_Skill) == 0x000048, "Member 'PAWN_Enemy_C_ReceiveAnimationMessage::CallFunc_GetActiveSkill_Skill' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ReceiveAnimationMessage, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'PAWN_Enemy_C_ReceiveAnimationMessage::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryAssignInitialBehavior
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_TryAssignInitialBehavior final
{
public:
	bool                                          CallFunc_HasGrantedDefaultLoadout_Result;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryAssignInitialBehavior) == 0x000001, "Wrong alignment on PAWN_Enemy_C_TryAssignInitialBehavior");
static_assert(sizeof(PAWN_Enemy_C_TryAssignInitialBehavior) == 0x000002, "Wrong size on PAWN_Enemy_C_TryAssignInitialBehavior");
static_assert(offsetof(PAWN_Enemy_C_TryAssignInitialBehavior, CallFunc_HasGrantedDefaultLoadout_Result) == 0x000000, "Member 'PAWN_Enemy_C_TryAssignInitialBehavior::CallFunc_HasGrantedDefaultLoadout_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryAssignInitialBehavior, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_TryAssignInitialBehavior::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryRestoreLocalBehavior
// 0x0028 (0x0028 - 0x0000)
struct PAWN_Enemy_C_TryRestoreLocalBehavior final
{
public:
	class UPointOfInterestComponent_C*            K2Node_DynamicCast_AsPoint_Of_Interest_Component;  // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryClaimPointOfInterest_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APatrolNode_C*                          K2Node_DynamicCast_AsPatrol_Node;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryRestoreLocalBehavior) == 0x000008, "Wrong alignment on PAWN_Enemy_C_TryRestoreLocalBehavior");
static_assert(sizeof(PAWN_Enemy_C_TryRestoreLocalBehavior) == 0x000028, "Wrong size on PAWN_Enemy_C_TryRestoreLocalBehavior");
static_assert(offsetof(PAWN_Enemy_C_TryRestoreLocalBehavior, K2Node_DynamicCast_AsPoint_Of_Interest_Component) == 0x000000, "Member 'PAWN_Enemy_C_TryRestoreLocalBehavior::K2Node_DynamicCast_AsPoint_Of_Interest_Component' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryRestoreLocalBehavior, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'PAWN_Enemy_C_TryRestoreLocalBehavior::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryRestoreLocalBehavior, CallFunc_TryClaimPointOfInterest_ReturnValue) == 0x000009, "Member 'PAWN_Enemy_C_TryRestoreLocalBehavior::CallFunc_TryClaimPointOfInterest_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryRestoreLocalBehavior, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'PAWN_Enemy_C_TryRestoreLocalBehavior::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryRestoreLocalBehavior, CallFunc_IsValid_ReturnValue_1) == 0x00000B, "Member 'PAWN_Enemy_C_TryRestoreLocalBehavior::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryRestoreLocalBehavior, CallFunc_IsValid_ReturnValue_2) == 0x00000C, "Member 'PAWN_Enemy_C_TryRestoreLocalBehavior::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryRestoreLocalBehavior, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_TryRestoreLocalBehavior::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryRestoreLocalBehavior, K2Node_DynamicCast_AsPatrol_Node) == 0x000018, "Member 'PAWN_Enemy_C_TryRestoreLocalBehavior::K2Node_DynamicCast_AsPatrol_Node' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryRestoreLocalBehavior, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'PAWN_Enemy_C_TryRestoreLocalBehavior::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TrySetEnemyName
// 0x0058 (0x0058 - 0x0000)
struct PAWN_Enemy_C_TrySetEnemyName final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_EnemyStats                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TrySetEnemyName) == 0x000008, "Wrong alignment on PAWN_Enemy_C_TrySetEnemyName");
static_assert(sizeof(PAWN_Enemy_C_TrySetEnemyName) == 0x000058, "Wrong size on PAWN_Enemy_C_TrySetEnemyName");
static_assert(offsetof(PAWN_Enemy_C_TrySetEnemyName, Result) == 0x000000, "Member 'PAWN_Enemy_C_TrySetEnemyName::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TrySetEnemyName, CallFunc_TextIsEmpty_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_TrySetEnemyName::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TrySetEnemyName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'PAWN_Enemy_C_TrySetEnemyName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TrySetEnemyName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'PAWN_Enemy_C_TrySetEnemyName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TrySetSpawnData
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Enemy_C_TrySetSpawnData final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasGrantedDefaultLoadout_Result;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_TrySetSpawnData) == 0x000004, "Wrong alignment on PAWN_Enemy_C_TrySetSpawnData");
static_assert(sizeof(PAWN_Enemy_C_TrySetSpawnData) == 0x000020, "Wrong size on PAWN_Enemy_C_TrySetSpawnData");
static_assert(offsetof(PAWN_Enemy_C_TrySetSpawnData, Result) == 0x000000, "Member 'PAWN_Enemy_C_TrySetSpawnData::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TrySetSpawnData, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_TrySetSpawnData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TrySetSpawnData, CallFunc_GetShockAgentLocation_Location) == 0x000004, "Member 'PAWN_Enemy_C_TrySetSpawnData::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TrySetSpawnData, CallFunc_HasGrantedDefaultLoadout_Result) == 0x000010, "Member 'PAWN_Enemy_C_TrySetSpawnData::CallFunc_HasGrantedDefaultLoadout_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TrySetSpawnData, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'PAWN_Enemy_C_TrySetSpawnData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TrySetSpawnData, CallFunc_GetActorForwardVector_ReturnValue) == 0x000014, "Member 'PAWN_Enemy_C_TrySetSpawnData::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryGenerateLoot
// 0x0148 (0x0148 - 0x0000)
struct PAWN_Enemy_C_TryGenerateLoot final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          RandomStream;                                      // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      Inventory;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLootSeed_Seed;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_CombatDifficultySettings       CallFunc_GetCombatDifficultySettings_Settings;     // 0x0040(0x0034)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x0074(0x0008)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_LootBonusData                  K2Node_MakeStruct_STRUCT_LootBonusData;            // 0x0080(0x0018)(HasGetValueTypeHash)
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0098(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InventoryBagParams             K2Node_MakeStruct_STRUCT_InventoryBagParams;       // 0x00A8(0x0030)(HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_CreateInventoryItem_Item;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_AddBag_Bag;                               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Badge_C*                          K2Node_DynamicCast_AsITEM_Badge;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InventoryBagParams             K2Node_MakeStruct_STRUCT_InventoryBagParams_1;     // 0x00F8(0x0030)(HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_AddBag_Bag_1;                             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddItem_Result;                           // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13D[0x3];                                      // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_AddComponentByClass_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_TryGenerateLoot) == 0x000008, "Wrong alignment on PAWN_Enemy_C_TryGenerateLoot");
static_assert(sizeof(PAWN_Enemy_C_TryGenerateLoot) == 0x000148, "Wrong size on PAWN_Enemy_C_TryGenerateLoot");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, Result) == 0x000000, "Member 'PAWN_Enemy_C_TryGenerateLoot::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, RandomStream) == 0x000004, "Member 'PAWN_Enemy_C_TryGenerateLoot::RandomStream' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, Inventory) == 0x000010, "Member 'PAWN_Enemy_C_TryGenerateLoot::Inventory' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, K2Node_MakeArray_Array) == 0x000018, "Member 'PAWN_Enemy_C_TryGenerateLoot::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'PAWN_Enemy_C_TryGenerateLoot::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'PAWN_Enemy_C_TryGenerateLoot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_GetLootSeed_Seed) == 0x00003C, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_GetLootSeed_Seed' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_GetCombatDifficultySettings_Settings) == 0x000040, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_GetCombatDifficultySettings_Settings' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_MakeRandomStream_ReturnValue) == 0x000074, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00007C, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, K2Node_MakeStruct_STRUCT_LootBonusData) == 0x000080, "Member 'PAWN_Enemy_C_TryGenerateLoot::K2Node_MakeStruct_STRUCT_LootBonusData' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000098, "Member 'PAWN_Enemy_C_TryGenerateLoot::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, K2Node_MakeStruct_STRUCT_InventoryBagParams) == 0x0000A8, "Member 'PAWN_Enemy_C_TryGenerateLoot::K2Node_MakeStruct_STRUCT_InventoryBagParams' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_CreateInventoryItem_Item) == 0x0000D8, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_CreateInventoryItem_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_AddBag_Bag) == 0x0000E0, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_AddBag_Bag' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, K2Node_DynamicCast_AsITEM_Badge) == 0x0000E8, "Member 'PAWN_Enemy_C_TryGenerateLoot::K2Node_DynamicCast_AsITEM_Badge' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'PAWN_Enemy_C_TryGenerateLoot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, K2Node_MakeStruct_STRUCT_InventoryBagParams_1) == 0x0000F8, "Member 'PAWN_Enemy_C_TryGenerateLoot::K2Node_MakeStruct_STRUCT_InventoryBagParams_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_GetInventoryComponent_Inventory) == 0x000128, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_AddBag_Bag_1) == 0x000130, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_AddBag_Bag_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_Not_PreBool_ReturnValue) == 0x000139, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_AddItem_Result) == 0x00013A, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_AddItem_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_IsValid_ReturnValue_1) == 0x00013B, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_IsValid_ReturnValue_2) == 0x00013C, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryGenerateLoot, CallFunc_AddComponentByClass_ReturnValue) == 0x000140, "Member 'PAWN_Enemy_C_TryGenerateLoot::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ShouldCloseLootWindow
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Enemy_C_ShouldCloseLootWindow final
{
public:
	class AActor*                                 NewChannelingInteract;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_ShouldCloseLootWindow) == 0x000008, "Wrong alignment on PAWN_Enemy_C_ShouldCloseLootWindow");
static_assert(sizeof(PAWN_Enemy_C_ShouldCloseLootWindow) == 0x000020, "Wrong size on PAWN_Enemy_C_ShouldCloseLootWindow");
static_assert(offsetof(PAWN_Enemy_C_ShouldCloseLootWindow, NewChannelingInteract) == 0x000000, "Member 'PAWN_Enemy_C_ShouldCloseLootWindow::NewChannelingInteract' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ShouldCloseLootWindow, Result) == 0x000008, "Member 'PAWN_Enemy_C_ShouldCloseLootWindow::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ShouldCloseLootWindow, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'PAWN_Enemy_C_ShouldCloseLootWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ShouldCloseLootWindow, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_ShouldCloseLootWindow::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ShouldCloseLootWindow, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'PAWN_Enemy_C_ShouldCloseLootWindow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetExploitDamagePercentage
// 0x0080 (0x0080 - 0x0000)
struct PAWN_Enemy_C_GetExploitDamagePercentage final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactLocation;                                    // 0x0010(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AttackDirection;                                   // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AttackRadius;                                      // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowSneakAttack;                                  // 0x002C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ExploitDamagePercent;                              // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlockPercent;                                      // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ExploitDamagePercentage;                           // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLimbDamageBonusFromEpicenter_Result;   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDynaDamageBonusFromBoneName_BonusPercent; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRecentlySeenPawn_Result;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetLimbDamageBonusFromBoneName_BonusPercent; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetExploitDamagePercentage) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetExploitDamagePercentage");
static_assert(sizeof(PAWN_Enemy_C_GetExploitDamagePercentage) == 0x000080, "Wrong size on PAWN_Enemy_C_GetExploitDamagePercentage");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, SourceActor) == 0x000000, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::SourceActor' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, BoneName) == 0x000008, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::BoneName' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, ImpactLocation) == 0x000010, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::ImpactLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, AttackDirection) == 0x00001C, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::AttackDirection' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, AttackRadius) == 0x000028, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::AttackRadius' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, AllowSneakAttack) == 0x00002C, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::AllowSneakAttack' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, ExploitDamagePercent) == 0x000030, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::ExploitDamagePercent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, BlockPercent) == 0x000034, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::BlockPercent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, ExploitDamagePercentage) == 0x000038, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::ExploitDamagePercentage' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_GetLimbDamageBonusFromEpicenter_Result) == 0x00003C, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_GetLimbDamageBonusFromEpicenter_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_NotEqual_NameName_ReturnValue) == 0x000044, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_GetActorForwardVector_ReturnValue) == 0x000048, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_Dot_VectorVector_ReturnValue) == 0x000054, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000058, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000061, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000064, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_GetDynaDamageBonusFromBoneName_BonusPercent) == 0x000068, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_GetDynaDamageBonusFromBoneName_BonusPercent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_HasRecentlySeenPawn_Result) == 0x00006C, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_HasRecentlySeenPawn_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_BooleanAND_ReturnValue) == 0x00006D, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_Not_PreBool_ReturnValue) == 0x00006E, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_GetLimbDamageBonusFromBoneName_BonusPercent) == 0x000070, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_GetLimbDamageBonusFromBoneName_BonusPercent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000074, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetExploitDamagePercentage, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000078, "Member 'PAWN_Enemy_C_GetExploitDamagePercentage::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetArmorAugmentationPercentage
// 0x001C (0x001C - 0x0000)
struct PAWN_Enemy_C_GetArmorAugmentationPercentage final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactLocation;                                    // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArmorAugmentPercent;                               // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLimbArmorBonusFromBoneName_BonusPercent; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetArmorAugmentationPercentage) == 0x000004, "Wrong alignment on PAWN_Enemy_C_GetArmorAugmentationPercentage");
static_assert(sizeof(PAWN_Enemy_C_GetArmorAugmentationPercentage) == 0x00001C, "Wrong size on PAWN_Enemy_C_GetArmorAugmentationPercentage");
static_assert(offsetof(PAWN_Enemy_C_GetArmorAugmentationPercentage, BoneName) == 0x000000, "Member 'PAWN_Enemy_C_GetArmorAugmentationPercentage::BoneName' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetArmorAugmentationPercentage, ImpactLocation) == 0x000008, "Member 'PAWN_Enemy_C_GetArmorAugmentationPercentage::ImpactLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetArmorAugmentationPercentage, ArmorAugmentPercent) == 0x000014, "Member 'PAWN_Enemy_C_GetArmorAugmentationPercentage::ArmorAugmentPercent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetArmorAugmentationPercentage, CallFunc_GetLimbArmorBonusFromBoneName_BonusPercent) == 0x000018, "Member 'PAWN_Enemy_C_GetArmorAugmentationPercentage::CallFunc_GetLimbArmorBonusFromBoneName_BonusPercent' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GrantDefaultCharacterLoadout
// 0x0003 (0x0003 - 0x0000)
struct PAWN_Enemy_C_GrantDefaultCharacterLoadout final
{
public:
	bool                                          ShouldGrantSkills;                                 // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGrantedDefaultLoadout_Result;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_GrantDefaultCharacterLoadout) == 0x000001, "Wrong alignment on PAWN_Enemy_C_GrantDefaultCharacterLoadout");
static_assert(sizeof(PAWN_Enemy_C_GrantDefaultCharacterLoadout) == 0x000003, "Wrong size on PAWN_Enemy_C_GrantDefaultCharacterLoadout");
static_assert(offsetof(PAWN_Enemy_C_GrantDefaultCharacterLoadout, ShouldGrantSkills) == 0x000000, "Member 'PAWN_Enemy_C_GrantDefaultCharacterLoadout::ShouldGrantSkills' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GrantDefaultCharacterLoadout, CallFunc_HasGrantedDefaultLoadout_Result) == 0x000001, "Member 'PAWN_Enemy_C_GrantDefaultCharacterLoadout::CallFunc_HasGrantedDefaultLoadout_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GrantDefaultCharacterLoadout, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PAWN_Enemy_C_GrantDefaultCharacterLoadout::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetLowFiVisibilityState
// 0x0007 (0x0007 - 0x0000)
struct PAWN_Enemy_C_SetLowFiVisibilityState final
{
public:
	bool                                          NewLowFiState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CurrentVisibility;                                 // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PreviousVisibility;                                // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterVisible_Result;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterVisible_Result_1;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetLowFiVisibilityState) == 0x000001, "Wrong alignment on PAWN_Enemy_C_SetLowFiVisibilityState");
static_assert(sizeof(PAWN_Enemy_C_SetLowFiVisibilityState) == 0x000007, "Wrong size on PAWN_Enemy_C_SetLowFiVisibilityState");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiVisibilityState, NewLowFiState) == 0x000000, "Member 'PAWN_Enemy_C_SetLowFiVisibilityState::NewLowFiState' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiVisibilityState, CurrentVisibility) == 0x000001, "Member 'PAWN_Enemy_C_SetLowFiVisibilityState::CurrentVisibility' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiVisibilityState, PreviousVisibility) == 0x000002, "Member 'PAWN_Enemy_C_SetLowFiVisibilityState::PreviousVisibility' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiVisibilityState, CallFunc_IsCharacterVisible_Result) == 0x000003, "Member 'PAWN_Enemy_C_SetLowFiVisibilityState::CallFunc_IsCharacterVisible_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiVisibilityState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000004, "Member 'PAWN_Enemy_C_SetLowFiVisibilityState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiVisibilityState, CallFunc_IsCharacterVisible_Result_1) == 0x000005, "Member 'PAWN_Enemy_C_SetLowFiVisibilityState::CallFunc_IsCharacterVisible_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiVisibilityState, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000006, "Member 'PAWN_Enemy_C_SetLowFiVisibilityState::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetLowFiBehaviorState
// 0x0048 (0x0048 - 0x0000)
struct PAWN_Enemy_C_SetLowFiBehaviorState final
{
public:
	bool                                          NewLowFiState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_1;     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStunned_Result;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_DynamicCast_AsAIController;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSetLowFiBehaviorEnabled_Result;        // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetLowFiBehaviorState) == 0x000008, "Wrong alignment on PAWN_Enemy_C_SetLowFiBehaviorState");
static_assert(sizeof(PAWN_Enemy_C_SetLowFiBehaviorState) == 0x000048, "Wrong size on PAWN_Enemy_C_SetLowFiBehaviorState");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, NewLowFiState) == 0x000000, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::NewLowFiState' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_K2_IsTimerActiveHandle_ReturnValue_1) == 0x000003, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_K2_IsTimerActiveHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_IsStunned_Result) == 0x000005, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_IsStunned_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_Not_PreBool_ReturnValue_2) == 0x000006, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000007, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_Not_PreBool_ReturnValue_3) == 0x000008, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_Not_PreBool_ReturnValue_4) == 0x000009, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_Not_PreBool_ReturnValue_5) == 0x00001C, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_BooleanAND_ReturnValue_1) == 0x00001E, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, K2Node_DynamicCast_AsAIController) == 0x000028, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::K2Node_DynamicCast_AsAIController' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_RandomFloatInRange_ReturnValue) == 0x000034, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000040, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_Not_PreBool_ReturnValue_6) == 0x000041, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_BooleanAND_ReturnValue_2) == 0x000042, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_CanSetLowFiBehaviorEnabled_Result) == 0x000043, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_CanSetLowFiBehaviorEnabled_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_Not_PreBool_ReturnValue_7) == 0x000044, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLowFiBehaviorState, CallFunc_BooleanOR_ReturnValue) == 0x000045, "Member 'PAWN_Enemy_C_SetLowFiBehaviorState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ForceRetryLowFiBehaviorAfterDuration
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration) == 0x000008, "Wrong alignment on PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration");
static_assert(sizeof(PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration) == 0x000020, "Wrong size on PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration");
static_assert(offsetof(PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration, Duration) == 0x000000, "Member 'PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration::Duration' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration, CallFunc_FMax_ReturnValue) == 0x000004, "Member 'PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'PAWN_Enemy_C_ForceRetryLowFiBehaviorAfterDuration::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetBehaviorEnabled
// 0x0028 (0x0028 - 0x0000)
struct PAWN_Enemy_C_SetBehaviorEnabled final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStunned_Result;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLowFiAudibilityEnabled_Result;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Character_C> K2Node_DynamicCast_AsINTERF_ANIM_Character;        // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCatatonic_Result;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetBehaviorEnabled) == 0x000008, "Wrong alignment on PAWN_Enemy_C_SetBehaviorEnabled");
static_assert(sizeof(PAWN_Enemy_C_SetBehaviorEnabled) == 0x000028, "Wrong size on PAWN_Enemy_C_SetBehaviorEnabled");
static_assert(offsetof(PAWN_Enemy_C_SetBehaviorEnabled, State) == 0x000000, "Member 'PAWN_Enemy_C_SetBehaviorEnabled::State' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetBehaviorEnabled, CallFunc_IsStunned_Result) == 0x000001, "Member 'PAWN_Enemy_C_SetBehaviorEnabled::CallFunc_IsStunned_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetBehaviorEnabled, CallFunc_IsLowFiAudibilityEnabled_Result) == 0x000002, "Member 'PAWN_Enemy_C_SetBehaviorEnabled::CallFunc_IsLowFiAudibilityEnabled_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetBehaviorEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'PAWN_Enemy_C_SetBehaviorEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetBehaviorEnabled, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'PAWN_Enemy_C_SetBehaviorEnabled::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetBehaviorEnabled, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'PAWN_Enemy_C_SetBehaviorEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetBehaviorEnabled, CallFunc_BooleanAND_ReturnValue_1) == 0x000006, "Member 'PAWN_Enemy_C_SetBehaviorEnabled::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetBehaviorEnabled, CallFunc_Not_PreBool_ReturnValue_2) == 0x000007, "Member 'PAWN_Enemy_C_SetBehaviorEnabled::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetBehaviorEnabled, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_SetBehaviorEnabled::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetBehaviorEnabled, K2Node_DynamicCast_AsINTERF_ANIM_Character) == 0x000010, "Member 'PAWN_Enemy_C_SetBehaviorEnabled::K2Node_DynamicCast_AsINTERF_ANIM_Character' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetBehaviorEnabled, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PAWN_Enemy_C_SetBehaviorEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetBehaviorEnabled, CallFunc_SetCatatonic_Result) == 0x000021, "Member 'PAWN_Enemy_C_SetBehaviorEnabled::CallFunc_SetCatatonic_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsBehaviorDisabled
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Enemy_C_IsBehaviorDisabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsBehaviorDisabled) == 0x000001, "Wrong alignment on PAWN_Enemy_C_IsBehaviorDisabled");
static_assert(sizeof(PAWN_Enemy_C_IsBehaviorDisabled) == 0x000004, "Wrong size on PAWN_Enemy_C_IsBehaviorDisabled");
static_assert(offsetof(PAWN_Enemy_C_IsBehaviorDisabled, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsBehaviorDisabled::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsBehaviorDisabled, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_IsBehaviorDisabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsBehaviorDisabled, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'PAWN_Enemy_C_IsBehaviorDisabled::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsBehaviorDisabled, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'PAWN_Enemy_C_IsBehaviorDisabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.HasImportantBehavior
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Enemy_C_HasImportantBehavior final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNearSpawnLocation_Result;               // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ULocalBehaviorComponent_C*              CallFunc_GetLocalBehaviorComponent_LocalBehaviorComponent; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_HasImportantBehavior) == 0x000008, "Wrong alignment on PAWN_Enemy_C_HasImportantBehavior");
static_assert(sizeof(PAWN_Enemy_C_HasImportantBehavior) == 0x000018, "Wrong size on PAWN_Enemy_C_HasImportantBehavior");
static_assert(offsetof(PAWN_Enemy_C_HasImportantBehavior, Result) == 0x000000, "Member 'PAWN_Enemy_C_HasImportantBehavior::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_HasImportantBehavior, CallFunc_IsNearSpawnLocation_Result) == 0x000001, "Member 'PAWN_Enemy_C_HasImportantBehavior::CallFunc_IsNearSpawnLocation_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_HasImportantBehavior, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PAWN_Enemy_C_HasImportantBehavior::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_HasImportantBehavior, CallFunc_GetLocalBehaviorComponent_LocalBehaviorComponent) == 0x000008, "Member 'PAWN_Enemy_C_HasImportantBehavior::CallFunc_GetLocalBehaviorComponent_LocalBehaviorComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_HasImportantBehavior, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_HasImportantBehavior::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_HasImportantBehavior, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'PAWN_Enemy_C_HasImportantBehavior::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsAnyBehaviorEnabled
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_IsAnyBehaviorEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsAnyBehaviorEnabled) == 0x000001, "Wrong alignment on PAWN_Enemy_C_IsAnyBehaviorEnabled");
static_assert(sizeof(PAWN_Enemy_C_IsAnyBehaviorEnabled) == 0x000002, "Wrong size on PAWN_Enemy_C_IsAnyBehaviorEnabled");
static_assert(offsetof(PAWN_Enemy_C_IsAnyBehaviorEnabled, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsAnyBehaviorEnabled::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsAnyBehaviorEnabled, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_IsAnyBehaviorEnabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.InitializeDynamicBehaviors
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Enemy_C_InitializeDynamicBehaviors final
{
public:
	class UBehaviorTreeComponent*                 BehaviorTree;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_InitializeDynamicBehaviors) == 0x000008, "Wrong alignment on PAWN_Enemy_C_InitializeDynamicBehaviors");
static_assert(sizeof(PAWN_Enemy_C_InitializeDynamicBehaviors) == 0x000010, "Wrong size on PAWN_Enemy_C_InitializeDynamicBehaviors");
static_assert(offsetof(PAWN_Enemy_C_InitializeDynamicBehaviors, BehaviorTree) == 0x000000, "Member 'PAWN_Enemy_C_InitializeDynamicBehaviors::BehaviorTree' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeDynamicBehaviors, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_InitializeDynamicBehaviors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeDynamicBehaviors, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'PAWN_Enemy_C_InitializeDynamicBehaviors::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetDynamicCombatBehavior
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Enemy_C_SetDynamicCombatBehavior final
{
public:
	class UBehaviorTree*                          DynamicBehavior;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Enemy_C*                           K2Node_DynamicCast_AsCON_Enemy;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBehaviorTreeComponent*                 K2Node_DynamicCast_AsBehavior_Tree_Component;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetDynamicCombatBehavior) == 0x000008, "Wrong alignment on PAWN_Enemy_C_SetDynamicCombatBehavior");
static_assert(sizeof(PAWN_Enemy_C_SetDynamicCombatBehavior) == 0x000030, "Wrong size on PAWN_Enemy_C_SetDynamicCombatBehavior");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicCombatBehavior, DynamicBehavior) == 0x000000, "Member 'PAWN_Enemy_C_SetDynamicCombatBehavior::DynamicBehavior' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicCombatBehavior, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_SetDynamicCombatBehavior::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicCombatBehavior, K2Node_DynamicCast_AsCON_Enemy) == 0x000010, "Member 'PAWN_Enemy_C_SetDynamicCombatBehavior::K2Node_DynamicCast_AsCON_Enemy' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicCombatBehavior, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Enemy_C_SetDynamicCombatBehavior::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicCombatBehavior, K2Node_DynamicCast_AsBehavior_Tree_Component) == 0x000020, "Member 'PAWN_Enemy_C_SetDynamicCombatBehavior::K2Node_DynamicCast_AsBehavior_Tree_Component' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicCombatBehavior, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'PAWN_Enemy_C_SetDynamicCombatBehavior::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetDynamicIdleBehavior
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Enemy_C_SetDynamicIdleBehavior final
{
public:
	class UBehaviorTree*                          DynamicBehavior;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Enemy_C*                           K2Node_DynamicCast_AsCON_Enemy;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBehaviorTreeComponent*                 K2Node_DynamicCast_AsBehavior_Tree_Component;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetDynamicIdleBehavior) == 0x000008, "Wrong alignment on PAWN_Enemy_C_SetDynamicIdleBehavior");
static_assert(sizeof(PAWN_Enemy_C_SetDynamicIdleBehavior) == 0x000030, "Wrong size on PAWN_Enemy_C_SetDynamicIdleBehavior");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicIdleBehavior, DynamicBehavior) == 0x000000, "Member 'PAWN_Enemy_C_SetDynamicIdleBehavior::DynamicBehavior' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicIdleBehavior, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_SetDynamicIdleBehavior::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicIdleBehavior, K2Node_DynamicCast_AsCON_Enemy) == 0x000010, "Member 'PAWN_Enemy_C_SetDynamicIdleBehavior::K2Node_DynamicCast_AsCON_Enemy' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicIdleBehavior, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Enemy_C_SetDynamicIdleBehavior::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicIdleBehavior, K2Node_DynamicCast_AsBehavior_Tree_Component) == 0x000020, "Member 'PAWN_Enemy_C_SetDynamicIdleBehavior::K2Node_DynamicCast_AsBehavior_Tree_Component' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicIdleBehavior, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'PAWN_Enemy_C_SetDynamicIdleBehavior::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnLowFiBehaviorStateChanged
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Enemy_C_OnLowFiBehaviorStateChanged final
{
public:
	bool                                          NewLowFiState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnySkills_Result;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasImportantBehavior_Result;              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnregisterLowFiBehaviorEnemy_Result;      // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterLowFiBehaviorEnemy_Result;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnLowFiBehaviorStateChanged) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnLowFiBehaviorStateChanged");
static_assert(sizeof(PAWN_Enemy_C_OnLowFiBehaviorStateChanged) == 0x000030, "Wrong size on PAWN_Enemy_C_OnLowFiBehaviorStateChanged");
static_assert(offsetof(PAWN_Enemy_C_OnLowFiBehaviorStateChanged, NewLowFiState) == 0x000000, "Member 'PAWN_Enemy_C_OnLowFiBehaviorStateChanged::NewLowFiState' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLowFiBehaviorStateChanged, GameInstance) == 0x000008, "Member 'PAWN_Enemy_C_OnLowFiBehaviorStateChanged::GameInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLowFiBehaviorStateChanged, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_OnLowFiBehaviorStateChanged::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLowFiBehaviorStateChanged, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000018, "Member 'PAWN_Enemy_C_OnLowFiBehaviorStateChanged::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLowFiBehaviorStateChanged, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'PAWN_Enemy_C_OnLowFiBehaviorStateChanged::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLowFiBehaviorStateChanged, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PAWN_Enemy_C_OnLowFiBehaviorStateChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLowFiBehaviorStateChanged, CallFunc_HasAnySkills_Result) == 0x000029, "Member 'PAWN_Enemy_C_OnLowFiBehaviorStateChanged::CallFunc_HasAnySkills_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLowFiBehaviorStateChanged, CallFunc_HasImportantBehavior_Result) == 0x00002A, "Member 'PAWN_Enemy_C_OnLowFiBehaviorStateChanged::CallFunc_HasImportantBehavior_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLowFiBehaviorStateChanged, CallFunc_UnregisterLowFiBehaviorEnemy_Result) == 0x00002B, "Member 'PAWN_Enemy_C_OnLowFiBehaviorStateChanged::CallFunc_UnregisterLowFiBehaviorEnemy_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLowFiBehaviorStateChanged, CallFunc_RegisterLowFiBehaviorEnemy_Result) == 0x00002C, "Member 'PAWN_Enemy_C_OnLowFiBehaviorStateChanged::CallFunc_RegisterLowFiBehaviorEnemy_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetDisableBehaviorCullingWhilePatrolling
// 0x0003 (0x0003 - 0x0000)
struct PAWN_Enemy_C_SetDisableBehaviorCullingWhilePatrolling final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetDisableBehaviorCullingWhilePatrolling) == 0x000001, "Wrong alignment on PAWN_Enemy_C_SetDisableBehaviorCullingWhilePatrolling");
static_assert(sizeof(PAWN_Enemy_C_SetDisableBehaviorCullingWhilePatrolling) == 0x000003, "Wrong size on PAWN_Enemy_C_SetDisableBehaviorCullingWhilePatrolling");
static_assert(offsetof(PAWN_Enemy_C_SetDisableBehaviorCullingWhilePatrolling, State) == 0x000000, "Member 'PAWN_Enemy_C_SetDisableBehaviorCullingWhilePatrolling::State' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDisableBehaviorCullingWhilePatrolling, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_SetDisableBehaviorCullingWhilePatrolling::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDisableBehaviorCullingWhilePatrolling, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'PAWN_Enemy_C_SetDisableBehaviorCullingWhilePatrolling::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ShouldDisableBehaviorCullingWhilePatrolling
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_ShouldDisableBehaviorCullingWhilePatrolling final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_ShouldDisableBehaviorCullingWhilePatrolling) == 0x000001, "Wrong alignment on PAWN_Enemy_C_ShouldDisableBehaviorCullingWhilePatrolling");
static_assert(sizeof(PAWN_Enemy_C_ShouldDisableBehaviorCullingWhilePatrolling) == 0x000001, "Wrong size on PAWN_Enemy_C_ShouldDisableBehaviorCullingWhilePatrolling");
static_assert(offsetof(PAWN_Enemy_C_ShouldDisableBehaviorCullingWhilePatrolling, Result) == 0x000000, "Member 'PAWN_Enemy_C_ShouldDisableBehaviorCullingWhilePatrolling::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.AddElapsedLowFiBehaviorTime
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Enemy_C_AddElapsedLowFiBehaviorTime final
{
public:
	float                                         ElapsedTime;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_AddElapsedLowFiBehaviorTime) == 0x000004, "Wrong alignment on PAWN_Enemy_C_AddElapsedLowFiBehaviorTime");
static_assert(sizeof(PAWN_Enemy_C_AddElapsedLowFiBehaviorTime) == 0x000008, "Wrong size on PAWN_Enemy_C_AddElapsedLowFiBehaviorTime");
static_assert(offsetof(PAWN_Enemy_C_AddElapsedLowFiBehaviorTime, ElapsedTime) == 0x000000, "Member 'PAWN_Enemy_C_AddElapsedLowFiBehaviorTime::ElapsedTime' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_AddElapsedLowFiBehaviorTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'PAWN_Enemy_C_AddElapsedLowFiBehaviorTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.UpdateLastLowFiBehaviorTimestamp
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Enemy_C_UpdateLastLowFiBehaviorTimestamp final
{
public:
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_UpdateLastLowFiBehaviorTimestamp) == 0x000004, "Wrong alignment on PAWN_Enemy_C_UpdateLastLowFiBehaviorTimestamp");
static_assert(sizeof(PAWN_Enemy_C_UpdateLastLowFiBehaviorTimestamp) == 0x000004, "Wrong size on PAWN_Enemy_C_UpdateLastLowFiBehaviorTimestamp");
static_assert(offsetof(PAWN_Enemy_C_UpdateLastLowFiBehaviorTimestamp, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000000, "Member 'PAWN_Enemy_C_UpdateLastLowFiBehaviorTimestamp::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetElapsedTimeSinceLastLowFiBehavior
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior) == 0x000004, "Wrong alignment on PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior");
static_assert(sizeof(PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior) == 0x000010, "Wrong size on PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior");
static_assert(offsetof(PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior, CallFunc_FMax_ReturnValue) == 0x00000C, "Member 'PAWN_Enemy_C_GetElapsedTimeSinceLastLowFiBehavior::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsLowFiBehaviorEnabled
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_IsLowFiBehaviorEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsLowFiBehaviorEnabled) == 0x000001, "Wrong alignment on PAWN_Enemy_C_IsLowFiBehaviorEnabled");
static_assert(sizeof(PAWN_Enemy_C_IsLowFiBehaviorEnabled) == 0x000001, "Wrong size on PAWN_Enemy_C_IsLowFiBehaviorEnabled");
static_assert(offsetof(PAWN_Enemy_C_IsLowFiBehaviorEnabled, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsLowFiBehaviorEnabled::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsLowFiVisibilityEnabled
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_IsLowFiVisibilityEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsLowFiVisibilityEnabled) == 0x000001, "Wrong alignment on PAWN_Enemy_C_IsLowFiVisibilityEnabled");
static_assert(sizeof(PAWN_Enemy_C_IsLowFiVisibilityEnabled) == 0x000001, "Wrong size on PAWN_Enemy_C_IsLowFiVisibilityEnabled");
static_assert(offsetof(PAWN_Enemy_C_IsLowFiVisibilityEnabled, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsLowFiVisibilityEnabled::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsLowFiAudibilityEnabled
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_IsLowFiAudibilityEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsLowFiAudibilityEnabled) == 0x000001, "Wrong alignment on PAWN_Enemy_C_IsLowFiAudibilityEnabled");
static_assert(sizeof(PAWN_Enemy_C_IsLowFiAudibilityEnabled) == 0x000001, "Wrong size on PAWN_Enemy_C_IsLowFiAudibilityEnabled");
static_assert(offsetof(PAWN_Enemy_C_IsLowFiAudibilityEnabled, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsLowFiAudibilityEnabled::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsLowFiBehaviorAndVisibilityEnabled
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_IsLowFiBehaviorAndVisibilityEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsLowFiBehaviorAndVisibilityEnabled) == 0x000001, "Wrong alignment on PAWN_Enemy_C_IsLowFiBehaviorAndVisibilityEnabled");
static_assert(sizeof(PAWN_Enemy_C_IsLowFiBehaviorAndVisibilityEnabled) == 0x000002, "Wrong size on PAWN_Enemy_C_IsLowFiBehaviorAndVisibilityEnabled");
static_assert(offsetof(PAWN_Enemy_C_IsLowFiBehaviorAndVisibilityEnabled, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsLowFiBehaviorAndVisibilityEnabled::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsLowFiBehaviorAndVisibilityEnabled, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_IsLowFiBehaviorAndVisibilityEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.CanSetLowFiBehaviorEnabled
// 0x000B (0x000B - 0x0000)
struct PAWN_Enemy_C_CanSetLowFiBehaviorEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasImportantBehavior_Result;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanBecomeLowFi_Result;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyEvents_Result;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled) == 0x000001, "Wrong alignment on PAWN_Enemy_C_CanSetLowFiBehaviorEnabled");
static_assert(sizeof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled) == 0x00000B, "Wrong size on PAWN_Enemy_C_CanSetLowFiBehaviorEnabled");
static_assert(offsetof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled, Result) == 0x000000, "Member 'PAWN_Enemy_C_CanSetLowFiBehaviorEnabled::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_CanSetLowFiBehaviorEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'PAWN_Enemy_C_CanSetLowFiBehaviorEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled, CallFunc_HasImportantBehavior_Result) == 0x000003, "Member 'PAWN_Enemy_C_CanSetLowFiBehaviorEnabled::CallFunc_HasImportantBehavior_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'PAWN_Enemy_C_CanSetLowFiBehaviorEnabled::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'PAWN_Enemy_C_CanSetLowFiBehaviorEnabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled, CallFunc_CanBecomeLowFi_Result) == 0x000006, "Member 'PAWN_Enemy_C_CanSetLowFiBehaviorEnabled::CallFunc_CanBecomeLowFi_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled, CallFunc_IsValid_ReturnValue) == 0x000007, "Member 'PAWN_Enemy_C_CanSetLowFiBehaviorEnabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled, CallFunc_Not_PreBool_ReturnValue_2) == 0x000008, "Member 'PAWN_Enemy_C_CanSetLowFiBehaviorEnabled::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled, CallFunc_HasAnyEvents_Result) == 0x000009, "Member 'PAWN_Enemy_C_CanSetLowFiBehaviorEnabled::CallFunc_HasAnyEvents_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanSetLowFiBehaviorEnabled, CallFunc_Not_PreBool_ReturnValue_3) == 0x00000A, "Member 'PAWN_Enemy_C_CanSetLowFiBehaviorEnabled::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsNearSpawnLocation
// 0x002C (0x002C - 0x0000)
struct PAWN_Enemy_C_IsNearSpawnLocation final
{
public:
	bool                                          CheckRotation;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsNearSpawnLocation) == 0x000004, "Wrong alignment on PAWN_Enemy_C_IsNearSpawnLocation");
static_assert(sizeof(PAWN_Enemy_C_IsNearSpawnLocation) == 0x00002C, "Wrong size on PAWN_Enemy_C_IsNearSpawnLocation");
static_assert(offsetof(PAWN_Enemy_C_IsNearSpawnLocation, CheckRotation) == 0x000000, "Member 'PAWN_Enemy_C_IsNearSpawnLocation::CheckRotation' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsNearSpawnLocation, Result) == 0x000001, "Member 'PAWN_Enemy_C_IsNearSpawnLocation::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsNearSpawnLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000004, "Member 'PAWN_Enemy_C_IsNearSpawnLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsNearSpawnLocation, CallFunc_GetShockAgentLocation_Location) == 0x000010, "Member 'PAWN_Enemy_C_IsNearSpawnLocation::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsNearSpawnLocation, CallFunc_Dot_VectorVector_ReturnValue) == 0x00001C, "Member 'PAWN_Enemy_C_IsNearSpawnLocation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsNearSpawnLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'PAWN_Enemy_C_IsNearSpawnLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsNearSpawnLocation, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000024, "Member 'PAWN_Enemy_C_IsNearSpawnLocation::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsNearSpawnLocation, CallFunc_Less_FloatFloat_ReturnValue) == 0x000028, "Member 'PAWN_Enemy_C_IsNearSpawnLocation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsEnemyAware
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_IsEnemyAware final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsEnemyAware) == 0x000001, "Wrong alignment on PAWN_Enemy_C_IsEnemyAware");
static_assert(sizeof(PAWN_Enemy_C_IsEnemyAware) == 0x000001, "Wrong size on PAWN_Enemy_C_IsEnemyAware");
static_assert(offsetof(PAWN_Enemy_C_IsEnemyAware, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsEnemyAware::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsEnemyMobile
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_IsEnemyMobile final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsEnemyMobile) == 0x000001, "Wrong alignment on PAWN_Enemy_C_IsEnemyMobile");
static_assert(sizeof(PAWN_Enemy_C_IsEnemyMobile) == 0x000001, "Wrong size on PAWN_Enemy_C_IsEnemyMobile");
static_assert(offsetof(PAWN_Enemy_C_IsEnemyMobile, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsEnemyMobile::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetIsAware
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_SetIsAware final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetIsAware) == 0x000001, "Wrong alignment on PAWN_Enemy_C_SetIsAware");
static_assert(sizeof(PAWN_Enemy_C_SetIsAware) == 0x000002, "Wrong size on PAWN_Enemy_C_SetIsAware");
static_assert(offsetof(PAWN_Enemy_C_SetIsAware, State) == 0x000000, "Member 'PAWN_Enemy_C_SetIsAware::State' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetIsAware, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_SetIsAware::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetIsMobile
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_SetIsMobile final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetIsMobile) == 0x000001, "Wrong alignment on PAWN_Enemy_C_SetIsMobile");
static_assert(sizeof(PAWN_Enemy_C_SetIsMobile) == 0x000002, "Wrong size on PAWN_Enemy_C_SetIsMobile");
static_assert(offsetof(PAWN_Enemy_C_SetIsMobile, State) == 0x000000, "Member 'PAWN_Enemy_C_SetIsMobile::State' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetIsMobile, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_SetIsMobile::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ValidateDefaultAwareness
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Enemy_C_ValidateDefaultAwareness final
{
public:
	bool                                          CallFunc_CanDetectAnyEvents_Result;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_ValidateDefaultAwareness) == 0x000008, "Wrong alignment on PAWN_Enemy_C_ValidateDefaultAwareness");
static_assert(sizeof(PAWN_Enemy_C_ValidateDefaultAwareness) == 0x000018, "Wrong size on PAWN_Enemy_C_ValidateDefaultAwareness");
static_assert(offsetof(PAWN_Enemy_C_ValidateDefaultAwareness, CallFunc_CanDetectAnyEvents_Result) == 0x000000, "Member 'PAWN_Enemy_C_ValidateDefaultAwareness::CallFunc_CanDetectAnyEvents_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ValidateDefaultAwareness, CallFunc_GetObjectClass_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_ValidateDefaultAwareness::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ValidateDefaultAwareness, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_ValidateDefaultAwareness::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ValidateDefaultAwareness, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'PAWN_Enemy_C_ValidateDefaultAwareness::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ValidateDefaultAwareness, CallFunc_Not_PreBool_ReturnValue_1) == 0x000012, "Member 'PAWN_Enemy_C_ValidateDefaultAwareness::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnEnemyAwarenessChanged
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_OnEnemyAwarenessChanged final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnEnemyAwarenessChanged) == 0x000001, "Wrong alignment on PAWN_Enemy_C_OnEnemyAwarenessChanged");
static_assert(sizeof(PAWN_Enemy_C_OnEnemyAwarenessChanged) == 0x000002, "Wrong size on PAWN_Enemy_C_OnEnemyAwarenessChanged");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyAwarenessChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'PAWN_Enemy_C_OnEnemyAwarenessChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyAwarenessChanged, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_OnEnemyAwarenessChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnEnemyMobilityChanged
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_OnEnemyMobilityChanged final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnEnemyMobilityChanged) == 0x000001, "Wrong alignment on PAWN_Enemy_C_OnEnemyMobilityChanged");
static_assert(sizeof(PAWN_Enemy_C_OnEnemyMobilityChanged) == 0x000002, "Wrong size on PAWN_Enemy_C_OnEnemyMobilityChanged");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyMobilityChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'PAWN_Enemy_C_OnEnemyMobilityChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyMobilityChanged, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_OnEnemyMobilityChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.InitializeCharacterAsDead
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_InitializeCharacterAsDead final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCharacterPropertiesToDead_Result;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_InitializeCharacterAsDead) == 0x000001, "Wrong alignment on PAWN_Enemy_C_InitializeCharacterAsDead");
static_assert(sizeof(PAWN_Enemy_C_InitializeCharacterAsDead) == 0x000002, "Wrong size on PAWN_Enemy_C_InitializeCharacterAsDead");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacterAsDead, Result) == 0x000000, "Member 'PAWN_Enemy_C_InitializeCharacterAsDead::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacterAsDead, CallFunc_SetCharacterPropertiesToDead_Result) == 0x000001, "Member 'PAWN_Enemy_C_InitializeCharacterAsDead::CallFunc_SetCharacterPropertiesToDead_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnCharacterHurt
// 0x0060 (0x0060 - 0x0000)
struct PAWN_Enemy_C_OnCharacterHurt final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DamageRatio;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           SourceCharacter;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnCharacterHurt_Result;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ExpireModsWithCategory_ReturnValue;       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnCharacterHurt) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnCharacterHurt");
static_assert(sizeof(PAWN_Enemy_C_OnCharacterHurt) == 0x000060, "Wrong size on PAWN_Enemy_C_OnCharacterHurt");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterHurt, OtherActor) == 0x000000, "Member 'PAWN_Enemy_C_OnCharacterHurt::OtherActor' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterHurt, DamageInstance) == 0x000008, "Member 'PAWN_Enemy_C_OnCharacterHurt::DamageInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterHurt, ImpactData) == 0x000030, "Member 'PAWN_Enemy_C_OnCharacterHurt::ImpactData' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterHurt, Result) == 0x000038, "Member 'PAWN_Enemy_C_OnCharacterHurt::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterHurt, DamageRatio) == 0x00003C, "Member 'PAWN_Enemy_C_OnCharacterHurt::DamageRatio' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterHurt, SourceCharacter) == 0x000040, "Member 'PAWN_Enemy_C_OnCharacterHurt::SourceCharacter' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterHurt, CallFunc_OnCharacterHurt_Result) == 0x000048, "Member 'PAWN_Enemy_C_OnCharacterHurt::CallFunc_OnCharacterHurt_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterHurt, CallFunc_ExpireModsWithCategory_ReturnValue) == 0x00004C, "Member 'PAWN_Enemy_C_OnCharacterHurt::CallFunc_ExpireModsWithCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterHurt, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000050, "Member 'PAWN_Enemy_C_OnCharacterHurt::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterHurt, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'PAWN_Enemy_C_OnCharacterHurt::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetCharacterPropertiesToDead
// 0x0070 (0x0070 - 0x0000)
struct PAWN_Enemy_C_SetCharacterPropertiesToDead final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          AIController;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        CallFunc_GetEnemyScanShape_ShapeComponent;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        CallFunc_GetTargetShape_ShapeComponent;            // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_DynamicCast_AsAIController;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Character_C> K2Node_DynamicCast_AsINTERF_ANIM_Character;        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIsAlive_Result;                        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetCharacterPropertiesToDead) == 0x000008, "Wrong alignment on PAWN_Enemy_C_SetCharacterPropertiesToDead");
static_assert(sizeof(PAWN_Enemy_C_SetCharacterPropertiesToDead) == 0x000070, "Wrong size on PAWN_Enemy_C_SetCharacterPropertiesToDead");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, Result) == 0x000000, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, AIController) == 0x000008, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::AIController' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, CallFunc_GetEnemyScanShape_ShapeComponent) == 0x000010, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::CallFunc_GetEnemyScanShape_ShapeComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000018, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, K2Node_MakeStruct_Color) == 0x00001C, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, CallFunc_GetTargetShape_ShapeComponent) == 0x000028, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::CallFunc_GetTargetShape_ShapeComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000030, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, K2Node_DynamicCast_AsAIController) == 0x000040, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::K2Node_DynamicCast_AsAIController' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, CallFunc_GetAnimInstance_ReturnValue) == 0x000050, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, K2Node_DynamicCast_AsINTERF_ANIM_Character) == 0x000058, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::K2Node_DynamicCast_AsINTERF_ANIM_Character' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetCharacterPropertiesToDead, CallFunc_SetIsAlive_Result) == 0x000069, "Member 'PAWN_Enemy_C_SetCharacterPropertiesToDead::CallFunc_SetIsAlive_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetMeshPropertiesToDead
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Enemy_C_SetMeshPropertiesToDead final
{
public:
	bool                                          LowFiUpdated;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyRigidBodyAwake_ReturnValue;          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetMeshPropertiesToDead) == 0x000004, "Wrong alignment on PAWN_Enemy_C_SetMeshPropertiesToDead");
static_assert(sizeof(PAWN_Enemy_C_SetMeshPropertiesToDead) == 0x000018, "Wrong size on PAWN_Enemy_C_SetMeshPropertiesToDead");
static_assert(offsetof(PAWN_Enemy_C_SetMeshPropertiesToDead, LowFiUpdated) == 0x000000, "Member 'PAWN_Enemy_C_SetMeshPropertiesToDead::LowFiUpdated' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetMeshPropertiesToDead, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'PAWN_Enemy_C_SetMeshPropertiesToDead::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetMeshPropertiesToDead, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_SetMeshPropertiesToDead::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetMeshPropertiesToDead, CallFunc_Array_Length_ReturnValue_1) == 0x00000C, "Member 'PAWN_Enemy_C_SetMeshPropertiesToDead::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetMeshPropertiesToDead, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000010, "Member 'PAWN_Enemy_C_SetMeshPropertiesToDead::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetMeshPropertiesToDead, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000011, "Member 'PAWN_Enemy_C_SetMeshPropertiesToDead::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetMeshPropertiesToDead, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'PAWN_Enemy_C_SetMeshPropertiesToDead::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetMeshPropertiesToDead, CallFunc_IsAnyRigidBodyAwake_ReturnValue) == 0x000013, "Member 'PAWN_Enemy_C_SetMeshPropertiesToDead::CallFunc_IsAnyRigidBodyAwake_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetMeshPropertiesToDead, CallFunc_Not_PreBool_ReturnValue_1) == 0x000014, "Member 'PAWN_Enemy_C_SetMeshPropertiesToDead::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetMeshPropertiesToDead, CallFunc_Not_PreBool_ReturnValue_2) == 0x000015, "Member 'PAWN_Enemy_C_SetMeshPropertiesToDead::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetMeshPropertiesToDead, CallFunc_Not_PreBool_ReturnValue_3) == 0x000016, "Member 'PAWN_Enemy_C_SetMeshPropertiesToDead::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetDeadDisplayName
// 0x0158 (0x0158 - 0x0000)
struct PAWN_Enemy_C_GetDeadDisplayName final
{
public:
	class FText                                   Result;                                            // 0x0000(0x0018)(Parm, OutParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0030(0x0018)()
	ENUM_EnemyType                                CallFunc_GetEnemyType_Result;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEnemyDisplayName_Text;                 // 0x0050(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0070(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00C0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x00D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0130(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0140(0x0018)()
};
static_assert(alignof(PAWN_Enemy_C_GetDeadDisplayName) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetDeadDisplayName");
static_assert(sizeof(PAWN_Enemy_C_GetDeadDisplayName) == 0x000158, "Wrong size on PAWN_Enemy_C_GetDeadDisplayName");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetDeadDisplayName::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, K2Node_MakeArray_Array) == 0x000018, "Member 'PAWN_Enemy_C_GetDeadDisplayName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, Temp_bool_Variable) == 0x000028, "Member 'PAWN_Enemy_C_GetDeadDisplayName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, CallFunc_Format_ReturnValue) == 0x000030, "Member 'PAWN_Enemy_C_GetDeadDisplayName::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, CallFunc_GetEnemyType_Result) == 0x000048, "Member 'PAWN_Enemy_C_GetDeadDisplayName::CallFunc_GetEnemyType_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, CallFunc_GetEnemyDisplayName_Text) == 0x000050, "Member 'PAWN_Enemy_C_GetDeadDisplayName::CallFunc_GetEnemyDisplayName_Text' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000068, "Member 'PAWN_Enemy_C_GetDeadDisplayName::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, K2Node_MakeStruct_FormatArgumentData) == 0x000070, "Member 'PAWN_Enemy_C_GetDeadDisplayName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, K2Node_MakeArray_Array_1) == 0x0000B0, "Member 'PAWN_Enemy_C_GetDeadDisplayName::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, CallFunc_Format_ReturnValue_1) == 0x0000C0, "Member 'PAWN_Enemy_C_GetDeadDisplayName::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, K2Node_Select_Default) == 0x0000D8, "Member 'PAWN_Enemy_C_GetDeadDisplayName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F0, "Member 'PAWN_Enemy_C_GetDeadDisplayName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, K2Node_MakeArray_Array_2) == 0x000130, "Member 'PAWN_Enemy_C_GetDeadDisplayName::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDisplayName, CallFunc_Format_ReturnValue_2) == 0x000140, "Member 'PAWN_Enemy_C_GetDeadDisplayName::CallFunc_Format_ReturnValue_2' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetDeadDescriptionText
// 0x0078 (0x0078 - 0x0000)
struct PAWN_Enemy_C_GetDeadDescriptionText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
	class UCOMP_Inventory_C*                      Inventory;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDeadDisplayName_Result;                // 0x0020(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetDeadDisplayName_Result_1;              // 0x0048(0x0018)()
	class FText                                   CallFunc_GetDescriptionMessage_Text;               // 0x0060(0x0018)()
};
static_assert(alignof(PAWN_Enemy_C_GetDeadDescriptionText) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetDeadDescriptionText");
static_assert(sizeof(PAWN_Enemy_C_GetDeadDescriptionText) == 0x000078, "Wrong size on PAWN_Enemy_C_GetDeadDescriptionText");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDescriptionText, Text) == 0x000000, "Member 'PAWN_Enemy_C_GetDeadDescriptionText::Text' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDescriptionText, Inventory) == 0x000018, "Member 'PAWN_Enemy_C_GetDeadDescriptionText::Inventory' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDescriptionText, CallFunc_GetDeadDisplayName_Result) == 0x000020, "Member 'PAWN_Enemy_C_GetDeadDescriptionText::CallFunc_GetDeadDisplayName_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDescriptionText, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'PAWN_Enemy_C_GetDeadDescriptionText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDescriptionText, CallFunc_GetInventoryComponent_Inventory) == 0x000040, "Member 'PAWN_Enemy_C_GetDeadDescriptionText::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDescriptionText, CallFunc_GetDeadDisplayName_Result_1) == 0x000048, "Member 'PAWN_Enemy_C_GetDeadDescriptionText::CallFunc_GetDeadDisplayName_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeadDescriptionText, CallFunc_GetDescriptionMessage_Text) == 0x000060, "Member 'PAWN_Enemy_C_GetDeadDescriptionText::CallFunc_GetDescriptionMessage_Text' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetDeathBlow
// 0x01B8 (0x01B8 - 0x0000)
struct PAWN_Enemy_C_GetDeathBlow final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  Damage;                                            // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSTRUCT_DeathBlowData                  DeathBlow;                                         // 0x0030(0x0038)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_AnimatedLimb                   StruckLimb;                                        // 0x0068(0x0024)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DeathBlowData                  CallFunc_Array_Get_Item;                           // 0x0090(0x0038)(HasGetValueTypeHash)
	struct FSTRUCT_DeathBlowData                  CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DeathBlowData                  CallFunc_Array_Get_Item_2;                         // 0x0108(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DeathBlowData                  CallFunc_Array_Get_Item_3;                         // 0x0148(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_AnimatedLimb                   CallFunc_GetLimbFromBoneName_Limb;                 // 0x0188(0x0024)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_GetDeathBlow) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetDeathBlow");
static_assert(sizeof(PAWN_Enemy_C_GetDeathBlow) == 0x0001B8, "Wrong size on PAWN_Enemy_C_GetDeathBlow");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, ImpactData) == 0x000000, "Member 'PAWN_Enemy_C_GetDeathBlow::ImpactData' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, Damage) == 0x000008, "Member 'PAWN_Enemy_C_GetDeathBlow::Damage' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, DeathBlow) == 0x000030, "Member 'PAWN_Enemy_C_GetDeathBlow::DeathBlow' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, StruckLimb) == 0x000068, "Member 'PAWN_Enemy_C_GetDeathBlow::StruckLimb' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_IsValid_ReturnValue) == 0x00008C, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_Array_Get_Item) == 0x000090, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000100, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_Array_Get_Item_2) == 0x000108, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000140, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_Array_Get_Item_3) == 0x000148, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000180, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000181, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_NotEqual_NameName_ReturnValue) == 0x000182, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000183, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_BooleanOR_ReturnValue) == 0x000184, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_GetLimbFromBoneName_Limb) == 0x000188, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_GetLimbFromBoneName_Limb' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_Array_Length_ReturnValue) == 0x0001AC, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDeathBlow, CallFunc_Greater_IntInt_ReturnValue) == 0x0001B0, "Member 'PAWN_Enemy_C_GetDeathBlow::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetPawnEmotion
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_GetPawnEmotion final
{
public:
	ENUM_Emotions                                 Emotion;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetPawnEmotion) == 0x000001, "Wrong alignment on PAWN_Enemy_C_GetPawnEmotion");
static_assert(sizeof(PAWN_Enemy_C_GetPawnEmotion) == 0x000001, "Wrong size on PAWN_Enemy_C_GetPawnEmotion");
static_assert(offsetof(PAWN_Enemy_C_GetPawnEmotion, Emotion) == 0x000000, "Member 'PAWN_Enemy_C_GetPawnEmotion::Emotion' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetPawnEmotion
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_SetPawnEmotion final
{
public:
	ENUM_Emotions                                 NewEmotion;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_SetPawnEmotion) == 0x000001, "Wrong alignment on PAWN_Enemy_C_SetPawnEmotion");
static_assert(sizeof(PAWN_Enemy_C_SetPawnEmotion) == 0x000001, "Wrong size on PAWN_Enemy_C_SetPawnEmotion");
static_assert(offsetof(PAWN_Enemy_C_SetPawnEmotion, NewEmotion) == 0x000000, "Member 'PAWN_Enemy_C_SetPawnEmotion::NewEmotion' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnDeathImpact
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Enemy_C_OnDeathImpact final
{
public:
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnDeathImpact_Result;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnDeathImpact) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnDeathImpact");
static_assert(sizeof(PAWN_Enemy_C_OnDeathImpact) == 0x000038, "Wrong size on PAWN_Enemy_C_OnDeathImpact");
static_assert(offsetof(PAWN_Enemy_C_OnDeathImpact, DamageInstance) == 0x000000, "Member 'PAWN_Enemy_C_OnDeathImpact::DamageInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnDeathImpact, ImpactData) == 0x000028, "Member 'PAWN_Enemy_C_OnDeathImpact::ImpactData' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnDeathImpact, Result) == 0x000030, "Member 'PAWN_Enemy_C_OnDeathImpact::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnDeathImpact, CallFunc_OnDeathImpact_Result) == 0x000031, "Member 'PAWN_Enemy_C_OnDeathImpact::CallFunc_OnDeathImpact_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnDeathImpact, CallFunc_IsValid_ReturnValue) == 0x000032, "Member 'PAWN_Enemy_C_OnDeathImpact::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetManeuverLocation
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Enemy_C_SetManeuverLocation final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_SetManeuverLocation) == 0x000004, "Wrong alignment on PAWN_Enemy_C_SetManeuverLocation");
static_assert(sizeof(PAWN_Enemy_C_SetManeuverLocation) == 0x000010, "Wrong size on PAWN_Enemy_C_SetManeuverLocation");
static_assert(offsetof(PAWN_Enemy_C_SetManeuverLocation, IsValid) == 0x000000, "Member 'PAWN_Enemy_C_SetManeuverLocation::IsValid' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetManeuverLocation, Location) == 0x000004, "Member 'PAWN_Enemy_C_SetManeuverLocation::Location' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetManeuverLocation
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Enemy_C_GetManeuverLocation final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetManeuverLocation) == 0x000004, "Wrong alignment on PAWN_Enemy_C_GetManeuverLocation");
static_assert(sizeof(PAWN_Enemy_C_GetManeuverLocation) == 0x000010, "Wrong size on PAWN_Enemy_C_GetManeuverLocation");
static_assert(offsetof(PAWN_Enemy_C_GetManeuverLocation, IsValid) == 0x000000, "Member 'PAWN_Enemy_C_GetManeuverLocation::IsValid' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetManeuverLocation, Location) == 0x000004, "Member 'PAWN_Enemy_C_GetManeuverLocation::Location' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetDynamicPatrolBehavior
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Enemy_C_SetDynamicPatrolBehavior final
{
public:
	class UBehaviorTree*                          DynamicBehavior;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Enemy_C*                           K2Node_DynamicCast_AsCON_Enemy;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBehaviorTreeComponent*                 K2Node_DynamicCast_AsBehavior_Tree_Component;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetDynamicPatrolBehavior) == 0x000008, "Wrong alignment on PAWN_Enemy_C_SetDynamicPatrolBehavior");
static_assert(sizeof(PAWN_Enemy_C_SetDynamicPatrolBehavior) == 0x000030, "Wrong size on PAWN_Enemy_C_SetDynamicPatrolBehavior");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicPatrolBehavior, DynamicBehavior) == 0x000000, "Member 'PAWN_Enemy_C_SetDynamicPatrolBehavior::DynamicBehavior' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicPatrolBehavior, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_SetDynamicPatrolBehavior::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicPatrolBehavior, K2Node_DynamicCast_AsCON_Enemy) == 0x000010, "Member 'PAWN_Enemy_C_SetDynamicPatrolBehavior::K2Node_DynamicCast_AsCON_Enemy' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicPatrolBehavior, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Enemy_C_SetDynamicPatrolBehavior::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicPatrolBehavior, K2Node_DynamicCast_AsBehavior_Tree_Component) == 0x000020, "Member 'PAWN_Enemy_C_SetDynamicPatrolBehavior::K2Node_DynamicCast_AsBehavior_Tree_Component' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicPatrolBehavior, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'PAWN_Enemy_C_SetDynamicPatrolBehavior::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnEnemyShouldBeVisible
// 0x0003 (0x0003 - 0x0000)
struct PAWN_Enemy_C_OnEnemyShouldBeVisible final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewLowFiState;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnEnemyShouldBeVisible) == 0x000001, "Wrong alignment on PAWN_Enemy_C_OnEnemyShouldBeVisible");
static_assert(sizeof(PAWN_Enemy_C_OnEnemyShouldBeVisible) == 0x000003, "Wrong size on PAWN_Enemy_C_OnEnemyShouldBeVisible");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyShouldBeVisible, VisibilityState) == 0x000000, "Member 'PAWN_Enemy_C_OnEnemyShouldBeVisible::VisibilityState' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyShouldBeVisible, NewLowFiState) == 0x000001, "Member 'PAWN_Enemy_C_OnEnemyShouldBeVisible::NewLowFiState' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyShouldBeVisible, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PAWN_Enemy_C_OnEnemyShouldBeVisible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnEnemyMightBeAudible
// 0x0007 (0x0007 - 0x0000)
struct PAWN_Enemy_C_OnEnemyMightBeAudible final
{
public:
	bool                                          AudibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsStunned_Result;                         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyBehaviorEnabled_Result;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasImportantBehavior_Result;              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnEnemyMightBeAudible) == 0x000001, "Wrong alignment on PAWN_Enemy_C_OnEnemyMightBeAudible");
static_assert(sizeof(PAWN_Enemy_C_OnEnemyMightBeAudible) == 0x000007, "Wrong size on PAWN_Enemy_C_OnEnemyMightBeAudible");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyMightBeAudible, AudibilityState) == 0x000000, "Member 'PAWN_Enemy_C_OnEnemyMightBeAudible::AudibilityState' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyMightBeAudible, CallFunc_IsStunned_Result) == 0x000001, "Member 'PAWN_Enemy_C_OnEnemyMightBeAudible::CallFunc_IsStunned_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyMightBeAudible, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PAWN_Enemy_C_OnEnemyMightBeAudible::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyMightBeAudible, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'PAWN_Enemy_C_OnEnemyMightBeAudible::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyMightBeAudible, CallFunc_IsAnyBehaviorEnabled_Result) == 0x000004, "Member 'PAWN_Enemy_C_OnEnemyMightBeAudible::CallFunc_IsAnyBehaviorEnabled_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyMightBeAudible, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'PAWN_Enemy_C_OnEnemyMightBeAudible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyMightBeAudible, CallFunc_HasImportantBehavior_Result) == 0x000006, "Member 'PAWN_Enemy_C_OnEnemyMightBeAudible::CallFunc_HasImportantBehavior_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.AssignNextPatrolNode
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_AssignNextPatrolNode final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_AssignNextPatrolNode) == 0x000001, "Wrong alignment on PAWN_Enemy_C_AssignNextPatrolNode");
static_assert(sizeof(PAWN_Enemy_C_AssignNextPatrolNode) == 0x000002, "Wrong size on PAWN_Enemy_C_AssignNextPatrolNode");
static_assert(offsetof(PAWN_Enemy_C_AssignNextPatrolNode, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'PAWN_Enemy_C_AssignNextPatrolNode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_AssignNextPatrolNode, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'PAWN_Enemy_C_AssignNextPatrolNode::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryPrintExploitDamageBonus
// 0x0068 (0x0068 - 0x0000)
struct PAWN_Enemy_C_TryPrintExploitDamageBonus final
{
public:
	float                                         BonusPercent;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryPrintExploitDamageBonus) == 0x000008, "Wrong alignment on PAWN_Enemy_C_TryPrintExploitDamageBonus");
static_assert(sizeof(PAWN_Enemy_C_TryPrintExploitDamageBonus) == 0x000068, "Wrong size on PAWN_Enemy_C_TryPrintExploitDamageBonus");
static_assert(offsetof(PAWN_Enemy_C_TryPrintExploitDamageBonus, BonusPercent) == 0x000000, "Member 'PAWN_Enemy_C_TryPrintExploitDamageBonus::BonusPercent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryPrintExploitDamageBonus, BoneName) == 0x000004, "Member 'PAWN_Enemy_C_TryPrintExploitDamageBonus::BoneName' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryPrintExploitDamageBonus, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_TryPrintExploitDamageBonus::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryPrintExploitDamageBonus, CallFunc_Conv_FloatToString_ReturnValue) == 0x000020, "Member 'PAWN_Enemy_C_TryPrintExploitDamageBonus::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryPrintExploitDamageBonus, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'PAWN_Enemy_C_TryPrintExploitDamageBonus::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryPrintExploitDamageBonus, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'PAWN_Enemy_C_TryPrintExploitDamageBonus::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryPrintExploitDamageBonus, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000050, "Member 'PAWN_Enemy_C_TryPrintExploitDamageBonus::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryPrintExploitDamageBonus, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000060, "Member 'PAWN_Enemy_C_TryPrintExploitDamageBonus::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryPrintExploitDamageBonus, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'PAWN_Enemy_C_TryPrintExploitDamageBonus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryStaggerFromDamage
// 0x0148 (0x0148 - 0x0000)
struct PAWN_Enemy_C_TryStaggerFromDamage final
{
public:
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         StaggerPercent;                                    // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StaggerIncreasePercent;                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageTowardsStagger;                              // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        StaggerAttribInstance;                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    StaggerDecayModData;                               // 0x0040(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ExpireModsMatchingCategory_ReturnValue;   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBaseValue_ReturnValue;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttributeDef*                          CallFunc_GetHealthAttrib_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxValue_ReturnValue;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FAttribModResult                       CallFunc_SetBaseValue_ReturnValue;                 // 0x0125(0x0005)(NoDestructor)
	uint8                                         Pad_12A[0x2];                                      // 0x012A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_TryStaggerFromDamage) == 0x000008, "Wrong alignment on PAWN_Enemy_C_TryStaggerFromDamage");
static_assert(sizeof(PAWN_Enemy_C_TryStaggerFromDamage) == 0x000148, "Wrong size on PAWN_Enemy_C_TryStaggerFromDamage");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, DamageInstance) == 0x000000, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::DamageInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, StaggerPercent) == 0x000028, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::StaggerPercent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, StaggerIncreasePercent) == 0x00002C, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::StaggerIncreasePercent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, DamageTowardsStagger) == 0x000030, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::DamageTowardsStagger' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, StaggerAttribInstance) == 0x000038, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::StaggerAttribInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, StaggerDecayModData) == 0x000040, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::StaggerDecayModData' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E0, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000E4, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_ExpireModsMatchingCategory_ReturnValue) == 0x0000E8, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_ExpireModsMatchingCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_ApplyMod_ReturnValue) == 0x0000F0, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_GetAttribValue_ReturnValue) == 0x0000F8, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_GetBaseValue_ReturnValue) == 0x0000FC, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_GetBaseValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_GetHealthAttrib_ReturnValue) == 0x000100, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_GetHealthAttrib_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_GetAttribInstance_ReturnValue) == 0x000108, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_GetMaxValue_ReturnValue) == 0x000110, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_GetMaxValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_Less_FloatFloat_ReturnValue) == 0x000114, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_FMin_ReturnValue) == 0x000118, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00011C, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000120, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000124, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_SetBaseValue_ReturnValue) == 0x000125, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_SetBaseValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00012C, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000130, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000138, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStaggerFromDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x000140, "Member 'PAWN_Enemy_C_TryStaggerFromDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetDynamicStaggerBehavior
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Enemy_C_SetDynamicStaggerBehavior final
{
public:
	class UBehaviorTree*                          DynamicBehavior;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Enemy_C*                           K2Node_DynamicCast_AsCON_Enemy;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBehaviorTreeComponent*                 K2Node_DynamicCast_AsBehavior_Tree_Component;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetDynamicStaggerBehavior) == 0x000008, "Wrong alignment on PAWN_Enemy_C_SetDynamicStaggerBehavior");
static_assert(sizeof(PAWN_Enemy_C_SetDynamicStaggerBehavior) == 0x000030, "Wrong size on PAWN_Enemy_C_SetDynamicStaggerBehavior");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicStaggerBehavior, DynamicBehavior) == 0x000000, "Member 'PAWN_Enemy_C_SetDynamicStaggerBehavior::DynamicBehavior' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicStaggerBehavior, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_SetDynamicStaggerBehavior::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicStaggerBehavior, K2Node_DynamicCast_AsCON_Enemy) == 0x000010, "Member 'PAWN_Enemy_C_SetDynamicStaggerBehavior::K2Node_DynamicCast_AsCON_Enemy' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicStaggerBehavior, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Enemy_C_SetDynamicStaggerBehavior::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicStaggerBehavior, K2Node_DynamicCast_AsBehavior_Tree_Component) == 0x000020, "Member 'PAWN_Enemy_C_SetDynamicStaggerBehavior::K2Node_DynamicCast_AsBehavior_Tree_Component' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDynamicStaggerBehavior, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'PAWN_Enemy_C_SetDynamicStaggerBehavior::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetAnimStance
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Enemy_C_SetAnimStance final
{
public:
	ENUM_Emotions                                 Stance;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Character_C> K2Node_DynamicCast_AsINTERF_ANIM_Character;        // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStance_Result;                         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetAnimStance) == 0x000008, "Wrong alignment on PAWN_Enemy_C_SetAnimStance");
static_assert(sizeof(PAWN_Enemy_C_SetAnimStance) == 0x000030, "Wrong size on PAWN_Enemy_C_SetAnimStance");
static_assert(offsetof(PAWN_Enemy_C_SetAnimStance, Stance) == 0x000000, "Member 'PAWN_Enemy_C_SetAnimStance::Stance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetAnimStance, Result) == 0x000001, "Member 'PAWN_Enemy_C_SetAnimStance::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetAnimStance, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_SetAnimStance::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetAnimStance, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_SetAnimStance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetAnimStance, K2Node_DynamicCast_AsINTERF_ANIM_Character) == 0x000018, "Member 'PAWN_Enemy_C_SetAnimStance::K2Node_DynamicCast_AsINTERF_ANIM_Character' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetAnimStance, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PAWN_Enemy_C_SetAnimStance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetAnimStance, CallFunc_SetStance_Result) == 0x000029, "Member 'PAWN_Enemy_C_SetAnimStance::CallFunc_SetStance_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.InitializeCharacter
// 0x0080 (0x0080 - 0x0000)
struct PAWN_Enemy_C_InitializeCharacter final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySetEnemyName_Result;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        CallFunc_GetChildComponentByClassAndSuffix_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetLocalVisionRotation_Result;            // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySetSpawnData_Result;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightTransitionManager_C*              CallFunc_SpawnObject_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartTrackingLocation_ReturnValue;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeCharacterAsDead_Result;         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Character_C> K2Node_DynamicCast_AsINTERF_ANIM_Character;        // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIsAlive_Result;                        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeCharacter_Result;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_InitializeCharacter) == 0x000008, "Wrong alignment on PAWN_Enemy_C_InitializeCharacter");
static_assert(sizeof(PAWN_Enemy_C_InitializeCharacter) == 0x000080, "Wrong size on PAWN_Enemy_C_InitializeCharacter");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, Result) == 0x000000, "Member 'PAWN_Enemy_C_InitializeCharacter::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_TrySetEnemyName_Result) == 0x000001, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_TrySetEnemyName_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_GetChildComponentByClassAndSuffix_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_GetChildComponentByClassAndSuffix_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_GetLocalVisionRotation_Result) == 0x000010, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_GetLocalVisionRotation_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x00001C, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_GetAttribValue_ReturnValue) == 0x000030, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000034, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_TrySetSpawnData_Result) == 0x000035, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_TrySetSpawnData_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_SpawnObject_ReturnValue) == 0x000038, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_StartTrackingLocation_ReturnValue) == 0x000040, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_StartTrackingLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_InitializeCharacterAsDead_Result) == 0x000041, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_InitializeCharacterAsDead_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_GetAnimInstance_ReturnValue) == 0x000048, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, K2Node_DynamicCast_AsINTERF_ANIM_Character) == 0x000050, "Member 'PAWN_Enemy_C_InitializeCharacter::K2Node_DynamicCast_AsINTERF_ANIM_Character' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'PAWN_Enemy_C_InitializeCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_SetIsAlive_Result) == 0x000061, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_SetIsAlive_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_GetGameInstance_ReturnValue) == 0x000068, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, K2Node_DynamicCast_AsGI_Single_Player) == 0x000070, "Member 'PAWN_Enemy_C_InitializeCharacter::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'PAWN_Enemy_C_InitializeCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializeCharacter, CallFunc_InitializeCharacter_Result) == 0x000079, "Member 'PAWN_Enemy_C_InitializeCharacter::CallFunc_InitializeCharacter_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SpawnHeroGib
// 0x0070 (0x0070 - 0x0000)
struct PAWN_Enemy_C_SpawnHeroGib final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                Impulse;                                           // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Angular_Velocity;                                  // 0x004C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADismembermentGib_Base_C*               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_SpawnHeroGib) == 0x000010, "Wrong alignment on PAWN_Enemy_C_SpawnHeroGib");
static_assert(sizeof(PAWN_Enemy_C_SpawnHeroGib) == 0x000070, "Wrong size on PAWN_Enemy_C_SpawnHeroGib");
static_assert(offsetof(PAWN_Enemy_C_SpawnHeroGib, Class_0) == 0x000000, "Member 'PAWN_Enemy_C_SpawnHeroGib::Class_0' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnHeroGib, SpawnTransform) == 0x000010, "Member 'PAWN_Enemy_C_SpawnHeroGib::SpawnTransform' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnHeroGib, Impulse) == 0x000040, "Member 'PAWN_Enemy_C_SpawnHeroGib::Impulse' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnHeroGib, Angular_Velocity) == 0x00004C, "Member 'PAWN_Enemy_C_SpawnHeroGib::Angular_Velocity' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnHeroGib, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000058, "Member 'PAWN_Enemy_C_SpawnHeroGib::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnHeroGib, CallFunc_FinishSpawningActor_ReturnValue) == 0x000060, "Member 'PAWN_Enemy_C_SpawnHeroGib::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnLimbDismembered
// 0x00B0 (0x00B0 - 0x0000)
struct PAWN_Enemy_C_OnLimbDismembered final
{
public:
	class FName                                   Limb;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              LimbData;                                          // 0x0008(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              LimbActor;                                         // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnBeginPlay;                                       // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnLimbDismembered) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnLimbDismembered");
static_assert(sizeof(PAWN_Enemy_C_OnLimbDismembered) == 0x0000B0, "Wrong size on PAWN_Enemy_C_OnLimbDismembered");
static_assert(offsetof(PAWN_Enemy_C_OnLimbDismembered, Limb) == 0x000000, "Member 'PAWN_Enemy_C_OnLimbDismembered::Limb' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLimbDismembered, LimbData) == 0x000008, "Member 'PAWN_Enemy_C_OnLimbDismembered::LimbData' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLimbDismembered, LimbActor) == 0x0000A0, "Member 'PAWN_Enemy_C_OnLimbDismembered::LimbActor' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLimbDismembered, OnBeginPlay) == 0x0000A8, "Member 'PAWN_Enemy_C_OnLimbDismembered::OnBeginPlay' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLimbDismembered, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000A9, "Member 'PAWN_Enemy_C_OnLimbDismembered::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnDynaDamage
// 0x000C (0x000C - 0x0000)
struct PAWN_Enemy_C_OnDynaDamage final
{
public:
	class FName                                   DynaElement;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnBeginPlay;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnDynaDamage) == 0x000004, "Wrong alignment on PAWN_Enemy_C_OnDynaDamage");
static_assert(sizeof(PAWN_Enemy_C_OnDynaDamage) == 0x00000C, "Wrong size on PAWN_Enemy_C_OnDynaDamage");
static_assert(offsetof(PAWN_Enemy_C_OnDynaDamage, DynaElement) == 0x000000, "Member 'PAWN_Enemy_C_OnDynaDamage::DynaElement' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnDynaDamage, OnBeginPlay) == 0x000008, "Member 'PAWN_Enemy_C_OnDynaDamage::OnBeginPlay' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetDefaultAttributeOverrides
// 0x03D0 (0x03D0 - 0x0000)
struct PAWN_Enemy_C_GetDefaultAttributeOverrides final
{
public:
	TArray<struct FDefaultAttribute>              OverrideAttribs;                                   // 0x0000(0x0010)(Parm, OutParm)
	struct FSTRUCT_EnemyTemplate                  EnemyTemplate;                                     // 0x0010(0x000C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DefaultHealth;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           DifficultyMode;                                    // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDefaultAttribute>              OverrideAttributes;                                // 0x0028(0x0010)(Edit, BlueprintVisible)
	struct FSTRUCT_EnemyStats                     EnemyStats;                                        // 0x0038(0x0048)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultAttribute                      K2Node_MakeStruct_DefaultAttribute;                // 0x0088(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDefaultAttribute                      K2Node_MakeStruct_DefaultAttribute_1;              // 0x00D8(0x0048)(HasGetValueTypeHash)
	TArray<struct FDefaultAttribute>              K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultAttribute                      K2Node_MakeStruct_DefaultAttribute_2;              // 0x0138(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultAttribute                      K2Node_MakeStruct_DefaultAttribute_3;              // 0x0190(0x0048)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_CombatDifficultySettings       CallFunc_GetDataTableRowFromName_OutRow;           // 0x01FC(0x0034)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultAttribute                      K2Node_MakeStruct_DefaultAttribute_4;              // 0x0238(0x0048)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScaledRoundedHealthValue_Result;       // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDefaultAttribute                      K2Node_MakeStruct_DefaultAttribute_5;              // 0x0288(0x0048)(HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultAttribute                      K2Node_MakeStruct_DefaultAttribute_6;              // 0x02D8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDefaultAttribute>              K2Node_MakeArray_Array_1;                          // 0x0328(0x0010)(ConstParm, ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_GameDifficulty                           CallFunc_GetDifficultyValues_Combat;               // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           CallFunc_GetDifficultyValues_Mission;              // 0x034B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           CallFunc_GetDifficultyValues_Puzzle;               // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           CallFunc_GetDifficultyValues_Cyber;                // 0x034D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           K2Node_Select_Default;                             // 0x034E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34F[0x1];                                      // 0x034F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_EnemyTemplate                  CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0370(0x000C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37D[0x3];                                      // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_EnemyStats                     CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0380(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_GetDefaultAttributeOverrides) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetDefaultAttributeOverrides");
static_assert(sizeof(PAWN_Enemy_C_GetDefaultAttributeOverrides) == 0x0003D0, "Wrong size on PAWN_Enemy_C_GetDefaultAttributeOverrides");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, OverrideAttribs) == 0x000000, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::OverrideAttribs' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, EnemyTemplate) == 0x000010, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::EnemyTemplate' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, DefaultHealth) == 0x00001C, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::DefaultHealth' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, DifficultyMode) == 0x000020, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::DifficultyMode' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, OverrideAttributes) == 0x000028, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::OverrideAttributes' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, EnemyStats) == 0x000038, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::EnemyStats' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000080, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, K2Node_MakeStruct_DefaultAttribute) == 0x000088, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::K2Node_MakeStruct_DefaultAttribute' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D0, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000D4, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, K2Node_MakeStruct_DefaultAttribute_1) == 0x0000D8, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::K2Node_MakeStruct_DefaultAttribute_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, K2Node_MakeArray_Array) == 0x000120, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000130, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, K2Node_MakeStruct_DefaultAttribute_2) == 0x000138, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::K2Node_MakeStruct_DefaultAttribute_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000180, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Array_Add_ReturnValue) == 0x000184, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000188, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Greater_IntInt_ReturnValue_2) == 0x00018C, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, K2Node_MakeStruct_DefaultAttribute_3) == 0x000190, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::K2Node_MakeStruct_DefaultAttribute_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, Temp_bool_Variable) == 0x0001D8, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x0001E0, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Conv_StringToName_ReturnValue) == 0x0001F0, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x0001F8, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001FC, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000230, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, K2Node_MakeStruct_DefaultAttribute_4) == 0x000238, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::K2Node_MakeStruct_DefaultAttribute_4' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000280, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetScaledRoundedHealthValue_Result) == 0x000284, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetScaledRoundedHealthValue_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, K2Node_MakeStruct_DefaultAttribute_5) == 0x000288, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::K2Node_MakeStruct_DefaultAttribute_5' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x0002D0, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, K2Node_MakeStruct_DefaultAttribute_6) == 0x0002D8, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::K2Node_MakeStruct_DefaultAttribute_6' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000320, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, K2Node_MakeArray_Array_1) == 0x000328, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetGameInstance_ReturnValue) == 0x000338, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, K2Node_DynamicCast_AsGI_Single_Player) == 0x000340, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, K2Node_DynamicCast_bSuccess) == 0x000348, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000349, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetDifficultyValues_Combat) == 0x00034A, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetDifficultyValues_Combat' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetDifficultyValues_Mission) == 0x00034B, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetDifficultyValues_Mission' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetDifficultyValues_Puzzle) == 0x00034C, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetDifficultyValues_Puzzle' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetDifficultyValues_Cyber) == 0x00034D, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetDifficultyValues_Cyber' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, K2Node_Select_Default) == 0x00034E, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Array_Add_ReturnValue_1) == 0x000350, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000358, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000368, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000370, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x00037C, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000380, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetDefaultAttributeOverrides, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0003C8, "Member 'PAWN_Enemy_C_GetDefaultAttributeOverrides::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ShouldSaveActor
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Enemy_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          K2Node_MakeStruct_StreamingSaveGameActorParams;    // 0x0020(0x0018)()
};
static_assert(alignof(PAWN_Enemy_C_ShouldSaveActor) == 0x000008, "Wrong alignment on PAWN_Enemy_C_ShouldSaveActor");
static_assert(sizeof(PAWN_Enemy_C_ShouldSaveActor) == 0x000038, "Wrong size on PAWN_Enemy_C_ShouldSaveActor");
static_assert(offsetof(PAWN_Enemy_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'PAWN_Enemy_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'PAWN_Enemy_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ShouldSaveActor, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'PAWN_Enemy_C_ShouldSaveActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ShouldSaveActor, K2Node_MakeStruct_StreamingSaveGameActorParams) == 0x000020, "Member 'PAWN_Enemy_C_ShouldSaveActor::K2Node_MakeStruct_StreamingSaveGameActorParams' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.HasCustomDeathBehavior
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_HasCustomDeathBehavior final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_HasCustomDeathBehavior) == 0x000001, "Wrong alignment on PAWN_Enemy_C_HasCustomDeathBehavior");
static_assert(sizeof(PAWN_Enemy_C_HasCustomDeathBehavior) == 0x000001, "Wrong size on PAWN_Enemy_C_HasCustomDeathBehavior");
static_assert(offsetof(PAWN_Enemy_C_HasCustomDeathBehavior, Result) == 0x000000, "Member 'PAWN_Enemy_C_HasCustomDeathBehavior::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetEnemyScanShape
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Enemy_C_GetEnemyScanShape final
{
public:
	class UShapeComponent*                        ShapeComponent;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        CallFunc_GetChildComponentByTag_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetEnemyScanShape) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetEnemyScanShape");
static_assert(sizeof(PAWN_Enemy_C_GetEnemyScanShape) == 0x000010, "Wrong size on PAWN_Enemy_C_GetEnemyScanShape");
static_assert(offsetof(PAWN_Enemy_C_GetEnemyScanShape, ShapeComponent) == 0x000000, "Member 'PAWN_Enemy_C_GetEnemyScanShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetEnemyScanShape, CallFunc_GetChildComponentByTag_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_GetEnemyScanShape::CallFunc_GetChildComponentByTag_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsEnemyScannable
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_IsEnemyScannable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsEnemyScannable) == 0x000001, "Wrong alignment on PAWN_Enemy_C_IsEnemyScannable");
static_assert(sizeof(PAWN_Enemy_C_IsEnemyScannable) == 0x000001, "Wrong size on PAWN_Enemy_C_IsEnemyScannable");
static_assert(offsetof(PAWN_Enemy_C_IsEnemyScannable, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsEnemyScannable::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.CanHackEnemy
// 0x0028 (0x0028 - 0x0000)
struct PAWN_Enemy_C_CanHackEnemy final
{
public:
	class APAWN_SystemShockCharacter_C*           SourceCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_DetectionEvent_C*                  DetectionEvent;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_DetectionEvent_C*                  CallFunc_GetDetectionEvent_DetectionEvent;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsIdentified_IsDetected;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_CanHackEnemy) == 0x000008, "Wrong alignment on PAWN_Enemy_C_CanHackEnemy");
static_assert(sizeof(PAWN_Enemy_C_CanHackEnemy) == 0x000028, "Wrong size on PAWN_Enemy_C_CanHackEnemy");
static_assert(offsetof(PAWN_Enemy_C_CanHackEnemy, SourceCharacter) == 0x000000, "Member 'PAWN_Enemy_C_CanHackEnemy::SourceCharacter' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanHackEnemy, Result) == 0x000008, "Member 'PAWN_Enemy_C_CanHackEnemy::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanHackEnemy, DetectionEvent) == 0x000010, "Member 'PAWN_Enemy_C_CanHackEnemy::DetectionEvent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanHackEnemy, CallFunc_GetDetectionEvent_DetectionEvent) == 0x000018, "Member 'PAWN_Enemy_C_CanHackEnemy::CallFunc_GetDetectionEvent_DetectionEvent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanHackEnemy, CallFunc_GetIsIdentified_IsDetected) == 0x000020, "Member 'PAWN_Enemy_C_CanHackEnemy::CallFunc_GetIsIdentified_IsDetected' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanHackEnemy, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'PAWN_Enemy_C_CanHackEnemy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanHackEnemy, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'PAWN_Enemy_C_CanHackEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetEnemyType
// 0x0058 (0x0058 - 0x0000)
struct PAWN_Enemy_C_GetEnemyType final
{
public:
	ENUM_EnemyType                                Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_EnemyStats                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_GetEnemyType) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetEnemyType");
static_assert(sizeof(PAWN_Enemy_C_GetEnemyType) == 0x000058, "Wrong size on PAWN_Enemy_C_GetEnemyType");
static_assert(offsetof(PAWN_Enemy_C_GetEnemyType, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetEnemyType::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetEnemyType, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'PAWN_Enemy_C_GetEnemyType::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetEnemyType, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'PAWN_Enemy_C_GetEnemyType::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetActorLinkedToEnemy
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Enemy_C_GetActorLinkedToEnemy final
{
public:
	class AActor*                                 Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetActorLinkedToEnemy) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetActorLinkedToEnemy");
static_assert(sizeof(PAWN_Enemy_C_GetActorLinkedToEnemy) == 0x000008, "Wrong size on PAWN_Enemy_C_GetActorLinkedToEnemy");
static_assert(offsetof(PAWN_Enemy_C_GetActorLinkedToEnemy, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetActorLinkedToEnemy::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.UpdateEnemyScannableSettings
// 0x0058 (0x0058 - 0x0000)
struct PAWN_Enemy_C_UpdateEnemyScannableSettings final
{
public:
	bool                                          IsInventoryEmpty;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      Inventory;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDeadDisplayName_Result;                // 0x0018(0x0018)()
	class FText                                   CallFunc_GetInventoryDescriptionText_ResultMessage; // 0x0030(0x0018)()
	bool                                          CallFunc_IsInventoryEmpty_Result;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_UpdateEnemyScannableSettings) == 0x000008, "Wrong alignment on PAWN_Enemy_C_UpdateEnemyScannableSettings");
static_assert(sizeof(PAWN_Enemy_C_UpdateEnemyScannableSettings) == 0x000058, "Wrong size on PAWN_Enemy_C_UpdateEnemyScannableSettings");
static_assert(offsetof(PAWN_Enemy_C_UpdateEnemyScannableSettings, IsInventoryEmpty) == 0x000000, "Member 'PAWN_Enemy_C_UpdateEnemyScannableSettings::IsInventoryEmpty' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_UpdateEnemyScannableSettings, Inventory) == 0x000008, "Member 'PAWN_Enemy_C_UpdateEnemyScannableSettings::Inventory' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_UpdateEnemyScannableSettings, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_UpdateEnemyScannableSettings::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_UpdateEnemyScannableSettings, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'PAWN_Enemy_C_UpdateEnemyScannableSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_UpdateEnemyScannableSettings, CallFunc_GetDeadDisplayName_Result) == 0x000018, "Member 'PAWN_Enemy_C_UpdateEnemyScannableSettings::CallFunc_GetDeadDisplayName_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_UpdateEnemyScannableSettings, CallFunc_GetInventoryDescriptionText_ResultMessage) == 0x000030, "Member 'PAWN_Enemy_C_UpdateEnemyScannableSettings::CallFunc_GetInventoryDescriptionText_ResultMessage' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_UpdateEnemyScannableSettings, CallFunc_IsInventoryEmpty_Result) == 0x000048, "Member 'PAWN_Enemy_C_UpdateEnemyScannableSettings::CallFunc_IsInventoryEmpty_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_UpdateEnemyScannableSettings, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'PAWN_Enemy_C_UpdateEnemyScannableSettings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_UpdateEnemyScannableSettings, CallFunc_GetInventoryComponent_Inventory) == 0x000050, "Member 'PAWN_Enemy_C_UpdateEnemyScannableSettings::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SpawnLootPickups
// 0x0120 (0x0120 - 0x0000)
struct PAWN_Enemy_C_SpawnLootPickups final
{
public:
	class ULevelStreaming*                        StreamingLevel;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_Base_C*                         PickupActor;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             PickupLocation;                                    // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class UITEM_Base_C*                           CurrentLootItem;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      Inventory;                                         // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	class UInventoryBag_C*                        CallFunc_GetBagByIndex_Bag;                        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITEM_Base_C*>                   CallFunc_GetItemArray_Items;                       // 0x00A0(0x0010)(ReferenceParm)
	class UITEM_Base_C*                           CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevel*                                 CallFunc_GetLoadedLevel_ReturnValue;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetBestPickupClass_Result;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_Base_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetBestPickupClass_Result_1;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_Base_C*                         CallFunc_SpawnActorInLevel_ReturnValue;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetPrimaryStreamingLevel_Level;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_SpawnLootPickups) == 0x000010, "Wrong alignment on PAWN_Enemy_C_SpawnLootPickups");
static_assert(sizeof(PAWN_Enemy_C_SpawnLootPickups) == 0x000120, "Wrong size on PAWN_Enemy_C_SpawnLootPickups");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, StreamingLevel) == 0x000000, "Member 'PAWN_Enemy_C_SpawnLootPickups::StreamingLevel' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, PickupActor) == 0x000008, "Member 'PAWN_Enemy_C_SpawnLootPickups::PickupActor' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, PickupLocation) == 0x000010, "Member 'PAWN_Enemy_C_SpawnLootPickups::PickupLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CurrentLootItem) == 0x000040, "Member 'PAWN_Enemy_C_SpawnLootPickups::CurrentLootItem' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, Inventory) == 0x000048, "Member 'PAWN_Enemy_C_SpawnLootPickups::Inventory' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, Temp_int_Array_Index_Variable) == 0x000050, "Member 'PAWN_Enemy_C_SpawnLootPickups::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'PAWN_Enemy_C_SpawnLootPickups::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_StopChanneling_Result) == 0x00005C, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_StopChanneling_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_IsValid_ReturnValue) == 0x00005D, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_GetSocketTransform_ReturnValue) == 0x000060, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_GetBagByIndex_Bag) == 0x000090, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_GetBagByIndex_Bag' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_GetInventoryComponent_Inventory) == 0x000098, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_GetItemArray_Items) == 0x0000A0, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_GetItemArray_Items' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_GetLoadedLevel_ReturnValue) == 0x0000C0, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_GetLoadedLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_GetBestPickupClass_Result) == 0x0000C8, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_GetBestPickupClass_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_IsValid_ReturnValue_1) == 0x0000D0, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D8, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E0, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_GetBestPickupClass_Result_1) == 0x0000E8, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_GetBestPickupClass_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_GetGameInstance_ReturnValue) == 0x0000F0, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_SpawnActorInLevel_ReturnValue) == 0x0000F8, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_SpawnActorInLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, K2Node_DynamicCast_AsGI_Single_Player) == 0x000100, "Member 'PAWN_Enemy_C_SpawnLootPickups::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'PAWN_Enemy_C_SpawnLootPickups::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SpawnLootPickups, CallFunc_GetPrimaryStreamingLevel_Level) == 0x000110, "Member 'PAWN_Enemy_C_SpawnLootPickups::CallFunc_GetPrimaryStreamingLevel_Level' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.UpdateCustomDeathBehavior
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_UpdateCustomDeathBehavior final
{
public:
	bool                                          IsFinished;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_UpdateCustomDeathBehavior) == 0x000001, "Wrong alignment on PAWN_Enemy_C_UpdateCustomDeathBehavior");
static_assert(sizeof(PAWN_Enemy_C_UpdateCustomDeathBehavior) == 0x000001, "Wrong size on PAWN_Enemy_C_UpdateCustomDeathBehavior");
static_assert(offsetof(PAWN_Enemy_C_UpdateCustomDeathBehavior, IsFinished) == 0x000000, "Member 'PAWN_Enemy_C_UpdateCustomDeathBehavior::IsFinished' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnStaggerFinished
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Enemy_C_OnStaggerFinished final
{
public:
	class UAttribInstance*                        StaggerAttribInstance;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModResult                       CallFunc_SetBaseValue_ReturnValue;                 // 0x0008(0x0005)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_OnStaggerFinished) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnStaggerFinished");
static_assert(sizeof(PAWN_Enemy_C_OnStaggerFinished) == 0x000018, "Wrong size on PAWN_Enemy_C_OnStaggerFinished");
static_assert(offsetof(PAWN_Enemy_C_OnStaggerFinished, StaggerAttribInstance) == 0x000000, "Member 'PAWN_Enemy_C_OnStaggerFinished::StaggerAttribInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnStaggerFinished, CallFunc_SetBaseValue_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_OnStaggerFinished::CallFunc_SetBaseValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnStaggerFinished, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'PAWN_Enemy_C_OnStaggerFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnStaggerFinished, CallFunc_GetAttribInstance_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_OnStaggerFinished::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.CanShootFromSocket
// 0x01D0 (0x01D0 - 0x0000)
struct PAWN_Enemy_C_CanShootFromSocket final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BarrelLocation;                                    // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FirstUnsafeLocation;                               // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SafeBoneLocation;                                  // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPointInCapsule_ReturnValue;             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x00E0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x00F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetFirstParentBoneLocationInCapsule_OutBoneLocation; // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetFirstParentBoneLocationInCapsule_OutExteriorBoneNames; // 0x0190(0x0010)(ReferenceParm)
	class FName                                   CallFunc_GetFirstParentBoneLocationInCapsule_ReturnValue; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_CanShootFromSocket) == 0x000008, "Wrong alignment on PAWN_Enemy_C_CanShootFromSocket");
static_assert(sizeof(PAWN_Enemy_C_CanShootFromSocket) == 0x0001D0, "Wrong size on PAWN_Enemy_C_CanShootFromSocket");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, SocketName) == 0x000000, "Member 'PAWN_Enemy_C_CanShootFromSocket::SocketName' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, BarrelLocation) == 0x000008, "Member 'PAWN_Enemy_C_CanShootFromSocket::BarrelLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, Result) == 0x000014, "Member 'PAWN_Enemy_C_CanShootFromSocket::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, FirstUnsafeLocation) == 0x000018, "Member 'PAWN_Enemy_C_CanShootFromSocket::FirstUnsafeLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, SafeBoneLocation) == 0x000024, "Member 'PAWN_Enemy_C_CanShootFromSocket::SafeBoneLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00003C, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_IsPointInCapsule_ReturnValue) == 0x00003D, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_IsPointInCapsule_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, Temp_object_Variable) == 0x000040, "Member 'PAWN_Enemy_C_CanShootFromSocket::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_LineTraceSingle_OutHit) == 0x000050, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D8, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, Temp_object_Variable_1) == 0x0000E0, "Member 'PAWN_Enemy_C_CanShootFromSocket::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_Not_PreBool_ReturnValue) == 0x0000F0, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_LineTraceSingle_OutHit_1) == 0x0000F4, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_LineTraceSingle_ReturnValue_1) == 0x00017C, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_Not_PreBool_ReturnValue_1) == 0x00017D, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_GetFirstParentBoneLocationInCapsule_OutBoneLocation) == 0x000180, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_GetFirstParentBoneLocationInCapsule_OutBoneLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_GetFirstParentBoneLocationInCapsule_OutExteriorBoneNames) == 0x000190, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_GetFirstParentBoneLocationInCapsule_OutExteriorBoneNames' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_GetFirstParentBoneLocationInCapsule_ReturnValue) == 0x0001A0, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_GetFirstParentBoneLocationInCapsule_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_NotEqual_NameName_ReturnValue) == 0x0001A8, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_Array_LastIndex_ReturnValue) == 0x0001AC, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_Array_Length_ReturnValue) == 0x0001B8, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_GetSocketLocation_ReturnValue) == 0x0001BC, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanShootFromSocket, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001C8, "Member 'PAWN_Enemy_C_CanShootFromSocket::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetWeakspotBoneNameForAttack
// 0x0158 (0x0158 - 0x0000)
struct PAWN_Enemy_C_GetWeakspotBoneNameForAttack final
{
public:
	struct FVector                                SourceLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArmorPenetration;                                  // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ResultBoneName;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewDistanceSquared;                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClosestDistanceSquared;                            // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BestDamageBonus;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BestBoneName;                                      // 0x0024(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageBonus;                                       // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoneWorldLocation;                                 // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x003C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BoneIndex;                                         // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BaseArmor;                                         // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_EnemyStats                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B8(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue_1;     // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDynaDamageBonusFromBoneName_BonusPercent; // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLimbDamageAndArmorBonusFromBoneName_DamageBonusPercent; // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLimbDamageAndArmorBonusFromBoneName_ArmorBonusPercent; // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetWeakspotBoneNameForAttack");
static_assert(sizeof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack) == 0x000158, "Wrong size on PAWN_Enemy_C_GetWeakspotBoneNameForAttack");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, SourceLocation) == 0x000000, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::SourceLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, ArmorPenetration) == 0x00000C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::ArmorPenetration' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, ResultBoneName) == 0x000010, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::ResultBoneName' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, NewDistanceSquared) == 0x000018, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::NewDistanceSquared' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, ClosestDistanceSquared) == 0x00001C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::ClosestDistanceSquared' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, BestDamageBonus) == 0x000020, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::BestDamageBonus' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, BestBoneName) == 0x000024, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::BestBoneName' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, DamageBonus) == 0x00002C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::DamageBonus' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, BoneWorldLocation) == 0x000030, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::BoneWorldLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, BoneName) == 0x00003C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::BoneName' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, BoneIndex) == 0x000044, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::BoneIndex' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, BaseArmor) == 0x000048, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::BaseArmor' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, Temp_int_Array_Index_Variable_1) == 0x000058, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_GetSocketLocation_ReturnValue) == 0x00005C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Array_Get_Item) == 0x000068, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000088, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Array_Get_Item_1) == 0x00008C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Array_Length_ReturnValue_2) == 0x000094, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_GetSocketLocation_ReturnValue_1) == 0x00009C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000A8, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000AC, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, Temp_int_Loop_Counter_Variable_1) == 0x0000B0, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B8, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000100, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Less_IntInt_ReturnValue_1) == 0x000101, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Add_IntInt_ReturnValue_1) == 0x000104, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000108, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Less_FloatFloat_ReturnValue) == 0x00010C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00010D, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000110, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Vector_DistanceSquared_ReturnValue_1) == 0x000114, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Vector_DistanceSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000118, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_BooleanAND_ReturnValue) == 0x000119, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Add_FloatFloat_ReturnValue) == 0x00011C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000120, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_GetDynaDamageBonusFromBoneName_BonusPercent) == 0x000124, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_GetDynaDamageBonusFromBoneName_BonusPercent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_GetLimbDamageAndArmorBonusFromBoneName_DamageBonusPercent) == 0x000128, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_GetLimbDamageAndArmorBonusFromBoneName_DamageBonusPercent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_GetLimbDamageAndArmorBonusFromBoneName_ArmorBonusPercent) == 0x00012C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_GetLimbDamageAndArmorBonusFromBoneName_ArmorBonusPercent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000130, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000134, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000138, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00013C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000140, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000144, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_FClamp_ReturnValue) == 0x000148, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00014C, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetWeakspotBoneNameForAttack, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000150, "Member 'PAWN_Enemy_C_GetWeakspotBoneNameForAttack::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetCanStaggerFromDamage
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_SetCanStaggerFromDamage final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetCanStaggerFromDamage) == 0x000001, "Wrong alignment on PAWN_Enemy_C_SetCanStaggerFromDamage");
static_assert(sizeof(PAWN_Enemy_C_SetCanStaggerFromDamage) == 0x000001, "Wrong size on PAWN_Enemy_C_SetCanStaggerFromDamage");
static_assert(offsetof(PAWN_Enemy_C_SetCanStaggerFromDamage, State) == 0x000000, "Member 'PAWN_Enemy_C_SetCanStaggerFromDamage::State' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetPreferredRangeBias
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Enemy_C_GetPreferredRangeBias final
{
public:
	float                                         Bias;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetPreferredRangeBias) == 0x000004, "Wrong alignment on PAWN_Enemy_C_GetPreferredRangeBias");
static_assert(sizeof(PAWN_Enemy_C_GetPreferredRangeBias) == 0x000004, "Wrong size on PAWN_Enemy_C_GetPreferredRangeBias");
static_assert(offsetof(PAWN_Enemy_C_GetPreferredRangeBias, Bias) == 0x000000, "Member 'PAWN_Enemy_C_GetPreferredRangeBias::Bias' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ReceivePendingBodyTransforms
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Enemy_C_ReceivePendingBodyTransforms final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     BodyTransforms;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_ReceivePendingBodyTransforms) == 0x000008, "Wrong alignment on PAWN_Enemy_C_ReceivePendingBodyTransforms");
static_assert(sizeof(PAWN_Enemy_C_ReceivePendingBodyTransforms) == 0x000020, "Wrong size on PAWN_Enemy_C_ReceivePendingBodyTransforms");
static_assert(offsetof(PAWN_Enemy_C_ReceivePendingBodyTransforms, SkeletalMeshComponent) == 0x000000, "Member 'PAWN_Enemy_C_ReceivePendingBodyTransforms::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ReceivePendingBodyTransforms, BodyTransforms) == 0x000008, "Member 'PAWN_Enemy_C_ReceivePendingBodyTransforms::BodyTransforms' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ReceivePendingBodyTransforms, ReturnValue) == 0x000018, "Member 'PAWN_Enemy_C_ReceivePendingBodyTransforms::ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetLocalBehaviorComponent
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Enemy_C_SetLocalBehaviorComponent final
{
public:
	class ULocalBehaviorComponent_C*              LocalBehaviorComponent_0;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointOfInterestComponent_C*            K2Node_DynamicCast_AsPoint_Of_Interest_Component;  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryClaimPointOfInterest_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryUnclaimCurrentPointOfInterest_ReturnValue; // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetLocalBehaviorComponent) == 0x000008, "Wrong alignment on PAWN_Enemy_C_SetLocalBehaviorComponent");
static_assert(sizeof(PAWN_Enemy_C_SetLocalBehaviorComponent) == 0x000020, "Wrong size on PAWN_Enemy_C_SetLocalBehaviorComponent");
static_assert(offsetof(PAWN_Enemy_C_SetLocalBehaviorComponent, LocalBehaviorComponent_0) == 0x000000, "Member 'PAWN_Enemy_C_SetLocalBehaviorComponent::LocalBehaviorComponent_0' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLocalBehaviorComponent, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_SetLocalBehaviorComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLocalBehaviorComponent, K2Node_DynamicCast_AsPoint_Of_Interest_Component) == 0x000010, "Member 'PAWN_Enemy_C_SetLocalBehaviorComponent::K2Node_DynamicCast_AsPoint_Of_Interest_Component' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLocalBehaviorComponent, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Enemy_C_SetLocalBehaviorComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLocalBehaviorComponent, CallFunc_TryClaimPointOfInterest_ReturnValue) == 0x000019, "Member 'PAWN_Enemy_C_SetLocalBehaviorComponent::CallFunc_TryClaimPointOfInterest_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLocalBehaviorComponent, CallFunc_TryUnclaimCurrentPointOfInterest_ReturnValue) == 0x00001A, "Member 'PAWN_Enemy_C_SetLocalBehaviorComponent::CallFunc_TryUnclaimCurrentPointOfInterest_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetLocalBehaviorComponent, CallFunc_IsValid_ReturnValue_1) == 0x00001B, "Member 'PAWN_Enemy_C_SetLocalBehaviorComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetLocalBehaviorComponent
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Enemy_C_GetLocalBehaviorComponent final
{
public:
	class ULocalBehaviorComponent_C*              LocalBehaviorComponent_0;                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetLocalBehaviorComponent) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetLocalBehaviorComponent");
static_assert(sizeof(PAWN_Enemy_C_GetLocalBehaviorComponent) == 0x000008, "Wrong size on PAWN_Enemy_C_GetLocalBehaviorComponent");
static_assert(offsetof(PAWN_Enemy_C_GetLocalBehaviorComponent, LocalBehaviorComponent_0) == 0x000000, "Member 'PAWN_Enemy_C_GetLocalBehaviorComponent::LocalBehaviorComponent_0' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnLivingCharacterDestroyed
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Enemy_C_OnLivingCharacterDestroyed final
{
public:
	bool                                          RemovedDuringMapChange;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnLivingCharacterDestroyed) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnLivingCharacterDestroyed");
static_assert(sizeof(PAWN_Enemy_C_OnLivingCharacterDestroyed) == 0x000020, "Wrong size on PAWN_Enemy_C_OnLivingCharacterDestroyed");
static_assert(offsetof(PAWN_Enemy_C_OnLivingCharacterDestroyed, RemovedDuringMapChange) == 0x000000, "Member 'PAWN_Enemy_C_OnLivingCharacterDestroyed::RemovedDuringMapChange' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLivingCharacterDestroyed, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_OnLivingCharacterDestroyed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLivingCharacterDestroyed, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_OnLivingCharacterDestroyed::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLivingCharacterDestroyed, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'PAWN_Enemy_C_OnLivingCharacterDestroyed::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnLivingCharacterDestroyed, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Enemy_C_OnLivingCharacterDestroyed::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetThreatLevel
// 0x0060 (0x0060 - 0x0000)
struct PAWN_Enemy_C_GetThreatLevel final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_EnemyStats                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetThreatLevel) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetThreatLevel");
static_assert(sizeof(PAWN_Enemy_C_GetThreatLevel) == 0x000060, "Wrong size on PAWN_Enemy_C_GetThreatLevel");
static_assert(offsetof(PAWN_Enemy_C_GetThreatLevel, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetThreatLevel::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetThreatLevel, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'PAWN_Enemy_C_GetThreatLevel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetThreatLevel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'PAWN_Enemy_C_GetThreatLevel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetThreatLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x000051, "Member 'PAWN_Enemy_C_GetThreatLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetThreatLevel, CallFunc_Divide_IntInt_ReturnValue) == 0x000054, "Member 'PAWN_Enemy_C_GetThreatLevel::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetThreatLevel, CallFunc_Clamp_ReturnValue) == 0x000058, "Member 'PAWN_Enemy_C_GetThreatLevel::CallFunc_Clamp_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsStunned
// 0x000C (0x000C - 0x0000)
struct PAWN_Enemy_C_IsStunned final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsStunned) == 0x000004, "Wrong alignment on PAWN_Enemy_C_IsStunned");
static_assert(sizeof(PAWN_Enemy_C_IsStunned) == 0x00000C, "Wrong size on PAWN_Enemy_C_IsStunned");
static_assert(offsetof(PAWN_Enemy_C_IsStunned, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsStunned::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsStunned, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'PAWN_Enemy_C_IsStunned::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsStunned, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_IsStunned::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetShockAgentLocation
// 0x0060 (0x0060 - 0x0000)
struct PAWN_Enemy_C_GetShockAgentLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_GetShockAgentLocation) == 0x000004, "Wrong alignment on PAWN_Enemy_C_GetShockAgentLocation");
static_assert(sizeof(PAWN_Enemy_C_GetShockAgentLocation) == 0x000060, "Wrong size on PAWN_Enemy_C_GetShockAgentLocation");
static_assert(offsetof(PAWN_Enemy_C_GetShockAgentLocation, Location) == 0x000000, "Member 'PAWN_Enemy_C_GetShockAgentLocation::Location' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetShockAgentLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'PAWN_Enemy_C_GetShockAgentLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetShockAgentLocation, CallFunc_GetActorUpVector_ReturnValue) == 0x000018, "Member 'PAWN_Enemy_C_GetShockAgentLocation::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetShockAgentLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000024, "Member 'PAWN_Enemy_C_GetShockAgentLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetShockAgentLocation, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000030, "Member 'PAWN_Enemy_C_GetShockAgentLocation::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetShockAgentLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'PAWN_Enemy_C_GetShockAgentLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetShockAgentLocation, CallFunc_GetShockAgentLocation_Location) == 0x000038, "Member 'PAWN_Enemy_C_GetShockAgentLocation::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetShockAgentLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000044, "Member 'PAWN_Enemy_C_GetShockAgentLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetShockAgentLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'PAWN_Enemy_C_GetShockAgentLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetShockAgentLocation, K2Node_SwitchEnum_CmpSuccess) == 0x00005C, "Member 'PAWN_Enemy_C_GetShockAgentLocation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsUnderImmediateThreat
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Enemy_C_IsUnderImmediateThreat final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsUnderImmediateThreat) == 0x000004, "Wrong alignment on PAWN_Enemy_C_IsUnderImmediateThreat");
static_assert(sizeof(PAWN_Enemy_C_IsUnderImmediateThreat) == 0x000010, "Wrong size on PAWN_Enemy_C_IsUnderImmediateThreat");
static_assert(offsetof(PAWN_Enemy_C_IsUnderImmediateThreat, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsUnderImmediateThreat::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsUnderImmediateThreat, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000004, "Member 'PAWN_Enemy_C_IsUnderImmediateThreat::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsUnderImmediateThreat, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_IsUnderImmediateThreat::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsUnderImmediateThreat, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'PAWN_Enemy_C_IsUnderImmediateThreat::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetImmediatelyThreatened
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Enemy_C_SetImmediatelyThreatened final
{
public:
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_SetImmediatelyThreatened) == 0x000004, "Wrong alignment on PAWN_Enemy_C_SetImmediatelyThreatened");
static_assert(sizeof(PAWN_Enemy_C_SetImmediatelyThreatened) == 0x000004, "Wrong size on PAWN_Enemy_C_SetImmediatelyThreatened");
static_assert(offsetof(PAWN_Enemy_C_SetImmediatelyThreatened, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000000, "Member 'PAWN_Enemy_C_SetImmediatelyThreatened::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.EVENT_OnDisableAttribChanged
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Enemy_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        ShieldInstance;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasMagneticallyDisabled;                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsMagneticallyDisabled;                            // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_EVENT_OnDisableAttribChanged) == 0x000008, "Wrong alignment on PAWN_Enemy_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(PAWN_Enemy_C_EVENT_OnDisableAttribChanged) == 0x000018, "Wrong size on PAWN_Enemy_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'PAWN_Enemy_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'PAWN_Enemy_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnDisableAttribChanged, ShieldInstance) == 0x000008, "Member 'PAWN_Enemy_C_EVENT_OnDisableAttribChanged::ShieldInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnDisableAttribChanged, WasMagneticallyDisabled) == 0x000010, "Member 'PAWN_Enemy_C_EVENT_OnDisableAttribChanged::WasMagneticallyDisabled' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnDisableAttribChanged, IsMagneticallyDisabled) == 0x000011, "Member 'PAWN_Enemy_C_EVENT_OnDisableAttribChanged::IsMagneticallyDisabled' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnDisableAttribChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000012, "Member 'PAWN_Enemy_C_EVENT_OnDisableAttribChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnDisableAttribChanged, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000013, "Member 'PAWN_Enemy_C_EVENT_OnDisableAttribChanged::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnDisableAttribChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000014, "Member 'PAWN_Enemy_C_EVENT_OnDisableAttribChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnEnemyCorpseDestroyed
// 0x0058 (0x0058 - 0x0000)
struct PAWN_Enemy_C_OnEnemyCorpseDestroyed final
{
public:
	bool                                          OnBeginPlay;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpawnedPointOfInterest_C*              PointOfInterestComponent;                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ScanShapeComponent;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        CallFunc_GetEnemyScanShape_ShapeComponent;         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USpawnedPointOfInterest_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnEnemyCorpseDestroyed) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnEnemyCorpseDestroyed");
static_assert(sizeof(PAWN_Enemy_C_OnEnemyCorpseDestroyed) == 0x000058, "Wrong size on PAWN_Enemy_C_OnEnemyCorpseDestroyed");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, OnBeginPlay) == 0x000000, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::OnBeginPlay' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, PointOfInterestComponent) == 0x000008, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::PointOfInterestComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, ScanShapeComponent) == 0x000010, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::ScanShapeComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, CallFunc_IsValid_ReturnValue_1) == 0x00003A, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, CallFunc_GetEnemyScanShape_ShapeComponent) == 0x000040, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::CallFunc_GetEnemyScanShape_ShapeComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyCorpseDestroyed, CallFunc_Not_PreBool_ReturnValue) == 0x000051, "Member 'PAWN_Enemy_C_OnEnemyCorpseDestroyed::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnMagneticDisableStateChanged
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Enemy_C_OnMagneticDisableStateChanged final
{
public:
	bool                                          DisableState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        ShieldInstance;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLowFiAudibilityEnabled_Result;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySetLightState_Result;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_EnemyType                                CallFunc_GetEnemyType_Result;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TrySetLightState_Result_1;                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLowFiBehaviorEnabled_Result;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyBehaviorEnabled_Result;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_ExpireModsMatchingCategory_ReturnValue;   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttributeDef*                          CallFunc_GetShieldAttrib_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_OnMagneticDisableStateChanged) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnMagneticDisableStateChanged");
static_assert(sizeof(PAWN_Enemy_C_OnMagneticDisableStateChanged) == 0x000030, "Wrong size on PAWN_Enemy_C_OnMagneticDisableStateChanged");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, DisableState) == 0x000000, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::DisableState' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, ShieldInstance) == 0x000008, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::ShieldInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_IsLowFiAudibilityEnabled_Result) == 0x000010, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_IsLowFiAudibilityEnabled_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_TrySetLightState_Result) == 0x000013, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_TrySetLightState_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_Not_PreBool_ReturnValue_1) == 0x000014, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_GetEnemyType_Result) == 0x000015, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_GetEnemyType_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_TrySetLightState_Result_1) == 0x000016, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_TrySetLightState_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000017, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_IsLowFiBehaviorEnabled_Result) == 0x000018, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_IsLowFiBehaviorEnabled_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_Not_PreBool_ReturnValue_2) == 0x000019, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_IsAnyBehaviorEnabled_Result) == 0x00001A, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_IsAnyBehaviorEnabled_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_IsValid_ReturnValue_1) == 0x00001B, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_ExpireModsMatchingCategory_ReturnValue) == 0x00001C, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_ExpireModsMatchingCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_GetShieldAttrib_ReturnValue) == 0x000020, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_GetShieldAttrib_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnMagneticDisableStateChanged, CallFunc_GetAttribInstance_ReturnValue) == 0x000028, "Member 'PAWN_Enemy_C_OnMagneticDisableStateChanged::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsStaggered
// 0x000C (0x000C - 0x0000)
struct PAWN_Enemy_C_IsStaggered final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsStaggered) == 0x000004, "Wrong alignment on PAWN_Enemy_C_IsStaggered");
static_assert(sizeof(PAWN_Enemy_C_IsStaggered) == 0x00000C, "Wrong size on PAWN_Enemy_C_IsStaggered");
static_assert(offsetof(PAWN_Enemy_C_IsStaggered, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsStaggered::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsStaggered, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'PAWN_Enemy_C_IsStaggered::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsStaggered, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_IsStaggered::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetEnemyLightManager
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Enemy_C_GetEnemyLightManager final
{
public:
	class ULightTransitionManager_C*              Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetEnemyLightManager) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetEnemyLightManager");
static_assert(sizeof(PAWN_Enemy_C_GetEnemyLightManager) == 0x000008, "Wrong size on PAWN_Enemy_C_GetEnemyLightManager");
static_assert(offsetof(PAWN_Enemy_C_GetEnemyLightManager, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetEnemyLightManager::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetLightFadeDurationOnDeath
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Enemy_C_GetLightFadeDurationOnDeath final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetLightFadeDurationOnDeath) == 0x000004, "Wrong alignment on PAWN_Enemy_C_GetLightFadeDurationOnDeath");
static_assert(sizeof(PAWN_Enemy_C_GetLightFadeDurationOnDeath) == 0x000004, "Wrong size on PAWN_Enemy_C_GetLightFadeDurationOnDeath");
static_assert(offsetof(PAWN_Enemy_C_GetLightFadeDurationOnDeath, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetLightFadeDurationOnDeath::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsGroundAlignmentEnabled
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_IsGroundAlignmentEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsGroundAlignmentEnabled) == 0x000001, "Wrong alignment on PAWN_Enemy_C_IsGroundAlignmentEnabled");
static_assert(sizeof(PAWN_Enemy_C_IsGroundAlignmentEnabled) == 0x000002, "Wrong size on PAWN_Enemy_C_IsGroundAlignmentEnabled");
static_assert(offsetof(PAWN_Enemy_C_IsGroundAlignmentEnabled, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsGroundAlignmentEnabled::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsGroundAlignmentEnabled, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_IsGroundAlignmentEnabled::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryInitializeGroundAlignmentSystem
// 0x0098 (0x0098 - 0x0000)
struct PAWN_Enemy_C_TryInitializeGroundAlignmentSystem final
{
public:
	bool                                          CallFunc_TryStartGroundAlignmentTimer_Result;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeightedAverageVec3*                   CallFunc_SpawnObject_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem) == 0x000008, "Wrong alignment on PAWN_Enemy_C_TryInitializeGroundAlignmentSystem");
static_assert(sizeof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem) == 0x000098, "Wrong size on PAWN_Enemy_C_TryInitializeGroundAlignmentSystem");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_TryStartGroundAlignmentTimer_Result) == 0x000000, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_TryStartGroundAlignmentTimer_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_BreakVector_X) == 0x000004, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_BreakVector_Y) == 0x000008, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_BreakVector_Z) == 0x00000C, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_BreakVector_X_1) == 0x000014, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_BreakVector_Y_1) == 0x000018, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_BreakVector_Z_1) == 0x00001C, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000024, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_MakeVector_ReturnValue_1) == 0x000034, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_BreakVector_X_2) == 0x000040, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_BreakVector_Y_2) == 0x000044, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_BreakVector_Z_2) == 0x000048, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_BreakVector_X_3) == 0x00004C, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_BreakVector_Y_3) == 0x000050, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_BreakVector_Z_3) == 0x000054, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000058, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_MakeVector_ReturnValue_2) == 0x00005C, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_MakeVector_ReturnValue_3) == 0x000068, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_SpawnObject_ReturnValue) == 0x000078, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_Array_Add_ReturnValue_1) == 0x000084, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_Array_Add_ReturnValue_2) == 0x000088, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_Array_Add_ReturnValue_3) == 0x00008C, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInitializeGroundAlignmentSystem, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000090, "Member 'PAWN_Enemy_C_TryInitializeGroundAlignmentSystem::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.EVENT_UpdateGroundAlignment
// 0x016C (0x016C - 0x0000)
struct PAWN_Enemy_C_EVENT_UpdateGroundAlignment final
{
public:
	struct FVector                                CallFunc_ComputeGroundAlignmentNormal_Normal;      // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ComputeGroundAlignmentNormal_Distance;    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSmoothedVec3_ReturnValue;              // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromZX_ReturnValue;                // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x00E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment) == 0x000004, "Wrong alignment on PAWN_Enemy_C_EVENT_UpdateGroundAlignment");
static_assert(sizeof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment) == 0x00016C, "Wrong size on PAWN_Enemy_C_EVENT_UpdateGroundAlignment");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_ComputeGroundAlignmentNormal_Normal) == 0x000000, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_ComputeGroundAlignmentNormal_Normal' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_ComputeGroundAlignmentNormal_Distance) == 0x00000C, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_ComputeGroundAlignmentNormal_Distance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000024, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000028, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000B0, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_GetActorRightVector_ReturnValue) == 0x0000B4, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_GetSmoothedVec3_ReturnValue) == 0x0000C0, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_GetSmoothedVec3_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_Multiply_VectorInt_ReturnValue) == 0x0000CC, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_MakeRotFromZX_ReturnValue) == 0x0000D8, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_MakeRotFromZX_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_UpdateGroundAlignment, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0000E4, "Member 'PAWN_Enemy_C_EVENT_UpdateGroundAlignment::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryModifyGroundAlignmentTimerState
// 0x0003 (0x0003 - 0x0000)
struct PAWN_Enemy_C_TryModifyGroundAlignmentTimerState final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStopGroundAlignmentTimer_Result;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStartGroundAlignmentTimer_Result;      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryModifyGroundAlignmentTimerState) == 0x000001, "Wrong alignment on PAWN_Enemy_C_TryModifyGroundAlignmentTimerState");
static_assert(sizeof(PAWN_Enemy_C_TryModifyGroundAlignmentTimerState) == 0x000003, "Wrong size on PAWN_Enemy_C_TryModifyGroundAlignmentTimerState");
static_assert(offsetof(PAWN_Enemy_C_TryModifyGroundAlignmentTimerState, State) == 0x000000, "Member 'PAWN_Enemy_C_TryModifyGroundAlignmentTimerState::State' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryModifyGroundAlignmentTimerState, CallFunc_TryStopGroundAlignmentTimer_Result) == 0x000001, "Member 'PAWN_Enemy_C_TryModifyGroundAlignmentTimerState::CallFunc_TryStopGroundAlignmentTimer_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryModifyGroundAlignmentTimerState, CallFunc_TryStartGroundAlignmentTimer_Result) == 0x000002, "Member 'PAWN_Enemy_C_TryModifyGroundAlignmentTimerState::CallFunc_TryStartGroundAlignmentTimer_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ForceStartNextGroundAlignmentTick
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Enemy_C_ForceStartNextGroundAlignmentTick final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_ForceStartNextGroundAlignmentTick) == 0x000008, "Wrong alignment on PAWN_Enemy_C_ForceStartNextGroundAlignmentTick");
static_assert(sizeof(PAWN_Enemy_C_ForceStartNextGroundAlignmentTick) == 0x000018, "Wrong size on PAWN_Enemy_C_ForceStartNextGroundAlignmentTick");
static_assert(offsetof(PAWN_Enemy_C_ForceStartNextGroundAlignmentTick, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'PAWN_Enemy_C_ForceStartNextGroundAlignmentTick::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ForceStartNextGroundAlignmentTick, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_ForceStartNextGroundAlignmentTick::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryStartGroundAlignmentTimer
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Enemy_C_TryStartGroundAlignmentTimer final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryStartGroundAlignmentTimer) == 0x000001, "Wrong alignment on PAWN_Enemy_C_TryStartGroundAlignmentTimer");
static_assert(sizeof(PAWN_Enemy_C_TryStartGroundAlignmentTimer) == 0x000004, "Wrong size on PAWN_Enemy_C_TryStartGroundAlignmentTimer");
static_assert(offsetof(PAWN_Enemy_C_TryStartGroundAlignmentTimer, Result) == 0x000000, "Member 'PAWN_Enemy_C_TryStartGroundAlignmentTimer::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStartGroundAlignmentTimer, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_TryStartGroundAlignmentTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStartGroundAlignmentTimer, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000002, "Member 'PAWN_Enemy_C_TryStartGroundAlignmentTimer::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStartGroundAlignmentTimer, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'PAWN_Enemy_C_TryStartGroundAlignmentTimer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryStopGroundAlignmentTimer
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_TryStopGroundAlignmentTimer final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryStopGroundAlignmentTimer) == 0x000001, "Wrong alignment on PAWN_Enemy_C_TryStopGroundAlignmentTimer");
static_assert(sizeof(PAWN_Enemy_C_TryStopGroundAlignmentTimer) == 0x000002, "Wrong size on PAWN_Enemy_C_TryStopGroundAlignmentTimer");
static_assert(offsetof(PAWN_Enemy_C_TryStopGroundAlignmentTimer, Result) == 0x000000, "Member 'PAWN_Enemy_C_TryStopGroundAlignmentTimer::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStopGroundAlignmentTimer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_TryStopGroundAlignmentTimer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ComputeGroundAlignmentNormal
// 0x00A0 (0x00A0 - 0x0000)
struct PAWN_Enemy_C_ComputeGroundAlignmentNormal final
{
public:
	struct FVector                                Normal;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLevelOffset;                                // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelVoxelizationData*                 CurrentLevelVoxelData;                             // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlendedVoxelMeshSurfaceNormal_OutNormal; // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBlendedVoxelMeshSurfaceNormal_OutDistance; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBlendedVoxelMeshSurfaceNormal_ReturnValue; // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_ComputeGroundAlignmentNormal) == 0x000010, "Wrong alignment on PAWN_Enemy_C_ComputeGroundAlignmentNormal");
static_assert(sizeof(PAWN_Enemy_C_ComputeGroundAlignmentNormal) == 0x0000A0, "Wrong size on PAWN_Enemy_C_ComputeGroundAlignmentNormal");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, Normal) == 0x000000, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::Normal' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, Distance) == 0x00000C, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::Distance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, CurrentLevelOffset) == 0x000010, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::CurrentLevelOffset' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, CurrentLevelVoxelData) == 0x000020, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::CurrentLevelVoxelData' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000028, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002D, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, CallFunc_GetActorUpVector_ReturnValue) == 0x000060, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, CallFunc_GetBlendedVoxelMeshSurfaceNormal_OutNormal) == 0x00006C, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::CallFunc_GetBlendedVoxelMeshSurfaceNormal_OutNormal' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, CallFunc_GetBlendedVoxelMeshSurfaceNormal_OutDistance) == 0x000078, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::CallFunc_GetBlendedVoxelMeshSurfaceNormal_OutDistance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, CallFunc_GetBlendedVoxelMeshSurfaceNormal_ReturnValue) == 0x00007C, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::CallFunc_GetBlendedVoxelMeshSurfaceNormal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, CallFunc_GetGameInstance_ReturnValue) == 0x000080, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, K2Node_DynamicCast_AsGI_Single_Player) == 0x000088, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_ComputeGroundAlignmentNormal, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'PAWN_Enemy_C_ComputeGroundAlignmentNormal::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetShouldExplorePointsOfInterest
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_SetShouldExplorePointsOfInterest final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetShouldExplorePointsOfInterest) == 0x000001, "Wrong alignment on PAWN_Enemy_C_SetShouldExplorePointsOfInterest");
static_assert(sizeof(PAWN_Enemy_C_SetShouldExplorePointsOfInterest) == 0x000001, "Wrong size on PAWN_Enemy_C_SetShouldExplorePointsOfInterest");
static_assert(offsetof(PAWN_Enemy_C_SetShouldExplorePointsOfInterest, State) == 0x000000, "Member 'PAWN_Enemy_C_SetShouldExplorePointsOfInterest::State' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetShouldExplorePointsOfInterest
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_GetShouldExplorePointsOfInterest final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_GetShouldExplorePointsOfInterest) == 0x000001, "Wrong alignment on PAWN_Enemy_C_GetShouldExplorePointsOfInterest");
static_assert(sizeof(PAWN_Enemy_C_GetShouldExplorePointsOfInterest) == 0x000001, "Wrong size on PAWN_Enemy_C_GetShouldExplorePointsOfInterest");
static_assert(offsetof(PAWN_Enemy_C_GetShouldExplorePointsOfInterest, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetShouldExplorePointsOfInterest::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetLocalBehaviorAnimationDataByType
// 0x01F0 (0x01F0 - 0x0000)
struct PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType final
{
public:
	ENUM_LocalBehaviorType                        BehaviorType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LocalBehaviorAnimations        Result;                                            // 0x0008(0x00A0)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_LocalBehaviorAnimations        AnimationData;                                     // 0x00A8(0x00A0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSTRUCT_LocalBehaviorAnimations        CallFunc_Map_Find_Value;                           // 0x0148(0x00A0)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType");
static_assert(sizeof(PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType) == 0x0001F0, "Wrong size on PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType");
static_assert(offsetof(PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType, BehaviorType) == 0x000000, "Member 'PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType::BehaviorType' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType, Found) == 0x000001, "Member 'PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType::Found' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType, Result) == 0x000008, "Member 'PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType, AnimationData) == 0x0000A8, "Member 'PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType::AnimationData' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType, CallFunc_Map_Find_Value) == 0x000148, "Member 'PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType, CallFunc_Map_Find_ReturnValue) == 0x0001E8, "Member 'PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0001E9, "Member 'PAWN_Enemy_C_GetLocalBehaviorAnimationDataByType::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryClaimNextPointOfInterest
// 0x00D0 (0x00D0 - 0x0000)
struct PAWN_Enemy_C_TryClaimNextPointOfInterest final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointOfInterestComponent_C*            SelectedPOI;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 WeightsOfPOIs;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class UPointOfInterestComponent_C*>    AvailablePOIs;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UPointOfInterestComponent_C*            CurrentPOI;                                        // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                UnclaimedPOIs;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointOfInterestComponent_C*            K2Node_DynamicCast_AsPoint_Of_Interest_Component;  // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeightedRandomIndexFromFloatArray_ReturnValue; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPointOfInterestWeight_Weight;          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointOfInterestComponent_C*            CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanEnemyUsePointOfInterest_Result;        // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetUnclaimedPointsOfInterestInRoomPathRange_ReturnValue; // 0x00C0(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PAWN_Enemy_C_TryClaimNextPointOfInterest) == 0x000008, "Wrong alignment on PAWN_Enemy_C_TryClaimNextPointOfInterest");
static_assert(sizeof(PAWN_Enemy_C_TryClaimNextPointOfInterest) == 0x0000D0, "Wrong size on PAWN_Enemy_C_TryClaimNextPointOfInterest");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, Result) == 0x000000, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, SelectedPOI) == 0x000008, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::SelectedPOI' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, WeightsOfPOIs) == 0x000010, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::WeightsOfPOIs' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, AvailablePOIs) == 0x000020, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::AvailablePOIs' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CurrentPOI) == 0x000030, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CurrentPOI' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CurrentIndex) == 0x000038, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CurrentIndex' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, UnclaimedPOIs) == 0x000040, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::UnclaimedPOIs' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, Temp_int_Array_Index_Variable) == 0x000050, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Array_Get_Item) == 0x000068, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000070, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, K2Node_DynamicCast_AsPoint_Of_Interest_Component) == 0x000078, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::K2Node_DynamicCast_AsPoint_Of_Interest_Component' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Add_FloatFloat_ReturnValue) == 0x000084, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Array_Length_ReturnValue_1) == 0x000090, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Min_ReturnValue) == 0x000094, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_GetWeightedRandomIndexFromFloatArray_ReturnValue) == 0x000098, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_GetWeightedRandomIndexFromFloatArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_GetPointOfInterestWeight_Weight) == 0x00009C, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_GetPointOfInterestWeight_Weight' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A0, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Array_Length_ReturnValue_2) == 0x0000B0, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B4, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_Array_Add_ReturnValue_1) == 0x0000B8, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_CanEnemyUsePointOfInterest_Result) == 0x0000BC, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_CanEnemyUsePointOfInterest_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryClaimNextPointOfInterest, CallFunc_GetUnclaimedPointsOfInterestInRoomPathRange_ReturnValue) == 0x0000C0, "Member 'PAWN_Enemy_C_TryClaimNextPointOfInterest::CallFunc_GetUnclaimedPointsOfInterestInRoomPathRange_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryUnclaimCurrentPointOfInterest
// 0x0003 (0x0003 - 0x0000)
struct PAWN_Enemy_C_TryUnclaimCurrentPointOfInterest final
{
public:
	bool                                          AddToExcludeList;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryUnclaimCurrentPointOfInterest_ReturnValue; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryUnclaimCurrentPointOfInterest) == 0x000001, "Wrong alignment on PAWN_Enemy_C_TryUnclaimCurrentPointOfInterest");
static_assert(sizeof(PAWN_Enemy_C_TryUnclaimCurrentPointOfInterest) == 0x000003, "Wrong size on PAWN_Enemy_C_TryUnclaimCurrentPointOfInterest");
static_assert(offsetof(PAWN_Enemy_C_TryUnclaimCurrentPointOfInterest, AddToExcludeList) == 0x000000, "Member 'PAWN_Enemy_C_TryUnclaimCurrentPointOfInterest::AddToExcludeList' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryUnclaimCurrentPointOfInterest, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_TryUnclaimCurrentPointOfInterest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryUnclaimCurrentPointOfInterest, CallFunc_TryUnclaimCurrentPointOfInterest_ReturnValue) == 0x000002, "Member 'PAWN_Enemy_C_TryUnclaimCurrentPointOfInterest::CallFunc_TryUnclaimCurrentPointOfInterest_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryAssignNextLocalBehavior
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Enemy_C_TryAssignNextLocalBehavior final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetShouldExplorePointsOfInterest_Result;  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UnregisterLowFiBehaviorEnemy_Result;      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APatrolNode_C*                          K2Node_DynamicCast_AsPatrol_Node;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryClaimNextPointOfInterest_Result;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryAssignNextLocalBehavior) == 0x000008, "Wrong alignment on PAWN_Enemy_C_TryAssignNextLocalBehavior");
static_assert(sizeof(PAWN_Enemy_C_TryAssignNextLocalBehavior) == 0x000038, "Wrong size on PAWN_Enemy_C_TryAssignNextLocalBehavior");
static_assert(offsetof(PAWN_Enemy_C_TryAssignNextLocalBehavior, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'PAWN_Enemy_C_TryAssignNextLocalBehavior::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryAssignNextLocalBehavior, K2Node_DynamicCast_AsGI_Single_Player) == 0x000008, "Member 'PAWN_Enemy_C_TryAssignNextLocalBehavior::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryAssignNextLocalBehavior, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PAWN_Enemy_C_TryAssignNextLocalBehavior::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryAssignNextLocalBehavior, CallFunc_GetShouldExplorePointsOfInterest_Result) == 0x000011, "Member 'PAWN_Enemy_C_TryAssignNextLocalBehavior::CallFunc_GetShouldExplorePointsOfInterest_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryAssignNextLocalBehavior, CallFunc_UnregisterLowFiBehaviorEnemy_Result) == 0x000012, "Member 'PAWN_Enemy_C_TryAssignNextLocalBehavior::CallFunc_UnregisterLowFiBehaviorEnemy_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryAssignNextLocalBehavior, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'PAWN_Enemy_C_TryAssignNextLocalBehavior::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryAssignNextLocalBehavior, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PAWN_Enemy_C_TryAssignNextLocalBehavior::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryAssignNextLocalBehavior, K2Node_DynamicCast_AsPatrol_Node) == 0x000028, "Member 'PAWN_Enemy_C_TryAssignNextLocalBehavior::K2Node_DynamicCast_AsPatrol_Node' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryAssignNextLocalBehavior, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'PAWN_Enemy_C_TryAssignNextLocalBehavior::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryAssignNextLocalBehavior, CallFunc_TryClaimNextPointOfInterest_Result) == 0x000031, "Member 'PAWN_Enemy_C_TryAssignNextLocalBehavior::CallFunc_TryClaimNextPointOfInterest_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryStartPointOfInterestCreationTimer
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Enemy_C_TryStartPointOfInterestCreationTimer final
{
public:
	class USpawnedPointOfInterest_C*              PointOfInterestComponent;                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpawnedPointOfInterest_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryStartPointOfInterestCreationTimer) == 0x000008, "Wrong alignment on PAWN_Enemy_C_TryStartPointOfInterestCreationTimer");
static_assert(sizeof(PAWN_Enemy_C_TryStartPointOfInterestCreationTimer) == 0x000038, "Wrong size on PAWN_Enemy_C_TryStartPointOfInterestCreationTimer");
static_assert(offsetof(PAWN_Enemy_C_TryStartPointOfInterestCreationTimer, PointOfInterestComponent) == 0x000000, "Member 'PAWN_Enemy_C_TryStartPointOfInterestCreationTimer::PointOfInterestComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStartPointOfInterestCreationTimer, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_TryStartPointOfInterestCreationTimer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStartPointOfInterestCreationTimer, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_TryStartPointOfInterestCreationTimer::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStartPointOfInterestCreationTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'PAWN_Enemy_C_TryStartPointOfInterestCreationTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStartPointOfInterestCreationTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'PAWN_Enemy_C_TryStartPointOfInterestCreationTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryStartPointOfInterestCreationTimer, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'PAWN_Enemy_C_TryStartPointOfInterestCreationTimer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.EVENT_TryCreatePointOfInterest
// 0x0070 (0x0070 - 0x0000)
struct PAWN_Enemy_C_EVENT_TryCreatePointOfInterest final
{
public:
	class UShapeComponent*                        CallFunc_GetTargetShape_ShapeComponent;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class USpawnedPointOfInterest_C*              CallFunc_AddComponentByClass_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyRigidBodyAwake_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_EVENT_TryCreatePointOfInterest) == 0x000010, "Wrong alignment on PAWN_Enemy_C_EVENT_TryCreatePointOfInterest");
static_assert(sizeof(PAWN_Enemy_C_EVENT_TryCreatePointOfInterest) == 0x000070, "Wrong size on PAWN_Enemy_C_EVENT_TryCreatePointOfInterest");
static_assert(offsetof(PAWN_Enemy_C_EVENT_TryCreatePointOfInterest, CallFunc_GetTargetShape_ShapeComponent) == 0x000000, "Member 'PAWN_Enemy_C_EVENT_TryCreatePointOfInterest::CallFunc_GetTargetShape_ShapeComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_TryCreatePointOfInterest, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_EVENT_TryCreatePointOfInterest::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_TryCreatePointOfInterest, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'PAWN_Enemy_C_EVENT_TryCreatePointOfInterest::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_TryCreatePointOfInterest, CallFunc_AddComponentByClass_ReturnValue) == 0x000050, "Member 'PAWN_Enemy_C_EVENT_TryCreatePointOfInterest::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_TryCreatePointOfInterest, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000058, "Member 'PAWN_Enemy_C_EVENT_TryCreatePointOfInterest::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_TryCreatePointOfInterest, CallFunc_IsAnyRigidBodyAwake_ReturnValue) == 0x000060, "Member 'PAWN_Enemy_C_EVENT_TryCreatePointOfInterest::CallFunc_IsAnyRigidBodyAwake_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_TryCreatePointOfInterest, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'PAWN_Enemy_C_EVENT_TryCreatePointOfInterest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.InitializePointOfInterestAfterDeath
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Enemy_C_InitializePointOfInterestAfterDeath final
{
public:
	class USpawnedPointOfInterest_C*              Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUnscaledBoxExtent_ReturnValue;         // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_InitializePointOfInterestAfterDeath) == 0x000008, "Wrong alignment on PAWN_Enemy_C_InitializePointOfInterestAfterDeath");
static_assert(sizeof(PAWN_Enemy_C_InitializePointOfInterestAfterDeath) == 0x000020, "Wrong size on PAWN_Enemy_C_InitializePointOfInterestAfterDeath");
static_assert(offsetof(PAWN_Enemy_C_InitializePointOfInterestAfterDeath, Component) == 0x000000, "Member 'PAWN_Enemy_C_InitializePointOfInterestAfterDeath::Component' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializePointOfInterestAfterDeath, CallFunc_GetUnscaledBoxExtent_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_InitializePointOfInterestAfterDeath::CallFunc_GetUnscaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializePointOfInterestAfterDeath, CallFunc_BreakVector_X) == 0x000014, "Member 'PAWN_Enemy_C_InitializePointOfInterestAfterDeath::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializePointOfInterestAfterDeath, CallFunc_BreakVector_Y) == 0x000018, "Member 'PAWN_Enemy_C_InitializePointOfInterestAfterDeath::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_InitializePointOfInterestAfterDeath, CallFunc_BreakVector_Z) == 0x00001C, "Member 'PAWN_Enemy_C_InitializePointOfInterestAfterDeath::CallFunc_BreakVector_Z' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.EVENT_OnDelayedStopLogic
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Enemy_C_EVENT_OnDelayedStopLogic final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_DynamicCast_AsAIController;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_EVENT_OnDelayedStopLogic) == 0x000008, "Wrong alignment on PAWN_Enemy_C_EVENT_OnDelayedStopLogic");
static_assert(sizeof(PAWN_Enemy_C_EVENT_OnDelayedStopLogic) == 0x000018, "Wrong size on PAWN_Enemy_C_EVENT_OnDelayedStopLogic");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnDelayedStopLogic, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'PAWN_Enemy_C_EVENT_OnDelayedStopLogic::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnDelayedStopLogic, K2Node_DynamicCast_AsAIController) == 0x000008, "Member 'PAWN_Enemy_C_EVENT_OnDelayedStopLogic::K2Node_DynamicCast_AsAIController' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnDelayedStopLogic, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PAWN_Enemy_C_EVENT_OnDelayedStopLogic::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.EVENT_OnTryCleanupBeforeUnloadLevelCollection
// 0x0014 (0x0014 - 0x0000)
struct PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection final
{
public:
	float                                         CallFunc_GetLastRenderTime_CurrentTime;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLastRenderTime_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection) == 0x000004, "Wrong alignment on PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection");
static_assert(sizeof(PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection) == 0x000014, "Wrong size on PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection, CallFunc_GetLastRenderTime_CurrentTime) == 0x000000, "Member 'PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection::CallFunc_GetLastRenderTime_CurrentTime' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection, CallFunc_GetLastRenderTime_ReturnValue) == 0x000004, "Member 'PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection::CallFunc_GetLastRenderTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000011, "Member 'PAWN_Enemy_C_EVENT_OnTryCleanupBeforeUnloadLevelCollection::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnEnemyRadarScannedStateChanged
// 0x0003 (0x0003 - 0x0000)
struct PAWN_Enemy_C_OnEnemyRadarScannedStateChanged final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasImportantBehavior_Result;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnEnemyRadarScannedStateChanged) == 0x000001, "Wrong alignment on PAWN_Enemy_C_OnEnemyRadarScannedStateChanged");
static_assert(sizeof(PAWN_Enemy_C_OnEnemyRadarScannedStateChanged) == 0x000003, "Wrong size on PAWN_Enemy_C_OnEnemyRadarScannedStateChanged");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyRadarScannedStateChanged, State) == 0x000000, "Member 'PAWN_Enemy_C_OnEnemyRadarScannedStateChanged::State' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyRadarScannedStateChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_OnEnemyRadarScannedStateChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemyRadarScannedStateChanged, CallFunc_HasImportantBehavior_Result) == 0x000002, "Member 'PAWN_Enemy_C_OnEnemyRadarScannedStateChanged::CallFunc_HasImportantBehavior_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetMeshComponentsForTeleport
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Enemy_C_GetMeshComponentsForTeleport final
{
public:
	TArray<class UMeshComponent*>                 MeshComponents;                                    // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UMeshComponent*>                 CallFunc_GetMeshComponentsForTeleport_MeshComponents; // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PAWN_Enemy_C_GetMeshComponentsForTeleport) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetMeshComponentsForTeleport");
static_assert(sizeof(PAWN_Enemy_C_GetMeshComponentsForTeleport) == 0x000020, "Wrong size on PAWN_Enemy_C_GetMeshComponentsForTeleport");
static_assert(offsetof(PAWN_Enemy_C_GetMeshComponentsForTeleport, MeshComponents) == 0x000000, "Member 'PAWN_Enemy_C_GetMeshComponentsForTeleport::MeshComponents' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetMeshComponentsForTeleport, CallFunc_GetMeshComponentsForTeleport_MeshComponents) == 0x000010, "Member 'PAWN_Enemy_C_GetMeshComponentsForTeleport::CallFunc_GetMeshComponentsForTeleport_MeshComponents' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.UpdateCharacterStateForTeleport
// 0x0003 (0x0003 - 0x0000)
struct PAWN_Enemy_C_UpdateCharacterStateForTeleport final
{
public:
	bool                                          ShouldUpdateVisibility;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_UpdateCharacterStateForTeleport) == 0x000001, "Wrong alignment on PAWN_Enemy_C_UpdateCharacterStateForTeleport");
static_assert(sizeof(PAWN_Enemy_C_UpdateCharacterStateForTeleport) == 0x000003, "Wrong size on PAWN_Enemy_C_UpdateCharacterStateForTeleport");
static_assert(offsetof(PAWN_Enemy_C_UpdateCharacterStateForTeleport, ShouldUpdateVisibility) == 0x000000, "Member 'PAWN_Enemy_C_UpdateCharacterStateForTeleport::ShouldUpdateVisibility' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_UpdateCharacterStateForTeleport, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_Enemy_C_UpdateCharacterStateForTeleport::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_UpdateCharacterStateForTeleport, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'PAWN_Enemy_C_UpdateCharacterStateForTeleport::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetDefaultLightEmissiveIntensity
// 0x000C (0x000C - 0x0000)
struct PAWN_Enemy_C_SetDefaultLightEmissiveIntensity final
{
public:
	float                                         Intensity;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TransitionDuration;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetDefaultLightEmissiveIntensity) == 0x000004, "Wrong alignment on PAWN_Enemy_C_SetDefaultLightEmissiveIntensity");
static_assert(sizeof(PAWN_Enemy_C_SetDefaultLightEmissiveIntensity) == 0x00000C, "Wrong size on PAWN_Enemy_C_SetDefaultLightEmissiveIntensity");
static_assert(offsetof(PAWN_Enemy_C_SetDefaultLightEmissiveIntensity, Intensity) == 0x000000, "Member 'PAWN_Enemy_C_SetDefaultLightEmissiveIntensity::Intensity' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDefaultLightEmissiveIntensity, TransitionDuration) == 0x000004, "Member 'PAWN_Enemy_C_SetDefaultLightEmissiveIntensity::TransitionDuration' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDefaultLightEmissiveIntensity, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PAWN_Enemy_C_SetDefaultLightEmissiveIntensity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetDefaultLightEmissiveIntensity, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'PAWN_Enemy_C_SetDefaultLightEmissiveIntensity::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnEnemySpawned
// 0x0318 (0x0318 - 0x0000)
struct PAWN_Enemy_C_OnEnemySpawned final
{
public:
	class APatrolNode_C*                          InitialPatrolNode;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   UniqueLootItem;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          AdjustToFloor;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurrentLocation;                                   // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFindFloorResult                       FloorResult;                                       // 0x0040(0x0094)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue_1;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFindFloorResult                       CallFunc_K2_FindFloor_FloorResult;                 // 0x0124(0x0094)(NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BA[0x2];                                      // 0x01BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F4[0x4];                                      // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x024C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryGenerateLoot_Result;                   // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Base;               // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0300(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GrantItem_Result;                         // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnEnemySpawned) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnEnemySpawned");
static_assert(sizeof(PAWN_Enemy_C_OnEnemySpawned) == 0x000318, "Wrong size on PAWN_Enemy_C_OnEnemySpawned");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, InitialPatrolNode) == 0x000000, "Member 'PAWN_Enemy_C_OnEnemySpawned::InitialPatrolNode' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, UniqueLootItem) == 0x000008, "Member 'PAWN_Enemy_C_OnEnemySpawned::UniqueLootItem' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, AdjustToFloor) == 0x000030, "Member 'PAWN_Enemy_C_OnEnemySpawned::AdjustToFloor' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CurrentLocation) == 0x000034, "Member 'PAWN_Enemy_C_OnEnemySpawned::CurrentLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, FloorResult) == 0x000040, "Member 'PAWN_Enemy_C_OnEnemySpawned::FloorResult' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_Vector_Up_ReturnValue) == 0x0000D4, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E0, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_Vector_Up_ReturnValue_1) == 0x0000EC, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_Vector_Up_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F8, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0000FC, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000100, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00010C, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_K2_FindFloor_FloorResult) == 0x000124, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_K2_FindFloor_FloorResult' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_bBlockingHit) == 0x0001B8, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001B9, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_Time) == 0x0001BC, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_Distance) == 0x0001C0, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_Location) == 0x0001C4, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_ImpactPoint) == 0x0001D0, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_Normal) == 0x0001DC, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_ImpactNormal) == 0x0001E8, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_PhysMat) == 0x0001F8, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_HitActor) == 0x000200, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_HitComponent) == 0x000208, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_HitBoneName) == 0x000210, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_HitItem) == 0x000218, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_ElementIndex) == 0x00021C, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_FaceIndex) == 0x000220, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_TraceStart) == 0x000224, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_BreakHitResult_TraceEnd) == 0x000230, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x00023C, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000240, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x00024C, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0002D4, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_GetInventoryComponent_Inventory) == 0x0002D8, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0002E0, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_TryGenerateLoot_Result) == 0x0002E8, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_TryGenerateLoot_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, K2Node_ClassDynamicCast_AsITEM_Base) == 0x0002F0, "Member 'PAWN_Enemy_C_OnEnemySpawned::K2Node_ClassDynamicCast_AsITEM_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, K2Node_ClassDynamicCast_bSuccess) == 0x0002F8, "Member 'PAWN_Enemy_C_OnEnemySpawned::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000300, "Member 'PAWN_Enemy_C_OnEnemySpawned::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnEnemySpawned, CallFunc_GrantItem_Result) == 0x000310, "Member 'PAWN_Enemy_C_OnEnemySpawned::CallFunc_GrantItem_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsCharacterVisible
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_IsCharacterVisible final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterVisible_Result;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsCharacterVisible) == 0x000001, "Wrong alignment on PAWN_Enemy_C_IsCharacterVisible");
static_assert(sizeof(PAWN_Enemy_C_IsCharacterVisible) == 0x000002, "Wrong size on PAWN_Enemy_C_IsCharacterVisible");
static_assert(offsetof(PAWN_Enemy_C_IsCharacterVisible, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsCharacterVisible::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsCharacterVisible, CallFunc_IsCharacterVisible_Result) == 0x000001, "Member 'PAWN_Enemy_C_IsCharacterVisible::CallFunc_IsCharacterVisible_Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnCharacterVisibilityChanged
// 0x0014 (0x0014 - 0x0000)
struct PAWN_Enemy_C_OnCharacterVisibilityChanged final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnCharacterVisibilityChanged) == 0x000004, "Wrong alignment on PAWN_Enemy_C_OnCharacterVisibilityChanged");
static_assert(sizeof(PAWN_Enemy_C_OnCharacterVisibilityChanged) == 0x000014, "Wrong size on PAWN_Enemy_C_OnCharacterVisibilityChanged");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterVisibilityChanged, VisibilityState) == 0x000000, "Member 'PAWN_Enemy_C_OnCharacterVisibilityChanged::VisibilityState' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterVisibilityChanged, Temp_bool_Variable) == 0x000001, "Member 'PAWN_Enemy_C_OnCharacterVisibilityChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterVisibilityChanged, Temp_float_Variable) == 0x000004, "Member 'PAWN_Enemy_C_OnCharacterVisibilityChanged::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterVisibilityChanged, Temp_float_Variable_1) == 0x000008, "Member 'PAWN_Enemy_C_OnCharacterVisibilityChanged::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterVisibilityChanged, K2Node_Select_Default) == 0x00000C, "Member 'PAWN_Enemy_C_OnCharacterVisibilityChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterVisibilityChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_OnCharacterVisibilityChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnCharacterVisibilityChanged, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'PAWN_Enemy_C_OnCharacterVisibilityChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.OnSkillTargetChanged
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Enemy_C_OnSkillTargetChanged final
{
public:
	class UVoxelNavAgentComponent*                TargetNavAgent;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           TargetCharacter;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVoxelNavAgentComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Can_Move_Automatically_Result;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopPeriodicPathProximityUpdate_ReturnValue; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartPeriodicPathProximityUpdate_ReturnValue; // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_OnSkillTargetChanged) == 0x000008, "Wrong alignment on PAWN_Enemy_C_OnSkillTargetChanged");
static_assert(sizeof(PAWN_Enemy_C_OnSkillTargetChanged) == 0x000038, "Wrong size on PAWN_Enemy_C_OnSkillTargetChanged");
static_assert(offsetof(PAWN_Enemy_C_OnSkillTargetChanged, TargetNavAgent) == 0x000000, "Member 'PAWN_Enemy_C_OnSkillTargetChanged::TargetNavAgent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnSkillTargetChanged, TargetCharacter) == 0x000008, "Member 'PAWN_Enemy_C_OnSkillTargetChanged::TargetCharacter' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnSkillTargetChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'PAWN_Enemy_C_OnSkillTargetChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnSkillTargetChanged, CallFunc_GetTargetCharacter_Character) == 0x000018, "Member 'PAWN_Enemy_C_OnSkillTargetChanged::CallFunc_GetTargetCharacter_Character' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnSkillTargetChanged, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'PAWN_Enemy_C_OnSkillTargetChanged::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnSkillTargetChanged, CallFunc_GetTargetCharacter_Character_1) == 0x000028, "Member 'PAWN_Enemy_C_OnSkillTargetChanged::CallFunc_GetTargetCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnSkillTargetChanged, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'PAWN_Enemy_C_OnSkillTargetChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnSkillTargetChanged, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'PAWN_Enemy_C_OnSkillTargetChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnSkillTargetChanged, CallFunc_Can_Move_Automatically_Result) == 0x000032, "Member 'PAWN_Enemy_C_OnSkillTargetChanged::CallFunc_Can_Move_Automatically_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnSkillTargetChanged, CallFunc_IsValid_ReturnValue_2) == 0x000033, "Member 'PAWN_Enemy_C_OnSkillTargetChanged::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnSkillTargetChanged, CallFunc_StopPeriodicPathProximityUpdate_ReturnValue) == 0x000034, "Member 'PAWN_Enemy_C_OnSkillTargetChanged::CallFunc_StopPeriodicPathProximityUpdate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_OnSkillTargetChanged, CallFunc_StartPeriodicPathProximityUpdate_ReturnValue) == 0x000035, "Member 'PAWN_Enemy_C_OnSkillTargetChanged::CallFunc_StartPeriodicPathProximityUpdate_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetLocalVisionRotation
// 0x000C (0x000C - 0x0000)
struct PAWN_Enemy_C_GetLocalVisionRotation final
{
public:
	struct FRotator                               Result;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_GetLocalVisionRotation) == 0x000004, "Wrong alignment on PAWN_Enemy_C_GetLocalVisionRotation");
static_assert(sizeof(PAWN_Enemy_C_GetLocalVisionRotation) == 0x00000C, "Wrong size on PAWN_Enemy_C_GetLocalVisionRotation");
static_assert(offsetof(PAWN_Enemy_C_GetLocalVisionRotation, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetLocalVisionRotation::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryUpdateSpawnLocation
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Enemy_C_TryUpdateSpawnLocation final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CurrentLocation;                                   // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetShockAgentLocation_Location;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryUpdateSpawnLocation) == 0x000004, "Wrong alignment on PAWN_Enemy_C_TryUpdateSpawnLocation");
static_assert(sizeof(PAWN_Enemy_C_TryUpdateSpawnLocation) == 0x000020, "Wrong size on PAWN_Enemy_C_TryUpdateSpawnLocation");
static_assert(offsetof(PAWN_Enemy_C_TryUpdateSpawnLocation, Result) == 0x000000, "Member 'PAWN_Enemy_C_TryUpdateSpawnLocation::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryUpdateSpawnLocation, CurrentLocation) == 0x000004, "Member 'PAWN_Enemy_C_TryUpdateSpawnLocation::CurrentLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryUpdateSpawnLocation, CallFunc_GetShockAgentLocation_Location) == 0x000010, "Member 'PAWN_Enemy_C_TryUpdateSpawnLocation::CallFunc_GetShockAgentLocation_Location' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryUpdateSpawnLocation, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x00001C, "Member 'PAWN_Enemy_C_TryUpdateSpawnLocation::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsRealspaceCharacter
// 0x0058 (0x0058 - 0x0000)
struct PAWN_Enemy_C_IsRealspaceCharacter final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_EnemyStats                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsRealspaceCharacter) == 0x000008, "Wrong alignment on PAWN_Enemy_C_IsRealspaceCharacter");
static_assert(sizeof(PAWN_Enemy_C_IsRealspaceCharacter) == 0x000058, "Wrong size on PAWN_Enemy_C_IsRealspaceCharacter");
static_assert(offsetof(PAWN_Enemy_C_IsRealspaceCharacter, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsRealspaceCharacter::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsRealspaceCharacter, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'PAWN_Enemy_C_IsRealspaceCharacter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsRealspaceCharacter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'PAWN_Enemy_C_IsRealspaceCharacter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsRealspaceCharacter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000051, "Member 'PAWN_Enemy_C_IsRealspaceCharacter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetInteractBroken
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Enemy_C_GetInteractBroken final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BrokenMessage;                                     // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(PAWN_Enemy_C_GetInteractBroken) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetInteractBroken");
static_assert(sizeof(PAWN_Enemy_C_GetInteractBroken) == 0x000020, "Wrong size on PAWN_Enemy_C_GetInteractBroken");
static_assert(offsetof(PAWN_Enemy_C_GetInteractBroken, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetInteractBroken::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetInteractBroken, BrokenMessage) == 0x000008, "Member 'PAWN_Enemy_C_GetInteractBroken::BrokenMessage' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetInteractLocked
// 0x0028 (0x0028 - 0x0000)
struct PAWN_Enemy_C_GetInteractLocked final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LockMessage;                                       // 0x0010(0x0018)(Parm, OutParm)
};
static_assert(alignof(PAWN_Enemy_C_GetInteractLocked) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetInteractLocked");
static_assert(sizeof(PAWN_Enemy_C_GetInteractLocked) == 0x000028, "Wrong size on PAWN_Enemy_C_GetInteractLocked");
static_assert(offsetof(PAWN_Enemy_C_GetInteractLocked, SourceActor) == 0x000000, "Member 'PAWN_Enemy_C_GetInteractLocked::SourceActor' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetInteractLocked, Result) == 0x000008, "Member 'PAWN_Enemy_C_GetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetInteractLocked, LockMessage) == 0x000010, "Member 'PAWN_Enemy_C_GetInteractLocked::LockMessage' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetInteractBusy
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Enemy_C_GetInteractBusy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BusyMessage;                                       // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(PAWN_Enemy_C_GetInteractBusy) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetInteractBusy");
static_assert(sizeof(PAWN_Enemy_C_GetInteractBusy) == 0x000020, "Wrong size on PAWN_Enemy_C_GetInteractBusy");
static_assert(offsetof(PAWN_Enemy_C_GetInteractBusy, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetInteractBusy::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetInteractBusy, BusyMessage) == 0x000008, "Member 'PAWN_Enemy_C_GetInteractBusy::BusyMessage' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetInteractLocked
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_SetInteractLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetInteractLocked) == 0x000001, "Wrong alignment on PAWN_Enemy_C_SetInteractLocked");
static_assert(sizeof(PAWN_Enemy_C_SetInteractLocked) == 0x000002, "Wrong size on PAWN_Enemy_C_SetInteractLocked");
static_assert(offsetof(PAWN_Enemy_C_SetInteractLocked, Locked) == 0x000000, "Member 'PAWN_Enemy_C_SetInteractLocked::Locked' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetInteractLocked, Result) == 0x000001, "Member 'PAWN_Enemy_C_SetInteractLocked::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.StopChanneling
// 0x0048 (0x0048 - 0x0000)
struct PAWN_Enemy_C_StopChanneling final
{
public:
	class AActor*                                 NewChannelingInteract;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Implant_C*                 HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChannelingWithInteractable_Result;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldCloseLootWindow_Result;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_StopChanneling) == 0x000008, "Wrong alignment on PAWN_Enemy_C_StopChanneling");
static_assert(sizeof(PAWN_Enemy_C_StopChanneling) == 0x000048, "Wrong size on PAWN_Enemy_C_StopChanneling");
static_assert(offsetof(PAWN_Enemy_C_StopChanneling, NewChannelingInteract) == 0x000000, "Member 'PAWN_Enemy_C_StopChanneling::NewChannelingInteract' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_StopChanneling, Result) == 0x000008, "Member 'PAWN_Enemy_C_StopChanneling::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_StopChanneling, HackerPawn) == 0x000010, "Member 'PAWN_Enemy_C_StopChanneling::HackerPawn' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_StopChanneling, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PAWN_Enemy_C_StopChanneling::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_StopChanneling, CallFunc_GetNeuralHUD_Result) == 0x000020, "Member 'PAWN_Enemy_C_StopChanneling::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_StopChanneling, CallFunc_IsChannelingWithInteractable_Result) == 0x000028, "Member 'PAWN_Enemy_C_StopChanneling::CallFunc_IsChannelingWithInteractable_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_StopChanneling, CallFunc_ShouldCloseLootWindow_Result) == 0x000029, "Member 'PAWN_Enemy_C_StopChanneling::CallFunc_ShouldCloseLootWindow_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_StopChanneling, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000030, "Member 'PAWN_Enemy_C_StopChanneling::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_StopChanneling, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000038, "Member 'PAWN_Enemy_C_StopChanneling::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_StopChanneling, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'PAWN_Enemy_C_StopChanneling::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetTargetShape
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Enemy_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        CallFunc_GetEnemyScanShape_ShapeComponent;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_GetTargetShape) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetTargetShape");
static_assert(sizeof(PAWN_Enemy_C_GetTargetShape) == 0x000020, "Wrong size on PAWN_Enemy_C_GetTargetShape");
static_assert(offsetof(PAWN_Enemy_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'PAWN_Enemy_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'PAWN_Enemy_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetTargetShape, CallFunc_GetEnemyScanShape_ShapeComponent) == 0x000010, "Member 'PAWN_Enemy_C_GetTargetShape::CallFunc_GetEnemyScanShape_ShapeComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetTargetShape, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'PAWN_Enemy_C_GetTargetShape::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_GetTargetShape, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'PAWN_Enemy_C_GetTargetShape::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryInteract
// 0x00F8 (0x00F8 - 0x0000)
struct PAWN_Enemy_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      Inventory;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 HackerPawn;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0048(0x0020)(HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0078(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x0098(0x0020)(HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x00C8(0x0020)(HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChannelingWithInteractable_Result;      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryInteract) == 0x000008, "Wrong alignment on PAWN_Enemy_C_TryInteract");
static_assert(sizeof(PAWN_Enemy_C_TryInteract) == 0x0000F8, "Wrong size on PAWN_Enemy_C_TryInteract");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, SourceActor) == 0x000000, "Member 'PAWN_Enemy_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'PAWN_Enemy_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, InteractionType) == 0x000010, "Member 'PAWN_Enemy_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, InteractResults) == 0x000018, "Member 'PAWN_Enemy_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, Inventory) == 0x000038, "Member 'PAWN_Enemy_C_TryInteract::Inventory' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, HackerPawn) == 0x000040, "Member 'PAWN_Enemy_C_TryInteract::HackerPawn' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000048, "Member 'PAWN_Enemy_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000068, "Member 'PAWN_Enemy_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'PAWN_Enemy_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000078, "Member 'PAWN_Enemy_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x000098, "Member 'PAWN_Enemy_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, CallFunc_GetInventoryComponent_Inventory) == 0x0000B8, "Member 'PAWN_Enemy_C_TryInteract::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'PAWN_Enemy_C_TryInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x0000C8, "Member 'PAWN_Enemy_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, CallFunc_GetNeuralHUD_Result) == 0x0000E8, "Member 'PAWN_Enemy_C_TryInteract::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, CallFunc_IsChannelingWithInteractable_Result) == 0x0000F0, "Member 'PAWN_Enemy_C_TryInteract::CallFunc_IsChannelingWithInteractable_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x0000F1, "Member 'PAWN_Enemy_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryReceiveItem
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Enemy_C_TryReceiveItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryReceiveItem) == 0x000008, "Wrong alignment on PAWN_Enemy_C_TryReceiveItem");
static_assert(sizeof(PAWN_Enemy_C_TryReceiveItem) == 0x000010, "Wrong size on PAWN_Enemy_C_TryReceiveItem");
static_assert(offsetof(PAWN_Enemy_C_TryReceiveItem, Item) == 0x000000, "Member 'PAWN_Enemy_C_TryReceiveItem::Item' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryReceiveItem, Result) == 0x000008, "Member 'PAWN_Enemy_C_TryReceiveItem::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsHiddenInteractablePrimitive
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Enemy_C_IsHiddenInteractablePrimitive final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsHiddenInteractablePrimitive) == 0x000008, "Wrong alignment on PAWN_Enemy_C_IsHiddenInteractablePrimitive");
static_assert(sizeof(PAWN_Enemy_C_IsHiddenInteractablePrimitive) == 0x000018, "Wrong size on PAWN_Enemy_C_IsHiddenInteractablePrimitive");
static_assert(offsetof(PAWN_Enemy_C_IsHiddenInteractablePrimitive, Character) == 0x000000, "Member 'PAWN_Enemy_C_IsHiddenInteractablePrimitive::Character' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsHiddenInteractablePrimitive, CursorPrimitive) == 0x000008, "Member 'PAWN_Enemy_C_IsHiddenInteractablePrimitive::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_IsHiddenInteractablePrimitive, Result) == 0x000010, "Member 'PAWN_Enemy_C_IsHiddenInteractablePrimitive::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.ShouldIgnoreInteractRange
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_ShouldIgnoreInteractRange final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_ShouldIgnoreInteractRange) == 0x000001, "Wrong alignment on PAWN_Enemy_C_ShouldIgnoreInteractRange");
static_assert(sizeof(PAWN_Enemy_C_ShouldIgnoreInteractRange) == 0x000001, "Wrong size on PAWN_Enemy_C_ShouldIgnoreInteractRange");
static_assert(offsetof(PAWN_Enemy_C_ShouldIgnoreInteractRange, Result) == 0x000000, "Member 'PAWN_Enemy_C_ShouldIgnoreInteractRange::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.CanReceiveItem
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Enemy_C_CanReceiveItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_CanReceiveItem) == 0x000008, "Wrong alignment on PAWN_Enemy_C_CanReceiveItem");
static_assert(sizeof(PAWN_Enemy_C_CanReceiveItem) == 0x000010, "Wrong size on PAWN_Enemy_C_CanReceiveItem");
static_assert(offsetof(PAWN_Enemy_C_CanReceiveItem, Item) == 0x000000, "Member 'PAWN_Enemy_C_CanReceiveItem::Item' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_CanReceiveItem, Result) == 0x000008, "Member 'PAWN_Enemy_C_CanReceiveItem::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.IsInteractActivated
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_IsInteractActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_IsInteractActivated) == 0x000001, "Wrong alignment on PAWN_Enemy_C_IsInteractActivated");
static_assert(sizeof(PAWN_Enemy_C_IsInteractActivated) == 0x000001, "Wrong size on PAWN_Enemy_C_IsInteractActivated");
static_assert(offsetof(PAWN_Enemy_C_IsInteractActivated, Result) == 0x000000, "Member 'PAWN_Enemy_C_IsInteractActivated::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetInteractDestroyed
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_GetInteractDestroyed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_GetInteractDestroyed) == 0x000001, "Wrong alignment on PAWN_Enemy_C_GetInteractDestroyed");
static_assert(sizeof(PAWN_Enemy_C_GetInteractDestroyed) == 0x000001, "Wrong size on PAWN_Enemy_C_GetInteractDestroyed");
static_assert(offsetof(PAWN_Enemy_C_GetInteractDestroyed, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetInteractDestroyed::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.CanInteractBeDestroyed
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_CanInteractBeDestroyed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_CanInteractBeDestroyed) == 0x000001, "Wrong alignment on PAWN_Enemy_C_CanInteractBeDestroyed");
static_assert(sizeof(PAWN_Enemy_C_CanInteractBeDestroyed) == 0x000001, "Wrong size on PAWN_Enemy_C_CanInteractBeDestroyed");
static_assert(offsetof(PAWN_Enemy_C_CanInteractBeDestroyed, Result) == 0x000000, "Member 'PAWN_Enemy_C_CanInteractBeDestroyed::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.SetInteractPowered
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_SetInteractPowered final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_SetInteractPowered) == 0x000001, "Wrong alignment on PAWN_Enemy_C_SetInteractPowered");
static_assert(sizeof(PAWN_Enemy_C_SetInteractPowered) == 0x000002, "Wrong size on PAWN_Enemy_C_SetInteractPowered");
static_assert(offsetof(PAWN_Enemy_C_SetInteractPowered, State) == 0x000000, "Member 'PAWN_Enemy_C_SetInteractPowered::State' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_SetInteractPowered, Result) == 0x000001, "Member 'PAWN_Enemy_C_SetInteractPowered::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.CanModifyInteractPower
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Enemy_C_CanModifyInteractPower final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_CanModifyInteractPower) == 0x000001, "Wrong alignment on PAWN_Enemy_C_CanModifyInteractPower");
static_assert(sizeof(PAWN_Enemy_C_CanModifyInteractPower) == 0x000001, "Wrong size on PAWN_Enemy_C_CanModifyInteractPower");
static_assert(offsetof(PAWN_Enemy_C_CanModifyInteractPower, Result) == 0x000000, "Member 'PAWN_Enemy_C_CanModifyInteractPower::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetChannelingHoldDuration
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Enemy_C_GetChannelingHoldDuration final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Enemy_C_GetChannelingHoldDuration) == 0x000004, "Wrong alignment on PAWN_Enemy_C_GetChannelingHoldDuration");
static_assert(sizeof(PAWN_Enemy_C_GetChannelingHoldDuration) == 0x000004, "Wrong size on PAWN_Enemy_C_GetChannelingHoldDuration");
static_assert(offsetof(PAWN_Enemy_C_GetChannelingHoldDuration, Result) == 0x000000, "Member 'PAWN_Enemy_C_GetChannelingHoldDuration::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.FinishedChannelingHoldInteraction
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Enemy_C_FinishedChannelingHoldInteraction final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_FinishedChannelingHoldInteraction) == 0x000008, "Wrong alignment on PAWN_Enemy_C_FinishedChannelingHoldInteraction");
static_assert(sizeof(PAWN_Enemy_C_FinishedChannelingHoldInteraction) == 0x000010, "Wrong size on PAWN_Enemy_C_FinishedChannelingHoldInteraction");
static_assert(offsetof(PAWN_Enemy_C_FinishedChannelingHoldInteraction, Character) == 0x000000, "Member 'PAWN_Enemy_C_FinishedChannelingHoldInteraction::Character' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_FinishedChannelingHoldInteraction, Result) == 0x000008, "Member 'PAWN_Enemy_C_FinishedChannelingHoldInteraction::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.TryDetachInteract
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Enemy_C_TryDetachInteract final
{
public:
	bool                                          SimulatePhysics;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Enemy_C_TryDetachInteract) == 0x000001, "Wrong alignment on PAWN_Enemy_C_TryDetachInteract");
static_assert(sizeof(PAWN_Enemy_C_TryDetachInteract) == 0x000002, "Wrong size on PAWN_Enemy_C_TryDetachInteract");
static_assert(offsetof(PAWN_Enemy_C_TryDetachInteract, SimulatePhysics) == 0x000000, "Member 'PAWN_Enemy_C_TryDetachInteract::SimulatePhysics' has a wrong offset!");
static_assert(offsetof(PAWN_Enemy_C_TryDetachInteract, Result) == 0x000001, "Member 'PAWN_Enemy_C_TryDetachInteract::Result' has a wrong offset!");

// Function PAWN_Enemy.PAWN_Enemy_C.GetEnemyDisplayName
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Enemy_C_GetEnemyDisplayName final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(PAWN_Enemy_C_GetEnemyDisplayName) == 0x000008, "Wrong alignment on PAWN_Enemy_C_GetEnemyDisplayName");
static_assert(sizeof(PAWN_Enemy_C_GetEnemyDisplayName) == 0x000018, "Wrong size on PAWN_Enemy_C_GetEnemyDisplayName");
static_assert(offsetof(PAWN_Enemy_C_GetEnemyDisplayName, Text) == 0x000000, "Member 'PAWN_Enemy_C_GetEnemyDisplayName::Text' has a wrong offset!");

}


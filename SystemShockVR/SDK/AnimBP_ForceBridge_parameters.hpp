#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_ForceBridge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_ForceBridge.AnimBP_ForceBridge_C.ExecuteUbergraph_AnimBP_ForceBridge
// 0x0008 (0x0008 - 0x0000)
struct AnimBP_ForceBridge_C_ExecuteUbergraph_AnimBP_ForceBridge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_ForceBridge_C_ExecuteUbergraph_AnimBP_ForceBridge) == 0x000004, "Wrong alignment on AnimBP_ForceBridge_C_ExecuteUbergraph_AnimBP_ForceBridge");
static_assert(sizeof(AnimBP_ForceBridge_C_ExecuteUbergraph_AnimBP_ForceBridge) == 0x000008, "Wrong size on AnimBP_ForceBridge_C_ExecuteUbergraph_AnimBP_ForceBridge");
static_assert(offsetof(AnimBP_ForceBridge_C_ExecuteUbergraph_AnimBP_ForceBridge, EntryPoint) == 0x000000, "Member 'AnimBP_ForceBridge_C_ExecuteUbergraph_AnimBP_ForceBridge::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_ExecuteUbergraph_AnimBP_ForceBridge, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'AnimBP_ForceBridge_C_ExecuteUbergraph_AnimBP_ForceBridge::K2Node_Event_DeltaTimeX' has a wrong offset!");

// Function AnimBP_ForceBridge.AnimBP_ForceBridge_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AnimBP_ForceBridge_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_ForceBridge_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on AnimBP_ForceBridge_C_BlueprintUpdateAnimation");
static_assert(sizeof(AnimBP_ForceBridge_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AnimBP_ForceBridge_C_BlueprintUpdateAnimation");
static_assert(offsetof(AnimBP_ForceBridge_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AnimBP_ForceBridge_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AnimBP_ForceBridge.AnimBP_ForceBridge_C.StartForceBridgeTransition
// 0x000C (0x000C - 0x0000)
struct AnimBP_ForceBridge_C_StartForceBridgeTransition final
{
public:
	bool                                          Extended;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_ForceBridge_C_StartForceBridgeTransition) == 0x000004, "Wrong alignment on AnimBP_ForceBridge_C_StartForceBridgeTransition");
static_assert(sizeof(AnimBP_ForceBridge_C_StartForceBridgeTransition) == 0x00000C, "Wrong size on AnimBP_ForceBridge_C_StartForceBridgeTransition");
static_assert(offsetof(AnimBP_ForceBridge_C_StartForceBridgeTransition, Extended) == 0x000000, "Member 'AnimBP_ForceBridge_C_StartForceBridgeTransition::Extended' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_StartForceBridgeTransition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'AnimBP_ForceBridge_C_StartForceBridgeTransition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_StartForceBridgeTransition, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000008, "Member 'AnimBP_ForceBridge_C_StartForceBridgeTransition::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function AnimBP_ForceBridge.AnimBP_ForceBridge_C.ResumeForceBridgeTransition
// 0x000C (0x000C - 0x0000)
struct AnimBP_ForceBridge_C_ResumeForceBridgeTransition final
{
public:
	bool                                          Extended;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartTimeOffset;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_ForceBridge_C_ResumeForceBridgeTransition) == 0x000004, "Wrong alignment on AnimBP_ForceBridge_C_ResumeForceBridgeTransition");
static_assert(sizeof(AnimBP_ForceBridge_C_ResumeForceBridgeTransition) == 0x00000C, "Wrong size on AnimBP_ForceBridge_C_ResumeForceBridgeTransition");
static_assert(offsetof(AnimBP_ForceBridge_C_ResumeForceBridgeTransition, Extended) == 0x000000, "Member 'AnimBP_ForceBridge_C_ResumeForceBridgeTransition::Extended' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_ResumeForceBridgeTransition, StartTimeOffset) == 0x000004, "Member 'AnimBP_ForceBridge_C_ResumeForceBridgeTransition::StartTimeOffset' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_ResumeForceBridgeTransition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'AnimBP_ForceBridge_C_ResumeForceBridgeTransition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function AnimBP_ForceBridge.AnimBP_ForceBridge_C.SetForceBridgeExtended
// 0x0001 (0x0001 - 0x0000)
struct AnimBP_ForceBridge_C_SetForceBridgeExtended final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_ForceBridge_C_SetForceBridgeExtended) == 0x000001, "Wrong alignment on AnimBP_ForceBridge_C_SetForceBridgeExtended");
static_assert(sizeof(AnimBP_ForceBridge_C_SetForceBridgeExtended) == 0x000001, "Wrong size on AnimBP_ForceBridge_C_SetForceBridgeExtended");
static_assert(offsetof(AnimBP_ForceBridge_C_SetForceBridgeExtended, State) == 0x000000, "Member 'AnimBP_ForceBridge_C_SetForceBridgeExtended::State' has a wrong offset!");

// Function AnimBP_ForceBridge.AnimBP_ForceBridge_C.UpdateGeneratorRotation
// 0x0054 (0x0054 - 0x0000)
struct AnimBP_ForceBridge_C_UpdateGeneratorRotation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RotationScale;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_ForceBridge_C_UpdateGeneratorRotation) == 0x000004, "Wrong alignment on AnimBP_ForceBridge_C_UpdateGeneratorRotation");
static_assert(sizeof(AnimBP_ForceBridge_C_UpdateGeneratorRotation) == 0x000054, "Wrong size on AnimBP_ForceBridge_C_UpdateGeneratorRotation");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, DeltaTime) == 0x000000, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::DeltaTime' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, RotationScale) == 0x000004, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::RotationScale' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, Temp_bool_Variable) == 0x000008, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_MakeRotator_ReturnValue_1) == 0x00001C, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000028, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00002C, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000030, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, K2Node_Select_Default) == 0x000034, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_Less_FloatFloat_ReturnValue) == 0x000038, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_Ease_ReturnValue) == 0x00003C, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_BooleanOR_ReturnValue) == 0x000040, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_ForceBridge_C_UpdateGeneratorRotation, CallFunc_FMin_ReturnValue) == 0x000050, "Member 'AnimBP_ForceBridge_C_UpdateGeneratorRotation::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function AnimBP_ForceBridge.AnimBP_ForceBridge_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_ForceBridge_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBP_ForceBridge_C_AnimGraph) == 0x000008, "Wrong alignment on AnimBP_ForceBridge_C_AnimGraph");
static_assert(sizeof(AnimBP_ForceBridge_C_AnimGraph) == 0x000010, "Wrong size on AnimBP_ForceBridge_C_AnimGraph");
static_assert(offsetof(AnimBP_ForceBridge_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AnimBP_ForceBridge_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}


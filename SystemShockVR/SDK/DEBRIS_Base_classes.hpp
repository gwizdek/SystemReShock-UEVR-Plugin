#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DEBRIS_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass DEBRIS_Base.DEBRIS_Base_C
// 0x0030 (0x0260 - 0x0230)
class ADEBRIS_Base_C : public AStaticMeshActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0230(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_CullableNavModifier_C*            COMP_CullableNavModifier;                          // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Descriptor_C*                     COMP_Descriptor;                                   // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_PhysicsImpactHandler_C*           COMP_PhysicsImpactHandler;                         // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TeleportTimerHandle;                               // 0x0250(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CollisionTimerHandle;                              // 0x0258(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_DEBRIS_Base(int32 EntryPoint);
	void BndEvt__DEBRIS_Base_COMP_CullableNavModifier_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void ReceiveBeginPlay();
	void IsTeleporting(bool* Result);
	void CanTeleportDebris(bool* Result);
	void UpdateDebrisVisibility(bool VisibilityState);
	void TryTeleportDebris(const struct FVector& Location, const struct FRotator& Rotation, float MaterializeDuration, class USoundCue* SoundCue, class UNiagaraSystem* TeleportFX, bool* Result);
	void EVENT_OnFinishedMaterializingFromTeleport();
	void IgnorePhysicsBodyCollisionTemporarily(float Duration);
	void GetDebrisMeshComponent(class UStaticMeshComponent** Result);
	void EVENT_EndIgnoreCollision();
	bool ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0);
	bool ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms);
	bool ReceivePendingCharacterVelocity(const struct FVector& Velocity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DEBRIS_Base_C">();
	}
	static class ADEBRIS_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ADEBRIS_Base_C>();
	}
};
static_assert(alignof(ADEBRIS_Base_C) == 0x000008, "Wrong alignment on ADEBRIS_Base_C");
static_assert(sizeof(ADEBRIS_Base_C) == 0x000260, "Wrong size on ADEBRIS_Base_C");
static_assert(offsetof(ADEBRIS_Base_C, UberGraphFrame) == 0x000230, "Member 'ADEBRIS_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ADEBRIS_Base_C, COMP_CullableNavModifier) == 0x000238, "Member 'ADEBRIS_Base_C::COMP_CullableNavModifier' has a wrong offset!");
static_assert(offsetof(ADEBRIS_Base_C, COMP_Descriptor) == 0x000240, "Member 'ADEBRIS_Base_C::COMP_Descriptor' has a wrong offset!");
static_assert(offsetof(ADEBRIS_Base_C, COMP_PhysicsImpactHandler) == 0x000248, "Member 'ADEBRIS_Base_C::COMP_PhysicsImpactHandler' has a wrong offset!");
static_assert(offsetof(ADEBRIS_Base_C, TeleportTimerHandle) == 0x000250, "Member 'ADEBRIS_Base_C::TeleportTimerHandle' has a wrong offset!");
static_assert(offsetof(ADEBRIS_Base_C, CollisionTimerHandle) == 0x000258, "Member 'ADEBRIS_Base_C::CollisionTimerHandle' has a wrong offset!");

}


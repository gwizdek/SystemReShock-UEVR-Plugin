#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PROJECTILE_IceDrill

#include "Basic.hpp"

#include "PROJECTILE_Cyberspace_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PROJECTILE_IceDrill.PROJECTILE_IceDrill_C
// 0x0018 (0x03B0 - 0x0398)
class APROJECTILE_IceDrill_C final : public APROJECTILE_Cyberspace_Base_C
{
public:
	class UAudioComponent*                        Audio_IceDrill_Loop;                               // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_IceDrill;                                       // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LockOnActor;                                       // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetLockOnActor(class AActor* Actor);
	void UpdateDrillRotation(float DeltaSeconds);
	void IncrementalPositionUpdate(float DeltaTime, bool* Result);
	void ApplyDamageMod(class UAttribManagerComponent* AttribManager, class UOBJ_ImpactData_C* ImpactData, float FrameHitDeltaTime, struct FAttribDamageInstance* DamageInstance, class UAttribMod** DamageMod);
	void DestroyProjectile(const struct FVector& ImpactNormal);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PROJECTILE_IceDrill_C">();
	}
	static class APROJECTILE_IceDrill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APROJECTILE_IceDrill_C>();
	}
};
static_assert(alignof(APROJECTILE_IceDrill_C) == 0x000008, "Wrong alignment on APROJECTILE_IceDrill_C");
static_assert(sizeof(APROJECTILE_IceDrill_C) == 0x0003B0, "Wrong size on APROJECTILE_IceDrill_C");
static_assert(offsetof(APROJECTILE_IceDrill_C, Audio_IceDrill_Loop) == 0x000398, "Member 'APROJECTILE_IceDrill_C::Audio_IceDrill_Loop' has a wrong offset!");
static_assert(offsetof(APROJECTILE_IceDrill_C, NS_IceDrill) == 0x0003A0, "Member 'APROJECTILE_IceDrill_C::NS_IceDrill' has a wrong offset!");
static_assert(offsetof(APROJECTILE_IceDrill_C, LockOnActor) == 0x0003A8, "Member 'APROJECTILE_IceDrill_C::LockOnActor' has a wrong offset!");

}


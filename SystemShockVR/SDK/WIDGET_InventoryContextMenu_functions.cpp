#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_InventoryContextMenu

#include "Basic.hpp"

#include "WIDGET_InventoryContextMenu_classes.hpp"
#include "WIDGET_InventoryContextMenu_parameters.hpp"


namespace SDK
{

// Function WIDGET_InventoryContextMenu.WIDGET_InventoryContextMenu_C.InitializeInventoryContextMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWIDGET_PlayerHUD_C*              HUDWidget_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_InventoryContextMenu_C::InitializeInventoryContextMenu(class UWIDGET_PlayerHUD_C* HUDWidget_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_InventoryContextMenu_C", "InitializeInventoryContextMenu");

	Params::WIDGET_InventoryContextMenu_C_InitializeInventoryContextMenu Parms{};

	Parms.HUDWidget_0 = HUDWidget_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_InventoryContextMenu.WIDGET_InventoryContextMenu_C.SetInventoryContextMenuEnabled
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Enabled                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D                        MousePosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInventoryBag_C*                  ItemBag                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BagSlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWIDGET_InventoryPanel_C*         InventoryPanel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_InventoryContextMenu_C::SetInventoryContextMenuEnabled(bool Enabled, const struct FVector2D& MousePosition, class UInventoryBag_C* ItemBag, int32 BagSlot, class UWIDGET_InventoryPanel_C* InventoryPanel, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_InventoryContextMenu_C", "SetInventoryContextMenuEnabled");

	Params::WIDGET_InventoryContextMenu_C_SetInventoryContextMenuEnabled Parms{};

	Parms.Enabled = Enabled;
	Parms.MousePosition = std::move(MousePosition);
	Parms.ItemBag = ItemBag;
	Parms.BagSlot = BagSlot;
	Parms.InventoryPanel = InventoryPanel;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_InventoryContextMenu.WIDGET_InventoryContextMenu_C.SetContextItemMouseOver
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CursorOver                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Disabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UTextMeshWidget*                  TextMesh                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGridMeshWidget*                  ImageMesh                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_InventoryContextMenu_C::SetContextItemMouseOver(bool CursorOver, bool Disabled, class UTextMeshWidget* TextMesh, class UGridMeshWidget* ImageMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_InventoryContextMenu_C", "SetContextItemMouseOver");

	Params::WIDGET_InventoryContextMenu_C_SetContextItemMouseOver Parms{};

	Parms.CursorOver = CursorOver;
	Parms.Disabled = Disabled;
	Parms.TextMesh = TextMesh;
	Parms.ImageMesh = ImageMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_InventoryContextMenu.WIDGET_InventoryContextMenu_C.IsInventoryContextEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_InventoryContextMenu_C::IsInventoryContextEnabled(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_InventoryContextMenu_C", "IsInventoryContextEnabled");

	Params::WIDGET_InventoryContextMenu_C_IsInventoryContextEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_InventoryContextMenu.WIDGET_InventoryContextMenu_C.GetDisabledColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FColor                           DisabledColor                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_InventoryContextMenu_C::GetDisabledColor(struct FColor* DisabledColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_InventoryContextMenu_C", "GetDisabledColor");

	Params::WIDGET_InventoryContextMenu_C_GetDisabledColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DisabledColor != nullptr)
		*DisabledColor = std::move(Parms.DisabledColor);
}


// Function WIDGET_InventoryContextMenu.WIDGET_InventoryContextMenu_C.UpdateBackgroundWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_InventoryContextMenu_C::UpdateBackgroundWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_InventoryContextMenu_C", "UpdateBackgroundWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_InventoryContextMenu.WIDGET_InventoryContextMenu_C.SetSelectedOptionWidgetState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCONTEXT_Base_C*                  OptionWidget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_InventoryContextMenu_C::SetSelectedOptionWidgetState(class UCONTEXT_Base_C* OptionWidget, bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_InventoryContextMenu_C", "SetSelectedOptionWidgetState");

	Params::WIDGET_InventoryContextMenu_C_SetSelectedOptionWidgetState Parms{};

	Parms.OptionWidget = OptionWidget;
	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_InventoryContextMenu.WIDGET_InventoryContextMenu_C.TrySelectFirstContextOption
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVerticalBox*                     VerticalBox                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_InventoryContextMenu_C::TrySelectFirstContextOption(class UVerticalBox* VerticalBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_InventoryContextMenu_C", "TrySelectFirstContextOption");

	Params::WIDGET_InventoryContextMenu_C_TrySelectFirstContextOption Parms{};

	Parms.VerticalBox = VerticalBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_InventoryContextMenu.WIDGET_InventoryContextMenu_C.TrySelectNextContextOption
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVerticalBox*                     VerticalBox                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CurrentIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Previous                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_InventoryContextMenu_C::TrySelectNextContextOption(class UVerticalBox* VerticalBox, int32 CurrentIndex, bool Previous, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_InventoryContextMenu_C", "TrySelectNextContextOption");

	Params::WIDGET_InventoryContextMenu_C_TrySelectNextContextOption Parms{};

	Parms.VerticalBox = VerticalBox;
	Parms.CurrentIndex = CurrentIndex;
	Parms.Previous = Previous;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_InventoryContextMenu.WIDGET_InventoryContextMenu_C.InvokeNavManager
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ENUM_MenuNavigationInput                InputType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_InventoryContextMenu_C::InvokeNavManager(bool InputState, ENUM_MenuNavigationInput InputType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_InventoryContextMenu_C", "InvokeNavManager");

	Params::WIDGET_InventoryContextMenu_C_InvokeNavManager Parms{};

	Parms.InputState = InputState;
	Parms.InputType = InputType;

	UObject::ProcessEvent(Func, &Parms);
}

}


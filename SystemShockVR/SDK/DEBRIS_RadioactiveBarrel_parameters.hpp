#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DEBRIS_RadioactiveBarrel

#include "Basic.hpp"

#include "ENUM_BiohazardBarrelCondition_structs.hpp"


namespace SDK::Params
{

// Function DEBRIS_RadioactiveBarrel.DEBRIS_RadioactiveBarrel_C.UserConstructionScript
// 0x0014 (0x0014 - 0x0000)
struct DEBRIS_RadioactiveBarrel_C_UserConstructionScript final
{
public:
	ENUM_BiohazardBarrelCondition                 Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(DEBRIS_RadioactiveBarrel_C_UserConstructionScript) == 0x000004, "Wrong alignment on DEBRIS_RadioactiveBarrel_C_UserConstructionScript");
static_assert(sizeof(DEBRIS_RadioactiveBarrel_C_UserConstructionScript) == 0x000014, "Wrong size on DEBRIS_RadioactiveBarrel_C_UserConstructionScript");
static_assert(offsetof(DEBRIS_RadioactiveBarrel_C_UserConstructionScript, Temp_byte_Variable) == 0x000000, "Member 'DEBRIS_RadioactiveBarrel_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(DEBRIS_RadioactiveBarrel_C_UserConstructionScript, Temp_float_Variable) == 0x000004, "Member 'DEBRIS_RadioactiveBarrel_C_UserConstructionScript::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(DEBRIS_RadioactiveBarrel_C_UserConstructionScript, Temp_float_Variable_1) == 0x000008, "Member 'DEBRIS_RadioactiveBarrel_C_UserConstructionScript::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(DEBRIS_RadioactiveBarrel_C_UserConstructionScript, Temp_float_Variable_2) == 0x00000C, "Member 'DEBRIS_RadioactiveBarrel_C_UserConstructionScript::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(DEBRIS_RadioactiveBarrel_C_UserConstructionScript, K2Node_Select_Default) == 0x000010, "Member 'DEBRIS_RadioactiveBarrel_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");

// Function DEBRIS_RadioactiveBarrel.DEBRIS_RadioactiveBarrel_C.UpdateBioTankVisibility
// 0x0003 (0x0003 - 0x0000)
struct DEBRIS_RadioactiveBarrel_C_UpdateBioTankVisibility final
{
public:
	bool                                          VisbilityState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEBRIS_RadioactiveBarrel_C_UpdateBioTankVisibility) == 0x000001, "Wrong alignment on DEBRIS_RadioactiveBarrel_C_UpdateBioTankVisibility");
static_assert(sizeof(DEBRIS_RadioactiveBarrel_C_UpdateBioTankVisibility) == 0x000003, "Wrong size on DEBRIS_RadioactiveBarrel_C_UpdateBioTankVisibility");
static_assert(offsetof(DEBRIS_RadioactiveBarrel_C_UpdateBioTankVisibility, VisbilityState) == 0x000000, "Member 'DEBRIS_RadioactiveBarrel_C_UpdateBioTankVisibility::VisbilityState' has a wrong offset!");
static_assert(offsetof(DEBRIS_RadioactiveBarrel_C_UpdateBioTankVisibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'DEBRIS_RadioactiveBarrel_C_UpdateBioTankVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEBRIS_RadioactiveBarrel_C_UpdateBioTankVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'DEBRIS_RadioactiveBarrel_C_UpdateBioTankVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function DEBRIS_RadioactiveBarrel.DEBRIS_RadioactiveBarrel_C.UpdateBrokenSettings
// 0x0002 (0x0002 - 0x0000)
struct DEBRIS_RadioactiveBarrel_C_UpdateBrokenSettings final
{
public:
	bool                                          DuringBeginPlay;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEBRIS_RadioactiveBarrel_C_UpdateBrokenSettings) == 0x000001, "Wrong alignment on DEBRIS_RadioactiveBarrel_C_UpdateBrokenSettings");
static_assert(sizeof(DEBRIS_RadioactiveBarrel_C_UpdateBrokenSettings) == 0x000002, "Wrong size on DEBRIS_RadioactiveBarrel_C_UpdateBrokenSettings");
static_assert(offsetof(DEBRIS_RadioactiveBarrel_C_UpdateBrokenSettings, DuringBeginPlay) == 0x000000, "Member 'DEBRIS_RadioactiveBarrel_C_UpdateBrokenSettings::DuringBeginPlay' has a wrong offset!");
static_assert(offsetof(DEBRIS_RadioactiveBarrel_C_UpdateBrokenSettings, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'DEBRIS_RadioactiveBarrel_C_UpdateBrokenSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


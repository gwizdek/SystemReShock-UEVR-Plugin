#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TRIGGER_MusicVolume

#include "Basic.hpp"

#include "TRIGGER_MusicVolume_classes.hpp"
#include "TRIGGER_MusicVolume_parameters.hpp"


namespace SDK
{

// Function TRIGGER_MusicVolume.TRIGGER_MusicVolume_C.ExecuteUbergraph_TRIGGER_MusicVolume
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATRIGGER_MusicVolume_C::ExecuteUbergraph_TRIGGER_MusicVolume(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_MusicVolume_C", "ExecuteUbergraph_TRIGGER_MusicVolume");

	Params::TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TRIGGER_MusicVolume.TRIGGER_MusicVolume_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ATRIGGER_MusicVolume_C::BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_MusicVolume_C", "BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function TRIGGER_MusicVolume.TRIGGER_MusicVolume_C.OnEnterVolume
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGI_SinglePlayer_C*               GameInstance                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGI_SinglePlayer_C*               OutGameInstance                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATRIGGER_MusicVolume_C::OnEnterVolume(class UGI_SinglePlayer_C* GameInstance, class UGI_SinglePlayer_C** OutGameInstance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_MusicVolume_C", "OnEnterVolume");

	Params::TRIGGER_MusicVolume_C_OnEnterVolume Parms{};

	Parms.GameInstance = GameInstance;

	UObject::ProcessEvent(Func, &Parms);

	if (OutGameInstance != nullptr)
		*OutGameInstance = Parms.OutGameInstance;
}


// Function TRIGGER_MusicVolume.TRIGGER_MusicVolume_C.ShouldSaveActor
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStreamingSaveGameActorParams    Params_0                                               (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATRIGGER_MusicVolume_C::ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_MusicVolume_C", "ShouldSaveActor");

	Params::TRIGGER_MusicVolume_C_ShouldSaveActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);

	return Parms.ReturnValue;
}


// Function TRIGGER_MusicVolume.TRIGGER_MusicVolume_C.ReceivePendingBodyTransforms
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FTransform>               BodyTransforms                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATRIGGER_MusicVolume_C::ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_MusicVolume_C", "ReceivePendingBodyTransforms");

	Params::TRIGGER_MusicVolume_C_ReceivePendingBodyTransforms Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.BodyTransforms = std::move(BodyTransforms);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TRIGGER_MusicVolume.TRIGGER_MusicVolume_C.ReceivePendingCharacterVelocity
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATRIGGER_MusicVolume_C::ReceivePendingCharacterVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_MusicVolume_C", "ReceivePendingCharacterVelocity");

	Params::TRIGGER_MusicVolume_C_ReceivePendingCharacterVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


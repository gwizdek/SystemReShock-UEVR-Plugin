#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_CircuitBreakerLever

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ENUM_Axis_structs.hpp"
#include "ENUM_UpDown_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_CircuitBreakerLever.INTERACT_CircuitBreakerLever_C.IsButtonFunctional
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_CircuitBreakerLever_C_IsButtonFunctional final
{
public:
	bool                                          CheckPower;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsButtonFunctional_Result;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CircuitBreakerLever_C_IsButtonFunctional) == 0x000001, "Wrong alignment on INTERACT_CircuitBreakerLever_C_IsButtonFunctional");
static_assert(sizeof(INTERACT_CircuitBreakerLever_C_IsButtonFunctional) == 0x000004, "Wrong size on INTERACT_CircuitBreakerLever_C_IsButtonFunctional");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_IsButtonFunctional, CheckPower) == 0x000000, "Member 'INTERACT_CircuitBreakerLever_C_IsButtonFunctional::CheckPower' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_IsButtonFunctional, Result) == 0x000001, "Member 'INTERACT_CircuitBreakerLever_C_IsButtonFunctional::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_IsButtonFunctional, CallFunc_IsButtonFunctional_Result) == 0x000002, "Member 'INTERACT_CircuitBreakerLever_C_IsButtonFunctional::CallFunc_IsButtonFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_IsButtonFunctional, CallFunc_NotEqual_NameName_ReturnValue) == 0x000003, "Member 'INTERACT_CircuitBreakerLever_C_IsButtonFunctional::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function INTERACT_CircuitBreakerLever.INTERACT_CircuitBreakerLever_C.OnInteractSuccess
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_CircuitBreakerLever_C_OnInteractSuccess final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_CircuitBreakerLever_C_OnInteractSuccess) == 0x000008, "Wrong alignment on INTERACT_CircuitBreakerLever_C_OnInteractSuccess");
static_assert(sizeof(INTERACT_CircuitBreakerLever_C_OnInteractSuccess) == 0x000008, "Wrong size on INTERACT_CircuitBreakerLever_C_OnInteractSuccess");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_OnInteractSuccess, SourceActor) == 0x000000, "Member 'INTERACT_CircuitBreakerLever_C_OnInteractSuccess::SourceActor' has a wrong offset!");

// Function INTERACT_CircuitBreakerLever.INTERACT_CircuitBreakerLever_C.UpdatePoweredStates
// 0x0228 (0x0228 - 0x0000)
struct INTERACT_CircuitBreakerLever_C_UpdatePoweredStates final
{
public:
	ENUM_Axis                                     ForwardAxis;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_Axis                                     UpAxis;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_Axis                                     RightAxis;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CompoundAxisVector;                                // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightVector;                                       // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ForwardVector;                                     // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundsHalfExtent;                                  // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundsOrigin;                                      // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLevelOffset;                                // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldPowerOn;                                     // 0x004C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelVoxelizationData*                 CurrentLevelData;                                  // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreaming*                        PrimaryStreamingLevel;                             // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Base_C*                       CurrentInteract;                                   // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_CanModifyInteractPower_self_CastInput;    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanModifyInteractPower_Result;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUnitVectorFromAxis_Result;             // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorElementFromAxis_Result;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUnitVectorFromAxis_Result_1;           // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorElementFromAxis_Result_1;        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevel*                                 CallFunc_GetLoadedLevel_ReturnValue;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AINTERACT_Base_C*>               CallFunc_GetFilteredActorsInSubLevel_ReturnValue;  // 0x0100(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_Base_C*                       CallFunc_Array_Get_Item;                           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_Axis                                     CallFunc_GetLargestAxesFromVector_AxisA;           // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_Axis                                     CallFunc_GetLargestAxesFromVector_AxisB;           // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_Axis                                     CallFunc_GetLargestAxesFromVector_AxisC;           // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_157[0x1];                                      // 0x0157(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue_1;        // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorElementFromAxis_Result_2;        // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorElementFromAxis_Result_3;        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorElementFromAxis_Result_4;        // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_UpDown                                   CallFunc_GetLeverState_Result;                     // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_187[0x1];                                      // 0x0187(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevel*                                 CallFunc_GetSubLevelByName_ReturnValue;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_GetFilteredComponentsInSubLevel_ReturnValue; // 0x0190(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class AINTERACT_Base_C*>               CallFunc_GetFilteredActorsInSubLevel_ReturnValue_1; // 0x01A0(0x0010)(ReferenceParm)
	class AINTERACT_Base_C*                       CallFunc_Array_Get_Item_1;                         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BD[0x3];                                      // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_GetRegionRowHandleForWorldLocation_ReturnValue; // 0x01C0(0x0010)(NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelStreaming*                        CallFunc_GetPrimaryStreamingLevel_Level;           // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_SetInteractPowered_self_CastInput;        // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInteractPowered_Result;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates) == 0x000008, "Wrong alignment on INTERACT_CircuitBreakerLever_C_UpdatePoweredStates");
static_assert(sizeof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates) == 0x000228, "Wrong size on INTERACT_CircuitBreakerLever_C_UpdatePoweredStates");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, ForwardAxis) == 0x000000, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::ForwardAxis' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, UpAxis) == 0x000001, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::UpAxis' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, RightAxis) == 0x000002, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::RightAxis' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CompoundAxisVector) == 0x000004, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CompoundAxisVector' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, RightVector) == 0x000010, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::RightVector' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, ForwardVector) == 0x00001C, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::ForwardVector' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, BoundsHalfExtent) == 0x000028, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::BoundsHalfExtent' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, BoundsOrigin) == 0x000034, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::BoundsOrigin' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CurrentLevelOffset) == 0x000040, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CurrentLevelOffset' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, ShouldPowerOn) == 0x00004C, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::ShouldPowerOn' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CurrentLevelData) == 0x000050, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CurrentLevelData' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, PrimaryStreamingLevel) == 0x000058, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::PrimaryStreamingLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CurrentInteract) == 0x000060, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CurrentInteract' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, GameInstance) == 0x000068, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, Temp_int_Array_Index_Variable) == 0x000078, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_CanModifyInteractPower_self_CastInput) == 0x000080, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_CanModifyInteractPower_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_CanModifyInteractPower_Result) == 0x000090, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_CanModifyInteractPower_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, Temp_int_Array_Index_Variable_1) == 0x000094, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, Temp_int_Loop_Counter_Variable_1) == 0x000098, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A0, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetUnitVectorFromAxis_Result) == 0x0000A4, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetUnitVectorFromAxis_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetVectorElementFromAxis_Result) == 0x0000B0, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetVectorElementFromAxis_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetUnitVectorFromAxis_Result_1) == 0x0000B4, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetUnitVectorFromAxis_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_SignOfFloat_ReturnValue) == 0x0000C0, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C4, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetVectorElementFromAxis_Result_1) == 0x0000D0, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetVectorElementFromAxis_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_SignOfFloat_ReturnValue_1) == 0x0000D4, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000D8, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetLoadedLevel_ReturnValue) == 0x0000E8, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetLoadedLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetActorUpVector_ReturnValue) == 0x0000F0, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetFilteredActorsInSubLevel_ReturnValue) == 0x000100, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetFilteredActorsInSubLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetActorRightVector_ReturnValue) == 0x000110, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Array_Get_Item) == 0x000120, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetActorForwardVector_ReturnValue) == 0x000130, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Add_VectorVector_ReturnValue) == 0x00013C, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000148, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetLargestAxesFromVector_AxisA) == 0x000154, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetLargestAxesFromVector_AxisA' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetLargestAxesFromVector_AxisB) == 0x000155, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetLargestAxesFromVector_AxisB' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetLargestAxesFromVector_AxisC) == 0x000156, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetLargestAxesFromVector_AxisC' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetActorRightVector_ReturnValue_1) == 0x000158, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetActorRightVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000164, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetVectorElementFromAxis_Result_2) == 0x000170, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetVectorElementFromAxis_Result_2' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetVectorElementFromAxis_Result_3) == 0x000174, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetVectorElementFromAxis_Result_3' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_FMin_ReturnValue) == 0x000178, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetVectorElementFromAxis_Result_4) == 0x00017C, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetVectorElementFromAxis_Result_4' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000180, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000184, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetLeverState_Result) == 0x000185, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetLeverState_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000186, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetSubLevelByName_ReturnValue) == 0x000188, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetSubLevelByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetFilteredComponentsInSubLevel_ReturnValue) == 0x000190, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetFilteredComponentsInSubLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetFilteredActorsInSubLevel_ReturnValue_1) == 0x0001A0, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetFilteredActorsInSubLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Array_Get_Item_1) == 0x0001B0, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Array_Length_ReturnValue_1) == 0x0001B8, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001BC, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetRegionRowHandleForWorldLocation_ReturnValue) == 0x0001C0, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetRegionRowHandleForWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0001D0, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetActorBounds_Origin) == 0x0001D4, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetActorBounds_BoxExtent) == 0x0001E0, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetPrimaryStreamingLevel_Level) == 0x0001F0, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetPrimaryStreamingLevel_Level' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_SetInteractPowered_self_CastInput) == 0x0001F8, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_SetInteractPowered_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_SetInteractPowered_Result) == 0x000208, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_SetInteractPowered_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_GetGameInstance_ReturnValue) == 0x000210, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, K2Node_DynamicCast_AsGI_Single_Player) == 0x000218, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_UpdatePoweredStates, CallFunc_NotEqual_NameName_ReturnValue) == 0x000221, "Member 'INTERACT_CircuitBreakerLever_C_UpdatePoweredStates::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function INTERACT_CircuitBreakerLever.INTERACT_CircuitBreakerLever_C.InitializeButtonState
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_CircuitBreakerLever_C_InitializeButtonState final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsStreamingLevels_Result;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CircuitBreakerLever_C_InitializeButtonState) == 0x000008, "Wrong alignment on INTERACT_CircuitBreakerLever_C_InitializeButtonState");
static_assert(sizeof(INTERACT_CircuitBreakerLever_C_InitializeButtonState) == 0x000038, "Wrong size on INTERACT_CircuitBreakerLever_C_InitializeButtonState");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_InitializeButtonState, GameInstance) == 0x000000, "Member 'INTERACT_CircuitBreakerLever_C_InitializeButtonState::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_InitializeButtonState, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'INTERACT_CircuitBreakerLever_C_InitializeButtonState::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_InitializeButtonState, CallFunc_IsStreamingLevels_Result) == 0x000018, "Member 'INTERACT_CircuitBreakerLever_C_InitializeButtonState::CallFunc_IsStreamingLevels_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_InitializeButtonState, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'INTERACT_CircuitBreakerLever_C_InitializeButtonState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_InitializeButtonState, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'INTERACT_CircuitBreakerLever_C_InitializeButtonState::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_InitializeButtonState, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_CircuitBreakerLever_C_InitializeButtonState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_InitializeButtonState, CallFunc_NotEqual_NameName_ReturnValue) == 0x000031, "Member 'INTERACT_CircuitBreakerLever_C_InitializeButtonState::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function INTERACT_CircuitBreakerLever.INTERACT_CircuitBreakerLever_C.EVENT_OnFinishedLoadingLevelCollection
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection) == 0x000008, "Wrong alignment on INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection");
static_assert(sizeof(INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection) == 0x000028, "Wrong size on INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_CircuitBreakerLever_C_EVENT_OnFinishedLoadingLevelCollection::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_CircuitBreakerLever.INTERACT_CircuitBreakerLever_C.CanModifyAnyTargetState
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_CircuitBreakerLever_C_CanModifyAnyTargetState final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanModifyAnyTargetState_Result;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CircuitBreakerLever_C_CanModifyAnyTargetState) == 0x000001, "Wrong alignment on INTERACT_CircuitBreakerLever_C_CanModifyAnyTargetState");
static_assert(sizeof(INTERACT_CircuitBreakerLever_C_CanModifyAnyTargetState) == 0x000003, "Wrong size on INTERACT_CircuitBreakerLever_C_CanModifyAnyTargetState");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_CanModifyAnyTargetState, Result) == 0x000000, "Member 'INTERACT_CircuitBreakerLever_C_CanModifyAnyTargetState::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_CanModifyAnyTargetState, CallFunc_NotEqual_NameName_ReturnValue) == 0x000001, "Member 'INTERACT_CircuitBreakerLever_C_CanModifyAnyTargetState::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_CanModifyAnyTargetState, CallFunc_CanModifyAnyTargetState_Result) == 0x000002, "Member 'INTERACT_CircuitBreakerLever_C_CanModifyAnyTargetState::CallFunc_CanModifyAnyTargetState_Result' has a wrong offset!");

// Function INTERACT_CircuitBreakerLever.INTERACT_CircuitBreakerLever_C.SetInteractPowered
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_CircuitBreakerLever_C_SetInteractPowered final
{
public:
	bool                                          State_0;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CircuitBreakerLever_C_SetInteractPowered) == 0x000001, "Wrong alignment on INTERACT_CircuitBreakerLever_C_SetInteractPowered");
static_assert(sizeof(INTERACT_CircuitBreakerLever_C_SetInteractPowered) == 0x000002, "Wrong size on INTERACT_CircuitBreakerLever_C_SetInteractPowered");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_SetInteractPowered, State_0) == 0x000000, "Member 'INTERACT_CircuitBreakerLever_C_SetInteractPowered::State_0' has a wrong offset!");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_SetInteractPowered, Result) == 0x000001, "Member 'INTERACT_CircuitBreakerLever_C_SetInteractPowered::Result' has a wrong offset!");

// Function INTERACT_CircuitBreakerLever.INTERACT_CircuitBreakerLever_C.CanModifyInteractPower
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_CircuitBreakerLever_C_CanModifyInteractPower final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_CircuitBreakerLever_C_CanModifyInteractPower) == 0x000001, "Wrong alignment on INTERACT_CircuitBreakerLever_C_CanModifyInteractPower");
static_assert(sizeof(INTERACT_CircuitBreakerLever_C_CanModifyInteractPower) == 0x000001, "Wrong size on INTERACT_CircuitBreakerLever_C_CanModifyInteractPower");
static_assert(offsetof(INTERACT_CircuitBreakerLever_C_CanModifyInteractPower, Result) == 0x000000, "Member 'INTERACT_CircuitBreakerLever_C_CanModifyInteractPower::Result' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_Junk_Base

#include "Basic.hpp"

#include "ITEM_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ITEM_Junk_Base.ITEM_Junk_Base_C
// 0x0060 (0x0160 - 0x0100)
#pragma pack(push, 0x1)
class alignas(0x08) UITEM_Junk_Base_C : public UITEM_Base_C
{
public:
	TSoftClassPtr<class UClass>                   RecycleRewardItemClass;                            // 0x0100(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         RecycleRewardItemCount;                            // 0x0128(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   VaporizeRewardItemClass;                           // 0x0130(0x0028)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         VaporizeRewardItemCount;                           // 0x0158(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CanReycleJunkItem(bool* Result);
	void GetRecycleRewardItemCount(class UClass** Class_0, int32* Count_0);
	void TryRecycleJunkItem(class UITEM_Base_C** SalvageRewardItem);
	void VaporizeJunkItem(bool* Result);
	void GetInventoryItemDetailsClass(class UClass** InventoryItemDetailsWidget);
	void HasWorldInteraction(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITEM_Junk_Base_C">();
	}
	static class UITEM_Junk_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITEM_Junk_Base_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UITEM_Junk_Base_C) == 0x000008, "Wrong alignment on UITEM_Junk_Base_C");
static_assert(sizeof(UITEM_Junk_Base_C) == 0x000160, "Wrong size on UITEM_Junk_Base_C");
static_assert(offsetof(UITEM_Junk_Base_C, RecycleRewardItemClass) == 0x000100, "Member 'UITEM_Junk_Base_C::RecycleRewardItemClass' has a wrong offset!");
static_assert(offsetof(UITEM_Junk_Base_C, RecycleRewardItemCount) == 0x000128, "Member 'UITEM_Junk_Base_C::RecycleRewardItemCount' has a wrong offset!");
static_assert(offsetof(UITEM_Junk_Base_C, VaporizeRewardItemClass) == 0x000130, "Member 'UITEM_Junk_Base_C::VaporizeRewardItemClass' has a wrong offset!");
static_assert(offsetof(UITEM_Junk_Base_C, VaporizeRewardItemCount) == 0x000158, "Member 'UITEM_Junk_Base_C::VaporizeRewardItemCount' has a wrong offset!");

}


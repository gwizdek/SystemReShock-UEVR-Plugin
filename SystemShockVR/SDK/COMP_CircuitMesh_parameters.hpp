#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_CircuitMesh

#include "Basic.hpp"

#include "ENUM_GeneratedCircuitType_structs.hpp"
#include "STRUCT_MeshTransform_structs.hpp"
#include "ENUM_PowerState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.PoweredStateChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct COMP_CircuitMesh_C_PoweredStateChanged__DelegateSignature final
{
public:
	class UCOMP_CircuitMesh_C*                    Circuit;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerState                               PowerState_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_CircuitMesh_C_PoweredStateChanged__DelegateSignature) == 0x000008, "Wrong alignment on COMP_CircuitMesh_C_PoweredStateChanged__DelegateSignature");
static_assert(sizeof(COMP_CircuitMesh_C_PoweredStateChanged__DelegateSignature) == 0x000010, "Wrong size on COMP_CircuitMesh_C_PoweredStateChanged__DelegateSignature");
static_assert(offsetof(COMP_CircuitMesh_C_PoweredStateChanged__DelegateSignature, Circuit) == 0x000000, "Member 'COMP_CircuitMesh_C_PoweredStateChanged__DelegateSignature::Circuit' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_PoweredStateChanged__DelegateSignature, PowerState_0) == 0x000008, "Member 'COMP_CircuitMesh_C_PoweredStateChanged__DelegateSignature::PowerState_0' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.ExecuteUbergraph_COMP_CircuitMesh
// 0x0070 (0x0070 - 0x0000)
struct COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_DynamicCast_AsStatic_Mesh;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UStaticMesh>             K2Node_CustomEvent_StaticMesh;                     // 0x0028(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRotation_Finished;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCellFocusable_Result;                   // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh) == 0x000008, "Wrong alignment on COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh");
static_assert(sizeof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh) == 0x000070, "Wrong size on COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, EntryPoint) == 0x000000, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::EntryPoint' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, Temp_byte_Variable) == 0x000004, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, Temp_byte_Variable_1) == 0x000005, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, Temp_object_Variable) == 0x000010, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, K2Node_DynamicCast_AsStatic_Mesh) == 0x000018, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::K2Node_DynamicCast_AsStatic_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000021, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, K2Node_Event_DeltaSeconds) == 0x000024, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, K2Node_CustomEvent_StaticMesh) == 0x000028, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::K2Node_CustomEvent_StaticMesh' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, CallFunc_UpdateRotation_Finished) == 0x000050, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::CallFunc_UpdateRotation_Finished' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000064, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, CallFunc_IsCellFocusable_Result) == 0x000065, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::CallFunc_IsCellFocusable_Result' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, K2Node_Event_EndPlayReason) == 0x000066, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, CallFunc_IsValid_ReturnValue) == 0x000067, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, Temp_bool_Variable) == 0x000068, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh, K2Node_Select_Default) == 0x000069, "Member 'COMP_CircuitMesh_C_ExecuteUbergraph_COMP_CircuitMesh::K2Node_Select_Default' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct COMP_CircuitMesh_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_CircuitMesh_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on COMP_CircuitMesh_C_ReceiveEndPlay");
static_assert(sizeof(COMP_CircuitMesh_C_ReceiveEndPlay) == 0x000001, "Wrong size on COMP_CircuitMesh_C_ReceiveEndPlay");
static_assert(offsetof(COMP_CircuitMesh_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'COMP_CircuitMesh_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.AsyncLoadMesh
// 0x0028 (0x0028 - 0x0000)
struct COMP_CircuitMesh_C_AsyncLoadMesh final
{
public:
	TSoftObjectPtr<class UStaticMesh>             StaticMesh_0;                                      // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(COMP_CircuitMesh_C_AsyncLoadMesh) == 0x000008, "Wrong alignment on COMP_CircuitMesh_C_AsyncLoadMesh");
static_assert(sizeof(COMP_CircuitMesh_C_AsyncLoadMesh) == 0x000028, "Wrong size on COMP_CircuitMesh_C_AsyncLoadMesh");
static_assert(offsetof(COMP_CircuitMesh_C_AsyncLoadMesh, StaticMesh_0) == 0x000000, "Member 'COMP_CircuitMesh_C_AsyncLoadMesh::StaticMesh_0' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct COMP_CircuitMesh_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_CircuitMesh_C_ReceiveTick) == 0x000004, "Wrong alignment on COMP_CircuitMesh_C_ReceiveTick");
static_assert(sizeof(COMP_CircuitMesh_C_ReceiveTick) == 0x000004, "Wrong size on COMP_CircuitMesh_C_ReceiveTick");
static_assert(offsetof(COMP_CircuitMesh_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'COMP_CircuitMesh_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.OnLoaded_E480C1A14932C8045B5E2C81A4DAD4FA
// 0x0008 (0x0008 - 0x0000)
struct COMP_CircuitMesh_C_OnLoaded_E480C1A14932C8045B5E2C81A4DAD4FA final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_CircuitMesh_C_OnLoaded_E480C1A14932C8045B5E2C81A4DAD4FA) == 0x000008, "Wrong alignment on COMP_CircuitMesh_C_OnLoaded_E480C1A14932C8045B5E2C81A4DAD4FA");
static_assert(sizeof(COMP_CircuitMesh_C_OnLoaded_E480C1A14932C8045B5E2C81A4DAD4FA) == 0x000008, "Wrong size on COMP_CircuitMesh_C_OnLoaded_E480C1A14932C8045B5E2C81A4DAD4FA");
static_assert(offsetof(COMP_CircuitMesh_C_OnLoaded_E480C1A14932C8045B5E2C81A4DAD4FA, Loaded) == 0x000000, "Member 'COMP_CircuitMesh_C_OnLoaded_E480C1A14932C8045B5E2C81A4DAD4FA::Loaded' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.RegisterCircuitPuzzle
// 0x0008 (0x0008 - 0x0000)
struct COMP_CircuitMesh_C_RegisterCircuitPuzzle final
{
public:
	class ACIRCUITPUZZLE_Base_C*                  CircuitPuzzle_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_CircuitMesh_C_RegisterCircuitPuzzle) == 0x000008, "Wrong alignment on COMP_CircuitMesh_C_RegisterCircuitPuzzle");
static_assert(sizeof(COMP_CircuitMesh_C_RegisterCircuitPuzzle) == 0x000008, "Wrong size on COMP_CircuitMesh_C_RegisterCircuitPuzzle");
static_assert(offsetof(COMP_CircuitMesh_C_RegisterCircuitPuzzle, CircuitPuzzle_0) == 0x000000, "Member 'COMP_CircuitMesh_C_RegisterCircuitPuzzle::CircuitPuzzle_0' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.ClearPowerSources
// 0x0001 (0x0001 - 0x0000)
struct COMP_CircuitMesh_C_ClearPowerSources final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_ClearPowerSources) == 0x000001, "Wrong alignment on COMP_CircuitMesh_C_ClearPowerSources");
static_assert(sizeof(COMP_CircuitMesh_C_ClearPowerSources) == 0x000001, "Wrong size on COMP_CircuitMesh_C_ClearPowerSources");
static_assert(offsetof(COMP_CircuitMesh_C_ClearPowerSources, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'COMP_CircuitMesh_C_ClearPowerSources::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.ReceivePowerFromCircuit
// 0x0010 (0x0010 - 0x0000)
struct COMP_CircuitMesh_C_ReceivePowerFromCircuit final
{
public:
	class UCOMP_CircuitMesh_C*                    PowerOriginCircuit;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_CircuitMesh_C_ReceivePowerFromCircuit) == 0x000008, "Wrong alignment on COMP_CircuitMesh_C_ReceivePowerFromCircuit");
static_assert(sizeof(COMP_CircuitMesh_C_ReceivePowerFromCircuit) == 0x000010, "Wrong size on COMP_CircuitMesh_C_ReceivePowerFromCircuit");
static_assert(offsetof(COMP_CircuitMesh_C_ReceivePowerFromCircuit, PowerOriginCircuit) == 0x000000, "Member 'COMP_CircuitMesh_C_ReceivePowerFromCircuit::PowerOriginCircuit' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ReceivePowerFromCircuit, CallFunc_Array_Contains_ReturnValue) == 0x000008, "Member 'COMP_CircuitMesh_C_ReceivePowerFromCircuit::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ReceivePowerFromCircuit, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'COMP_CircuitMesh_C_ReceivePowerFromCircuit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ReceivePowerFromCircuit, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'COMP_CircuitMesh_C_ReceivePowerFromCircuit::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.GetNorth
// 0x0001 (0x0001 - 0x0000)
struct COMP_CircuitMesh_C_GetNorth final
{
public:
	bool                                          North_0;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_GetNorth) == 0x000001, "Wrong alignment on COMP_CircuitMesh_C_GetNorth");
static_assert(sizeof(COMP_CircuitMesh_C_GetNorth) == 0x000001, "Wrong size on COMP_CircuitMesh_C_GetNorth");
static_assert(offsetof(COMP_CircuitMesh_C_GetNorth, North_0) == 0x000000, "Member 'COMP_CircuitMesh_C_GetNorth::North_0' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.GetEast
// 0x0001 (0x0001 - 0x0000)
struct COMP_CircuitMesh_C_GetEast final
{
public:
	bool                                          East_0;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_GetEast) == 0x000001, "Wrong alignment on COMP_CircuitMesh_C_GetEast");
static_assert(sizeof(COMP_CircuitMesh_C_GetEast) == 0x000001, "Wrong size on COMP_CircuitMesh_C_GetEast");
static_assert(offsetof(COMP_CircuitMesh_C_GetEast, East_0) == 0x000000, "Member 'COMP_CircuitMesh_C_GetEast::East_0' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.GetSouth
// 0x0001 (0x0001 - 0x0000)
struct COMP_CircuitMesh_C_GetSouth final
{
public:
	bool                                          South_0;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_GetSouth) == 0x000001, "Wrong alignment on COMP_CircuitMesh_C_GetSouth");
static_assert(sizeof(COMP_CircuitMesh_C_GetSouth) == 0x000001, "Wrong size on COMP_CircuitMesh_C_GetSouth");
static_assert(offsetof(COMP_CircuitMesh_C_GetSouth, South_0) == 0x000000, "Member 'COMP_CircuitMesh_C_GetSouth::South_0' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.GetWest
// 0x0001 (0x0001 - 0x0000)
struct COMP_CircuitMesh_C_GetWest final
{
public:
	bool                                          West_0;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_GetWest) == 0x000001, "Wrong alignment on COMP_CircuitMesh_C_GetWest");
static_assert(sizeof(COMP_CircuitMesh_C_GetWest) == 0x000001, "Wrong size on COMP_CircuitMesh_C_GetWest");
static_assert(offsetof(COMP_CircuitMesh_C_GetWest, West_0) == 0x000000, "Member 'COMP_CircuitMesh_C_GetWest::West_0' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.GetTargetRotation
// 0x0028 (0x0028 - 0x0000)
struct COMP_CircuitMesh_C_GetTargetRotation final
{
public:
	struct FRotator                               Result;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_GetTargetRotation) == 0x000004, "Wrong alignment on COMP_CircuitMesh_C_GetTargetRotation");
static_assert(sizeof(COMP_CircuitMesh_C_GetTargetRotation) == 0x000028, "Wrong size on COMP_CircuitMesh_C_GetTargetRotation");
static_assert(offsetof(COMP_CircuitMesh_C_GetTargetRotation, Result) == 0x000000, "Member 'COMP_CircuitMesh_C_GetTargetRotation::Result' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_GetTargetRotation, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'COMP_CircuitMesh_C_GetTargetRotation::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_GetTargetRotation, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'COMP_CircuitMesh_C_GetTargetRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_GetTargetRotation, CallFunc_ComposeRotators_ReturnValue) == 0x00001C, "Member 'COMP_CircuitMesh_C_GetTargetRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.TryModifyComponentTickState
// 0x0014 (0x0014 - 0x0000)
struct COMP_CircuitMesh_C_TryModifyComponentTickState final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetTargetRotation_Result;                 // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_RotatorRotator_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_TryModifyComponentTickState) == 0x000004, "Wrong alignment on COMP_CircuitMesh_C_TryModifyComponentTickState");
static_assert(sizeof(COMP_CircuitMesh_C_TryModifyComponentTickState) == 0x000014, "Wrong size on COMP_CircuitMesh_C_TryModifyComponentTickState");
static_assert(offsetof(COMP_CircuitMesh_C_TryModifyComponentTickState, State) == 0x000000, "Member 'COMP_CircuitMesh_C_TryModifyComponentTickState::State' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_TryModifyComponentTickState, CallFunc_GetTargetRotation_Result) == 0x000004, "Member 'COMP_CircuitMesh_C_TryModifyComponentTickState::CallFunc_GetTargetRotation_Result' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_TryModifyComponentTickState, CallFunc_NotEqual_RotatorRotator_ReturnValue) == 0x000010, "Member 'COMP_CircuitMesh_C_TryModifyComponentTickState::CallFunc_NotEqual_RotatorRotator_ReturnValue' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.RotateClockwise
// 0x0118 (0x0118 - 0x0000)
struct COMP_CircuitMesh_C_RotateClockwise final
{
public:
	bool                                          HandleSideEffects;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class UCOMP_CircuitMesh_C*>              RotatedCircuits;                                   // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	uint8                                         CurrentRotationCount;                              // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_CircuitMesh_C*                    CircuitToRotate;                                   // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CellIndex;                                         // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewWest;                                           // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewSouth;                                          // 0x006A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewEast;                                           // 0x006B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewNorth;                                          // 0x006C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateRotation_Finished;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAxis_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CellToIndex_Index;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Add_ByteByte_ReturnValue;                 // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetCellChanges_Result;                    // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntUpperbound_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCellRotatable_Result;                   // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Add_IntPointIntPoint_ReturnValue;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_Add_IntPointIntPoint_ReturnValue_1;       // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_PuzzleCell_Base_C*                CallFunc_GetCellAtLocation_Cell;                   // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_CircuitMesh_C*                    K2Node_DynamicCast_AsCOMP_Circuit_Mesh;            // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_PuzzleCell_Base_C*                CallFunc_GetCellAtLocation_Cell_1;                 // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_CircuitMesh_C*                    K2Node_DynamicCast_AsCOMP_Circuit_Mesh_1;          // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_RotateClockwise) == 0x000008, "Wrong alignment on COMP_CircuitMesh_C_RotateClockwise");
static_assert(sizeof(COMP_CircuitMesh_C_RotateClockwise) == 0x000118, "Wrong size on COMP_CircuitMesh_C_RotateClockwise");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, HandleSideEffects) == 0x000000, "Member 'COMP_CircuitMesh_C_RotateClockwise::HandleSideEffects' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, RotatedCircuits) == 0x000008, "Member 'COMP_CircuitMesh_C_RotateClockwise::RotatedCircuits' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CurrentRotationCount) == 0x000058, "Member 'COMP_CircuitMesh_C_RotateClockwise::CurrentRotationCount' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CircuitToRotate) == 0x000060, "Member 'COMP_CircuitMesh_C_RotateClockwise::CircuitToRotate' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CellIndex) == 0x000068, "Member 'COMP_CircuitMesh_C_RotateClockwise::CellIndex' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, NewWest) == 0x000069, "Member 'COMP_CircuitMesh_C_RotateClockwise::NewWest' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, NewSouth) == 0x00006A, "Member 'COMP_CircuitMesh_C_RotateClockwise::NewSouth' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, NewEast) == 0x00006B, "Member 'COMP_CircuitMesh_C_RotateClockwise::NewEast' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, NewNorth) == 0x00006C, "Member 'COMP_CircuitMesh_C_RotateClockwise::NewNorth' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'COMP_CircuitMesh_C_RotateClockwise::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, Temp_int_Array_Index_Variable) == 0x000078, "Member 'COMP_CircuitMesh_C_RotateClockwise::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_UpdateRotation_Finished) == 0x00007C, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_UpdateRotation_Finished' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, Temp_int_Array_Index_Variable_1) == 0x000080, "Member 'COMP_CircuitMesh_C_RotateClockwise::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Subtract_IntInt_ReturnValue) == 0x000084, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000088, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_ClampAxis_ReturnValue) == 0x00008C, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_ClampAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Round_ReturnValue) == 0x000090, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_CellToIndex_Index) == 0x000094, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_CellToIndex_Index' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Conv_IntToByte_ReturnValue) == 0x000098, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Add_ByteByte_ReturnValue) == 0x000099, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Add_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_GetCellChanges_Result) == 0x00009A, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_GetCellChanges_Result' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00009C, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_WrapIntUpperbound_ReturnValue) == 0x0000A0, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_WrapIntUpperbound_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0000A4, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_IsCellRotatable_Result) == 0x0000A5, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_IsCellRotatable_Result' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Set_Contains_ReturnValue) == 0x0000A6, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Not_PreBool_ReturnValue) == 0x0000A7, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, Temp_int_Loop_Counter_Variable_1) == 0x0000A8, "Member 'COMP_CircuitMesh_C_RotateClockwise::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Array_Get_Item) == 0x0000AC, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Add_IntPointIntPoint_ReturnValue) == 0x0000B8, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Add_IntPointIntPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C4, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, K2Node_SwitchEnum_CmpSuccess) == 0x0000D0, "Member 'COMP_CircuitMesh_C_RotateClockwise::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Add_IntPointIntPoint_ReturnValue_1) == 0x0000D4, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Add_IntPointIntPoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_GetCellAtLocation_Cell) == 0x0000E0, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_GetCellAtLocation_Cell' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E8, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, K2Node_DynamicCast_AsCOMP_Circuit_Mesh) == 0x0000F0, "Member 'COMP_CircuitMesh_C_RotateClockwise::K2Node_DynamicCast_AsCOMP_Circuit_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'COMP_CircuitMesh_C_RotateClockwise::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, CallFunc_GetCellAtLocation_Cell_1) == 0x000100, "Member 'COMP_CircuitMesh_C_RotateClockwise::CallFunc_GetCellAtLocation_Cell_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, K2Node_DynamicCast_AsCOMP_Circuit_Mesh_1) == 0x000108, "Member 'COMP_CircuitMesh_C_RotateClockwise::K2Node_DynamicCast_AsCOMP_Circuit_Mesh_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_RotateClockwise, K2Node_DynamicCast_bSuccess_1) == 0x000110, "Member 'COMP_CircuitMesh_C_RotateClockwise::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.UpdatePower
// 0x0068 (0x0068 - 0x0000)
struct COMP_CircuitMesh_C_UpdatePower final
{
public:
	bool                                          CanSupplyPower;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerState                               NewPowerState;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCOMP_CircuitMesh_C*>            CallFunc_GetConnectedNeighborCells_Neighbors;      // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_CircuitMesh_C*                    CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_CircuitMesh_C_UpdatePower) == 0x000008, "Wrong alignment on COMP_CircuitMesh_C_UpdatePower");
static_assert(sizeof(COMP_CircuitMesh_C_UpdatePower) == 0x000068, "Wrong size on COMP_CircuitMesh_C_UpdatePower");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CanSupplyPower) == 0x000000, "Member 'COMP_CircuitMesh_C_UpdatePower::CanSupplyPower' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, DeltaTime) == 0x000004, "Member 'COMP_CircuitMesh_C_UpdatePower::DeltaTime' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, NewPowerState) == 0x000008, "Member 'COMP_CircuitMesh_C_UpdatePower::NewPowerState' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'COMP_CircuitMesh_C_UpdatePower::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'COMP_CircuitMesh_C_UpdatePower::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000019, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000020, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_GetConnectedNeighborCells_Neighbors) == 0x000030, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_GetConnectedNeighborCells_Neighbors' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_Array_Get_Item) == 0x000048, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_BooleanOR_ReturnValue) == 0x000051, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000059, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x00005A, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_Add_FloatFloat_ReturnValue) == 0x00005C, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdatePower, CallFunc_FClamp_ReturnValue_1) == 0x000060, "Member 'COMP_CircuitMesh_C_UpdatePower::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.UpdateRotation
// 0x00C4 (0x00C4 - 0x0000)
struct COMP_CircuitMesh_C_UpdateRotation final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Finished;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               NewRotation;                                       // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               TargetRotation;                                    // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0020(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_GetTargetRotation_Result;                 // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RInterpTo_Constant_ReturnValue;           // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_UpdateRotation) == 0x000004, "Wrong alignment on COMP_CircuitMesh_C_UpdateRotation");
static_assert(sizeof(COMP_CircuitMesh_C_UpdateRotation) == 0x0000C4, "Wrong size on COMP_CircuitMesh_C_UpdateRotation");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateRotation, DeltaTime) == 0x000000, "Member 'COMP_CircuitMesh_C_UpdateRotation::DeltaTime' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateRotation, Finished) == 0x000004, "Member 'COMP_CircuitMesh_C_UpdateRotation::Finished' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateRotation, NewRotation) == 0x000008, "Member 'COMP_CircuitMesh_C_UpdateRotation::NewRotation' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateRotation, TargetRotation) == 0x000014, "Member 'COMP_CircuitMesh_C_UpdateRotation::TargetRotation' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateRotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000020, "Member 'COMP_CircuitMesh_C_UpdateRotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateRotation, CallFunc_GetTargetRotation_Result) == 0x0000A8, "Member 'COMP_CircuitMesh_C_UpdateRotation::CallFunc_GetTargetRotation_Result' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateRotation, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x0000B4, "Member 'COMP_CircuitMesh_C_UpdateRotation::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateRotation, CallFunc_RInterpTo_Constant_ReturnValue) == 0x0000B8, "Member 'COMP_CircuitMesh_C_UpdateRotation::CallFunc_RInterpTo_Constant_ReturnValue' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.UpdateMaterial
// 0x0030 (0x0030 - 0x0000)
struct COMP_CircuitMesh_C_UpdateMaterial final
{
public:
	float                                         Temp_float_Variable;                               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_UpdateMaterial) == 0x000008, "Wrong alignment on COMP_CircuitMesh_C_UpdateMaterial");
static_assert(sizeof(COMP_CircuitMesh_C_UpdateMaterial) == 0x000030, "Wrong size on COMP_CircuitMesh_C_UpdateMaterial");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateMaterial, Temp_float_Variable) == 0x000000, "Member 'COMP_CircuitMesh_C_UpdateMaterial::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateMaterial, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'COMP_CircuitMesh_C_UpdateMaterial::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateMaterial, Temp_float_Variable_1) == 0x000008, "Member 'COMP_CircuitMesh_C_UpdateMaterial::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateMaterial, Temp_bool_Variable) == 0x00000C, "Member 'COMP_CircuitMesh_C_UpdateMaterial::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateMaterial, K2Node_Select_Default) == 0x000010, "Member 'COMP_CircuitMesh_C_UpdateMaterial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateMaterial, CallFunc_GetMaterial_ReturnValue) == 0x000018, "Member 'COMP_CircuitMesh_C_UpdateMaterial::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'COMP_CircuitMesh_C_UpdateMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateMaterial, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'COMP_CircuitMesh_C_UpdateMaterial::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_UpdateMaterial, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'COMP_CircuitMesh_C_UpdateMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.ApplyCircuitData
// 0x02B0 (0x02B0 - 0x0000)
struct COMP_CircuitMesh_C_ApplyCircuitData final
{
public:
	ENUM_GeneratedCircuitType                     Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Directions;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACIRCUITPUZZLE_Base_C*                  CircuitPuzzle_0;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MeshTransform                  MeshTransformData;                                 // 0x0010(0x0060)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x00A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	class UStaticMeshComponent*                   CallFunc_AddStaticMeshComponent_ReturnValue;       // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddStaticMeshComponent_ReturnValue_1;     // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_198[0x8];                                      // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshTransform                  CallFunc_GetCircuitMesh_MeshTransform;             // 0x01A0(0x0060)(HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x020C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue_1;                 // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x029D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29E[0x2];                                      // 0x029E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue_2;                 // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue_3;                 // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_ApplyCircuitData) == 0x000010, "Wrong alignment on COMP_CircuitMesh_C_ApplyCircuitData");
static_assert(sizeof(COMP_CircuitMesh_C_ApplyCircuitData) == 0x0002B0, "Wrong size on COMP_CircuitMesh_C_ApplyCircuitData");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, Type) == 0x000000, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::Type' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, Directions) == 0x000004, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::Directions' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CircuitPuzzle_0) == 0x000008, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CircuitPuzzle_0' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, MeshTransformData) == 0x000010, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::MeshTransformData' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0000A0, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_MakeTransform_ReturnValue_1) == 0x000130, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_AddStaticMeshComponent_ReturnValue) == 0x000160, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_AddStaticMeshComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_AddStaticMeshComponent_ReturnValue_1) == 0x000168, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_AddStaticMeshComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, K2Node_SwitchEnum_CmpSuccess) == 0x000170, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_BreakTransform_Location) == 0x000174, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_BreakTransform_Rotation) == 0x000180, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_BreakTransform_Scale) == 0x00018C, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_GetCircuitMesh_MeshTransform) == 0x0001A0, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_GetCircuitMesh_MeshTransform' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_Add_VectorVector_ReturnValue) == 0x000200, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00020C, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_And_IntInt_ReturnValue) == 0x000294, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_And_IntInt_ReturnValue_1) == 0x000298, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_And_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_Greater_IntInt_ReturnValue) == 0x00029C, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00029D, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_And_IntInt_ReturnValue_2) == 0x0002A0, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_And_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_And_IntInt_ReturnValue_3) == 0x0002A4, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_And_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0002A8, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_ApplyCircuitData, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0002A9, "Member 'COMP_CircuitMesh_C_ApplyCircuitData::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.IsCellFocusable
// 0x0002 (0x0002 - 0x0000)
struct COMP_CircuitMesh_C_IsCellFocusable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_IsCellFocusable) == 0x000001, "Wrong alignment on COMP_CircuitMesh_C_IsCellFocusable");
static_assert(sizeof(COMP_CircuitMesh_C_IsCellFocusable) == 0x000002, "Wrong size on COMP_CircuitMesh_C_IsCellFocusable");
static_assert(offsetof(COMP_CircuitMesh_C_IsCellFocusable, Result) == 0x000000, "Member 'COMP_CircuitMesh_C_IsCellFocusable::Result' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_IsCellFocusable, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'COMP_CircuitMesh_C_IsCellFocusable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.SetModifiedCellParameters
// 0x0068 (0x0068 - 0x0000)
struct COMP_CircuitMesh_C_SetModifiedCellParameters final
{
public:
	uint8                                         Params_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class UCOMP_CircuitMesh_C*>              K2Node_MakeSet_Set;                                // 0x0008(0x0050)(ContainsInstancedReference)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_CircuitMesh_C_SetModifiedCellParameters) == 0x000008, "Wrong alignment on COMP_CircuitMesh_C_SetModifiedCellParameters");
static_assert(sizeof(COMP_CircuitMesh_C_SetModifiedCellParameters) == 0x000068, "Wrong size on COMP_CircuitMesh_C_SetModifiedCellParameters");
static_assert(offsetof(COMP_CircuitMesh_C_SetModifiedCellParameters, Params_0) == 0x000000, "Member 'COMP_CircuitMesh_C_SetModifiedCellParameters::Params_0' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_SetModifiedCellParameters, Result) == 0x000001, "Member 'COMP_CircuitMesh_C_SetModifiedCellParameters::Result' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_SetModifiedCellParameters, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'COMP_CircuitMesh_C_SetModifiedCellParameters::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_SetModifiedCellParameters, K2Node_MakeSet_Set) == 0x000008, "Member 'COMP_CircuitMesh_C_SetModifiedCellParameters::K2Node_MakeSet_Set' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_SetModifiedCellParameters, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'COMP_CircuitMesh_C_SetModifiedCellParameters::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_SetModifiedCellParameters, Temp_int_Variable) == 0x00005C, "Member 'COMP_CircuitMesh_C_SetModifiedCellParameters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_SetModifiedCellParameters, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'COMP_CircuitMesh_C_SetModifiedCellParameters::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_SetModifiedCellParameters, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'COMP_CircuitMesh_C_SetModifiedCellParameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.SetCellVisibility
// 0x0004 (0x0004 - 0x0000)
struct COMP_CircuitMesh_C_SetCellVisibility final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCellVisibility_Result;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_SetCellVisibility) == 0x000001, "Wrong alignment on COMP_CircuitMesh_C_SetCellVisibility");
static_assert(sizeof(COMP_CircuitMesh_C_SetCellVisibility) == 0x000004, "Wrong size on COMP_CircuitMesh_C_SetCellVisibility");
static_assert(offsetof(COMP_CircuitMesh_C_SetCellVisibility, IsVisible_0) == 0x000000, "Member 'COMP_CircuitMesh_C_SetCellVisibility::IsVisible_0' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_SetCellVisibility, Result) == 0x000001, "Member 'COMP_CircuitMesh_C_SetCellVisibility::Result' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_SetCellVisibility, CallFunc_SetCellVisibility_Result) == 0x000002, "Member 'COMP_CircuitMesh_C_SetCellVisibility::CallFunc_SetCellVisibility_Result' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_SetCellVisibility, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'COMP_CircuitMesh_C_SetCellVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_CircuitMesh.COMP_CircuitMesh_C.IsCellRotatable
// 0x0005 (0x0005 - 0x0000)
struct COMP_CircuitMesh_C_IsCellRotatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_CircuitMesh_C_IsCellRotatable) == 0x000001, "Wrong alignment on COMP_CircuitMesh_C_IsCellRotatable");
static_assert(sizeof(COMP_CircuitMesh_C_IsCellRotatable) == 0x000005, "Wrong size on COMP_CircuitMesh_C_IsCellRotatable");
static_assert(offsetof(COMP_CircuitMesh_C_IsCellRotatable, Result) == 0x000000, "Member 'COMP_CircuitMesh_C_IsCellRotatable::Result' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_IsCellRotatable, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'COMP_CircuitMesh_C_IsCellRotatable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_IsCellRotatable, CallFunc_BooleanOR_ReturnValue_1) == 0x000002, "Member 'COMP_CircuitMesh_C_IsCellRotatable::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_IsCellRotatable, K2Node_SwitchEnum_CmpSuccess) == 0x000003, "Member 'COMP_CircuitMesh_C_IsCellRotatable::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_CircuitMesh_C_IsCellRotatable, CallFunc_BooleanOR_ReturnValue_2) == 0x000004, "Member 'COMP_CircuitMesh_C_IsCellRotatable::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STRUCT_WirePuzzleData

#include "Basic.hpp"


namespace SDK
{

// UserDefinedStruct STRUCT_WirePuzzleData.STRUCT_WirePuzzleData
// 0x0028 (0x0028 - 0x0000)
struct FSTRUCT_WirePuzzleData final
{
public:
	TArray<uint8>                                 CellType_3_C98D851E4C6703A30B15D5B56C548F4A;       // 0x0000(0x0010)(Edit, BlueprintVisible)
	TArray<uint8>                                 CellOrientation_5_89D3F54D4363D878990AFB86E9AB122C; // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         MinPower_15_67E58FE84AA2B44F7C6A65984FE040B6;      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxPower_16_CEE745E14763CCB7CCEAAC945939EBCB;      // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSTRUCT_WirePuzzleData) == 0x000008, "Wrong alignment on FSTRUCT_WirePuzzleData");
static_assert(sizeof(FSTRUCT_WirePuzzleData) == 0x000028, "Wrong size on FSTRUCT_WirePuzzleData");
static_assert(offsetof(FSTRUCT_WirePuzzleData, CellType_3_C98D851E4C6703A30B15D5B56C548F4A) == 0x000000, "Member 'FSTRUCT_WirePuzzleData::CellType_3_C98D851E4C6703A30B15D5B56C548F4A' has a wrong offset!");
static_assert(offsetof(FSTRUCT_WirePuzzleData, CellOrientation_5_89D3F54D4363D878990AFB86E9AB122C) == 0x000010, "Member 'FSTRUCT_WirePuzzleData::CellOrientation_5_89D3F54D4363D878990AFB86E9AB122C' has a wrong offset!");
static_assert(offsetof(FSTRUCT_WirePuzzleData, MinPower_15_67E58FE84AA2B44F7C6A65984FE040B6) == 0x000020, "Member 'FSTRUCT_WirePuzzleData::MinPower_15_67E58FE84AA2B44F7C6A65984FE040B6' has a wrong offset!");
static_assert(offsetof(FSTRUCT_WirePuzzleData, MaxPower_16_CEE745E14763CCB7CCEAAC945939EBCB) == 0x000024, "Member 'FSTRUCT_WirePuzzleData::MaxPower_16_CEE745E14763CCB7CCEAAC945939EBCB' has a wrong offset!");

}


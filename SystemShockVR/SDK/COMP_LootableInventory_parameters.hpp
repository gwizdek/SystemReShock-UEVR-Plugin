#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_LootableInventory

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "STRUCT_InventoryBagParams_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_LootTableEntry_structs.hpp"
#include "STRUCT_HardItemParams_structs.hpp"
#include "STRUCT_ReferencedLootTable_structs.hpp"


namespace SDK::Params
{

// Function COMP_LootableInventory.COMP_LootableInventory_C.ExecuteUbergraph_COMP_LootableInventory
// 0x0004 (0x0004 - 0x0000)
struct COMP_LootableInventory_C_ExecuteUbergraph_COMP_LootableInventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LootableInventory_C_ExecuteUbergraph_COMP_LootableInventory) == 0x000004, "Wrong alignment on COMP_LootableInventory_C_ExecuteUbergraph_COMP_LootableInventory");
static_assert(sizeof(COMP_LootableInventory_C_ExecuteUbergraph_COMP_LootableInventory) == 0x000004, "Wrong size on COMP_LootableInventory_C_ExecuteUbergraph_COMP_LootableInventory");
static_assert(offsetof(COMP_LootableInventory_C_ExecuteUbergraph_COMP_LootableInventory, EntryPoint) == 0x000000, "Member 'COMP_LootableInventory_C_ExecuteUbergraph_COMP_LootableInventory::EntryPoint' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.HasGeneratedLoot
// 0x0001 (0x0001 - 0x0000)
struct COMP_LootableInventory_C_HasGeneratedLoot final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LootableInventory_C_HasGeneratedLoot) == 0x000001, "Wrong alignment on COMP_LootableInventory_C_HasGeneratedLoot");
static_assert(sizeof(COMP_LootableInventory_C_HasGeneratedLoot) == 0x000001, "Wrong size on COMP_LootableInventory_C_HasGeneratedLoot");
static_assert(offsetof(COMP_LootableInventory_C_HasGeneratedLoot, Result) == 0x000000, "Member 'COMP_LootableInventory_C_HasGeneratedLoot::Result' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.IsLootInventoryEmpty
// 0x00F0 (0x00F0 - 0x0000)
struct COMP_LootableInventory_C_IsLootInventoryEmpty final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LootTableEntry                 SelectedEntry;                                     // 0x0008(0x0040)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FSTRUCT_LootTableEntry>         LootEntries;                                       // 0x0048(0x0010)(Edit, BlueprintVisible)
	struct FSTRUCT_ReferencedLootTable            ReferencedTable;                                   // 0x0058(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          RandomStream;                                      // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GenerateRandomSelectionsFromLootEntries_ResultIndices; // 0x0088(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetLootEntryHasContent_Result;            // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTRUCT_LootTableEntry>         CallFunc_GetLootEntriesFromDataTable_ResultEntries; // 0x00A8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_ReferencedLootTable            CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLootSeed_Seed;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x00E0(0x0008)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsInventoryEmpty_Result;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGeneratedLoot_Result;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LootableInventory_C_IsLootInventoryEmpty) == 0x000008, "Wrong alignment on COMP_LootableInventory_C_IsLootInventoryEmpty");
static_assert(sizeof(COMP_LootableInventory_C_IsLootInventoryEmpty) == 0x0000F0, "Wrong size on COMP_LootableInventory_C_IsLootInventoryEmpty");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, Result) == 0x000000, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, SelectedEntry) == 0x000008, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::SelectedEntry' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, LootEntries) == 0x000048, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::LootEntries' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, ReferencedTable) == 0x000058, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::ReferencedTable' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, RandomStream) == 0x000068, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::RandomStream' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, Temp_int_Array_Index_Variable) == 0x000070, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, Temp_int_Array_Index_Variable_1) == 0x00007C, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_Greater_IntInt_ReturnValue) == 0x000084, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_GenerateRandomSelectionsFromLootEntries_ResultIndices) == 0x000088, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_GenerateRandomSelectionsFromLootEntries_ResultIndices' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_Array_Get_Item) == 0x00009C, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_Array_Length_ReturnValue_1) == 0x0000A0, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_GetLootEntryHasContent_Result) == 0x0000A4, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_GetLootEntryHasContent_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_GetLootEntriesFromDataTable_ResultEntries) == 0x0000A8, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_GetLootEntriesFromDataTable_ResultEntries' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, Temp_int_Loop_Counter_Variable_1) == 0x0000B8, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_Array_Length_ReturnValue_2) == 0x0000D0, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D5, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D8, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_GetLootSeed_Seed) == 0x0000DC, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_GetLootSeed_Seed' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_MakeRandomStream_ReturnValue) == 0x0000E0, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_IsInventoryEmpty_Result) == 0x0000E8, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_IsInventoryEmpty_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_IsLootInventoryEmpty, CallFunc_HasGeneratedLoot_Result) == 0x0000E9, "Member 'COMP_LootableInventory_C_IsLootInventoryEmpty::CallFunc_HasGeneratedLoot_Result' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.GetLootItemRotation
// 0x0110 (0x0110 - 0x0000)
struct COMP_LootableInventory_C_GetLootItemRotation final
{
public:
	class UITEM_Base_C*                           LootItem;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        LootBag;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_Base_C*                         LootPickup;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               ResultRotation;                                    // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CompartmentHeight;                                 // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxPitch;                                          // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DesiredPitch;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnBoxLength;                                    // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PickupItemLength;                                  // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaledPickupMeshDiameterExtents;                   // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan_ReturnValue;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxElement_ReturnValue;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsItemRotated_Result;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridHeight_Result;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridWidth_Result;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxElement_ReturnValue_1;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LootableInventory_C_GetLootItemRotation) == 0x000008, "Wrong alignment on COMP_LootableInventory_C_GetLootItemRotation");
static_assert(sizeof(COMP_LootableInventory_C_GetLootItemRotation) == 0x000110, "Wrong size on COMP_LootableInventory_C_GetLootItemRotation");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, LootItem) == 0x000000, "Member 'COMP_LootableInventory_C_GetLootItemRotation::LootItem' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, LootBag) == 0x000008, "Member 'COMP_LootableInventory_C_GetLootItemRotation::LootBag' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, LootPickup) == 0x000010, "Member 'COMP_LootableInventory_C_GetLootItemRotation::LootPickup' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, Rotation) == 0x000018, "Member 'COMP_LootableInventory_C_GetLootItemRotation::Rotation' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, ResultRotation) == 0x000024, "Member 'COMP_LootableInventory_C_GetLootItemRotation::ResultRotation' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CompartmentHeight) == 0x000030, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CompartmentHeight' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, MaxPitch) == 0x000034, "Member 'COMP_LootableInventory_C_GetLootItemRotation::MaxPitch' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, DesiredPitch) == 0x000038, "Member 'COMP_LootableInventory_C_GetLootItemRotation::DesiredPitch' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, SpawnBoxLength) == 0x00003C, "Member 'COMP_LootableInventory_C_GetLootItemRotation::SpawnBoxLength' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, PickupItemLength) == 0x000040, "Member 'COMP_LootableInventory_C_GetLootItemRotation::PickupItemLength' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, ScaledPickupMeshDiameterExtents) == 0x000044, "Member 'COMP_LootableInventory_C_GetLootItemRotation::ScaledPickupMeshDiameterExtents' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_FMin_ReturnValue) == 0x000050, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_DegAtan_ReturnValue) == 0x000058, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_DegAtan_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_GetComponentBounds_Origin) == 0x00005C, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_GetComponentBounds_BoxExtent) == 0x000068, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_GetComponentBounds_SphereRadius) == 0x000074, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_BreakVector_X) == 0x00007C, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_BreakVector_Y) == 0x000080, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_BreakVector_Z) == 0x000084, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000088, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_GetMaxElement_ReturnValue) == 0x00008C, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_BreakRotator_Roll) == 0x000090, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_BreakRotator_Pitch) == 0x000094, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_BreakRotator_Yaw) == 0x000098, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_MakeRotator_ReturnValue) == 0x00009C, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_IsItemRotated_Result) == 0x0000A8, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_IsItemRotated_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_GetActorBounds_Origin) == 0x0000AC, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_GetActorBounds_BoxExtent) == 0x0000B8, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000C4, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_GetGridHeight_Result) == 0x0000D0, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_GetGridHeight_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_GetGridWidth_Result) == 0x0000D4, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_GetGridWidth_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_Max_ReturnValue) == 0x0000D8, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_Max_ReturnValue_1) == 0x0000DC, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000E4, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_DegAcos_ReturnValue) == 0x0000E8, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000EC, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x0000F0, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_Multiply_VectorInt_ReturnValue) == 0x0000FC, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_GetMaxElement_ReturnValue_1) == 0x000108, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_GetMaxElement_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_GetLootItemRotation, CallFunc_Add_FloatFloat_ReturnValue) == 0x00010C, "Member 'COMP_LootableInventory_C_GetLootItemRotation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.TryInitializeLootInventory
// 0x0002 (0x0002 - 0x0000)
struct COMP_LootableInventory_C_TryInitializeLootInventory final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LootableInventory_C_TryInitializeLootInventory) == 0x000001, "Wrong alignment on COMP_LootableInventory_C_TryInitializeLootInventory");
static_assert(sizeof(COMP_LootableInventory_C_TryInitializeLootInventory) == 0x000002, "Wrong size on COMP_LootableInventory_C_TryInitializeLootInventory");
static_assert(offsetof(COMP_LootableInventory_C_TryInitializeLootInventory, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'COMP_LootableInventory_C_TryInitializeLootInventory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryInitializeLootInventory, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'COMP_LootableInventory_C_TryInitializeLootInventory::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.TryGenerateLoot
// 0x0050 (0x0050 - 0x0000)
struct COMP_LootableInventory_C_TryGenerateLoot final
{
public:
	struct FRandomStream                          RandomStream;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor)
	struct FSTRUCT_ReferencedLootTable            ReferencedTable;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLootSeed_Seed;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRandomStream                          CallFunc_MakeRandomStream_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_ReferencedLootTable            CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LootableInventory_C_TryGenerateLoot) == 0x000008, "Wrong alignment on COMP_LootableInventory_C_TryGenerateLoot");
static_assert(sizeof(COMP_LootableInventory_C_TryGenerateLoot) == 0x000050, "Wrong size on COMP_LootableInventory_C_TryGenerateLoot");
static_assert(offsetof(COMP_LootableInventory_C_TryGenerateLoot, RandomStream) == 0x000000, "Member 'COMP_LootableInventory_C_TryGenerateLoot::RandomStream' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryGenerateLoot, ReferencedTable) == 0x000008, "Member 'COMP_LootableInventory_C_TryGenerateLoot::ReferencedTable' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryGenerateLoot, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'COMP_LootableInventory_C_TryGenerateLoot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryGenerateLoot, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'COMP_LootableInventory_C_TryGenerateLoot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryGenerateLoot, Temp_int_Array_Index_Variable) == 0x000020, "Member 'COMP_LootableInventory_C_TryGenerateLoot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryGenerateLoot, CallFunc_GetLootSeed_Seed) == 0x000024, "Member 'COMP_LootableInventory_C_TryGenerateLoot::CallFunc_GetLootSeed_Seed' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryGenerateLoot, CallFunc_MakeRandomStream_ReturnValue) == 0x000028, "Member 'COMP_LootableInventory_C_TryGenerateLoot::CallFunc_MakeRandomStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryGenerateLoot, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'COMP_LootableInventory_C_TryGenerateLoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryGenerateLoot, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'COMP_LootableInventory_C_TryGenerateLoot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryGenerateLoot, CallFunc_Array_Get_Item) == 0x000038, "Member 'COMP_LootableInventory_C_TryGenerateLoot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryGenerateLoot, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'COMP_LootableInventory_C_TryGenerateLoot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryGenerateLoot, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'COMP_LootableInventory_C_TryGenerateLoot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.BindLootBagEvents
// 0x0010 (0x0010 - 0x0000)
struct COMP_LootableInventory_C_BindLootBagEvents final
{
public:
	TDelegate<void(class UInventoryBag_C* Bag, int32 SlotIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(COMP_LootableInventory_C_BindLootBagEvents) == 0x000004, "Wrong alignment on COMP_LootableInventory_C_BindLootBagEvents");
static_assert(sizeof(COMP_LootableInventory_C_BindLootBagEvents) == 0x000010, "Wrong size on COMP_LootableInventory_C_BindLootBagEvents");
static_assert(offsetof(COMP_LootableInventory_C_BindLootBagEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'COMP_LootableInventory_C_BindLootBagEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.TryBindCompartmentEvents
// 0x0014 (0x0014 - 0x0000)
struct COMP_LootableInventory_C_TryBindCompartmentEvents final
{
public:
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LootableInventory_C_TryBindCompartmentEvents) == 0x000004, "Wrong alignment on COMP_LootableInventory_C_TryBindCompartmentEvents");
static_assert(sizeof(COMP_LootableInventory_C_TryBindCompartmentEvents) == 0x000014, "Wrong size on COMP_LootableInventory_C_TryBindCompartmentEvents");
static_assert(offsetof(COMP_LootableInventory_C_TryBindCompartmentEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'COMP_LootableInventory_C_TryBindCompartmentEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TryBindCompartmentEvents, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'COMP_LootableInventory_C_TryBindCompartmentEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.TrySetLootVisibility
// 0x0020 (0x0020 - 0x0000)
struct COMP_LootableInventory_C_TrySetLootVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         PickupActor;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        LootBag;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LootableInventory_C_TrySetLootVisibility) == 0x000008, "Wrong alignment on COMP_LootableInventory_C_TrySetLootVisibility");
static_assert(sizeof(COMP_LootableInventory_C_TrySetLootVisibility) == 0x000020, "Wrong size on COMP_LootableInventory_C_TrySetLootVisibility");
static_assert(offsetof(COMP_LootableInventory_C_TrySetLootVisibility, VisibilityState) == 0x000000, "Member 'COMP_LootableInventory_C_TrySetLootVisibility::VisibilityState' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySetLootVisibility, Result) == 0x000001, "Member 'COMP_LootableInventory_C_TrySetLootVisibility::Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySetLootVisibility, PickupActor) == 0x000008, "Member 'COMP_LootableInventory_C_TrySetLootVisibility::PickupActor' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySetLootVisibility, LootBag) == 0x000010, "Member 'COMP_LootableInventory_C_TrySetLootVisibility::LootBag' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySetLootVisibility, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000018, "Member 'COMP_LootableInventory_C_TrySetLootVisibility::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.ForceSetLootVisibility
// 0x0068 (0x0068 - 0x0000)
struct COMP_LootableInventory_C_ForceSetLootVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         PickupActor;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        LootBag;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UITEM_Base_C*>                   CallFunc_GetItemArray_Items;                       // 0x0030(0x0010)(ReferenceParm)
	class UITEM_Base_C*                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         CallFunc_GetLinkedPickup_Result;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByIndex_Bag;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LootableInventory_C_ForceSetLootVisibility) == 0x000008, "Wrong alignment on COMP_LootableInventory_C_ForceSetLootVisibility");
static_assert(sizeof(COMP_LootableInventory_C_ForceSetLootVisibility) == 0x000068, "Wrong size on COMP_LootableInventory_C_ForceSetLootVisibility");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, VisibilityState) == 0x000000, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::VisibilityState' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, PickupActor) == 0x000008, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::PickupActor' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, LootBag) == 0x000010, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::LootBag' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, Temp_int_Array_Index_Variable) == 0x000024, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, CallFunc_GetItemArray_Items) == 0x000030, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::CallFunc_GetItemArray_Items' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, CallFunc_Array_Get_Item) == 0x000040, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, CallFunc_GetLinkedPickup_Result) == 0x000050, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::CallFunc_GetLinkedPickup_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceSetLootVisibility, CallFunc_GetBagByIndex_Bag) == 0x000060, "Member 'COMP_LootableInventory_C_ForceSetLootVisibility::CallFunc_GetBagByIndex_Bag' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.ForceUpdatePickupVisibility
// 0x0010 (0x0010 - 0x0000)
struct COMP_LootableInventory_C_ForceUpdatePickupVisibility final
{
public:
	class APICKUP_Base_C*                         PickupActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRoomAssignmentType_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LootableInventory_C_ForceUpdatePickupVisibility) == 0x000008, "Wrong alignment on COMP_LootableInventory_C_ForceUpdatePickupVisibility");
static_assert(sizeof(COMP_LootableInventory_C_ForceUpdatePickupVisibility) == 0x000010, "Wrong size on COMP_LootableInventory_C_ForceUpdatePickupVisibility");
static_assert(offsetof(COMP_LootableInventory_C_ForceUpdatePickupVisibility, PickupActor) == 0x000000, "Member 'COMP_LootableInventory_C_ForceUpdatePickupVisibility::PickupActor' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ForceUpdatePickupVisibility, CallFunc_SetRoomAssignmentType_ReturnValue) == 0x000008, "Member 'COMP_LootableInventory_C_ForceUpdatePickupVisibility::CallFunc_SetRoomAssignmentType_ReturnValue' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.TrySpawnPickupItem
// 0x0310 (0x0310 - 0x0000)
struct COMP_LootableInventory_C_TrySpawnPickupItem final
{
public:
	class UITEM_Base_C*                           LootItem;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        LootBag;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_Base_C*                         PickupItem;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_Base_C*                         LootPickup;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PickupActorRotation;                               // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                PickupActorLocation;                               // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldCenterOffset;                                 // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CenterOffsetRatios;                                // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ItemGridCoords;                                    // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetLootItemRotation_Rotation;             // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_Result;                      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords; // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetRotatedGridSize_Result;                // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ApplyPickupPackingTransform_LocalMeshOrigin; // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ApplyPickupPackingTransform_MeshHalfExtents; // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByIndex_Bag;                        // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0xC];                                      // 0x0174(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0180(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x01D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25D[0x3];                                      // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0260(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0270(0x0030)(IsPlainOldData, NoDestructor)
	class APICKUP_Base_C*                         CallFunc_GetLinkedPickup_Result;                   // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridHeight_Result;                     // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_Base_C*                         CallFunc_CreateLinkedPickupItem_PickupActor;       // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridWidth_Result;                      // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LootableInventory_C_TrySpawnPickupItem) == 0x000010, "Wrong alignment on COMP_LootableInventory_C_TrySpawnPickupItem");
static_assert(sizeof(COMP_LootableInventory_C_TrySpawnPickupItem) == 0x000310, "Wrong size on COMP_LootableInventory_C_TrySpawnPickupItem");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, LootItem) == 0x000000, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::LootItem' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, LootBag) == 0x000008, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::LootBag' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, PickupItem) == 0x000010, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::PickupItem' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, LootPickup) == 0x000018, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::LootPickup' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, PickupActorRotation) == 0x000020, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::PickupActorRotation' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, PickupActorLocation) == 0x00002C, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::PickupActorLocation' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, WorldCenterOffset) == 0x000038, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::WorldCenterOffset' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CenterOffsetRatios) == 0x000044, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CenterOffsetRatios' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, ItemGridCoords) == 0x000050, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::ItemGridCoords' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00005C, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000068, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakRotator_Roll) == 0x00006C, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakRotator_Pitch) == 0x000070, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakRotator_Yaw) == 0x000074, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x000078, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000088, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000090, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_GetLootItemRotation_Rotation) == 0x000094, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_GetLootItemRotation_Rotation' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakVector2D_Y) == 0x0000A4, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakVector2D_X_1) == 0x0000A8, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakVector2D_Y_1) == 0x0000AC, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_GetSlotIndex_Result) == 0x0000B0, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_GetSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords) == 0x0000B4, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_GetRotatedGridSize_Result) == 0x0000BC, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_GetRotatedGridSize_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x0000C4, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000CC, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000D0, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000D4, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000D8, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_MakeVector2D_ReturnValue) == 0x0000DC, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_ApplyPickupPackingTransform_LocalMeshOrigin) == 0x0000E4, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_ApplyPickupPackingTransform_LocalMeshOrigin' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_ApplyPickupPackingTransform_MeshHalfExtents) == 0x0000F0, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_ApplyPickupPackingTransform_MeshHalfExtents' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000FC, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000104, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_GetUpVector_ReturnValue) == 0x00010C, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_GetForwardVector_ReturnValue) == 0x000118, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakVector_X) == 0x000124, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakVector_Y) == 0x000128, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakVector_Z) == 0x00012C, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_GetRightVector_ReturnValue) == 0x000130, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00013C, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000140, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_IsValid_ReturnValue_1) == 0x00014C, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_GetBagByIndex_Bag) == 0x000150, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_GetBagByIndex_Bag' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000158, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Multiply_VectorVector_ReturnValue) == 0x00015C, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakVector_X_1) == 0x000168, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakVector_Y_1) == 0x00016C, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_BreakVector_Z_1) == 0x000170, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_MakeTransform_ReturnValue) == 0x000180, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001B0, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0001BC, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Add_VectorVector_ReturnValue) == 0x0001C8, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x0001D4, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_K2_SetActorTransform_ReturnValue) == 0x00025C, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000260, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_MakeTransform_ReturnValue_1) == 0x000270, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_GetLinkedPickup_Result) == 0x0002A0, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_GetLinkedPickup_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002A8, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_GetGridHeight_Result) == 0x0002B4, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_GetGridHeight_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0002B8, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0002C4, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0002C8, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0002CC, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_CreateLinkedPickupItem_PickupActor) == 0x0002D0, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_CreateLinkedPickupItem_PickupActor' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0002D8, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0002DC, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_GetGridWidth_Result) == 0x0002E0, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_GetGridWidth_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0002E4, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0002E8, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0002EC, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0002F0, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0002F4, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItem, CallFunc_MakeVector_ReturnValue) == 0x0002F8, "Member 'COMP_LootableInventory_C_TrySpawnPickupItem::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.EVENT_OnBagLootChanged
// 0x0020 (0x0020 - 0x0000)
struct COMP_LootableInventory_C_EVENT_OnBagLootChanged final
{
public:
	class UInventoryBag_C*                        Bag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_Base_C*                         CallFunc_TrySpawnPickupItem_PickupItem;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LootableInventory_C_EVENT_OnBagLootChanged) == 0x000008, "Wrong alignment on COMP_LootableInventory_C_EVENT_OnBagLootChanged");
static_assert(sizeof(COMP_LootableInventory_C_EVENT_OnBagLootChanged) == 0x000020, "Wrong size on COMP_LootableInventory_C_EVENT_OnBagLootChanged");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBagLootChanged, Bag) == 0x000000, "Member 'COMP_LootableInventory_C_EVENT_OnBagLootChanged::Bag' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBagLootChanged, SlotIndex) == 0x000008, "Member 'COMP_LootableInventory_C_EVENT_OnBagLootChanged::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBagLootChanged, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'COMP_LootableInventory_C_EVENT_OnBagLootChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBagLootChanged, CallFunc_GetSlotItem_Item) == 0x000010, "Member 'COMP_LootableInventory_C_EVENT_OnBagLootChanged::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBagLootChanged, CallFunc_TrySpawnPickupItem_PickupItem) == 0x000018, "Member 'COMP_LootableInventory_C_EVENT_OnBagLootChanged::CallFunc_TrySpawnPickupItem_PickupItem' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.TrySpawnPickupItems
// 0x0060 (0x0060 - 0x0000)
struct COMP_LootableInventory_C_TrySpawnPickupItems final
{
public:
	class UITEM_Base_C*                           CurrentItem;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        LootBag;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         CallFunc_GetLinkedPickup_Result;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UITEM_Base_C*>                   CallFunc_GetItemArray_Items;                       // 0x0030(0x0010)(ReferenceParm)
	class UITEM_Base_C*                           CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         CallFunc_TrySpawnPickupItem_PickupItem;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByIndex_Bag;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LootableInventory_C_TrySpawnPickupItems) == 0x000008, "Wrong alignment on COMP_LootableInventory_C_TrySpawnPickupItems");
static_assert(sizeof(COMP_LootableInventory_C_TrySpawnPickupItems) == 0x000060, "Wrong size on COMP_LootableInventory_C_TrySpawnPickupItems");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, CurrentItem) == 0x000000, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::CurrentItem' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, LootBag) == 0x000008, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::LootBag' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, Temp_int_Array_Index_Variable) == 0x000018, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, CallFunc_GetLinkedPickup_Result) == 0x000020, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::CallFunc_GetLinkedPickup_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, CallFunc_GetItemArray_Items) == 0x000030, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::CallFunc_GetItemArray_Items' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, CallFunc_Array_Get_Item) == 0x000040, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, CallFunc_IsValid_ReturnValue_1) == 0x00004D, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, CallFunc_TrySpawnPickupItem_PickupItem) == 0x000050, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::CallFunc_TrySpawnPickupItem_PickupItem' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_TrySpawnPickupItems, CallFunc_GetBagByIndex_Bag) == 0x000058, "Member 'COMP_LootableInventory_C_TrySpawnPickupItems::CallFunc_GetBagByIndex_Bag' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.OpenLootWindow
// 0x0030 (0x0030 - 0x0000)
struct COMP_LootableInventory_C_OpenLootWindow final
{
public:
	class APAWN_Hacker_Implant_C*                 Hacker;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Base_C*                       K2Node_DynamicCast_AsINTERACT_Base;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LootableInventory_C_OpenLootWindow) == 0x000008, "Wrong alignment on COMP_LootableInventory_C_OpenLootWindow");
static_assert(sizeof(COMP_LootableInventory_C_OpenLootWindow) == 0x000030, "Wrong size on COMP_LootableInventory_C_OpenLootWindow");
static_assert(offsetof(COMP_LootableInventory_C_OpenLootWindow, Hacker) == 0x000000, "Member 'COMP_LootableInventory_C_OpenLootWindow::Hacker' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_OpenLootWindow, CursorPrimitive) == 0x000008, "Member 'COMP_LootableInventory_C_OpenLootWindow::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_OpenLootWindow, CallFunc_GetNeuralHUD_Result) == 0x000010, "Member 'COMP_LootableInventory_C_OpenLootWindow::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_OpenLootWindow, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'COMP_LootableInventory_C_OpenLootWindow::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_OpenLootWindow, K2Node_DynamicCast_AsINTERACT_Base) == 0x000020, "Member 'COMP_LootableInventory_C_OpenLootWindow::K2Node_DynamicCast_AsINTERACT_Base' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_OpenLootWindow, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'COMP_LootableInventory_C_OpenLootWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.CloseLootWindow
// 0x0020 (0x0020 - 0x0000)
struct COMP_LootableInventory_C_CloseLootWindow final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LootableInventory_C_CloseLootWindow) == 0x000008, "Wrong alignment on COMP_LootableInventory_C_CloseLootWindow");
static_assert(sizeof(COMP_LootableInventory_C_CloseLootWindow) == 0x000020, "Wrong size on COMP_LootableInventory_C_CloseLootWindow");
static_assert(offsetof(COMP_LootableInventory_C_CloseLootWindow, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'COMP_LootableInventory_C_CloseLootWindow::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_CloseLootWindow, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000008, "Member 'COMP_LootableInventory_C_CloseLootWindow::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_CloseLootWindow, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'COMP_LootableInventory_C_CloseLootWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_CloseLootWindow, CallFunc_GetNeuralHUD_Result) == 0x000018, "Member 'COMP_LootableInventory_C_CloseLootWindow::CallFunc_GetNeuralHUD_Result' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.EVENT_OnBeginCompartmentOverlap
// 0x0138 (0x0138 - 0x0000)
struct COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APICKUP_Base_C*                         PickupActor;                                       // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APICKUP_Base_C*                         K2Node_DynamicCast_AsPICKUP_Base;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetItem_Result;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotted_Result;                         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetReflectionVector_ReturnValue;          // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetItem_Result_1;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCount_Result;                      // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_Result;                           // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetItemClass_Result;                      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0110(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GrantItem_Result;                         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetItem_Result_2;                         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap) == 0x000008, "Wrong alignment on COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap");
static_assert(sizeof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap) == 0x000138, "Wrong size on COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, OverlappedComponent) == 0x000000, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, OtherActor) == 0x000008, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, OtherComp) == 0x000010, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::OtherComp' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, OtherBodyIndex) == 0x000018, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, bFromSweep) == 0x00001C, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, SweepResult) == 0x000020, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::SweepResult' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, PickupActor) == 0x0000A8, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::PickupActor' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, K2Node_DynamicCast_AsPICKUP_Base) == 0x0000B0, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::K2Node_DynamicCast_AsPICKUP_Base' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x0000BC, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_GetItem_Result) == 0x0000C8, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_GetItem_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_GetOwner_ReturnValue) == 0x0000D0, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_IsSlotted_Result) == 0x0000D8, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_IsSlotted_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_GetActorForwardVector_ReturnValue) == 0x0000DC, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_Not_PreBool_ReturnValue) == 0x0000E8, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_GetReflectionVector_ReturnValue) == 0x0000EC, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_GetReflectionVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_GetItem_Result_1) == 0x0000F8, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_GetItem_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_GetItemCount_Result) == 0x000100, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_GetItemCount_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_AddItem_Result) == 0x000104, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_AddItem_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_GetItemClass_Result) == 0x000108, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_GetItemClass_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000110, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_GrantItem_Result) == 0x000120, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_GrantItem_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_GetItem_Result_2) == 0x000128, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_GetItem_Result_2' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'COMP_LootableInventory_C_EVENT_OnBeginCompartmentOverlap::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.InitializeInventory
// 0x0050 (0x0050 - 0x0000)
struct COMP_LootableInventory_C_InitializeInventory final
{
public:
	bool                                          GrantDefaultInventory;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        LootBag;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InventoryBagParams             CallFunc_Array_Get_Item;                           // 0x0010(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryFixupBag_Result;                       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByIndex_Bag;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_LootableInventory_C_InitializeInventory) == 0x000008, "Wrong alignment on COMP_LootableInventory_C_InitializeInventory");
static_assert(sizeof(COMP_LootableInventory_C_InitializeInventory) == 0x000050, "Wrong size on COMP_LootableInventory_C_InitializeInventory");
static_assert(offsetof(COMP_LootableInventory_C_InitializeInventory, GrantDefaultInventory) == 0x000000, "Member 'COMP_LootableInventory_C_InitializeInventory::GrantDefaultInventory' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_InitializeInventory, LootBag) == 0x000008, "Member 'COMP_LootableInventory_C_InitializeInventory::LootBag' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_InitializeInventory, CallFunc_Array_Get_Item) == 0x000010, "Member 'COMP_LootableInventory_C_InitializeInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_InitializeInventory, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'COMP_LootableInventory_C_InitializeInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_InitializeInventory, CallFunc_TryFixupBag_Result) == 0x000041, "Member 'COMP_LootableInventory_C_InitializeInventory::CallFunc_TryFixupBag_Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_InitializeInventory, CallFunc_GetBagByIndex_Bag) == 0x000048, "Member 'COMP_LootableInventory_C_InitializeInventory::CallFunc_GetBagByIndex_Bag' has a wrong offset!");

// Function COMP_LootableInventory.COMP_LootableInventory_C.ShouldCreateLinkedPickups
// 0x0002 (0x0002 - 0x0000)
struct COMP_LootableInventory_C_ShouldCreateLinkedPickups final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_LootableInventory_C_ShouldCreateLinkedPickups) == 0x000001, "Wrong alignment on COMP_LootableInventory_C_ShouldCreateLinkedPickups");
static_assert(sizeof(COMP_LootableInventory_C_ShouldCreateLinkedPickups) == 0x000002, "Wrong size on COMP_LootableInventory_C_ShouldCreateLinkedPickups");
static_assert(offsetof(COMP_LootableInventory_C_ShouldCreateLinkedPickups, Result) == 0x000000, "Member 'COMP_LootableInventory_C_ShouldCreateLinkedPickups::Result' has a wrong offset!");
static_assert(offsetof(COMP_LootableInventory_C_ShouldCreateLinkedPickups, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'COMP_LootableInventory_C_ShouldCreateLinkedPickups::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


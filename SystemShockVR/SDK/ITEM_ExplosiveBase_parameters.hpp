#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_ExplosiveBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "STRUCT_WeaponMode_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ITEM_ExplosiveBase.ITEM_ExplosiveBase_C.ExecuteUbergraph_ITEM_ExplosiveBase
// 0x0038 (0x0038 - 0x0000)
struct ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase) == 0x000008, "Wrong alignment on ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase");
static_assert(sizeof(ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase) == 0x000038, "Wrong size on ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase");
static_assert(offsetof(ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase, EntryPoint) == 0x000000, "Member 'ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase, Temp_object_Variable) == 0x000020, "Member 'ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase, K2Node_DynamicCast_AsAnim_Montage) == 0x000028, "Member 'ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000031, "Member 'ITEM_ExplosiveBase_C_ExecuteUbergraph_ITEM_ExplosiveBase::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function ITEM_ExplosiveBase.ITEM_ExplosiveBase_C.OnLoaded_F37DADE146CFC9EF519785AF17393ED0
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ExplosiveBase_C_OnLoaded_F37DADE146CFC9EF519785AF17393ED0 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ExplosiveBase_C_OnLoaded_F37DADE146CFC9EF519785AF17393ED0) == 0x000008, "Wrong alignment on ITEM_ExplosiveBase_C_OnLoaded_F37DADE146CFC9EF519785AF17393ED0");
static_assert(sizeof(ITEM_ExplosiveBase_C_OnLoaded_F37DADE146CFC9EF519785AF17393ED0) == 0x000008, "Wrong size on ITEM_ExplosiveBase_C_OnLoaded_F37DADE146CFC9EF519785AF17393ED0");
static_assert(offsetof(ITEM_ExplosiveBase_C_OnLoaded_F37DADE146CFC9EF519785AF17393ED0, Loaded) == 0x000000, "Member 'ITEM_ExplosiveBase_C_OnLoaded_F37DADE146CFC9EF519785AF17393ED0::Loaded' has a wrong offset!");

// Function ITEM_ExplosiveBase.ITEM_ExplosiveBase_C.IsExplosiveArmed
// 0x0038 (0x0038 - 0x0000)
struct ITEM_ExplosiveBase_C_IsExplosiveArmed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        CallFunc_GetHandheldItem_HandheldItem;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldExplosive_Base_C*         K2Node_DynamicCast_AsITEM_Handheld_Explosive_Base; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_ExplosiveBase_C*                  CallFunc_GetArmedExplosiveItem_Result;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ExplosiveBase_C_IsExplosiveArmed) == 0x000008, "Wrong alignment on ITEM_ExplosiveBase_C_IsExplosiveArmed");
static_assert(sizeof(ITEM_ExplosiveBase_C_IsExplosiveArmed) == 0x000038, "Wrong size on ITEM_ExplosiveBase_C_IsExplosiveArmed");
static_assert(offsetof(ITEM_ExplosiveBase_C_IsExplosiveArmed, Result) == 0x000000, "Member 'ITEM_ExplosiveBase_C_IsExplosiveArmed::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_IsExplosiveArmed, CallFunc_GetInventory_Inventory) == 0x000008, "Member 'ITEM_ExplosiveBase_C_IsExplosiveArmed::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_IsExplosiveArmed, CallFunc_GetHandheldItem_HandheldItem) == 0x000010, "Member 'ITEM_ExplosiveBase_C_IsExplosiveArmed::CallFunc_GetHandheldItem_HandheldItem' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_IsExplosiveArmed, K2Node_DynamicCast_AsITEM_Handheld_Explosive_Base) == 0x000018, "Member 'ITEM_ExplosiveBase_C_IsExplosiveArmed::K2Node_DynamicCast_AsITEM_Handheld_Explosive_Base' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_IsExplosiveArmed, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ITEM_ExplosiveBase_C_IsExplosiveArmed::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_IsExplosiveArmed, CallFunc_GetArmedExplosiveItem_Result) == 0x000028, "Member 'ITEM_ExplosiveBase_C_IsExplosiveArmed::CallFunc_GetArmedExplosiveItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_IsExplosiveArmed, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'ITEM_ExplosiveBase_C_IsExplosiveArmed::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ITEM_ExplosiveBase.ITEM_ExplosiveBase_C.GetIdealSpawnTransform
// 0x0330 (0x0330 - 0x0000)
struct ITEM_ExplosiveBase_C_GetIdealSpawnTransform final
{
public:
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             DisplayMeshTransform;                              // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetHeadTransform_Transform;               // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0xC];                                      // 0x0164(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x01C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24F[0x1];                                      // 0x024F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0298(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0300(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform) == 0x000010, "Wrong alignment on ITEM_ExplosiveBase_C_GetIdealSpawnTransform");
static_assert(sizeof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform) == 0x000330, "Wrong size on ITEM_ExplosiveBase_C_GetIdealSpawnTransform");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CharacterOwner) == 0x000000, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CharacterOwner' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, Transform) == 0x000010, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::Transform' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, DisplayMeshTransform) == 0x000040, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::DisplayMeshTransform' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_GetHeadTransform_Transform) == 0x000070, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_GetHeadTransform_Transform' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, K2Node_MakeArray_Array) == 0x0000A0, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakTransform_Rotation) == 0x0000BC, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakTransform_Scale) == 0x0000C8, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_MakeRotator_ReturnValue) == 0x0000D4, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x0000E0, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakTransform_Location_1) == 0x000110, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakTransform_Rotation_1) == 0x00011C, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakTransform_Scale_1) == 0x000128, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_ComposeRotators_ReturnValue) == 0x000134, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakTransform_Location_2) == 0x000140, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakTransform_Rotation_2) == 0x00014C, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakTransform_Scale_2) == 0x000158, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_MakeTransform_ReturnValue) == 0x000170, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakTransform_Location_3) == 0x0001A0, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakTransform_Rotation_3) == 0x0001AC, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakTransform_Scale_3) == 0x0001B8, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_LineTraceSingle_OutHit) == 0x0001C4, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_LineTraceSingle_ReturnValue) == 0x00024C, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_bBlockingHit) == 0x00024D, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_bInitialOverlap) == 0x00024E, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_Time) == 0x000250, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_Distance) == 0x000254, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_Location) == 0x000258, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_ImpactPoint) == 0x000264, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_Normal) == 0x000270, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_ImpactNormal) == 0x00027C, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_PhysMat) == 0x000288, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_HitActor) == 0x000290, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_HitComponent) == 0x000298, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_HitBoneName) == 0x0002A0, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_HitItem) == 0x0002A8, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_ElementIndex) == 0x0002AC, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_FaceIndex) == 0x0002B0, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_TraceStart) == 0x0002B4, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_BreakHitResult_TraceEnd) == 0x0002C0, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002CC, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_Normal_ReturnValue) == 0x0002D8, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002E4, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x0002F0, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetIdealSpawnTransform, CallFunc_MakeTransform_ReturnValue_1) == 0x000300, "Member 'ITEM_ExplosiveBase_C_GetIdealSpawnTransform::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");

// Function ITEM_ExplosiveBase.ITEM_ExplosiveBase_C.SpawnExplosive
// 0x00A0 (0x00A0 - 0x0000)
struct ITEM_ExplosiveBase_C_SpawnExplosive final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class APAWN_SystemShockCharacter_C*           Instigator;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosiveProjectile_Base_C*            Result;                                            // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreaming*                        StreamingLevel;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevel*                                 CallFunc_GetLoadedLevel_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosiveProjectile_Base_C*            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevel*                                 CallFunc_GetLoadedLevel_ReturnValue_1;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AExplosiveProjectile_Base_C*            CallFunc_SpawnActorInLevel_ReturnValue;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreaming*                        CallFunc_GetPrimaryStreamingLevel_Level;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ExplosiveBase_C_SpawnExplosive) == 0x000010, "Wrong alignment on ITEM_ExplosiveBase_C_SpawnExplosive");
static_assert(sizeof(ITEM_ExplosiveBase_C_SpawnExplosive) == 0x0000A0, "Wrong size on ITEM_ExplosiveBase_C_SpawnExplosive");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, Transform) == 0x000000, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::Transform' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, Instigator) == 0x000030, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::Instigator' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, Result) == 0x000038, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, StreamingLevel) == 0x000040, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::StreamingLevel' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, CallFunc_GetLoadedLevel_ReturnValue) == 0x000048, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::CallFunc_GetLoadedLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000058, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, CallFunc_FinishSpawningActor_ReturnValue) == 0x000060, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, CallFunc_GetLoadedLevel_ReturnValue_1) == 0x000070, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::CallFunc_GetLoadedLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, CallFunc_GetGameInstance_ReturnValue) == 0x000078, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, K2Node_DynamicCast_AsGI_Single_Player) == 0x000080, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, CallFunc_SpawnActorInLevel_ReturnValue) == 0x000090, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::CallFunc_SpawnActorInLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_SpawnExplosive, CallFunc_GetPrimaryStreamingLevel_Level) == 0x000098, "Member 'ITEM_ExplosiveBase_C_SpawnExplosive::CallFunc_GetPrimaryStreamingLevel_Level' has a wrong offset!");

// Function ITEM_ExplosiveBase.ITEM_ExplosiveBase_C.UseConsumable
// 0x03C0 (0x03C0 - 0x0000)
struct ITEM_ExplosiveBase_C_UseConsumable final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 ConsumedItem;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ThrowVelocity;                                     // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ThrowForwardVector;                                // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SignedAngleToTarget;                               // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             ExplosiveWeaponDataTable;                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AExplosiveProjectile_Base_C*            SpawnedExplosive;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SpawnTransform;                                    // 0x0040(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetIdealSpawnTransform_Transform;         // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetHeadTransform_Transform;               // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetContactDamageFromSpeed_ContactDamage;  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetWeaponModeNameByIndex_ModeName;        // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0110(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x3];                                      // 0x0211(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_1;     // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0250(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue_1;                  // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x030C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignedAngleBetweenOnPlane_ReturnValue;    // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BlueprintSuggestProjectileVelocity_TossVelocity; // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BlueprintSuggestProjectileVelocity_ReturnValue; // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0378(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AProximityMineProjectile_C*             K2Node_DynamicCast_AsProximity_Mine_Projectile;    // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGrenadeProjectile_Base_C*              K2Node_DynamicCast_AsGrenade_Projectile_Base;      // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AExplosiveProjectile_Base_C*            CallFunc_SpawnExplosive_Result;                    // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 CallFunc_UseConsumable_ConsumedItem;               // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ExplosiveBase_C_UseConsumable) == 0x000010, "Wrong alignment on ITEM_ExplosiveBase_C_UseConsumable");
static_assert(sizeof(ITEM_ExplosiveBase_C_UseConsumable) == 0x0003C0, "Wrong size on ITEM_ExplosiveBase_C_UseConsumable");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, Character) == 0x000000, "Member 'ITEM_ExplosiveBase_C_UseConsumable::Character' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, ConsumedItem) == 0x000008, "Member 'ITEM_ExplosiveBase_C_UseConsumable::ConsumedItem' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, ThrowVelocity) == 0x000010, "Member 'ITEM_ExplosiveBase_C_UseConsumable::ThrowVelocity' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, ThrowForwardVector) == 0x00001C, "Member 'ITEM_ExplosiveBase_C_UseConsumable::ThrowForwardVector' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, SignedAngleToTarget) == 0x000028, "Member 'ITEM_ExplosiveBase_C_UseConsumable::SignedAngleToTarget' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, ExplosiveWeaponDataTable) == 0x000030, "Member 'ITEM_ExplosiveBase_C_UseConsumable::ExplosiveWeaponDataTable' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, SpawnedExplosive) == 0x000038, "Member 'ITEM_ExplosiveBase_C_UseConsumable::SpawnedExplosive' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, SpawnTransform) == 0x000040, "Member 'ITEM_ExplosiveBase_C_UseConsumable::SpawnTransform' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_GetIdealSpawnTransform_Transform) == 0x000070, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_GetIdealSpawnTransform_Transform' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_GetHeadTransform_Transform) == 0x0000A0, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_GetHeadTransform_Transform' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Rotation) == 0x0000DC, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Scale) == 0x0000E8, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_GetForwardVector_ReturnValue) == 0x0000F4, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_GetContactDamageFromSpeed_ContactDamage) == 0x000100, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_GetContactDamageFromSpeed_ContactDamage' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_GetWeaponModeNameByIndex_ModeName) == 0x000104, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_GetWeaponModeNameByIndex_ModeName' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000110, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000210, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_GetWeaponPropertyValueByType_Value) == 0x000214, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_GetWeaponPropertyValueByType_Value_1) == 0x000218, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_GetWeaponPropertyValueByType_Value_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Location_1) == 0x00021C, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Rotation_1) == 0x000228, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Scale_1) == 0x000234, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000240, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000244, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Normal_ReturnValue) == 0x000250, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00025C, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Location_2) == 0x000268, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Rotation_2) == 0x000274, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Scale_2) == 0x000280, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Location_3) == 0x00028C, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Rotation_3) == 0x000298, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Scale_3) == 0x0002A4, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Vector_Up_ReturnValue) == 0x0002B0, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002BC, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_VSize_ReturnValue) == 0x0002C8, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_SignOfFloat_ReturnValue) == 0x0002CC, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0002D0, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Abs_ReturnValue) == 0x0002D4, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_RotateAngleAxis_ReturnValue) == 0x0002D8, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002E4, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002E8, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Add_VectorVector_ReturnValue) == 0x0002F4, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Vector_Up_ReturnValue_1) == 0x000300, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Vector_Up_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Location_4) == 0x00030C, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Rotation_4) == 0x000318, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Scale_4) == 0x000324, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000330, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_SignedAngleBetweenOnPlane_ReturnValue) == 0x00033C, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_SignedAngleBetweenOnPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Location_5) == 0x000340, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Rotation_5) == 0x00034C, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BreakTransform_Scale_5) == 0x000358, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BlueprintSuggestProjectileVelocity_TossVelocity) == 0x000364, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BlueprintSuggestProjectileVelocity_TossVelocity' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_BlueprintSuggestProjectileVelocity_ReturnValue) == 0x000370, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_BlueprintSuggestProjectileVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000378, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x000380, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000384, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, K2Node_DynamicCast_AsProximity_Mine_Projectile) == 0x000388, "Member 'ITEM_ExplosiveBase_C_UseConsumable::K2Node_DynamicCast_AsProximity_Mine_Projectile' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, K2Node_DynamicCast_bSuccess) == 0x000390, "Member 'ITEM_ExplosiveBase_C_UseConsumable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, K2Node_DynamicCast_AsGrenade_Projectile_Base) == 0x000398, "Member 'ITEM_ExplosiveBase_C_UseConsumable::K2Node_DynamicCast_AsGrenade_Projectile_Base' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, K2Node_DynamicCast_bSuccess_1) == 0x0003A0, "Member 'ITEM_ExplosiveBase_C_UseConsumable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_SpawnExplosive_Result) == 0x0003A8, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_SpawnExplosive_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_UseConsumable, CallFunc_UseConsumable_ConsumedItem) == 0x0003B0, "Member 'ITEM_ExplosiveBase_C_UseConsumable::CallFunc_UseConsumable_ConsumedItem' has a wrong offset!");

// Function ITEM_ExplosiveBase.ITEM_ExplosiveBase_C.GetContactDamageFromSpeed
// 0x0010 (0x0010 - 0x0000)
struct ITEM_ExplosiveBase_C_GetContactDamageFromSpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ContactDamage;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ExplosiveBase_C_GetContactDamageFromSpeed) == 0x000004, "Wrong alignment on ITEM_ExplosiveBase_C_GetContactDamageFromSpeed");
static_assert(sizeof(ITEM_ExplosiveBase_C_GetContactDamageFromSpeed) == 0x000010, "Wrong size on ITEM_ExplosiveBase_C_GetContactDamageFromSpeed");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetContactDamageFromSpeed, Speed) == 0x000000, "Member 'ITEM_ExplosiveBase_C_GetContactDamageFromSpeed::Speed' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetContactDamageFromSpeed, ContactDamage) == 0x000004, "Member 'ITEM_ExplosiveBase_C_GetContactDamageFromSpeed::ContactDamage' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetContactDamageFromSpeed, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'ITEM_ExplosiveBase_C_GetContactDamageFromSpeed::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetContactDamageFromSpeed, CallFunc_Round_ReturnValue) == 0x00000C, "Member 'ITEM_ExplosiveBase_C_GetContactDamageFromSpeed::CallFunc_Round_ReturnValue' has a wrong offset!");

// Function ITEM_ExplosiveBase.ITEM_ExplosiveBase_C.GetActivateMontage
// 0x0038 (0x0038 - 0x0000)
struct ITEM_ExplosiveBase_C_GetActivateMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetActivateMontage_Montage;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ExplosiveBase_C_GetActivateMontage) == 0x000008, "Wrong alignment on ITEM_ExplosiveBase_C_GetActivateMontage");
static_assert(sizeof(ITEM_ExplosiveBase_C_GetActivateMontage) == 0x000038, "Wrong size on ITEM_ExplosiveBase_C_GetActivateMontage");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetActivateMontage, Montage) == 0x000000, "Member 'ITEM_ExplosiveBase_C_GetActivateMontage::Montage' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetActivateMontage, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'ITEM_ExplosiveBase_C_GetActivateMontage::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetActivateMontage, K2Node_DynamicCast_AsAnim_Montage) == 0x000010, "Member 'ITEM_ExplosiveBase_C_GetActivateMontage::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetActivateMontage, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_ExplosiveBase_C_GetActivateMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetActivateMontage, CallFunc_Lerp_ReturnValue) == 0x00001C, "Member 'ITEM_ExplosiveBase_C_GetActivateMontage::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetActivateMontage, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'ITEM_ExplosiveBase_C_GetActivateMontage::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetActivateMontage, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'ITEM_ExplosiveBase_C_GetActivateMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetActivateMontage, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000022, "Member 'ITEM_ExplosiveBase_C_GetActivateMontage::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetActivateMontage, CallFunc_GetActivateMontage_Montage) == 0x000028, "Member 'ITEM_ExplosiveBase_C_GetActivateMontage::CallFunc_GetActivateMontage_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetActivateMontage, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'ITEM_ExplosiveBase_C_GetActivateMontage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ITEM_ExplosiveBase.ITEM_ExplosiveBase_C.CanActivate
// 0x0030 (0x0030 - 0x0000)
struct ITEM_ExplosiveBase_C_CanActivate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsExplosiveArmed_Result;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanActivate_Result;                       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        CallFunc_GetHandheldItem_HandheldItem;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldExplosive_Base_C*         K2Node_DynamicCast_AsITEM_Handheld_Explosive_Base; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ExplosiveBase_C_CanActivate) == 0x000008, "Wrong alignment on ITEM_ExplosiveBase_C_CanActivate");
static_assert(sizeof(ITEM_ExplosiveBase_C_CanActivate) == 0x000030, "Wrong size on ITEM_ExplosiveBase_C_CanActivate");
static_assert(offsetof(ITEM_ExplosiveBase_C_CanActivate, Character) == 0x000000, "Member 'ITEM_ExplosiveBase_C_CanActivate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_CanActivate, Result) == 0x000008, "Member 'ITEM_ExplosiveBase_C_CanActivate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_CanActivate, CallFunc_IsExplosiveArmed_Result) == 0x000009, "Member 'ITEM_ExplosiveBase_C_CanActivate::CallFunc_IsExplosiveArmed_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_CanActivate, CallFunc_CanActivate_Result) == 0x00000A, "Member 'ITEM_ExplosiveBase_C_CanActivate::CallFunc_CanActivate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_CanActivate, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'ITEM_ExplosiveBase_C_CanActivate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_CanActivate, CallFunc_GetInventory_Inventory) == 0x000010, "Member 'ITEM_ExplosiveBase_C_CanActivate::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_CanActivate, CallFunc_GetHandheldItem_HandheldItem) == 0x000018, "Member 'ITEM_ExplosiveBase_C_CanActivate::CallFunc_GetHandheldItem_HandheldItem' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_CanActivate, K2Node_DynamicCast_AsITEM_Handheld_Explosive_Base) == 0x000020, "Member 'ITEM_ExplosiveBase_C_CanActivate::K2Node_DynamicCast_AsITEM_Handheld_Explosive_Base' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_CanActivate, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ITEM_ExplosiveBase_C_CanActivate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_CanActivate, CallFunc_IsEquipped_Result) == 0x000029, "Member 'ITEM_ExplosiveBase_C_CanActivate::CallFunc_IsEquipped_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_CanActivate, CallFunc_Not_PreBool_ReturnValue_1) == 0x00002A, "Member 'ITEM_ExplosiveBase_C_CanActivate::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function ITEM_ExplosiveBase.ITEM_ExplosiveBase_C.Activate
// 0x0200 (0x0200 - 0x0000)
struct ITEM_ExplosiveBase_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DistanceToTarget;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RayDirection;                                      // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RayOrigin;                                         // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_Result;                       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	float                                         Temp_float_Variable;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayActivateMontage_Result;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Activate_Result;                          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenToWorld_WorldPosition;     // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenToWorld_WorldDirection;    // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenToWorld_ReturnValue;       // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SuggestProjectileVelocity_CustomArc_OutLaunchVelocity; // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SuggestProjectileVelocity_CustomArc_ReturnValue; // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00E4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17E[0x2];                                      // 0x017E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ExplosiveBase_C_Activate) == 0x000008, "Wrong alignment on ITEM_ExplosiveBase_C_Activate");
static_assert(sizeof(ITEM_ExplosiveBase_C_Activate) == 0x000200, "Wrong size on ITEM_ExplosiveBase_C_Activate");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, Character) == 0x000000, "Member 'ITEM_ExplosiveBase_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, Result) == 0x000008, "Member 'ITEM_ExplosiveBase_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, DistanceToTarget) == 0x00000C, "Member 'ITEM_ExplosiveBase_C_Activate::DistanceToTarget' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, TargetLocation) == 0x000010, "Member 'ITEM_ExplosiveBase_C_Activate::TargetLocation' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, RayDirection) == 0x00001C, "Member 'ITEM_ExplosiveBase_C_Activate::RayDirection' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, RayOrigin) == 0x000028, "Member 'ITEM_ExplosiveBase_C_Activate::RayOrigin' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_CanActivate_Result) == 0x000034, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_CanActivate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, K2Node_MakeArray_Array) == 0x000038, "Member 'ITEM_ExplosiveBase_C_Activate::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, Temp_float_Variable) == 0x000048, "Member 'ITEM_ExplosiveBase_C_Activate::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakVector_X) == 0x00004C, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakVector_Y) == 0x000050, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakVector_Z) == 0x000054, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakVector_X_1) == 0x000058, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakVector_Y_1) == 0x00005C, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakVector_Z_1) == 0x000060, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_Less_FloatFloat_ReturnValue) == 0x000064, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000065, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BooleanAND_ReturnValue) == 0x000066, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, Temp_float_Variable_1) == 0x000068, "Member 'ITEM_ExplosiveBase_C_Activate::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00006C, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_CanPlayActivateMontage_Result) == 0x000070, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_CanPlayActivateMontage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_Activate_Result) == 0x000071, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_Activate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_GetController_ReturnValue) == 0x000078, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, K2Node_DynamicCast_AsPlayer_Controller) == 0x000080, "Member 'ITEM_ExplosiveBase_C_Activate::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'ITEM_ExplosiveBase_C_Activate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, Temp_bool_Variable) == 0x000089, "Member 'ITEM_ExplosiveBase_C_Activate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_GetMousePosition_LocationX) == 0x00008C, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_GetMousePosition_LocationY) == 0x000090, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_GetMousePosition_ReturnValue) == 0x000094, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_MakeVector2D_ReturnValue) == 0x000098, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, K2Node_Select_Default) == 0x0000A0, "Member 'ITEM_ExplosiveBase_C_Activate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_DeprojectScreenToWorld_WorldPosition) == 0x0000A4, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_DeprojectScreenToWorld_WorldPosition' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_DeprojectScreenToWorld_WorldDirection) == 0x0000B0, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_DeprojectScreenToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_DeprojectScreenToWorld_ReturnValue) == 0x0000BC, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_DeprojectScreenToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_SuggestProjectileVelocity_CustomArc_OutLaunchVelocity) == 0x0000C0, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_SuggestProjectileVelocity_CustomArc_OutLaunchVelocity' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_SuggestProjectileVelocity_CustomArc_ReturnValue) == 0x0000CC, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_SuggestProjectileVelocity_CustomArc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_VSize_ReturnValue) == 0x0000D0, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_FClamp_ReturnValue) == 0x0000D4, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000D8, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_LineTraceSingle_OutHit) == 0x0000E4, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_LineTraceSingle_ReturnValue) == 0x00016C, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_Add_VectorVector_ReturnValue) == 0x000170, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_bBlockingHit) == 0x00017C, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_bInitialOverlap) == 0x00017D, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_Time) == 0x000180, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_Distance) == 0x000184, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_Location) == 0x000188, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_ImpactPoint) == 0x000194, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_ImpactNormal) == 0x0001AC, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_PhysMat) == 0x0001B8, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_HitActor) == 0x0001C0, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_HitComponent) == 0x0001C8, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_HitBoneName) == 0x0001D0, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_HitItem) == 0x0001D8, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_ElementIndex) == 0x0001DC, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_FaceIndex) == 0x0001E0, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_TraceStart) == 0x0001E4, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ITEM_ExplosiveBase_C_Activate, CallFunc_BreakHitResult_TraceEnd) == 0x0001F0, "Member 'ITEM_ExplosiveBase_C_Activate::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function ITEM_ExplosiveBase.ITEM_ExplosiveBase_C.GetInventoryItemDetailsClass
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ExplosiveBase_C_GetInventoryItemDetailsClass final
{
public:
	class UClass*                                 InventoryItemDetailsWidget;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ExplosiveBase_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong alignment on ITEM_ExplosiveBase_C_GetInventoryItemDetailsClass");
static_assert(sizeof(ITEM_ExplosiveBase_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong size on ITEM_ExplosiveBase_C_GetInventoryItemDetailsClass");
static_assert(offsetof(ITEM_ExplosiveBase_C_GetInventoryItemDetailsClass, InventoryItemDetailsWidget) == 0x000000, "Member 'ITEM_ExplosiveBase_C_GetInventoryItemDetailsClass::InventoryItemDetailsWidget' has a wrong offset!");

// Function ITEM_ExplosiveBase.ITEM_ExplosiveBase_C.HasWorldInteraction
// 0x0001 (0x0001 - 0x0000)
struct ITEM_ExplosiveBase_C_HasWorldInteraction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ExplosiveBase_C_HasWorldInteraction) == 0x000001, "Wrong alignment on ITEM_ExplosiveBase_C_HasWorldInteraction");
static_assert(sizeof(ITEM_ExplosiveBase_C_HasWorldInteraction) == 0x000001, "Wrong size on ITEM_ExplosiveBase_C_HasWorldInteraction");
static_assert(offsetof(ITEM_ExplosiveBase_C_HasWorldInteraction, Result) == 0x000000, "Member 'ITEM_ExplosiveBase_C_HasWorldInteraction::Result' has a wrong offset!");

}


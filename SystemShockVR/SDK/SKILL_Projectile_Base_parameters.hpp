#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SKILL_Projectile_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.GetAccuracyRatio
// 0x0020 (0x0020 - 0x0000)
struct SKILL_Projectile_Base_C_GetAccuracyRatio final
{
public:
	float                                         Ratio;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_Projectile_Base_C_GetAccuracyRatio) == 0x000008, "Wrong alignment on SKILL_Projectile_Base_C_GetAccuracyRatio");
static_assert(sizeof(SKILL_Projectile_Base_C_GetAccuracyRatio) == 0x000020, "Wrong size on SKILL_Projectile_Base_C_GetAccuracyRatio");
static_assert(offsetof(SKILL_Projectile_Base_C_GetAccuracyRatio, Ratio) == 0x000000, "Member 'SKILL_Projectile_Base_C_GetAccuracyRatio::Ratio' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetAccuracyRatio, CallFunc_GetSkillPawn_SkillPawn) == 0x000008, "Member 'SKILL_Projectile_Base_C_GetAccuracyRatio::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetAccuracyRatio, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000010, "Member 'SKILL_Projectile_Base_C_GetAccuracyRatio::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetAccuracyRatio, CallFunc_GetValue_ReturnValue) == 0x000018, "Member 'SKILL_Projectile_Base_C_GetAccuracyRatio::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetAccuracyRatio, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'SKILL_Projectile_Base_C_GetAccuracyRatio::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.GetBarrelLocation
// 0x0080 (0x0080 - 0x0000)
struct SKILL_Projectile_Base_C_GetBarrelLocation final
{
public:
	class FName                                   BarrelName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BarrelLocation;                                    // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0xC];                                       // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBarrelTransform_Transform;             // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_Projectile_Base_C_GetBarrelLocation) == 0x000010, "Wrong alignment on SKILL_Projectile_Base_C_GetBarrelLocation");
static_assert(sizeof(SKILL_Projectile_Base_C_GetBarrelLocation) == 0x000080, "Wrong size on SKILL_Projectile_Base_C_GetBarrelLocation");
static_assert(offsetof(SKILL_Projectile_Base_C_GetBarrelLocation, BarrelName) == 0x000000, "Member 'SKILL_Projectile_Base_C_GetBarrelLocation::BarrelName' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetBarrelLocation, BarrelLocation) == 0x000008, "Member 'SKILL_Projectile_Base_C_GetBarrelLocation::BarrelLocation' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetBarrelLocation, CallFunc_GetBarrelTransform_Transform) == 0x000020, "Member 'SKILL_Projectile_Base_C_GetBarrelLocation::CallFunc_GetBarrelTransform_Transform' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetBarrelLocation, CallFunc_BreakTransform_Location) == 0x000050, "Member 'SKILL_Projectile_Base_C_GetBarrelLocation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetBarrelLocation, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'SKILL_Projectile_Base_C_GetBarrelLocation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetBarrelLocation, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'SKILL_Projectile_Base_C_GetBarrelLocation::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.GetBarrelTransform
// 0x0080 (0x0080 - 0x0000)
struct SKILL_Projectile_Base_C_GetBarrelTransform final
{
public:
	class FName                                   BarrelName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_Projectile_Base_C_GetBarrelTransform) == 0x000010, "Wrong alignment on SKILL_Projectile_Base_C_GetBarrelTransform");
static_assert(sizeof(SKILL_Projectile_Base_C_GetBarrelTransform) == 0x000080, "Wrong size on SKILL_Projectile_Base_C_GetBarrelTransform");
static_assert(offsetof(SKILL_Projectile_Base_C_GetBarrelTransform, BarrelName) == 0x000000, "Member 'SKILL_Projectile_Base_C_GetBarrelTransform::BarrelName' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetBarrelTransform, Transform) == 0x000010, "Member 'SKILL_Projectile_Base_C_GetBarrelTransform::Transform' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetBarrelTransform, CallFunc_GetSkillPawn_SkillPawn) == 0x000040, "Member 'SKILL_Projectile_Base_C_GetBarrelTransform::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetBarrelTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000050, "Member 'SKILL_Projectile_Base_C_GetBarrelTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");

// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.GetPredictedLocationToShoot
// 0x00B8 (0x00B8 - 0x0000)
struct SKILL_Projectile_Base_C_GetPredictedLocationToShoot final
{
public:
	struct FVector                                SourceLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PredictedLocation;                                 // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeToTarget;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceToTarget;                                  // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           TargetCharacter;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetProjectileSpeed_Speed;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBestAimTargetLocation_BestTargetLocation; // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn_1;                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target_1;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot) == 0x000008, "Wrong alignment on SKILL_Projectile_Base_C_GetPredictedLocationToShoot");
static_assert(sizeof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot) == 0x0000B8, "Wrong size on SKILL_Projectile_Base_C_GetPredictedLocationToShoot");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, SourceLocation) == 0x000000, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::SourceLocation' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, PredictedLocation) == 0x00000C, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::PredictedLocation' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, TimeToTarget) == 0x000018, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::TimeToTarget' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, DistanceToTarget) == 0x00001C, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::DistanceToTarget' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, TargetCharacter) == 0x000020, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::TargetCharacter' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, TargetLocation) == 0x000028, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::TargetLocation' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_GetSkillPawn_SkillPawn) == 0x000038, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_GetProjectileSpeed_Speed) == 0x000040, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_GetProjectileSpeed_Speed' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_GetTarget_Target) == 0x000048, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_GetBestAimTargetLocation_BestTargetLocation) == 0x000050, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_GetBestAimTargetLocation_BestTargetLocation' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00005C, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00005D, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_BooleanAND_ReturnValue) == 0x00005E, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000060, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_FMin_ReturnValue) == 0x000064, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_GetVelocity_ReturnValue) == 0x000068, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000074, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_Vector_Distance_ReturnValue) == 0x000084, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_GetSkillPawn_SkillPawn_1) == 0x000098, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_GetSkillPawn_SkillPawn_1' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_GetTarget_Target_1) == 0x0000A0, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_GetTarget_Target_1' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_GetPredictedLocationToShoot, CallFunc_GetTargetCharacter_Character) == 0x0000B0, "Member 'SKILL_Projectile_Base_C_GetPredictedLocationToShoot::CallFunc_GetTargetCharacter_Character' has a wrong offset!");

// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.IsBoneWithinAngle
// 0x00C0 (0x00C0 - 0x0000)
struct SKILL_Projectile_Base_C_IsBoneWithinAngle final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BarrelForward;                                     // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BarrelLocation;                                    // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetBarrelTransform_Transform;             // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPredictedLocationToShoot_PredictedLocation; // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AngleBetweenNormals_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_Projectile_Base_C_IsBoneWithinAngle) == 0x000010, "Wrong alignment on SKILL_Projectile_Base_C_IsBoneWithinAngle");
static_assert(sizeof(SKILL_Projectile_Base_C_IsBoneWithinAngle) == 0x0000C0, "Wrong size on SKILL_Projectile_Base_C_IsBoneWithinAngle");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, BoneName) == 0x000000, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::BoneName' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, Result) == 0x000008, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::Result' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, BarrelForward) == 0x00000C, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::BarrelForward' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, BarrelLocation) == 0x000018, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::BarrelLocation' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, CallFunc_GetBarrelTransform_Transform) == 0x000030, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::CallFunc_GetBarrelTransform_Transform' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, CallFunc_BreakTransform_Location) == 0x000060, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, CallFunc_GetForwardVector_ReturnValue) == 0x000084, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, CallFunc_GetPredictedLocationToShoot_PredictedLocation) == 0x000090, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::CallFunc_GetPredictedLocationToShoot_PredictedLocation' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00009C, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, CallFunc_Normal_ReturnValue) == 0x0000A8, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, CallFunc_AngleBetweenNormals_ReturnValue) == 0x0000B4, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::CallFunc_AngleBetweenNormals_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_IsBoneWithinAngle, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000B8, "Member 'SKILL_Projectile_Base_C_IsBoneWithinAngle::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.GetProjectileSpeed
// 0x0004 (0x0004 - 0x0000)
struct SKILL_Projectile_Base_C_GetProjectileSpeed final
{
public:
	float                                         Speed;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_Projectile_Base_C_GetProjectileSpeed) == 0x000004, "Wrong alignment on SKILL_Projectile_Base_C_GetProjectileSpeed");
static_assert(sizeof(SKILL_Projectile_Base_C_GetProjectileSpeed) == 0x000004, "Wrong size on SKILL_Projectile_Base_C_GetProjectileSpeed");
static_assert(offsetof(SKILL_Projectile_Base_C_GetProjectileSpeed, Speed) == 0x000000, "Member 'SKILL_Projectile_Base_C_GetProjectileSpeed::Speed' has a wrong offset!");

// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.CanUseSkill
// 0x0010 (0x0010 - 0x0000)
struct SKILL_Projectile_Base_C_CanUseSkill final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                BarrelLocation;                                    // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_Projectile_Base_C_CanUseSkill) == 0x000004, "Wrong alignment on SKILL_Projectile_Base_C_CanUseSkill");
static_assert(sizeof(SKILL_Projectile_Base_C_CanUseSkill) == 0x000010, "Wrong size on SKILL_Projectile_Base_C_CanUseSkill");
static_assert(offsetof(SKILL_Projectile_Base_C_CanUseSkill, Result) == 0x000000, "Member 'SKILL_Projectile_Base_C_CanUseSkill::Result' has a wrong offset!");
static_assert(offsetof(SKILL_Projectile_Base_C_CanUseSkill, BarrelLocation) == 0x000004, "Member 'SKILL_Projectile_Base_C_CanUseSkill::BarrelLocation' has a wrong offset!");

}


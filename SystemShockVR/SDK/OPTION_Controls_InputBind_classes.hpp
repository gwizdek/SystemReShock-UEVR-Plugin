#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OPTION_Controls_InputBind

#include "Basic.hpp"

#include "ENUM_PrimarySecondary_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_InputCategory_structs.hpp"
#include "OPTION_Base_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass OPTION_Controls_InputBind.OPTION_Controls_InputBind_C
// 0x00D8 (0x0410 - 0x0338)
class UOPTION_Controls_InputBind_C final : public UOPTION_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         HBOX_InputBind;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IMAGE_HighlightedBackground;                       // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_HighlightDetectionBackground;                 // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_Primary_Background;                           // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_Primary_Input;                                // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_Secondary_Background;                         // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_Secondary_Input;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_SettingNameLabel;                             // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXTMESH_PressKey_Primary;                         // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXTMESH_PressKey_Secondary;                       // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_ButtonLegend_Key_C*             WIDGET_ButtonLegend_Key_BindButton_Primary;        // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_ButtonLegend_Key_C*             WIDGET_ButtonLegend_Key_BindButton_Secondary;      // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 InputAction;                                       // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FText                                   Label;                                             // 0x03B0(0x0018)(Edit, BlueprintVisible)
	ENUM_InputCategory                            InputCategory;                                     // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Primary_Highlighted;                               // 0x03C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Secondary_Highlighted;                             // 0x03CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Background_Highlighted;                            // 0x03CB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Primary_Previewing;                                // 0x03CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Secondary_Previewing;                              // 0x03CD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CE[0x2];                                      // 0x03CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnInputBindChanged;                                // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   PressKeyText_Gamepad;                              // 0x03E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   PressKeyText_Default;                              // 0x03F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnInputBindChanged__DelegateSignature();
	void ExecuteUbergraph_OPTION_Controls_InputBind(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetIsHighlighted(bool NewHighlightedState, bool ForceInstant);
	struct FEventReply EVENT_OnMouseDownPrimary(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply EVENT_OnMouseDownSecondary(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void EVENT_OnMouseEnterPrimary(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void EVENT_OnMouseExitPrimary(const struct FPointerEvent& MouseEvent);
	void EVENT_OnMouseEnterSecondary(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void EVENT_OnMouseExitSecondary(const struct FPointerEvent& MouseEvent);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void EVENT_OnMouseEnter_Background(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void EVENT_OnMouseExit_Background(const struct FPointerEvent& MouseEvent);
	void SetOptionListeningForInput(bool IsListening);
	void CycleButtonHighlightLeft();
	void CycleButtonHighlightRight();
	void TryStopListeningForInput();
	void IsKeyInCorrectBindScope(const struct FKey& Key, bool* Result);
	void UpdateVisuals();
	void SelectDefaultValue();
	void ReceiveNavLeft(bool InputState, bool* Result);
	void ApplyCleanValue();
	void UpdateCurrentVisuals();
	void TryUnhighlightOption();
	void IsAnyOptionListeningForInput(bool* Result);
	void IsAnythingHighlightedOrListening(bool* Result);
	void StartListeningForInput(ENUM_PrimarySecondary Rank);
	void StashInputBind(const struct FKey& Key);
	void GetMouseButtonFromPointerEvent(const struct FPointerEvent& PointerEvent, struct FKey* Result);
	void IsAnythingHovered(bool* Result);
	void ReceiveNavRight(bool InputState, bool* Result);
	void ReceiveNavAccept(bool InputState, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"OPTION_Controls_InputBind_C">();
	}
	static class UOPTION_Controls_InputBind_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOPTION_Controls_InputBind_C>();
	}
};
static_assert(alignof(UOPTION_Controls_InputBind_C) == 0x000008, "Wrong alignment on UOPTION_Controls_InputBind_C");
static_assert(sizeof(UOPTION_Controls_InputBind_C) == 0x000410, "Wrong size on UOPTION_Controls_InputBind_C");
static_assert(offsetof(UOPTION_Controls_InputBind_C, UberGraphFrame) == 0x000338, "Member 'UOPTION_Controls_InputBind_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, HBOX_InputBind) == 0x000340, "Member 'UOPTION_Controls_InputBind_C::HBOX_InputBind' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, IMAGE_HighlightedBackground) == 0x000348, "Member 'UOPTION_Controls_InputBind_C::IMAGE_HighlightedBackground' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, MESH_HighlightDetectionBackground) == 0x000350, "Member 'UOPTION_Controls_InputBind_C::MESH_HighlightDetectionBackground' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, MESH_Primary_Background) == 0x000358, "Member 'UOPTION_Controls_InputBind_C::MESH_Primary_Background' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, MESH_Primary_Input) == 0x000360, "Member 'UOPTION_Controls_InputBind_C::MESH_Primary_Input' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, MESH_Secondary_Background) == 0x000368, "Member 'UOPTION_Controls_InputBind_C::MESH_Secondary_Background' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, MESH_Secondary_Input) == 0x000370, "Member 'UOPTION_Controls_InputBind_C::MESH_Secondary_Input' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, TEXT_SettingNameLabel) == 0x000378, "Member 'UOPTION_Controls_InputBind_C::TEXT_SettingNameLabel' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, TEXTMESH_PressKey_Primary) == 0x000380, "Member 'UOPTION_Controls_InputBind_C::TEXTMESH_PressKey_Primary' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, TEXTMESH_PressKey_Secondary) == 0x000388, "Member 'UOPTION_Controls_InputBind_C::TEXTMESH_PressKey_Secondary' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, WIDGET_ButtonLegend_Key_BindButton_Primary) == 0x000390, "Member 'UOPTION_Controls_InputBind_C::WIDGET_ButtonLegend_Key_BindButton_Primary' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, WIDGET_ButtonLegend_Key_BindButton_Secondary) == 0x000398, "Member 'UOPTION_Controls_InputBind_C::WIDGET_ButtonLegend_Key_BindButton_Secondary' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, InputAction) == 0x0003A0, "Member 'UOPTION_Controls_InputBind_C::InputAction' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, Label) == 0x0003B0, "Member 'UOPTION_Controls_InputBind_C::Label' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, InputCategory) == 0x0003C8, "Member 'UOPTION_Controls_InputBind_C::InputCategory' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, Primary_Highlighted) == 0x0003C9, "Member 'UOPTION_Controls_InputBind_C::Primary_Highlighted' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, Secondary_Highlighted) == 0x0003CA, "Member 'UOPTION_Controls_InputBind_C::Secondary_Highlighted' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, Background_Highlighted) == 0x0003CB, "Member 'UOPTION_Controls_InputBind_C::Background_Highlighted' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, Primary_Previewing) == 0x0003CC, "Member 'UOPTION_Controls_InputBind_C::Primary_Previewing' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, Secondary_Previewing) == 0x0003CD, "Member 'UOPTION_Controls_InputBind_C::Secondary_Previewing' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, OnInputBindChanged) == 0x0003D0, "Member 'UOPTION_Controls_InputBind_C::OnInputBindChanged' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, PressKeyText_Gamepad) == 0x0003E0, "Member 'UOPTION_Controls_InputBind_C::PressKeyText_Gamepad' has a wrong offset!");
static_assert(offsetof(UOPTION_Controls_InputBind_C, PressKeyText_Default) == 0x0003F8, "Member 'UOPTION_Controls_InputBind_C::PressKeyText_Default' has a wrong offset!");

}


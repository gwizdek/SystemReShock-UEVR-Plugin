#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CYBR_InteractBase

#include "Basic.hpp"

#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function CYBR_InteractBase.CYBR_InteractBase_C.ExecuteUbergraph_CYBR_InteractBase
// 0x0050 (0x0050 - 0x0000)
struct CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_SinglePlayer_C*                     K2Node_DynamicCast_AsGM_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Event_Cursor_Primitive_1;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_Cursor_Primitive;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_SinglePlayer_C*                     K2Node_DynamicCast_AsGM_Single_Player_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase");
static_assert(sizeof(CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase) == 0x000050, "Wrong size on CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase");
static_assert(offsetof(CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase, EntryPoint) == 0x000000, "Member 'CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase, K2Node_DynamicCast_AsGM_Single_Player) == 0x000010, "Member 'CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase::K2Node_DynamicCast_AsGM_Single_Player' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase, K2Node_Event_Cursor_Primitive_1) == 0x000020, "Member 'CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase::K2Node_Event_Cursor_Primitive_1' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase, K2Node_Event_Cursor_Primitive) == 0x000028, "Member 'CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase::K2Node_Event_Cursor_Primitive' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase, K2Node_Event_EndPlayReason) == 0x000030, "Member 'CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase, CallFunc_GetGameMode_ReturnValue_1) == 0x000038, "Member 'CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase, K2Node_DynamicCast_AsGM_Single_Player_1) == 0x000040, "Member 'CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase::K2Node_DynamicCast_AsGM_Single_Player_1' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'CYBR_InteractBase_C_ExecuteUbergraph_CYBR_InteractBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct CYBR_InteractBase_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CYBR_InteractBase_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on CYBR_InteractBase_C_ReceiveEndPlay");
static_assert(sizeof(CYBR_InteractBase_C_ReceiveEndPlay) == 0x000001, "Wrong size on CYBR_InteractBase_C_ReceiveEndPlay");
static_assert(offsetof(CYBR_InteractBase_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'CYBR_InteractBase_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.OnCursorLeave
// 0x0008 (0x0008 - 0x0000)
struct CYBR_InteractBase_C_OnCursorLeave final
{
public:
	class UPrimitiveComponent*                    Cursor_Primitive;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CYBR_InteractBase_C_OnCursorLeave) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_OnCursorLeave");
static_assert(sizeof(CYBR_InteractBase_C_OnCursorLeave) == 0x000008, "Wrong size on CYBR_InteractBase_C_OnCursorLeave");
static_assert(offsetof(CYBR_InteractBase_C_OnCursorLeave, Cursor_Primitive) == 0x000000, "Member 'CYBR_InteractBase_C_OnCursorLeave::Cursor_Primitive' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.OnCursorEnter
// 0x0008 (0x0008 - 0x0000)
struct CYBR_InteractBase_C_OnCursorEnter final
{
public:
	class UPrimitiveComponent*                    Cursor_Primitive;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CYBR_InteractBase_C_OnCursorEnter) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_OnCursorEnter");
static_assert(sizeof(CYBR_InteractBase_C_OnCursorEnter) == 0x000008, "Wrong size on CYBR_InteractBase_C_OnCursorEnter");
static_assert(offsetof(CYBR_InteractBase_C_OnCursorEnter, Cursor_Primitive) == 0x000000, "Member 'CYBR_InteractBase_C_OnCursorEnter::Cursor_Primitive' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.GetSquareDistanceToPawn
// 0x0028 (0x0028 - 0x0000)
struct CYBR_InteractBase_C_GetSquareDistanceToPawn final
{
public:
	class APAWN_SystemShockCharacter_C*           Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CYBR_InteractBase_C_GetSquareDistanceToPawn) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_GetSquareDistanceToPawn");
static_assert(sizeof(CYBR_InteractBase_C_GetSquareDistanceToPawn) == 0x000028, "Wrong size on CYBR_InteractBase_C_GetSquareDistanceToPawn");
static_assert(offsetof(CYBR_InteractBase_C_GetSquareDistanceToPawn, Pawn) == 0x000000, "Member 'CYBR_InteractBase_C_GetSquareDistanceToPawn::Pawn' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_GetSquareDistanceToPawn, Result) == 0x000008, "Member 'CYBR_InteractBase_C_GetSquareDistanceToPawn::Result' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_GetSquareDistanceToPawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'CYBR_InteractBase_C_GetSquareDistanceToPawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_GetSquareDistanceToPawn, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000018, "Member 'CYBR_InteractBase_C_GetSquareDistanceToPawn::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_GetSquareDistanceToPawn, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x000024, "Member 'CYBR_InteractBase_C_GetSquareDistanceToPawn::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.SetLowFiBehavior
// 0x0090 (0x0090 - 0x0000)
struct CYBR_InteractBase_C_SetLowFiBehavior final
{
public:
	bool                                          NewLowFiState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         SkeletalMeshComponents;                            // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UNiagaraComponent*>              NiagaraComponents;                                 // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_SetLowFiBehavior) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_SetLowFiBehavior");
static_assert(sizeof(CYBR_InteractBase_C_SetLowFiBehavior) == 0x000090, "Wrong size on CYBR_InteractBase_C_SetLowFiBehavior");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, NewLowFiState) == 0x000000, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::NewLowFiState' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, SkeletalMeshComponents) == 0x000008, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::SkeletalMeshComponents' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, NiagaraComponents) == 0x000018, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::NiagaraComponents' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, Temp_int_Array_Index_Variable) == 0x000030, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000048, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, CallFunc_Array_Get_Item) == 0x000058, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000078, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetLowFiBehavior, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000088, "Member 'CYBR_InteractBase_C_SetLowFiBehavior::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.GetInteractBroken
// 0x0020 (0x0020 - 0x0000)
struct CYBR_InteractBase_C_GetInteractBroken final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BrokenMessage;                                     // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(CYBR_InteractBase_C_GetInteractBroken) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_GetInteractBroken");
static_assert(sizeof(CYBR_InteractBase_C_GetInteractBroken) == 0x000020, "Wrong size on CYBR_InteractBase_C_GetInteractBroken");
static_assert(offsetof(CYBR_InteractBase_C_GetInteractBroken, Result) == 0x000000, "Member 'CYBR_InteractBase_C_GetInteractBroken::Result' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_GetInteractBroken, BrokenMessage) == 0x000008, "Member 'CYBR_InteractBase_C_GetInteractBroken::BrokenMessage' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.GetInteractLocked
// 0x0028 (0x0028 - 0x0000)
struct CYBR_InteractBase_C_GetInteractLocked final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LockMessage;                                       // 0x0010(0x0018)(Parm, OutParm)
};
static_assert(alignof(CYBR_InteractBase_C_GetInteractLocked) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_GetInteractLocked");
static_assert(sizeof(CYBR_InteractBase_C_GetInteractLocked) == 0x000028, "Wrong size on CYBR_InteractBase_C_GetInteractLocked");
static_assert(offsetof(CYBR_InteractBase_C_GetInteractLocked, SourceActor) == 0x000000, "Member 'CYBR_InteractBase_C_GetInteractLocked::SourceActor' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_GetInteractLocked, Result) == 0x000008, "Member 'CYBR_InteractBase_C_GetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_GetInteractLocked, LockMessage) == 0x000010, "Member 'CYBR_InteractBase_C_GetInteractLocked::LockMessage' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.GetInteractBusy
// 0x0020 (0x0020 - 0x0000)
struct CYBR_InteractBase_C_GetInteractBusy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BusyMessage;                                       // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(CYBR_InteractBase_C_GetInteractBusy) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_GetInteractBusy");
static_assert(sizeof(CYBR_InteractBase_C_GetInteractBusy) == 0x000020, "Wrong size on CYBR_InteractBase_C_GetInteractBusy");
static_assert(offsetof(CYBR_InteractBase_C_GetInteractBusy, Result) == 0x000000, "Member 'CYBR_InteractBase_C_GetInteractBusy::Result' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_GetInteractBusy, BusyMessage) == 0x000008, "Member 'CYBR_InteractBase_C_GetInteractBusy::BusyMessage' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.SetInteractLocked
// 0x0002 (0x0002 - 0x0000)
struct CYBR_InteractBase_C_SetInteractLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_SetInteractLocked) == 0x000001, "Wrong alignment on CYBR_InteractBase_C_SetInteractLocked");
static_assert(sizeof(CYBR_InteractBase_C_SetInteractLocked) == 0x000002, "Wrong size on CYBR_InteractBase_C_SetInteractLocked");
static_assert(offsetof(CYBR_InteractBase_C_SetInteractLocked, Locked) == 0x000000, "Member 'CYBR_InteractBase_C_SetInteractLocked::Locked' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetInteractLocked, Result) == 0x000001, "Member 'CYBR_InteractBase_C_SetInteractLocked::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.StopChanneling
// 0x0010 (0x0010 - 0x0000)
struct CYBR_InteractBase_C_StopChanneling final
{
public:
	class AActor*                                 NewChannelingInteract;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_StopChanneling) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_StopChanneling");
static_assert(sizeof(CYBR_InteractBase_C_StopChanneling) == 0x000010, "Wrong size on CYBR_InteractBase_C_StopChanneling");
static_assert(offsetof(CYBR_InteractBase_C_StopChanneling, NewChannelingInteract) == 0x000000, "Member 'CYBR_InteractBase_C_StopChanneling::NewChannelingInteract' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_StopChanneling, Result) == 0x000008, "Member 'CYBR_InteractBase_C_StopChanneling::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.GetTargetShape
// 0x0010 (0x0010 - 0x0000)
struct CYBR_InteractBase_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CYBR_InteractBase_C_GetTargetShape) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_GetTargetShape");
static_assert(sizeof(CYBR_InteractBase_C_GetTargetShape) == 0x000010, "Wrong size on CYBR_InteractBase_C_GetTargetShape");
static_assert(offsetof(CYBR_InteractBase_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'CYBR_InteractBase_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'CYBR_InteractBase_C_GetTargetShape::ShapeComponent' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.TryInteract
// 0x0038 (0x0038 - 0x0000)
struct CYBR_InteractBase_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
};
static_assert(alignof(CYBR_InteractBase_C_TryInteract) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_TryInteract");
static_assert(sizeof(CYBR_InteractBase_C_TryInteract) == 0x000038, "Wrong size on CYBR_InteractBase_C_TryInteract");
static_assert(offsetof(CYBR_InteractBase_C_TryInteract, SourceActor) == 0x000000, "Member 'CYBR_InteractBase_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'CYBR_InteractBase_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_TryInteract, InteractionType) == 0x000010, "Member 'CYBR_InteractBase_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_TryInteract, InteractResults) == 0x000018, "Member 'CYBR_InteractBase_C_TryInteract::InteractResults' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.TryReceiveItem
// 0x0010 (0x0010 - 0x0000)
struct CYBR_InteractBase_C_TryReceiveItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_TryReceiveItem) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_TryReceiveItem");
static_assert(sizeof(CYBR_InteractBase_C_TryReceiveItem) == 0x000010, "Wrong size on CYBR_InteractBase_C_TryReceiveItem");
static_assert(offsetof(CYBR_InteractBase_C_TryReceiveItem, Item) == 0x000000, "Member 'CYBR_InteractBase_C_TryReceiveItem::Item' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_TryReceiveItem, Result) == 0x000008, "Member 'CYBR_InteractBase_C_TryReceiveItem::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.IsHiddenInteractablePrimitive
// 0x0018 (0x0018 - 0x0000)
struct CYBR_InteractBase_C_IsHiddenInteractablePrimitive final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_IsHiddenInteractablePrimitive) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_IsHiddenInteractablePrimitive");
static_assert(sizeof(CYBR_InteractBase_C_IsHiddenInteractablePrimitive) == 0x000018, "Wrong size on CYBR_InteractBase_C_IsHiddenInteractablePrimitive");
static_assert(offsetof(CYBR_InteractBase_C_IsHiddenInteractablePrimitive, Character) == 0x000000, "Member 'CYBR_InteractBase_C_IsHiddenInteractablePrimitive::Character' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_IsHiddenInteractablePrimitive, CursorPrimitive) == 0x000008, "Member 'CYBR_InteractBase_C_IsHiddenInteractablePrimitive::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_IsHiddenInteractablePrimitive, Result) == 0x000010, "Member 'CYBR_InteractBase_C_IsHiddenInteractablePrimitive::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.ShouldIgnoreInteractRange
// 0x0001 (0x0001 - 0x0000)
struct CYBR_InteractBase_C_ShouldIgnoreInteractRange final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_ShouldIgnoreInteractRange) == 0x000001, "Wrong alignment on CYBR_InteractBase_C_ShouldIgnoreInteractRange");
static_assert(sizeof(CYBR_InteractBase_C_ShouldIgnoreInteractRange) == 0x000001, "Wrong size on CYBR_InteractBase_C_ShouldIgnoreInteractRange");
static_assert(offsetof(CYBR_InteractBase_C_ShouldIgnoreInteractRange, Result) == 0x000000, "Member 'CYBR_InteractBase_C_ShouldIgnoreInteractRange::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.IsInteractActivated
// 0x0001 (0x0001 - 0x0000)
struct CYBR_InteractBase_C_IsInteractActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_IsInteractActivated) == 0x000001, "Wrong alignment on CYBR_InteractBase_C_IsInteractActivated");
static_assert(sizeof(CYBR_InteractBase_C_IsInteractActivated) == 0x000001, "Wrong size on CYBR_InteractBase_C_IsInteractActivated");
static_assert(offsetof(CYBR_InteractBase_C_IsInteractActivated, Result) == 0x000000, "Member 'CYBR_InteractBase_C_IsInteractActivated::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.CanReceiveItem
// 0x0010 (0x0010 - 0x0000)
struct CYBR_InteractBase_C_CanReceiveItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_CanReceiveItem) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_CanReceiveItem");
static_assert(sizeof(CYBR_InteractBase_C_CanReceiveItem) == 0x000010, "Wrong size on CYBR_InteractBase_C_CanReceiveItem");
static_assert(offsetof(CYBR_InteractBase_C_CanReceiveItem, Item) == 0x000000, "Member 'CYBR_InteractBase_C_CanReceiveItem::Item' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_CanReceiveItem, Result) == 0x000008, "Member 'CYBR_InteractBase_C_CanReceiveItem::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.TryDetachInteract
// 0x0002 (0x0002 - 0x0000)
struct CYBR_InteractBase_C_TryDetachInteract final
{
public:
	bool                                          SimulatePhysics;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_TryDetachInteract) == 0x000001, "Wrong alignment on CYBR_InteractBase_C_TryDetachInteract");
static_assert(sizeof(CYBR_InteractBase_C_TryDetachInteract) == 0x000002, "Wrong size on CYBR_InteractBase_C_TryDetachInteract");
static_assert(offsetof(CYBR_InteractBase_C_TryDetachInteract, SimulatePhysics) == 0x000000, "Member 'CYBR_InteractBase_C_TryDetachInteract::SimulatePhysics' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_TryDetachInteract, Result) == 0x000001, "Member 'CYBR_InteractBase_C_TryDetachInteract::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.SetInteractPowered
// 0x0002 (0x0002 - 0x0000)
struct CYBR_InteractBase_C_SetInteractPowered final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_SetInteractPowered) == 0x000001, "Wrong alignment on CYBR_InteractBase_C_SetInteractPowered");
static_assert(sizeof(CYBR_InteractBase_C_SetInteractPowered) == 0x000002, "Wrong size on CYBR_InteractBase_C_SetInteractPowered");
static_assert(offsetof(CYBR_InteractBase_C_SetInteractPowered, State) == 0x000000, "Member 'CYBR_InteractBase_C_SetInteractPowered::State' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_SetInteractPowered, Result) == 0x000001, "Member 'CYBR_InteractBase_C_SetInteractPowered::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.GetInteractDestroyed
// 0x0001 (0x0001 - 0x0000)
struct CYBR_InteractBase_C_GetInteractDestroyed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_GetInteractDestroyed) == 0x000001, "Wrong alignment on CYBR_InteractBase_C_GetInteractDestroyed");
static_assert(sizeof(CYBR_InteractBase_C_GetInteractDestroyed) == 0x000001, "Wrong size on CYBR_InteractBase_C_GetInteractDestroyed");
static_assert(offsetof(CYBR_InteractBase_C_GetInteractDestroyed, Result) == 0x000000, "Member 'CYBR_InteractBase_C_GetInteractDestroyed::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.CanInteractBeDestroyed
// 0x0001 (0x0001 - 0x0000)
struct CYBR_InteractBase_C_CanInteractBeDestroyed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_CanInteractBeDestroyed) == 0x000001, "Wrong alignment on CYBR_InteractBase_C_CanInteractBeDestroyed");
static_assert(sizeof(CYBR_InteractBase_C_CanInteractBeDestroyed) == 0x000001, "Wrong size on CYBR_InteractBase_C_CanInteractBeDestroyed");
static_assert(offsetof(CYBR_InteractBase_C_CanInteractBeDestroyed, Result) == 0x000000, "Member 'CYBR_InteractBase_C_CanInteractBeDestroyed::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.CanModifyInteractPower
// 0x0001 (0x0001 - 0x0000)
struct CYBR_InteractBase_C_CanModifyInteractPower final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_CanModifyInteractPower) == 0x000001, "Wrong alignment on CYBR_InteractBase_C_CanModifyInteractPower");
static_assert(sizeof(CYBR_InteractBase_C_CanModifyInteractPower) == 0x000001, "Wrong size on CYBR_InteractBase_C_CanModifyInteractPower");
static_assert(offsetof(CYBR_InteractBase_C_CanModifyInteractPower, Result) == 0x000000, "Member 'CYBR_InteractBase_C_CanModifyInteractPower::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.GetChannelingHoldDuration
// 0x0004 (0x0004 - 0x0000)
struct CYBR_InteractBase_C_GetChannelingHoldDuration final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CYBR_InteractBase_C_GetChannelingHoldDuration) == 0x000004, "Wrong alignment on CYBR_InteractBase_C_GetChannelingHoldDuration");
static_assert(sizeof(CYBR_InteractBase_C_GetChannelingHoldDuration) == 0x000004, "Wrong size on CYBR_InteractBase_C_GetChannelingHoldDuration");
static_assert(offsetof(CYBR_InteractBase_C_GetChannelingHoldDuration, Result) == 0x000000, "Member 'CYBR_InteractBase_C_GetChannelingHoldDuration::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.FinishedChannelingHoldInteraction
// 0x0010 (0x0010 - 0x0000)
struct CYBR_InteractBase_C_FinishedChannelingHoldInteraction final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_FinishedChannelingHoldInteraction) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_FinishedChannelingHoldInteraction");
static_assert(sizeof(CYBR_InteractBase_C_FinishedChannelingHoldInteraction) == 0x000010, "Wrong size on CYBR_InteractBase_C_FinishedChannelingHoldInteraction");
static_assert(offsetof(CYBR_InteractBase_C_FinishedChannelingHoldInteraction, Character) == 0x000000, "Member 'CYBR_InteractBase_C_FinishedChannelingHoldInteraction::Character' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_FinishedChannelingHoldInteraction, Result) == 0x000008, "Member 'CYBR_InteractBase_C_FinishedChannelingHoldInteraction::Result' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.ShouldSaveActor
// 0x0038 (0x0038 - 0x0000)
struct CYBR_InteractBase_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          K2Node_MakeStruct_StreamingSaveGameActorParams;    // 0x0020(0x0018)()
};
static_assert(alignof(CYBR_InteractBase_C_ShouldSaveActor) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_ShouldSaveActor");
static_assert(sizeof(CYBR_InteractBase_C_ShouldSaveActor) == 0x000038, "Wrong size on CYBR_InteractBase_C_ShouldSaveActor");
static_assert(offsetof(CYBR_InteractBase_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'CYBR_InteractBase_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'CYBR_InteractBase_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ShouldSaveActor, K2Node_MakeStruct_StreamingSaveGameActorParams) == 0x000020, "Member 'CYBR_InteractBase_C_ShouldSaveActor::K2Node_MakeStruct_StreamingSaveGameActorParams' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.ReceivePendingBodyTransforms
// 0x0020 (0x0020 - 0x0000)
struct CYBR_InteractBase_C_ReceivePendingBodyTransforms final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     BodyTransforms;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_ReceivePendingBodyTransforms) == 0x000008, "Wrong alignment on CYBR_InteractBase_C_ReceivePendingBodyTransforms");
static_assert(sizeof(CYBR_InteractBase_C_ReceivePendingBodyTransforms) == 0x000020, "Wrong size on CYBR_InteractBase_C_ReceivePendingBodyTransforms");
static_assert(offsetof(CYBR_InteractBase_C_ReceivePendingBodyTransforms, SkeletalMeshComponent) == 0x000000, "Member 'CYBR_InteractBase_C_ReceivePendingBodyTransforms::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ReceivePendingBodyTransforms, BodyTransforms) == 0x000008, "Member 'CYBR_InteractBase_C_ReceivePendingBodyTransforms::BodyTransforms' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ReceivePendingBodyTransforms, ReturnValue) == 0x000018, "Member 'CYBR_InteractBase_C_ReceivePendingBodyTransforms::ReturnValue' has a wrong offset!");

// Function CYBR_InteractBase.CYBR_InteractBase_C.ReceivePendingCharacterVelocity
// 0x0010 (0x0010 - 0x0000)
struct CYBR_InteractBase_C_ReceivePendingCharacterVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CYBR_InteractBase_C_ReceivePendingCharacterVelocity) == 0x000004, "Wrong alignment on CYBR_InteractBase_C_ReceivePendingCharacterVelocity");
static_assert(sizeof(CYBR_InteractBase_C_ReceivePendingCharacterVelocity) == 0x000010, "Wrong size on CYBR_InteractBase_C_ReceivePendingCharacterVelocity");
static_assert(offsetof(CYBR_InteractBase_C_ReceivePendingCharacterVelocity, Velocity) == 0x000000, "Member 'CYBR_InteractBase_C_ReceivePendingCharacterVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(CYBR_InteractBase_C_ReceivePendingCharacterVelocity, ReturnValue) == 0x00000C, "Member 'CYBR_InteractBase_C_ReceivePendingCharacterVelocity::ReturnValue' has a wrong offset!");

}


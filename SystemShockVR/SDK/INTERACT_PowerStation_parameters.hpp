#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_PowerStation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "CoreGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "ENUM_PowerStationRechargeState_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.ExecuteUbergraph_INTERACT_PowerStation
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_PowerStation_C_ExecuteUbergraph_INTERACT_PowerStation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bAudibleState;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_ExecuteUbergraph_INTERACT_PowerStation) == 0x000004, "Wrong alignment on INTERACT_PowerStation_C_ExecuteUbergraph_INTERACT_PowerStation");
static_assert(sizeof(INTERACT_PowerStation_C_ExecuteUbergraph_INTERACT_PowerStation) == 0x000008, "Wrong size on INTERACT_PowerStation_C_ExecuteUbergraph_INTERACT_PowerStation");
static_assert(offsetof(INTERACT_PowerStation_C_ExecuteUbergraph_INTERACT_PowerStation, EntryPoint) == 0x000000, "Member 'INTERACT_PowerStation_C_ExecuteUbergraph_INTERACT_PowerStation::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_ExecuteUbergraph_INTERACT_PowerStation, K2Node_ComponentBoundEvent_bAudibleState) == 0x000004, "Member 'INTERACT_PowerStation_C_ExecuteUbergraph_INTERACT_PowerStation::K2Node_ComponentBoundEvent_bAudibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_ExecuteUbergraph_INTERACT_PowerStation, K2Node_ComponentBoundEvent_bVisibleState) == 0x000005, "Member 'INTERACT_PowerStation_C_ExecuteUbergraph_INTERACT_PowerStation::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature final
{
public:
	bool                                          bAudibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature, bAudibleState) == 0x000000, "Member 'INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature::bAudibleState' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_PowerStation_C_BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_PowerStation_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_GetTargetShape");
static_assert(sizeof(INTERACT_PowerStation_C_GetTargetShape) == 0x000018, "Wrong size on INTERACT_PowerStation_C_GetTargetShape");
static_assert(offsetof(INTERACT_PowerStation_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_PowerStation_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_PowerStation_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_GetTargetShape, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'INTERACT_PowerStation_C_GetTargetShape::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.TryInteract
// 0x01D8 (0x01D8 - 0x0000)
struct INTERACT_PowerStation_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0048(0x0020)(HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0078(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0098(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00D8(0x0020)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPowerStationFunctional_Result;          // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x0108(0x0020)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSecurityLockText_Result;               // 0x0150(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_4;        // 0x0168(0x0020)(HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryBeginChannelingSequence_Result;        // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_2;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_5;        // 0x01B0(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_TryInteract");
static_assert(sizeof(INTERACT_PowerStation_C_TryInteract) == 0x0001D8, "Wrong size on INTERACT_PowerStation_C_TryInteract");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_PowerStation_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_PowerStation_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_PowerStation_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_PowerStation_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, Character) == 0x000038, "Member 'INTERACT_PowerStation_C_TryInteract::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x000048, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_DynamicCast_AsGI_Single_Player) == 0x000068, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000078, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000098, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_GetGameInstance_ReturnValue_1) == 0x0000C0, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x0000C8, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000D8, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000F8, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_IsPowerStationFunctional_Result) == 0x000104, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_IsPowerStationFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x000108, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000128, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000134, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000140, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_DynamicCast_bSuccess_2) == 0x000148, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_GetSecurityLockText_Result) == 0x000150, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_GetSecurityLockText_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_4) == 0x000168, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_4' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000188, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_DynamicCast_bSuccess_3) == 0x000190, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_TryBeginChannelingSequence_Result) == 0x000191, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_TryBeginChannelingSequence_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_GetGameInstance_ReturnValue_2) == 0x000198, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_DynamicCast_AsGI_Single_Player_2) == 0x0001A0, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_DynamicCast_AsGI_Single_Player_2' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_DynamicCast_bSuccess_4) == 0x0001A8, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x0001A9, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_5) == 0x0001B0, "Member 'INTERACT_PowerStation_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_5' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryInteract, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001D0, "Member 'INTERACT_PowerStation_C_TryInteract::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.EVENT_PowerDownTick
// 0x0024 (0x0024 - 0x0000)
struct INTERACT_PowerStation_C_EVENT_PowerDownTick final
{
public:
	float                                         NewIntensity;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_PowerStation_C_EVENT_PowerDownTick) == 0x000004, "Wrong alignment on INTERACT_PowerStation_C_EVENT_PowerDownTick");
static_assert(sizeof(INTERACT_PowerStation_C_EVENT_PowerDownTick) == 0x000024, "Wrong size on INTERACT_PowerStation_C_EVENT_PowerDownTick");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_PowerDownTick, NewIntensity) == 0x000000, "Member 'INTERACT_PowerStation_C_EVENT_PowerDownTick::NewIntensity' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_PowerDownTick, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_PowerStation_C_EVENT_PowerDownTick::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_PowerDownTick, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_PowerStation_C_EVENT_PowerDownTick::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_PowerDownTick, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_PowerStation_C_EVENT_PowerDownTick::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_PowerDownTick, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'INTERACT_PowerStation_C_EVENT_PowerDownTick::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_PowerDownTick, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'INTERACT_PowerStation_C_EVENT_PowerDownTick::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_PowerDownTick, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000018, "Member 'INTERACT_PowerStation_C_EVENT_PowerDownTick::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_PowerDownTick, CallFunc_FMax_ReturnValue) == 0x00001C, "Member 'INTERACT_PowerStation_C_EVENT_PowerDownTick::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_PowerDownTick, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000020, "Member 'INTERACT_PowerStation_C_EVENT_PowerDownTick::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.EVENT_OnRechargeStageFinished
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished final
{
public:
	ENUM_PowerStationRechargeState                Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                Temp_byte_Variable_4;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRechargeStateDuration_Result;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                Temp_byte_Variable_5;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                K2Node_Select_Default;                             // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished");
static_assert(sizeof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished) == 0x000058, "Wrong size on INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, Temp_byte_Variable) == 0x000000, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, Temp_byte_Variable_1) == 0x000001, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, Temp_byte_Variable_2) == 0x000002, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, Temp_byte_Variable_3) == 0x000003, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, Temp_byte_Variable_4) == 0x000004, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, CallFunc_GetAttribValue_ReturnValue) == 0x000008, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, CallFunc_GetRechargeStateDuration_Result) == 0x00002C, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::CallFunc_GetRechargeStateDuration_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, Temp_byte_Variable_5) == 0x00003C, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, K2Node_Select_Default) == 0x00003D, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00003E, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000050, "Member 'INTERACT_PowerStation_C_EVENT_OnRechargeStageFinished::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.EVENT_SecurityLevelChanged
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_PowerStation_C_EVENT_SecurityLevelChanged final
{
public:
	int32                                         NewSecurityLevel;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 NewSecurityLevel)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_EVENT_SecurityLevelChanged) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_EVENT_SecurityLevelChanged");
static_assert(sizeof(INTERACT_PowerStation_C_EVENT_SecurityLevelChanged) == 0x000030, "Wrong size on INTERACT_PowerStation_C_EVENT_SecurityLevelChanged");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_SecurityLevelChanged, NewSecurityLevel) == 0x000000, "Member 'INTERACT_PowerStation_C_EVENT_SecurityLevelChanged::NewSecurityLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_SecurityLevelChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'INTERACT_PowerStation_C_EVENT_SecurityLevelChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_SecurityLevelChanged, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'INTERACT_PowerStation_C_EVENT_SecurityLevelChanged::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_SecurityLevelChanged, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'INTERACT_PowerStation_C_EVENT_SecurityLevelChanged::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_SecurityLevelChanged, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_PowerStation_C_EVENT_SecurityLevelChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_SecurityLevelChanged, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'INTERACT_PowerStation_C_EVENT_SecurityLevelChanged::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.InitializePowerStation
// 0x00A0 (0x00A0 - 0x0000)
struct INTERACT_PowerStation_C_InitializePowerStation final
{
public:
	int32                                         ElapsedStageCount;                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedStageTime;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateDuration;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedRechargeTime;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRechargeStateDuration_Result;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                Temp_byte_Variable_2;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                Temp_byte_Variable_3;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                K2Node_Select_Default;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSecurityForCurrentLevel_Result;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 NewSecurityLevel)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_InitializePowerStation) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_InitializePowerStation");
static_assert(sizeof(INTERACT_PowerStation_C_InitializePowerStation) == 0x0000A0, "Wrong size on INTERACT_PowerStation_C_InitializePowerStation");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, ElapsedStageCount) == 0x000000, "Member 'INTERACT_PowerStation_C_InitializePowerStation::ElapsedStageCount' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, ElapsedStageTime) == 0x000004, "Member 'INTERACT_PowerStation_C_InitializePowerStation::ElapsedStageTime' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, StateDuration) == 0x000008, "Member 'INTERACT_PowerStation_C_InitializePowerStation::StateDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, ElapsedRechargeTime) == 0x00000C, "Member 'INTERACT_PowerStation_C_InitializePowerStation::ElapsedRechargeTime' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, GameInstance) == 0x000010, "Member 'INTERACT_PowerStation_C_InitializePowerStation::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, Temp_byte_Variable) == 0x000018, "Member 'INTERACT_PowerStation_C_InitializePowerStation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_IsVisible_ReturnValue) == 0x000019, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_Min_ReturnValue) == 0x00001C, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_FMod_Remainder) == 0x000020, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_FMod_ReturnValue) == 0x000024, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, Temp_byte_Variable_1) == 0x000028, "Member 'INTERACT_PowerStation_C_InitializePowerStation::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_GetRechargeStateDuration_Result) == 0x00002C, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_GetRechargeStateDuration_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000034, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000038, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, Temp_byte_Variable_2) == 0x00003C, "Member 'INTERACT_PowerStation_C_InitializePowerStation::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, Temp_byte_Variable_3) == 0x00003D, "Member 'INTERACT_PowerStation_C_InitializePowerStation::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, Temp_int_Variable) == 0x000040, "Member 'INTERACT_PowerStation_C_InitializePowerStation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, K2Node_Select_Default) == 0x000044, "Member 'INTERACT_PowerStation_C_InitializePowerStation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_GetSecurityForCurrentLevel_Result) == 0x000048, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_GetSecurityForCurrentLevel_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000050, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'INTERACT_PowerStation_C_InitializePowerStation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_FMax_ReturnValue) == 0x000064, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000068, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000070, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, K2Node_CreateDelegate_OutputDelegate_1) == 0x000074, "Member 'INTERACT_PowerStation_C_InitializePowerStation::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, CallFunc_GetGameInstance_ReturnValue) == 0x000088, "Member 'INTERACT_PowerStation_C_InitializePowerStation::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, K2Node_DynamicCast_AsGI_Single_Player) == 0x000090, "Member 'INTERACT_PowerStation_C_InitializePowerStation::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializePowerStation, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'INTERACT_PowerStation_C_InitializePowerStation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.EVENT_OnBeginDischarging
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_PowerStation_C_EVENT_OnBeginDischarging final
{
public:
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRechargeStateDuration_Result;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_PowerStation_C_EVENT_OnBeginDischarging) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_EVENT_OnBeginDischarging");
static_assert(sizeof(INTERACT_PowerStation_C_EVENT_OnBeginDischarging) == 0x000020, "Wrong size on INTERACT_PowerStation_C_EVENT_OnBeginDischarging");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnBeginDischarging, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000000, "Member 'INTERACT_PowerStation_C_EVENT_OnBeginDischarging::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnBeginDischarging, CallFunc_GetRechargeStateDuration_Result) == 0x000004, "Member 'INTERACT_PowerStation_C_EVENT_OnBeginDischarging::CallFunc_GetRechargeStateDuration_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnBeginDischarging, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'INTERACT_PowerStation_C_EVENT_OnBeginDischarging::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnBeginDischarging, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'INTERACT_PowerStation_C_EVENT_OnBeginDischarging::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_PowerStation_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_PowerStation_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_PowerStation_C_InitializeAttributes");
static_assert(sizeof(INTERACT_PowerStation_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_PowerStation_C_InitializeAttributes");
static_assert(offsetof(INTERACT_PowerStation_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_PowerStation_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_PowerStation_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.UpdateMeshEmissiveStrength
// 0x000C (0x000C - 0x0000)
struct INTERACT_PowerStation_C_UpdateMeshEmissiveStrength final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_PowerStation_C_UpdateMeshEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_PowerStation_C_UpdateMeshEmissiveStrength");
static_assert(sizeof(INTERACT_PowerStation_C_UpdateMeshEmissiveStrength) == 0x00000C, "Wrong size on INTERACT_PowerStation_C_UpdateMeshEmissiveStrength");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateMeshEmissiveStrength, Value) == 0x000000, "Member 'INTERACT_PowerStation_C_UpdateMeshEmissiveStrength::Value' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateMeshEmissiveStrength, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000004, "Member 'INTERACT_PowerStation_C_UpdateMeshEmissiveStrength::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateMeshEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_PowerStation_C_UpdateMeshEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.TryCompleteGameEvents
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_PowerStation_C_TryCompleteGameEvents final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMOVECONTROL_Base_C*                    CallFunc_GetChannelingMoveControl_Result;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_TryCompleteGameEvents) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_TryCompleteGameEvents");
static_assert(sizeof(INTERACT_PowerStation_C_TryCompleteGameEvents) == 0x000050, "Wrong size on INTERACT_PowerStation_C_TryCompleteGameEvents");
static_assert(offsetof(INTERACT_PowerStation_C_TryCompleteGameEvents, GameInstance) == 0x000000, "Member 'INTERACT_PowerStation_C_TryCompleteGameEvents::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryCompleteGameEvents, Temp_int_Array_Index_Variable) == 0x000008, "Member 'INTERACT_PowerStation_C_TryCompleteGameEvents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryCompleteGameEvents, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'INTERACT_PowerStation_C_TryCompleteGameEvents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryCompleteGameEvents, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'INTERACT_PowerStation_C_TryCompleteGameEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryCompleteGameEvents, CallFunc_GetChannelingMoveControl_Result) == 0x000018, "Member 'INTERACT_PowerStation_C_TryCompleteGameEvents::CallFunc_GetChannelingMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryCompleteGameEvents, CallFunc_Array_Get_Item) == 0x000020, "Member 'INTERACT_PowerStation_C_TryCompleteGameEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryCompleteGameEvents, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'INTERACT_PowerStation_C_TryCompleteGameEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryCompleteGameEvents, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'INTERACT_PowerStation_C_TryCompleteGameEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryCompleteGameEvents, CallFunc_NotEqual_NameName_ReturnValue) == 0x000035, "Member 'INTERACT_PowerStation_C_TryCompleteGameEvents::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryCompleteGameEvents, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'INTERACT_PowerStation_C_TryCompleteGameEvents::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryCompleteGameEvents, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'INTERACT_PowerStation_C_TryCompleteGameEvents::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryCompleteGameEvents, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'INTERACT_PowerStation_C_TryCompleteGameEvents::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.TryBeginActivatingPowerStation
// 0x0100 (0x0100 - 0x0000)
struct INTERACT_PowerStation_C_TryBeginActivatingPowerStation final
{
public:
	class UMOVECONTROL_Base_C*                    MoveControl;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_2;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMOVECONTROL_Base_C*                    CallFunc_GetChannelingMoveControl_Result;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPowerStationFunctional_Result;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Object)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLatentObjectEventHandle               CallFunc_CreateObjectEventHandle_ReturnValue;      // 0x0080(0x0010)(ContainsInstancedReference)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_3;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Base_C*                       CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_TryInteract_self_CastInput;               // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x00D8(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_TryBeginActivatingPowerStation");
static_assert(sizeof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation) == 0x000100, "Wrong size on INTERACT_PowerStation_C_TryBeginActivatingPowerStation");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, MoveControl) == 0x000000, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::MoveControl' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_GetGameInstance_ReturnValue_1) == 0x000010, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000028, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_GetGameInstance_ReturnValue_2) == 0x000040, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, K2Node_DynamicCast_AsGI_Single_Player_2) == 0x000048, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::K2Node_DynamicCast_AsGI_Single_Player_2' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_GetChannelingMoveControl_Result) == 0x000058, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_GetChannelingMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_IsPowerStationFunctional_Result) == 0x000060, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_IsPowerStationFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, K2Node_CreateDelegate_OutputDelegate) == 0x000064, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000074, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_CreateObjectEventHandle_ReturnValue) == 0x000080, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_CreateObjectEventHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_GetGameInstance_ReturnValue_3) == 0x000090, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, K2Node_DynamicCast_AsGI_Single_Player_3) == 0x000098, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::K2Node_DynamicCast_AsGI_Single_Player_3' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, K2Node_DynamicCast_bSuccess_3) == 0x0000A0, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000A4, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000B8, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_TryInteract_self_CastInput) == 0x0000C8, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_TryInteract_self_CastInput' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_TryInteract_InteractResults) == 0x0000D8, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryBeginActivatingPowerStation, CallFunc_Less_IntInt_ReturnValue) == 0x0000FC, "Member 'INTERACT_PowerStation_C_TryBeginActivatingPowerStation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.ApplyPowerStationActivationMods
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_PowerStation_C_ApplyPowerStationActivationMods final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMOVECONTROL_Base_C*                    CallFunc_GetChannelingMoveControl_Result;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_PowerStation_C_ApplyPowerStationActivationMods) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_ApplyPowerStationActivationMods");
static_assert(sizeof(INTERACT_PowerStation_C_ApplyPowerStationActivationMods) == 0x000038, "Wrong size on INTERACT_PowerStation_C_ApplyPowerStationActivationMods");
static_assert(offsetof(INTERACT_PowerStation_C_ApplyPowerStationActivationMods, HackerPawn) == 0x000000, "Member 'INTERACT_PowerStation_C_ApplyPowerStationActivationMods::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_ApplyPowerStationActivationMods, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'INTERACT_PowerStation_C_ApplyPowerStationActivationMods::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_ApplyPowerStationActivationMods, K2Node_DynamicCast_AsPlayer_Controller) == 0x000010, "Member 'INTERACT_PowerStation_C_ApplyPowerStationActivationMods::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_ApplyPowerStationActivationMods, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_PowerStation_C_ApplyPowerStationActivationMods::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_ApplyPowerStationActivationMods, CallFunc_GetChannelingMoveControl_Result) == 0x000020, "Member 'INTERACT_PowerStation_C_ApplyPowerStationActivationMods::CallFunc_GetChannelingMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_ApplyPowerStationActivationMods, CallFunc_ApplyMod_ReturnValue) == 0x000028, "Member 'INTERACT_PowerStation_C_ApplyPowerStationActivationMods::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_ApplyPowerStationActivationMods, CallFunc_ApplyMod_ReturnValue_1) == 0x000030, "Member 'INTERACT_PowerStation_C_ApplyPowerStationActivationMods::CallFunc_ApplyMod_ReturnValue_1' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.UpdateRechargeAnimationState
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_PowerStation_C_UpdateRechargeAnimationState final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_PowerStation_C*                 K2Node_DynamicCast_AsAnim_BP_Power_Station;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_UpdateRechargeAnimationState) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_UpdateRechargeAnimationState");
static_assert(sizeof(INTERACT_PowerStation_C_UpdateRechargeAnimationState) == 0x000018, "Wrong size on INTERACT_PowerStation_C_UpdateRechargeAnimationState");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateRechargeAnimationState, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'INTERACT_PowerStation_C_UpdateRechargeAnimationState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateRechargeAnimationState, K2Node_DynamicCast_AsAnim_BP_Power_Station) == 0x000008, "Member 'INTERACT_PowerStation_C_UpdateRechargeAnimationState::K2Node_DynamicCast_AsAnim_BP_Power_Station' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateRechargeAnimationState, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_PowerStation_C_UpdateRechargeAnimationState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.UpdateLightIntensity
// 0x002C (0x002C - 0x0000)
struct INTERACT_PowerStation_C_UpdateLightIntensity final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_PowerStation_C_UpdateLightIntensity) == 0x000004, "Wrong alignment on INTERACT_PowerStation_C_UpdateLightIntensity");
static_assert(sizeof(INTERACT_PowerStation_C_UpdateLightIntensity) == 0x00002C, "Wrong size on INTERACT_PowerStation_C_UpdateLightIntensity");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateLightIntensity, Scale) == 0x000000, "Member 'INTERACT_PowerStation_C_UpdateLightIntensity::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateLightIntensity, Temp_byte_Variable) == 0x000004, "Member 'INTERACT_PowerStation_C_UpdateLightIntensity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateLightIntensity, Temp_float_Variable) == 0x000008, "Member 'INTERACT_PowerStation_C_UpdateLightIntensity::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateLightIntensity, Temp_float_Variable_1) == 0x00000C, "Member 'INTERACT_PowerStation_C_UpdateLightIntensity::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateLightIntensity, Temp_float_Variable_2) == 0x000010, "Member 'INTERACT_PowerStation_C_UpdateLightIntensity::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateLightIntensity, Temp_float_Variable_3) == 0x000014, "Member 'INTERACT_PowerStation_C_UpdateLightIntensity::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateLightIntensity, Temp_float_Variable_4) == 0x000018, "Member 'INTERACT_PowerStation_C_UpdateLightIntensity::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateLightIntensity, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00001C, "Member 'INTERACT_PowerStation_C_UpdateLightIntensity::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateLightIntensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_PowerStation_C_UpdateLightIntensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateLightIntensity, K2Node_Select_Default) == 0x000024, "Member 'INTERACT_PowerStation_C_UpdateLightIntensity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdateLightIntensity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000028, "Member 'INTERACT_PowerStation_C_UpdateLightIntensity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.UpdatePowerStationVisibility
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_PowerStation_C_UpdatePowerStationVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_UpdatePowerStationVisibility) == 0x000001, "Wrong alignment on INTERACT_PowerStation_C_UpdatePowerStationVisibility");
static_assert(sizeof(INTERACT_PowerStation_C_UpdatePowerStationVisibility) == 0x000001, "Wrong size on INTERACT_PowerStation_C_UpdatePowerStationVisibility");
static_assert(offsetof(INTERACT_PowerStation_C_UpdatePowerStationVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_PowerStation_C_UpdatePowerStationVisibility::VisibilityState' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.UpdatePowerStationAudibility
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_PowerStation_C_UpdatePowerStationAudibility final
{
public:
	bool                                          AudibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_UpdatePowerStationAudibility) == 0x000001, "Wrong alignment on INTERACT_PowerStation_C_UpdatePowerStationAudibility");
static_assert(sizeof(INTERACT_PowerStation_C_UpdatePowerStationAudibility) == 0x000002, "Wrong size on INTERACT_PowerStation_C_UpdatePowerStationAudibility");
static_assert(offsetof(INTERACT_PowerStation_C_UpdatePowerStationAudibility, AudibilityState) == 0x000000, "Member 'INTERACT_PowerStation_C_UpdatePowerStationAudibility::AudibilityState' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_UpdatePowerStationAudibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'INTERACT_PowerStation_C_UpdatePowerStationAudibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.TryDisablePowerStationLight
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_PowerStation_C_TryDisablePowerStationLight final
{
public:
	bool                                          CallFunc_IsPowerStationFunctional_Result;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_PowerStation_C_TryDisablePowerStationLight) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_TryDisablePowerStationLight");
static_assert(sizeof(INTERACT_PowerStation_C_TryDisablePowerStationLight) == 0x000020, "Wrong size on INTERACT_PowerStation_C_TryDisablePowerStationLight");
static_assert(offsetof(INTERACT_PowerStation_C_TryDisablePowerStationLight, CallFunc_IsPowerStationFunctional_Result) == 0x000000, "Member 'INTERACT_PowerStation_C_TryDisablePowerStationLight::CallFunc_IsPowerStationFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryDisablePowerStationLight, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000001, "Member 'INTERACT_PowerStation_C_TryDisablePowerStationLight::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryDisablePowerStationLight, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'INTERACT_PowerStation_C_TryDisablePowerStationLight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryDisablePowerStationLight, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'INTERACT_PowerStation_C_TryDisablePowerStationLight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_TryDisablePowerStationLight, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'INTERACT_PowerStation_C_TryDisablePowerStationLight::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.PlayPowerStationIdleEffects
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_PowerStation_C_PlayPowerStationIdleEffects final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_PlayPowerStationIdleEffects) == 0x000001, "Wrong alignment on INTERACT_PowerStation_C_PlayPowerStationIdleEffects");
static_assert(sizeof(INTERACT_PowerStation_C_PlayPowerStationIdleEffects) == 0x000001, "Wrong size on INTERACT_PowerStation_C_PlayPowerStationIdleEffects");
static_assert(offsetof(INTERACT_PowerStation_C_PlayPowerStationIdleEffects, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'INTERACT_PowerStation_C_PlayPowerStationIdleEffects::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.PlayPowerStationMontage
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_PowerStation_C_PlayPowerStationMontage final
{
public:
	ENUM_PowerStationRechargeState                Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default;                             // 0x0010(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_PowerStation_C_PlayPowerStationMontage) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_PlayPowerStationMontage");
static_assert(sizeof(INTERACT_PowerStation_C_PlayPowerStationMontage) == 0x000050, "Wrong size on INTERACT_PowerStation_C_PlayPowerStationMontage");
static_assert(offsetof(INTERACT_PowerStation_C_PlayPowerStationMontage, Temp_byte_Variable) == 0x000000, "Member 'INTERACT_PowerStation_C_PlayPowerStationMontage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_PlayPowerStationMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_PowerStation_C_PlayPowerStationMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_PlayPowerStationMontage, K2Node_Select_Default) == 0x000010, "Member 'INTERACT_PowerStation_C_PlayPowerStationMontage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_PlayPowerStationMontage, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000038, "Member 'INTERACT_PowerStation_C_PlayPowerStationMontage::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_PlayPowerStationMontage, K2Node_DynamicCast_AsAnim_Montage) == 0x000040, "Member 'INTERACT_PowerStation_C_PlayPowerStationMontage::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_PlayPowerStationMontage, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'INTERACT_PowerStation_C_PlayPowerStationMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_PlayPowerStationMontage, CallFunc_Montage_Play_ReturnValue) == 0x00004C, "Member 'INTERACT_PowerStation_C_PlayPowerStationMontage::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_PowerStation_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_ReceiveAnimationMessage");
static_assert(sizeof(INTERACT_PowerStation_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on INTERACT_PowerStation_C_ReceiveAnimationMessage");
static_assert(offsetof(INTERACT_PowerStation_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'INTERACT_PowerStation_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'INTERACT_PowerStation_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000011, "Member 'INTERACT_PowerStation_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000012, "Member 'INTERACT_PowerStation_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.GetRechargeStateDuration
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_PowerStation_C_GetRechargeStateDuration final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRechargeStateCount_Count;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_PowerStation_C_GetRechargeStateDuration) == 0x000004, "Wrong alignment on INTERACT_PowerStation_C_GetRechargeStateDuration");
static_assert(sizeof(INTERACT_PowerStation_C_GetRechargeStateDuration) == 0x000010, "Wrong size on INTERACT_PowerStation_C_GetRechargeStateDuration");
static_assert(offsetof(INTERACT_PowerStation_C_GetRechargeStateDuration, Result) == 0x000000, "Member 'INTERACT_PowerStation_C_GetRechargeStateDuration::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_GetRechargeStateDuration, CallFunc_GetRechargeStateCount_Count) == 0x000004, "Member 'INTERACT_PowerStation_C_GetRechargeStateDuration::CallFunc_GetRechargeStateCount_Count' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_GetRechargeStateDuration, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'INTERACT_PowerStation_C_GetRechargeStateDuration::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_GetRechargeStateDuration, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_PowerStation_C_GetRechargeStateDuration::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.GetRechargeStateCount
// 0x000C (0x000C - 0x0000)
struct INTERACT_PowerStation_C_GetRechargeStateCount final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_PowerStation_C_GetRechargeStateCount) == 0x000004, "Wrong alignment on INTERACT_PowerStation_C_GetRechargeStateCount");
static_assert(sizeof(INTERACT_PowerStation_C_GetRechargeStateCount) == 0x00000C, "Wrong size on INTERACT_PowerStation_C_GetRechargeStateCount");
static_assert(offsetof(INTERACT_PowerStation_C_GetRechargeStateCount, Count) == 0x000000, "Member 'INTERACT_PowerStation_C_GetRechargeStateCount::Count' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_GetRechargeStateCount, CallFunc_MakeLiteralByte_ReturnValue) == 0x000004, "Member 'INTERACT_PowerStation_C_GetRechargeStateCount::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_GetRechargeStateCount, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'INTERACT_PowerStation_C_GetRechargeStateCount::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.EVENT_OnSpawnedActivateFX
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_PowerStation_C_EVENT_OnSpawnedActivateFX final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      K2Node_DynamicCast_AsNiagara_Particle_System;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_EVENT_OnSpawnedActivateFX) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_EVENT_OnSpawnedActivateFX");
static_assert(sizeof(INTERACT_PowerStation_C_EVENT_OnSpawnedActivateFX) == 0x000018, "Wrong size on INTERACT_PowerStation_C_EVENT_OnSpawnedActivateFX");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnSpawnedActivateFX, Object) == 0x000000, "Member 'INTERACT_PowerStation_C_EVENT_OnSpawnedActivateFX::Object' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnSpawnedActivateFX, K2Node_DynamicCast_AsNiagara_Particle_System) == 0x000008, "Member 'INTERACT_PowerStation_C_EVENT_OnSpawnedActivateFX::K2Node_DynamicCast_AsNiagara_Particle_System' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnSpawnedActivateFX, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_PowerStation_C_EVENT_OnSpawnedActivateFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.CreateChannelingMoveControl
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_PowerStation_C_CreateChannelingMoveControl final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMOVECONTROL_Base_C*                    Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMOVECONTROL_StationMove_C*             UseMoveControl;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RegisterMoveControl_Result;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMOVECONTROL_StationMove_C*             CallFunc_SpawnObject_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_CreateChannelingMoveControl) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_CreateChannelingMoveControl");
static_assert(sizeof(INTERACT_PowerStation_C_CreateChannelingMoveControl) == 0x000068, "Wrong size on INTERACT_PowerStation_C_CreateChannelingMoveControl");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, HackerPawn) == 0x000000, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, Result) == 0x000008, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, UseMoveControl) == 0x000010, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::UseMoveControl' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, CallFunc_RegisterMoveControl_Result) == 0x000024, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::CallFunc_RegisterMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, CallFunc_BreakRotator_Roll_1) == 0x000040, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, CallFunc_BreakRotator_Pitch_1) == 0x000044, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, CallFunc_BreakRotator_Yaw_1) == 0x000048, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, CallFunc_SpawnObject_ReturnValue) == 0x000050, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_CreateChannelingMoveControl, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'INTERACT_PowerStation_C_CreateChannelingMoveControl::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.EVENT_OnDisableAttribChanged
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateDuration;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedRechargeTime;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ElapsedStageCount;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveScale;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged) == 0x000004, "Wrong alignment on INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged) == 0x000020, "Wrong size on INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged, StateDuration) == 0x000008, "Member 'INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged::StateDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged, ElapsedRechargeTime) == 0x00000C, "Member 'INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged::ElapsedRechargeTime' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged, ElapsedStageCount) == 0x000010, "Member 'INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged::ElapsedStageCount' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged, EmissiveScale) == 0x000014, "Member 'INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged::EmissiveScale' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00001D, "Member 'INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x00001E, "Member 'INTERACT_PowerStation_C_EVENT_OnDisableAttribChanged::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.IsPowerStationFunctional
// 0x000C (0x000C - 0x0000)
struct INTERACT_PowerStation_C_IsPowerStationFunctional final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_IsPowerStationFunctional) == 0x000004, "Wrong alignment on INTERACT_PowerStation_C_IsPowerStationFunctional");
static_assert(sizeof(INTERACT_PowerStation_C_IsPowerStationFunctional) == 0x00000C, "Wrong size on INTERACT_PowerStation_C_IsPowerStationFunctional");
static_assert(offsetof(INTERACT_PowerStation_C_IsPowerStationFunctional, Result) == 0x000000, "Member 'INTERACT_PowerStation_C_IsPowerStationFunctional::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_IsPowerStationFunctional, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_PowerStation_C_IsPowerStationFunctional::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_IsPowerStationFunctional, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_PowerStation_C_IsPowerStationFunctional::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.IsHiddenInteractablePrimitive
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_PowerStation_C_IsHiddenInteractablePrimitive final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_IsHiddenInteractablePrimitive) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_IsHiddenInteractablePrimitive");
static_assert(sizeof(INTERACT_PowerStation_C_IsHiddenInteractablePrimitive) == 0x000018, "Wrong size on INTERACT_PowerStation_C_IsHiddenInteractablePrimitive");
static_assert(offsetof(INTERACT_PowerStation_C_IsHiddenInteractablePrimitive, Character) == 0x000000, "Member 'INTERACT_PowerStation_C_IsHiddenInteractablePrimitive::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_IsHiddenInteractablePrimitive, CursorPrimitive) == 0x000008, "Member 'INTERACT_PowerStation_C_IsHiddenInteractablePrimitive::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_IsHiddenInteractablePrimitive, Result) == 0x000010, "Member 'INTERACT_PowerStation_C_IsHiddenInteractablePrimitive::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_IsHiddenInteractablePrimitive, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'INTERACT_PowerStation_C_IsHiddenInteractablePrimitive::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.CanModifyInteractPower
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_PowerStation_C_CanModifyInteractPower final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_CanModifyInteractPower) == 0x000001, "Wrong alignment on INTERACT_PowerStation_C_CanModifyInteractPower");
static_assert(sizeof(INTERACT_PowerStation_C_CanModifyInteractPower) == 0x000001, "Wrong size on INTERACT_PowerStation_C_CanModifyInteractPower");
static_assert(offsetof(INTERACT_PowerStation_C_CanModifyInteractPower, Result) == 0x000000, "Member 'INTERACT_PowerStation_C_CanModifyInteractPower::Result' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.SetInteractPowered
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_PowerStation_C_SetInteractPowered final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         EmissiveStrength;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFunctional;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WasFunctional;                                     // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPowerStationFunctional_Result;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPowerStationFunctional_Result_1;        // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_SetInteractPowered) == 0x000004, "Wrong alignment on INTERACT_PowerStation_C_SetInteractPowered");
static_assert(sizeof(INTERACT_PowerStation_C_SetInteractPowered) == 0x000018, "Wrong size on INTERACT_PowerStation_C_SetInteractPowered");
static_assert(offsetof(INTERACT_PowerStation_C_SetInteractPowered, State) == 0x000000, "Member 'INTERACT_PowerStation_C_SetInteractPowered::State' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_SetInteractPowered, Result) == 0x000001, "Member 'INTERACT_PowerStation_C_SetInteractPowered::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_SetInteractPowered, EmissiveStrength) == 0x000004, "Member 'INTERACT_PowerStation_C_SetInteractPowered::EmissiveStrength' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_SetInteractPowered, IsFunctional) == 0x000008, "Member 'INTERACT_PowerStation_C_SetInteractPowered::IsFunctional' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_SetInteractPowered, WasFunctional) == 0x000009, "Member 'INTERACT_PowerStation_C_SetInteractPowered::WasFunctional' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_SetInteractPowered, CallFunc_GetAttribValue_ReturnValue) == 0x00000C, "Member 'INTERACT_PowerStation_C_SetInteractPowered::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_SetInteractPowered, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'INTERACT_PowerStation_C_SetInteractPowered::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_SetInteractPowered, CallFunc_IsPowerStationFunctional_Result) == 0x000014, "Member 'INTERACT_PowerStation_C_SetInteractPowered::CallFunc_IsPowerStationFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_SetInteractPowered, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000015, "Member 'INTERACT_PowerStation_C_SetInteractPowered::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_SetInteractPowered, CallFunc_IsPowerStationFunctional_Result_1) == 0x000016, "Member 'INTERACT_PowerStation_C_SetInteractPowered::CallFunc_IsPowerStationFunctional_Result_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_SetInteractPowered, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000017, "Member 'INTERACT_PowerStation_C_SetInteractPowered::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.OnPowerStateEnabled
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_PowerStation_C_OnPowerStateEnabled final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_OnPowerStateEnabled) == 0x000001, "Wrong alignment on INTERACT_PowerStation_C_OnPowerStateEnabled");
static_assert(sizeof(INTERACT_PowerStation_C_OnPowerStateEnabled) == 0x000001, "Wrong size on INTERACT_PowerStation_C_OnPowerStateEnabled");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateEnabled, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'INTERACT_PowerStation_C_OnPowerStateEnabled::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function INTERACT_PowerStation.INTERACT_PowerStation_C.OnPowerStateDisabled
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_PowerStation_C_OnPowerStateDisabled final
{
public:
	bool                                          HandleTimerChanges;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ElapsedStageCount;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StateDuration;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedRechargeTime;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRechargeStateDuration_Result;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMod_Remainder;                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_PowerStation_C_OnPowerStateDisabled) == 0x000008, "Wrong alignment on INTERACT_PowerStation_C_OnPowerStateDisabled");
static_assert(sizeof(INTERACT_PowerStation_C_OnPowerStateDisabled) == 0x000050, "Wrong size on INTERACT_PowerStation_C_OnPowerStateDisabled");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, HandleTimerChanges) == 0x000000, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::HandleTimerChanges' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, ElapsedStageCount) == 0x000004, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::ElapsedStageCount' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, StateDuration) == 0x000008, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::StateDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, ElapsedRechargeTime) == 0x00000C, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::ElapsedRechargeTime' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000028, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, CallFunc_GetRechargeStateDuration_Result) == 0x00002C, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::CallFunc_GetRechargeStateDuration_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000030, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000034, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x000038, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, CallFunc_FMod_Remainder) == 0x000040, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, CallFunc_FMod_ReturnValue) == 0x000044, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_PowerStation_C_OnPowerStateDisabled, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000048, "Member 'INTERACT_PowerStation_C_OnPowerStateDisabled::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

}


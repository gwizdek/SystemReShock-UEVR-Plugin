#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEAPON_SparqBeam

#include "Basic.hpp"

#include "STRUCT_EffectParams_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "STRUCT_WeaponMode_structs.hpp"
#include "NamedInteger_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_ImpactEffectResults_structs.hpp"


namespace SDK::Params
{

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.ExecuteUbergraph_WEAPON_SparqBeam
// 0x0140 (0x0140 - 0x0000)
struct WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_5;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_4;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_2;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_3;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_4;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x00E4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x00F4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_5;            // 0x0114(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam");
static_assert(sizeof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam) == 0x000140, "Wrong size on WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, EntryPoint) == 0x000000, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::EntryPoint' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_CustomEvent_Loaded_5) == 0x000028, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_CustomEvent_Loaded_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, Temp_object_Variable) == 0x000030, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_DynamicCast_AsAnim_Montage) == 0x000038, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_CustomEvent_Loaded_4) == 0x000048, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, Temp_object_Variable_1) == 0x000050, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_DynamicCast_AsAnim_Montage_1) == 0x000058, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_CustomEvent_Loaded_3) == 0x000068, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, Temp_object_Variable_2) == 0x000070, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_DynamicCast_AsAnim_Montage_2) == 0x000078, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_DynamicCast_AsAnim_Montage_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_CustomEvent_Loaded_2) == 0x000088, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, Temp_object_Variable_3) == 0x000090, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_DynamicCast_AsAnim_Montage_3) == 0x000098, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_DynamicCast_AsAnim_Montage_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_DynamicCast_bSuccess_3) == 0x0000A0, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_CustomEvent_Loaded_1) == 0x0000A8, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, Temp_object_Variable_4) == 0x0000B0, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_DynamicCast_AsAnim_Montage_4) == 0x0000B8, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_DynamicCast_AsAnim_Montage_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_DynamicCast_bSuccess_4) == 0x0000C0, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_CustomEvent_Loaded) == 0x0000C8, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, Temp_object_Variable_5) == 0x0000D0, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_DynamicCast_AsSound_Cue) == 0x0000D8, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_DynamicCast_bSuccess_5) == 0x0000E0, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E4, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F4, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_CreateDelegate_OutputDelegate_4) == 0x000104, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, K2Node_CreateDelegate_OutputDelegate_5) == 0x000114, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, CallFunc_GetWeaponMeshComponent_Result) == 0x000128, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, CallFunc_IsValid_ReturnValue) == 0x000130, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, CallFunc_IsValid_ReturnValue_1) == 0x000131, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000138, "Member 'WEAPON_SparqBeam_C_ExecuteUbergraph_WEAPON_SparqBeam::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.OnLoaded_26C27D2847CEA7CADE9D55B5540BD931
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_SparqBeam_C_OnLoaded_26C27D2847CEA7CADE9D55B5540BD931 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_OnLoaded_26C27D2847CEA7CADE9D55B5540BD931) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_OnLoaded_26C27D2847CEA7CADE9D55B5540BD931");
static_assert(sizeof(WEAPON_SparqBeam_C_OnLoaded_26C27D2847CEA7CADE9D55B5540BD931) == 0x000008, "Wrong size on WEAPON_SparqBeam_C_OnLoaded_26C27D2847CEA7CADE9D55B5540BD931");
static_assert(offsetof(WEAPON_SparqBeam_C_OnLoaded_26C27D2847CEA7CADE9D55B5540BD931, Loaded) == 0x000000, "Member 'WEAPON_SparqBeam_C_OnLoaded_26C27D2847CEA7CADE9D55B5540BD931::Loaded' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.OnLoaded_A8D7EA4E4DADDC2F356841B8CBDFCAF7
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_SparqBeam_C_OnLoaded_A8D7EA4E4DADDC2F356841B8CBDFCAF7 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_OnLoaded_A8D7EA4E4DADDC2F356841B8CBDFCAF7) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_OnLoaded_A8D7EA4E4DADDC2F356841B8CBDFCAF7");
static_assert(sizeof(WEAPON_SparqBeam_C_OnLoaded_A8D7EA4E4DADDC2F356841B8CBDFCAF7) == 0x000008, "Wrong size on WEAPON_SparqBeam_C_OnLoaded_A8D7EA4E4DADDC2F356841B8CBDFCAF7");
static_assert(offsetof(WEAPON_SparqBeam_C_OnLoaded_A8D7EA4E4DADDC2F356841B8CBDFCAF7, Loaded) == 0x000000, "Member 'WEAPON_SparqBeam_C_OnLoaded_A8D7EA4E4DADDC2F356841B8CBDFCAF7::Loaded' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.OnLoaded_9AA889644536F3FE47B3C5854042E0C7
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_SparqBeam_C_OnLoaded_9AA889644536F3FE47B3C5854042E0C7 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_OnLoaded_9AA889644536F3FE47B3C5854042E0C7) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_OnLoaded_9AA889644536F3FE47B3C5854042E0C7");
static_assert(sizeof(WEAPON_SparqBeam_C_OnLoaded_9AA889644536F3FE47B3C5854042E0C7) == 0x000008, "Wrong size on WEAPON_SparqBeam_C_OnLoaded_9AA889644536F3FE47B3C5854042E0C7");
static_assert(offsetof(WEAPON_SparqBeam_C_OnLoaded_9AA889644536F3FE47B3C5854042E0C7, Loaded) == 0x000000, "Member 'WEAPON_SparqBeam_C_OnLoaded_9AA889644536F3FE47B3C5854042E0C7::Loaded' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.OnLoaded_4453E29C4EB8D6F53DE5CBA60EA23F92
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_SparqBeam_C_OnLoaded_4453E29C4EB8D6F53DE5CBA60EA23F92 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_OnLoaded_4453E29C4EB8D6F53DE5CBA60EA23F92) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_OnLoaded_4453E29C4EB8D6F53DE5CBA60EA23F92");
static_assert(sizeof(WEAPON_SparqBeam_C_OnLoaded_4453E29C4EB8D6F53DE5CBA60EA23F92) == 0x000008, "Wrong size on WEAPON_SparqBeam_C_OnLoaded_4453E29C4EB8D6F53DE5CBA60EA23F92");
static_assert(offsetof(WEAPON_SparqBeam_C_OnLoaded_4453E29C4EB8D6F53DE5CBA60EA23F92, Loaded) == 0x000000, "Member 'WEAPON_SparqBeam_C_OnLoaded_4453E29C4EB8D6F53DE5CBA60EA23F92::Loaded' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.OnLoaded_ACAF3726483954630377248BA8760B43
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_SparqBeam_C_OnLoaded_ACAF3726483954630377248BA8760B43 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_OnLoaded_ACAF3726483954630377248BA8760B43) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_OnLoaded_ACAF3726483954630377248BA8760B43");
static_assert(sizeof(WEAPON_SparqBeam_C_OnLoaded_ACAF3726483954630377248BA8760B43) == 0x000008, "Wrong size on WEAPON_SparqBeam_C_OnLoaded_ACAF3726483954630377248BA8760B43");
static_assert(offsetof(WEAPON_SparqBeam_C_OnLoaded_ACAF3726483954630377248BA8760B43, Loaded) == 0x000000, "Member 'WEAPON_SparqBeam_C_OnLoaded_ACAF3726483954630377248BA8760B43::Loaded' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.OnLoaded_C7B0298B40951C0D5A4863980A72BA74
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_SparqBeam_C_OnLoaded_C7B0298B40951C0D5A4863980A72BA74 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_OnLoaded_C7B0298B40951C0D5A4863980A72BA74) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_OnLoaded_C7B0298B40951C0D5A4863980A72BA74");
static_assert(sizeof(WEAPON_SparqBeam_C_OnLoaded_C7B0298B40951C0D5A4863980A72BA74) == 0x000008, "Wrong size on WEAPON_SparqBeam_C_OnLoaded_C7B0298B40951C0D5A4863980A72BA74");
static_assert(offsetof(WEAPON_SparqBeam_C_OnLoaded_C7B0298B40951C0D5A4863980A72BA74, Loaded) == 0x000000, "Member 'WEAPON_SparqBeam_C_OnLoaded_C7B0298B40951C0D5A4863980A72BA74::Loaded' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.PlayBeamParticleFX
// 0x0058 (0x0058 - 0x0000)
struct WEAPON_SparqBeam_C_PlayBeamParticleFX final
{
public:
	struct FVector                                HitPoint;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SourcePoint;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ModeIndex;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      ParticleSystemComponent;                           // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      BeamEffect;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_PlayBeamParticleFX) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_PlayBeamParticleFX");
static_assert(sizeof(WEAPON_SparqBeam_C_PlayBeamParticleFX) == 0x000058, "Wrong size on WEAPON_SparqBeam_C_PlayBeamParticleFX");
static_assert(offsetof(WEAPON_SparqBeam_C_PlayBeamParticleFX, HitPoint) == 0x000000, "Member 'WEAPON_SparqBeam_C_PlayBeamParticleFX::HitPoint' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_PlayBeamParticleFX, SourcePoint) == 0x00000C, "Member 'WEAPON_SparqBeam_C_PlayBeamParticleFX::SourcePoint' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_PlayBeamParticleFX, ModeIndex) == 0x000018, "Member 'WEAPON_SparqBeam_C_PlayBeamParticleFX::ModeIndex' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_PlayBeamParticleFX, ParticleSystemComponent) == 0x000020, "Member 'WEAPON_SparqBeam_C_PlayBeamParticleFX::ParticleSystemComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_PlayBeamParticleFX, BeamEffect) == 0x000028, "Member 'WEAPON_SparqBeam_C_PlayBeamParticleFX::BeamEffect' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_PlayBeamParticleFX, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WEAPON_SparqBeam_C_PlayBeamParticleFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_PlayBeamParticleFX, CallFunc_GetWeaponMeshComponent_Result) == 0x000038, "Member 'WEAPON_SparqBeam_C_PlayBeamParticleFX::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_PlayBeamParticleFX, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000040, "Member 'WEAPON_SparqBeam_C_PlayBeamParticleFX::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_PlayBeamParticleFX, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WEAPON_SparqBeam_C_PlayBeamParticleFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_PlayBeamParticleFX, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000050, "Member 'WEAPON_SparqBeam_C_PlayBeamParticleFX::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.FireBeam
// 0x0F10 (0x0F10 - 0x0000)
struct WEAPON_SparqBeam_C_FireBeam final
{
public:
	bool                                          IsDeathBlow;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          WasCharacterAlive;                                 // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ImpactImpulseStrength;                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(Edit, BlueprintVisible)
	struct FAttribModApplyData                    DamageMod;                                         // 0x0030(0x00A0)(Edit, BlueprintVisible)
	TSet<class APAWN_SystemShockCharacter_C*>     CollidedShieldCharacters;                          // 0x00D0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class UObject*                                ImpactData;                                        // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribManagerComponent*                AttribManager;                                     // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           HitCharacter;                                      // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PhysicalMaterial;                                  // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitBoneName;                                       // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0158(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                ImpactNormal;                                      // 0x01E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitPoint;                                          // 0x01EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RayDirection;                                      // 0x01F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BarrelLocation;                                    // 0x0204(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpreadDirection;                                   // 0x0210(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraDirection;                                   // 0x021C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraLocation;                                    // 0x0228(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BeamRadius;                                        // 0x0234(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           OwnerPawn;                                         // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x2];                                      // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0290(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D3[0x1];                                      // 0x02D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_AttribManager_C*                  K2Node_DynamicCast_AsCOMP_Attrib_Manager;          // 0x02E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDamageReceivedBound_ReturnValue;        // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMaxCombatTraceDistance_Distance;       // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0315(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_316[0x2];                                      // 0x0316(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0344(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0360(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetReflectionVector_ReturnValue;          // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxCombatTraceDistance_Distance_1;     // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TriangulateImpactLocation_HitSomething;   // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_TriangulateImpactLocation_HitResult;      // 0x03A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_TriangulateImpactLocation_TriangulatedDirection; // 0x0430(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxCombatTraceDistance_Distance_2;     // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxCombatTraceDistance_Distance_3;     // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character_1; // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45A[0x6];                                      // 0x045A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0460(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x046C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47A[0x2];                                      // 0x047A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0484(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0490(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x049C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x04A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x04C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x04E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x04F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x04FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50A[0x2];                                      // 0x050A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x050C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x0514(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x0520(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x052C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x0538(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_544[0x4];                                      // 0x0544(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x0558(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x0568(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x0570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x0574(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x0580(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x058C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0598(0x0010)(ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_4;            // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_4;         // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AA[0x2];                                      // 0x05AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_4;                    // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_4;                // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_4;                // 0x05B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_4;             // 0x05C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_4;                  // 0x05CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_4;            // 0x05D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E4[0x4];                                      // 0x05E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_4;                 // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_4;                // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_4;            // 0x05F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_4;             // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_4;                 // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_4;            // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_4;               // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_4;              // 0x0614(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_4;                // 0x0620(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0630(0x0100)(HasGetValueTypeHash)
	struct FNamedInteger                          K2Node_MakeStruct_NamedInteger;                    // 0x0730(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array_1;                          // 0x0740(0x0010)(ReferenceParm)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0750(0x0030)(HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode_1;                    // 0x0780(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_5;            // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_5;         // 0x0881(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_882[0x2];                                      // 0x0882(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_5;                    // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_5;                // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_5;                // 0x088C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_5;             // 0x0898(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_5;                  // 0x08A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_5;            // 0x08B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BC[0x4];                                      // 0x08BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_5;                 // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_5;                // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_5;            // 0x08D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_5;             // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_5;                 // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_5;            // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_5;               // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_5;              // 0x08EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_5;                // 0x08F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x0904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_90C[0x4];                                      // 0x090C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode_2;                    // 0x0910(0x0100)(HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode_3;                    // 0x0A10(0x0100)(HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_1;     // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x0B1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode_4;                    // 0x0B20(0x0100)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C21[0x3];                                      // 0x0C21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_2;     // 0x0C24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0C28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0C2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0C30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DamageCharacterShieldsAlongRay_BlockingHit; // 0x0C34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C35[0x3];                                      // 0x0C35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_DamageCharacterShieldsAlongRay_HitResult; // 0x0C38(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0CC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0CC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0CC2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CC3[0x5];                                      // 0x0CC3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character_2; // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0CD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD1[0x7];                                      // 0x0CD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0CD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE1[0x3];                                      // 0x0CE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpreadAngle_Result;             // 0x0CE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRandomWeaponSpreadDirection_SpreadDirection; // 0x0CE8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0CF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CFC[0x4];                                      // 0x0CFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetHeadTransform_Transform;               // 0x0D00(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0D30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0D3C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0D48(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0D54(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CreateImpactEffects_Success;              // 0x0D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D61[0x7];                                      // 0x0D61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_ImpactEffectResults            CallFunc_CreateImpactEffects_Results;              // 0x0D68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_PlayBeamParticleFX_ParticleSystemComponent; // 0x0D80(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0D88(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D94[0x4];                                      // 0x0D94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_ImpactData_C*                      CallFunc_SpawnObject_ReturnValue;                  // 0x0D98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_6;            // 0x0DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_6;         // 0x0DA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA2[0x2];                                      // 0x0DA2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_6;                    // 0x0DA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_6;                // 0x0DA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_6;                // 0x0DAC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_6;             // 0x0DB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_6;                  // 0x0DC4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_6;            // 0x0DD0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DDC[0x4];                                      // 0x0DDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_6;                 // 0x0DE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_6;                // 0x0DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_6;            // 0x0DF0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_6;             // 0x0DF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_6;                 // 0x0E00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_6;            // 0x0E04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_6;               // 0x0E08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_6;              // 0x0E0C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_6;                // 0x0E18(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E24[0x4];                                      // 0x0E24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_PlayBeamParticleFX_ParticleSystemComponent_1; // 0x0E28(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribManagerComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0E30(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  CallFunc_ApplyDamageMod_OutDamageInstance;         // 0x0E38(0x0028)()
	class UAttribMod*                             CallFunc_ApplyDamageMod_ReturnValue;               // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0E68(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0E78(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_SparqBeam_C_FireBeam) == 0x000010, "Wrong alignment on WEAPON_SparqBeam_C_FireBeam");
static_assert(sizeof(WEAPON_SparqBeam_C_FireBeam) == 0x000F10, "Wrong size on WEAPON_SparqBeam_C_FireBeam");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, IsDeathBlow) == 0x000000, "Member 'WEAPON_SparqBeam_C_FireBeam::IsDeathBlow' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, WasCharacterAlive) == 0x000001, "Member 'WEAPON_SparqBeam_C_FireBeam::WasCharacterAlive' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, ImpactImpulseStrength) == 0x000004, "Member 'WEAPON_SparqBeam_C_FireBeam::ImpactImpulseStrength' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, DamageInstance) == 0x000008, "Member 'WEAPON_SparqBeam_C_FireBeam::DamageInstance' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, DamageMod) == 0x000030, "Member 'WEAPON_SparqBeam_C_FireBeam::DamageMod' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CollidedShieldCharacters) == 0x0000D0, "Member 'WEAPON_SparqBeam_C_FireBeam::CollidedShieldCharacters' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, ImpactData) == 0x000120, "Member 'WEAPON_SparqBeam_C_FireBeam::ImpactData' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, AttribManager) == 0x000128, "Member 'WEAPON_SparqBeam_C_FireBeam::AttribManager' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, HitCharacter) == 0x000130, "Member 'WEAPON_SparqBeam_C_FireBeam::HitCharacter' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, HitActor) == 0x000138, "Member 'WEAPON_SparqBeam_C_FireBeam::HitActor' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, HitComponent) == 0x000140, "Member 'WEAPON_SparqBeam_C_FireBeam::HitComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, PhysicalMaterial) == 0x000148, "Member 'WEAPON_SparqBeam_C_FireBeam::PhysicalMaterial' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, HitBoneName) == 0x000150, "Member 'WEAPON_SparqBeam_C_FireBeam::HitBoneName' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, HitResult) == 0x000158, "Member 'WEAPON_SparqBeam_C_FireBeam::HitResult' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, ImpactNormal) == 0x0001E0, "Member 'WEAPON_SparqBeam_C_FireBeam::ImpactNormal' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, HitPoint) == 0x0001EC, "Member 'WEAPON_SparqBeam_C_FireBeam::HitPoint' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, RayDirection) == 0x0001F8, "Member 'WEAPON_SparqBeam_C_FireBeam::RayDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, BarrelLocation) == 0x000204, "Member 'WEAPON_SparqBeam_C_FireBeam::BarrelLocation' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, SpreadDirection) == 0x000210, "Member 'WEAPON_SparqBeam_C_FireBeam::SpreadDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CameraDirection) == 0x00021C, "Member 'WEAPON_SparqBeam_C_FireBeam::CameraDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CameraLocation) == 0x000228, "Member 'WEAPON_SparqBeam_C_FireBeam::CameraLocation' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, BeamRadius) == 0x000234, "Member 'WEAPON_SparqBeam_C_FireBeam::BeamRadius' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, OwnerPawn) == 0x000238, "Member 'WEAPON_SparqBeam_C_FireBeam::OwnerPawn' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bBlockingHit) == 0x000240, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bInitialOverlap) == 0x000241, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Time) == 0x000244, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Distance) == 0x000248, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Location) == 0x00024C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactPoint) == 0x000258, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Normal) == 0x000264, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactNormal) == 0x000270, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_PhysMat) == 0x000280, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitActor) == 0x000288, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitComponent) == 0x000290, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitBoneName) == 0x000298, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitItem) == 0x0002A0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ElementIndex) == 0x0002A4, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_FaceIndex) == 0x0002A8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceStart) == 0x0002AC, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceEnd) == 0x0002B8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0002C8, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_DynamicCast_bSuccess) == 0x0002D0, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_IsValid_ReturnValue) == 0x0002D1, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0002D2, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002D4, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, Temp_int_Variable) == 0x0002E0, "Member 'WEAPON_SparqBeam_C_FireBeam::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, Temp_float_Variable) == 0x0002E4, "Member 'WEAPON_SparqBeam_C_FireBeam::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_DynamicCast_AsCOMP_Attrib_Manager) == 0x0002E8, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_DynamicCast_AsCOMP_Attrib_Manager' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_DynamicCast_bSuccess_1) == 0x0002F0, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_IsDamageReceivedBound_ReturnValue) == 0x0002F1, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_IsDamageReceivedBound_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_IsValid_ReturnValue_1) == 0x0002F2, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Not_PreBool_ReturnValue) == 0x0002F3, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_IsValid_ReturnValue_2) == 0x0002F4, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetMaxCombatTraceDistance_Distance) == 0x0002F8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetMaxCombatTraceDistance_Distance' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0002FC, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Add_VectorVector_ReturnValue) == 0x000308, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000314, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000315, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Time_1) == 0x000318, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Distance_1) == 0x00031C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Location_1) == 0x000320, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactPoint_1) == 0x00032C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Normal_1) == 0x000338, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000344, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_PhysMat_1) == 0x000350, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitActor_1) == 0x000358, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitComponent_1) == 0x000360, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitBoneName_1) == 0x000368, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitItem_1) == 0x000370, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ElementIndex_1) == 0x000374, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_FaceIndex_1) == 0x000378, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceStart_1) == 0x00037C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceEnd_1) == 0x000388, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetReflectionVector_ReturnValue) == 0x000394, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetReflectionVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetMaxCombatTraceDistance_Distance_1) == 0x0003A0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetMaxCombatTraceDistance_Distance_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_TriangulateImpactLocation_HitSomething) == 0x0003A4, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_TriangulateImpactLocation_HitSomething' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_TriangulateImpactLocation_HitResult) == 0x0003A8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_TriangulateImpactLocation_HitResult' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_TriangulateImpactLocation_TriangulatedDirection) == 0x000430, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_TriangulateImpactLocation_TriangulatedDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetMaxCombatTraceDistance_Distance_2) == 0x00043C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetMaxCombatTraceDistance_Distance_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetMaxCombatTraceDistance_Distance_3) == 0x000440, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetMaxCombatTraceDistance_Distance_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetOwnerCharacter_Character) == 0x000448, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_DynamicCast_AsPAWN_System_Shock_Character_1) == 0x000450, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_DynamicCast_AsPAWN_System_Shock_Character_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_DynamicCast_bSuccess_2) == 0x000458, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Set_Contains_ReturnValue) == 0x000459, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetWeaponMeshComponent_Result) == 0x000460, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Not_PreBool_ReturnValue_1) == 0x000468, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetSocketLocation_ReturnValue) == 0x00046C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000478, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000479, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Time_2) == 0x00047C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Distance_2) == 0x000480, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Location_2) == 0x000484, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000490, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Normal_2) == 0x00049C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactNormal_2) == 0x0004A8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_PhysMat_2) == 0x0004B8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitActor_2) == 0x0004C0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitComponent_2) == 0x0004C8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitBoneName_2) == 0x0004D0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitItem_2) == 0x0004D8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ElementIndex_2) == 0x0004DC, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_FaceIndex_2) == 0x0004E0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceStart_2) == 0x0004E4, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceEnd_2) == 0x0004F0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x0004FC, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bBlockingHit_3) == 0x000508, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x000509, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Time_3) == 0x00050C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Distance_3) == 0x000510, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Location_3) == 0x000514, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactPoint_3) == 0x000520, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Normal_3) == 0x00052C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactNormal_3) == 0x000538, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_PhysMat_3) == 0x000548, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitActor_3) == 0x000550, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitComponent_3) == 0x000558, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitBoneName_3) == 0x000560, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitItem_3) == 0x000568, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ElementIndex_3) == 0x00056C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_FaceIndex_3) == 0x000570, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceStart_3) == 0x000574, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceEnd_3) == 0x000580, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00058C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_MakeArray_Array) == 0x000598, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bBlockingHit_4) == 0x0005A8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bBlockingHit_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bInitialOverlap_4) == 0x0005A9, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bInitialOverlap_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Time_4) == 0x0005AC, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Time_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Distance_4) == 0x0005B0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Distance_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Location_4) == 0x0005B4, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Location_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactPoint_4) == 0x0005C0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactPoint_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Normal_4) == 0x0005CC, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Normal_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactNormal_4) == 0x0005D8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactNormal_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_PhysMat_4) == 0x0005E8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_PhysMat_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitActor_4) == 0x0005F0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitActor_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitComponent_4) == 0x0005F8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitComponent_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitBoneName_4) == 0x000600, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitBoneName_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitItem_4) == 0x000608, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitItem_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ElementIndex_4) == 0x00060C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ElementIndex_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_FaceIndex_4) == 0x000610, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_FaceIndex_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceStart_4) == 0x000614, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceStart_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceEnd_4) == 0x000620, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceEnd_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetCurrentMode_Mode) == 0x000630, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_MakeStruct_NamedInteger) == 0x000730, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_MakeStruct_NamedInteger' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00073C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_MakeArray_Array_1) == 0x000740, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000750, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetCurrentMode_Mode_1) == 0x000780, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetCurrentMode_Mode_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bBlockingHit_5) == 0x000880, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bBlockingHit_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bInitialOverlap_5) == 0x000881, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bInitialOverlap_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Time_5) == 0x000884, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Time_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Distance_5) == 0x000888, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Distance_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Location_5) == 0x00088C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Location_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactPoint_5) == 0x000898, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactPoint_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Normal_5) == 0x0008A4, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Normal_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactNormal_5) == 0x0008B0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactNormal_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_PhysMat_5) == 0x0008C0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_PhysMat_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitActor_5) == 0x0008C8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitActor_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitComponent_5) == 0x0008D0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitComponent_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitBoneName_5) == 0x0008D8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitBoneName_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitItem_5) == 0x0008E0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitItem_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ElementIndex_5) == 0x0008E4, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ElementIndex_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_FaceIndex_5) == 0x0008E8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_FaceIndex_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceStart_5) == 0x0008EC, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceStart_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceEnd_5) == 0x0008F8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceEnd_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetWeaponPropertyValueByType_Value) == 0x000904, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000908, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetCurrentMode_Mode_2) == 0x000910, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetCurrentMode_Mode_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetCurrentMode_Mode_3) == 0x000A10, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetCurrentMode_Mode_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetWeaponPropertyValueByType_Value_1) == 0x000B10, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetWeaponPropertyValueByType_Value_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000B14, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000B18, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x000B1C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetCurrentMode_Mode_4) == 0x000B20, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetCurrentMode_Mode_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, Temp_bool_Variable) == 0x000C20, "Member 'WEAPON_SparqBeam_C_FireBeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetWeaponPropertyValueByType_Value_2) == 0x000C24, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetWeaponPropertyValueByType_Value_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000C28, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_Select_Default) == 0x000C2C, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, Temp_float_Variable_1) == 0x000C30, "Member 'WEAPON_SparqBeam_C_FireBeam::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_DamageCharacterShieldsAlongRay_BlockingHit) == 0x000C34, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_DamageCharacterShieldsAlongRay_BlockingHit' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_DamageCharacterShieldsAlongRay_HitResult) == 0x000C38, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_DamageCharacterShieldsAlongRay_HitResult' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_IsValid_ReturnValue_3) == 0x000CC0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000CC1, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_IsValid_ReturnValue_4) == 0x000CC2, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_DynamicCast_AsPAWN_System_Shock_Character_2) == 0x000CC8, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_DynamicCast_AsPAWN_System_Shock_Character_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_DynamicCast_bSuccess_3) == 0x000CD0, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000CD8, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_DynamicCast_bSuccess_4) == 0x000CE0, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetCurrentSpreadAngle_Result) == 0x000CE4, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetCurrentSpreadAngle_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetRandomWeaponSpreadDirection_SpreadDirection) == 0x000CE8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetRandomWeaponSpreadDirection_SpreadDirection' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, Temp_float_Variable_2) == 0x000CF4, "Member 'WEAPON_SparqBeam_C_FireBeam::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, K2Node_Select_Default_1) == 0x000CF8, "Member 'WEAPON_SparqBeam_C_FireBeam::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetHeadTransform_Transform) == 0x000D00, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetHeadTransform_Transform' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakTransform_Location) == 0x000D30, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakTransform_Rotation) == 0x000D3C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakTransform_Scale) == 0x000D48, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetForwardVector_ReturnValue) == 0x000D54, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_CreateImpactEffects_Success) == 0x000D60, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_CreateImpactEffects_Success' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_CreateImpactEffects_Results) == 0x000D68, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_CreateImpactEffects_Results' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_PlayBeamParticleFX_ParticleSystemComponent) == 0x000D80, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_PlayBeamParticleFX_ParticleSystemComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000D88, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_SpawnObject_ReturnValue) == 0x000D98, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bBlockingHit_6) == 0x000DA0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bBlockingHit_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_bInitialOverlap_6) == 0x000DA1, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_bInitialOverlap_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Time_6) == 0x000DA4, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Time_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Distance_6) == 0x000DA8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Distance_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Location_6) == 0x000DAC, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Location_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactPoint_6) == 0x000DB8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactPoint_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_Normal_6) == 0x000DC4, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_Normal_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ImpactNormal_6) == 0x000DD0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ImpactNormal_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_PhysMat_6) == 0x000DE0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_PhysMat_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitActor_6) == 0x000DE8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitActor_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitComponent_6) == 0x000DF0, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitComponent_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitBoneName_6) == 0x000DF8, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitBoneName_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_HitItem_6) == 0x000E00, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_HitItem_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_ElementIndex_6) == 0x000E04, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_ElementIndex_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_FaceIndex_6) == 0x000E08, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_FaceIndex_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceStart_6) == 0x000E0C, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceStart_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_BreakHitResult_TraceEnd_6) == 0x000E18, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_BreakHitResult_TraceEnd_6' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_PlayBeamParticleFX_ParticleSystemComponent_1) == 0x000E28, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_PlayBeamParticleFX_ParticleSystemComponent_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_GetComponentByClass_ReturnValue) == 0x000E30, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_ApplyDamageMod_OutDamageInstance) == 0x000E38, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_ApplyDamageMod_OutDamageInstance' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_ApplyDamageMod_ReturnValue) == 0x000E60, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_ApplyDamageMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, Temp_object_Variable) == 0x000E68, "Member 'WEAPON_SparqBeam_C_FireBeam::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_SphereTraceSingle_OutHit) == 0x000E78, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_FireBeam, CallFunc_SphereTraceSingle_ReturnValue) == 0x000F00, "Member 'WEAPON_SparqBeam_C_FireBeam::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.EnableDamage
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_SparqBeam_C_EnableDamage final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_SparqBeam_C_EnableDamage) == 0x000001, "Wrong alignment on WEAPON_SparqBeam_C_EnableDamage");
static_assert(sizeof(WEAPON_SparqBeam_C_EnableDamage) == 0x000001, "Wrong size on WEAPON_SparqBeam_C_EnableDamage");
static_assert(offsetof(WEAPON_SparqBeam_C_EnableDamage, Result) == 0x000000, "Member 'WEAPON_SparqBeam_C_EnableDamage::Result' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.ReceiveAnimationMessage
// 0x0028 (0x0028 - 0x0000)
struct WEAPON_SparqBeam_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentMode_Result;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_SparqBeam_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_ReceiveAnimationMessage");
static_assert(sizeof(WEAPON_SparqBeam_C_ReceiveAnimationMessage) == 0x000028, "Wrong size on WEAPON_SparqBeam_C_ReceiveAnimationMessage");
static_assert(offsetof(WEAPON_SparqBeam_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'WEAPON_SparqBeam_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'WEAPON_SparqBeam_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ReceiveAnimationMessage, CallFunc_GetWeaponMeshComponent_Result) == 0x000018, "Member 'WEAPON_SparqBeam_C_ReceiveAnimationMessage::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x000020, "Member 'WEAPON_SparqBeam_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000021, "Member 'WEAPON_SparqBeam_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000022, "Member 'WEAPON_SparqBeam_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ReceiveAnimationMessage, CallFunc_SetCurrentMode_Result) == 0x000023, "Member 'WEAPON_SparqBeam_C_ReceiveAnimationMessage::CallFunc_SetCurrentMode_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000024, "Member 'WEAPON_SparqBeam_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.SetCurrentMode
// 0x0030 (0x0030 - 0x0000)
struct WEAPON_SparqBeam_C_SetCurrentMode final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ModeChangeMontage;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanAttemptModeSwitchWhileEquipped_Result; // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCurrentMode_Result;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_SparqBeam_C_SetCurrentMode) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_SetCurrentMode");
static_assert(sizeof(WEAPON_SparqBeam_C_SetCurrentMode) == 0x000030, "Wrong size on WEAPON_SparqBeam_C_SetCurrentMode");
static_assert(offsetof(WEAPON_SparqBeam_C_SetCurrentMode, Mode) == 0x000000, "Member 'WEAPON_SparqBeam_C_SetCurrentMode::Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_SetCurrentMode, Result) == 0x000004, "Member 'WEAPON_SparqBeam_C_SetCurrentMode::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_SetCurrentMode, ModeChangeMontage) == 0x000008, "Member 'WEAPON_SparqBeam_C_SetCurrentMode::ModeChangeMontage' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_SetCurrentMode, CallFunc_GetOwnerCharacter_Character) == 0x000010, "Member 'WEAPON_SparqBeam_C_SetCurrentMode::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_SetCurrentMode, Temp_bool_Variable) == 0x000018, "Member 'WEAPON_SparqBeam_C_SetCurrentMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_SetCurrentMode, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WEAPON_SparqBeam_C_SetCurrentMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_SetCurrentMode, CallFunc_Greater_IntInt_ReturnValue) == 0x00001A, "Member 'WEAPON_SparqBeam_C_SetCurrentMode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_SetCurrentMode, CallFunc_CanAttemptModeSwitchWhileEquipped_Result) == 0x00001B, "Member 'WEAPON_SparqBeam_C_SetCurrentMode::CallFunc_CanAttemptModeSwitchWhileEquipped_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_SetCurrentMode, K2Node_Select_Default) == 0x000020, "Member 'WEAPON_SparqBeam_C_SetCurrentMode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_SetCurrentMode, CallFunc_SetCurrentMode_Result) == 0x000028, "Member 'WEAPON_SparqBeam_C_SetCurrentMode::CallFunc_SetCurrentMode_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_SetCurrentMode, CallFunc_IsEquipped_Result) == 0x000029, "Member 'WEAPON_SparqBeam_C_SetCurrentMode::CallFunc_IsEquipped_Result' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.CanAttemptModeSwitchWhileEquipped
// 0x0038 (0x0038 - 0x0000)
struct WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped final
{
public:
	int32                                         ModeIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          AnimInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivatable_Result;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue_1;          // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped");
static_assert(sizeof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped) == 0x000038, "Wrong size on WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, ModeIndex) == 0x000000, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::ModeIndex' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, Result) == 0x000004, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, AnimInstance) == 0x000008, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::AnimInstance' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, CallFunc_GetOwnerCharacter_Character) == 0x000010, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, CallFunc_IsActivatable_Result) == 0x000018, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::CallFunc_IsActivatable_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000020, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, CallFunc_Montage_IsPlaying_ReturnValue) == 0x000032, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, CallFunc_Montage_IsPlaying_ReturnValue_1) == 0x000033, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::CallFunc_Montage_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, CallFunc_BooleanOR_ReturnValue) == 0x000034, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000035, "Member 'WEAPON_SparqBeam_C_CanAttemptModeSwitchWhileEquipped::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.OnEnergyModeChanged
// 0x0048 (0x0048 - 0x0000)
struct WEAPON_SparqBeam_C_OnEnergyModeChanged final
{
public:
	bool                                          CallFunc_HasEnoughEnergyToActivate_Result;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_EnergyWeapon_C> K2Node_DynamicCast_AsINTERF_ANIM_Energy_Weapon;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetChargeMode_Result;                     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_SparqBeam_C_OnEnergyModeChanged) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_OnEnergyModeChanged");
static_assert(sizeof(WEAPON_SparqBeam_C_OnEnergyModeChanged) == 0x000048, "Wrong size on WEAPON_SparqBeam_C_OnEnergyModeChanged");
static_assert(offsetof(WEAPON_SparqBeam_C_OnEnergyModeChanged, CallFunc_HasEnoughEnergyToActivate_Result) == 0x000000, "Member 'WEAPON_SparqBeam_C_OnEnergyModeChanged::CallFunc_HasEnoughEnergyToActivate_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_OnEnergyModeChanged, CallFunc_GetWeaponMeshComponent_Result) == 0x000008, "Member 'WEAPON_SparqBeam_C_OnEnergyModeChanged::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_OnEnergyModeChanged, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000010, "Member 'WEAPON_SparqBeam_C_OnEnergyModeChanged::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_OnEnergyModeChanged, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WEAPON_SparqBeam_C_OnEnergyModeChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_OnEnergyModeChanged, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'WEAPON_SparqBeam_C_OnEnergyModeChanged::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_OnEnergyModeChanged, CallFunc_IsEquipped_Result) == 0x000028, "Member 'WEAPON_SparqBeam_C_OnEnergyModeChanged::CallFunc_IsEquipped_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_OnEnergyModeChanged, K2Node_DynamicCast_AsINTERF_ANIM_Energy_Weapon) == 0x000030, "Member 'WEAPON_SparqBeam_C_OnEnergyModeChanged::K2Node_DynamicCast_AsINTERF_ANIM_Energy_Weapon' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_OnEnergyModeChanged, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'WEAPON_SparqBeam_C_OnEnergyModeChanged::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_OnEnergyModeChanged, CallFunc_SetChargeMode_Result) == 0x000041, "Member 'WEAPON_SparqBeam_C_OnEnergyModeChanged::CallFunc_SetChargeMode_Result' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.GetTargetModeMaterialParameter
// 0x0018 (0x0018 - 0x0000)
struct WEAPON_SparqBeam_C_GetTargetModeMaterialParameter final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_GetTargetModeMaterialParameter) == 0x000004, "Wrong alignment on WEAPON_SparqBeam_C_GetTargetModeMaterialParameter");
static_assert(sizeof(WEAPON_SparqBeam_C_GetTargetModeMaterialParameter) == 0x000018, "Wrong size on WEAPON_SparqBeam_C_GetTargetModeMaterialParameter");
static_assert(offsetof(WEAPON_SparqBeam_C_GetTargetModeMaterialParameter, Result) == 0x000000, "Member 'WEAPON_SparqBeam_C_GetTargetModeMaterialParameter::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_GetTargetModeMaterialParameter, Temp_int_Variable) == 0x000004, "Member 'WEAPON_SparqBeam_C_GetTargetModeMaterialParameter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_GetTargetModeMaterialParameter, Temp_float_Variable) == 0x000008, "Member 'WEAPON_SparqBeam_C_GetTargetModeMaterialParameter::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_GetTargetModeMaterialParameter, Temp_float_Variable_1) == 0x00000C, "Member 'WEAPON_SparqBeam_C_GetTargetModeMaterialParameter::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_GetTargetModeMaterialParameter, Temp_float_Variable_2) == 0x000010, "Member 'WEAPON_SparqBeam_C_GetTargetModeMaterialParameter::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_GetTargetModeMaterialParameter, K2Node_Select_Default) == 0x000014, "Member 'WEAPON_SparqBeam_C_GetTargetModeMaterialParameter::K2Node_Select_Default' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.UpdateModeMaterialParameter
// 0x0028 (0x0028 - 0x0000)
struct WEAPON_SparqBeam_C_UpdateModeMaterialParameter final
{
public:
	float                                         TargetModeParam;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrModeUpdateTimestamp;                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTargetModeMaterialParameter_Result;    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_UpdateModeMaterialParameter) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_UpdateModeMaterialParameter");
static_assert(sizeof(WEAPON_SparqBeam_C_UpdateModeMaterialParameter) == 0x000028, "Wrong size on WEAPON_SparqBeam_C_UpdateModeMaterialParameter");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeMaterialParameter, TargetModeParam) == 0x000000, "Member 'WEAPON_SparqBeam_C_UpdateModeMaterialParameter::TargetModeParam' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeMaterialParameter, CurrModeUpdateTimestamp) == 0x000004, "Member 'WEAPON_SparqBeam_C_UpdateModeMaterialParameter::CurrModeUpdateTimestamp' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeMaterialParameter, CallFunc_GetWeaponMeshComponent_Result) == 0x000008, "Member 'WEAPON_SparqBeam_C_UpdateModeMaterialParameter::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeMaterialParameter, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WEAPON_SparqBeam_C_UpdateModeMaterialParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeMaterialParameter, CallFunc_GetTargetModeMaterialParameter_Result) == 0x000014, "Member 'WEAPON_SparqBeam_C_UpdateModeMaterialParameter::CallFunc_GetTargetModeMaterialParameter_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeMaterialParameter, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'WEAPON_SparqBeam_C_UpdateModeMaterialParameter::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeMaterialParameter, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'WEAPON_SparqBeam_C_UpdateModeMaterialParameter::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeMaterialParameter, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000020, "Member 'WEAPON_SparqBeam_C_UpdateModeMaterialParameter::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeMaterialParameter, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000024, "Member 'WEAPON_SparqBeam_C_UpdateModeMaterialParameter::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.TryUpdateModeMaterialParameter
// 0x0040 (0x0040 - 0x0000)
struct WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter final
{
public:
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTargetModeMaterialParameter_Result;    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTargetModeMaterialParameter_Result_1;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter");
static_assert(sizeof(WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter) == 0x000040, "Wrong size on WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter");
static_assert(offsetof(WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter, CallFunc_Less_FloatFloat_ReturnValue) == 0x000000, "Member 'WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter, CallFunc_GetTargetModeMaterialParameter_Result) == 0x000004, "Member 'WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter::CallFunc_GetTargetModeMaterialParameter_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter, CallFunc_Abs_ReturnValue) == 0x00000C, "Member 'WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000010, "Member 'WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter, CallFunc_GetTargetModeMaterialParameter_Result_1) == 0x000030, "Member 'WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter::CallFunc_GetTargetModeMaterialParameter_Result_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter, CallFunc_GetWeaponMeshComponent_Result) == 0x000038, "Member 'WEAPON_SparqBeam_C_TryUpdateModeMaterialParameter::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.GetDischargeMontage
// 0x0018 (0x0018 - 0x0000)
struct WEAPON_SparqBeam_C_GetDischargeMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_GetDischargeMontage) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_GetDischargeMontage");
static_assert(sizeof(WEAPON_SparqBeam_C_GetDischargeMontage) == 0x000018, "Wrong size on WEAPON_SparqBeam_C_GetDischargeMontage");
static_assert(offsetof(WEAPON_SparqBeam_C_GetDischargeMontage, Montage) == 0x000000, "Member 'WEAPON_SparqBeam_C_GetDischargeMontage::Montage' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_GetDischargeMontage, Temp_int_Variable) == 0x000008, "Member 'WEAPON_SparqBeam_C_GetDischargeMontage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_GetDischargeMontage, K2Node_Select_Default) == 0x000010, "Member 'WEAPON_SparqBeam_C_GetDischargeMontage::K2Node_Select_Default' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.OnUpdateHeat
// 0x000C (0x000C - 0x0000)
struct WEAPON_SparqBeam_C_OnUpdateHeat final
{
public:
	float                                         CallFunc_GetLastHeatPercentage_Result;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_OnUpdateHeat) == 0x000004, "Wrong alignment on WEAPON_SparqBeam_C_OnUpdateHeat");
static_assert(sizeof(WEAPON_SparqBeam_C_OnUpdateHeat) == 0x00000C, "Wrong size on WEAPON_SparqBeam_C_OnUpdateHeat");
static_assert(offsetof(WEAPON_SparqBeam_C_OnUpdateHeat, CallFunc_GetLastHeatPercentage_Result) == 0x000000, "Member 'WEAPON_SparqBeam_C_OnUpdateHeat::CallFunc_GetLastHeatPercentage_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_OnUpdateHeat, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WEAPON_SparqBeam_C_OnUpdateHeat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_OnUpdateHeat, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'WEAPON_SparqBeam_C_OnUpdateHeat::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.UpdateModeFX
// 0x0030 (0x0030 - 0x0000)
struct WEAPON_SparqBeam_C_UpdateModeFX final
{
public:
	bool                                          HasEnergyToFire;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_UpdateModeFX) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_UpdateModeFX");
static_assert(sizeof(WEAPON_SparqBeam_C_UpdateModeFX) == 0x000030, "Wrong size on WEAPON_SparqBeam_C_UpdateModeFX");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeFX, HasEnergyToFire) == 0x000000, "Member 'WEAPON_SparqBeam_C_UpdateModeFX::HasEnergyToFire' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeFX, Temp_int_Variable) == 0x000004, "Member 'WEAPON_SparqBeam_C_UpdateModeFX::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeFX, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WEAPON_SparqBeam_C_UpdateModeFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeFX, Temp_bool_Variable) == 0x000009, "Member 'WEAPON_SparqBeam_C_UpdateModeFX::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeFX, CallFunc_GetWeaponMeshComponent_Result) == 0x000010, "Member 'WEAPON_SparqBeam_C_UpdateModeFX::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeFX, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000018, "Member 'WEAPON_SparqBeam_C_UpdateModeFX::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeFX, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WEAPON_SparqBeam_C_UpdateModeFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeFX, K2Node_Select_Default) == 0x000024, "Member 'WEAPON_SparqBeam_C_UpdateModeFX::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_UpdateModeFX, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000028, "Member 'WEAPON_SparqBeam_C_UpdateModeFX::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.EVENT_OnHolsterFinished
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_SparqBeam_C_EVENT_OnHolsterFinished final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_SparqBeam_C_EVENT_OnHolsterFinished) == 0x000001, "Wrong alignment on WEAPON_SparqBeam_C_EVENT_OnHolsterFinished");
static_assert(sizeof(WEAPON_SparqBeam_C_EVENT_OnHolsterFinished) == 0x000001, "Wrong size on WEAPON_SparqBeam_C_EVENT_OnHolsterFinished");
static_assert(offsetof(WEAPON_SparqBeam_C_EVENT_OnHolsterFinished, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WEAPON_SparqBeam_C_EVENT_OnHolsterFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.OnBecameOverheated
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_SparqBeam_C_OnBecameOverheated final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_SparqBeam_C_OnBecameOverheated) == 0x000001, "Wrong alignment on WEAPON_SparqBeam_C_OnBecameOverheated");
static_assert(sizeof(WEAPON_SparqBeam_C_OnBecameOverheated) == 0x000001, "Wrong size on WEAPON_SparqBeam_C_OnBecameOverheated");
static_assert(offsetof(WEAPON_SparqBeam_C_OnBecameOverheated, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WEAPON_SparqBeam_C_OnBecameOverheated::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.OnFinishedOverheating
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_SparqBeam_C_OnFinishedOverheating final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_SparqBeam_C_OnFinishedOverheating) == 0x000001, "Wrong alignment on WEAPON_SparqBeam_C_OnFinishedOverheating");
static_assert(sizeof(WEAPON_SparqBeam_C_OnFinishedOverheating) == 0x000001, "Wrong size on WEAPON_SparqBeam_C_OnFinishedOverheating");
static_assert(offsetof(WEAPON_SparqBeam_C_OnFinishedOverheating, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WEAPON_SparqBeam_C_OnFinishedOverheating::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.OnWeaponBecameActivatable
// 0x0010 (0x0010 - 0x0000)
struct WEAPON_SparqBeam_C_OnWeaponBecameActivatable final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowImmediately;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_SparqBeam_C_OnWeaponBecameActivatable) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_OnWeaponBecameActivatable");
static_assert(sizeof(WEAPON_SparqBeam_C_OnWeaponBecameActivatable) == 0x000010, "Wrong size on WEAPON_SparqBeam_C_OnWeaponBecameActivatable");
static_assert(offsetof(WEAPON_SparqBeam_C_OnWeaponBecameActivatable, Character) == 0x000000, "Member 'WEAPON_SparqBeam_C_OnWeaponBecameActivatable::Character' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_OnWeaponBecameActivatable, ShowImmediately) == 0x000008, "Member 'WEAPON_SparqBeam_C_OnWeaponBecameActivatable::ShowImmediately' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.ModifySparqBeamEventBindings
// 0x0058 (0x0058 - 0x0000)
struct WEAPON_SparqBeam_C_ModifySparqBeamEventBindings final
{
public:
	bool                                          Activatable_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_Actor;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_SparqBeam_C_ModifySparqBeamEventBindings) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_ModifySparqBeamEventBindings");
static_assert(sizeof(WEAPON_SparqBeam_C_ModifySparqBeamEventBindings) == 0x000058, "Wrong size on WEAPON_SparqBeam_C_ModifySparqBeamEventBindings");
static_assert(offsetof(WEAPON_SparqBeam_C_ModifySparqBeamEventBindings, Activatable_0) == 0x000000, "Member 'WEAPON_SparqBeam_C_ModifySparqBeamEventBindings::Activatable_0' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ModifySparqBeamEventBindings, CallFunc_GetOwnerActor_Actor) == 0x000008, "Member 'WEAPON_SparqBeam_C_ModifySparqBeamEventBindings::CallFunc_GetOwnerActor_Actor' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ModifySparqBeamEventBindings, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000010, "Member 'WEAPON_SparqBeam_C_ModifySparqBeamEventBindings::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ModifySparqBeamEventBindings, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WEAPON_SparqBeam_C_ModifySparqBeamEventBindings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ModifySparqBeamEventBindings, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WEAPON_SparqBeam_C_ModifySparqBeamEventBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ModifySparqBeamEventBindings, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'WEAPON_SparqBeam_C_ModifySparqBeamEventBindings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ModifySparqBeamEventBindings, CallFunc_GetAttribInstance_ReturnValue) == 0x000040, "Member 'WEAPON_SparqBeam_C_ModifySparqBeamEventBindings::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ModifySparqBeamEventBindings, CallFunc_GetOwnerCharacter_Character) == 0x000048, "Member 'WEAPON_SparqBeam_C_ModifySparqBeamEventBindings::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_ModifySparqBeamEventBindings, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000050, "Member 'WEAPON_SparqBeam_C_ModifySparqBeamEventBindings::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.OnBecomeUnactivatable
// 0x0002 (0x0002 - 0x0000)
struct WEAPON_SparqBeam_C_OnBecomeUnactivatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBecomeUnactivatable_Result;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_SparqBeam_C_OnBecomeUnactivatable) == 0x000001, "Wrong alignment on WEAPON_SparqBeam_C_OnBecomeUnactivatable");
static_assert(sizeof(WEAPON_SparqBeam_C_OnBecomeUnactivatable) == 0x000002, "Wrong size on WEAPON_SparqBeam_C_OnBecomeUnactivatable");
static_assert(offsetof(WEAPON_SparqBeam_C_OnBecomeUnactivatable, Result) == 0x000000, "Member 'WEAPON_SparqBeam_C_OnBecomeUnactivatable::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_OnBecomeUnactivatable, CallFunc_OnBecomeUnactivatable_Result) == 0x000001, "Member 'WEAPON_SparqBeam_C_OnBecomeUnactivatable::CallFunc_OnBecomeUnactivatable_Result' has a wrong offset!");

// Function WEAPON_SparqBeam.WEAPON_SparqBeam_C.EVENT_OnEnergyChanged
// 0x0120 (0x0120 - 0x0000)
struct WEAPON_SparqBeam_C_EVENT_OnEnergyChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EModApplyType                                 ApplyType;                                         // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0010(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_SparqBeam_C_EVENT_OnEnergyChanged) == 0x000008, "Wrong alignment on WEAPON_SparqBeam_C_EVENT_OnEnergyChanged");
static_assert(sizeof(WEAPON_SparqBeam_C_EVENT_OnEnergyChanged) == 0x000120, "Wrong size on WEAPON_SparqBeam_C_EVENT_OnEnergyChanged");
static_assert(offsetof(WEAPON_SparqBeam_C_EVENT_OnEnergyChanged, CurrValue) == 0x000000, "Member 'WEAPON_SparqBeam_C_EVENT_OnEnergyChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_EVENT_OnEnergyChanged, LastValue) == 0x000004, "Member 'WEAPON_SparqBeam_C_EVENT_OnEnergyChanged::LastValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_EVENT_OnEnergyChanged, MaxValue) == 0x000008, "Member 'WEAPON_SparqBeam_C_EVENT_OnEnergyChanged::MaxValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_EVENT_OnEnergyChanged, ApplyType) == 0x00000C, "Member 'WEAPON_SparqBeam_C_EVENT_OnEnergyChanged::ApplyType' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_EVENT_OnEnergyChanged, CallFunc_GetCurrentMode_Mode) == 0x000010, "Member 'WEAPON_SparqBeam_C_EVENT_OnEnergyChanged::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_EVENT_OnEnergyChanged, CallFunc_Greater_IntInt_ReturnValue) == 0x000110, "Member 'WEAPON_SparqBeam_C_EVENT_OnEnergyChanged::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_EVENT_OnEnergyChanged, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000114, "Member 'WEAPON_SparqBeam_C_EVENT_OnEnergyChanged::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_SparqBeam_C_EVENT_OnEnergyChanged, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000118, "Member 'WEAPON_SparqBeam_C_EVENT_OnEnergyChanged::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

}


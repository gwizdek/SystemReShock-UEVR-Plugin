#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_StatusDeck

#include "Basic.hpp"

#include "STRUCT_LevelInfo_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.ExecuteUbergraph_WIDGET_StatusDeck
// 0x00E0 (0x00E0 - 0x0000)
struct WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetDeckLevelName_LevelName;               // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LevelInfo                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck) == 0x000008, "Wrong alignment on WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck");
static_assert(sizeof(WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck) == 0x0000E0, "Wrong size on WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck");
static_assert(offsetof(WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck, EntryPoint) == 0x000000, "Member 'WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck, CallFunc_GetDeckLevelName_LevelName) == 0x000004, "Member 'WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck::CallFunc_GetDeckLevelName_LevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000D8, "Member 'WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck, K2Node_Event_IsDesignTime) == 0x0000D9, "Member 'WIDGET_StatusDeck_C_ExecuteUbergraph_WIDGET_StatusDeck::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_StatusDeck_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_StatusDeck_C_PreConstruct) == 0x000001, "Wrong alignment on WIDGET_StatusDeck_C_PreConstruct");
static_assert(sizeof(WIDGET_StatusDeck_C_PreConstruct) == 0x000001, "Wrong size on WIDGET_StatusDeck_C_PreConstruct");
static_assert(offsetof(WIDGET_StatusDeck_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WIDGET_StatusDeck_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.GetDeckLevelName
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_StatusDeck_C_GetDeckLevelName final
{
public:
	class FName                                   LevelName;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(WIDGET_StatusDeck_C_GetDeckLevelName) == 0x000008, "Wrong alignment on WIDGET_StatusDeck_C_GetDeckLevelName");
static_assert(sizeof(WIDGET_StatusDeck_C_GetDeckLevelName) == 0x000018, "Wrong size on WIDGET_StatusDeck_C_GetDeckLevelName");
static_assert(offsetof(WIDGET_StatusDeck_C_GetDeckLevelName, LevelName) == 0x000000, "Member 'WIDGET_StatusDeck_C_GetDeckLevelName::LevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_GetDeckLevelName, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000008, "Member 'WIDGET_StatusDeck_C_GetDeckLevelName::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.InitializeStatusDeck
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_StatusDeck_C_InitializeStatusDeck final
{
public:
	class UWIDGET_Status_C*                       Status;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     SingleplayerGameInstance;                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_StatusDeck_C_InitializeStatusDeck) == 0x000008, "Wrong alignment on WIDGET_StatusDeck_C_InitializeStatusDeck");
static_assert(sizeof(WIDGET_StatusDeck_C_InitializeStatusDeck) == 0x000038, "Wrong size on WIDGET_StatusDeck_C_InitializeStatusDeck");
static_assert(offsetof(WIDGET_StatusDeck_C_InitializeStatusDeck, Status) == 0x000000, "Member 'WIDGET_StatusDeck_C_InitializeStatusDeck::Status' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_InitializeStatusDeck, SingleplayerGameInstance) == 0x000008, "Member 'WIDGET_StatusDeck_C_InitializeStatusDeck::SingleplayerGameInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_InitializeStatusDeck, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WIDGET_StatusDeck_C_InitializeStatusDeck::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_InitializeStatusDeck, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'WIDGET_StatusDeck_C_InitializeStatusDeck::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_InitializeStatusDeck, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'WIDGET_StatusDeck_C_InitializeStatusDeck::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_InitializeStatusDeck, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WIDGET_StatusDeck_C_InitializeStatusDeck::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.HasVisitedLevel
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_StatusDeck_C_HasVisitedLevel final
{
public:
	class FName                                   LevelName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasVisited;                                        // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetDeckLevelName_LevelName;               // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasVisitedLevel_Result;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_StatusDeck_C_HasVisitedLevel) == 0x000008, "Wrong alignment on WIDGET_StatusDeck_C_HasVisitedLevel");
static_assert(sizeof(WIDGET_StatusDeck_C_HasVisitedLevel) == 0x000030, "Wrong size on WIDGET_StatusDeck_C_HasVisitedLevel");
static_assert(offsetof(WIDGET_StatusDeck_C_HasVisitedLevel, LevelName) == 0x000000, "Member 'WIDGET_StatusDeck_C_HasVisitedLevel::LevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_HasVisitedLevel, HasVisited) == 0x000008, "Member 'WIDGET_StatusDeck_C_HasVisitedLevel::HasVisited' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_HasVisitedLevel, CallFunc_GetDeckLevelName_LevelName) == 0x00000C, "Member 'WIDGET_StatusDeck_C_HasVisitedLevel::CallFunc_GetDeckLevelName_LevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_HasVisitedLevel, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'WIDGET_StatusDeck_C_HasVisitedLevel::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_HasVisitedLevel, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'WIDGET_StatusDeck_C_HasVisitedLevel::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_HasVisitedLevel, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_StatusDeck_C_HasVisitedLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_HasVisitedLevel, CallFunc_HasVisitedLevel_Result) == 0x000029, "Member 'WIDGET_StatusDeck_C_HasVisitedLevel::CallFunc_HasVisitedLevel_Result' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.UpdatePanelFont
// 0x001C (0x001C - 0x0000)
struct WIDGET_StatusDeck_C_UpdatePanelFont final
{
public:
	bool                                          VisitedLevel;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetDeckLevelName_LevelName;               // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasVisitedLevel_HasVisited;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_StatusDeck_C_UpdatePanelFont) == 0x000004, "Wrong alignment on WIDGET_StatusDeck_C_UpdatePanelFont");
static_assert(sizeof(WIDGET_StatusDeck_C_UpdatePanelFont) == 0x00001C, "Wrong size on WIDGET_StatusDeck_C_UpdatePanelFont");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdatePanelFont, VisitedLevel) == 0x000000, "Member 'WIDGET_StatusDeck_C_UpdatePanelFont::VisitedLevel' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdatePanelFont, CallFunc_GetDeckLevelName_LevelName) == 0x000004, "Member 'WIDGET_StatusDeck_C_UpdatePanelFont::CallFunc_GetDeckLevelName_LevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdatePanelFont, CallFunc_GetMeshUIColor_Color) == 0x00000C, "Member 'WIDGET_StatusDeck_C_UpdatePanelFont::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdatePanelFont, CallFunc_HasVisitedLevel_HasVisited) == 0x000010, "Member 'WIDGET_StatusDeck_C_UpdatePanelFont::CallFunc_HasVisitedLevel_HasVisited' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdatePanelFont, K2Node_MakeStruct_Color) == 0x000014, "Member 'WIDGET_StatusDeck_C_UpdatePanelFont::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdatePanelFont, CallFunc_GetMeshUIColor_Color_1) == 0x000018, "Member 'WIDGET_StatusDeck_C_UpdatePanelFont::CallFunc_GetMeshUIColor_Color_1' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.EVENT_OnMouseEnter
// 0x00C8 (0x00C8 - 0x0000)
struct WIDGET_StatusDeck_C_EVENT_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetDeckLevelName_LevelName;               // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasVisitedLevel_HasVisited;               // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_StatusDeck_C_EVENT_OnMouseEnter) == 0x000008, "Wrong alignment on WIDGET_StatusDeck_C_EVENT_OnMouseEnter");
static_assert(sizeof(WIDGET_StatusDeck_C_EVENT_OnMouseEnter) == 0x0000C8, "Wrong size on WIDGET_StatusDeck_C_EVENT_OnMouseEnter");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseEnter::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseEnter, CallFunc_Not_PreBool_ReturnValue) == 0x0000A8, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseEnter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseEnter, CallFunc_GetDeckLevelName_LevelName) == 0x0000AC, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseEnter::CallFunc_GetDeckLevelName_LevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseEnter, CallFunc_HasVisitedLevel_HasVisited) == 0x0000B4, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseEnter::CallFunc_HasVisitedLevel_HasVisited' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseEnter, CallFunc_PlayAnimation_ReturnValue) == 0x0000B8, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseEnter::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseEnter, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000C0, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseEnter::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.EVENT_OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WIDGET_StatusDeck_C_EVENT_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_StatusDeck_C_EVENT_OnMouseLeave) == 0x000008, "Wrong alignment on WIDGET_StatusDeck_C_EVENT_OnMouseLeave");
static_assert(sizeof(WIDGET_StatusDeck_C_EVENT_OnMouseLeave) == 0x000078, "Wrong size on WIDGET_StatusDeck_C_EVENT_OnMouseLeave");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseLeave::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseLeave, CallFunc_Not_PreBool_ReturnValue) == 0x000070, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseLeave::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.EVENT_OnMouseDown
// 0x0468 (0x0468 - 0x0000)
struct WIDGET_StatusDeck_C_EVENT_OnMouseDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
	bool                                          CallFunc_TryShowAutomapForSelectedDeck_Result;     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0220(0x00B8)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue_2;                    // 0x02E0(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_3;                    // 0x0398(0x00B8)()
	class FName                                   CallFunc_GetDeckLevelName_LevelName;               // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasVisitedLevel_HasVisited;               // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_StatusDeck_C_EVENT_OnMouseDown) == 0x000008, "Wrong alignment on WIDGET_StatusDeck_C_EVENT_OnMouseDown");
static_assert(sizeof(WIDGET_StatusDeck_C_EVENT_OnMouseDown) == 0x000468, "Wrong size on WIDGET_StatusDeck_C_EVENT_OnMouseDown");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDown, MyGeometry) == 0x000000, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDown, MouseEvent) == 0x000038, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDown, ReturnValue) == 0x0000A8, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDown, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDown, CallFunc_TryShowAutomapForSelectedDeck_Result) == 0x000218, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDown::CallFunc_TryShowAutomapForSelectedDeck_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDown, CallFunc_Handled_ReturnValue_1) == 0x000220, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDown, CallFunc_PlayAnimation_ReturnValue) == 0x0002D8, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDown::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDown, CallFunc_Handled_ReturnValue_2) == 0x0002E0, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDown::CallFunc_Handled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDown, CallFunc_Handled_ReturnValue_3) == 0x000398, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDown::CallFunc_Handled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDown, CallFunc_GetDeckLevelName_LevelName) == 0x000450, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDown::CallFunc_GetDeckLevelName_LevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDown, CallFunc_HasVisitedLevel_HasVisited) == 0x000458, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDown::CallFunc_HasVisitedLevel_HasVisited' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDown, CallFunc_PlayAnimation_ReturnValue_1) == 0x000460, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDown::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.SetSelected
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_StatusDeck_C_SetSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_StatusDeck_C_SetSelected) == 0x000001, "Wrong alignment on WIDGET_StatusDeck_C_SetSelected");
static_assert(sizeof(WIDGET_StatusDeck_C_SetSelected) == 0x000002, "Wrong size on WIDGET_StatusDeck_C_SetSelected");
static_assert(offsetof(WIDGET_StatusDeck_C_SetSelected, Selected) == 0x000000, "Member 'WIDGET_StatusDeck_C_SetSelected::Selected' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_SetSelected, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WIDGET_StatusDeck_C_SetSelected::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.EVENT_OnMouseDoubleClick
// 0x02D8 (0x02D8 - 0x0000)
struct WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
	bool                                          CallFunc_TryShowAutomapForSelectedDeck_Result;     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_EVENT_OnMouseDown_ReturnValue;            // 0x0220(0x00B8)()
};
static_assert(alignof(WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick) == 0x000008, "Wrong alignment on WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick");
static_assert(sizeof(WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick) == 0x0002D8, "Wrong size on WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick, MyGeometry) == 0x000000, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick, MouseEvent) == 0x000038, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick, ReturnValue) == 0x0000A8, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick, CallFunc_TryShowAutomapForSelectedDeck_Result) == 0x000218, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick::CallFunc_TryShowAutomapForSelectedDeck_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick, CallFunc_EVENT_OnMouseDown_ReturnValue) == 0x000220, "Member 'WIDGET_StatusDeck_C_EVENT_OnMouseDoubleClick::CallFunc_EVENT_OnMouseDown_ReturnValue' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.TryShowAutomapForSelectedDeck
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetDeckLevelName_LevelName;               // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetDeckLevelName_LevelName_1;             // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasVisitedLevel_HasVisited;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck) == 0x000008, "Wrong alignment on WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck");
static_assert(sizeof(WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck) == 0x000030, "Wrong size on WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck");
static_assert(offsetof(WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck, Result) == 0x000000, "Member 'WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck, CallFunc_GetDeckLevelName_LevelName) == 0x000004, "Member 'WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck::CallFunc_GetDeckLevelName_LevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck, CallFunc_GetDeckLevelName_LevelName_1) == 0x00000C, "Member 'WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck::CallFunc_GetDeckLevelName_LevelName_1' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck, CallFunc_HasVisitedLevel_HasVisited) == 0x000014, "Member 'WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck::CallFunc_HasVisitedLevel_HasVisited' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck, CallFunc_GetBagByType_Bag) == 0x000018, "Member 'WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck, CallFunc_FindItem_FoundItem) == 0x000020, "Member 'WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck::CallFunc_FindItem_FoundItem' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WIDGET_StatusDeck_C_TryShowAutomapForSelectedDeck::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.UpdateSplineMaterials
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_StatusDeck_C_UpdateSplineMaterials final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue_1;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertEndcapToDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_StatusDeck_C_UpdateSplineMaterials) == 0x000008, "Wrong alignment on WIDGET_StatusDeck_C_UpdateSplineMaterials");
static_assert(sizeof(WIDGET_StatusDeck_C_UpdateSplineMaterials) == 0x000038, "Wrong size on WIDGET_StatusDeck_C_UpdateSplineMaterials");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdateSplineMaterials, Temp_bool_Variable) == 0x000000, "Member 'WIDGET_StatusDeck_C_UpdateSplineMaterials::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdateSplineMaterials, Temp_float_Variable) == 0x000004, "Member 'WIDGET_StatusDeck_C_UpdateSplineMaterials::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdateSplineMaterials, Temp_float_Variable_1) == 0x000008, "Member 'WIDGET_StatusDeck_C_UpdateSplineMaterials::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdateSplineMaterials, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00000C, "Member 'WIDGET_StatusDeck_C_UpdateSplineMaterials::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdateSplineMaterials, CallFunc_Conv_BoolToFloat_ReturnValue_1) == 0x000010, "Member 'WIDGET_StatusDeck_C_UpdateSplineMaterials::CallFunc_Conv_BoolToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdateSplineMaterials, CallFunc_ConvertEndcapToDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'WIDGET_StatusDeck_C_UpdateSplineMaterials::CallFunc_ConvertEndcapToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdateSplineMaterials, K2Node_Select_Default) == 0x000020, "Member 'WIDGET_StatusDeck_C_UpdateSplineMaterials::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdateSplineMaterials, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000028, "Member 'WIDGET_StatusDeck_C_UpdateSplineMaterials::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_UpdateSplineMaterials, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WIDGET_StatusDeck_C_UpdateSplineMaterials::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_StatusDeck.WIDGET_StatusDeck_C.GetToolTipText
// 0x0110 (0x0110 - 0x0000)
struct WIDGET_StatusDeck_C_GetToolTipText final
{
public:
	class FText                                   ToolTip;                                           // 0x0000(0x0018)(Parm, OutParm)
	class FName                                   CallFunc_GetDeckLevelName_LevelName;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LevelInfo                      CallFunc_GetLevelInfo_LevelInfo;                   // 0x0038(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetLevelInfo_Found;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetDeckLevelName_LevelName_1;             // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasVisitedLevel_HasVisited;               // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_StatusDeck_C_GetToolTipText) == 0x000008, "Wrong alignment on WIDGET_StatusDeck_C_GetToolTipText");
static_assert(sizeof(WIDGET_StatusDeck_C_GetToolTipText) == 0x000110, "Wrong size on WIDGET_StatusDeck_C_GetToolTipText");
static_assert(offsetof(WIDGET_StatusDeck_C_GetToolTipText, ToolTip) == 0x000000, "Member 'WIDGET_StatusDeck_C_GetToolTipText::ToolTip' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_GetToolTipText, CallFunc_GetDeckLevelName_LevelName) == 0x000018, "Member 'WIDGET_StatusDeck_C_GetToolTipText::CallFunc_GetDeckLevelName_LevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_GetToolTipText, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'WIDGET_StatusDeck_C_GetToolTipText::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_GetToolTipText, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'WIDGET_StatusDeck_C_GetToolTipText::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_GetToolTipText, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WIDGET_StatusDeck_C_GetToolTipText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_GetToolTipText, CallFunc_GetLevelInfo_LevelInfo) == 0x000038, "Member 'WIDGET_StatusDeck_C_GetToolTipText::CallFunc_GetLevelInfo_LevelInfo' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_GetToolTipText, CallFunc_GetLevelInfo_Found) == 0x000100, "Member 'WIDGET_StatusDeck_C_GetToolTipText::CallFunc_GetLevelInfo_Found' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_GetToolTipText, CallFunc_GetDeckLevelName_LevelName_1) == 0x000104, "Member 'WIDGET_StatusDeck_C_GetToolTipText::CallFunc_GetDeckLevelName_LevelName_1' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusDeck_C_GetToolTipText, CallFunc_HasVisitedLevel_HasVisited) == 0x00010C, "Member 'WIDGET_StatusDeck_C_GetToolTipText::CallFunc_HasVisitedLevel_HasVisited' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_TargetID_TargetingReticle

#include "Basic.hpp"

#include "WIDGET_TargetID_TargetingReticle_classes.hpp"
#include "WIDGET_TargetID_TargetingReticle_parameters.hpp"


namespace SDK
{

// Function WIDGET_TargetID_TargetingReticle.WIDGET_TargetID_TargetingReticle_C.ExecuteUbergraph_WIDGET_TargetID_TargetingReticle
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_TargetID_TargetingReticle_C::ExecuteUbergraph_WIDGET_TargetID_TargetingReticle(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_TargetID_TargetingReticle_C", "ExecuteUbergraph_WIDGET_TargetID_TargetingReticle");

	Params::WIDGET_TargetID_TargetingReticle_C_ExecuteUbergraph_WIDGET_TargetID_TargetingReticle Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_TargetID_TargetingReticle.WIDGET_TargetID_TargetingReticle_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_TargetID_TargetingReticle_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_TargetID_TargetingReticle_C", "Tick");

	Params::WIDGET_TargetID_TargetingReticle_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_TargetID_TargetingReticle.WIDGET_TargetID_TargetingReticle_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWIDGET_TargetID_TargetingReticle_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_TargetID_TargetingReticle_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_TargetID_TargetingReticle.WIDGET_TargetID_TargetingReticle_C.OnAcquireTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Enemy_C*                    Enemy                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_TargetID_TargetingReticle_C::OnAcquireTarget(class APAWN_Enemy_C* Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_TargetID_TargetingReticle_C", "OnAcquireTarget");

	Params::WIDGET_TargetID_TargetingReticle_C_OnAcquireTarget Parms{};

	Parms.Enemy = Enemy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_TargetID_TargetingReticle.WIDGET_TargetID_TargetingReticle_C.OnCursorAligned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsAligned                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_TargetID_TargetingReticle_C::OnCursorAligned(bool IsAligned)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_TargetID_TargetingReticle_C", "OnCursorAligned");

	Params::WIDGET_TargetID_TargetingReticle_C_OnCursorAligned Parms{};

	Parms.IsAligned = IsAligned;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_TargetID_TargetingReticle.WIDGET_TargetID_TargetingReticle_C.TryUpdateCursorOver
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_TargetID_TargetingReticle_C::TryUpdateCursorOver(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_TargetID_TargetingReticle_C", "TryUpdateCursorOver");

	Params::WIDGET_TargetID_TargetingReticle_C_TryUpdateCursorOver Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_TargetID_TargetingReticle.WIDGET_TargetID_TargetingReticle_C.UpdateWeakspotLocation
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_TargetID_TargetingReticle_C::UpdateWeakspotLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_TargetID_TargetingReticle_C", "UpdateWeakspotLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_TargetID_TargetingReticle.WIDGET_TargetID_TargetingReticle_C.EVENT_OnDismissAnimationFinished
// (Private, BlueprintCallable, BlueprintEvent)

void UWIDGET_TargetID_TargetingReticle_C::EVENT_OnDismissAnimationFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_TargetID_TargetingReticle_C", "EVENT_OnDismissAnimationFinished");

	UObject::ProcessEvent(Func, nullptr);
}

}


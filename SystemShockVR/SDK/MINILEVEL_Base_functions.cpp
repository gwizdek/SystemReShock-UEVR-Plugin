#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MINILEVEL_Base

#include "Basic.hpp"

#include "MINILEVEL_Base_classes.hpp"
#include "MINILEVEL_Base_parameters.hpp"


namespace SDK
{

// Function MINILEVEL_Base.MINILEVEL_Base_C.ExecuteUbergraph_MINILEVEL_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMINILEVEL_Base_C::ExecuteUbergraph_MINILEVEL_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MINILEVEL_Base_C", "ExecuteUbergraph_MINILEVEL_Base");

	Params::MINILEVEL_Base_C_ExecuteUbergraph_MINILEVEL_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MINILEVEL_Base.MINILEVEL_Base_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMINILEVEL_Base_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MINILEVEL_Base_C", "ReceiveTick");

	Params::MINILEVEL_Base_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MINILEVEL_Base.MINILEVEL_Base_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMINILEVEL_Base_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MINILEVEL_Base_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MINILEVEL_Base.MINILEVEL_Base_C.InitializeMinigame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACON_Hacker_C*                    PlayerController_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APAWN_Hacker_Simple_C*            PlayerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneCaptureComponent2D*         SceneCaptureComponent_0                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMINILEVEL_Base_C::InitializeMinigame(class ACON_Hacker_C* PlayerController_0, class APAWN_Hacker_Simple_C* PlayerPawn, class USceneCaptureComponent2D* SceneCaptureComponent_0, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MINILEVEL_Base_C", "InitializeMinigame");

	Params::MINILEVEL_Base_C_InitializeMinigame Parms{};

	Parms.PlayerController_0 = PlayerController_0;
	Parms.PlayerPawn = PlayerPawn;
	Parms.SceneCaptureComponent_0 = SceneCaptureComponent_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function MINILEVEL_Base.MINILEVEL_Base_C.UpdateMinigame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMINILEVEL_Base_C::UpdateMinigame(float DeltaTime, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MINILEVEL_Base_C", "UpdateMinigame");

	Params::MINILEVEL_Base_C_UpdateMinigame Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function MINILEVEL_Base.MINILEVEL_Base_C.UnloadMinigame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMINILEVEL_Base_C::UnloadMinigame(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MINILEVEL_Base_C", "UnloadMinigame");

	Params::MINILEVEL_Base_C_UnloadMinigame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function MINILEVEL_Base.MINILEVEL_Base_C.PossessMinigamePawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            TargetPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APAWN_Hacker_Simple_C*            HackerPawn_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ACON_Hacker_C*                    Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMINILEVEL_Base_C::PossessMinigamePawn(class APawn* TargetPawn, class APAWN_Hacker_Simple_C* HackerPawn_0, class ACON_Hacker_C* Controller, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MINILEVEL_Base_C", "PossessMinigamePawn");

	Params::MINILEVEL_Base_C_PossessMinigamePawn Parms{};

	Parms.TargetPawn = TargetPawn;
	Parms.HackerPawn_0 = HackerPawn_0;
	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function MINILEVEL_Base.MINILEVEL_Base_C.TogglePause
// (Public, BlueprintCallable, BlueprintEvent)

void AMINILEVEL_Base_C::TogglePause()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MINILEVEL_Base_C", "TogglePause");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MINILEVEL_Base.MINILEVEL_Base_C.OnGamePaused
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMINILEVEL_Base_C::OnGamePaused(class APlayerController* PlayerController_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MINILEVEL_Base_C", "OnGamePaused");

	Params::MINILEVEL_Base_C_OnGamePaused Parms{};

	Parms.PlayerController_0 = PlayerController_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MINILEVEL_Base.MINILEVEL_Base_C.OnGameUnpaused
// (Public, BlueprintCallable, BlueprintEvent)

void AMINILEVEL_Base_C::OnGameUnpaused()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MINILEVEL_Base_C", "OnGameUnpaused");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MINILEVEL_Base.MINILEVEL_Base_C.PlayMinigameSound
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundCue*                        SoundCue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAudioComponent*                  AudioComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMINILEVEL_Base_C::PlayMinigameSound(class USoundCue* SoundCue, class UAudioComponent** AudioComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MINILEVEL_Base_C", "PlayMinigameSound");

	Params::MINILEVEL_Base_C_PlayMinigameSound Parms{};

	Parms.SoundCue = SoundCue;

	UObject::ProcessEvent(Func, &Parms);

	if (AudioComponent != nullptr)
		*AudioComponent = Parms.AudioComponent;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_CustomWait

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_GameDifficulty_structs.hpp"
#include "AIModule_classes.hpp"
#include "ENUM_SpeedType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TASK_CustomWait.TASK_CustomWait_C
// 0x0038 (0x00E0 - 0x00A8)
class UTASK_CustomWait_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         WaitTime;                                          // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomDeviation;                                   // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TIMER_Wait;                                        // 0x00B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ChosenWaitTime;                                    // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitForever;                                       // 0x00C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TurnBodyRandomly;                                  // 0x00C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TIMER_TurnBody;                                    // 0x00C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          EnemyPawn;                                         // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     BodyTarget;                                        // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TASK_CustomWait(int32 EntryPoint);
	void ReceiveAbort(class AActor* OwnerActor);
	void EVENT_OnEndWait();
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void GetRandomWaitTime(float* RandomWaitTime);
	void EVENT_OnTurnBody();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TASK_CustomWait_C">();
	}
	static class UTASK_CustomWait_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTASK_CustomWait_C>();
	}
};
static_assert(alignof(UTASK_CustomWait_C) == 0x000008, "Wrong alignment on UTASK_CustomWait_C");
static_assert(sizeof(UTASK_CustomWait_C) == 0x0000E0, "Wrong size on UTASK_CustomWait_C");
static_assert(offsetof(UTASK_CustomWait_C, UberGraphFrame) == 0x0000A8, "Member 'UTASK_CustomWait_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTASK_CustomWait_C, WaitTime) == 0x0000B0, "Member 'UTASK_CustomWait_C::WaitTime' has a wrong offset!");
static_assert(offsetof(UTASK_CustomWait_C, RandomDeviation) == 0x0000B4, "Member 'UTASK_CustomWait_C::RandomDeviation' has a wrong offset!");
static_assert(offsetof(UTASK_CustomWait_C, TIMER_Wait) == 0x0000B8, "Member 'UTASK_CustomWait_C::TIMER_Wait' has a wrong offset!");
static_assert(offsetof(UTASK_CustomWait_C, ChosenWaitTime) == 0x0000C0, "Member 'UTASK_CustomWait_C::ChosenWaitTime' has a wrong offset!");
static_assert(offsetof(UTASK_CustomWait_C, WaitForever) == 0x0000C4, "Member 'UTASK_CustomWait_C::WaitForever' has a wrong offset!");
static_assert(offsetof(UTASK_CustomWait_C, TurnBodyRandomly) == 0x0000C5, "Member 'UTASK_CustomWait_C::TurnBodyRandomly' has a wrong offset!");
static_assert(offsetof(UTASK_CustomWait_C, TIMER_TurnBody) == 0x0000C8, "Member 'UTASK_CustomWait_C::TIMER_TurnBody' has a wrong offset!");
static_assert(offsetof(UTASK_CustomWait_C, EnemyPawn) == 0x0000D0, "Member 'UTASK_CustomWait_C::EnemyPawn' has a wrong offset!");
static_assert(offsetof(UTASK_CustomWait_C, BodyTarget) == 0x0000D8, "Member 'UTASK_CustomWait_C::BodyTarget' has a wrong offset!");

}


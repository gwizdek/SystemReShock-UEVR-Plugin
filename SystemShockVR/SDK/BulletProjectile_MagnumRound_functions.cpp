#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BulletProjectile_MagnumRound

#include "Basic.hpp"

#include "BulletProjectile_MagnumRound_classes.hpp"
#include "BulletProjectile_MagnumRound_parameters.hpp"


namespace SDK
{

// Function BulletProjectile_MagnumRound.BulletProjectile_MagnumRound_C.AcquireTarget
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BonusDamage                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BonusArmorPenetration                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABulletProjectile_MagnumRound_C::AcquireTarget(class AActor* Actor, int32 BonusDamage, int32 BonusArmorPenetration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletProjectile_MagnumRound_C", "AcquireTarget");

	Params::BulletProjectile_MagnumRound_C_AcquireTarget Parms{};

	Parms.Actor = Actor;
	Parms.BonusDamage = BonusDamage;
	Parms.BonusArmorPenetration = BonusArmorPenetration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BulletProjectile_MagnumRound.BulletProjectile_MagnumRound_C.TryBulletCollision
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// float                                   FrameHitDeltaTime                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABulletProjectile_MagnumRound_C::TryBulletCollision(const struct FHitResult& Hit, float FrameHitDeltaTime, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletProjectile_MagnumRound_C", "TryBulletCollision");

	Params::BulletProjectile_MagnumRound_C_TryBulletCollision Parms{};

	Parms.Hit = std::move(Hit);
	Parms.FrameHitDeltaTime = FrameHitDeltaTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BulletProjectile_MagnumRound.BulletProjectile_MagnumRound_C.TryApplyTargetDamageBonus
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABulletProjectile_MagnumRound_C::TryApplyTargetDamageBonus(class AActor* HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletProjectile_MagnumRound_C", "TryApplyTargetDamageBonus");

	Params::BulletProjectile_MagnumRound_C_TryApplyTargetDamageBonus Parms{};

	Parms.HitActor = HitActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BulletProjectile_MagnumRound.BulletProjectile_MagnumRound_C.SpawnTracerEffects
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraSystem*                   TracerSystem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABulletProjectile_MagnumRound_C::SpawnTracerEffects(class UNiagaraSystem* TracerSystem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletProjectile_MagnumRound_C", "SpawnTracerEffects");

	Params::BulletProjectile_MagnumRound_C_SpawnTracerEffects Parms{};

	Parms.TracerSystem = TracerSystem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BulletProjectile_MagnumRound.BulletProjectile_MagnumRound_C.TryUpdateTracerColor
// (Protected, BlueprintCallable, BlueprintEvent)

void ABulletProjectile_MagnumRound_C::TryUpdateTracerColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletProjectile_MagnumRound_C", "TryUpdateTracerColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BulletProjectile_MagnumRound.BulletProjectile_MagnumRound_C.GetBulletDamageDropoffRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABulletProjectile_MagnumRound_C::GetBulletDamageDropoffRate(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletProjectile_MagnumRound_C", "GetBulletDamageDropoffRate");

	Params::BulletProjectile_MagnumRound_C_GetBulletDamageDropoffRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BulletProjectile_MagnumRound.BulletProjectile_MagnumRound_C.SetDamageDropoffScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABulletProjectile_MagnumRound_C::SetDamageDropoffScale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletProjectile_MagnumRound_C", "SetDamageDropoffScale");

	Params::BulletProjectile_MagnumRound_C_SetDamageDropoffScale Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HARDWARE_TurboBoots_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "ITEM_HardwareBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C
// 0x0178 (0x03F8 - 0x0280)
class UHARDWARE_TurboBoots_Base_C : public UITEM_HardwareBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_HARDWARE_TurboBoots_Base_C;         // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FTimerHandle                           TurboBootTimerHandle;                              // 0x0288(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    EnergyDrainModData;                                // 0x0290(0x00A0)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FAttribModApplyData                    EnergyDrainInitialTickModData;                     // 0x0330(0x00A0)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         ActiveVersionNumber;                               // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurboElapsedTime;                                  // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastTurboMechanismUpdateTimestamp;                 // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnTurboMechanismStateChanged;                      // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UAudioComponent*                        LoopingAudioComponent;                             // 0x03F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnTurboMechanismStateChanged__DelegateSignature(bool State);
	void ExecuteUbergraph_HARDWARE_TurboBoots_Base(int32 EntryPoint);
	void GetActiveVersionNumber(int32* VersionNumber);
	void UpdateHardwareState(bool IsEnabled, bool* Result);
	void CanActivateTurboMechanism(bool* Result);
	void GetEnergyDrainTickRate(int32 VersionNumber, float* Result);
	void AddTurboElapsedTime(float Time);
	void ActivateTurboMechanism(int32 Version, bool* Result);
	void EVENT_OnEnergyDepleted();
	void DeactivateTurboMechanism(int32 VersionNumber, bool* Result);
	void OnTurboMechanismActivated(int32 VersionNumber, bool* Handled);
	void OnTurboMechanismDeactivated(int32 VersionNumber, bool* Handled);
	void OnTurboBootTick(float DeltaTime, float TurboElapsedTime_0);
	void EVENT_OnTurboBootTick();
	void GetHardwareFeatures(TArray<struct FSTRUCT_HardwareFeature>* Result);
	void TryStartTurboTick(bool* Result);
	void TryPlayTurboBootsSound(class USoundCue* SoundCue, bool IsLooping);
	void TryStopTurboBootsLoopingSound();
	void OnBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HARDWARE_TurboBoots_Base_C">();
	}
	static class UHARDWARE_TurboBoots_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHARDWARE_TurboBoots_Base_C>();
	}
};
static_assert(alignof(UHARDWARE_TurboBoots_Base_C) == 0x000008, "Wrong alignment on UHARDWARE_TurboBoots_Base_C");
static_assert(sizeof(UHARDWARE_TurboBoots_Base_C) == 0x0003F8, "Wrong size on UHARDWARE_TurboBoots_Base_C");
static_assert(offsetof(UHARDWARE_TurboBoots_Base_C, UberGraphFrame_HARDWARE_TurboBoots_Base_C) == 0x000280, "Member 'UHARDWARE_TurboBoots_Base_C::UberGraphFrame_HARDWARE_TurboBoots_Base_C' has a wrong offset!");
static_assert(offsetof(UHARDWARE_TurboBoots_Base_C, TurboBootTimerHandle) == 0x000288, "Member 'UHARDWARE_TurboBoots_Base_C::TurboBootTimerHandle' has a wrong offset!");
static_assert(offsetof(UHARDWARE_TurboBoots_Base_C, EnergyDrainModData) == 0x000290, "Member 'UHARDWARE_TurboBoots_Base_C::EnergyDrainModData' has a wrong offset!");
static_assert(offsetof(UHARDWARE_TurboBoots_Base_C, EnergyDrainInitialTickModData) == 0x000330, "Member 'UHARDWARE_TurboBoots_Base_C::EnergyDrainInitialTickModData' has a wrong offset!");
static_assert(offsetof(UHARDWARE_TurboBoots_Base_C, ActiveVersionNumber) == 0x0003D0, "Member 'UHARDWARE_TurboBoots_Base_C::ActiveVersionNumber' has a wrong offset!");
static_assert(offsetof(UHARDWARE_TurboBoots_Base_C, TurboElapsedTime) == 0x0003D4, "Member 'UHARDWARE_TurboBoots_Base_C::TurboElapsedTime' has a wrong offset!");
static_assert(offsetof(UHARDWARE_TurboBoots_Base_C, LastTurboMechanismUpdateTimestamp) == 0x0003D8, "Member 'UHARDWARE_TurboBoots_Base_C::LastTurboMechanismUpdateTimestamp' has a wrong offset!");
static_assert(offsetof(UHARDWARE_TurboBoots_Base_C, OnTurboMechanismStateChanged) == 0x0003E0, "Member 'UHARDWARE_TurboBoots_Base_C::OnTurboMechanismStateChanged' has a wrong offset!");
static_assert(offsetof(UHARDWARE_TurboBoots_Base_C, LoopingAudioComponent) == 0x0003F0, "Member 'UHARDWARE_TurboBoots_Base_C::LoopingAudioComponent' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_Hotbar

#include "Basic.hpp"

#include "StreamingSaveGameSystem_structs.hpp"
#include "STRUCT_HotbarCategorySettings_structs.hpp"


namespace SDK::Params
{

// Function COMP_Hotbar.COMP_Hotbar_C.OnAddedToHotbar__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct COMP_Hotbar_C_OnAddedToHotbar__DelegateSignature final
{
public:
	class UCOMP_Hotbar_C*                         HotbarComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         SlotIndex;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Hotbar_C_OnAddedToHotbar__DelegateSignature) == 0x000008, "Wrong alignment on COMP_Hotbar_C_OnAddedToHotbar__DelegateSignature");
static_assert(sizeof(COMP_Hotbar_C_OnAddedToHotbar__DelegateSignature) == 0x000020, "Wrong size on COMP_Hotbar_C_OnAddedToHotbar__DelegateSignature");
static_assert(offsetof(COMP_Hotbar_C_OnAddedToHotbar__DelegateSignature, HotbarComponent) == 0x000000, "Member 'COMP_Hotbar_C_OnAddedToHotbar__DelegateSignature::HotbarComponent' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_OnAddedToHotbar__DelegateSignature, SlottableObject) == 0x000008, "Member 'COMP_Hotbar_C_OnAddedToHotbar__DelegateSignature::SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_OnAddedToHotbar__DelegateSignature, SlotIndex) == 0x000018, "Member 'COMP_Hotbar_C_OnAddedToHotbar__DelegateSignature::SlotIndex' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.OnRemovedFromHotbar__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct COMP_Hotbar_C_OnRemovedFromHotbar__DelegateSignature final
{
public:
	class UCOMP_Hotbar_C*                         HotbarComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         SlotIndex;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Hotbar_C_OnRemovedFromHotbar__DelegateSignature) == 0x000008, "Wrong alignment on COMP_Hotbar_C_OnRemovedFromHotbar__DelegateSignature");
static_assert(sizeof(COMP_Hotbar_C_OnRemovedFromHotbar__DelegateSignature) == 0x000020, "Wrong size on COMP_Hotbar_C_OnRemovedFromHotbar__DelegateSignature");
static_assert(offsetof(COMP_Hotbar_C_OnRemovedFromHotbar__DelegateSignature, HotbarComponent) == 0x000000, "Member 'COMP_Hotbar_C_OnRemovedFromHotbar__DelegateSignature::HotbarComponent' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_OnRemovedFromHotbar__DelegateSignature, SlottableObject) == 0x000008, "Member 'COMP_Hotbar_C_OnRemovedFromHotbar__DelegateSignature::SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_OnRemovedFromHotbar__DelegateSignature, SlotIndex) == 0x000018, "Member 'COMP_Hotbar_C_OnRemovedFromHotbar__DelegateSignature::SlotIndex' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.OnQuickSlotChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct COMP_Hotbar_C_OnQuickSlotChanged__DelegateSignature final
{
public:
	class UCOMP_Hotbar_C*                         HotbarComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewSlotIndex;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OldSlotIndex;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Hotbar_C_OnQuickSlotChanged__DelegateSignature) == 0x000008, "Wrong alignment on COMP_Hotbar_C_OnQuickSlotChanged__DelegateSignature");
static_assert(sizeof(COMP_Hotbar_C_OnQuickSlotChanged__DelegateSignature) == 0x000010, "Wrong size on COMP_Hotbar_C_OnQuickSlotChanged__DelegateSignature");
static_assert(offsetof(COMP_Hotbar_C_OnQuickSlotChanged__DelegateSignature, HotbarComponent) == 0x000000, "Member 'COMP_Hotbar_C_OnQuickSlotChanged__DelegateSignature::HotbarComponent' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_OnQuickSlotChanged__DelegateSignature, NewSlotIndex) == 0x000008, "Member 'COMP_Hotbar_C_OnQuickSlotChanged__DelegateSignature::NewSlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_OnQuickSlotChanged__DelegateSignature, OldSlotIndex) == 0x00000C, "Member 'COMP_Hotbar_C_OnQuickSlotChanged__DelegateSignature::OldSlotIndex' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.ExecuteUbergraph_COMP_Hotbar
// 0x0004 (0x0004 - 0x0000)
struct COMP_Hotbar_C_ExecuteUbergraph_COMP_Hotbar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Hotbar_C_ExecuteUbergraph_COMP_Hotbar) == 0x000004, "Wrong alignment on COMP_Hotbar_C_ExecuteUbergraph_COMP_Hotbar");
static_assert(sizeof(COMP_Hotbar_C_ExecuteUbergraph_COMP_Hotbar) == 0x000004, "Wrong size on COMP_Hotbar_C_ExecuteUbergraph_COMP_Hotbar");
static_assert(offsetof(COMP_Hotbar_C_ExecuteUbergraph_COMP_Hotbar, EntryPoint) == 0x000000, "Member 'COMP_Hotbar_C_ExecuteUbergraph_COMP_Hotbar::EntryPoint' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.InitializeHotbarSlots
// 0x0038 (0x0038 - 0x0000)
struct COMP_Hotbar_C_InitializeHotbarSlots final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_Array_Get_Item;                           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_InitializeHotbarSlots) == 0x000008, "Wrong alignment on COMP_Hotbar_C_InitializeHotbarSlots");
static_assert(sizeof(COMP_Hotbar_C_InitializeHotbarSlots) == 0x000038, "Wrong size on COMP_Hotbar_C_InitializeHotbarSlots");
static_assert(offsetof(COMP_Hotbar_C_InitializeHotbarSlots, Temp_int_Array_Index_Variable) == 0x000000, "Member 'COMP_Hotbar_C_InitializeHotbarSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_InitializeHotbarSlots, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000004, "Member 'COMP_Hotbar_C_InitializeHotbarSlots::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_InitializeHotbarSlots, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'COMP_Hotbar_C_InitializeHotbarSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_InitializeHotbarSlots, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'COMP_Hotbar_C_InitializeHotbarSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_InitializeHotbarSlots, CallFunc_Array_Get_Item) == 0x000010, "Member 'COMP_Hotbar_C_InitializeHotbarSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_InitializeHotbarSlots, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'COMP_Hotbar_C_InitializeHotbarSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_InitializeHotbarSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'COMP_Hotbar_C_InitializeHotbarSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_InitializeHotbarSlots, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000028, "Member 'COMP_Hotbar_C_InitializeHotbarSlots::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_InitializeHotbarSlots, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'COMP_Hotbar_C_InitializeHotbarSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.AddToSlot
// 0x0068 (0x0068 - 0x0000)
struct COMP_Hotbar_C_AddToSlot final
{
public:
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         SlotIndex;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ExistingSlotIndex;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSlotAtIndex_Result;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveFromSlotIndex_Result;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClearDuplicatePreference_Result;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_GetSlotAtIndex_SlottableObject;           // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveFromSlotIndex_Result_1;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue_1;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_AddToSlot) == 0x000008, "Wrong alignment on COMP_Hotbar_C_AddToSlot");
static_assert(sizeof(COMP_Hotbar_C_AddToSlot) == 0x000068, "Wrong size on COMP_Hotbar_C_AddToSlot");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, SlottableObject) == 0x000000, "Member 'COMP_Hotbar_C_AddToSlot::SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, SlotIndex) == 0x000010, "Member 'COMP_Hotbar_C_AddToSlot::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, Result) == 0x000014, "Member 'COMP_Hotbar_C_AddToSlot::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, ExistingSlotIndex) == 0x000018, "Member 'COMP_Hotbar_C_AddToSlot::ExistingSlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, CallFunc_CanSlotAtIndex_Result) == 0x00001C, "Member 'COMP_Hotbar_C_AddToSlot::CallFunc_CanSlotAtIndex_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, CallFunc_RemoveFromSlotIndex_Result) == 0x00001D, "Member 'COMP_Hotbar_C_AddToSlot::CallFunc_RemoveFromSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000020, "Member 'COMP_Hotbar_C_AddToSlot::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'COMP_Hotbar_C_AddToSlot::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'COMP_Hotbar_C_AddToSlot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, CallFunc_ClearDuplicatePreference_Result) == 0x000031, "Member 'COMP_Hotbar_C_AddToSlot::CallFunc_ClearDuplicatePreference_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, CallFunc_GetSlotAtIndex_SlottableObject) == 0x000038, "Member 'COMP_Hotbar_C_AddToSlot::CallFunc_GetSlotAtIndex_SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, CallFunc_RemoveFromSlotIndex_Result_1) == 0x000048, "Member 'COMP_Hotbar_C_AddToSlot::CallFunc_RemoveFromSlotIndex_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, CallFunc_Conv_InterfaceToObject_ReturnValue_1) == 0x000050, "Member 'COMP_Hotbar_C_AddToSlot::CallFunc_Conv_InterfaceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'COMP_Hotbar_C_AddToSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, CallFunc_GetSlotIndex_SlotIndex) == 0x00005C, "Member 'COMP_Hotbar_C_AddToSlot::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'COMP_Hotbar_C_AddToSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.AddToBestAvailableSlot
// 0x0080 (0x0080 - 0x0000)
struct COMP_Hotbar_C_AddToBestAvailableSlot final
{
public:
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UnpreferredSlotIndex;                              // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSlotIndex;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 SlottableClass;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotClassPreference_Result;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSlotAtIndex_Result;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlotted_Result;                         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSlottableClass_Result;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue_1;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_AddToBestAvailableSlot) == 0x000008, "Wrong alignment on COMP_Hotbar_C_AddToBestAvailableSlot");
static_assert(sizeof(COMP_Hotbar_C_AddToBestAvailableSlot) == 0x000080, "Wrong size on COMP_Hotbar_C_AddToBestAvailableSlot");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, SlottableObject) == 0x000000, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, Result) == 0x000010, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, UnpreferredSlotIndex) == 0x000014, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::UnpreferredSlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CurrentSlotIndex) == 0x000018, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CurrentSlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, SlottableClass) == 0x000020, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::SlottableClass' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000028, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, Temp_int_Array_Index_Variable) == 0x000030, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_IsSlotClassPreference_Result) == 0x000048, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_IsSlotClassPreference_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004A, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_CanSlotAtIndex_Result) == 0x00004B, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_CanSlotAtIndex_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_IsSlotted_Result) == 0x00004C, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_IsSlotted_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_IsSlottableClass_Result) == 0x00004D, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_IsSlottableClass_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_Not_PreBool_ReturnValue) == 0x00004E, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_Array_Get_Item) == 0x000058, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_Conv_InterfaceToObject_ReturnValue_1) == 0x000070, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_Conv_InterfaceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToBestAvailableSlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x000079, "Member 'COMP_Hotbar_C_AddToBestAvailableSlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.AddToSlotInternal
// 0x0028 (0x0028 - 0x0000)
struct COMP_Hotbar_C_AddToSlotInternal final
{
public:
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         SlotIndex;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Hotbar_C_AddToSlotInternal) == 0x000008, "Wrong alignment on COMP_Hotbar_C_AddToSlotInternal");
static_assert(sizeof(COMP_Hotbar_C_AddToSlotInternal) == 0x000028, "Wrong size on COMP_Hotbar_C_AddToSlotInternal");
static_assert(offsetof(COMP_Hotbar_C_AddToSlotInternal, SlottableObject) == 0x000000, "Member 'COMP_Hotbar_C_AddToSlotInternal::SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlotInternal, SlotIndex) == 0x000010, "Member 'COMP_Hotbar_C_AddToSlotInternal::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlotInternal, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000018, "Member 'COMP_Hotbar_C_AddToSlotInternal::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_AddToSlotInternal, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'COMP_Hotbar_C_AddToSlotInternal::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.ClearSlotPreference
// 0x0018 (0x0018 - 0x0000)
struct COMP_Hotbar_C_ClearSlotPreference final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	const class UClass*                           Temp_class_Variable;                               // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_ClearSlotPreference) == 0x000008, "Wrong alignment on COMP_Hotbar_C_ClearSlotPreference");
static_assert(sizeof(COMP_Hotbar_C_ClearSlotPreference) == 0x000018, "Wrong size on COMP_Hotbar_C_ClearSlotPreference");
static_assert(offsetof(COMP_Hotbar_C_ClearSlotPreference, SlotIndex) == 0x000000, "Member 'COMP_Hotbar_C_ClearSlotPreference::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearSlotPreference, Result) == 0x000004, "Member 'COMP_Hotbar_C_ClearSlotPreference::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearSlotPreference, Temp_class_Variable) == 0x000008, "Member 'COMP_Hotbar_C_ClearSlotPreference::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearSlotPreference, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000010, "Member 'COMP_Hotbar_C_ClearSlotPreference::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.ClearDuplicatePreference
// 0x0060 (0x0060 - 0x0000)
struct COMP_Hotbar_C_ClearDuplicatePreference final
{
public:
	class UClass*                                 SlottableClass;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CurrentSlotPreference;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSlotIndex;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClearSlotPreference_Result;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_ClearDuplicatePreference) == 0x000008, "Wrong alignment on COMP_Hotbar_C_ClearDuplicatePreference");
static_assert(sizeof(COMP_Hotbar_C_ClearDuplicatePreference) == 0x000060, "Wrong size on COMP_Hotbar_C_ClearDuplicatePreference");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, SlottableClass) == 0x000000, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::SlottableClass' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, Result) == 0x000008, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, CurrentSlotPreference) == 0x000010, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::CurrentSlotPreference' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, CurrentSlotIndex) == 0x000018, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::CurrentSlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, CallFunc_ClearSlotPreference_Result) == 0x000028, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::CallFunc_ClearSlotPreference_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, CallFunc_Array_Get_Item) == 0x000030, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000040, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000048, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ClearDuplicatePreference, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'COMP_Hotbar_C_ClearDuplicatePreference::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.RemoveFromSlotIndex
// 0x0058 (0x0058 - 0x0000)
struct COMP_Hotbar_C_RemoveFromSlotIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClearPreference;                                   // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObjectAtSlot;                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClearSlotPreference_Result;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> Temp_interface_Variable;                           // 0x0020(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_Array_Get_Item;                           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_RemoveFromSlotIndex) == 0x000008, "Wrong alignment on COMP_Hotbar_C_RemoveFromSlotIndex");
static_assert(sizeof(COMP_Hotbar_C_RemoveFromSlotIndex) == 0x000058, "Wrong size on COMP_Hotbar_C_RemoveFromSlotIndex");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlotIndex, SlotIndex) == 0x000000, "Member 'COMP_Hotbar_C_RemoveFromSlotIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlotIndex, ClearPreference) == 0x000004, "Member 'COMP_Hotbar_C_RemoveFromSlotIndex::ClearPreference' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlotIndex, Result) == 0x000005, "Member 'COMP_Hotbar_C_RemoveFromSlotIndex::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlotIndex, SlottableObjectAtSlot) == 0x000008, "Member 'COMP_Hotbar_C_RemoveFromSlotIndex::SlottableObjectAtSlot' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlotIndex, CallFunc_ClearSlotPreference_Result) == 0x000018, "Member 'COMP_Hotbar_C_RemoveFromSlotIndex::CallFunc_ClearSlotPreference_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlotIndex, Temp_interface_Variable) == 0x000020, "Member 'COMP_Hotbar_C_RemoveFromSlotIndex::Temp_interface_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlotIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'COMP_Hotbar_C_RemoveFromSlotIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlotIndex, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000038, "Member 'COMP_Hotbar_C_RemoveFromSlotIndex::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlotIndex, CallFunc_Array_Get_Item) == 0x000040, "Member 'COMP_Hotbar_C_RemoveFromSlotIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlotIndex, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'COMP_Hotbar_C_RemoveFromSlotIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlotIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000051, "Member 'COMP_Hotbar_C_RemoveFromSlotIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.IsSlotted
// 0x0020 (0x0020 - 0x0000)
struct COMP_Hotbar_C_IsSlotted final
{
public:
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_IsSlotted) == 0x000008, "Wrong alignment on COMP_Hotbar_C_IsSlotted");
static_assert(sizeof(COMP_Hotbar_C_IsSlotted) == 0x000020, "Wrong size on COMP_Hotbar_C_IsSlotted");
static_assert(offsetof(COMP_Hotbar_C_IsSlotted, SlottableObject) == 0x000000, "Member 'COMP_Hotbar_C_IsSlotted::SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlotted, Result) == 0x000010, "Member 'COMP_Hotbar_C_IsSlotted::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlotted, CallFunc_GetSlotIndex_SlotIndex) == 0x000014, "Member 'COMP_Hotbar_C_IsSlotted::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlotted, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'COMP_Hotbar_C_IsSlotted::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.IsUsingHotbarCategories
// 0x0001 (0x0001 - 0x0000)
struct COMP_Hotbar_C_IsUsingHotbarCategories final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_IsUsingHotbarCategories) == 0x000001, "Wrong alignment on COMP_Hotbar_C_IsUsingHotbarCategories");
static_assert(sizeof(COMP_Hotbar_C_IsUsingHotbarCategories) == 0x000001, "Wrong size on COMP_Hotbar_C_IsUsingHotbarCategories");
static_assert(offsetof(COMP_Hotbar_C_IsUsingHotbarCategories, Result) == 0x000000, "Member 'COMP_Hotbar_C_IsUsingHotbarCategories::Result' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.IsSlotClassPreference
// 0x0028 (0x0028 - 0x0000)
struct COMP_Hotbar_C_IsSlotClassPreference final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 SlottableClass;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_IsSlotClassPreference) == 0x000008, "Wrong alignment on COMP_Hotbar_C_IsSlotClassPreference");
static_assert(sizeof(COMP_Hotbar_C_IsSlotClassPreference) == 0x000028, "Wrong size on COMP_Hotbar_C_IsSlotClassPreference");
static_assert(offsetof(COMP_Hotbar_C_IsSlotClassPreference, SlotIndex) == 0x000000, "Member 'COMP_Hotbar_C_IsSlotClassPreference::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlotClassPreference, SlottableClass) == 0x000008, "Member 'COMP_Hotbar_C_IsSlotClassPreference::SlottableClass' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlotClassPreference, Result) == 0x000010, "Member 'COMP_Hotbar_C_IsSlotClassPreference::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlotClassPreference, CallFunc_Array_Get_Item) == 0x000018, "Member 'COMP_Hotbar_C_IsSlotClassPreference::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlotClassPreference, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000020, "Member 'COMP_Hotbar_C_IsSlotClassPreference::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlotClassPreference, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000021, "Member 'COMP_Hotbar_C_IsSlotClassPreference::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.GetSlotIndex
// 0x0028 (0x0028 - 0x0000)
struct COMP_Hotbar_C_GetSlotIndex final
{
public:
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         SlotIndex;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Hotbar_C_GetSlotIndex) == 0x000008, "Wrong alignment on COMP_Hotbar_C_GetSlotIndex");
static_assert(sizeof(COMP_Hotbar_C_GetSlotIndex) == 0x000028, "Wrong size on COMP_Hotbar_C_GetSlotIndex");
static_assert(offsetof(COMP_Hotbar_C_GetSlotIndex, SlottableObject) == 0x000000, "Member 'COMP_Hotbar_C_GetSlotIndex::SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetSlotIndex, SlotIndex) == 0x000010, "Member 'COMP_Hotbar_C_GetSlotIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetSlotIndex, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000018, "Member 'COMP_Hotbar_C_GetSlotIndex::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetSlotIndex, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'COMP_Hotbar_C_GetSlotIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetSlotIndex, CallFunc_Array_Find_ReturnValue) == 0x000024, "Member 'COMP_Hotbar_C_GetSlotIndex::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.GetSlotAtIndex
// 0x0030 (0x0030 - 0x0000)
struct COMP_Hotbar_C_GetSlotAtIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_GetSlotAtIndex) == 0x000008, "Wrong alignment on COMP_Hotbar_C_GetSlotAtIndex");
static_assert(sizeof(COMP_Hotbar_C_GetSlotAtIndex) == 0x000030, "Wrong size on COMP_Hotbar_C_GetSlotAtIndex");
static_assert(offsetof(COMP_Hotbar_C_GetSlotAtIndex, SlotIndex) == 0x000000, "Member 'COMP_Hotbar_C_GetSlotAtIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetSlotAtIndex, SlottableObject) == 0x000008, "Member 'COMP_Hotbar_C_GetSlotAtIndex::SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetSlotAtIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'COMP_Hotbar_C_GetSlotAtIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetSlotAtIndex, CallFunc_Array_Get_Item) == 0x000020, "Member 'COMP_Hotbar_C_GetSlotAtIndex::CallFunc_Array_Get_Item' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.GetSlotCount
// 0x0004 (0x0004 - 0x0000)
struct COMP_Hotbar_C_GetSlotCount final
{
public:
	int32                                         ResultCount;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Hotbar_C_GetSlotCount) == 0x000004, "Wrong alignment on COMP_Hotbar_C_GetSlotCount");
static_assert(sizeof(COMP_Hotbar_C_GetSlotCount) == 0x000004, "Wrong size on COMP_Hotbar_C_GetSlotCount");
static_assert(offsetof(COMP_Hotbar_C_GetSlotCount, ResultCount) == 0x000000, "Member 'COMP_Hotbar_C_GetSlotCount::ResultCount' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.RemoveFromSlot
// 0x0020 (0x0020 - 0x0000)
struct COMP_Hotbar_C_RemoveFromSlot final
{
public:
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ClearPreference;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveFromSlotIndex_Result;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_RemoveFromSlot) == 0x000008, "Wrong alignment on COMP_Hotbar_C_RemoveFromSlot");
static_assert(sizeof(COMP_Hotbar_C_RemoveFromSlot) == 0x000020, "Wrong size on COMP_Hotbar_C_RemoveFromSlot");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlot, SlottableObject) == 0x000000, "Member 'COMP_Hotbar_C_RemoveFromSlot::SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlot, ClearPreference) == 0x000010, "Member 'COMP_Hotbar_C_RemoveFromSlot::ClearPreference' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlot, Result) == 0x000011, "Member 'COMP_Hotbar_C_RemoveFromSlot::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlot, CallFunc_GetSlotIndex_SlotIndex) == 0x000014, "Member 'COMP_Hotbar_C_RemoveFromSlot::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_RemoveFromSlot, CallFunc_RemoveFromSlotIndex_Result) == 0x000018, "Member 'COMP_Hotbar_C_RemoveFromSlot::CallFunc_RemoveFromSlotIndex_Result' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.CanSlotAtIndex
// 0x00A8 (0x00A8 - 0x0000)
struct COMP_Hotbar_C_CanSlotAtIndex final
{
public:
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         SlotIndex;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentSlotCount;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HotbarCategorySettings         CategorySettings;                                  // 0x0020(0x0018)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 SlottableClass;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlottableClass_Result;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HotbarCategorySettings         CallFunc_Array_Get_Item;                           // 0x0070(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_Owner;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_CanSlotAtIndex) == 0x000008, "Wrong alignment on COMP_Hotbar_C_CanSlotAtIndex");
static_assert(sizeof(COMP_Hotbar_C_CanSlotAtIndex) == 0x0000A8, "Wrong size on COMP_Hotbar_C_CanSlotAtIndex");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, SlottableObject) == 0x000000, "Member 'COMP_Hotbar_C_CanSlotAtIndex::SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, SlotIndex) == 0x000010, "Member 'COMP_Hotbar_C_CanSlotAtIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, Result) == 0x000014, "Member 'COMP_Hotbar_C_CanSlotAtIndex::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CurrentSlotCount) == 0x000018, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CurrentSlotCount' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CategorySettings) == 0x000020, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CategorySettings' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, SlottableClass) == 0x000038, "Member 'COMP_Hotbar_C_CanSlotAtIndex::SlottableClass' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000040, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, Temp_int_Array_Index_Variable) == 0x000048, "Member 'COMP_Hotbar_C_CanSlotAtIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_GetObjectClass_ReturnValue) == 0x000050, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'COMP_Hotbar_C_CanSlotAtIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_IsSlottableClass_Result) == 0x000064, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_IsSlottableClass_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_ClassIsChildOf_ReturnValue) == 0x000065, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000066, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_Not_PreBool_ReturnValue) == 0x000067, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_BooleanAND_ReturnValue) == 0x000068, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_Array_Get_Item) == 0x000070, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_Less_IntInt_ReturnValue_1) == 0x00008C, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_GetOwner_ReturnValue) == 0x000090, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_GetOwner_Owner) == 0x000098, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_GetOwner_Owner' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CanSlotAtIndex, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A0, "Member 'COMP_Hotbar_C_CanSlotAtIndex::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.IsSlottableClass
// 0x0030 (0x0030 - 0x0000)
struct COMP_Hotbar_C_IsSlottableClass final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_IsSlottableClass) == 0x000008, "Wrong alignment on COMP_Hotbar_C_IsSlottableClass");
static_assert(sizeof(COMP_Hotbar_C_IsSlottableClass) == 0x000030, "Wrong size on COMP_Hotbar_C_IsSlottableClass");
static_assert(offsetof(COMP_Hotbar_C_IsSlottableClass, Class_0) == 0x000000, "Member 'COMP_Hotbar_C_IsSlottableClass::Class_0' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlottableClass, Result) == 0x000008, "Member 'COMP_Hotbar_C_IsSlottableClass::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlottableClass, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'COMP_Hotbar_C_IsSlottableClass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlottableClass, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'COMP_Hotbar_C_IsSlottableClass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlottableClass, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'COMP_Hotbar_C_IsSlottableClass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlottableClass, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'COMP_Hotbar_C_IsSlottableClass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlottableClass, CallFunc_Array_Get_Item) == 0x000020, "Member 'COMP_Hotbar_C_IsSlottableClass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlottableClass, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'COMP_Hotbar_C_IsSlottableClass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_IsSlottableClass, CallFunc_ClassIsChildOf_ReturnValue) == 0x000029, "Member 'COMP_Hotbar_C_IsSlottableClass::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.EmptySlots
// 0x001C (0x001C - 0x0000)
struct COMP_Hotbar_C_EmptySlots final
{
public:
	bool                                          ClearPreferences;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveFromSlotIndex_Result;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_EmptySlots) == 0x000004, "Wrong alignment on COMP_Hotbar_C_EmptySlots");
static_assert(sizeof(COMP_Hotbar_C_EmptySlots) == 0x00001C, "Wrong size on COMP_Hotbar_C_EmptySlots");
static_assert(offsetof(COMP_Hotbar_C_EmptySlots, ClearPreferences) == 0x000000, "Member 'COMP_Hotbar_C_EmptySlots::ClearPreferences' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_EmptySlots, Temp_int_Array_Index_Variable) == 0x000004, "Member 'COMP_Hotbar_C_EmptySlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_EmptySlots, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'COMP_Hotbar_C_EmptySlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_EmptySlots, CallFunc_RemoveFromSlotIndex_Result) == 0x00000C, "Member 'COMP_Hotbar_C_EmptySlots::CallFunc_RemoveFromSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_EmptySlots, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'COMP_Hotbar_C_EmptySlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_EmptySlots, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'COMP_Hotbar_C_EmptySlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_EmptySlots, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'COMP_Hotbar_C_EmptySlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.ActivateSlot
// 0x0028 (0x0028 - 0x0000)
struct COMP_Hotbar_C_ActivateSlot final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_Array_Get_Item;                           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActivateHotbarSlot_Result;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_ActivateSlot) == 0x000008, "Wrong alignment on COMP_Hotbar_C_ActivateSlot");
static_assert(sizeof(COMP_Hotbar_C_ActivateSlot) == 0x000028, "Wrong size on COMP_Hotbar_C_ActivateSlot");
static_assert(offsetof(COMP_Hotbar_C_ActivateSlot, SlotIndex) == 0x000000, "Member 'COMP_Hotbar_C_ActivateSlot::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ActivateSlot, Result) == 0x000004, "Member 'COMP_Hotbar_C_ActivateSlot::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ActivateSlot, CallFunc_Array_Get_Item) == 0x000008, "Member 'COMP_Hotbar_C_ActivateSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ActivateSlot, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000018, "Member 'COMP_Hotbar_C_ActivateSlot::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ActivateSlot, CallFunc_ActivateHotbarSlot_Result) == 0x000020, "Member 'COMP_Hotbar_C_ActivateSlot::CallFunc_ActivateHotbarSlot_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ActivateSlot, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'COMP_Hotbar_C_ActivateSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.DeactivateSlot
// 0x0028 (0x0028 - 0x0000)
struct COMP_Hotbar_C_DeactivateSlot final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_Array_Get_Item;                           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeactivateHotbarSlot_Result;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_DeactivateSlot) == 0x000008, "Wrong alignment on COMP_Hotbar_C_DeactivateSlot");
static_assert(sizeof(COMP_Hotbar_C_DeactivateSlot) == 0x000028, "Wrong size on COMP_Hotbar_C_DeactivateSlot");
static_assert(offsetof(COMP_Hotbar_C_DeactivateSlot, SlotIndex) == 0x000000, "Member 'COMP_Hotbar_C_DeactivateSlot::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_DeactivateSlot, Result) == 0x000004, "Member 'COMP_Hotbar_C_DeactivateSlot::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_DeactivateSlot, CallFunc_Array_Get_Item) == 0x000008, "Member 'COMP_Hotbar_C_DeactivateSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_DeactivateSlot, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000018, "Member 'COMP_Hotbar_C_DeactivateSlot::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_DeactivateSlot, CallFunc_DeactivateHotbarSlot_Result) == 0x000020, "Member 'COMP_Hotbar_C_DeactivateSlot::CallFunc_DeactivateHotbarSlot_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_DeactivateSlot, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'COMP_Hotbar_C_DeactivateSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.TryActivateQuickSlot
// 0x0003 (0x0003 - 0x0000)
struct COMP_Hotbar_C_TryActivateQuickSlot final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActivateSlot_Result;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_TryActivateQuickSlot) == 0x000001, "Wrong alignment on COMP_Hotbar_C_TryActivateQuickSlot");
static_assert(sizeof(COMP_Hotbar_C_TryActivateQuickSlot) == 0x000003, "Wrong size on COMP_Hotbar_C_TryActivateQuickSlot");
static_assert(offsetof(COMP_Hotbar_C_TryActivateQuickSlot, Result) == 0x000000, "Member 'COMP_Hotbar_C_TryActivateQuickSlot::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_TryActivateQuickSlot, CallFunc_ActivateSlot_Result) == 0x000001, "Member 'COMP_Hotbar_C_TryActivateQuickSlot::CallFunc_ActivateSlot_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_TryActivateQuickSlot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000002, "Member 'COMP_Hotbar_C_TryActivateQuickSlot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.TryUseConsumableAtSlot
// 0x0028 (0x0028 - 0x0000)
struct COMP_Hotbar_C_TryUseConsumableAtSlot final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_Array_Get_Item;                           // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryUseConsumable_Result;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_TryUseConsumableAtSlot) == 0x000008, "Wrong alignment on COMP_Hotbar_C_TryUseConsumableAtSlot");
static_assert(sizeof(COMP_Hotbar_C_TryUseConsumableAtSlot) == 0x000028, "Wrong size on COMP_Hotbar_C_TryUseConsumableAtSlot");
static_assert(offsetof(COMP_Hotbar_C_TryUseConsumableAtSlot, SlotIndex) == 0x000000, "Member 'COMP_Hotbar_C_TryUseConsumableAtSlot::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_TryUseConsumableAtSlot, Result) == 0x000004, "Member 'COMP_Hotbar_C_TryUseConsumableAtSlot::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_TryUseConsumableAtSlot, CallFunc_Array_Get_Item) == 0x000008, "Member 'COMP_Hotbar_C_TryUseConsumableAtSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_TryUseConsumableAtSlot, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000018, "Member 'COMP_Hotbar_C_TryUseConsumableAtSlot::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_TryUseConsumableAtSlot, CallFunc_TryUseConsumable_Result) == 0x000020, "Member 'COMP_Hotbar_C_TryUseConsumableAtSlot::CallFunc_TryUseConsumable_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_TryUseConsumableAtSlot, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'COMP_Hotbar_C_TryUseConsumableAtSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.CycleFromSlot
// 0x00B8 (0x00B8 - 0x0000)
struct COMP_Hotbar_C_CycleFromSlot final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 MatchClass;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 IgnoreClass;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Previous;                                          // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CycleIndex;                                        // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                SlottableObject;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSlotIndex;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Offset;                                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastSlotIndex;                                     // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartSlotIndex;                                    // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue_1;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue_1;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_Array_Get_Item;                           // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntUpperbound_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntLowerbound_ReturnValue;            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Hotbar_C_CycleFromSlot) == 0x000008, "Wrong alignment on COMP_Hotbar_C_CycleFromSlot");
static_assert(sizeof(COMP_Hotbar_C_CycleFromSlot) == 0x0000B8, "Wrong size on COMP_Hotbar_C_CycleFromSlot");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, SlotIndex) == 0x000000, "Member 'COMP_Hotbar_C_CycleFromSlot::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, MatchClass) == 0x000008, "Member 'COMP_Hotbar_C_CycleFromSlot::MatchClass' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, IgnoreClass) == 0x000010, "Member 'COMP_Hotbar_C_CycleFromSlot::IgnoreClass' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, Previous) == 0x000018, "Member 'COMP_Hotbar_C_CycleFromSlot::Previous' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CycleIndex) == 0x00001C, "Member 'COMP_Hotbar_C_CycleFromSlot::CycleIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, SlottableObject) == 0x000020, "Member 'COMP_Hotbar_C_CycleFromSlot::SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CurrentSlotIndex) == 0x000028, "Member 'COMP_Hotbar_C_CycleFromSlot::CurrentSlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, Offset) == 0x00002C, "Member 'COMP_Hotbar_C_CycleFromSlot::Offset' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, LastSlotIndex) == 0x000030, "Member 'COMP_Hotbar_C_CycleFromSlot::LastSlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, StartSlotIndex) == 0x000034, "Member 'COMP_Hotbar_C_CycleFromSlot::StartSlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, Temp_bool_Variable) == 0x000038, "Member 'COMP_Hotbar_C_CycleFromSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, Temp_int_Variable) == 0x00003C, "Member 'COMP_Hotbar_C_CycleFromSlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, Temp_bool_Variable_1) == 0x000040, "Member 'COMP_Hotbar_C_CycleFromSlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, Temp_int_Variable_1) == 0x000044, "Member 'COMP_Hotbar_C_CycleFromSlot::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_GetObjectClass_ReturnValue) == 0x000050, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_ClassIsChildOf_ReturnValue) == 0x000058, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_GetObjectClass_ReturnValue_1) == 0x000060, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_ClassIsChildOf_ReturnValue_1) == 0x000069, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_ClassIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, Temp_bool_Variable_2) == 0x00006A, "Member 'COMP_Hotbar_C_CycleFromSlot::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_IsValidClass_ReturnValue) == 0x00006B, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_IsValidClass_ReturnValue_1) == 0x00006C, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_IsValidClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x00006D, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_Not_PreBool_ReturnValue_2) == 0x00006E, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_Array_Get_Item) == 0x000070, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000080, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000088, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000089, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x00008C, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, K2Node_Select_Default) == 0x000090, "Member 'COMP_Hotbar_C_CycleFromSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000094, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000095, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_BooleanAND_ReturnValue) == 0x000096, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, K2Node_Select_Default_1) == 0x000098, "Member 'COMP_Hotbar_C_CycleFromSlot::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_WrapIntUpperbound_ReturnValue) == 0x0000A0, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_WrapIntUpperbound_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A4, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_WrapIntLowerbound_ReturnValue) == 0x0000A8, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_WrapIntLowerbound_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, CallFunc_IsValid_ReturnValue) == 0x0000AC, "Member 'COMP_Hotbar_C_CycleFromSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleFromSlot, K2Node_Select_Default_2) == 0x0000B0, "Member 'COMP_Hotbar_C_CycleFromSlot::K2Node_Select_Default_2' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.CycleQuickSlot
// 0x0008 (0x0008 - 0x0000)
struct COMP_Hotbar_C_CycleQuickSlot final
{
public:
	bool                                          Previous;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CycleFromSlot_CycleIndex;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Hotbar_C_CycleQuickSlot) == 0x000004, "Wrong alignment on COMP_Hotbar_C_CycleQuickSlot");
static_assert(sizeof(COMP_Hotbar_C_CycleQuickSlot) == 0x000008, "Wrong size on COMP_Hotbar_C_CycleQuickSlot");
static_assert(offsetof(COMP_Hotbar_C_CycleQuickSlot, Previous) == 0x000000, "Member 'COMP_Hotbar_C_CycleQuickSlot::Previous' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_CycleQuickSlot, CallFunc_CycleFromSlot_CycleIndex) == 0x000004, "Member 'COMP_Hotbar_C_CycleQuickSlot::CallFunc_CycleFromSlot_CycleIndex' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.GetQuickSlotIndex
// 0x0004 (0x0004 - 0x0000)
struct COMP_Hotbar_C_GetQuickSlotIndex final
{
public:
	int32                                         QuickSlotIndex;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Hotbar_C_GetQuickSlotIndex) == 0x000004, "Wrong alignment on COMP_Hotbar_C_GetQuickSlotIndex");
static_assert(sizeof(COMP_Hotbar_C_GetQuickSlotIndex) == 0x000004, "Wrong size on COMP_Hotbar_C_GetQuickSlotIndex");
static_assert(offsetof(COMP_Hotbar_C_GetQuickSlotIndex, QuickSlotIndex) == 0x000000, "Member 'COMP_Hotbar_C_GetQuickSlotIndex::QuickSlotIndex' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.SetQuickSlot
// 0x000C (0x000C - 0x0000)
struct COMP_Hotbar_C_SetQuickSlot final
{
public:
	int32                                         HotbarSlotIndex;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousQuickSlotIndex;                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_SetQuickSlot) == 0x000004, "Wrong alignment on COMP_Hotbar_C_SetQuickSlot");
static_assert(sizeof(COMP_Hotbar_C_SetQuickSlot) == 0x00000C, "Wrong size on COMP_Hotbar_C_SetQuickSlot");
static_assert(offsetof(COMP_Hotbar_C_SetQuickSlot, HotbarSlotIndex) == 0x000000, "Member 'COMP_Hotbar_C_SetQuickSlot::HotbarSlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetQuickSlot, PreviousQuickSlotIndex) == 0x000004, "Member 'COMP_Hotbar_C_SetQuickSlot::PreviousQuickSlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetQuickSlot, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'COMP_Hotbar_C_SetQuickSlot::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetQuickSlot, CallFunc_BooleanAND_ReturnValue) == 0x000009, "Member 'COMP_Hotbar_C_SetQuickSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.SetEnableHotbarCategories
// 0x0080 (0x0080 - 0x0000)
struct COMP_Hotbar_C_SetEnableHotbarCategories final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TScriptInterface<class IINTERF_HotbarSlottable_C>> PreviousSlottedObjects;                            // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToBestAvailableSlot_Result;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_Array_Get_Item_1;                         // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_SetEnableHotbarCategories) == 0x000008, "Wrong alignment on COMP_Hotbar_C_SetEnableHotbarCategories");
static_assert(sizeof(COMP_Hotbar_C_SetEnableHotbarCategories) == 0x000080, "Wrong size on COMP_Hotbar_C_SetEnableHotbarCategories");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, Enable) == 0x000000, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::Enable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, PreviousSlottedObjects) == 0x000008, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::PreviousSlottedObjects' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, Temp_int_Array_Index_Variable) == 0x000018, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_Array_Get_Item) == 0x000030, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_AddToBestAvailableSlot_Result) == 0x000040, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_AddToBestAvailableSlot_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_Array_Get_Item_1) == 0x000050, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000070, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_SetEnableHotbarCategories, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000079, "Member 'COMP_Hotbar_C_SetEnableHotbarCategories::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.GetFirstOccupiedSlotIndex
// 0x0030 (0x0030 - 0x0000)
struct COMP_Hotbar_C_GetFirstOccupiedSlotIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSlotIndex;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_GetSlotAtIndex_SlottableObject;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_GetFirstOccupiedSlotIndex) == 0x000008, "Wrong alignment on COMP_Hotbar_C_GetFirstOccupiedSlotIndex");
static_assert(sizeof(COMP_Hotbar_C_GetFirstOccupiedSlotIndex) == 0x000030, "Wrong size on COMP_Hotbar_C_GetFirstOccupiedSlotIndex");
static_assert(offsetof(COMP_Hotbar_C_GetFirstOccupiedSlotIndex, SlotIndex) == 0x000000, "Member 'COMP_Hotbar_C_GetFirstOccupiedSlotIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstOccupiedSlotIndex, CurrentSlotIndex) == 0x000004, "Member 'COMP_Hotbar_C_GetFirstOccupiedSlotIndex::CurrentSlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstOccupiedSlotIndex, Temp_int_Variable) == 0x000008, "Member 'COMP_Hotbar_C_GetFirstOccupiedSlotIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstOccupiedSlotIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'COMP_Hotbar_C_GetFirstOccupiedSlotIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstOccupiedSlotIndex, CallFunc_GetSlotAtIndex_SlottableObject) == 0x000010, "Member 'COMP_Hotbar_C_GetFirstOccupiedSlotIndex::CallFunc_GetSlotAtIndex_SlottableObject' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstOccupiedSlotIndex, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000020, "Member 'COMP_Hotbar_C_GetFirstOccupiedSlotIndex::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstOccupiedSlotIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'COMP_Hotbar_C_GetFirstOccupiedSlotIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstOccupiedSlotIndex, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'COMP_Hotbar_C_GetFirstOccupiedSlotIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstOccupiedSlotIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002D, "Member 'COMP_Hotbar_C_GetFirstOccupiedSlotIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.GetFirstFreeSlotIndexWithPreference
// 0x0048 (0x0048 - 0x0000)
struct COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference final
{
public:
	class UClass*                                 SlottableClass;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentSlotIndex;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlottableClass_Result;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSlotClassPreference_Result;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference) == 0x000008, "Wrong alignment on COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference");
static_assert(sizeof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference) == 0x000048, "Wrong size on COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, SlottableClass) == 0x000000, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::SlottableClass' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, Result) == 0x000008, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, CurrentSlotIndex) == 0x00000C, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::CurrentSlotIndex' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, CallFunc_IsSlottableClass_Result) == 0x000010, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::CallFunc_IsSlottableClass_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, Temp_int_Array_Index_Variable) == 0x000014, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, CallFunc_IsSlotClassPreference_Result) == 0x000020, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::CallFunc_IsSlotClassPreference_Result' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, CallFunc_Array_Get_Item) == 0x000028, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000038, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference, CallFunc_Not_PreBool_ReturnValue) == 0x000046, "Member 'COMP_Hotbar_C_GetFirstFreeSlotIndexWithPreference::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function COMP_Hotbar.COMP_Hotbar_C.ShouldSaveComponent
// 0x000C (0x000C - 0x0000)
struct COMP_Hotbar_C_ShouldSaveComponent final
{
public:
	struct FStreamingSaveGameComponentParams      Params_0;                                          // 0x0000(0x0004)(Parm, OutParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameComponentParams      K2Node_MakeStruct_StreamingSaveGameComponentParams; // 0x0008(0x0004)(NoDestructor)
};
static_assert(alignof(COMP_Hotbar_C_ShouldSaveComponent) == 0x000004, "Wrong alignment on COMP_Hotbar_C_ShouldSaveComponent");
static_assert(sizeof(COMP_Hotbar_C_ShouldSaveComponent) == 0x00000C, "Wrong size on COMP_Hotbar_C_ShouldSaveComponent");
static_assert(offsetof(COMP_Hotbar_C_ShouldSaveComponent, Params_0) == 0x000000, "Member 'COMP_Hotbar_C_ShouldSaveComponent::Params_0' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ShouldSaveComponent, ReturnValue) == 0x000004, "Member 'COMP_Hotbar_C_ShouldSaveComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Hotbar_C_ShouldSaveComponent, K2Node_MakeStruct_StreamingSaveGameComponentParams) == 0x000008, "Member 'COMP_Hotbar_C_ShouldSaveComponent::K2Node_MakeStruct_StreamingSaveGameComponentParams' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Skill

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Skill.Skill_C.SkillActivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Skill_C_SkillActivated__DelegateSignature final
{
public:
	class USkill_C*                               Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_C_SkillActivated__DelegateSignature) == 0x000008, "Wrong alignment on Skill_C_SkillActivated__DelegateSignature");
static_assert(sizeof(Skill_C_SkillActivated__DelegateSignature) == 0x000008, "Wrong size on Skill_C_SkillActivated__DelegateSignature");
static_assert(offsetof(Skill_C_SkillActivated__DelegateSignature, Skill) == 0x000000, "Member 'Skill_C_SkillActivated__DelegateSignature::Skill' has a wrong offset!");

// Function Skill.Skill_C.SkillDeactivated__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct Skill_C_SkillDeactivated__DelegateSignature final
{
public:
	class USkill_C*                               Skill;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_C_SkillDeactivated__DelegateSignature) == 0x000008, "Wrong alignment on Skill_C_SkillDeactivated__DelegateSignature");
static_assert(sizeof(Skill_C_SkillDeactivated__DelegateSignature) == 0x000008, "Wrong size on Skill_C_SkillDeactivated__DelegateSignature");
static_assert(offsetof(Skill_C_SkillDeactivated__DelegateSignature, Skill) == 0x000000, "Member 'Skill_C_SkillDeactivated__DelegateSignature::Skill' has a wrong offset!");

// Function Skill.Skill_C.TryUseSkill
// 0x0018 (0x0018 - 0x0000)
struct Skill_C_TryUseSkill final
{
public:
	class UCharacterAction_C*                     Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_ForceUseSkill_Result;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUseSkill_Result;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skill_C_TryUseSkill) == 0x000008, "Wrong alignment on Skill_C_TryUseSkill");
static_assert(sizeof(Skill_C_TryUseSkill) == 0x000018, "Wrong size on Skill_C_TryUseSkill");
static_assert(offsetof(Skill_C_TryUseSkill, Result) == 0x000000, "Member 'Skill_C_TryUseSkill::Result' has a wrong offset!");
static_assert(offsetof(Skill_C_TryUseSkill, CallFunc_ForceUseSkill_Result) == 0x000008, "Member 'Skill_C_TryUseSkill::CallFunc_ForceUseSkill_Result' has a wrong offset!");
static_assert(offsetof(Skill_C_TryUseSkill, CallFunc_CanUseSkill_Result) == 0x000010, "Member 'Skill_C_TryUseSkill::CallFunc_CanUseSkill_Result' has a wrong offset!");

// Function Skill.Skill_C.ForceUseSkill
// 0x0030 (0x0030 - 0x0000)
struct Skill_C_ForceUseSkill final
{
public:
	class UCharacterAction_C*                     Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnActivateSkill_Result;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMontageOptional_Result;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_C_ForceUseSkill) == 0x000008, "Wrong alignment on Skill_C_ForceUseSkill");
static_assert(sizeof(Skill_C_ForceUseSkill) == 0x000030, "Wrong size on Skill_C_ForceUseSkill");
static_assert(offsetof(Skill_C_ForceUseSkill, Result) == 0x000000, "Member 'Skill_C_ForceUseSkill::Result' has a wrong offset!");
static_assert(offsetof(Skill_C_ForceUseSkill, CallFunc_OnActivateSkill_Result) == 0x000008, "Member 'Skill_C_ForceUseSkill::CallFunc_OnActivateSkill_Result' has a wrong offset!");
static_assert(offsetof(Skill_C_ForceUseSkill, CallFunc_IsMontageOptional_Result) == 0x000009, "Member 'Skill_C_ForceUseSkill::CallFunc_IsMontageOptional_Result' has a wrong offset!");
static_assert(offsetof(Skill_C_ForceUseSkill, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'Skill_C_ForceUseSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Skill_C_ForceUseSkill, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'Skill_C_ForceUseSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_ForceUseSkill, CallFunc_IsValid_ReturnValue_1) == 0x00001D, "Member 'Skill_C_ForceUseSkill::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_C_ForceUseSkill, CallFunc_GetSkillPawn_SkillPawn) == 0x000020, "Member 'Skill_C_ForceUseSkill::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(Skill_C_ForceUseSkill, CallFunc_ForceBeginAction_Action) == 0x000028, "Member 'Skill_C_ForceUseSkill::CallFunc_ForceBeginAction_Action' has a wrong offset!");

// Function Skill.Skill_C.ForceDeactivateSkill
// 0x0002 (0x0002 - 0x0000)
struct Skill_C_ForceDeactivateSkill final
{
public:
	bool                                          CallFunc_OnDeactivateSkill_Result;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skill_C_ForceDeactivateSkill) == 0x000001, "Wrong alignment on Skill_C_ForceDeactivateSkill");
static_assert(sizeof(Skill_C_ForceDeactivateSkill) == 0x000002, "Wrong size on Skill_C_ForceDeactivateSkill");
static_assert(offsetof(Skill_C_ForceDeactivateSkill, CallFunc_OnDeactivateSkill_Result) == 0x000000, "Member 'Skill_C_ForceDeactivateSkill::CallFunc_OnDeactivateSkill_Result' has a wrong offset!");
static_assert(offsetof(Skill_C_ForceDeactivateSkill, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Skill_C_ForceDeactivateSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Skill.Skill_C.OnActivateSkill
// 0x0001 (0x0001 - 0x0000)
struct Skill_C_OnActivateSkill final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skill_C_OnActivateSkill) == 0x000001, "Wrong alignment on Skill_C_OnActivateSkill");
static_assert(sizeof(Skill_C_OnActivateSkill) == 0x000001, "Wrong size on Skill_C_OnActivateSkill");
static_assert(offsetof(Skill_C_OnActivateSkill, Result) == 0x000000, "Member 'Skill_C_OnActivateSkill::Result' has a wrong offset!");

// Function Skill.Skill_C.OnDeactivateSkill
// 0x0001 (0x0001 - 0x0000)
struct Skill_C_OnDeactivateSkill final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skill_C_OnDeactivateSkill) == 0x000001, "Wrong alignment on Skill_C_OnDeactivateSkill");
static_assert(sizeof(Skill_C_OnDeactivateSkill) == 0x000001, "Wrong size on Skill_C_OnDeactivateSkill");
static_assert(offsetof(Skill_C_OnDeactivateSkill, Result) == 0x000000, "Member 'Skill_C_OnDeactivateSkill::Result' has a wrong offset!");

// Function Skill.Skill_C.IsSkillActivated
// 0x0001 (0x0001 - 0x0000)
struct Skill_C_IsSkillActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skill_C_IsSkillActivated) == 0x000001, "Wrong alignment on Skill_C_IsSkillActivated");
static_assert(sizeof(Skill_C_IsSkillActivated) == 0x000001, "Wrong size on Skill_C_IsSkillActivated");
static_assert(offsetof(Skill_C_IsSkillActivated, Result) == 0x000000, "Member 'Skill_C_IsSkillActivated::Result' has a wrong offset!");

// Function Skill.Skill_C.GetSkillManager
// 0x0020 (0x0020 - 0x0000)
struct Skill_C_GetSkillManager final
{
public:
	class UCOMP_SkillManager_C*                   SkillManager;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_SkillManager_C*                   K2Node_DynamicCast_AsCOMP_Skill_Manager;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skill_C_GetSkillManager) == 0x000008, "Wrong alignment on Skill_C_GetSkillManager");
static_assert(sizeof(Skill_C_GetSkillManager) == 0x000020, "Wrong size on Skill_C_GetSkillManager");
static_assert(offsetof(Skill_C_GetSkillManager, SkillManager) == 0x000000, "Member 'Skill_C_GetSkillManager::SkillManager' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillManager, CallFunc_GetOuterObject_ReturnValue) == 0x000008, "Member 'Skill_C_GetSkillManager::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillManager, K2Node_DynamicCast_AsCOMP_Skill_Manager) == 0x000010, "Member 'Skill_C_GetSkillManager::K2Node_DynamicCast_AsCOMP_Skill_Manager' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillManager, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Skill_C_GetSkillManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Skill.Skill_C.GetSkillPawn
// 0x0038 (0x0038 - 0x0000)
struct Skill_C_GetSkillPawn final
{
public:
	class APAWN_Enemy_C*                          SkillPawn;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_SkillManager_C*                   K2Node_DynamicCast_AsCOMP_Skill_Manager;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skill_C_GetSkillPawn) == 0x000008, "Wrong alignment on Skill_C_GetSkillPawn");
static_assert(sizeof(Skill_C_GetSkillPawn) == 0x000038, "Wrong size on Skill_C_GetSkillPawn");
static_assert(offsetof(Skill_C_GetSkillPawn, SkillPawn) == 0x000000, "Member 'Skill_C_GetSkillPawn::SkillPawn' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillPawn, CallFunc_GetOuterObject_ReturnValue) == 0x000008, "Member 'Skill_C_GetSkillPawn::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillPawn, K2Node_DynamicCast_AsCOMP_Skill_Manager) == 0x000010, "Member 'Skill_C_GetSkillPawn::K2Node_DynamicCast_AsCOMP_Skill_Manager' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillPawn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Skill_C_GetSkillPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillPawn, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'Skill_C_GetSkillPawn::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillPawn, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000028, "Member 'Skill_C_GetSkillPawn::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillPawn, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'Skill_C_GetSkillPawn::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Skill.Skill_C.CanUseSkill
// 0x0020 (0x0020 - 0x0000)
struct Skill_C_CanUseSkill final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     TargetObject;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeginAction_Result;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skill_C_CanUseSkill) == 0x000008, "Wrong alignment on Skill_C_CanUseSkill");
static_assert(sizeof(Skill_C_CanUseSkill) == 0x000020, "Wrong size on Skill_C_CanUseSkill");
static_assert(offsetof(Skill_C_CanUseSkill, Result) == 0x000000, "Member 'Skill_C_CanUseSkill::Result' has a wrong offset!");
static_assert(offsetof(Skill_C_CanUseSkill, TargetObject) == 0x000008, "Member 'Skill_C_CanUseSkill::TargetObject' has a wrong offset!");
static_assert(offsetof(Skill_C_CanUseSkill, CallFunc_GetSkillPawn_SkillPawn) == 0x000010, "Member 'Skill_C_CanUseSkill::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(Skill_C_CanUseSkill, CallFunc_CanBeginAction_Result) == 0x000018, "Member 'Skill_C_CanUseSkill::CallFunc_CanBeginAction_Result' has a wrong offset!");

// Function Skill.Skill_C.IsMontageOptional
// 0x0001 (0x0001 - 0x0000)
struct Skill_C_IsMontageOptional final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skill_C_IsMontageOptional) == 0x000001, "Wrong alignment on Skill_C_IsMontageOptional");
static_assert(sizeof(Skill_C_IsMontageOptional) == 0x000001, "Wrong size on Skill_C_IsMontageOptional");
static_assert(offsetof(Skill_C_IsMontageOptional, Result) == 0x000000, "Member 'Skill_C_IsMontageOptional::Result' has a wrong offset!");

// Function Skill.Skill_C.EVENT_OnActionFinished
// 0x0014 (0x0014 - 0x0000)
struct Skill_C_EVENT_OnActionFinished final
{
public:
	bool                                          CallFunc_OnDeactivateSkill_Result;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkillActivated_Result;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(Skill_C_EVENT_OnActionFinished) == 0x000004, "Wrong alignment on Skill_C_EVENT_OnActionFinished");
static_assert(sizeof(Skill_C_EVENT_OnActionFinished) == 0x000014, "Wrong size on Skill_C_EVENT_OnActionFinished");
static_assert(offsetof(Skill_C_EVENT_OnActionFinished, CallFunc_OnDeactivateSkill_Result) == 0x000000, "Member 'Skill_C_EVENT_OnActionFinished::CallFunc_OnDeactivateSkill_Result' has a wrong offset!");
static_assert(offsetof(Skill_C_EVENT_OnActionFinished, CallFunc_IsSkillActivated_Result) == 0x000001, "Member 'Skill_C_EVENT_OnActionFinished::CallFunc_IsSkillActivated_Result' has a wrong offset!");
static_assert(offsetof(Skill_C_EVENT_OnActionFinished, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Skill_C_EVENT_OnActionFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function Skill.Skill_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct Skill_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnDeactivateSkill_Result;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnActivateSkill_Result;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartsWith_ReturnValue_1;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skill_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on Skill_C_ReceiveAnimationMessage");
static_assert(sizeof(Skill_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on Skill_C_ReceiveAnimationMessage");
static_assert(offsetof(Skill_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'Skill_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(Skill_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'Skill_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(Skill_C_ReceiveAnimationMessage, CallFunc_OnDeactivateSkill_Result) == 0x000011, "Member 'Skill_C_ReceiveAnimationMessage::CallFunc_OnDeactivateSkill_Result' has a wrong offset!");
static_assert(offsetof(Skill_C_ReceiveAnimationMessage, CallFunc_OnActivateSkill_Result) == 0x000012, "Member 'Skill_C_ReceiveAnimationMessage::CallFunc_OnActivateSkill_Result' has a wrong offset!");
static_assert(offsetof(Skill_C_ReceiveAnimationMessage, CallFunc_StartsWith_ReturnValue) == 0x000013, "Member 'Skill_C_ReceiveAnimationMessage::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_ReceiveAnimationMessage, CallFunc_StartsWith_ReturnValue_1) == 0x000014, "Member 'Skill_C_ReceiveAnimationMessage::CallFunc_StartsWith_ReturnValue_1' has a wrong offset!");

// Function Skill.Skill_C.GetAngleToTarget
// 0x0098 (0x0098 - 0x0000)
struct Skill_C_GetAngleToTarget final
{
public:
	float                                         AngleToTarget;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DirectionToTarget;                                 // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     Target;                                            // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Target_Location_Location;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn_1;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn_2;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AngleBetweenNormals_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_C_GetAngleToTarget) == 0x000008, "Wrong alignment on Skill_C_GetAngleToTarget");
static_assert(sizeof(Skill_C_GetAngleToTarget) == 0x000098, "Wrong size on Skill_C_GetAngleToTarget");
static_assert(offsetof(Skill_C_GetAngleToTarget, AngleToTarget) == 0x000000, "Member 'Skill_C_GetAngleToTarget::AngleToTarget' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, DirectionToTarget) == 0x000004, "Member 'Skill_C_GetAngleToTarget::DirectionToTarget' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, TargetLocation) == 0x000010, "Member 'Skill_C_GetAngleToTarget::TargetLocation' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, Target) == 0x000020, "Member 'Skill_C_GetAngleToTarget::Target' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, CallFunc_GetSkillPawn_SkillPawn) == 0x000028, "Member 'Skill_C_GetAngleToTarget::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'Skill_C_GetAngleToTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, CallFunc_Get_Target_Location_Location) == 0x00003C, "Member 'Skill_C_GetAngleToTarget::CallFunc_Get_Target_Location_Location' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'Skill_C_GetAngleToTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, CallFunc_GetSkillPawn_SkillPawn_1) == 0x000050, "Member 'Skill_C_GetAngleToTarget::CallFunc_GetSkillPawn_SkillPawn_1' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, CallFunc_GetSkillPawn_SkillPawn_2) == 0x000058, "Member 'Skill_C_GetAngleToTarget::CallFunc_GetSkillPawn_SkillPawn_2' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, CallFunc_GetActorForwardVector_ReturnValue) == 0x000060, "Member 'Skill_C_GetAngleToTarget::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, CallFunc_GetTarget_Target) == 0x000070, "Member 'Skill_C_GetAngleToTarget::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, CallFunc_AngleBetweenNormals_ReturnValue) == 0x000078, "Member 'Skill_C_GetAngleToTarget::CallFunc_AngleBetweenNormals_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00007C, "Member 'Skill_C_GetAngleToTarget::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetAngleToTarget, CallFunc_Vector_Normal2D_ReturnValue) == 0x000088, "Member 'Skill_C_GetAngleToTarget::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");

// Function Skill.Skill_C.GetSkillTargetLocations
// 0x00D0 (0x00D0 - 0x0000)
struct Skill_C_GetSkillTargetLocations final
{
public:
	TArray<struct FVector>                        Locations;                                         // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FVector>                        ScanLocations;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	class APAWN_SystemShockCharacter_C*           DetectedPawn;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     Target;                                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0xF];                                       // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetHeadTransform_Transform;               // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetDetectedPawn_Pawn;                     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skill_C_GetSkillTargetLocations) == 0x000010, "Wrong alignment on Skill_C_GetSkillTargetLocations");
static_assert(sizeof(Skill_C_GetSkillTargetLocations) == 0x0000D0, "Wrong size on Skill_C_GetSkillTargetLocations");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, Locations) == 0x000000, "Member 'Skill_C_GetSkillTargetLocations::Locations' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, ScanLocations) == 0x000010, "Member 'Skill_C_GetSkillTargetLocations::ScanLocations' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, DetectedPawn) == 0x000020, "Member 'Skill_C_GetSkillTargetLocations::DetectedPawn' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, Target) == 0x000028, "Member 'Skill_C_GetSkillTargetLocations::Target' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_GetHeadTransform_Transform) == 0x000040, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_GetHeadTransform_Transform' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_BreakTransform_Location) == 0x000070, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_BreakTransform_Rotation) == 0x00007C, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_BreakTransform_Scale) == 0x000088, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_IsPlayerControlled_ReturnValue) == 0x000094, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_Array_Add_ReturnValue) == 0x0000A4, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_GetSkillPawn_SkillPawn) == 0x0000A8, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_Array_Add_ReturnValue_1) == 0x0000B0, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_GetTarget_Target) == 0x0000B8, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_GetDetectedPawn_Pawn) == 0x0000C0, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_GetDetectedPawn_Pawn' has a wrong offset!");
static_assert(offsetof(Skill_C_GetSkillTargetLocations, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'Skill_C_GetSkillTargetLocations::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Skill.Skill_C.GetPredictedTargetLocation
// 0x00B0 (0x00B0 - 0x0000)
struct Skill_C_GetPredictedTargetLocation final
{
public:
	float                                         TimeInFuture;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PredictedLocation;                                 // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SourceLocation;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeToTarget;                                      // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceToTarget;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           TargetCharacter;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn_1;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBestAimTargetLocation_BestTargetLocation; // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn_2;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target_1;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetTargetCharacter_Character;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Skill_C_GetPredictedTargetLocation) == 0x000008, "Wrong alignment on Skill_C_GetPredictedTargetLocation");
static_assert(sizeof(Skill_C_GetPredictedTargetLocation) == 0x0000B0, "Wrong size on Skill_C_GetPredictedTargetLocation");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, TimeInFuture) == 0x000000, "Member 'Skill_C_GetPredictedTargetLocation::TimeInFuture' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, PredictedLocation) == 0x000004, "Member 'Skill_C_GetPredictedTargetLocation::PredictedLocation' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, SourceLocation) == 0x000010, "Member 'Skill_C_GetPredictedTargetLocation::SourceLocation' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, TargetLocation) == 0x00001C, "Member 'Skill_C_GetPredictedTargetLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, TimeToTarget) == 0x000028, "Member 'Skill_C_GetPredictedTargetLocation::TimeToTarget' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, DistanceToTarget) == 0x00002C, "Member 'Skill_C_GetPredictedTargetLocation::DistanceToTarget' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, TargetCharacter) == 0x000030, "Member 'Skill_C_GetPredictedTargetLocation::TargetCharacter' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_GetSkillPawn_SkillPawn) == 0x000038, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_GetSkillPawn_SkillPawn_1) == 0x000040, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_GetSkillPawn_SkillPawn_1' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_GetTarget_Target) == 0x000048, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000050, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_GetBestAimTargetLocation_BestTargetLocation) == 0x00005C, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_GetBestAimTargetLocation_BestTargetLocation' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000068, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_GetVelocity_ReturnValue) == 0x00006C, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000084, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_GetSkillPawn_SkillPawn_2) == 0x000090, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_GetSkillPawn_SkillPawn_2' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_GetTarget_Target_1) == 0x000098, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_GetTarget_Target_1' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_GetTargetCharacter_Character) == 0x0000A0, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_GetTargetCharacter_Character' has a wrong offset!");
static_assert(offsetof(Skill_C_GetPredictedTargetLocation, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'Skill_C_GetPredictedTargetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


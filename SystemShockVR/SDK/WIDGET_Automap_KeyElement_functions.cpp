#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Automap_KeyElement

#include "Basic.hpp"

#include "WIDGET_Automap_KeyElement_classes.hpp"
#include "WIDGET_Automap_KeyElement_parameters.hpp"


namespace SDK
{

// Function WIDGET_Automap_KeyElement.WIDGET_Automap_KeyElement_C.ExecuteUbergraph_WIDGET_Automap_KeyElement
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Automap_KeyElement_C::ExecuteUbergraph_WIDGET_Automap_KeyElement(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Automap_KeyElement_C", "ExecuteUbergraph_WIDGET_Automap_KeyElement");

	Params::WIDGET_Automap_KeyElement_C_ExecuteUbergraph_WIDGET_Automap_KeyElement Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Automap_KeyElement.WIDGET_Automap_KeyElement_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWIDGET_Automap_KeyElement_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Automap_KeyElement_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Automap_KeyElement.WIDGET_Automap_KeyElement_C.SetTexture
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        SoftTexture                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWIDGET_Automap_KeyElement_C::SetTexture(TSoftObjectPtr<class UTexture2D> SoftTexture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Automap_KeyElement_C", "SetTexture");

	Params::WIDGET_Automap_KeyElement_C_SetTexture Parms{};

	Parms.SoftTexture = SoftTexture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Automap_KeyElement.WIDGET_Automap_KeyElement_C.GetDynamicIconMaterial
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UMaterialInstanceDynamic*         DynamicMaterial_0                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_Automap_KeyElement_C::GetDynamicIconMaterial(class UMaterialInstanceDynamic** DynamicMaterial_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Automap_KeyElement_C", "GetDynamicIconMaterial");

	Params::WIDGET_Automap_KeyElement_C_GetDynamicIconMaterial Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DynamicMaterial_0 != nullptr)
		*DynamicMaterial_0 = Parms.DynamicMaterial_0;
}


// Function WIDGET_Automap_KeyElement.WIDGET_Automap_KeyElement_C.GetShortAccessName
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             Text                                                   (Parm, OutParm)

void UWIDGET_Automap_KeyElement_C::GetShortAccessName(class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Automap_KeyElement_C", "GetShortAccessName");

	Params::WIDGET_Automap_KeyElement_C_GetShortAccessName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function WIDGET_Automap_KeyElement.WIDGET_Automap_KeyElement_C.EVENT_OnMouseEnter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWIDGET_Automap_KeyElement_C::EVENT_OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Automap_KeyElement_C", "EVENT_OnMouseEnter");

	Params::WIDGET_Automap_KeyElement_C_EVENT_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Automap_KeyElement.WIDGET_Automap_KeyElement_C.EVENT_OnMouseLeave
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWIDGET_Automap_KeyElement_C::EVENT_OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Automap_KeyElement_C", "EVENT_OnMouseLeave");

	Params::WIDGET_Automap_KeyElement_C_EVENT_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_Automap_KeyElement.WIDGET_Automap_KeyElement_C.UpdateMouseOverVisuals
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_Automap_KeyElement_C::UpdateMouseOverVisuals()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Automap_KeyElement_C", "UpdateMouseOverVisuals");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_Automap_KeyElement.WIDGET_Automap_KeyElement_C.GetToolTipText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             ToolTip                                                (Parm, OutParm)

void UWIDGET_Automap_KeyElement_C::GetToolTipText(class FText* ToolTip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_Automap_KeyElement_C", "GetToolTipText");

	Params::WIDGET_Automap_KeyElement_C_GetToolTipText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ToolTip != nullptr)
		*ToolTip = std::move(Parms.ToolTip);
}

}


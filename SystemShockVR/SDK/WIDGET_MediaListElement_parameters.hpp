#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_MediaListElement

#include "Basic.hpp"

#include "STRUCT_MediaObject_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "STRUCT_NarrativeSpeakers_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_MediaListElement.WIDGET_MediaListElement_C.ExecuteUbergraph_WIDGET_MediaListElement
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_MediaListElement_C_ExecuteUbergraph_WIDGET_MediaListElement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaListElement_C_ExecuteUbergraph_WIDGET_MediaListElement) == 0x000004, "Wrong alignment on WIDGET_MediaListElement_C_ExecuteUbergraph_WIDGET_MediaListElement");
static_assert(sizeof(WIDGET_MediaListElement_C_ExecuteUbergraph_WIDGET_MediaListElement) == 0x000040, "Wrong size on WIDGET_MediaListElement_C_ExecuteUbergraph_WIDGET_MediaListElement");
static_assert(offsetof(WIDGET_MediaListElement_C_ExecuteUbergraph_WIDGET_MediaListElement, EntryPoint) == 0x000000, "Member 'WIDGET_MediaListElement_C_ExecuteUbergraph_WIDGET_MediaListElement::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_ExecuteUbergraph_WIDGET_MediaListElement, K2Node_Event_MyGeometry) == 0x000004, "Member 'WIDGET_MediaListElement_C_ExecuteUbergraph_WIDGET_MediaListElement::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_ExecuteUbergraph_WIDGET_MediaListElement, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WIDGET_MediaListElement_C_ExecuteUbergraph_WIDGET_MediaListElement::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WIDGET_MediaListElement.WIDGET_MediaListElement_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_MediaListElement_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaListElement_C_Tick) == 0x000004, "Wrong alignment on WIDGET_MediaListElement_C_Tick");
static_assert(sizeof(WIDGET_MediaListElement_C_Tick) == 0x00003C, "Wrong size on WIDGET_MediaListElement_C_Tick");
static_assert(offsetof(WIDGET_MediaListElement_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_MediaListElement_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_MediaListElement_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_MediaListElement.WIDGET_MediaListElement_C.InitializeMediaListElement
// 0x01F0 (0x01F0 - 0x0000)
struct WIDGET_MediaListElement_C_InitializeMediaListElement final
{
public:
	class UITEM_MediaBase_C*                      NewMediaItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    PlayerHUD_0;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_AsDate_DateTime_ReturnValue;              // 0x00A0(0x0018)()
	struct FSTRUCT_NarrativeSpeakers              CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x00B8(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0128(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0170(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C0(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x01D8(0x0018)(ConstParm)
};
static_assert(alignof(WIDGET_MediaListElement_C_InitializeMediaListElement) == 0x000008, "Wrong alignment on WIDGET_MediaListElement_C_InitializeMediaListElement");
static_assert(sizeof(WIDGET_MediaListElement_C_InitializeMediaListElement) == 0x0001F0, "Wrong size on WIDGET_MediaListElement_C_InitializeMediaListElement");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, NewMediaItem) == 0x000000, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::NewMediaItem' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, PlayerHUD_0) == 0x000008, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::PlayerHUD_0' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, Temp_bool_Variable) == 0x000011, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000098, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, CallFunc_AsDate_DateTime_ReturnValue) == 0x0000A0, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::CallFunc_AsDate_DateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0000B8, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000120, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, K2Node_MakeStruct_FormatArgumentData) == 0x000128, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, CallFunc_TextIsEmpty_ReturnValue) == 0x000168, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, K2Node_MakeStruct_FormatArgumentData_1) == 0x000170, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, K2Node_MakeArray_Array) == 0x0001B0, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, CallFunc_Format_ReturnValue) == 0x0001C0, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_InitializeMediaListElement, K2Node_Select_Default) == 0x0001D8, "Member 'WIDGET_MediaListElement_C_InitializeMediaListElement::K2Node_Select_Default' has a wrong offset!");

// Function WIDGET_MediaListElement.WIDGET_MediaListElement_C.EVENT_OnMouseEnter
// 0x00E0 (0x00E0 - 0x0000)
struct WIDGET_MediaListElement_C_EVENT_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGamepadMovedCursorRecently_Result;     // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter) == 0x000008, "Wrong alignment on WIDGET_MediaListElement_C_EVENT_OnMouseEnter");
static_assert(sizeof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter) == 0x0000E0, "Wrong size on WIDGET_MediaListElement_C_EVENT_OnMouseEnter");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseEnter::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter, CallFunc_GetPlayerController_ReturnValue) == 0x0000A8, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseEnter::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter, K2Node_DynamicCast_AsCON_Hacker) == 0x0000B0, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseEnter::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseEnter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter, CallFunc_K2_GetPawn_ReturnValue) == 0x0000C0, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseEnter::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter, CallFunc_Not_PreBool_ReturnValue) == 0x0000C8, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseEnter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x0000D0, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseEnter::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseEnter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter, CallFunc_HasGamepadMovedCursorRecently_Result) == 0x0000D9, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseEnter::CallFunc_HasGamepadMovedCursorRecently_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseEnter, CallFunc_IsUsingGamepad_Result) == 0x0000DA, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseEnter::CallFunc_IsUsingGamepad_Result' has a wrong offset!");

// Function WIDGET_MediaListElement.WIDGET_MediaListElement_C.EVENT_OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_MediaListElement_C_EVENT_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_MediaListElement_C_EVENT_OnMouseLeave) == 0x000008, "Wrong alignment on WIDGET_MediaListElement_C_EVENT_OnMouseLeave");
static_assert(sizeof(WIDGET_MediaListElement_C_EVENT_OnMouseLeave) == 0x000070, "Wrong size on WIDGET_MediaListElement_C_EVENT_OnMouseLeave");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WIDGET_MediaListElement.WIDGET_MediaListElement_C.EVENT_OnMouseDown
// 0x0230 (0x0230 - 0x0000)
struct WIDGET_MediaListElement_C_EVENT_OnMouseDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
	TScriptInterface<class IBPI_MenuNavigationRecipient_C> CallFunc_ReceiveNavAccept_self_CastInput;          // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveNavAccept_Result;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaListElement_C_EVENT_OnMouseDown) == 0x000008, "Wrong alignment on WIDGET_MediaListElement_C_EVENT_OnMouseDown");
static_assert(sizeof(WIDGET_MediaListElement_C_EVENT_OnMouseDown) == 0x000230, "Wrong size on WIDGET_MediaListElement_C_EVENT_OnMouseDown");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseDown, MyGeometry) == 0x000000, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseDown, MouseEvent) == 0x000038, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseDown, ReturnValue) == 0x0000A8, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseDown, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseDown, CallFunc_ReceiveNavAccept_self_CastInput) == 0x000218, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseDown::CallFunc_ReceiveNavAccept_self_CastInput' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_EVENT_OnMouseDown, CallFunc_ReceiveNavAccept_Result) == 0x000228, "Member 'WIDGET_MediaListElement_C_EVENT_OnMouseDown::CallFunc_ReceiveNavAccept_Result' has a wrong offset!");

// Function WIDGET_MediaListElement.WIDGET_MediaListElement_C.RefreshTextColor
// 0x0068 (0x0068 - 0x0000)
struct WIDGET_MediaListElement_C_RefreshTextColor final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_2;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_3;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_4;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_5;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakePulsatingValue_ReturnValue;           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaListElement_C_RefreshTextColor) == 0x000004, "Wrong alignment on WIDGET_MediaListElement_C_RefreshTextColor");
static_assert(sizeof(WIDGET_MediaListElement_C_RefreshTextColor) == 0x000068, "Wrong size on WIDGET_MediaListElement_C_RefreshTextColor");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, Progress) == 0x000000, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::Progress' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_GetMeshUIColor_Color) == 0x000004, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_GetMeshUIColor_Color_1) == 0x000008, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_GetMeshUIColor_Color_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x00000C, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, K2Node_MakeStruct_Color) == 0x00001C, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_GetMeshUIColor_Color_2) == 0x000020, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_GetMeshUIColor_Color_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_GetMeshUIColor_Color_3) == 0x000024, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_GetMeshUIColor_Color_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x000028, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_GetMeshUIColor_Color_4) == 0x000038, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_GetMeshUIColor_Color_4' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_LinearColorLerp_ReturnValue) == 0x000040, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x000050, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_GetMeshUIColor_Color_5) == 0x000054, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_GetMeshUIColor_Color_5' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000058, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_MakePulsatingValue_ReturnValue) == 0x000060, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_MakePulsatingValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshTextColor, CallFunc_Ease_ReturnValue) == 0x000064, "Member 'WIDGET_MediaListElement_C_RefreshTextColor::CallFunc_Ease_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaListElement.WIDGET_MediaListElement_C.SetMediaSelected
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MediaListElement_C_SetMediaSelected final
{
public:
	bool                                          IsSelected_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaListElement_C_SetMediaSelected) == 0x000001, "Wrong alignment on WIDGET_MediaListElement_C_SetMediaSelected");
static_assert(sizeof(WIDGET_MediaListElement_C_SetMediaSelected) == 0x000001, "Wrong size on WIDGET_MediaListElement_C_SetMediaSelected");
static_assert(offsetof(WIDGET_MediaListElement_C_SetMediaSelected, IsSelected_0) == 0x000000, "Member 'WIDGET_MediaListElement_C_SetMediaSelected::IsSelected_0' has a wrong offset!");

// Function WIDGET_MediaListElement.WIDGET_MediaListElement_C.UpdateMediaListElement
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_MediaListElement_C_UpdateMediaListElement final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaListElement_C_UpdateMediaListElement) == 0x000004, "Wrong alignment on WIDGET_MediaListElement_C_UpdateMediaListElement");
static_assert(sizeof(WIDGET_MediaListElement_C_UpdateMediaListElement) == 0x000008, "Wrong size on WIDGET_MediaListElement_C_UpdateMediaListElement");
static_assert(offsetof(WIDGET_MediaListElement_C_UpdateMediaListElement, Progress) == 0x000000, "Member 'WIDGET_MediaListElement_C_UpdateMediaListElement::Progress' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_UpdateMediaListElement, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WIDGET_MediaListElement_C_UpdateMediaListElement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaListElement.WIDGET_MediaListElement_C.RefreshBackgroundColor
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_MediaListElement_C_RefreshBackgroundColor final
{
public:
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_1;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color_1;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaListElement_C_RefreshBackgroundColor) == 0x000004, "Wrong alignment on WIDGET_MediaListElement_C_RefreshBackgroundColor");
static_assert(sizeof(WIDGET_MediaListElement_C_RefreshBackgroundColor) == 0x000010, "Wrong size on WIDGET_MediaListElement_C_RefreshBackgroundColor");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshBackgroundColor, CallFunc_GetMeshUIColor_Color) == 0x000000, "Member 'WIDGET_MediaListElement_C_RefreshBackgroundColor::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshBackgroundColor, CallFunc_GetMeshUIColor_Color_1) == 0x000004, "Member 'WIDGET_MediaListElement_C_RefreshBackgroundColor::CallFunc_GetMeshUIColor_Color_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshBackgroundColor, K2Node_MakeStruct_Color) == 0x000008, "Member 'WIDGET_MediaListElement_C_RefreshBackgroundColor::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_RefreshBackgroundColor, K2Node_MakeStruct_Color_1) == 0x00000C, "Member 'WIDGET_MediaListElement_C_RefreshBackgroundColor::K2Node_MakeStruct_Color_1' has a wrong offset!");

// Function WIDGET_MediaListElement.WIDGET_MediaListElement_C.ToggleInteractivity
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MediaListElement_C_ToggleInteractivity final
{
public:
	bool                                          IsInteractive;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaListElement_C_ToggleInteractivity) == 0x000001, "Wrong alignment on WIDGET_MediaListElement_C_ToggleInteractivity");
static_assert(sizeof(WIDGET_MediaListElement_C_ToggleInteractivity) == 0x000001, "Wrong size on WIDGET_MediaListElement_C_ToggleInteractivity");
static_assert(offsetof(WIDGET_MediaListElement_C_ToggleInteractivity, IsInteractive) == 0x000000, "Member 'WIDGET_MediaListElement_C_ToggleInteractivity::IsInteractive' has a wrong offset!");

// Function WIDGET_MediaListElement.WIDGET_MediaListElement_C.SetHighlighted
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_MediaListElement_C_SetHighlighted final
{
public:
	bool                                          IsHighlighted_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color_1;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_2;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaListElement_C_SetHighlighted) == 0x000004, "Wrong alignment on WIDGET_MediaListElement_C_SetHighlighted");
static_assert(sizeof(WIDGET_MediaListElement_C_SetHighlighted) == 0x000018, "Wrong size on WIDGET_MediaListElement_C_SetHighlighted");
static_assert(offsetof(WIDGET_MediaListElement_C_SetHighlighted, IsHighlighted_0) == 0x000000, "Member 'WIDGET_MediaListElement_C_SetHighlighted::IsHighlighted_0' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_SetHighlighted, CallFunc_GetMeshUIColor_Color) == 0x000004, "Member 'WIDGET_MediaListElement_C_SetHighlighted::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_SetHighlighted, K2Node_MakeStruct_Color) == 0x000008, "Member 'WIDGET_MediaListElement_C_SetHighlighted::K2Node_MakeStruct_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_SetHighlighted, CallFunc_GetMeshUIColor_Color_1) == 0x00000C, "Member 'WIDGET_MediaListElement_C_SetHighlighted::CallFunc_GetMeshUIColor_Color_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_SetHighlighted, K2Node_MakeStruct_Color_1) == 0x000010, "Member 'WIDGET_MediaListElement_C_SetHighlighted::K2Node_MakeStruct_Color_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaListElement_C_SetHighlighted, CallFunc_GetMeshUIColor_Color_2) == 0x000014, "Member 'WIDGET_MediaListElement_C_SetHighlighted::CallFunc_GetMeshUIColor_Color_2' has a wrong offset!");

}


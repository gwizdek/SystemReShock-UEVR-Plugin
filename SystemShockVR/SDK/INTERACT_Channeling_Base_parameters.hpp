#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Channeling_Base

#include "Basic.hpp"

#include "ENUM_InteractionType_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.HasInitializedChannelingInteract
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Channeling_Base_C_HasInitializedChannelingInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Channeling_Base_C_HasInitializedChannelingInteract) == 0x000001, "Wrong alignment on INTERACT_Channeling_Base_C_HasInitializedChannelingInteract");
static_assert(sizeof(INTERACT_Channeling_Base_C_HasInitializedChannelingInteract) == 0x000001, "Wrong size on INTERACT_Channeling_Base_C_HasInitializedChannelingInteract");
static_assert(offsetof(INTERACT_Channeling_Base_C_HasInitializedChannelingInteract, Result) == 0x000000, "Member 'INTERACT_Channeling_Base_C_HasInitializedChannelingInteract::Result' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.HasActiveChannelingMoveControl
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_Channeling_Base_C_HasActiveChannelingMoveControl final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Channeling_Base_C_HasActiveChannelingMoveControl) == 0x000001, "Wrong alignment on INTERACT_Channeling_Base_C_HasActiveChannelingMoveControl");
static_assert(sizeof(INTERACT_Channeling_Base_C_HasActiveChannelingMoveControl) == 0x000002, "Wrong size on INTERACT_Channeling_Base_C_HasActiveChannelingMoveControl");
static_assert(offsetof(INTERACT_Channeling_Base_C_HasActiveChannelingMoveControl, Result) == 0x000000, "Member 'INTERACT_Channeling_Base_C_HasActiveChannelingMoveControl::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_HasActiveChannelingMoveControl, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'INTERACT_Channeling_Base_C_HasActiveChannelingMoveControl::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.CanResumeChannelingInteraction
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Channeling_Base_C_CanResumeChannelingInteraction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Channeling_Base_C_CanResumeChannelingInteraction) == 0x000001, "Wrong alignment on INTERACT_Channeling_Base_C_CanResumeChannelingInteraction");
static_assert(sizeof(INTERACT_Channeling_Base_C_CanResumeChannelingInteraction) == 0x000001, "Wrong size on INTERACT_Channeling_Base_C_CanResumeChannelingInteraction");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanResumeChannelingInteraction, Result) == 0x000000, "Member 'INTERACT_Channeling_Base_C_CanResumeChannelingInteraction::Result' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.CanPerformChannelingInteraction
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_Channeling_Base_C_CanPerformChannelingInteraction final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CurrentMontage;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChannelingWithAnyInteractable_Result;   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetChannelingInteractable_Result;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Channeling_Base_C*            K2Node_DynamicCast_AsINTERACT_Channeling_Base;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasActiveChannelingMoveControl_Result;    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChannelingWithInteractable_Result;      // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_CanPerformChannelingInteraction");
static_assert(sizeof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction) == 0x000048, "Wrong size on INTERACT_Channeling_Base_C_CanPerformChannelingInteraction");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, SourceActor) == 0x000000, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, Result) == 0x000008, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, CurrentMontage) == 0x000010, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::CurrentMontage' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, HackerPawn) == 0x000018, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000020, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, CallFunc_IsChannelingWithAnyInteractable_Result) == 0x000029, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::CallFunc_IsChannelingWithAnyInteractable_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, CallFunc_GetChannelingInteractable_Result) == 0x000030, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::CallFunc_GetChannelingInteractable_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, K2Node_DynamicCast_AsINTERACT_Channeling_Base) == 0x000038, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::K2Node_DynamicCast_AsINTERACT_Channeling_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, CallFunc_HasActiveChannelingMoveControl_Result) == 0x000041, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::CallFunc_HasActiveChannelingMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingInteraction, CallFunc_IsChannelingWithInteractable_Result) == 0x000043, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingInteraction::CallFunc_IsChannelingWithInteractable_Result' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.CanPerformChannelingSequence
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Channeling_Base_C_CanPerformChannelingSequence final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPerformChannelingInteraction_Result;   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesMovementAllowInteraction_Result;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Channeling_Base_C_CanPerformChannelingSequence) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_CanPerformChannelingSequence");
static_assert(sizeof(INTERACT_Channeling_Base_C_CanPerformChannelingSequence) == 0x000010, "Wrong size on INTERACT_Channeling_Base_C_CanPerformChannelingSequence");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingSequence, HackerPawn) == 0x000000, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingSequence::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingSequence, Result) == 0x000008, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingSequence::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingSequence, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingSequence, CallFunc_CanPerformChannelingInteraction_Result) == 0x00000A, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingSequence::CallFunc_CanPerformChannelingInteraction_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CanPerformChannelingSequence, CallFunc_DoesMovementAllowInteraction_Result) == 0x00000B, "Member 'INTERACT_Channeling_Base_C_CanPerformChannelingSequence::CallFunc_DoesMovementAllowInteraction_Result' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.ResumeChannelingInteraction
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Channeling_Base_C_ResumeChannelingInteraction final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ResumeChannelingSequence_IsWaitingToHolster; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Channeling_Base_C_ResumeChannelingInteraction) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_ResumeChannelingInteraction");
static_assert(sizeof(INTERACT_Channeling_Base_C_ResumeChannelingInteraction) == 0x000010, "Wrong size on INTERACT_Channeling_Base_C_ResumeChannelingInteraction");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingInteraction, HackerPawn) == 0x000000, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingInteraction::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingInteraction, CallFunc_ResumeChannelingSequence_IsWaitingToHolster) == 0x000008, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingInteraction::CallFunc_ResumeChannelingSequence_IsWaitingToHolster' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingInteraction, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000009, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingInteraction::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Channeling_Base_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Channeling_Base_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_ReceiveAnimationMessage");
static_assert(sizeof(INTERACT_Channeling_Base_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on INTERACT_Channeling_Base_C_ReceiveAnimationMessage");
static_assert(offsetof(INTERACT_Channeling_Base_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'INTERACT_Channeling_Base_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'INTERACT_Channeling_Base_C_ReceiveAnimationMessage::Result' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.TryBeginChannelingMovement
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Channeling_Base_C_TryBeginChannelingMovement final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     EquippedWeapon;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPerformChannelingSequence_Result;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMOVECONTROL_Base_C*                    CallFunc_CreateChannelingMoveControl_Result;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Channeling_Base_C_TryBeginChannelingMovement) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_TryBeginChannelingMovement");
static_assert(sizeof(INTERACT_Channeling_Base_C_TryBeginChannelingMovement) == 0x000038, "Wrong size on INTERACT_Channeling_Base_C_TryBeginChannelingMovement");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingMovement, HackerPawn) == 0x000000, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingMovement::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingMovement, CursorPrimitive) == 0x000008, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingMovement::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingMovement, Result) == 0x000010, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingMovement::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingMovement, EquippedWeapon) == 0x000018, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingMovement::EquippedWeapon' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingMovement, CallFunc_CanPerformChannelingSequence_Result) == 0x000020, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingMovement::CallFunc_CanPerformChannelingSequence_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingMovement, CallFunc_CreateChannelingMoveControl_Result) == 0x000028, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingMovement::CallFunc_CreateChannelingMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingMovement, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingMovement::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.TryBeginChannelingSequence
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_Channeling_Base_C_TryBeginChannelingSequence final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     EquippedWeapon;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPerformChannelingSequence_Result;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMOVECONTROL_Base_C*                    CallFunc_CreateChannelingMoveControl_Result;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponBase_C*                     CallFunc_GetEquippedWeapon_Weapon;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWaitingToHolster_Result;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_TryBeginChannelingSequence");
static_assert(sizeof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence) == 0x000060, "Wrong size on INTERACT_Channeling_Base_C_TryBeginChannelingSequence");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, HackerPawn) == 0x000000, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, CursorPrimitive) == 0x000008, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, Result) == 0x000010, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, EquippedWeapon) == 0x000018, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::EquippedWeapon' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, CallFunc_CanPerformChannelingSequence_Result) == 0x000020, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::CallFunc_CanPerformChannelingSequence_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000021, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, CallFunc_CreateChannelingMoveControl_Result) == 0x000028, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::CallFunc_CreateChannelingMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, CallFunc_GetEquippedWeapon_Weapon) == 0x000030, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::CallFunc_GetEquippedWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, CallFunc_IsWaitingToHolster_Result) == 0x000038, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::CallFunc_IsWaitingToHolster_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, CallFunc_GetInventory_Inventory) == 0x000050, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryBeginChannelingSequence, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'INTERACT_Channeling_Base_C_TryBeginChannelingSequence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.ResumeChannelingSequence
// 0x0068 (0x0068 - 0x0000)
struct INTERACT_Channeling_Base_C_ResumeChannelingSequence final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsWaitingToHolster;                                // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CurrentAction;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponBase_C*                     EquippedWeapon;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMOVECONTROL_Base_C*                    CallFunc_CreateChannelingMoveControl_Result;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponBase_C*                     CallFunc_GetEquippedWeapon_Weapon;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsHolsterActionPlaying_Result;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Channeling_Base_C_ResumeChannelingSequence) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_ResumeChannelingSequence");
static_assert(sizeof(INTERACT_Channeling_Base_C_ResumeChannelingSequence) == 0x000068, "Wrong size on INTERACT_Channeling_Base_C_ResumeChannelingSequence");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, HackerPawn) == 0x000000, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, IsWaitingToHolster) == 0x000008, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::IsWaitingToHolster' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, CurrentAction) == 0x000010, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::CurrentAction' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, EquippedWeapon) == 0x000018, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::EquippedWeapon' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, CallFunc_CreateChannelingMoveControl_Result) == 0x000020, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::CallFunc_CreateChannelingMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, CallFunc_GetCurrentAction_CurrentAction) == 0x000030, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, CallFunc_GetEquippedWeapon_Weapon) == 0x000038, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::CallFunc_GetEquippedWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, CallFunc_IsHolsterActionPlaying_Result) == 0x000050, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::CallFunc_IsHolsterActionPlaying_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_ResumeChannelingSequence, CallFunc_IsValid_ReturnValue_2) == 0x000064, "Member 'INTERACT_Channeling_Base_C_ResumeChannelingSequence::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.CreateChannelingMoveControl
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Channeling_Base_C_CreateChannelingMoveControl final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMOVECONTROL_Base_C*                    Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Channeling_Base_C_CreateChannelingMoveControl) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_CreateChannelingMoveControl");
static_assert(sizeof(INTERACT_Channeling_Base_C_CreateChannelingMoveControl) == 0x000010, "Wrong size on INTERACT_Channeling_Base_C_CreateChannelingMoveControl");
static_assert(offsetof(INTERACT_Channeling_Base_C_CreateChannelingMoveControl, HackerPawn) == 0x000000, "Member 'INTERACT_Channeling_Base_C_CreateChannelingMoveControl::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_CreateChannelingMoveControl, Result) == 0x000008, "Member 'INTERACT_Channeling_Base_C_CreateChannelingMoveControl::Result' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.TryPlayChannelingMontage
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_Channeling_Base_C_TryPlayChannelingMontage final
{
public:
	class UAnimMontage*                           LoadedMontage;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Channeling_Base_C_TryPlayChannelingMontage) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_TryPlayChannelingMontage");
static_assert(sizeof(INTERACT_Channeling_Base_C_TryPlayChannelingMontage) == 0x000048, "Wrong size on INTERACT_Channeling_Base_C_TryPlayChannelingMontage");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryPlayChannelingMontage, LoadedMontage) == 0x000000, "Member 'INTERACT_Channeling_Base_C_TryPlayChannelingMontage::LoadedMontage' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryPlayChannelingMontage, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'INTERACT_Channeling_Base_C_TryPlayChannelingMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryPlayChannelingMontage, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000010, "Member 'INTERACT_Channeling_Base_C_TryPlayChannelingMontage::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryPlayChannelingMontage, K2Node_DynamicCast_AsAnim_Montage) == 0x000018, "Member 'INTERACT_Channeling_Base_C_TryPlayChannelingMontage::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryPlayChannelingMontage, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_Channeling_Base_C_TryPlayChannelingMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryPlayChannelingMontage, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'INTERACT_Channeling_Base_C_TryPlayChannelingMontage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryPlayChannelingMontage, CallFunc_IsValid_ReturnValue_2) == 0x000022, "Member 'INTERACT_Channeling_Base_C_TryPlayChannelingMontage::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryPlayChannelingMontage, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'INTERACT_Channeling_Base_C_TryPlayChannelingMontage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryPlayChannelingMontage, CallFunc_ForceBeginAction_Action) == 0x000038, "Member 'INTERACT_Channeling_Base_C_TryPlayChannelingMontage::CallFunc_ForceBeginAction_Action' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryPlayChannelingMontage, CallFunc_IsValid_ReturnValue_3) == 0x000040, "Member 'INTERACT_Channeling_Base_C_TryPlayChannelingMontage::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.OnChannelingMontageStarted
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_Channeling_Base_C_OnChannelingMontageStarted final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Channeling_Base_C_OnChannelingMontageStarted) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_OnChannelingMontageStarted");
static_assert(sizeof(INTERACT_Channeling_Base_C_OnChannelingMontageStarted) == 0x000008, "Wrong size on INTERACT_Channeling_Base_C_OnChannelingMontageStarted");
static_assert(offsetof(INTERACT_Channeling_Base_C_OnChannelingMontageStarted, HackerPawn) == 0x000000, "Member 'INTERACT_Channeling_Base_C_OnChannelingMontageStarted::HackerPawn' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.OnChannelingMontageFinished
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Channeling_Base_C_OnChannelingMontageFinished final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Channeling_Base_C_OnChannelingMontageFinished) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_OnChannelingMontageFinished");
static_assert(sizeof(INTERACT_Channeling_Base_C_OnChannelingMontageFinished) == 0x000010, "Wrong size on INTERACT_Channeling_Base_C_OnChannelingMontageFinished");
static_assert(offsetof(INTERACT_Channeling_Base_C_OnChannelingMontageFinished, HackerPawn) == 0x000000, "Member 'INTERACT_Channeling_Base_C_OnChannelingMontageFinished::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_OnChannelingMontageFinished, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'INTERACT_Channeling_Base_C_OnChannelingMontageFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.OnRestoreInventoryAfterSequence
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_Channeling_Base_C_OnRestoreInventoryAfterSequence final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Channeling_Base_C_OnRestoreInventoryAfterSequence) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_OnRestoreInventoryAfterSequence");
static_assert(sizeof(INTERACT_Channeling_Base_C_OnRestoreInventoryAfterSequence) == 0x000008, "Wrong size on INTERACT_Channeling_Base_C_OnRestoreInventoryAfterSequence");
static_assert(offsetof(INTERACT_Channeling_Base_C_OnRestoreInventoryAfterSequence, HackerPawn) == 0x000000, "Member 'INTERACT_Channeling_Base_C_OnRestoreInventoryAfterSequence::HackerPawn' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.GetChannelingMoveControl
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_Channeling_Base_C_GetChannelingMoveControl final
{
public:
	class UMOVECONTROL_Base_C*                    Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Channeling_Base_C_GetChannelingMoveControl) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_GetChannelingMoveControl");
static_assert(sizeof(INTERACT_Channeling_Base_C_GetChannelingMoveControl) == 0x000008, "Wrong size on INTERACT_Channeling_Base_C_GetChannelingMoveControl");
static_assert(offsetof(INTERACT_Channeling_Base_C_GetChannelingMoveControl, Result) == 0x000000, "Member 'INTERACT_Channeling_Base_C_GetChannelingMoveControl::Result' has a wrong offset!");

// Function INTERACT_Channeling_Base.INTERACT_Channeling_Base_C.TryInteract
// 0x0080 (0x0080 - 0x0000)
struct INTERACT_Channeling_Base_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0038(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_CanPerformChannelingInteraction_Result;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0060(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Channeling_Base_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_Channeling_Base_C_TryInteract");
static_assert(sizeof(INTERACT_Channeling_Base_C_TryInteract) == 0x000080, "Wrong size on INTERACT_Channeling_Base_C_TryInteract");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_Channeling_Base_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_Channeling_Base_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_Channeling_Base_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_Channeling_Base_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000038, "Member 'INTERACT_Channeling_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryInteract, CallFunc_CanPerformChannelingInteraction_Result) == 0x000058, "Member 'INTERACT_Channeling_Base_C_TryInteract::CallFunc_CanPerformChannelingInteraction_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Channeling_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000060, "Member 'INTERACT_Channeling_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TRACE_EnergyUsage

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SystemReShock_classes.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass TRACE_EnergyUsage.TRACE_EnergyUsage_C
// 0x0040 (0x0110 - 0x00D0)
class UTRACE_EnergyUsage_C final : public UTimeSeriesTraceFunction
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         ElapsedTime;                                       // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpdateRate;                                        // 0x00DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastEnergyUsage;                                   // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastEnergyUsageTimestamp;                          // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastPeriodicEnergyUsage;                           // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SourceNormalizedEnergyUsage;                       // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetNormalizedEnergyUsage;                       // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector2D>                      NormalizedEnergyUsageHistory;                      // 0x00F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           UpdateEnergyUsageTimerHandle;                      // 0x0108(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TRACE_EnergyUsage(int32 EntryPoint);
	void K2_BeginPlay();
	float K2_EvaluateFunction();
	void EVENT_OnCharacterInitialized(class APAWN_SystemShockCharacter_C* Character);
	void EVENT_OnEnergyValueChanged(float CurrValue, float PrevValue, float MaxValue, EModApplyType ApplyType);
	void GetLastEnergyUsage(float Timeout, float* Result);
	void UpdateEnergyUsage();
	void UpdatePeriodicEnergyUsage();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TRACE_EnergyUsage_C">();
	}
	static class UTRACE_EnergyUsage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTRACE_EnergyUsage_C>();
	}
};
static_assert(alignof(UTRACE_EnergyUsage_C) == 0x000008, "Wrong alignment on UTRACE_EnergyUsage_C");
static_assert(sizeof(UTRACE_EnergyUsage_C) == 0x000110, "Wrong size on UTRACE_EnergyUsage_C");
static_assert(offsetof(UTRACE_EnergyUsage_C, UberGraphFrame) == 0x0000D0, "Member 'UTRACE_EnergyUsage_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTRACE_EnergyUsage_C, ElapsedTime) == 0x0000D8, "Member 'UTRACE_EnergyUsage_C::ElapsedTime' has a wrong offset!");
static_assert(offsetof(UTRACE_EnergyUsage_C, UpdateRate) == 0x0000DC, "Member 'UTRACE_EnergyUsage_C::UpdateRate' has a wrong offset!");
static_assert(offsetof(UTRACE_EnergyUsage_C, LastEnergyUsage) == 0x0000E0, "Member 'UTRACE_EnergyUsage_C::LastEnergyUsage' has a wrong offset!");
static_assert(offsetof(UTRACE_EnergyUsage_C, LastEnergyUsageTimestamp) == 0x0000E4, "Member 'UTRACE_EnergyUsage_C::LastEnergyUsageTimestamp' has a wrong offset!");
static_assert(offsetof(UTRACE_EnergyUsage_C, LastPeriodicEnergyUsage) == 0x0000E8, "Member 'UTRACE_EnergyUsage_C::LastPeriodicEnergyUsage' has a wrong offset!");
static_assert(offsetof(UTRACE_EnergyUsage_C, SourceNormalizedEnergyUsage) == 0x0000EC, "Member 'UTRACE_EnergyUsage_C::SourceNormalizedEnergyUsage' has a wrong offset!");
static_assert(offsetof(UTRACE_EnergyUsage_C, TargetNormalizedEnergyUsage) == 0x0000F0, "Member 'UTRACE_EnergyUsage_C::TargetNormalizedEnergyUsage' has a wrong offset!");
static_assert(offsetof(UTRACE_EnergyUsage_C, NormalizedEnergyUsageHistory) == 0x0000F8, "Member 'UTRACE_EnergyUsage_C::NormalizedEnergyUsageHistory' has a wrong offset!");
static_assert(offsetof(UTRACE_EnergyUsage_C, UpdateEnergyUsageTimerHandle) == 0x000108, "Member 'UTRACE_EnergyUsage_C::UpdateEnergyUsageTimerHandle' has a wrong offset!");

}


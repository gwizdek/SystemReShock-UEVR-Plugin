#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_WeaponBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreGame_structs.hpp"
#include "STRUCT_WeaponMode_structs.hpp"
#include "STRUCT_WeaponRecoilTemplate_structs.hpp"


namespace SDK::Params
{

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnModeChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ITEM_WeaponBase_C_OnModeChanged__DelegateSignature final
{
public:
	class UITEM_WeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OldMode;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewMode;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_OnModeChanged__DelegateSignature) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_OnModeChanged__DelegateSignature");
static_assert(sizeof(ITEM_WeaponBase_C_OnModeChanged__DelegateSignature) == 0x000010, "Wrong size on ITEM_WeaponBase_C_OnModeChanged__DelegateSignature");
static_assert(offsetof(ITEM_WeaponBase_C_OnModeChanged__DelegateSignature, Weapon) == 0x000000, "Member 'ITEM_WeaponBase_C_OnModeChanged__DelegateSignature::Weapon' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnModeChanged__DelegateSignature, OldMode) == 0x000008, "Member 'ITEM_WeaponBase_C_OnModeChanged__DelegateSignature::OldMode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnModeChanged__DelegateSignature, NewMode) == 0x00000C, "Member 'ITEM_WeaponBase_C_OnModeChanged__DelegateSignature::NewMode' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnModkitInstalled__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct ITEM_WeaponBase_C_OnModkitInstalled__DelegateSignature final
{
public:
	class UITEM_WeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponModKit_Base_C*              ModKit;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_OnModkitInstalled__DelegateSignature) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_OnModkitInstalled__DelegateSignature");
static_assert(sizeof(ITEM_WeaponBase_C_OnModkitInstalled__DelegateSignature) == 0x000010, "Wrong size on ITEM_WeaponBase_C_OnModkitInstalled__DelegateSignature");
static_assert(offsetof(ITEM_WeaponBase_C_OnModkitInstalled__DelegateSignature, Weapon) == 0x000000, "Member 'ITEM_WeaponBase_C_OnModkitInstalled__DelegateSignature::Weapon' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnModkitInstalled__DelegateSignature, ModKit) == 0x000008, "Member 'ITEM_WeaponBase_C_OnModkitInstalled__DelegateSignature::ModKit' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ExecuteUbergraph_ITEM_WeaponBase
// 0x02D8 (0x02D8 - 0x0000)
struct ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   K2Node_DynamicCast_AsForce_Feedback_Effect;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0078(0x0100)(HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x018B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_3; // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0190(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x01B0(0x0010)(ZeroConstructor, NoDestructor)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x01CC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_2;               // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB[0x5];                                      // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_3;               // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_4; // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21A[0x6];                                      // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_4;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_5;               // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_5; // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24B[0x5];                                      // 0x024B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_4;                       // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x0258(0x0010)(ZeroConstructor, NoDestructor)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryCompleteBinaryAchievement_Result;      // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryIncrementUnorderedAchievement_Result;  // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_1;                  // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxCountForAchievement_Result;         // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_5;                       // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_5;            // 0x02C8(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase");
static_assert(sizeof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase) == 0x0002D8, "Wrong size on ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, EntryPoint) == 0x000000, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_CustomEvent_Loaded_2) == 0x000008, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, Temp_object_Variable) == 0x000010, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_AsAnim_Montage) == 0x000018, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_CustomEvent_Loaded_1) == 0x000028, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, Temp_object_Variable_1) == 0x000030, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_AsAnim_Montage_1) == 0x000038, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_CustomEvent_Loaded) == 0x000048, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, Temp_object_Variable_2) == 0x000050, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_AsForce_Feedback_Effect) == 0x000058, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_AsForce_Feedback_Effect' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_CreateDelegate_OutputDelegate) == 0x000064, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_GetCurrentMode_Mode) == 0x000078, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, Temp_object_Variable_3) == 0x000178, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_AsSound_Cue) == 0x000180, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_bSuccess_3) == 0x000188, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000189, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x00018A, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x00018B, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_IsValidSoftObjectReference_ReturnValue_3) == 0x00018C, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_IsValidSoftObjectReference_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000190, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_CustomEvent_Loaded_3) == 0x0001A0, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, Temp_object_Variable_4) == 0x0001A8, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001B0, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_AsNiagara_System) == 0x0001C0, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_bSuccess_4) == 0x0001C8, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_IsValid_ReturnValue) == 0x0001C9, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001CC, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0001E0, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_IsValid_ReturnValue_1) == 0x0001E8, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_AsAnim_Montage_2) == 0x0001F0, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_AsAnim_Montage_2' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_bSuccess_5) == 0x0001F8, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_Not_PreBool_ReturnValue) == 0x0001F9, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_IsValid_ReturnValue_2) == 0x0001FA, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000200, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_Not_PreBool_ReturnValue_1) == 0x000208, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_AsAnim_Montage_3) == 0x000210, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_AsAnim_Montage_3' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_bSuccess_6) == 0x000218, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_IsValidSoftObjectReference_ReturnValue_4) == 0x000219, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_IsValidSoftObjectReference_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000220, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_AsAnim_Montage_4) == 0x000228, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_AsAnim_Montage_4' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_bSuccess_7) == 0x000230, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x000238, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_AsAnim_Montage_5) == 0x000240, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_AsAnim_Montage_5' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_bSuccess_8) == 0x000248, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_IsValidSoftObjectReference_ReturnValue_5) == 0x000249, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_IsValidSoftObjectReference_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_IsValid_ReturnValue_3) == 0x00024A, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_CustomEvent_Loaded_4) == 0x000250, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_CreateDelegate_OutputDelegate_4) == 0x000258, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_GetOwnerCharacter_Character) == 0x000268, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_GetGameInstance_ReturnValue) == 0x000270, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_IsValid_ReturnValue_4) == 0x000278, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_AsGI_Single_Player) == 0x000280, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_bSuccess_9) == 0x000288, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_TryCompleteBinaryAchievement_Result) == 0x000289, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_TryCompleteBinaryAchievement_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_GetObjectClass_ReturnValue) == 0x000290, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, Temp_object_Variable_5) == 0x000298, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_TryIncrementUnorderedAchievement_Result) == 0x0002A0, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_TryIncrementUnorderedAchievement_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_AsSound_Cue_1) == 0x0002A8, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_AsSound_Cue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_DynamicCast_bSuccess_10) == 0x0002B0, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_NotEqual_NameName_ReturnValue) == 0x0002B1, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_GetMaxCountForAchievement_Result) == 0x0002B4, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_GetMaxCountForAchievement_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_Greater_IntInt_ReturnValue) == 0x0002B8, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, CallFunc_IsValid_ReturnValue_5) == 0x0002B9, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_CustomEvent_Loaded_5) == 0x0002C0, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_CustomEvent_Loaded_5' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase, K2Node_CreateDelegate_OutputDelegate_5) == 0x0002C8, "Member 'ITEM_WeaponBase_C_ExecuteUbergraph_ITEM_WeaponBase::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnLoaded_FC9CDFFA4B8E6327F9A536B33F5E5C08
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_OnLoaded_FC9CDFFA4B8E6327F9A536B33F5E5C08 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_OnLoaded_FC9CDFFA4B8E6327F9A536B33F5E5C08) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_OnLoaded_FC9CDFFA4B8E6327F9A536B33F5E5C08");
static_assert(sizeof(ITEM_WeaponBase_C_OnLoaded_FC9CDFFA4B8E6327F9A536B33F5E5C08) == 0x000008, "Wrong size on ITEM_WeaponBase_C_OnLoaded_FC9CDFFA4B8E6327F9A536B33F5E5C08");
static_assert(offsetof(ITEM_WeaponBase_C_OnLoaded_FC9CDFFA4B8E6327F9A536B33F5E5C08, Loaded) == 0x000000, "Member 'ITEM_WeaponBase_C_OnLoaded_FC9CDFFA4B8E6327F9A536B33F5E5C08::Loaded' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnLoaded_F95A27484EEBCA2C60555B9F4C909E23
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_OnLoaded_F95A27484EEBCA2C60555B9F4C909E23 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_OnLoaded_F95A27484EEBCA2C60555B9F4C909E23) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_OnLoaded_F95A27484EEBCA2C60555B9F4C909E23");
static_assert(sizeof(ITEM_WeaponBase_C_OnLoaded_F95A27484EEBCA2C60555B9F4C909E23) == 0x000008, "Wrong size on ITEM_WeaponBase_C_OnLoaded_F95A27484EEBCA2C60555B9F4C909E23");
static_assert(offsetof(ITEM_WeaponBase_C_OnLoaded_F95A27484EEBCA2C60555B9F4C909E23, Loaded) == 0x000000, "Member 'ITEM_WeaponBase_C_OnLoaded_F95A27484EEBCA2C60555B9F4C909E23::Loaded' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnLoaded_982DF01C4672B4DF3610A791CBB18814
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_OnLoaded_982DF01C4672B4DF3610A791CBB18814 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_OnLoaded_982DF01C4672B4DF3610A791CBB18814) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_OnLoaded_982DF01C4672B4DF3610A791CBB18814");
static_assert(sizeof(ITEM_WeaponBase_C_OnLoaded_982DF01C4672B4DF3610A791CBB18814) == 0x000008, "Wrong size on ITEM_WeaponBase_C_OnLoaded_982DF01C4672B4DF3610A791CBB18814");
static_assert(offsetof(ITEM_WeaponBase_C_OnLoaded_982DF01C4672B4DF3610A791CBB18814, Loaded) == 0x000000, "Member 'ITEM_WeaponBase_C_OnLoaded_982DF01C4672B4DF3610A791CBB18814::Loaded' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnLoaded_E731026D4682628E706B3E9E5E5543CE
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_OnLoaded_E731026D4682628E706B3E9E5E5543CE final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_OnLoaded_E731026D4682628E706B3E9E5E5543CE) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_OnLoaded_E731026D4682628E706B3E9E5E5543CE");
static_assert(sizeof(ITEM_WeaponBase_C_OnLoaded_E731026D4682628E706B3E9E5E5543CE) == 0x000008, "Wrong size on ITEM_WeaponBase_C_OnLoaded_E731026D4682628E706B3E9E5E5543CE");
static_assert(offsetof(ITEM_WeaponBase_C_OnLoaded_E731026D4682628E706B3E9E5E5543CE, Loaded) == 0x000000, "Member 'ITEM_WeaponBase_C_OnLoaded_E731026D4682628E706B3E9E5E5543CE::Loaded' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnLoaded_FFC92A4B49A40804BC72D8BA13D15C00
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_OnLoaded_FFC92A4B49A40804BC72D8BA13D15C00 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_OnLoaded_FFC92A4B49A40804BC72D8BA13D15C00) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_OnLoaded_FFC92A4B49A40804BC72D8BA13D15C00");
static_assert(sizeof(ITEM_WeaponBase_C_OnLoaded_FFC92A4B49A40804BC72D8BA13D15C00) == 0x000008, "Wrong size on ITEM_WeaponBase_C_OnLoaded_FFC92A4B49A40804BC72D8BA13D15C00");
static_assert(offsetof(ITEM_WeaponBase_C_OnLoaded_FFC92A4B49A40804BC72D8BA13D15C00, Loaded) == 0x000000, "Member 'ITEM_WeaponBase_C_OnLoaded_FFC92A4B49A40804BC72D8BA13D15C00::Loaded' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnLoaded_78FD906845BE6D6089755093C72A442C
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_OnLoaded_78FD906845BE6D6089755093C72A442C final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_OnLoaded_78FD906845BE6D6089755093C72A442C) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_OnLoaded_78FD906845BE6D6089755093C72A442C");
static_assert(sizeof(ITEM_WeaponBase_C_OnLoaded_78FD906845BE6D6089755093C72A442C) == 0x000008, "Wrong size on ITEM_WeaponBase_C_OnLoaded_78FD906845BE6D6089755093C72A442C");
static_assert(offsetof(ITEM_WeaponBase_C_OnLoaded_78FD906845BE6D6089755093C72A442C, Loaded) == 0x000000, "Member 'ITEM_WeaponBase_C_OnLoaded_78FD906845BE6D6089755093C72A442C::Loaded' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetEquipSlotActive
// 0x0028 (0x0028 - 0x0000)
struct ITEM_WeaponBase_C_SetEquipSlotActive final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_Result;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBag_Result_1;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetEquipSlotActive_Result;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_Result_1;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ForceEquipItemInSlot_Result;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_SetEquipSlotActive) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_SetEquipSlotActive");
static_assert(sizeof(ITEM_WeaponBase_C_SetEquipSlotActive) == 0x000028, "Wrong size on ITEM_WeaponBase_C_SetEquipSlotActive");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipSlotActive, Active) == 0x000000, "Member 'ITEM_WeaponBase_C_SetEquipSlotActive::Active' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipSlotActive, CallFunc_GetSlotIndex_Result) == 0x000004, "Member 'ITEM_WeaponBase_C_SetEquipSlotActive::CallFunc_GetSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipSlotActive, CallFunc_GetBag_Result) == 0x000008, "Member 'ITEM_WeaponBase_C_SetEquipSlotActive::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipSlotActive, CallFunc_GetBag_Result_1) == 0x000010, "Member 'ITEM_WeaponBase_C_SetEquipSlotActive::CallFunc_GetBag_Result_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipSlotActive, CallFunc_SetEquipSlotActive_Result) == 0x000018, "Member 'ITEM_WeaponBase_C_SetEquipSlotActive::CallFunc_SetEquipSlotActive_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipSlotActive, CallFunc_GetSlotIndex_Result_1) == 0x00001C, "Member 'ITEM_WeaponBase_C_SetEquipSlotActive::CallFunc_GetSlotIndex_Result_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipSlotActive, CallFunc_ForceEquipItemInSlot_Result) == 0x000020, "Member 'ITEM_WeaponBase_C_SetEquipSlotActive::CallFunc_ForceEquipItemInSlot_Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.EnableDamage
// 0x0001 (0x0001 - 0x0000)
struct ITEM_WeaponBase_C_EnableDamage final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_EnableDamage) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_EnableDamage");
static_assert(sizeof(ITEM_WeaponBase_C_EnableDamage) == 0x000001, "Wrong size on ITEM_WeaponBase_C_EnableDamage");
static_assert(offsetof(ITEM_WeaponBase_C_EnableDamage, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_EnableDamage::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.DisableDamage
// 0x0001 (0x0001 - 0x0000)
struct ITEM_WeaponBase_C_DisableDamage final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_DisableDamage) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_DisableDamage");
static_assert(sizeof(ITEM_WeaponBase_C_DisableDamage) == 0x000001, "Wrong size on ITEM_WeaponBase_C_DisableDamage");
static_assert(offsetof(ITEM_WeaponBase_C_DisableDamage, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_DisableDamage::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ReceiveAnimationMessage
// 0x0040 (0x0040 - 0x0000)
struct ITEM_WeaponBase_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DisableDamageMessage;                              // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 EnableDamageMessage;                               // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_DisableDamage_Result;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EnableDamage_Result;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_ReceiveAnimationMessage");
static_assert(sizeof(ITEM_WeaponBase_C_ReceiveAnimationMessage) == 0x000040, "Wrong size on ITEM_WeaponBase_C_ReceiveAnimationMessage");
static_assert(offsetof(ITEM_WeaponBase_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'ITEM_WeaponBase_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'ITEM_WeaponBase_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ReceiveAnimationMessage, DisableDamageMessage) == 0x000018, "Member 'ITEM_WeaponBase_C_ReceiveAnimationMessage::DisableDamageMessage' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ReceiveAnimationMessage, EnableDamageMessage) == 0x000028, "Member 'ITEM_WeaponBase_C_ReceiveAnimationMessage::EnableDamageMessage' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ReceiveAnimationMessage, CallFunc_DisableDamage_Result) == 0x000038, "Member 'ITEM_WeaponBase_C_ReceiveAnimationMessage::CallFunc_DisableDamage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ReceiveAnimationMessage, CallFunc_EnableDamage_Result) == 0x000039, "Member 'ITEM_WeaponBase_C_ReceiveAnimationMessage::CallFunc_EnableDamage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00003A, "Member 'ITEM_WeaponBase_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x00003B, "Member 'ITEM_WeaponBase_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.EVENT_OnHolsterFinished
// 0x00B8 (0x00B8 - 0x0000)
struct ITEM_WeaponBase_C_EVENT_OnHolsterFinished final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetOverrideIdleSequence_Result;           // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent_1; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDisplayMesh_Result;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker_1;         // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetEquippedItem_Result;                   // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_EVENT_OnHolsterFinished");
static_assert(sizeof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished) == 0x0000B8, "Wrong size on ITEM_WeaponBase_C_EVENT_OnHolsterFinished");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, Character) == 0x000000, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, CallFunc_GetInventory_Inventory) == 0x000008, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000018, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000030, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, Temp_bool_Variable) == 0x000039, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00003A, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, K2Node_Select_Default) == 0x000040, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000050, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000058, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, CallFunc_GetAnimInstance_ReturnValue) == 0x000068, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000070, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, CallFunc_SetOverrideIdleSequence_Result) == 0x000081, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::CallFunc_SetOverrideIdleSequence_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, CallFunc_GetActionMeshComponent_SkeletalMeshComponent_1) == 0x000088, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::CallFunc_GetActionMeshComponent_SkeletalMeshComponent_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000090, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, CallFunc_SetDisplayMesh_Result) == 0x000098, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::CallFunc_SetDisplayMesh_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, K2Node_DynamicCast_AsINTERF_ANIM_Hacker_1) == 0x0000A0, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::K2Node_DynamicCast_AsINTERF_ANIM_Hacker_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, K2Node_DynamicCast_bSuccess_4) == 0x0000B0, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnHolsterFinished, CallFunc_SetEquippedItem_Result) == 0x0000B1, "Member 'ITEM_WeaponBase_C_EVENT_OnHolsterFinished::CallFunc_SetEquippedItem_Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetModeCount
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_GetModeCount final
{
public:
	int32                                         Count_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDataTableRowCount_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetModeCount) == 0x000004, "Wrong alignment on ITEM_WeaponBase_C_GetModeCount");
static_assert(sizeof(ITEM_WeaponBase_C_GetModeCount) == 0x000008, "Wrong size on ITEM_WeaponBase_C_GetModeCount");
static_assert(offsetof(ITEM_WeaponBase_C_GetModeCount, Count_0) == 0x000000, "Member 'ITEM_WeaponBase_C_GetModeCount::Count_0' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetModeCount, CallFunc_GetDataTableRowCount_ReturnValue) == 0x000004, "Member 'ITEM_WeaponBase_C_GetModeCount::CallFunc_GetDataTableRowCount_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetCurrentMode
// 0x0200 (0x0200 - 0x0000)
struct ITEM_WeaponBase_C_GetCurrentMode final
{
public:
	struct FSTRUCT_WeaponMode                     Mode;                                              // 0x0000(0x0100)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponMode_Mode;                       // 0x0100(0x0100)(HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetCurrentMode) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetCurrentMode");
static_assert(sizeof(ITEM_WeaponBase_C_GetCurrentMode) == 0x000200, "Wrong size on ITEM_WeaponBase_C_GetCurrentMode");
static_assert(offsetof(ITEM_WeaponBase_C_GetCurrentMode, Mode) == 0x000000, "Member 'ITEM_WeaponBase_C_GetCurrentMode::Mode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetCurrentMode, CallFunc_GetWeaponMode_Mode) == 0x000100, "Member 'ITEM_WeaponBase_C_GetCurrentMode::CallFunc_GetWeaponMode_Mode' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetWeaponModeDefaults
// 0x0220 (0x0220 - 0x0000)
struct ITEM_WeaponBase_C_GetWeaponModeDefaults final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     Mode;                                              // 0x0008(0x0100)(Parm, OutParm, HasGetValueTypeHash)
	class FName                                   CallFunc_GetWeaponModeNameByIndex_ModeName;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0118(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_GetWeaponModeDefaults) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetWeaponModeDefaults");
static_assert(sizeof(ITEM_WeaponBase_C_GetWeaponModeDefaults) == 0x000220, "Wrong size on ITEM_WeaponBase_C_GetWeaponModeDefaults");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponModeDefaults, Index_0) == 0x000000, "Member 'ITEM_WeaponBase_C_GetWeaponModeDefaults::Index_0' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponModeDefaults, Mode) == 0x000008, "Member 'ITEM_WeaponBase_C_GetWeaponModeDefaults::Mode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponModeDefaults, CallFunc_GetWeaponModeNameByIndex_ModeName) == 0x000108, "Member 'ITEM_WeaponBase_C_GetWeaponModeDefaults::CallFunc_GetWeaponModeNameByIndex_ModeName' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponModeDefaults, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'ITEM_WeaponBase_C_GetWeaponModeDefaults::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponModeDefaults, CallFunc_GetDataTableRowFromName_OutRow) == 0x000118, "Member 'ITEM_WeaponBase_C_GetWeaponModeDefaults::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponModeDefaults, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000218, "Member 'ITEM_WeaponBase_C_GetWeaponModeDefaults::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetWeaponMode
// 0x0538 (0x0538 - 0x0000)
struct ITEM_WeaponBase_C_GetWeaponMode final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     Mode;                                              // 0x0008(0x0100)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     ModifiedMode;                                      // 0x0108(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponModeDefaults_Mode;               // 0x0218(0x0100)(HasGetValueTypeHash)
	class UITEM_WeaponModKit_Base_C*              CallFunc_Array_Get_Item;                           // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetModifiedWeaponMode_ResultMode;         // 0x0328(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponModeDefaults_Mode_1;             // 0x0430(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_GetWeaponMode) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetWeaponMode");
static_assert(sizeof(ITEM_WeaponBase_C_GetWeaponMode) == 0x000538, "Wrong size on ITEM_WeaponBase_C_GetWeaponMode");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, Index_0) == 0x000000, "Member 'ITEM_WeaponBase_C_GetWeaponMode::Index_0' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, Mode) == 0x000008, "Member 'ITEM_WeaponBase_C_GetWeaponMode::Mode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, ModifiedMode) == 0x000108, "Member 'ITEM_WeaponBase_C_GetWeaponMode::ModifiedMode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, Temp_int_Array_Index_Variable) == 0x000208, "Member 'ITEM_WeaponBase_C_GetWeaponMode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, Temp_int_Loop_Counter_Variable) == 0x00020C, "Member 'ITEM_WeaponBase_C_GetWeaponMode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, CallFunc_Add_IntInt_ReturnValue) == 0x000210, "Member 'ITEM_WeaponBase_C_GetWeaponMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, CallFunc_GetWeaponModeDefaults_Mode) == 0x000218, "Member 'ITEM_WeaponBase_C_GetWeaponMode::CallFunc_GetWeaponModeDefaults_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, CallFunc_Array_Get_Item) == 0x000318, "Member 'ITEM_WeaponBase_C_GetWeaponMode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, CallFunc_Array_Length_ReturnValue) == 0x000320, "Member 'ITEM_WeaponBase_C_GetWeaponMode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, CallFunc_GetModifiedWeaponMode_ResultMode) == 0x000328, "Member 'ITEM_WeaponBase_C_GetWeaponMode::CallFunc_GetModifiedWeaponMode_ResultMode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, CallFunc_Less_IntInt_ReturnValue) == 0x000428, "Member 'ITEM_WeaponBase_C_GetWeaponMode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, CallFunc_Array_Length_ReturnValue_1) == 0x00042C, "Member 'ITEM_WeaponBase_C_GetWeaponMode::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, CallFunc_GetWeaponModeDefaults_Mode_1) == 0x000430, "Member 'ITEM_WeaponBase_C_GetWeaponMode::CallFunc_GetWeaponModeDefaults_Mode_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMode, CallFunc_Greater_IntInt_ReturnValue) == 0x000530, "Member 'ITEM_WeaponBase_C_GetWeaponMode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetWeaponModeDisplayName
// 0x0020 (0x0020 - 0x0000)
struct ITEM_WeaponBase_C_GetWeaponModeDisplayName final
{
public:
	int32                                         ModeIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShortName;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(ITEM_WeaponBase_C_GetWeaponModeDisplayName) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetWeaponModeDisplayName");
static_assert(sizeof(ITEM_WeaponBase_C_GetWeaponModeDisplayName) == 0x000020, "Wrong size on ITEM_WeaponBase_C_GetWeaponModeDisplayName");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponModeDisplayName, ModeIndex) == 0x000000, "Member 'ITEM_WeaponBase_C_GetWeaponModeDisplayName::ModeIndex' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponModeDisplayName, ShortName) == 0x000004, "Member 'ITEM_WeaponBase_C_GetWeaponModeDisplayName::ShortName' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponModeDisplayName, Result) == 0x000008, "Member 'ITEM_WeaponBase_C_GetWeaponModeDisplayName::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsWeaponModeMaintain
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_IsWeaponModeMaintain final
{
public:
	int32                                         ModeIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_IsWeaponModeMaintain) == 0x000004, "Wrong alignment on ITEM_WeaponBase_C_IsWeaponModeMaintain");
static_assert(sizeof(ITEM_WeaponBase_C_IsWeaponModeMaintain) == 0x000008, "Wrong size on ITEM_WeaponBase_C_IsWeaponModeMaintain");
static_assert(offsetof(ITEM_WeaponBase_C_IsWeaponModeMaintain, ModeIndex) == 0x000000, "Member 'ITEM_WeaponBase_C_IsWeaponModeMaintain::ModeIndex' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsWeaponModeMaintain, Result) == 0x000004, "Member 'ITEM_WeaponBase_C_IsWeaponModeMaintain::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.CanCycleToMode
// 0x0230 (0x0230 - 0x0000)
struct ITEM_WeaponBase_C_CanCycleToMode final
{
public:
	int32                                         ModeIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        AmmoBag;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CycleMode;                                         // 0x0010(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponMode_Mode;                       // 0x0110(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCount_Result;                      // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x022D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_CanCycleToMode) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_CanCycleToMode");
static_assert(sizeof(ITEM_WeaponBase_C_CanCycleToMode) == 0x000230, "Wrong size on ITEM_WeaponBase_C_CanCycleToMode");
static_assert(offsetof(ITEM_WeaponBase_C_CanCycleToMode, ModeIndex) == 0x000000, "Member 'ITEM_WeaponBase_C_CanCycleToMode::ModeIndex' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanCycleToMode, Result) == 0x000004, "Member 'ITEM_WeaponBase_C_CanCycleToMode::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanCycleToMode, AmmoBag) == 0x000008, "Member 'ITEM_WeaponBase_C_CanCycleToMode::AmmoBag' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanCycleToMode, CycleMode) == 0x000010, "Member 'ITEM_WeaponBase_C_CanCycleToMode::CycleMode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanCycleToMode, CallFunc_GetWeaponMode_Mode) == 0x000110, "Member 'ITEM_WeaponBase_C_CanCycleToMode::CallFunc_GetWeaponMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanCycleToMode, CallFunc_IsValid_ReturnValue) == 0x000210, "Member 'ITEM_WeaponBase_C_CanCycleToMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanCycleToMode, CallFunc_GetInventory_Inventory) == 0x000218, "Member 'ITEM_WeaponBase_C_CanCycleToMode::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanCycleToMode, CallFunc_GetBagByType_Bag) == 0x000220, "Member 'ITEM_WeaponBase_C_CanCycleToMode::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanCycleToMode, CallFunc_GetItemCount_Result) == 0x000228, "Member 'ITEM_WeaponBase_C_CanCycleToMode::CallFunc_GetItemCount_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanCycleToMode, CallFunc_Greater_IntInt_ReturnValue) == 0x00022C, "Member 'ITEM_WeaponBase_C_CanCycleToMode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanCycleToMode, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x00022D, "Member 'ITEM_WeaponBase_C_CanCycleToMode::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetCurrentMode
// 0x0010 (0x0010 - 0x0000)
struct ITEM_WeaponBase_C_SetCurrentMode final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OldMode;                                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_SetCurrentMode) == 0x000004, "Wrong alignment on ITEM_WeaponBase_C_SetCurrentMode");
static_assert(sizeof(ITEM_WeaponBase_C_SetCurrentMode) == 0x000010, "Wrong size on ITEM_WeaponBase_C_SetCurrentMode");
static_assert(offsetof(ITEM_WeaponBase_C_SetCurrentMode, Mode) == 0x000000, "Member 'ITEM_WeaponBase_C_SetCurrentMode::Mode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetCurrentMode, Result) == 0x000004, "Member 'ITEM_WeaponBase_C_SetCurrentMode::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetCurrentMode, OldMode) == 0x000008, "Member 'ITEM_WeaponBase_C_SetCurrentMode::OldMode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetCurrentMode, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000C, "Member 'ITEM_WeaponBase_C_SetCurrentMode::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.CycleCurrentMode
// 0x0040 (0x0040 - 0x0000)
struct ITEM_WeaponBase_C_CycleCurrentMode final
{
public:
	bool                                          Previous;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CycleToIndex;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CycleDirection;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ModeCount;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanCycleToMode_Result;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntOnce_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetModeCount_Count;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntOnce_ReturnValue_1;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetCurrentMode_Result;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_CycleCurrentMode) == 0x000004, "Wrong alignment on ITEM_WeaponBase_C_CycleCurrentMode");
static_assert(sizeof(ITEM_WeaponBase_C_CycleCurrentMode) == 0x000040, "Wrong size on ITEM_WeaponBase_C_CycleCurrentMode");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, Previous) == 0x000000, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::Previous' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, Result) == 0x000001, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, CycleToIndex) == 0x000004, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::CycleToIndex' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, CycleDirection) == 0x000008, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::CycleDirection' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, ModeCount) == 0x00000C, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::ModeCount' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, Temp_int_Variable) == 0x000010, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, Temp_int_Variable_1) == 0x000014, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, Temp_bool_Variable) == 0x000018, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, CallFunc_CanCycleToMode_Result) == 0x000019, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::CallFunc_CanCycleToMode_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, CallFunc_WrapIntOnce_ReturnValue) == 0x000020, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::CallFunc_WrapIntOnce_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000024, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, CallFunc_GetModeCount_Count) == 0x000028, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::CallFunc_GetModeCount_Count' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, CallFunc_WrapIntOnce_ReturnValue_1) == 0x000030, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::CallFunc_WrapIntOnce_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, K2Node_Select_Default) == 0x000038, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CycleCurrentMode, CallFunc_SetCurrentMode_Result) == 0x00003C, "Member 'ITEM_WeaponBase_C_CycleCurrentMode::CallFunc_SetCurrentMode_Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.EVENT_OnShowDisplayMesh
// 0x0030 (0x0030 - 0x0000)
struct ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterVisible_Result;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh");
static_assert(sizeof(ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh) == 0x000030, "Wrong size on ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000010, "Member 'ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh, CallFunc_IsCharacterVisible_Result) == 0x000019, "Member 'ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh::CallFunc_IsCharacterVisible_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000020, "Member 'ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'ITEM_WeaponBase_C_EVENT_OnShowDisplayMesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnWeaponBecameActivatable
// 0x0078 (0x0078 - 0x0000)
struct ITEM_WeaponBase_C_OnWeaponBecameActivatable final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowImmediately;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterVisible_Result;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_HackerInventory_C*                K2Node_DynamicCast_AsCOMP_Hacker_Inventory;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetDisplayMeshComponent_MeshComponent;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0068(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetEquippedItem_Result;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_OnWeaponBecameActivatable) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_OnWeaponBecameActivatable");
static_assert(sizeof(ITEM_WeaponBase_C_OnWeaponBecameActivatable) == 0x000078, "Wrong size on ITEM_WeaponBase_C_OnWeaponBecameActivatable");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, Character) == 0x000000, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, ShowImmediately) == 0x000008, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::ShowImmediately' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, CallFunc_IsCharacterVisible_Result) == 0x000009, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::CallFunc_IsCharacterVisible_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, CallFunc_GetInventory_Inventory) == 0x000010, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, K2Node_DynamicCast_AsCOMP_Hacker_Inventory) == 0x000018, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::K2Node_DynamicCast_AsCOMP_Hacker_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000028, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, CallFunc_GetDisplayMeshComponent_MeshComponent) == 0x000030, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::CallFunc_GetDisplayMeshComponent_MeshComponent' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, CallFunc_GetAnimInstance_ReturnValue) == 0x000038, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000040, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000068, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnWeaponBecameActivatable, CallFunc_SetEquippedItem_Result) == 0x000070, "Member 'ITEM_WeaponBase_C_OnWeaponBecameActivatable::CallFunc_SetEquippedItem_Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryBecomeActivatableImmediately
// 0x0018 (0x0018 - 0x0000)
struct ITEM_WeaponBase_C_TryBecomeActivatableImmediately final
{
public:
	bool                                          ShowImmediately;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActivatable_Result;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_TryBecomeActivatableImmediately) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_TryBecomeActivatableImmediately");
static_assert(sizeof(ITEM_WeaponBase_C_TryBecomeActivatableImmediately) == 0x000018, "Wrong size on ITEM_WeaponBase_C_TryBecomeActivatableImmediately");
static_assert(offsetof(ITEM_WeaponBase_C_TryBecomeActivatableImmediately, ShowImmediately) == 0x000000, "Member 'ITEM_WeaponBase_C_TryBecomeActivatableImmediately::ShowImmediately' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryBecomeActivatableImmediately, Result) == 0x000001, "Member 'ITEM_WeaponBase_C_TryBecomeActivatableImmediately::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryBecomeActivatableImmediately, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'ITEM_WeaponBase_C_TryBecomeActivatableImmediately::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryBecomeActivatableImmediately, CallFunc_IsActivatable_Result) == 0x000010, "Member 'ITEM_WeaponBase_C_TryBecomeActivatableImmediately::CallFunc_IsActivatable_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryBecomeActivatableImmediately, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'ITEM_WeaponBase_C_TryBecomeActivatableImmediately::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetRecoilTemplate
// 0x0034 (0x0034 - 0x0000)
struct ITEM_WeaponBase_C_GetRecoilTemplate final
{
public:
	struct FSTRUCT_WeaponRecoilTemplate           Result;                                            // 0x0000(0x0018)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponRecoilTemplate           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_GetRecoilTemplate) == 0x000004, "Wrong alignment on ITEM_WeaponBase_C_GetRecoilTemplate");
static_assert(sizeof(ITEM_WeaponBase_C_GetRecoilTemplate) == 0x000034, "Wrong size on ITEM_WeaponBase_C_GetRecoilTemplate");
static_assert(offsetof(ITEM_WeaponBase_C_GetRecoilTemplate, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_GetRecoilTemplate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetRecoilTemplate, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'ITEM_WeaponBase_C_GetRecoilTemplate::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetRecoilTemplate, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000030, "Member 'ITEM_WeaponBase_C_GetRecoilTemplate::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.BeginWaitingToHolster
// 0x0030 (0x0030 - 0x0000)
struct ITEM_WeaponBase_C_BeginWaitingToHolster final
{
public:
	class UCharacterAction_C*                     HolsterAction;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_HackerInventory_C*                K2Node_DynamicCast_AsCOMP_Hacker_Inventory;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_BeginWaitingToHolster) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_BeginWaitingToHolster");
static_assert(sizeof(ITEM_WeaponBase_C_BeginWaitingToHolster) == 0x000030, "Wrong size on ITEM_WeaponBase_C_BeginWaitingToHolster");
static_assert(offsetof(ITEM_WeaponBase_C_BeginWaitingToHolster, HolsterAction) == 0x000000, "Member 'ITEM_WeaponBase_C_BeginWaitingToHolster::HolsterAction' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_BeginWaitingToHolster, CallFunc_GetInventory_Inventory) == 0x000008, "Member 'ITEM_WeaponBase_C_BeginWaitingToHolster::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_BeginWaitingToHolster, K2Node_DynamicCast_AsCOMP_Hacker_Inventory) == 0x000010, "Member 'ITEM_WeaponBase_C_BeginWaitingToHolster::K2Node_DynamicCast_AsCOMP_Hacker_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_BeginWaitingToHolster, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_WeaponBase_C_BeginWaitingToHolster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_BeginWaitingToHolster, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'ITEM_WeaponBase_C_BeginWaitingToHolster::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_BeginWaitingToHolster, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'ITEM_WeaponBase_C_BeginWaitingToHolster::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ResumeWaitingToHolster
// 0x0080 (0x0080 - 0x0000)
struct ITEM_WeaponBase_C_ResumeWaitingToHolster final
{
public:
	class UCOMP_Inventory_C*                      FromInventory;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCharacterAction_C*                     HolsterAction;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CurrentAction;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetDisplayMeshComponent_MeshComponent;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetHolsterMontage_Montage;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_ResumeWaitingToHolster) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_ResumeWaitingToHolster");
static_assert(sizeof(ITEM_WeaponBase_C_ResumeWaitingToHolster) == 0x000080, "Wrong size on ITEM_WeaponBase_C_ResumeWaitingToHolster");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, FromInventory) == 0x000000, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::FromInventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, Character) == 0x000008, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, HolsterAction) == 0x000010, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::HolsterAction' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, CurrentAction) == 0x000018, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::CurrentAction' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, CallFunc_GetInventory_Inventory) == 0x000020, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, CallFunc_GetDisplayMeshComponent_MeshComponent) == 0x000030, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::CallFunc_GetDisplayMeshComponent_MeshComponent' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, CallFunc_GetCurrentAction_CurrentAction) == 0x000040, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, CallFunc_GetMontage_Result) == 0x000048, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, CallFunc_GetHolsterMontage_Montage) == 0x000058, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::CallFunc_GetHolsterMontage_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000060, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, CallFunc_GetOwner_ReturnValue) == 0x000068, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000070, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ResumeWaitingToHolster, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'ITEM_WeaponBase_C_ResumeWaitingToHolster::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.CancelWaitingToHolster
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_CancelWaitingToHolster final
{
public:
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_CancelWaitingToHolster) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_CancelWaitingToHolster");
static_assert(sizeof(ITEM_WeaponBase_C_CancelWaitingToHolster) == 0x000008, "Wrong size on ITEM_WeaponBase_C_CancelWaitingToHolster");
static_assert(offsetof(ITEM_WeaponBase_C_CancelWaitingToHolster, CallFunc_GetOwnerCharacter_Character) == 0x000000, "Member 'ITEM_WeaponBase_C_CancelWaitingToHolster::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.HandleHolsterFinishedEvents
// 0x0038 (0x0038 - 0x0000)
struct ITEM_WeaponBase_C_HandleHolsterFinishedEvents final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryHandleDropEvent_Result;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_HackerInventory_C*                K2Node_DynamicCast_AsCOMP_Hacker_Inventory;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_HandleHolsterFinishedEvents");
static_assert(sizeof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents) == 0x000038, "Wrong size on ITEM_WeaponBase_C_HandleHolsterFinishedEvents");
static_assert(offsetof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents, Character) == 0x000000, "Member 'ITEM_WeaponBase_C_HandleHolsterFinishedEvents::Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents, CallFunc_GetInventory_Inventory) == 0x000008, "Member 'ITEM_WeaponBase_C_HandleHolsterFinishedEvents::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000010, "Member 'ITEM_WeaponBase_C_HandleHolsterFinishedEvents::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_WeaponBase_C_HandleHolsterFinishedEvents::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents, CallFunc_TryHandleDropEvent_Result) == 0x000019, "Member 'ITEM_WeaponBase_C_HandleHolsterFinishedEvents::CallFunc_TryHandleDropEvent_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'ITEM_WeaponBase_C_HandleHolsterFinishedEvents::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents, Temp_bool_Variable) == 0x00001B, "Member 'ITEM_WeaponBase_C_HandleHolsterFinishedEvents::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'ITEM_WeaponBase_C_HandleHolsterFinishedEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents, K2Node_Select_Default) == 0x000020, "Member 'ITEM_WeaponBase_C_HandleHolsterFinishedEvents::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents, K2Node_DynamicCast_AsCOMP_Hacker_Inventory) == 0x000028, "Member 'ITEM_WeaponBase_C_HandleHolsterFinishedEvents::K2Node_DynamicCast_AsCOMP_Hacker_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HandleHolsterFinishedEvents, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'ITEM_WeaponBase_C_HandleHolsterFinishedEvents::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetWeaponMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_SetWeaponMeshComponent final
{
public:
	class UMeshComponent*                         MeshComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_SetWeaponMeshComponent) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_SetWeaponMeshComponent");
static_assert(sizeof(ITEM_WeaponBase_C_SetWeaponMeshComponent) == 0x000008, "Wrong size on ITEM_WeaponBase_C_SetWeaponMeshComponent");
static_assert(offsetof(ITEM_WeaponBase_C_SetWeaponMeshComponent, MeshComponent) == 0x000000, "Member 'ITEM_WeaponBase_C_SetWeaponMeshComponent::MeshComponent' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ApplyAccuracyChange
// 0x0180 (0x0180 - 0x0000)
struct ITEM_WeaponBase_C_ApplyAccuracyChange final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpreadRatio;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SpreadPercent;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponRecoilTemplate           RecoilTemplate;                                    // 0x000C(0x0018)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponRecoilTemplate           CallFunc_GetRecoilTemplate_Result;                 // 0x0040(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0060(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_FindWeaponPropertyByType_Exists;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindWeaponPropertyByType_Value;           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_ApplyAccuracyChange) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_ApplyAccuracyChange");
static_assert(sizeof(ITEM_WeaponBase_C_ApplyAccuracyChange) == 0x000180, "Wrong size on ITEM_WeaponBase_C_ApplyAccuracyChange");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, Scale) == 0x000000, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::Scale' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, SpreadRatio) == 0x000004, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::SpreadRatio' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, SpreadPercent) == 0x000008, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::SpreadPercent' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, RecoilTemplate) == 0x00000C, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::RecoilTemplate' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, HackerPawn) == 0x000028, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::HackerPawn' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, Temp_bool_Variable) == 0x000030, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000034, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000038, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, CallFunc_GetRecoilTemplate_Result) == 0x000040, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::CallFunc_GetRecoilTemplate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, CallFunc_GetCurrentMode_Mode) == 0x000060, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, CallFunc_FindWeaponPropertyByType_Exists) == 0x000160, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::CallFunc_FindWeaponPropertyByType_Exists' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, CallFunc_FindWeaponPropertyByType_Value) == 0x000164, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::CallFunc_FindWeaponPropertyByType_Value' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, CallFunc_GetOwnerCharacter_Character) == 0x000168, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000170, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChange, K2Node_Select_Default) == 0x00017C, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChange::K2Node_Select_Default' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ApplyRecoil
// 0x0188 (0x0188 - 0x0000)
struct ITEM_WeaponBase_C_ApplyRecoil final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasKickback;                                       // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RecoilRatio;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecoilPercent;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponRecoilTemplate           RecoilTemplate;                                    // 0x0010(0x0018)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  Hacker;                                            // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponRecoilTemplate           CallFunc_GetRecoilTemplate_Result;                 // 0x005C(0x0018)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0078(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_FindWeaponPropertyByType_Exists;          // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindWeaponPropertyByType_Value;           // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_ApplyRecoil) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_ApplyRecoil");
static_assert(sizeof(ITEM_WeaponBase_C_ApplyRecoil) == 0x000188, "Wrong size on ITEM_WeaponBase_C_ApplyRecoil");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, Scale) == 0x000000, "Member 'ITEM_WeaponBase_C_ApplyRecoil::Scale' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, HasKickback) == 0x000004, "Member 'ITEM_WeaponBase_C_ApplyRecoil::HasKickback' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, RecoilRatio) == 0x000008, "Member 'ITEM_WeaponBase_C_ApplyRecoil::RecoilRatio' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, RecoilPercent) == 0x00000C, "Member 'ITEM_WeaponBase_C_ApplyRecoil::RecoilPercent' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, RecoilTemplate) == 0x000010, "Member 'ITEM_WeaponBase_C_ApplyRecoil::RecoilTemplate' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, Hacker) == 0x000028, "Member 'ITEM_WeaponBase_C_ApplyRecoil::Hacker' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, Temp_bool_Variable) == 0x000030, "Member 'ITEM_WeaponBase_C_ApplyRecoil::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, CallFunc_GetOwnerCharacter_Character) == 0x000038, "Member 'ITEM_WeaponBase_C_ApplyRecoil::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000040, "Member 'ITEM_WeaponBase_C_ApplyRecoil::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'ITEM_WeaponBase_C_ApplyRecoil::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00004C, "Member 'ITEM_WeaponBase_C_ApplyRecoil::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000050, "Member 'ITEM_WeaponBase_C_ApplyRecoil::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000054, "Member 'ITEM_WeaponBase_C_ApplyRecoil::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'ITEM_WeaponBase_C_ApplyRecoil::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, CallFunc_GetRecoilTemplate_Result) == 0x00005C, "Member 'ITEM_WeaponBase_C_ApplyRecoil::CallFunc_GetRecoilTemplate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, CallFunc_GetCurrentMode_Mode) == 0x000078, "Member 'ITEM_WeaponBase_C_ApplyRecoil::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, CallFunc_FindWeaponPropertyByType_Exists) == 0x000178, "Member 'ITEM_WeaponBase_C_ApplyRecoil::CallFunc_FindWeaponPropertyByType_Exists' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, CallFunc_FindWeaponPropertyByType_Value) == 0x00017C, "Member 'ITEM_WeaponBase_C_ApplyRecoil::CallFunc_FindWeaponPropertyByType_Value' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyRecoil, K2Node_Select_Default) == 0x000180, "Member 'ITEM_WeaponBase_C_ApplyRecoil::K2Node_Select_Default' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.PlayDischargeParticleFX
// 0x0160 (0x0160 - 0x0000)
struct ITEM_WeaponBase_C_PlayDischargeParticleFX final
{
public:
	bool                                          AutoDestroy;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      SpawnedComponent;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          DischargeFX;                                       // 0x0010(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0040(0x0100)(HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_PlayDischargeParticleFX) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_PlayDischargeParticleFX");
static_assert(sizeof(ITEM_WeaponBase_C_PlayDischargeParticleFX) == 0x000160, "Wrong size on ITEM_WeaponBase_C_PlayDischargeParticleFX");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeParticleFX, AutoDestroy) == 0x000000, "Member 'ITEM_WeaponBase_C_PlayDischargeParticleFX::AutoDestroy' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeParticleFX, SpawnedComponent) == 0x000008, "Member 'ITEM_WeaponBase_C_PlayDischargeParticleFX::SpawnedComponent' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeParticleFX, DischargeFX) == 0x000010, "Member 'ITEM_WeaponBase_C_PlayDischargeParticleFX::DischargeFX' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeParticleFX, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000038, "Member 'ITEM_WeaponBase_C_PlayDischargeParticleFX::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeParticleFX, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'ITEM_WeaponBase_C_PlayDischargeParticleFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeParticleFX, CallFunc_GetCurrentMode_Mode) == 0x000040, "Member 'ITEM_WeaponBase_C_PlayDischargeParticleFX::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeParticleFX, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000140, "Member 'ITEM_WeaponBase_C_PlayDischargeParticleFX::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeParticleFX, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000148, "Member 'ITEM_WeaponBase_C_PlayDischargeParticleFX::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeParticleFX, K2Node_DynamicCast_AsNiagara_System) == 0x000150, "Member 'ITEM_WeaponBase_C_PlayDischargeParticleFX::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeParticleFX, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'ITEM_WeaponBase_C_PlayDischargeParticleFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.PlayDischargeSoundCue
// 0x0020 (0x0020 - 0x0000)
struct ITEM_WeaponBase_C_PlayDischargeSoundCue final
{
public:
	class USoundCue*                              SoundCue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VolumeScale;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchScale;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        AudioComponent;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_PlayDischargeSoundCue) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_PlayDischargeSoundCue");
static_assert(sizeof(ITEM_WeaponBase_C_PlayDischargeSoundCue) == 0x000020, "Wrong size on ITEM_WeaponBase_C_PlayDischargeSoundCue");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundCue, SoundCue) == 0x000000, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundCue::SoundCue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundCue, VolumeScale) == 0x000008, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundCue::VolumeScale' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundCue, PitchScale) == 0x00000C, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundCue::PitchScale' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundCue, AudioComponent) == 0x000010, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundCue::AudioComponent' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundCue, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000018, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundCue::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.PlayDischargeSoundFX
// 0x0158 (0x0158 - 0x0000)
struct ITEM_WeaponBase_C_PlayDischargeSoundFX final
{
public:
	float                                         VolumeScale;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PitchScale;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               DischargeCue;                                      // 0x0008(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_PlayDischargeSoundCue_AudioComponent;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0048(0x0100)(HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_PlayDischargeSoundFX) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_PlayDischargeSoundFX");
static_assert(sizeof(ITEM_WeaponBase_C_PlayDischargeSoundFX) == 0x000158, "Wrong size on ITEM_WeaponBase_C_PlayDischargeSoundFX");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundFX, VolumeScale) == 0x000000, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundFX::VolumeScale' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundFX, PitchScale) == 0x000004, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundFX::PitchScale' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundFX, DischargeCue) == 0x000008, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundFX::DischargeCue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundFX, CallFunc_PlayDischargeSoundCue_AudioComponent) == 0x000030, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundFX::CallFunc_PlayDischargeSoundCue_AudioComponent' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundFX, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000038, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundFX::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundFX, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundFX, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000040, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundFX::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundFX, CallFunc_GetCurrentMode_Mode) == 0x000048, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundFX::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundFX, K2Node_DynamicCast_AsSound_Cue) == 0x000148, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundFX::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeSoundFX, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'ITEM_WeaponBase_C_PlayDischargeSoundFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ApplyAccuracyChangeAndRecoil
// 0x0001 (0x0001 - 0x0000)
struct ITEM_WeaponBase_C_ApplyAccuracyChangeAndRecoil final
{
public:
	bool                                          HasKickback;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_ApplyAccuracyChangeAndRecoil) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_ApplyAccuracyChangeAndRecoil");
static_assert(sizeof(ITEM_WeaponBase_C_ApplyAccuracyChangeAndRecoil) == 0x000001, "Wrong size on ITEM_WeaponBase_C_ApplyAccuracyChangeAndRecoil");
static_assert(offsetof(ITEM_WeaponBase_C_ApplyAccuracyChangeAndRecoil, HasKickback) == 0x000000, "Member 'ITEM_WeaponBase_C_ApplyAccuracyChangeAndRecoil::HasKickback' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.PlayDischargeFailSoundFX
// 0x0150 (0x0150 - 0x0000)
struct ITEM_WeaponBase_C_PlayDischargeFailSoundFX final
{
public:
	TSoftObjectPtr<class USoundCue>               DischargeFailCue;                                  // 0x0000(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_PlayDischargeSoundCue_AudioComponent;     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0040(0x0100)(HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_PlayDischargeFailSoundFX) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_PlayDischargeFailSoundFX");
static_assert(sizeof(ITEM_WeaponBase_C_PlayDischargeFailSoundFX) == 0x000150, "Wrong size on ITEM_WeaponBase_C_PlayDischargeFailSoundFX");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeFailSoundFX, DischargeFailCue) == 0x000000, "Member 'ITEM_WeaponBase_C_PlayDischargeFailSoundFX::DischargeFailCue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeFailSoundFX, CallFunc_PlayDischargeSoundCue_AudioComponent) == 0x000028, "Member 'ITEM_WeaponBase_C_PlayDischargeFailSoundFX::CallFunc_PlayDischargeSoundCue_AudioComponent' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeFailSoundFX, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'ITEM_WeaponBase_C_PlayDischargeFailSoundFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeFailSoundFX, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000031, "Member 'ITEM_WeaponBase_C_PlayDischargeFailSoundFX::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeFailSoundFX, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000038, "Member 'ITEM_WeaponBase_C_PlayDischargeFailSoundFX::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeFailSoundFX, CallFunc_GetCurrentMode_Mode) == 0x000040, "Member 'ITEM_WeaponBase_C_PlayDischargeFailSoundFX::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeFailSoundFX, K2Node_DynamicCast_AsSound_Cue) == 0x000140, "Member 'ITEM_WeaponBase_C_PlayDischargeFailSoundFX::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayDischargeFailSoundFX, K2Node_DynamicCast_bSuccess) == 0x000148, "Member 'ITEM_WeaponBase_C_PlayDischargeFailSoundFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsHolsterActionPlaying
// 0x0050 (0x0050 - 0x0000)
struct ITEM_WeaponBase_C_IsHolsterActionPlaying final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CurrentAction;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetHolsterMontage_Montage;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_IsHolsterActionPlaying) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_IsHolsterActionPlaying");
static_assert(sizeof(ITEM_WeaponBase_C_IsHolsterActionPlaying) == 0x000050, "Wrong size on ITEM_WeaponBase_C_IsHolsterActionPlaying");
static_assert(offsetof(ITEM_WeaponBase_C_IsHolsterActionPlaying, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_IsHolsterActionPlaying::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsHolsterActionPlaying, CurrentAction) == 0x000008, "Member 'ITEM_WeaponBase_C_IsHolsterActionPlaying::CurrentAction' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsHolsterActionPlaying, OwnerCharacter) == 0x000010, "Member 'ITEM_WeaponBase_C_IsHolsterActionPlaying::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsHolsterActionPlaying, CallFunc_GetHolsterMontage_Montage) == 0x000018, "Member 'ITEM_WeaponBase_C_IsHolsterActionPlaying::CallFunc_GetHolsterMontage_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsHolsterActionPlaying, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ITEM_WeaponBase_C_IsHolsterActionPlaying::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsHolsterActionPlaying, CallFunc_GetMontage_Result) == 0x000028, "Member 'ITEM_WeaponBase_C_IsHolsterActionPlaying::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsHolsterActionPlaying, CallFunc_GetCurrentAction_CurrentAction) == 0x000030, "Member 'ITEM_WeaponBase_C_IsHolsterActionPlaying::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsHolsterActionPlaying, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'ITEM_WeaponBase_C_IsHolsterActionPlaying::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsHolsterActionPlaying, CallFunc_GetOwnerCharacter_Character) == 0x000040, "Member 'ITEM_WeaponBase_C_IsHolsterActionPlaying::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsHolsterActionPlaying, CallFunc_IsValid_ReturnValue_1) == 0x000048, "Member 'ITEM_WeaponBase_C_IsHolsterActionPlaying::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetWeaponMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_GetWeaponMeshComponent final
{
public:
	class UMeshComponent*                         Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetWeaponMeshComponent) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetWeaponMeshComponent");
static_assert(sizeof(ITEM_WeaponBase_C_GetWeaponMeshComponent) == 0x000008, "Wrong size on ITEM_WeaponBase_C_GetWeaponMeshComponent");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponMeshComponent, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_GetWeaponMeshComponent::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsWaitingToHolster
// 0x0001 (0x0001 - 0x0000)
struct ITEM_WeaponBase_C_IsWaitingToHolster final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_IsWaitingToHolster) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_IsWaitingToHolster");
static_assert(sizeof(ITEM_WeaponBase_C_IsWaitingToHolster) == 0x000001, "Wrong size on ITEM_WeaponBase_C_IsWaitingToHolster");
static_assert(offsetof(ITEM_WeaponBase_C_IsWaitingToHolster, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_IsWaitingToHolster::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsWaitingToDrop
// 0x0001 (0x0001 - 0x0000)
struct ITEM_WeaponBase_C_IsWaitingToDrop final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_IsWaitingToDrop) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_IsWaitingToDrop");
static_assert(sizeof(ITEM_WeaponBase_C_IsWaitingToDrop) == 0x000001, "Wrong size on ITEM_WeaponBase_C_IsWaitingToDrop");
static_assert(offsetof(ITEM_WeaponBase_C_IsWaitingToDrop, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_IsWaitingToDrop::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.HasInstalledAnyModKits
// 0x000C (0x000C - 0x0000)
struct ITEM_WeaponBase_C_HasInstalledAnyModKits final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_HasInstalledAnyModKits) == 0x000004, "Wrong alignment on ITEM_WeaponBase_C_HasInstalledAnyModKits");
static_assert(sizeof(ITEM_WeaponBase_C_HasInstalledAnyModKits) == 0x00000C, "Wrong size on ITEM_WeaponBase_C_HasInstalledAnyModKits");
static_assert(offsetof(ITEM_WeaponBase_C_HasInstalledAnyModKits, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_HasInstalledAnyModKits::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HasInstalledAnyModKits, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'ITEM_WeaponBase_C_HasInstalledAnyModKits::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HasInstalledAnyModKits, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'ITEM_WeaponBase_C_HasInstalledAnyModKits::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.HasInstalledModKitClass
// 0x0010 (0x0010 - 0x0000)
struct ITEM_WeaponBase_C_HasInstalledModKitClass final
{
public:
	class UClass*                                 ModKitClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_HasInstalledModKitClass) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_HasInstalledModKitClass");
static_assert(sizeof(ITEM_WeaponBase_C_HasInstalledModKitClass) == 0x000010, "Wrong size on ITEM_WeaponBase_C_HasInstalledModKitClass");
static_assert(offsetof(ITEM_WeaponBase_C_HasInstalledModKitClass, ModKitClass) == 0x000000, "Member 'ITEM_WeaponBase_C_HasInstalledModKitClass::ModKitClass' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HasInstalledModKitClass, Result) == 0x000008, "Member 'ITEM_WeaponBase_C_HasInstalledModKitClass::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_HasInstalledModKitClass, CallFunc_Array_Contains_ReturnValue) == 0x000009, "Member 'ITEM_WeaponBase_C_HasInstalledModKitClass::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetInstalledAppearanceModifiers
// 0x0050 (0x0050 - 0x0000)
struct ITEM_WeaponBase_C_GetInstalledAppearanceModifiers final
{
public:
	TArray<class UITEM_WeaponModKit_Base_C*>      Result;                                            // 0x0000(0x0010)(Parm, OutParm)
	class UITEM_WeaponModKit_Base_C*              CurrentInstalledMod;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITEM_WeaponModKit_Base_C*>      AppearanceModifiers;                               // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAppearanceChange_Result;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponModKit_Base_C*              CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetInstalledAppearanceModifiers");
static_assert(sizeof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers) == 0x000050, "Wrong size on ITEM_WeaponBase_C_GetInstalledAppearanceModifiers");
static_assert(offsetof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_GetInstalledAppearanceModifiers::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers, CurrentInstalledMod) == 0x000010, "Member 'ITEM_WeaponBase_C_GetInstalledAppearanceModifiers::CurrentInstalledMod' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers, AppearanceModifiers) == 0x000018, "Member 'ITEM_WeaponBase_C_GetInstalledAppearanceModifiers::AppearanceModifiers' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers, Temp_int_Array_Index_Variable) == 0x000028, "Member 'ITEM_WeaponBase_C_GetInstalledAppearanceModifiers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'ITEM_WeaponBase_C_GetInstalledAppearanceModifiers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'ITEM_WeaponBase_C_GetInstalledAppearanceModifiers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers, CallFunc_HasAppearanceChange_Result) == 0x000034, "Member 'ITEM_WeaponBase_C_GetInstalledAppearanceModifiers::CallFunc_HasAppearanceChange_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'ITEM_WeaponBase_C_GetInstalledAppearanceModifiers::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers, CallFunc_Array_Get_Item) == 0x000040, "Member 'ITEM_WeaponBase_C_GetInstalledAppearanceModifiers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'ITEM_WeaponBase_C_GetInstalledAppearanceModifiers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetInstalledAppearanceModifiers, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'ITEM_WeaponBase_C_GetInstalledAppearanceModifiers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetDrawMontage
// 0x0018 (0x0018 - 0x0000)
struct ITEM_WeaponBase_C_GetDrawMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetDrawMontage) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetDrawMontage");
static_assert(sizeof(ITEM_WeaponBase_C_GetDrawMontage) == 0x000018, "Wrong size on ITEM_WeaponBase_C_GetDrawMontage");
static_assert(offsetof(ITEM_WeaponBase_C_GetDrawMontage, Montage) == 0x000000, "Member 'ITEM_WeaponBase_C_GetDrawMontage::Montage' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetDrawMontage, Temp_bool_Variable) == 0x000008, "Member 'ITEM_WeaponBase_C_GetDrawMontage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetDrawMontage, K2Node_Select_Default) == 0x000010, "Member 'ITEM_WeaponBase_C_GetDrawMontage::K2Node_Select_Default' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.EquipTick
// 0x0004 (0x0004 - 0x0000)
struct ITEM_WeaponBase_C_EquipTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_EquipTick) == 0x000004, "Wrong alignment on ITEM_WeaponBase_C_EquipTick");
static_assert(sizeof(ITEM_WeaponBase_C_EquipTick) == 0x000004, "Wrong size on ITEM_WeaponBase_C_EquipTick");
static_assert(offsetof(ITEM_WeaponBase_C_EquipTick, DeltaTime) == 0x000000, "Member 'ITEM_WeaponBase_C_EquipTick::DeltaTime' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetHolsterMontage
// 0x0018 (0x0018 - 0x0000)
struct ITEM_WeaponBase_C_GetHolsterMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetHolsterMontage) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetHolsterMontage");
static_assert(sizeof(ITEM_WeaponBase_C_GetHolsterMontage) == 0x000018, "Wrong size on ITEM_WeaponBase_C_GetHolsterMontage");
static_assert(offsetof(ITEM_WeaponBase_C_GetHolsterMontage, Montage) == 0x000000, "Member 'ITEM_WeaponBase_C_GetHolsterMontage::Montage' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHolsterMontage, Temp_bool_Variable) == 0x000008, "Member 'ITEM_WeaponBase_C_GetHolsterMontage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHolsterMontage, K2Node_Select_Default) == 0x000010, "Member 'ITEM_WeaponBase_C_GetHolsterMontage::K2Node_Select_Default' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.CanAimWithWeapon
// 0x0018 (0x0018 - 0x0000)
struct ITEM_WeaponBase_C_CanAimWithWeapon final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_CanAimWithWeapon) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_CanAimWithWeapon");
static_assert(sizeof(ITEM_WeaponBase_C_CanAimWithWeapon) == 0x000018, "Wrong size on ITEM_WeaponBase_C_CanAimWithWeapon");
static_assert(offsetof(ITEM_WeaponBase_C_CanAimWithWeapon, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_CanAimWithWeapon::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanAimWithWeapon, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000008, "Member 'ITEM_WeaponBase_C_CanAimWithWeapon::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanAimWithWeapon, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ITEM_WeaponBase_C_CanAimWithWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanAimWithWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'ITEM_WeaponBase_C_CanAimWithWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanAimWithWeapon, CallFunc_IsVisible_ReturnValue) == 0x000012, "Member 'ITEM_WeaponBase_C_CanAimWithWeapon::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanAimWithWeapon, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'ITEM_WeaponBase_C_CanAimWithWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetIdleSequence
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_GetIdleSequence final
{
public:
	class UAnimSequenceBase*                      Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetIdleSequence) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetIdleSequence");
static_assert(sizeof(ITEM_WeaponBase_C_GetIdleSequence) == 0x000008, "Wrong size on ITEM_WeaponBase_C_GetIdleSequence");
static_assert(offsetof(ITEM_WeaponBase_C_GetIdleSequence, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_GetIdleSequence::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetWalkSequence
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_GetWalkSequence final
{
public:
	class UAnimSequenceBase*                      Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetWalkSequence) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetWalkSequence");
static_assert(sizeof(ITEM_WeaponBase_C_GetWalkSequence) == 0x000008, "Wrong size on ITEM_WeaponBase_C_GetWalkSequence");
static_assert(offsetof(ITEM_WeaponBase_C_GetWalkSequence, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_GetWalkSequence::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetSprintSequence
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_GetSprintSequence final
{
public:
	class UAnimSequenceBase*                      Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetSprintSequence) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetSprintSequence");
static_assert(sizeof(ITEM_WeaponBase_C_GetSprintSequence) == 0x000008, "Wrong size on ITEM_WeaponBase_C_GetSprintSequence");
static_assert(offsetof(ITEM_WeaponBase_C_GetSprintSequence, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_GetSprintSequence::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryBeginReloading
// 0x0001 (0x0001 - 0x0000)
struct ITEM_WeaponBase_C_TryBeginReloading final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_TryBeginReloading) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_TryBeginReloading");
static_assert(sizeof(ITEM_WeaponBase_C_TryBeginReloading) == 0x000001, "Wrong size on ITEM_WeaponBase_C_TryBeginReloading");
static_assert(offsetof(ITEM_WeaponBase_C_TryBeginReloading, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_TryBeginReloading::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryInstallWeaponModKit
// 0x0080 (0x0080 - 0x0000)
struct ITEM_WeaponBase_C_TryInstallWeaponModKit final
{
public:
	class UITEM_WeaponModKit_Base_C*              ModKit;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasInstalledModKitClass_Result;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_Result;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryIncrementUnorderedAchievement_Result;  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryApplyWeaponModifications_Result;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_TryInstallWeaponModKit) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_TryInstallWeaponModKit");
static_assert(sizeof(ITEM_WeaponBase_C_TryInstallWeaponModKit) == 0x000080, "Wrong size on ITEM_WeaponBase_C_TryInstallWeaponModKit");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, ModKit) == 0x000000, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::ModKit' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, Result) == 0x000008, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_GetOwnerCharacter_Character) == 0x000010, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_GetBag_Result) == 0x000020, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_GetObjectClass_ReturnValue) == 0x000030, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_GetObjectClass_ReturnValue_1) == 0x000038, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_HasInstalledModKitClass_Result) == 0x000040, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_HasInstalledModKitClass_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, K2Node_DynamicCast_AsGI_Single_Player) == 0x000058, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_GetSlotIndex_Result) == 0x000064, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_GetSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_TryIncrementUnorderedAchievement_Result) == 0x000068, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_TryIncrementUnorderedAchievement_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_TryApplyWeaponModifications_Result) == 0x000069, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_TryApplyWeaponModifications_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_GetObjectClass_ReturnValue_2) == 0x000070, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryInstallWeaponModKit, CallFunc_Array_Add_ReturnValue_1) == 0x00007C, "Member 'ITEM_WeaponBase_C_TryInstallWeaponModKit::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryCreateModKitInstances
// 0x0088 (0x0088 - 0x0000)
struct ITEM_WeaponBase_C_TryCreateModKitInstances final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponModKit_Base_C*              ModKitInstance;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponModKit_Base_C*              CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryApplyWeaponModifications_Result;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponModKit_Base_C*              CallFunc_SpawnObject_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_TryCreateModKitInstances) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_TryCreateModKitInstances");
static_assert(sizeof(ITEM_WeaponBase_C_TryCreateModKitInstances) == 0x000088, "Wrong size on ITEM_WeaponBase_C_TryCreateModKitInstances");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, ModKitInstance) == 0x000008, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::ModKitInstance' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000028, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Array_Get_Item) == 0x000030, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000040, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Max_ReturnValue) == 0x000048, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Array_Length_ReturnValue_1) == 0x00004C, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000050, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Array_Add_ReturnValue) == 0x000054, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_TryApplyWeaponModifications_Result) == 0x000058, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_TryApplyWeaponModifications_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Array_Length_ReturnValue_2) == 0x000068, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_SpawnObject_ReturnValue) == 0x000070, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Array_Length_ReturnValue_3) == 0x00007C, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryCreateModKitInstances, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'ITEM_WeaponBase_C_TryCreateModKitInstances::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsWeaponObstructed
// 0x0001 (0x0001 - 0x0000)
struct ITEM_WeaponBase_C_IsWeaponObstructed final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_IsWeaponObstructed) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_IsWeaponObstructed");
static_assert(sizeof(ITEM_WeaponBase_C_IsWeaponObstructed) == 0x000001, "Wrong size on ITEM_WeaponBase_C_IsWeaponObstructed");
static_assert(offsetof(ITEM_WeaponBase_C_IsWeaponObstructed, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_IsWeaponObstructed::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetWeaponObstructionDistance
// 0x0004 (0x0004 - 0x0000)
struct ITEM_WeaponBase_C_GetWeaponObstructionDistance final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetWeaponObstructionDistance) == 0x000004, "Wrong alignment on ITEM_WeaponBase_C_GetWeaponObstructionDistance");
static_assert(sizeof(ITEM_WeaponBase_C_GetWeaponObstructionDistance) == 0x000004, "Wrong size on ITEM_WeaponBase_C_GetWeaponObstructionDistance");
static_assert(offsetof(ITEM_WeaponBase_C_GetWeaponObstructionDistance, Distance) == 0x000000, "Member 'ITEM_WeaponBase_C_GetWeaponObstructionDistance::Distance' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryUpdateFirstPersonAttachments
// 0x00A0 (0x00A0 - 0x0000)
struct ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponModKit_Base_C*              ModKitInstance;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAppearanceChange_Result;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     CallFunc_GetEquippedWeapon_Weapon;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_GetFirstPersonAttachment_Mesh;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetFirstPersonAttachment_Transform;       // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_GetFirstPersonAttachment_SocketName;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponModKit_Base_C*              CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments) == 0x000010, "Wrong alignment on ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments");
static_assert(sizeof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments) == 0x0000A0, "Wrong size on ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, Character) == 0x000000, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, ModKitInstance) == 0x000008, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::ModKitInstance' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, HackerPawn) == 0x000010, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::HackerPawn' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000018, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, Temp_int_Array_Index_Variable) == 0x000024, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, CallFunc_HasAppearanceChange_Result) == 0x000030, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::CallFunc_HasAppearanceChange_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, CallFunc_GetEquippedWeapon_Weapon) == 0x000038, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::CallFunc_GetEquippedWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, CallFunc_GetFirstPersonAttachment_Mesh) == 0x000048, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::CallFunc_GetFirstPersonAttachment_Mesh' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, CallFunc_GetFirstPersonAttachment_Transform) == 0x000050, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::CallFunc_GetFirstPersonAttachment_Transform' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, CallFunc_GetFirstPersonAttachment_SocketName) == 0x000080, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::CallFunc_GetFirstPersonAttachment_SocketName' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, CallFunc_Array_Get_Item) == 0x000088, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'ITEM_WeaponBase_C_TryUpdateFirstPersonAttachments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetWeaponObstructed
// 0x0001 (0x0001 - 0x0000)
struct ITEM_WeaponBase_C_SetWeaponObstructed final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_SetWeaponObstructed) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_SetWeaponObstructed");
static_assert(sizeof(ITEM_WeaponBase_C_SetWeaponObstructed) == 0x000001, "Wrong size on ITEM_WeaponBase_C_SetWeaponObstructed");
static_assert(offsetof(ITEM_WeaponBase_C_SetWeaponObstructed, State) == 0x000000, "Member 'ITEM_WeaponBase_C_SetWeaponObstructed::State' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.PlayForceFeedbackEffect
// 0x0038 (0x0038 - 0x0000)
struct ITEM_WeaponBase_C_PlayForceFeedbackEffect final
{
public:
	class UForceFeedbackEffect*                   ForceFeedback;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_PlayForceFeedbackEffect) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_PlayForceFeedbackEffect");
static_assert(sizeof(ITEM_WeaponBase_C_PlayForceFeedbackEffect) == 0x000038, "Wrong size on ITEM_WeaponBase_C_PlayForceFeedbackEffect");
static_assert(offsetof(ITEM_WeaponBase_C_PlayForceFeedbackEffect, ForceFeedback) == 0x000000, "Member 'ITEM_WeaponBase_C_PlayForceFeedbackEffect::ForceFeedback' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayForceFeedbackEffect, OwnerCharacter) == 0x000008, "Member 'ITEM_WeaponBase_C_PlayForceFeedbackEffect::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayForceFeedbackEffect, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ITEM_WeaponBase_C_PlayForceFeedbackEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayForceFeedbackEffect, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'ITEM_WeaponBase_C_PlayForceFeedbackEffect::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayForceFeedbackEffect, K2Node_DynamicCast_AsPlayer_Controller) == 0x000020, "Member 'ITEM_WeaponBase_C_PlayForceFeedbackEffect::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayForceFeedbackEffect, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ITEM_WeaponBase_C_PlayForceFeedbackEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayForceFeedbackEffect, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'ITEM_WeaponBase_C_PlayForceFeedbackEffect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_PlayForceFeedbackEffect, CallFunc_GetOwnerCharacter_Character) == 0x000030, "Member 'ITEM_WeaponBase_C_PlayForceFeedbackEffect::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.UpdateDisplayMesh
// 0x0078 (0x0078 - 0x0000)
struct ITEM_WeaponBase_C_UpdateDisplayMesh final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     LoadedMaterial;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LoadedAnimBP;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          LoadedDisplayMesh;                                 // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasInstalledAnyModKits_Result;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetDisplayMesh_Result;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsAnim_Instance;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_UpdateDisplayMesh) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_UpdateDisplayMesh");
static_assert(sizeof(ITEM_WeaponBase_C_UpdateDisplayMesh) == 0x000078, "Wrong size on ITEM_WeaponBase_C_UpdateDisplayMesh");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, Character) == 0x000000, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, LoadedMaterial) == 0x000008, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::LoadedMaterial' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, LoadedAnimBP) == 0x000010, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::LoadedAnimBP' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, LoadedDisplayMesh) == 0x000018, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::LoadedDisplayMesh' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, CallFunc_HasInstalledAnyModKits_Result) == 0x000020, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::CallFunc_HasInstalledAnyModKits_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000021, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000028, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, CallFunc_SetDisplayMesh_Result) == 0x000030, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::CallFunc_SetDisplayMesh_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, K2Node_DynamicCast_AsMaterial_Interface) == 0x000038, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000048, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000050, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, K2Node_ClassDynamicCast_AsAnim_Instance) == 0x000058, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::K2Node_ClassDynamicCast_AsAnim_Instance' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, K2Node_ClassDynamicCast_bSuccess) == 0x000060, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000068, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_UpdateDisplayMesh, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'ITEM_WeaponBase_C_UpdateDisplayMesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetWeaponObstructionDistance
// 0x0038 (0x0038 - 0x0000)
struct ITEM_WeaponBase_C_SetWeaponObstructionDistance final
{
public:
	float                                         NewDistance;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_HackerInventory_C*                HackerInventory;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponBase_C*                     CallFunc_GetEquippedWeapon_Weapon;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_HackerInventory_C*                K2Node_DynamicCast_AsCOMP_Hacker_Inventory;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_SetWeaponObstructionDistance) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_SetWeaponObstructionDistance");
static_assert(sizeof(ITEM_WeaponBase_C_SetWeaponObstructionDistance) == 0x000038, "Wrong size on ITEM_WeaponBase_C_SetWeaponObstructionDistance");
static_assert(offsetof(ITEM_WeaponBase_C_SetWeaponObstructionDistance, NewDistance) == 0x000000, "Member 'ITEM_WeaponBase_C_SetWeaponObstructionDistance::NewDistance' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetWeaponObstructionDistance, HackerInventory) == 0x000008, "Member 'ITEM_WeaponBase_C_SetWeaponObstructionDistance::HackerInventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetWeaponObstructionDistance, CallFunc_GetEquippedWeapon_Weapon) == 0x000010, "Member 'ITEM_WeaponBase_C_SetWeaponObstructionDistance::CallFunc_GetEquippedWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetWeaponObstructionDistance, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'ITEM_WeaponBase_C_SetWeaponObstructionDistance::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetWeaponObstructionDistance, CallFunc_GetInventory_Inventory) == 0x000020, "Member 'ITEM_WeaponBase_C_SetWeaponObstructionDistance::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetWeaponObstructionDistance, K2Node_DynamicCast_AsCOMP_Hacker_Inventory) == 0x000028, "Member 'ITEM_WeaponBase_C_SetWeaponObstructionDistance::K2Node_DynamicCast_AsCOMP_Hacker_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetWeaponObstructionDistance, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ITEM_WeaponBase_C_SetWeaponObstructionDistance::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetBarrelSocketName
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_SetBarrelSocketName final
{
public:
	class FName                                   SocketName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_SetBarrelSocketName) == 0x000004, "Wrong alignment on ITEM_WeaponBase_C_SetBarrelSocketName");
static_assert(sizeof(ITEM_WeaponBase_C_SetBarrelSocketName) == 0x000008, "Wrong size on ITEM_WeaponBase_C_SetBarrelSocketName");
static_assert(offsetof(ITEM_WeaponBase_C_SetBarrelSocketName, SocketName) == 0x000000, "Member 'ITEM_WeaponBase_C_SetBarrelSocketName::SocketName' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetHotbarCount
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_GetHotbarCount final
{
public:
	int32                                         ResultCount;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Result;                          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetHotbarCount) == 0x000004, "Wrong alignment on ITEM_WeaponBase_C_GetHotbarCount");
static_assert(sizeof(ITEM_WeaponBase_C_GetHotbarCount) == 0x000008, "Wrong size on ITEM_WeaponBase_C_GetHotbarCount");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarCount, ResultCount) == 0x000000, "Member 'ITEM_WeaponBase_C_GetHotbarCount::ResultCount' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarCount, CallFunc_GetCount_Result) == 0x000004, "Member 'ITEM_WeaponBase_C_GetHotbarCount::CallFunc_GetCount_Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetHotbarIcon
// 0x0028 (0x0028 - 0x0000)
struct ITEM_WeaponBase_C_GetHotbarIcon final
{
public:
	class UTexture*                               ResultIcon;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetItemHotbarRenderTarget_Result;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetHotbarIcon) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetHotbarIcon");
static_assert(sizeof(ITEM_WeaponBase_C_GetHotbarIcon) == 0x000028, "Wrong size on ITEM_WeaponBase_C_GetHotbarIcon");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarIcon, ResultIcon) == 0x000000, "Member 'ITEM_WeaponBase_C_GetHotbarIcon::ResultIcon' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarIcon, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'ITEM_WeaponBase_C_GetHotbarIcon::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarIcon, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'ITEM_WeaponBase_C_GetHotbarIcon::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarIcon, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_WeaponBase_C_GetHotbarIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarIcon, CallFunc_GetItemHotbarRenderTarget_Result) == 0x000020, "Member 'ITEM_WeaponBase_C_GetHotbarIcon::CallFunc_GetItemHotbarRenderTarget_Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.ActivateHotbarSlot
// 0x0001 (0x0001 - 0x0000)
struct ITEM_WeaponBase_C_ActivateHotbarSlot final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_ActivateHotbarSlot) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_ActivateHotbarSlot");
static_assert(sizeof(ITEM_WeaponBase_C_ActivateHotbarSlot) == 0x000001, "Wrong size on ITEM_WeaponBase_C_ActivateHotbarSlot");
static_assert(offsetof(ITEM_WeaponBase_C_ActivateHotbarSlot, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_ActivateHotbarSlot::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.DeactivateHotbarSlot
// 0x0001 (0x0001 - 0x0000)
struct ITEM_WeaponBase_C_DeactivateHotbarSlot final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_DeactivateHotbarSlot) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_DeactivateHotbarSlot");
static_assert(sizeof(ITEM_WeaponBase_C_DeactivateHotbarSlot) == 0x000001, "Wrong size on ITEM_WeaponBase_C_DeactivateHotbarSlot");
static_assert(offsetof(ITEM_WeaponBase_C_DeactivateHotbarSlot, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_DeactivateHotbarSlot::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetHotbarDisplayName
// 0x0090 (0x0090 - 0x0000)
struct ITEM_WeaponBase_C_GetHotbarDisplayName final
{
public:
	class FText                                   Result;                                            // 0x0000(0x0018)(Parm, OutParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0078(0x0018)()
};
static_assert(alignof(ITEM_WeaponBase_C_GetHotbarDisplayName) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetHotbarDisplayName");
static_assert(sizeof(ITEM_WeaponBase_C_GetHotbarDisplayName) == 0x000090, "Wrong size on ITEM_WeaponBase_C_GetHotbarDisplayName");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarDisplayName, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_GetHotbarDisplayName::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarDisplayName, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'ITEM_WeaponBase_C_GetHotbarDisplayName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarDisplayName, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'ITEM_WeaponBase_C_GetHotbarDisplayName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarDisplayName, K2Node_MakeArray_Array) == 0x000060, "Member 'ITEM_WeaponBase_C_GetHotbarDisplayName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarDisplayName, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'ITEM_WeaponBase_C_GetHotbarDisplayName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarDisplayName, CallFunc_Format_ReturnValue) == 0x000078, "Member 'ITEM_WeaponBase_C_GetHotbarDisplayName::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetEquipState
// 0x0002 (0x0002 - 0x0000)
struct ITEM_WeaponBase_C_GetEquipState final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_GetEquipState) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_GetEquipState");
static_assert(sizeof(ITEM_WeaponBase_C_GetEquipState) == 0x000002, "Wrong size on ITEM_WeaponBase_C_GetEquipState");
static_assert(offsetof(ITEM_WeaponBase_C_GetEquipState, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_GetEquipState::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetEquipState, CallFunc_IsEquipped_Result) == 0x000001, "Member 'ITEM_WeaponBase_C_GetEquipState::CallFunc_IsEquipped_Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetOwner
// 0x0010 (0x0010 - 0x0000)
struct ITEM_WeaponBase_C_GetOwner final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_Actor;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetOwner) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetOwner");
static_assert(sizeof(ITEM_WeaponBase_C_GetOwner) == 0x000010, "Wrong size on ITEM_WeaponBase_C_GetOwner");
static_assert(offsetof(ITEM_WeaponBase_C_GetOwner, Owner) == 0x000000, "Member 'ITEM_WeaponBase_C_GetOwner::Owner' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetOwner, CallFunc_GetOwnerActor_Actor) == 0x000008, "Member 'ITEM_WeaponBase_C_GetOwner::CallFunc_GetOwnerActor_Actor' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryUseConsumable
// 0x0001 (0x0001 - 0x0000)
struct ITEM_WeaponBase_C_TryUseConsumable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_TryUseConsumable) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_TryUseConsumable");
static_assert(sizeof(ITEM_WeaponBase_C_TryUseConsumable) == 0x000001, "Wrong size on ITEM_WeaponBase_C_TryUseConsumable");
static_assert(offsetof(ITEM_WeaponBase_C_TryUseConsumable, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_TryUseConsumable::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.InitializeItem
// 0x0010 (0x0010 - 0x0000)
struct ITEM_WeaponBase_C_InitializeItem final
{
public:
	class UInventoryBag_C*                        Bag_0;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryCreateModKitInstances_Result;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_InitializeItem) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_InitializeItem");
static_assert(sizeof(ITEM_WeaponBase_C_InitializeItem) == 0x000010, "Wrong size on ITEM_WeaponBase_C_InitializeItem");
static_assert(offsetof(ITEM_WeaponBase_C_InitializeItem, Bag_0) == 0x000000, "Member 'ITEM_WeaponBase_C_InitializeItem::Bag_0' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_InitializeItem, CallFunc_TryCreateModKitInstances_Result) == 0x000008, "Member 'ITEM_WeaponBase_C_InitializeItem::CallFunc_TryCreateModKitInstances_Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnInventoryChanged
// 0x00C0 (0x00C0 - 0x0000)
struct ITEM_WeaponBase_C_OnInventoryChanged final
{
public:
	class UCOMP_Inventory_C*                      PrevInventory;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HotbarSlotIndex;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_AddToSlot_SlottableObject_CastInput;      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToSlot_Result;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFirstFreeSlotIndexWithPreference_Result; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAutoSlotHotbar_Result;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory_1;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant_1;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_RemoveFromSlot_SlottableObject_CastInput; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveFromSlot_Result;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_AddToBestAvailableSlot_SlottableObject_CastInput; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToBestAvailableSlot_Result;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_OnInventoryChanged) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_OnInventoryChanged");
static_assert(sizeof(ITEM_WeaponBase_C_OnInventoryChanged) == 0x0000C0, "Wrong size on ITEM_WeaponBase_C_OnInventoryChanged");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, PrevInventory) == 0x000000, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::PrevInventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, Result) == 0x000008, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, HotbarSlotIndex) == 0x00000C, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::HotbarSlotIndex' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, HackerPawn) == 0x000010, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::HackerPawn' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_AddToSlot_SlottableObject_CastInput) == 0x000020, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_AddToSlot_SlottableObject_CastInput' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_AddToSlot_Result) == 0x000030, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_AddToSlot_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_GetFirstFreeSlotIndexWithPreference_Result) == 0x000034, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_GetFirstFreeSlotIndexWithPreference_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_GetInventory_Inventory) == 0x000038, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000040, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_GetAutoSlotHotbar_Result) == 0x000050, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_GetAutoSlotHotbar_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000058, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_GetInventory_Inventory_1) == 0x000068, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_GetInventory_Inventory_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_GetOwner_ReturnValue_1) == 0x000078, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, K2Node_DynamicCast_AsPAWN_Hacker_Implant_1) == 0x000080, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::K2Node_DynamicCast_AsPAWN_Hacker_Implant_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_IsValid_ReturnValue_1) == 0x000089, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_RemoveFromSlot_SlottableObject_CastInput) == 0x000090, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_RemoveFromSlot_SlottableObject_CastInput' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_RemoveFromSlot_Result) == 0x0000A0, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_RemoveFromSlot_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000A1, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_AddToBestAvailableSlot_SlottableObject_CastInput) == 0x0000A8, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_AddToBestAvailableSlot_SlottableObject_CastInput' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnInventoryChanged, CallFunc_AddToBestAvailableSlot_Result) == 0x0000B8, "Member 'ITEM_WeaponBase_C_OnInventoryChanged::CallFunc_AddToBestAvailableSlot_Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.CanUnslot
// 0x0004 (0x0004 - 0x0000)
struct ITEM_WeaponBase_C_CanUnslot final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWaitingToDrop_Result;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanUnslot_Result;                         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_CanUnslot) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_CanUnslot");
static_assert(sizeof(ITEM_WeaponBase_C_CanUnslot) == 0x000004, "Wrong size on ITEM_WeaponBase_C_CanUnslot");
static_assert(offsetof(ITEM_WeaponBase_C_CanUnslot, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_CanUnslot::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanUnslot, CallFunc_IsWaitingToDrop_Result) == 0x000001, "Member 'ITEM_WeaponBase_C_CanUnslot::CallFunc_IsWaitingToDrop_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanUnslot, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ITEM_WeaponBase_C_CanUnslot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanUnslot, CallFunc_CanUnslot_Result) == 0x000003, "Member 'ITEM_WeaponBase_C_CanUnslot::CallFunc_CanUnslot_Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnBecomeActivatable
// 0x0048 (0x0048 - 0x0000)
struct ITEM_WeaponBase_C_OnBecomeActivatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetDrawMontage_Montage;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnBecomeActivatable_Result;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_OnBecomeActivatable) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_OnBecomeActivatable");
static_assert(sizeof(ITEM_WeaponBase_C_OnBecomeActivatable) == 0x000048, "Wrong size on ITEM_WeaponBase_C_OnBecomeActivatable");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeActivatable, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_OnBecomeActivatable::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeActivatable, Character) == 0x000008, "Member 'ITEM_WeaponBase_C_OnBecomeActivatable::Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeActivatable, CallFunc_GetDrawMontage_Montage) == 0x000010, "Member 'ITEM_WeaponBase_C_OnBecomeActivatable::CallFunc_GetDrawMontage_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeActivatable, CallFunc_GetInventory_Inventory) == 0x000018, "Member 'ITEM_WeaponBase_C_OnBecomeActivatable::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeActivatable, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'ITEM_WeaponBase_C_OnBecomeActivatable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeActivatable, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000028, "Member 'ITEM_WeaponBase_C_OnBecomeActivatable::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeActivatable, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ITEM_WeaponBase_C_OnBecomeActivatable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeActivatable, CallFunc_ForceBeginAction_Action) == 0x000038, "Member 'ITEM_WeaponBase_C_OnBecomeActivatable::CallFunc_ForceBeginAction_Action' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeActivatable, CallFunc_OnBecomeActivatable_Result) == 0x000040, "Member 'ITEM_WeaponBase_C_OnBecomeActivatable::CallFunc_OnBecomeActivatable_Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.OnBecomeUnactivatable
// 0x0058 (0x0058 - 0x0000)
struct ITEM_WeaponBase_C_OnBecomeUnactivatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     HolsterAction;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetHolsterMontage_Montage;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory_1;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnBecomeUnactivatable_Result;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_OnBecomeUnactivatable) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_OnBecomeUnactivatable");
static_assert(sizeof(ITEM_WeaponBase_C_OnBecomeUnactivatable) == 0x000058, "Wrong size on ITEM_WeaponBase_C_OnBecomeUnactivatable");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, HolsterAction) == 0x000008, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::HolsterAction' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, Character) == 0x000010, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, CallFunc_GetHolsterMontage_Montage) == 0x000018, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::CallFunc_GetHolsterMontage_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, CallFunc_GetInventory_Inventory) == 0x000020, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, CallFunc_GetInventory_Inventory_1) == 0x000028, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::CallFunc_GetInventory_Inventory_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000038, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, CallFunc_Not_PreBool_ReturnValue) == 0x000042, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, CallFunc_ForceBeginAction_Action) == 0x000048, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::CallFunc_ForceBeginAction_Action' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_OnBecomeUnactivatable, CallFunc_OnBecomeUnactivatable_Result) == 0x000050, "Member 'ITEM_WeaponBase_C_OnBecomeUnactivatable::CallFunc_OnBecomeUnactivatable_Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.SetEquipped
// 0x0030 (0x0030 - 0x0000)
struct ITEM_WeaponBase_C_SetEquipped final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponBase_C*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_HackerInventory_C*                K2Node_DynamicCast_AsCOMP_Hacker_Inventory;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_SetEquipped) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_SetEquipped");
static_assert(sizeof(ITEM_WeaponBase_C_SetEquipped) == 0x000030, "Wrong size on ITEM_WeaponBase_C_SetEquipped");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipped, State) == 0x000000, "Member 'ITEM_WeaponBase_C_SetEquipped::State' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipped, Result) == 0x000001, "Member 'ITEM_WeaponBase_C_SetEquipped::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipped, Temp_bool_Variable) == 0x000002, "Member 'ITEM_WeaponBase_C_SetEquipped::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipped, Temp_object_Variable) == 0x000008, "Member 'ITEM_WeaponBase_C_SetEquipped::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipped, CallFunc_GetInventory_Inventory) == 0x000010, "Member 'ITEM_WeaponBase_C_SetEquipped::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipped, K2Node_Select_Default) == 0x000018, "Member 'ITEM_WeaponBase_C_SetEquipped::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipped, K2Node_DynamicCast_AsCOMP_Hacker_Inventory) == 0x000020, "Member 'ITEM_WeaponBase_C_SetEquipped::K2Node_DynamicCast_AsCOMP_Hacker_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipped, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ITEM_WeaponBase_C_SetEquipped::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipped, CallFunc_IsEquipped_Result) == 0x000029, "Member 'ITEM_WeaponBase_C_SetEquipped::CallFunc_IsEquipped_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_SetEquipped, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00002A, "Member 'ITEM_WeaponBase_C_SetEquipped::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsEquipped
// 0x0030 (0x0030 - 0x0000)
struct ITEM_WeaponBase_C_IsEquipped final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_HackerInventory_C*                K2Node_DynamicCast_AsCOMP_Hacker_Inventory;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     CallFunc_GetEquippedWeapon_Weapon;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_IsEquipped) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_IsEquipped");
static_assert(sizeof(ITEM_WeaponBase_C_IsEquipped) == 0x000030, "Wrong size on ITEM_WeaponBase_C_IsEquipped");
static_assert(offsetof(ITEM_WeaponBase_C_IsEquipped, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_IsEquipped::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsEquipped, CallFunc_GetInventory_Inventory) == 0x000008, "Member 'ITEM_WeaponBase_C_IsEquipped::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsEquipped, K2Node_DynamicCast_AsCOMP_Hacker_Inventory) == 0x000010, "Member 'ITEM_WeaponBase_C_IsEquipped::K2Node_DynamicCast_AsCOMP_Hacker_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsEquipped, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_WeaponBase_C_IsEquipped::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsEquipped, CallFunc_GetEquippedWeapon_Weapon) == 0x000020, "Member 'ITEM_WeaponBase_C_IsEquipped::CallFunc_GetEquippedWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_IsEquipped, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'ITEM_WeaponBase_C_IsEquipped::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetInventoryItemDetailsClass
// 0x0008 (0x0008 - 0x0000)
struct ITEM_WeaponBase_C_GetInventoryItemDetailsClass final
{
public:
	class UClass*                                 InventoryItemDetailsWidget;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetInventoryItemDetailsClass");
static_assert(sizeof(ITEM_WeaponBase_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong size on ITEM_WeaponBase_C_GetInventoryItemDetailsClass");
static_assert(offsetof(ITEM_WeaponBase_C_GetInventoryItemDetailsClass, InventoryItemDetailsWidget) == 0x000000, "Member 'ITEM_WeaponBase_C_GetInventoryItemDetailsClass::InventoryItemDetailsWidget' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.CanBecomeActivatable
// 0x0040 (0x0040 - 0x0000)
struct ITEM_WeaponBase_C_CanBecomeActivatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetDrawMontage_Montage;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBecomeActivatable_Result;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanBeginAction_Result;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasDisplayMesh_Result;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_CanBecomeActivatable) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_CanBecomeActivatable");
static_assert(sizeof(ITEM_WeaponBase_C_CanBecomeActivatable) == 0x000040, "Wrong size on ITEM_WeaponBase_C_CanBecomeActivatable");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, Character) == 0x000008, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, CallFunc_GetDrawMontage_Montage) == 0x000010, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::CallFunc_GetDrawMontage_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, CallFunc_GetInventory_Inventory) == 0x000018, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, CallFunc_CanBecomeActivatable_Result) == 0x000020, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::CallFunc_CanBecomeActivatable_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000030, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, CallFunc_CanBeginAction_Result) == 0x000039, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::CallFunc_CanBeginAction_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, CallFunc_HasDisplayMesh_Result) == 0x00003A, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::CallFunc_HasDisplayMesh_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, CallFunc_Not_PreBool_ReturnValue) == 0x00003B, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, CallFunc_IsEquipped_Result) == 0x00003C, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::CallFunc_IsEquipped_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_CanBecomeActivatable, CallFunc_BooleanOR_ReturnValue) == 0x00003D, "Member 'ITEM_WeaponBase_C_CanBecomeActivatable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetHotbarSlottableObject
// 0x0018 (0x0018 - 0x0000)
struct ITEM_WeaponBase_C_GetHotbarSlottableObject final
{
public:
	bool                                          Valid;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_GetHotbarSlottableObject) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetHotbarSlottableObject");
static_assert(sizeof(ITEM_WeaponBase_C_GetHotbarSlottableObject) == 0x000018, "Wrong size on ITEM_WeaponBase_C_GetHotbarSlottableObject");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarSlottableObject, Valid) == 0x000000, "Member 'ITEM_WeaponBase_C_GetHotbarSlottableObject::Valid' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetHotbarSlottableObject, SlottableObject) == 0x000008, "Member 'ITEM_WeaponBase_C_GetHotbarSlottableObject::SlottableObject' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.IsEquippable
// 0x0001 (0x0001 - 0x0000)
struct ITEM_WeaponBase_C_IsEquippable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_IsEquippable) == 0x000001, "Wrong alignment on ITEM_WeaponBase_C_IsEquippable");
static_assert(sizeof(ITEM_WeaponBase_C_IsEquippable) == 0x000001, "Wrong size on ITEM_WeaponBase_C_IsEquippable");
static_assert(offsetof(ITEM_WeaponBase_C_IsEquippable, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_IsEquippable::Result' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.TryHandleDropEvent
// 0x0018 (0x0018 - 0x0000)
struct ITEM_WeaponBase_C_TryHandleDropEvent final
{
public:
	class USceneComponent*                        SceneComponent;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RelativeOffset;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_WeaponBase_C_TryHandleDropEvent) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_TryHandleDropEvent");
static_assert(sizeof(ITEM_WeaponBase_C_TryHandleDropEvent) == 0x000018, "Wrong size on ITEM_WeaponBase_C_TryHandleDropEvent");
static_assert(offsetof(ITEM_WeaponBase_C_TryHandleDropEvent, SceneComponent) == 0x000000, "Member 'ITEM_WeaponBase_C_TryHandleDropEvent::SceneComponent' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryHandleDropEvent, RelativeOffset) == 0x000008, "Member 'ITEM_WeaponBase_C_TryHandleDropEvent::RelativeOffset' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryHandleDropEvent, Result) == 0x000010, "Member 'ITEM_WeaponBase_C_TryHandleDropEvent::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_TryHandleDropEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'ITEM_WeaponBase_C_TryHandleDropEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ITEM_WeaponBase.ITEM_WeaponBase_C.GetIconRenderClassCollection
// 0x00B0 (0x00B0 - 0x0000)
struct ITEM_WeaponBase_C_GetIconRenderClassCollection final
{
public:
	struct FObjectClassCollection                 Result;                                            // 0x0000(0x0010)(Parm, OutParm, HasGetValueTypeHash)
	class UITEM_WeaponModKit_Base_C*              CurrentInstalledMod;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           ObjectClasses;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAppearanceChange_Result;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FObjectClassCollection                 K2Node_MakeStruct_ObjectClassCollection;           // 0x0038(0x0010)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0050(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UITEM_WeaponModKit_Base_C*              CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FObjectClassCollection                 CallFunc_GetIconRenderClassCollection_Result;      // 0x0098(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_WeaponBase_C_GetIconRenderClassCollection) == 0x000008, "Wrong alignment on ITEM_WeaponBase_C_GetIconRenderClassCollection");
static_assert(sizeof(ITEM_WeaponBase_C_GetIconRenderClassCollection) == 0x0000B0, "Wrong size on ITEM_WeaponBase_C_GetIconRenderClassCollection");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, Result) == 0x000000, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CurrentInstalledMod) == 0x000010, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CurrentInstalledMod' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, ObjectClasses) == 0x000018, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::ObjectClasses' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, Temp_int_Array_Index_Variable) == 0x000028, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CallFunc_HasAppearanceChange_Result) == 0x000034, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CallFunc_HasAppearanceChange_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, K2Node_MakeStruct_ObjectClassCollection) == 0x000038, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::K2Node_MakeStruct_ObjectClassCollection' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CallFunc_GetObjectClass_ReturnValue) == 0x000048, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000050, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CallFunc_Array_Get_Item) == 0x000078, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CallFunc_GetIconRenderClassCollection_Result) == 0x000098, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CallFunc_GetIconRenderClassCollection_Result' has a wrong offset!");
static_assert(offsetof(ITEM_WeaponBase_C_GetIconRenderClassCollection, CallFunc_Array_Add_ReturnValue_1) == 0x0000A8, "Member 'ITEM_WeaponBase_C_GetIconRenderClassCollection::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

}


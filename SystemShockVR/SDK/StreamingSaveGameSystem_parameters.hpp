#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StreamingSaveGameSystem

#include "Basic.hpp"

#include "StreamingSaveGameSystem_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function StreamingSaveGameSystem.SingleplayerGameInstance.CreateSaveDataForLevel
// 0x0010 (0x0010 - 0x0000)
struct SingleplayerGameInstance_CreateSaveDataForLevel final
{
public:
	class ULevel*                                 Level;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SingleplayerGameInstance_CreateSaveDataForLevel) == 0x000008, "Wrong alignment on SingleplayerGameInstance_CreateSaveDataForLevel");
static_assert(sizeof(SingleplayerGameInstance_CreateSaveDataForLevel) == 0x000010, "Wrong size on SingleplayerGameInstance_CreateSaveDataForLevel");
static_assert(offsetof(SingleplayerGameInstance_CreateSaveDataForLevel, Level) == 0x000000, "Member 'SingleplayerGameInstance_CreateSaveDataForLevel::Level' has a wrong offset!");
static_assert(offsetof(SingleplayerGameInstance_CreateSaveDataForLevel, ReturnValue) == 0x000008, "Member 'SingleplayerGameInstance_CreateSaveDataForLevel::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.SingleplayerGameInstance.GetGameSession
// 0x0008 (0x0008 - 0x0000)
struct SingleplayerGameInstance_GetGameSession final
{
public:
	class UStreamingSaveGameSession*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SingleplayerGameInstance_GetGameSession) == 0x000008, "Wrong alignment on SingleplayerGameInstance_GetGameSession");
static_assert(sizeof(SingleplayerGameInstance_GetGameSession) == 0x000008, "Wrong size on SingleplayerGameInstance_GetGameSession");
static_assert(offsetof(SingleplayerGameInstance_GetGameSession, ReturnValue) == 0x000000, "Member 'SingleplayerGameInstance_GetGameSession::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.SingleplayerGameInstance.InitializeLevelFromSaveData
// 0x0010 (0x0010 - 0x0000)
struct SingleplayerGameInstance_InitializeLevelFromSaveData final
{
public:
	class ULevel*                                 Level;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SingleplayerGameInstance_InitializeLevelFromSaveData) == 0x000008, "Wrong alignment on SingleplayerGameInstance_InitializeLevelFromSaveData");
static_assert(sizeof(SingleplayerGameInstance_InitializeLevelFromSaveData) == 0x000010, "Wrong size on SingleplayerGameInstance_InitializeLevelFromSaveData");
static_assert(offsetof(SingleplayerGameInstance_InitializeLevelFromSaveData, Level) == 0x000000, "Member 'SingleplayerGameInstance_InitializeLevelFromSaveData::Level' has a wrong offset!");
static_assert(offsetof(SingleplayerGameInstance_InitializeLevelFromSaveData, ReturnValue) == 0x000008, "Member 'SingleplayerGameInstance_InitializeLevelFromSaveData::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.SingleplayerGameInstance.OnControllerConnectionChange
// 0x0008 (0x0008 - 0x0000)
struct SingleplayerGameInstance_OnControllerConnectionChange final
{
public:
	bool                                          bIsConnected;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UserIndex;                                         // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SingleplayerGameInstance_OnControllerConnectionChange) == 0x000004, "Wrong alignment on SingleplayerGameInstance_OnControllerConnectionChange");
static_assert(sizeof(SingleplayerGameInstance_OnControllerConnectionChange) == 0x000008, "Wrong size on SingleplayerGameInstance_OnControllerConnectionChange");
static_assert(offsetof(SingleplayerGameInstance_OnControllerConnectionChange, bIsConnected) == 0x000000, "Member 'SingleplayerGameInstance_OnControllerConnectionChange::bIsConnected' has a wrong offset!");
static_assert(offsetof(SingleplayerGameInstance_OnControllerConnectionChange, UserIndex) == 0x000004, "Member 'SingleplayerGameInstance_OnControllerConnectionChange::UserIndex' has a wrong offset!");

// Function StreamingSaveGameSystem.SingleplayerGameInstance.OnFinishedLoadingLevel
// 0x0010 (0x0010 - 0x0000)
struct SingleplayerGameInstance_OnFinishedLoadingLevel final
{
public:
	class FString                                 MapName;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SingleplayerGameInstance_OnFinishedLoadingLevel) == 0x000008, "Wrong alignment on SingleplayerGameInstance_OnFinishedLoadingLevel");
static_assert(sizeof(SingleplayerGameInstance_OnFinishedLoadingLevel) == 0x000010, "Wrong size on SingleplayerGameInstance_OnFinishedLoadingLevel");
static_assert(offsetof(SingleplayerGameInstance_OnFinishedLoadingLevel, MapName) == 0x000000, "Member 'SingleplayerGameInstance_OnFinishedLoadingLevel::MapName' has a wrong offset!");

// Function StreamingSaveGameSystem.SingleplayerGameInstance.OnNewGameStarted
// 0x0001 (0x0001 - 0x0000)
struct SingleplayerGameInstance_OnNewGameStarted final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SingleplayerGameInstance_OnNewGameStarted) == 0x000001, "Wrong alignment on SingleplayerGameInstance_OnNewGameStarted");
static_assert(sizeof(SingleplayerGameInstance_OnNewGameStarted) == 0x000001, "Wrong size on SingleplayerGameInstance_OnNewGameStarted");
static_assert(offsetof(SingleplayerGameInstance_OnNewGameStarted, ReturnValue) == 0x000000, "Member 'SingleplayerGameInstance_OnNewGameStarted::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.SingleplayerGameInstance.OnOnlineConnectionStatusChange
// 0x0001 (0x0001 - 0x0000)
struct SingleplayerGameInstance_OnOnlineConnectionStatusChange final
{
public:
	bool                                          bIsConnected;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SingleplayerGameInstance_OnOnlineConnectionStatusChange) == 0x000001, "Wrong alignment on SingleplayerGameInstance_OnOnlineConnectionStatusChange");
static_assert(sizeof(SingleplayerGameInstance_OnOnlineConnectionStatusChange) == 0x000001, "Wrong size on SingleplayerGameInstance_OnOnlineConnectionStatusChange");
static_assert(offsetof(SingleplayerGameInstance_OnOnlineConnectionStatusChange, bIsConnected) == 0x000000, "Member 'SingleplayerGameInstance_OnOnlineConnectionStatusChange::bIsConnected' has a wrong offset!");

// Function StreamingSaveGameSystem.SingleplayerGameInstance.OnTick
// 0x0004 (0x0004 - 0x0000)
struct SingleplayerGameInstance_OnTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SingleplayerGameInstance_OnTick) == 0x000004, "Wrong alignment on SingleplayerGameInstance_OnTick");
static_assert(sizeof(SingleplayerGameInstance_OnTick) == 0x000004, "Wrong size on SingleplayerGameInstance_OnTick");
static_assert(offsetof(SingleplayerGameInstance_OnTick, DeltaSeconds) == 0x000000, "Member 'SingleplayerGameInstance_OnTick::DeltaSeconds' has a wrong offset!");

// Function StreamingSaveGameSystem.SingleplayerGameInstance.SetGameDefaultDifficulty
// 0x0004 (0x0004 - 0x0000)
struct SingleplayerGameInstance_SetGameDefaultDifficulty final
{
public:
	int32                                         DefaultDifficulty;                                 // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SingleplayerGameInstance_SetGameDefaultDifficulty) == 0x000004, "Wrong alignment on SingleplayerGameInstance_SetGameDefaultDifficulty");
static_assert(sizeof(SingleplayerGameInstance_SetGameDefaultDifficulty) == 0x000004, "Wrong size on SingleplayerGameInstance_SetGameDefaultDifficulty");
static_assert(offsetof(SingleplayerGameInstance_SetGameDefaultDifficulty, DefaultDifficulty) == 0x000000, "Member 'SingleplayerGameInstance_SetGameDefaultDifficulty::DefaultDifficulty' has a wrong offset!");

// Function StreamingSaveGameSystem.SingleplayerGameInstance.GetTotalPlayTimeSeconds
// 0x0004 (0x0004 - 0x0000)
struct SingleplayerGameInstance_GetTotalPlayTimeSeconds final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SingleplayerGameInstance_GetTotalPlayTimeSeconds) == 0x000004, "Wrong alignment on SingleplayerGameInstance_GetTotalPlayTimeSeconds");
static_assert(sizeof(SingleplayerGameInstance_GetTotalPlayTimeSeconds) == 0x000004, "Wrong size on SingleplayerGameInstance_GetTotalPlayTimeSeconds");
static_assert(offsetof(SingleplayerGameInstance_GetTotalPlayTimeSeconds, ReturnValue) == 0x000000, "Member 'SingleplayerGameInstance_GetTotalPlayTimeSeconds::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.SingleplayerGameInstance.IsInGame
// 0x0001 (0x0001 - 0x0000)
struct SingleplayerGameInstance_IsInGame final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SingleplayerGameInstance_IsInGame) == 0x000001, "Wrong alignment on SingleplayerGameInstance_IsInGame");
static_assert(sizeof(SingleplayerGameInstance_IsInGame) == 0x000001, "Wrong size on SingleplayerGameInstance_IsInGame");
static_assert(offsetof(SingleplayerGameInstance_IsInGame, ReturnValue) == 0x000000, "Member 'SingleplayerGameInstance_IsInGame::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.SingleplayerGameInstance.IsSavePendingAsyncCompletion
// 0x0018 (0x0018 - 0x0000)
struct SingleplayerGameInstance_IsSavePendingAsyncCompletion final
{
public:
	class FString                                 SaveName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(SingleplayerGameInstance_IsSavePendingAsyncCompletion) == 0x000008, "Wrong alignment on SingleplayerGameInstance_IsSavePendingAsyncCompletion");
static_assert(sizeof(SingleplayerGameInstance_IsSavePendingAsyncCompletion) == 0x000018, "Wrong size on SingleplayerGameInstance_IsSavePendingAsyncCompletion");
static_assert(offsetof(SingleplayerGameInstance_IsSavePendingAsyncCompletion, SaveName) == 0x000000, "Member 'SingleplayerGameInstance_IsSavePendingAsyncCompletion::SaveName' has a wrong offset!");
static_assert(offsetof(SingleplayerGameInstance_IsSavePendingAsyncCompletion, ReturnValue) == 0x000010, "Member 'SingleplayerGameInstance_IsSavePendingAsyncCompletion::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameActorInterface.ReceivePendingBodyTransforms
// 0x0020 (0x0020 - 0x0000)
struct StreamingSaveGameActorInterface_ReceivePendingBodyTransforms final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     BodyTransforms;                                    // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StreamingSaveGameActorInterface_ReceivePendingBodyTransforms) == 0x000008, "Wrong alignment on StreamingSaveGameActorInterface_ReceivePendingBodyTransforms");
static_assert(sizeof(StreamingSaveGameActorInterface_ReceivePendingBodyTransforms) == 0x000020, "Wrong size on StreamingSaveGameActorInterface_ReceivePendingBodyTransforms");
static_assert(offsetof(StreamingSaveGameActorInterface_ReceivePendingBodyTransforms, SkeletalMeshComponent) == 0x000000, "Member 'StreamingSaveGameActorInterface_ReceivePendingBodyTransforms::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameActorInterface_ReceivePendingBodyTransforms, BodyTransforms) == 0x000008, "Member 'StreamingSaveGameActorInterface_ReceivePendingBodyTransforms::BodyTransforms' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameActorInterface_ReceivePendingBodyTransforms, ReturnValue) == 0x000018, "Member 'StreamingSaveGameActorInterface_ReceivePendingBodyTransforms::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameActorInterface.ReceivePendingCharacterVelocity
// 0x0010 (0x0010 - 0x0000)
struct StreamingSaveGameActorInterface_ReceivePendingCharacterVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StreamingSaveGameActorInterface_ReceivePendingCharacterVelocity) == 0x000004, "Wrong alignment on StreamingSaveGameActorInterface_ReceivePendingCharacterVelocity");
static_assert(sizeof(StreamingSaveGameActorInterface_ReceivePendingCharacterVelocity) == 0x000010, "Wrong size on StreamingSaveGameActorInterface_ReceivePendingCharacterVelocity");
static_assert(offsetof(StreamingSaveGameActorInterface_ReceivePendingCharacterVelocity, Velocity) == 0x000000, "Member 'StreamingSaveGameActorInterface_ReceivePendingCharacterVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameActorInterface_ReceivePendingCharacterVelocity, ReturnValue) == 0x00000C, "Member 'StreamingSaveGameActorInterface_ReceivePendingCharacterVelocity::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameActorInterface.ShouldSaveActor
// 0x0020 (0x0020 - 0x0000)
struct StreamingSaveGameActorInterface_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StreamingSaveGameActorInterface_ShouldSaveActor) == 0x000008, "Wrong alignment on StreamingSaveGameActorInterface_ShouldSaveActor");
static_assert(sizeof(StreamingSaveGameActorInterface_ShouldSaveActor) == 0x000020, "Wrong size on StreamingSaveGameActorInterface_ShouldSaveActor");
static_assert(offsetof(StreamingSaveGameActorInterface_ShouldSaveActor, Params_0) == 0x000000, "Member 'StreamingSaveGameActorInterface_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameActorInterface_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'StreamingSaveGameActorInterface_ShouldSaveActor::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameComponentInterface.ShouldSaveComponent
// 0x0008 (0x0008 - 0x0000)
struct StreamingSaveGameComponentInterface_ShouldSaveComponent final
{
public:
	struct FStreamingSaveGameComponentParams      Params_0;                                          // 0x0000(0x0004)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StreamingSaveGameComponentInterface_ShouldSaveComponent) == 0x000004, "Wrong alignment on StreamingSaveGameComponentInterface_ShouldSaveComponent");
static_assert(sizeof(StreamingSaveGameComponentInterface_ShouldSaveComponent) == 0x000008, "Wrong size on StreamingSaveGameComponentInterface_ShouldSaveComponent");
static_assert(offsetof(StreamingSaveGameComponentInterface_ShouldSaveComponent, Params_0) == 0x000000, "Member 'StreamingSaveGameComponentInterface_ShouldSaveComponent::Params_0' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameComponentInterface_ShouldSaveComponent, ReturnValue) == 0x000004, "Member 'StreamingSaveGameComponentInterface_ShouldSaveComponent::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameFunctionLibrary.CreateGameProfile
// 0x0038 (0x0038 - 0x0000)
struct StreamingSaveGameFunctionLibrary_CreateGameProfile final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveName;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveCaption;                                       // 0x0018(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStreamingSaveGameProfile*              ReturnValue;                                       // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamingSaveGameFunctionLibrary_CreateGameProfile) == 0x000008, "Wrong alignment on StreamingSaveGameFunctionLibrary_CreateGameProfile");
static_assert(sizeof(StreamingSaveGameFunctionLibrary_CreateGameProfile) == 0x000038, "Wrong size on StreamingSaveGameFunctionLibrary_CreateGameProfile");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_CreateGameProfile, WorldContextObject) == 0x000000, "Member 'StreamingSaveGameFunctionLibrary_CreateGameProfile::WorldContextObject' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_CreateGameProfile, SaveName) == 0x000008, "Member 'StreamingSaveGameFunctionLibrary_CreateGameProfile::SaveName' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_CreateGameProfile, SaveCaption) == 0x000018, "Member 'StreamingSaveGameFunctionLibrary_CreateGameProfile::SaveCaption' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_CreateGameProfile, UserIndex) == 0x000028, "Member 'StreamingSaveGameFunctionLibrary_CreateGameProfile::UserIndex' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_CreateGameProfile, ReturnValue) == 0x000030, "Member 'StreamingSaveGameFunctionLibrary_CreateGameProfile::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameFunctionLibrary.DeleteSaveGameByName
// 0x0020 (0x0020 - 0x0000)
struct StreamingSaveGameFunctionLibrary_DeleteSaveGameByName final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveName;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StreamingSaveGameFunctionLibrary_DeleteSaveGameByName) == 0x000008, "Wrong alignment on StreamingSaveGameFunctionLibrary_DeleteSaveGameByName");
static_assert(sizeof(StreamingSaveGameFunctionLibrary_DeleteSaveGameByName) == 0x000020, "Wrong size on StreamingSaveGameFunctionLibrary_DeleteSaveGameByName");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_DeleteSaveGameByName, WorldContextObject) == 0x000000, "Member 'StreamingSaveGameFunctionLibrary_DeleteSaveGameByName::WorldContextObject' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_DeleteSaveGameByName, SaveName) == 0x000008, "Member 'StreamingSaveGameFunctionLibrary_DeleteSaveGameByName::SaveName' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_DeleteSaveGameByName, UserIndex) == 0x000018, "Member 'StreamingSaveGameFunctionLibrary_DeleteSaveGameByName::UserIndex' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_DeleteSaveGameByName, ReturnValue) == 0x00001C, "Member 'StreamingSaveGameFunctionLibrary_DeleteSaveGameByName::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameFunctionLibrary.GetExistingSaveGameNames
// 0x0030 (0x0030 - 0x0000)
struct StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames final
{
public:
	int32                                         UserIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 IgnoreSaveName;                                    // 0x0008(0x0010)(ConstParm, Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSort;                                             // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames) == 0x000008, "Wrong alignment on StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames");
static_assert(sizeof(StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames) == 0x000030, "Wrong size on StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames, UserIndex) == 0x000000, "Member 'StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames::UserIndex' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames, IgnoreSaveName) == 0x000008, "Member 'StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames::IgnoreSaveName' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames, bSort) == 0x000018, "Member 'StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames::bSort' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames, ReturnValue) == 0x000020, "Member 'StreamingSaveGameFunctionLibrary_GetExistingSaveGameNames::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameFunctionLibrary.GetPlayTimeInSeconds
// 0x0010 (0x0010 - 0x0000)
struct StreamingSaveGameFunctionLibrary_GetPlayTimeInSeconds final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StreamingSaveGameFunctionLibrary_GetPlayTimeInSeconds) == 0x000008, "Wrong alignment on StreamingSaveGameFunctionLibrary_GetPlayTimeInSeconds");
static_assert(sizeof(StreamingSaveGameFunctionLibrary_GetPlayTimeInSeconds) == 0x000010, "Wrong size on StreamingSaveGameFunctionLibrary_GetPlayTimeInSeconds");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_GetPlayTimeInSeconds, WorldContextObject) == 0x000000, "Member 'StreamingSaveGameFunctionLibrary_GetPlayTimeInSeconds::WorldContextObject' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_GetPlayTimeInSeconds, ReturnValue) == 0x000008, "Member 'StreamingSaveGameFunctionLibrary_GetPlayTimeInSeconds::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameFunctionLibrary.IsValidSaveName
// 0x0018 (0x0018 - 0x0000)
struct StreamingSaveGameFunctionLibrary_IsValidSaveName final
{
public:
	class FString                                 SaveName;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StreamingSaveGameFunctionLibrary_IsValidSaveName) == 0x000008, "Wrong alignment on StreamingSaveGameFunctionLibrary_IsValidSaveName");
static_assert(sizeof(StreamingSaveGameFunctionLibrary_IsValidSaveName) == 0x000018, "Wrong size on StreamingSaveGameFunctionLibrary_IsValidSaveName");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_IsValidSaveName, SaveName) == 0x000000, "Member 'StreamingSaveGameFunctionLibrary_IsValidSaveName::SaveName' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_IsValidSaveName, UserIndex) == 0x000010, "Member 'StreamingSaveGameFunctionLibrary_IsValidSaveName::UserIndex' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_IsValidSaveName, ReturnValue) == 0x000014, "Member 'StreamingSaveGameFunctionLibrary_IsValidSaveName::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameFunctionLibrary.LoadGameProfile
// 0x0028 (0x0028 - 0x0000)
struct StreamingSaveGameFunctionLibrary_LoadGameProfile final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveName;                                          // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStreamingSaveGameProfile*              ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamingSaveGameFunctionLibrary_LoadGameProfile) == 0x000008, "Wrong alignment on StreamingSaveGameFunctionLibrary_LoadGameProfile");
static_assert(sizeof(StreamingSaveGameFunctionLibrary_LoadGameProfile) == 0x000028, "Wrong size on StreamingSaveGameFunctionLibrary_LoadGameProfile");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_LoadGameProfile, WorldContextObject) == 0x000000, "Member 'StreamingSaveGameFunctionLibrary_LoadGameProfile::WorldContextObject' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_LoadGameProfile, SaveName) == 0x000008, "Member 'StreamingSaveGameFunctionLibrary_LoadGameProfile::SaveName' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_LoadGameProfile, UserIndex) == 0x000018, "Member 'StreamingSaveGameFunctionLibrary_LoadGameProfile::UserIndex' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameFunctionLibrary_LoadGameProfile, ReturnValue) == 0x000020, "Member 'StreamingSaveGameFunctionLibrary_LoadGameProfile::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameProfile.SetDifficulty
// 0x0004 (0x0004 - 0x0000)
struct StreamingSaveGameProfile_SetDifficulty final
{
public:
	int32                                         NewDifficulty;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamingSaveGameProfile_SetDifficulty) == 0x000004, "Wrong alignment on StreamingSaveGameProfile_SetDifficulty");
static_assert(sizeof(StreamingSaveGameProfile_SetDifficulty) == 0x000004, "Wrong size on StreamingSaveGameProfile_SetDifficulty");
static_assert(offsetof(StreamingSaveGameProfile_SetDifficulty, NewDifficulty) == 0x000000, "Member 'StreamingSaveGameProfile_SetDifficulty::NewDifficulty' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameProfile.SetIconFromImage
// 0x0008 (0x0008 - 0x0000)
struct StreamingSaveGameProfile_SetIconFromImage final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamingSaveGameProfile_SetIconFromImage) == 0x000008, "Wrong alignment on StreamingSaveGameProfile_SetIconFromImage");
static_assert(sizeof(StreamingSaveGameProfile_SetIconFromImage) == 0x000008, "Wrong size on StreamingSaveGameProfile_SetIconFromImage");
static_assert(offsetof(StreamingSaveGameProfile_SetIconFromImage, Image) == 0x000000, "Member 'StreamingSaveGameProfile_SetIconFromImage::Image' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameProfile.SetIconFromRenderTarget
// 0x0008 (0x0008 - 0x0000)
struct StreamingSaveGameProfile_SetIconFromRenderTarget final
{
public:
	class UTextureRenderTarget2D*                 TextureRenderTarget;                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamingSaveGameProfile_SetIconFromRenderTarget) == 0x000008, "Wrong alignment on StreamingSaveGameProfile_SetIconFromRenderTarget");
static_assert(sizeof(StreamingSaveGameProfile_SetIconFromRenderTarget) == 0x000008, "Wrong size on StreamingSaveGameProfile_SetIconFromRenderTarget");
static_assert(offsetof(StreamingSaveGameProfile_SetIconFromRenderTarget, TextureRenderTarget) == 0x000000, "Member 'StreamingSaveGameProfile_SetIconFromRenderTarget::TextureRenderTarget' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameProfile.SetSubLevelName
// 0x0008 (0x0008 - 0x0000)
struct StreamingSaveGameProfile_SetSubLevelName final
{
public:
	class FName                                   LevelName;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamingSaveGameProfile_SetSubLevelName) == 0x000004, "Wrong alignment on StreamingSaveGameProfile_SetSubLevelName");
static_assert(sizeof(StreamingSaveGameProfile_SetSubLevelName) == 0x000008, "Wrong size on StreamingSaveGameProfile_SetSubLevelName");
static_assert(offsetof(StreamingSaveGameProfile_SetSubLevelName, LevelName) == 0x000000, "Member 'StreamingSaveGameProfile_SetSubLevelName::LevelName' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameProfile.IsValidProfile
// 0x0001 (0x0001 - 0x0000)
struct StreamingSaveGameProfile_IsValidProfile final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(StreamingSaveGameProfile_IsValidProfile) == 0x000001, "Wrong alignment on StreamingSaveGameProfile_IsValidProfile");
static_assert(sizeof(StreamingSaveGameProfile_IsValidProfile) == 0x000001, "Wrong size on StreamingSaveGameProfile_IsValidProfile");
static_assert(offsetof(StreamingSaveGameProfile_IsValidProfile, ReturnValue) == 0x000000, "Member 'StreamingSaveGameProfile_IsValidProfile::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameSession.AsyncSaveGame
// 0x0028 (0x0028 - 0x0000)
struct StreamingSaveGameSession_AsyncSaveGame final
{
public:
	class FString                                 InSaveName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InSaveCaption;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StreamingSaveGameSession_AsyncSaveGame) == 0x000008, "Wrong alignment on StreamingSaveGameSession_AsyncSaveGame");
static_assert(sizeof(StreamingSaveGameSession_AsyncSaveGame) == 0x000028, "Wrong size on StreamingSaveGameSession_AsyncSaveGame");
static_assert(offsetof(StreamingSaveGameSession_AsyncSaveGame, InSaveName) == 0x000000, "Member 'StreamingSaveGameSession_AsyncSaveGame::InSaveName' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameSession_AsyncSaveGame, InSaveCaption) == 0x000010, "Member 'StreamingSaveGameSession_AsyncSaveGame::InSaveCaption' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameSession_AsyncSaveGame, UserIndex) == 0x000020, "Member 'StreamingSaveGameSession_AsyncSaveGame::UserIndex' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameSession_AsyncSaveGame, ReturnValue) == 0x000024, "Member 'StreamingSaveGameSession_AsyncSaveGame::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameSession.AsyncSaveGameWithEvent
// 0x0038 (0x0038 - 0x0000)
struct StreamingSaveGameSession_AsyncSaveGameWithEvent final
{
public:
	class FString                                 InSaveName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 InSaveCaption;                                     // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(const class FString& SaveName, int32 UserIndex, bool bSuccess)> SavedDelegate;                                     // 0x0024(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StreamingSaveGameSession_AsyncSaveGameWithEvent) == 0x000008, "Wrong alignment on StreamingSaveGameSession_AsyncSaveGameWithEvent");
static_assert(sizeof(StreamingSaveGameSession_AsyncSaveGameWithEvent) == 0x000038, "Wrong size on StreamingSaveGameSession_AsyncSaveGameWithEvent");
static_assert(offsetof(StreamingSaveGameSession_AsyncSaveGameWithEvent, InSaveName) == 0x000000, "Member 'StreamingSaveGameSession_AsyncSaveGameWithEvent::InSaveName' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameSession_AsyncSaveGameWithEvent, InSaveCaption) == 0x000010, "Member 'StreamingSaveGameSession_AsyncSaveGameWithEvent::InSaveCaption' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameSession_AsyncSaveGameWithEvent, UserIndex) == 0x000020, "Member 'StreamingSaveGameSession_AsyncSaveGameWithEvent::UserIndex' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameSession_AsyncSaveGameWithEvent, SavedDelegate) == 0x000024, "Member 'StreamingSaveGameSession_AsyncSaveGameWithEvent::SavedDelegate' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameSession_AsyncSaveGameWithEvent, ReturnValue) == 0x000034, "Member 'StreamingSaveGameSession_AsyncSaveGameWithEvent::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameSession.LoadGame
// 0x0018 (0x0018 - 0x0000)
struct StreamingSaveGameSession_LoadGame final
{
public:
	class FString                                 InSaveName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StreamingSaveGameSession_LoadGame) == 0x000008, "Wrong alignment on StreamingSaveGameSession_LoadGame");
static_assert(sizeof(StreamingSaveGameSession_LoadGame) == 0x000018, "Wrong size on StreamingSaveGameSession_LoadGame");
static_assert(offsetof(StreamingSaveGameSession_LoadGame, InSaveName) == 0x000000, "Member 'StreamingSaveGameSession_LoadGame::InSaveName' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameSession_LoadGame, UserIndex) == 0x000010, "Member 'StreamingSaveGameSession_LoadGame::UserIndex' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameSession_LoadGame, ReturnValue) == 0x000014, "Member 'StreamingSaveGameSession_LoadGame::ReturnValue' has a wrong offset!");

// Function StreamingSaveGameSystem.StreamingSaveGameSession.LoadGameWithEvent
// 0x0028 (0x0028 - 0x0000)
struct StreamingSaveGameSession_LoadGameWithEvent final
{
public:
	class FString                                 InSaveName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UserIndex;                                         // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void()>                             PreMapMoveEvent;                                   // 0x0014(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(StreamingSaveGameSession_LoadGameWithEvent) == 0x000008, "Wrong alignment on StreamingSaveGameSession_LoadGameWithEvent");
static_assert(sizeof(StreamingSaveGameSession_LoadGameWithEvent) == 0x000028, "Wrong size on StreamingSaveGameSession_LoadGameWithEvent");
static_assert(offsetof(StreamingSaveGameSession_LoadGameWithEvent, InSaveName) == 0x000000, "Member 'StreamingSaveGameSession_LoadGameWithEvent::InSaveName' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameSession_LoadGameWithEvent, UserIndex) == 0x000010, "Member 'StreamingSaveGameSession_LoadGameWithEvent::UserIndex' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameSession_LoadGameWithEvent, PreMapMoveEvent) == 0x000014, "Member 'StreamingSaveGameSession_LoadGameWithEvent::PreMapMoveEvent' has a wrong offset!");
static_assert(offsetof(StreamingSaveGameSession_LoadGameWithEvent, ReturnValue) == 0x000024, "Member 'StreamingSaveGameSession_LoadGameWithEvent::ReturnValue' has a wrong offset!");

}


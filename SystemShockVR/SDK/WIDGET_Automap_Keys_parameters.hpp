#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Automap_Keys

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_Automap_Keys.WIDGET_Automap_Keys_C.ExecuteUbergraph_WIDGET_Automap_Keys
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_Automap_Keys_C_ExecuteUbergraph_WIDGET_Automap_Keys final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Automap_Keys_C_ExecuteUbergraph_WIDGET_Automap_Keys) == 0x000004, "Wrong alignment on WIDGET_Automap_Keys_C_ExecuteUbergraph_WIDGET_Automap_Keys");
static_assert(sizeof(WIDGET_Automap_Keys_C_ExecuteUbergraph_WIDGET_Automap_Keys) == 0x000008, "Wrong size on WIDGET_Automap_Keys_C_ExecuteUbergraph_WIDGET_Automap_Keys");
static_assert(offsetof(WIDGET_Automap_Keys_C_ExecuteUbergraph_WIDGET_Automap_Keys, EntryPoint) == 0x000000, "Member 'WIDGET_Automap_Keys_C_ExecuteUbergraph_WIDGET_Automap_Keys::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_ExecuteUbergraph_WIDGET_Automap_Keys, CallFunc_GetMeshUIColor_Color) == 0x000004, "Member 'WIDGET_Automap_Keys_C_ExecuteUbergraph_WIDGET_Automap_Keys::CallFunc_GetMeshUIColor_Color' has a wrong offset!");

// Function WIDGET_Automap_Keys.WIDGET_Automap_Keys_C.SetKeysVisible
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_Automap_Keys_C_SetKeysVisible final
{
public:
	bool                                          Visibility_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITEM_Base_C*>                   CallFunc_GetKeyItems_KeyItems;                     // 0x0010(0x0010)(ReferenceParm)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UInventoryBag_C* Bag, int32 SlotIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_Automap_KeyElement_C*           CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Automap_Keys_C_SetKeysVisible) == 0x000008, "Wrong alignment on WIDGET_Automap_Keys_C_SetKeysVisible");
static_assert(sizeof(WIDGET_Automap_Keys_C_SetKeysVisible) == 0x000070, "Wrong size on WIDGET_Automap_Keys_C_SetKeysVisible");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, Visibility_0) == 0x000000, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::Visibility_0' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, CallFunc_GetKeyItems_KeyItems) == 0x000010, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::CallFunc_GetKeyItems_KeyItems' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, CallFunc_Array_Get_Item) == 0x000028, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000030, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, K2Node_CreateDelegate_OutputDelegate) == 0x000044, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, CallFunc_Create_ReturnValue) == 0x000060, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_SetKeysVisible, CallFunc_AddChild_ReturnValue) == 0x000068, "Member 'WIDGET_Automap_Keys_C_SetKeysVisible::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WIDGET_Automap_Keys.WIDGET_Automap_Keys_C.UpdateKeysVisiblity
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_Automap_Keys_C_UpdateKeysVisiblity final
{
public:
	class APAWN_Hacker_Simple_C*                  Hacker;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyKeyItems_Result;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UInventoryBag_C* Bag, int32 SlotIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Automap_Keys_C_UpdateKeysVisiblity) == 0x000008, "Wrong alignment on WIDGET_Automap_Keys_C_UpdateKeysVisiblity");
static_assert(sizeof(WIDGET_Automap_Keys_C_UpdateKeysVisiblity) == 0x000038, "Wrong size on WIDGET_Automap_Keys_C_UpdateKeysVisiblity");
static_assert(offsetof(WIDGET_Automap_Keys_C_UpdateKeysVisiblity, Hacker) == 0x000000, "Member 'WIDGET_Automap_Keys_C_UpdateKeysVisiblity::Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_UpdateKeysVisiblity, CallFunc_HasAnyKeyItems_Result) == 0x000008, "Member 'WIDGET_Automap_Keys_C_UpdateKeysVisiblity::CallFunc_HasAnyKeyItems_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_UpdateKeysVisiblity, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WIDGET_Automap_Keys_C_UpdateKeysVisiblity::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_UpdateKeysVisiblity, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'WIDGET_Automap_Keys_C_UpdateKeysVisiblity::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_UpdateKeysVisiblity, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000028, "Member 'WIDGET_Automap_Keys_C_UpdateKeysVisiblity::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_UpdateKeysVisiblity, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WIDGET_Automap_Keys_C_UpdateKeysVisiblity::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_Automap_Keys.WIDGET_Automap_Keys_C.EVENT_OnBagChanged
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_Automap_Keys_C_EVENT_OnBagChanged final
{
public:
	class UInventoryBag_C*                        Bag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           SlottedItem;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSlotItemType_Result;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Automap_Keys_C_EVENT_OnBagChanged) == 0x000008, "Wrong alignment on WIDGET_Automap_Keys_C_EVENT_OnBagChanged");
static_assert(sizeof(WIDGET_Automap_Keys_C_EVENT_OnBagChanged) == 0x000020, "Wrong size on WIDGET_Automap_Keys_C_EVENT_OnBagChanged");
static_assert(offsetof(WIDGET_Automap_Keys_C_EVENT_OnBagChanged, Bag) == 0x000000, "Member 'WIDGET_Automap_Keys_C_EVENT_OnBagChanged::Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_EVENT_OnBagChanged, SlotIndex) == 0x000008, "Member 'WIDGET_Automap_Keys_C_EVENT_OnBagChanged::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_EVENT_OnBagChanged, SlottedItem) == 0x000010, "Member 'WIDGET_Automap_Keys_C_EVENT_OnBagChanged::SlottedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_EVENT_OnBagChanged, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WIDGET_Automap_Keys_C_EVENT_OnBagChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_EVENT_OnBagChanged, CallFunc_CanSlotItemType_Result) == 0x000019, "Member 'WIDGET_Automap_Keys_C_EVENT_OnBagChanged::CallFunc_CanSlotItemType_Result' has a wrong offset!");

// Function WIDGET_Automap_Keys.WIDGET_Automap_Keys_C.GetKeyItems
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_Automap_Keys_C_GetKeyItems final
{
public:
	TArray<class UITEM_Base_C*>                   KeyItems;                                          // 0x0000(0x0010)(Parm, OutParm)
	class APAWN_Hacker_Simple_C*                  Hacker;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITEM_Base_C*>                   CallFunc_GetItemArray_Items;                       // 0x0038(0x0010)(ReferenceParm)
};
static_assert(alignof(WIDGET_Automap_Keys_C_GetKeyItems) == 0x000008, "Wrong alignment on WIDGET_Automap_Keys_C_GetKeyItems");
static_assert(sizeof(WIDGET_Automap_Keys_C_GetKeyItems) == 0x000048, "Wrong size on WIDGET_Automap_Keys_C_GetKeyItems");
static_assert(offsetof(WIDGET_Automap_Keys_C_GetKeyItems, KeyItems) == 0x000000, "Member 'WIDGET_Automap_Keys_C_GetKeyItems::KeyItems' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_GetKeyItems, Hacker) == 0x000010, "Member 'WIDGET_Automap_Keys_C_GetKeyItems::Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_GetKeyItems, CallFunc_GetPlayerPawn_ReturnValue) == 0x000018, "Member 'WIDGET_Automap_Keys_C_GetKeyItems::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_GetKeyItems, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000020, "Member 'WIDGET_Automap_Keys_C_GetKeyItems::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_GetKeyItems, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_Automap_Keys_C_GetKeyItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_GetKeyItems, CallFunc_GetBagByType_Bag) == 0x000030, "Member 'WIDGET_Automap_Keys_C_GetKeyItems::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_GetKeyItems, CallFunc_GetItemArray_Items) == 0x000038, "Member 'WIDGET_Automap_Keys_C_GetKeyItems::CallFunc_GetItemArray_Items' has a wrong offset!");

// Function WIDGET_Automap_Keys.WIDGET_Automap_Keys_C.HasAnyKeyItems
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_Automap_Keys_C_HasAnyKeyItems final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  Hacker;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITEM_Base_C*>                   CallFunc_GetItemArray_Items;                       // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Automap_Keys_C_HasAnyKeyItems) == 0x000008, "Wrong alignment on WIDGET_Automap_Keys_C_HasAnyKeyItems");
static_assert(sizeof(WIDGET_Automap_Keys_C_HasAnyKeyItems) == 0x000048, "Wrong size on WIDGET_Automap_Keys_C_HasAnyKeyItems");
static_assert(offsetof(WIDGET_Automap_Keys_C_HasAnyKeyItems, Result) == 0x000000, "Member 'WIDGET_Automap_Keys_C_HasAnyKeyItems::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_HasAnyKeyItems, Hacker) == 0x000008, "Member 'WIDGET_Automap_Keys_C_HasAnyKeyItems::Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_HasAnyKeyItems, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'WIDGET_Automap_Keys_C_HasAnyKeyItems::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_HasAnyKeyItems, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000018, "Member 'WIDGET_Automap_Keys_C_HasAnyKeyItems::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_HasAnyKeyItems, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WIDGET_Automap_Keys_C_HasAnyKeyItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_HasAnyKeyItems, CallFunc_GetBagByType_Bag) == 0x000028, "Member 'WIDGET_Automap_Keys_C_HasAnyKeyItems::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_HasAnyKeyItems, CallFunc_GetItemArray_Items) == 0x000030, "Member 'WIDGET_Automap_Keys_C_HasAnyKeyItems::CallFunc_GetItemArray_Items' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_HasAnyKeyItems, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WIDGET_Automap_Keys_C_HasAnyKeyItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_Keys_C_HasAnyKeyItems, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'WIDGET_Automap_Keys_C_HasAnyKeyItems::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}


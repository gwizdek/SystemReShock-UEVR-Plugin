#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EnemySpawnpoint

#include "Basic.hpp"

#include "EnemySpawnpoint_classes.hpp"
#include "EnemySpawnpoint_parameters.hpp"


namespace SDK
{

// Function EnemySpawnpoint.EnemySpawnPoint_C.SpawnEnemy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Enemy_C*                    Enemy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEnemySpawnPoint_C::SpawnEnemy(class APAWN_Enemy_C** Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySpawnPoint_C", "SpawnEnemy");

	Params::EnemySpawnPoint_C_SpawnEnemy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enemy != nullptr)
		*Enemy = Parms.Enemy;
}


// Function EnemySpawnpoint.EnemySpawnPoint_C.SpawnEnemyFromClass
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           EnemyClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APAWN_Enemy_C*                    Enemy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEnemySpawnPoint_C::SpawnEnemyFromClass(class UClass* EnemyClass, class APAWN_Enemy_C** Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySpawnPoint_C", "SpawnEnemyFromClass");

	Params::EnemySpawnPoint_C_SpawnEnemyFromClass Parms{};

	Parms.EnemyClass = EnemyClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Enemy != nullptr)
		*Enemy = Parms.Enemy;
}


// Function EnemySpawnpoint.EnemySpawnPoint_C.SpawnEnemyFromTypes
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTRUCT_EnemyClassWeight> ChosenEnemyTypes                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class APAWN_Enemy_C*                    Enemy                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEnemySpawnPoint_C::SpawnEnemyFromTypes(TArray<struct FSTRUCT_EnemyClassWeight>& ChosenEnemyTypes, class APAWN_Enemy_C** Enemy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySpawnPoint_C", "SpawnEnemyFromTypes");

	Params::EnemySpawnPoint_C_SpawnEnemyFromTypes Parms{};

	Parms.ChosenEnemyTypes = std::move(ChosenEnemyTypes);

	UObject::ProcessEvent(Func, &Parms);

	ChosenEnemyTypes = std::move(Parms.ChosenEnemyTypes);

	if (Enemy != nullptr)
		*Enemy = Parms.Enemy;
}


// Function EnemySpawnpoint.EnemySpawnPoint_C.CanSpawnEnemies
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AEnemySpawnPoint_C::CanSpawnEnemies(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySpawnPoint_C", "CanSpawnEnemies");

	Params::EnemySpawnPoint_C_CanSpawnEnemies Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function EnemySpawnpoint.EnemySpawnPoint_C.GetRandomEnemyIndex
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FSTRUCT_EnemyClassWeight> ChosenEnemyTypes                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// int32                                   EnemyIndex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEnemySpawnPoint_C::GetRandomEnemyIndex(TArray<struct FSTRUCT_EnemyClassWeight>& ChosenEnemyTypes, int32* EnemyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySpawnPoint_C", "GetRandomEnemyIndex");

	Params::EnemySpawnPoint_C_GetRandomEnemyIndex Parms{};

	Parms.ChosenEnemyTypes = std::move(ChosenEnemyTypes);

	UObject::ProcessEvent(Func, &Parms);

	ChosenEnemyTypes = std::move(Parms.ChosenEnemyTypes);

	if (EnemyIndex != nullptr)
		*EnemyIndex = Parms.EnemyIndex;
}


// Function EnemySpawnpoint.EnemySpawnPoint_C.GetSpawnedEnemyName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           EnemyClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             EnemyName                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AEnemySpawnPoint_C::GetSpawnedEnemyName(class UClass* EnemyClass, class FName* EnemyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EnemySpawnPoint_C", "GetSpawnedEnemyName");

	Params::EnemySpawnPoint_C_GetSpawnedEnemyName Parms{};

	Parms.EnemyClass = EnemyClass;

	UObject::ProcessEvent(Func, &Parms);

	if (EnemyName != nullptr)
		*EnemyName = Parms.EnemyName;
}

}


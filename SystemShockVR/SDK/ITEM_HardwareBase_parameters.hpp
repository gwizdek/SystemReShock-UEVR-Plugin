#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_HardwareBase

#include "Basic.hpp"

#include "AttributeSystem_structs.hpp"
#include "STRUCT_HardwareFeature_structs.hpp"


namespace SDK::Params
{

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.OnHardwareStateChanged__DelegateSignature
// 0x0002 (0x0002 - 0x0000)
struct ITEM_HardwareBase_C_OnHardwareStateChanged__DelegateSignature final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MagLocked;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_OnHardwareStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on ITEM_HardwareBase_C_OnHardwareStateChanged__DelegateSignature");
static_assert(sizeof(ITEM_HardwareBase_C_OnHardwareStateChanged__DelegateSignature) == 0x000002, "Wrong size on ITEM_HardwareBase_C_OnHardwareStateChanged__DelegateSignature");
static_assert(offsetof(ITEM_HardwareBase_C_OnHardwareStateChanged__DelegateSignature, Activated) == 0x000000, "Member 'ITEM_HardwareBase_C_OnHardwareStateChanged__DelegateSignature::Activated' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_OnHardwareStateChanged__DelegateSignature, MagLocked) == 0x000001, "Member 'ITEM_HardwareBase_C_OnHardwareStateChanged__DelegateSignature::MagLocked' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.ExecuteUbergraph_ITEM_HardwareBase
// 0x0008 (0x0008 - 0x0000)
struct ITEM_HardwareBase_C_ExecuteUbergraph_ITEM_HardwareBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateHardwareState_Result;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_ExecuteUbergraph_ITEM_HardwareBase) == 0x000004, "Wrong alignment on ITEM_HardwareBase_C_ExecuteUbergraph_ITEM_HardwareBase");
static_assert(sizeof(ITEM_HardwareBase_C_ExecuteUbergraph_ITEM_HardwareBase) == 0x000008, "Wrong size on ITEM_HardwareBase_C_ExecuteUbergraph_ITEM_HardwareBase");
static_assert(offsetof(ITEM_HardwareBase_C_ExecuteUbergraph_ITEM_HardwareBase, EntryPoint) == 0x000000, "Member 'ITEM_HardwareBase_C_ExecuteUbergraph_ITEM_HardwareBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ExecuteUbergraph_ITEM_HardwareBase, CallFunc_UpdateHardwareState_Result) == 0x000004, "Member 'ITEM_HardwareBase_C_ExecuteUbergraph_ITEM_HardwareBase::CallFunc_UpdateHardwareState_Result' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.CanActivateHardware
// 0x0001 (0x0001 - 0x0000)
struct ITEM_HardwareBase_C_CanActivateHardware final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_CanActivateHardware) == 0x000001, "Wrong alignment on ITEM_HardwareBase_C_CanActivateHardware");
static_assert(sizeof(ITEM_HardwareBase_C_CanActivateHardware) == 0x000001, "Wrong size on ITEM_HardwareBase_C_CanActivateHardware");
static_assert(offsetof(ITEM_HardwareBase_C_CanActivateHardware, Result) == 0x000000, "Member 'ITEM_HardwareBase_C_CanActivateHardware::Result' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.GetHardwareFeatures
// 0x0010 (0x0010 - 0x0000)
struct ITEM_HardwareBase_C_GetHardwareFeatures final
{
public:
	TArray<struct FSTRUCT_HardwareFeature>        Result;                                            // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(ITEM_HardwareBase_C_GetHardwareFeatures) == 0x000008, "Wrong alignment on ITEM_HardwareBase_C_GetHardwareFeatures");
static_assert(sizeof(ITEM_HardwareBase_C_GetHardwareFeatures) == 0x000010, "Wrong size on ITEM_HardwareBase_C_GetHardwareFeatures");
static_assert(offsetof(ITEM_HardwareBase_C_GetHardwareFeatures, Result) == 0x000000, "Member 'ITEM_HardwareBase_C_GetHardwareFeatures::Result' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.IsHardwareMagneticallyDisabled
// 0x0001 (0x0001 - 0x0000)
struct ITEM_HardwareBase_C_IsHardwareMagneticallyDisabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_IsHardwareMagneticallyDisabled) == 0x000001, "Wrong alignment on ITEM_HardwareBase_C_IsHardwareMagneticallyDisabled");
static_assert(sizeof(ITEM_HardwareBase_C_IsHardwareMagneticallyDisabled) == 0x000001, "Wrong size on ITEM_HardwareBase_C_IsHardwareMagneticallyDisabled");
static_assert(offsetof(ITEM_HardwareBase_C_IsHardwareMagneticallyDisabled, Result) == 0x000000, "Member 'ITEM_HardwareBase_C_IsHardwareMagneticallyDisabled::Result' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.IsMaxHardwareVersion
// 0x0040 (0x0040 - 0x0000)
struct ITEM_HardwareBase_C_IsMaxHardwareVersion final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftClassReference_ReturnValue;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0010(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_IsMaxHardwareVersion) == 0x000008, "Wrong alignment on ITEM_HardwareBase_C_IsMaxHardwareVersion");
static_assert(sizeof(ITEM_HardwareBase_C_IsMaxHardwareVersion) == 0x000040, "Wrong size on ITEM_HardwareBase_C_IsMaxHardwareVersion");
static_assert(offsetof(ITEM_HardwareBase_C_IsMaxHardwareVersion, Result) == 0x000000, "Member 'ITEM_HardwareBase_C_IsMaxHardwareVersion::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_IsMaxHardwareVersion, CallFunc_IsValidSoftClassReference_ReturnValue) == 0x000001, "Member 'ITEM_HardwareBase_C_IsMaxHardwareVersion::CallFunc_IsValidSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_IsMaxHardwareVersion, CallFunc_GetObjectClass_ReturnValue) == 0x000008, "Member 'ITEM_HardwareBase_C_IsMaxHardwareVersion::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_IsMaxHardwareVersion, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000010, "Member 'ITEM_HardwareBase_C_IsMaxHardwareVersion::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_IsMaxHardwareVersion, CallFunc_EqualEqual_SoftClassReference_ReturnValue) == 0x000038, "Member 'ITEM_HardwareBase_C_IsMaxHardwareVersion::CallFunc_EqualEqual_SoftClassReference_ReturnValue' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.ComputeJpmFromTickRate
// 0x0010 (0x0010 - 0x0000)
struct ITEM_HardwareBase_C_ComputeJpmFromTickRate final
{
public:
	float                                         TickRate;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_HardwareBase_C_ComputeJpmFromTickRate) == 0x000004, "Wrong alignment on ITEM_HardwareBase_C_ComputeJpmFromTickRate");
static_assert(sizeof(ITEM_HardwareBase_C_ComputeJpmFromTickRate) == 0x000010, "Wrong size on ITEM_HardwareBase_C_ComputeJpmFromTickRate");
static_assert(offsetof(ITEM_HardwareBase_C_ComputeJpmFromTickRate, TickRate) == 0x000000, "Member 'ITEM_HardwareBase_C_ComputeJpmFromTickRate::TickRate' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ComputeJpmFromTickRate, Result) == 0x000004, "Member 'ITEM_HardwareBase_C_ComputeJpmFromTickRate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ComputeJpmFromTickRate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'ITEM_HardwareBase_C_ComputeJpmFromTickRate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ComputeJpmFromTickRate, CallFunc_Round_ReturnValue) == 0x00000C, "Member 'ITEM_HardwareBase_C_ComputeJpmFromTickRate::CallFunc_Round_ReturnValue' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.ActivateHardware
// 0x0009 (0x0009 - 0x0000)
struct ITEM_HardwareBase_C_ActivateHardware final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateHardwareState_Result;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanActivateHardware_Result;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_ActivateHardware) == 0x000001, "Wrong alignment on ITEM_HardwareBase_C_ActivateHardware");
static_assert(sizeof(ITEM_HardwareBase_C_ActivateHardware) == 0x000009, "Wrong size on ITEM_HardwareBase_C_ActivateHardware");
static_assert(offsetof(ITEM_HardwareBase_C_ActivateHardware, Active) == 0x000000, "Member 'ITEM_HardwareBase_C_ActivateHardware::Active' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ActivateHardware, Result) == 0x000001, "Member 'ITEM_HardwareBase_C_ActivateHardware::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ActivateHardware, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ITEM_HardwareBase_C_ActivateHardware::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ActivateHardware, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'ITEM_HardwareBase_C_ActivateHardware::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ActivateHardware, CallFunc_UpdateHardwareState_Result) == 0x000004, "Member 'ITEM_HardwareBase_C_ActivateHardware::CallFunc_UpdateHardwareState_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ActivateHardware, CallFunc_CanActivateHardware_Result) == 0x000005, "Member 'ITEM_HardwareBase_C_ActivateHardware::CallFunc_CanActivateHardware_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ActivateHardware, CallFunc_Not_PreBool_ReturnValue_1) == 0x000006, "Member 'ITEM_HardwareBase_C_ActivateHardware::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ActivateHardware, CallFunc_BooleanOR_ReturnValue) == 0x000007, "Member 'ITEM_HardwareBase_C_ActivateHardware::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ActivateHardware, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000008, "Member 'ITEM_HardwareBase_C_ActivateHardware::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.ToggleHardware
// 0x0003 (0x0003 - 0x0000)
struct ITEM_HardwareBase_C_ToggleHardware final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Deactivate_Result;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Activate_Result;                          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_ToggleHardware) == 0x000001, "Wrong alignment on ITEM_HardwareBase_C_ToggleHardware");
static_assert(sizeof(ITEM_HardwareBase_C_ToggleHardware) == 0x000003, "Wrong size on ITEM_HardwareBase_C_ToggleHardware");
static_assert(offsetof(ITEM_HardwareBase_C_ToggleHardware, State) == 0x000000, "Member 'ITEM_HardwareBase_C_ToggleHardware::State' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ToggleHardware, CallFunc_Deactivate_Result) == 0x000001, "Member 'ITEM_HardwareBase_C_ToggleHardware::CallFunc_Deactivate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ToggleHardware, CallFunc_Activate_Result) == 0x000002, "Member 'ITEM_HardwareBase_C_ToggleHardware::CallFunc_Activate_Result' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.UpdateHardwareState
// 0x0010 (0x0010 - 0x0000)
struct ITEM_HardwareBase_C_UpdateHardwareState final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_HardwareBase_C_UpdateHardwareState) == 0x000004, "Wrong alignment on ITEM_HardwareBase_C_UpdateHardwareState");
static_assert(sizeof(ITEM_HardwareBase_C_UpdateHardwareState) == 0x000010, "Wrong size on ITEM_HardwareBase_C_UpdateHardwareState");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateHardwareState, IsEnabled) == 0x000000, "Member 'ITEM_HardwareBase_C_UpdateHardwareState::IsEnabled' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateHardwareState, Result) == 0x000001, "Member 'ITEM_HardwareBase_C_UpdateHardwareState::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateHardwareState, Temp_bool_Variable) == 0x000002, "Member 'ITEM_HardwareBase_C_UpdateHardwareState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateHardwareState, Temp_int_Variable) == 0x000004, "Member 'ITEM_HardwareBase_C_UpdateHardwareState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateHardwareState, Temp_int_Variable_1) == 0x000008, "Member 'ITEM_HardwareBase_C_UpdateHardwareState::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateHardwareState, K2Node_Select_Default) == 0x00000C, "Member 'ITEM_HardwareBase_C_UpdateHardwareState::K2Node_Select_Default' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.OnUpgradedItem
// 0x0028 (0x0028 - 0x0000)
struct ITEM_HardwareBase_C_OnUpgradedItem final
{
public:
	class UITEM_UpgradeBase_C*                    PreviousItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_HardwareBase_C*                   PreviousHardwareItem;                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HardwareBase_C*                   K2Node_DynamicCast_AsITEM_Hardware_Base;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_OnUpgradedItem) == 0x000008, "Wrong alignment on ITEM_HardwareBase_C_OnUpgradedItem");
static_assert(sizeof(ITEM_HardwareBase_C_OnUpgradedItem) == 0x000028, "Wrong size on ITEM_HardwareBase_C_OnUpgradedItem");
static_assert(offsetof(ITEM_HardwareBase_C_OnUpgradedItem, PreviousItem) == 0x000000, "Member 'ITEM_HardwareBase_C_OnUpgradedItem::PreviousItem' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_OnUpgradedItem, Result) == 0x000008, "Member 'ITEM_HardwareBase_C_OnUpgradedItem::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_OnUpgradedItem, PreviousHardwareItem) == 0x000010, "Member 'ITEM_HardwareBase_C_OnUpgradedItem::PreviousHardwareItem' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_OnUpgradedItem, K2Node_DynamicCast_AsITEM_Hardware_Base) == 0x000018, "Member 'ITEM_HardwareBase_C_OnUpgradedItem::K2Node_DynamicCast_AsITEM_Hardware_Base' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_OnUpgradedItem, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ITEM_HardwareBase_C_OnUpgradedItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.UpdateMagneticResist
// 0x0048 (0x0048 - 0x0000)
struct ITEM_HardwareBase_C_UpdateMagneticResist final
{
public:
	int32                                         ValueChange;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        ResistMagneticInstance;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBaseValue_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModResult                       CallFunc_SetBaseValue_ReturnValue;                 // 0x0034(0x0005)(NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_HardwareBase_C_UpdateMagneticResist) == 0x000008, "Wrong alignment on ITEM_HardwareBase_C_UpdateMagneticResist");
static_assert(sizeof(ITEM_HardwareBase_C_UpdateMagneticResist) == 0x000048, "Wrong size on ITEM_HardwareBase_C_UpdateMagneticResist");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateMagneticResist, ValueChange) == 0x000000, "Member 'ITEM_HardwareBase_C_UpdateMagneticResist::ValueChange' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateMagneticResist, ResistMagneticInstance) == 0x000008, "Member 'ITEM_HardwareBase_C_UpdateMagneticResist::ResistMagneticInstance' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateMagneticResist, Character) == 0x000010, "Member 'ITEM_HardwareBase_C_UpdateMagneticResist::Character' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateMagneticResist, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ITEM_HardwareBase_C_UpdateMagneticResist::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateMagneticResist, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'ITEM_HardwareBase_C_UpdateMagneticResist::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateMagneticResist, CallFunc_GetOwnerCharacter_Character) == 0x000020, "Member 'ITEM_HardwareBase_C_UpdateMagneticResist::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateMagneticResist, CallFunc_GetBaseValue_ReturnValue) == 0x000028, "Member 'ITEM_HardwareBase_C_UpdateMagneticResist::CallFunc_GetBaseValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateMagneticResist, CallFunc_IsValid_ReturnValue_1) == 0x00002C, "Member 'ITEM_HardwareBase_C_UpdateMagneticResist::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateMagneticResist, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'ITEM_HardwareBase_C_UpdateMagneticResist::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateMagneticResist, CallFunc_SetBaseValue_ReturnValue) == 0x000034, "Member 'ITEM_HardwareBase_C_UpdateMagneticResist::CallFunc_SetBaseValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_UpdateMagneticResist, CallFunc_GetAttribInstance_ReturnValue) == 0x000040, "Member 'ITEM_HardwareBase_C_UpdateMagneticResist::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.BindMagneticDisableEvents
// 0x0040 (0x0040 - 0x0000)
struct ITEM_HardwareBase_C_BindMagneticDisableEvents final
{
public:
	class UAttribInstance*                        MagneticDisableInstance;                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_HardwareBase_C_BindMagneticDisableEvents) == 0x000008, "Wrong alignment on ITEM_HardwareBase_C_BindMagneticDisableEvents");
static_assert(sizeof(ITEM_HardwareBase_C_BindMagneticDisableEvents) == 0x000040, "Wrong size on ITEM_HardwareBase_C_BindMagneticDisableEvents");
static_assert(offsetof(ITEM_HardwareBase_C_BindMagneticDisableEvents, MagneticDisableInstance) == 0x000000, "Member 'ITEM_HardwareBase_C_BindMagneticDisableEvents::MagneticDisableInstance' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_BindMagneticDisableEvents, OwnerCharacter) == 0x000008, "Member 'ITEM_HardwareBase_C_BindMagneticDisableEvents::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_BindMagneticDisableEvents, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ITEM_HardwareBase_C_BindMagneticDisableEvents::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_BindMagneticDisableEvents, CallFunc_GetValue_ReturnValue) == 0x000014, "Member 'ITEM_HardwareBase_C_BindMagneticDisableEvents::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_BindMagneticDisableEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'ITEM_HardwareBase_C_BindMagneticDisableEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_BindMagneticDisableEvents, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'ITEM_HardwareBase_C_BindMagneticDisableEvents::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_BindMagneticDisableEvents, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000030, "Member 'ITEM_HardwareBase_C_BindMagneticDisableEvents::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_BindMagneticDisableEvents, CallFunc_GetOwnerCharacter_Character) == 0x000038, "Member 'ITEM_HardwareBase_C_BindMagneticDisableEvents::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.EVENT_OnMagneticDisableValueChanged
// 0x0014 (0x0014 - 0x0000)
struct ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEnabled;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WasEnabled;                                        // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewMagneticDisabledState;                          // 0x000A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateHardwareState_Result;               // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged) == 0x000004, "Wrong alignment on ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged");
static_assert(sizeof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged) == 0x000014, "Wrong size on ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, CurrValue) == 0x000000, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, LastValue) == 0x000004, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::LastValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, IsEnabled) == 0x000008, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::IsEnabled' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, WasEnabled) == 0x000009, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::WasEnabled' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, NewMagneticDisabledState) == 0x00000A, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::NewMagneticDisabledState' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000B, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000E, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, CallFunc_UpdateHardwareState_Result) == 0x00000F, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::CallFunc_UpdateHardwareState_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x000010, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, CallFunc_Not_PreBool_ReturnValue_1) == 0x000011, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged, CallFunc_BooleanAND_ReturnValue_1) == 0x000012, "Member 'ITEM_HardwareBase_C_EVENT_OnMagneticDisableValueChanged::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.TryCompleteEquipAchievement
// 0x0028 (0x0028 - 0x0000)
struct ITEM_HardwareBase_C_TryCompleteEquipAchievement final
{
public:
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMaxHardwareVersion_Result;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryIncrementUnorderedAchievement_Result;  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_TryCompleteEquipAchievement) == 0x000008, "Wrong alignment on ITEM_HardwareBase_C_TryCompleteEquipAchievement");
static_assert(sizeof(ITEM_HardwareBase_C_TryCompleteEquipAchievement) == 0x000028, "Wrong size on ITEM_HardwareBase_C_TryCompleteEquipAchievement");
static_assert(offsetof(ITEM_HardwareBase_C_TryCompleteEquipAchievement, CallFunc_GetObjectClass_ReturnValue) == 0x000000, "Member 'ITEM_HardwareBase_C_TryCompleteEquipAchievement::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_TryCompleteEquipAchievement, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'ITEM_HardwareBase_C_TryCompleteEquipAchievement::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_TryCompleteEquipAchievement, CallFunc_IsMaxHardwareVersion_Result) == 0x000010, "Member 'ITEM_HardwareBase_C_TryCompleteEquipAchievement::CallFunc_IsMaxHardwareVersion_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_TryCompleteEquipAchievement, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'ITEM_HardwareBase_C_TryCompleteEquipAchievement::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_TryCompleteEquipAchievement, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ITEM_HardwareBase_C_TryCompleteEquipAchievement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_TryCompleteEquipAchievement, CallFunc_TryIncrementUnorderedAchievement_Result) == 0x000021, "Member 'ITEM_HardwareBase_C_TryCompleteEquipAchievement::CallFunc_TryIncrementUnorderedAchievement_Result' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.GetHardwareToggleInputActionString
// 0x0048 (0x0048 - 0x0000)
struct ITEM_HardwareBase_C_GetHardwareToggleInputActionString final
{
public:
	class FString                                 Result;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_GetHardwareToggleInputActionString) == 0x000008, "Wrong alignment on ITEM_HardwareBase_C_GetHardwareToggleInputActionString");
static_assert(sizeof(ITEM_HardwareBase_C_GetHardwareToggleInputActionString) == 0x000048, "Wrong size on ITEM_HardwareBase_C_GetHardwareToggleInputActionString");
static_assert(offsetof(ITEM_HardwareBase_C_GetHardwareToggleInputActionString, Result) == 0x000000, "Member 'ITEM_HardwareBase_C_GetHardwareToggleInputActionString::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetHardwareToggleInputActionString, HackerPawn) == 0x000010, "Member 'ITEM_HardwareBase_C_GetHardwareToggleInputActionString::HackerPawn' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetHardwareToggleInputActionString, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'ITEM_HardwareBase_C_GetHardwareToggleInputActionString::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetHardwareToggleInputActionString, CallFunc_GetOwnerCharacter_Character) == 0x000020, "Member 'ITEM_HardwareBase_C_GetHardwareToggleInputActionString::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetHardwareToggleInputActionString, K2Node_DynamicCast_AsCON_Hacker) == 0x000028, "Member 'ITEM_HardwareBase_C_GetHardwareToggleInputActionString::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetHardwareToggleInputActionString, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ITEM_HardwareBase_C_GetHardwareToggleInputActionString::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetHardwareToggleInputActionString, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000038, "Member 'ITEM_HardwareBase_C_GetHardwareToggleInputActionString::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetHardwareToggleInputActionString, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'ITEM_HardwareBase_C_GetHardwareToggleInputActionString::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetHardwareToggleInputActionString, CallFunc_IsUsingGamepad_Result) == 0x000041, "Member 'ITEM_HardwareBase_C_GetHardwareToggleInputActionString::CallFunc_IsUsingGamepad_Result' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.ReplaceHardwareInputActionStringInText
// 0x0080 (0x0080 - 0x0000)
struct ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Result;                                            // 0x0018(0x0018)(Parm, OutParm)
	class FString                                 TextAsString;                                      // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
	class FString                                 CallFunc_GetHardwareToggleInputActionString_Result; // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_ReplaceInline_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText) == 0x000008, "Wrong alignment on ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText");
static_assert(sizeof(ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText) == 0x000080, "Wrong size on ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText");
static_assert(offsetof(ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText, Text) == 0x000000, "Member 'ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText::Text' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText, Result) == 0x000018, "Member 'ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText, TextAsString) == 0x000030, "Member 'ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText::TextAsString' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText, CallFunc_Conv_TextToString_ReturnValue) == 0x000040, "Member 'ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText, CallFunc_GetHardwareToggleInputActionString_Result) == 0x000068, "Member 'ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText::CallFunc_GetHardwareToggleInputActionString_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText, CallFunc_ReplaceInline_ReturnValue) == 0x000078, "Member 'ITEM_HardwareBase_C_ReplaceHardwareInputActionStringInText::CallFunc_ReplaceInline_ReturnValue' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct ITEM_HardwareBase_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on ITEM_HardwareBase_C_ReceiveAnimationMessage");
static_assert(sizeof(ITEM_HardwareBase_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on ITEM_HardwareBase_C_ReceiveAnimationMessage");
static_assert(offsetof(ITEM_HardwareBase_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'ITEM_HardwareBase_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'ITEM_HardwareBase_C_ReceiveAnimationMessage::Result' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.GetDisplayProperties
// 0x0048 (0x0048 - 0x0000)
struct ITEM_HardwareBase_C_GetDisplayProperties final
{
public:
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AnimInstanceClass;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsAnim_Instance;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_GetDisplayProperties) == 0x000008, "Wrong alignment on ITEM_HardwareBase_C_GetDisplayProperties");
static_assert(sizeof(ITEM_HardwareBase_C_GetDisplayProperties) == 0x000048, "Wrong size on ITEM_HardwareBase_C_GetDisplayProperties");
static_assert(offsetof(ITEM_HardwareBase_C_GetDisplayProperties, SkeletalMesh) == 0x000000, "Member 'ITEM_HardwareBase_C_GetDisplayProperties::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetDisplayProperties, AnimInstanceClass) == 0x000008, "Member 'ITEM_HardwareBase_C_GetDisplayProperties::AnimInstanceClass' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetDisplayProperties, OverrideMaterial) == 0x000010, "Member 'ITEM_HardwareBase_C_GetDisplayProperties::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetDisplayProperties, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000018, "Member 'ITEM_HardwareBase_C_GetDisplayProperties::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetDisplayProperties, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000020, "Member 'ITEM_HardwareBase_C_GetDisplayProperties::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetDisplayProperties, K2Node_ClassDynamicCast_AsAnim_Instance) == 0x000028, "Member 'ITEM_HardwareBase_C_GetDisplayProperties::K2Node_ClassDynamicCast_AsAnim_Instance' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetDisplayProperties, K2Node_ClassDynamicCast_bSuccess) == 0x000030, "Member 'ITEM_HardwareBase_C_GetDisplayProperties::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetDisplayProperties, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000038, "Member 'ITEM_HardwareBase_C_GetDisplayProperties::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_GetDisplayProperties, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ITEM_HardwareBase_C_GetDisplayProperties::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.Activate
// 0x0010 (0x0010 - 0x0000)
struct ITEM_HardwareBase_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActivateHardware_Result;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Activate_Result;                          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_Activate) == 0x000008, "Wrong alignment on ITEM_HardwareBase_C_Activate");
static_assert(sizeof(ITEM_HardwareBase_C_Activate) == 0x000010, "Wrong size on ITEM_HardwareBase_C_Activate");
static_assert(offsetof(ITEM_HardwareBase_C_Activate, Character) == 0x000000, "Member 'ITEM_HardwareBase_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_Activate, Result) == 0x000008, "Member 'ITEM_HardwareBase_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_Activate, CallFunc_ActivateHardware_Result) == 0x000009, "Member 'ITEM_HardwareBase_C_Activate::CallFunc_ActivateHardware_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_Activate, CallFunc_Activate_Result) == 0x00000A, "Member 'ITEM_HardwareBase_C_Activate::CallFunc_Activate_Result' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.Deactivate
// 0x0003 (0x0003 - 0x0000)
struct ITEM_HardwareBase_C_Deactivate final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActivateHardware_Result;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Deactivate_Result;                        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_Deactivate) == 0x000001, "Wrong alignment on ITEM_HardwareBase_C_Deactivate");
static_assert(sizeof(ITEM_HardwareBase_C_Deactivate) == 0x000003, "Wrong size on ITEM_HardwareBase_C_Deactivate");
static_assert(offsetof(ITEM_HardwareBase_C_Deactivate, Result) == 0x000000, "Member 'ITEM_HardwareBase_C_Deactivate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_Deactivate, CallFunc_ActivateHardware_Result) == 0x000001, "Member 'ITEM_HardwareBase_C_Deactivate::CallFunc_ActivateHardware_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HardwareBase_C_Deactivate, CallFunc_Deactivate_Result) == 0x000002, "Member 'ITEM_HardwareBase_C_Deactivate::CallFunc_Deactivate_Result' has a wrong offset!");

// Function ITEM_HardwareBase.ITEM_HardwareBase_C.GetIsActivated
// 0x0001 (0x0001 - 0x0000)
struct ITEM_HardwareBase_C_GetIsActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HardwareBase_C_GetIsActivated) == 0x000001, "Wrong alignment on ITEM_HardwareBase_C_GetIsActivated");
static_assert(sizeof(ITEM_HardwareBase_C_GetIsActivated) == 0x000001, "Wrong size on ITEM_HardwareBase_C_GetIsActivated");
static_assert(offsetof(ITEM_HardwareBase_C_GetIsActivated, Result) == 0x000000, "Member 'ITEM_HardwareBase_C_GetIsActivated::Result' has a wrong offset!");

}


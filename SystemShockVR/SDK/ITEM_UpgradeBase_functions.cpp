#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_UpgradeBase

#include "Basic.hpp"

#include "ITEM_UpgradeBase_classes.hpp"
#include "ITEM_UpgradeBase_parameters.hpp"


namespace SDK
{

// Function ITEM_UpgradeBase.ITEM_UpgradeBase_C.ApplyUpgrade
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_UpgradeBase_C*              UpgradeItem                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           UpgradeClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_UpgradeResult                      UpgradeResult                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_UpgradeBase_C::ApplyUpgrade(class UITEM_UpgradeBase_C* UpgradeItem, class UClass* UpgradeClass, ENUM_UpgradeResult* UpgradeResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_UpgradeBase_C", "ApplyUpgrade");

	Params::ITEM_UpgradeBase_C_ApplyUpgrade Parms{};

	Parms.UpgradeItem = UpgradeItem;
	Parms.UpgradeClass = UpgradeClass;

	UObject::ProcessEvent(Func, &Parms);

	if (UpgradeResult != nullptr)
		*UpgradeResult = Parms.UpgradeResult;
}


// Function ITEM_UpgradeBase.ITEM_UpgradeBase_C.GetVersionNumber
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Version                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_UpgradeBase_C::GetVersionNumber(int32* Version)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_UpgradeBase_C", "GetVersionNumber");

	Params::ITEM_UpgradeBase_C_GetVersionNumber Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Version != nullptr)
		*Version = Parms.Version;
}


// Function ITEM_UpgradeBase.ITEM_UpgradeBase_C.OnUpgradedItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_UpgradeBase_C*              PreviousItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_UpgradeBase_C::OnUpgradedItem(class UITEM_UpgradeBase_C* PreviousItem, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_UpgradeBase_C", "OnUpgradedItem");

	Params::ITEM_UpgradeBase_C_OnUpgradedItem Parms{};

	Parms.PreviousItem = PreviousItem;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_UpgradeBase.ITEM_UpgradeBase_C.GetVersionHistory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     VersionHistory                                         (Parm, OutParm)

void UITEM_UpgradeBase_C::GetVersionHistory(TArray<class FText>* VersionHistory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_UpgradeBase_C", "GetVersionHistory");

	Params::ITEM_UpgradeBase_C_GetVersionHistory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VersionHistory != nullptr)
		*VersionHistory = std::move(Parms.VersionHistory);
}


// Function ITEM_UpgradeBase.ITEM_UpgradeBase_C.GetUpgradeType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           UpgradeClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_UpgradeResult                      Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_UpgradeBase_C::GetUpgradeType(class UClass* UpgradeClass, ENUM_UpgradeResult* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_UpgradeBase_C", "GetUpgradeType");

	Params::ITEM_UpgradeBase_C_GetUpgradeType Parms{};

	Parms.UpgradeClass = UpgradeClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_UpgradeBase.ITEM_UpgradeBase_C.IsUpgradeModule
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           UpgradeClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_UpgradeBase_C::IsUpgradeModule(class UClass* UpgradeClass, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_UpgradeBase_C", "IsUpgradeModule");

	Params::ITEM_UpgradeBase_C_IsUpgradeModule Parms{};

	Parms.UpgradeClass = UpgradeClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_UpgradeBase.ITEM_UpgradeBase_C.GetBestModuleIndexForUpgrade
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           UpgradeClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_UpgradeBase_C::GetBestModuleIndexForUpgrade(class UClass* UpgradeClass, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_UpgradeBase_C", "GetBestModuleIndexForUpgrade");

	Params::ITEM_UpgradeBase_C_GetBestModuleIndexForUpgrade Parms{};

	Parms.UpgradeClass = UpgradeClass;

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function ITEM_UpgradeBase.ITEM_UpgradeBase_C.GetInstalledModuleAtIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ModuleIndex                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           UpgradeClass                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_UpgradeBase_C::GetInstalledModuleAtIndex(int32 ModuleIndex, class UClass** UpgradeClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_UpgradeBase_C", "GetInstalledModuleAtIndex");

	Params::ITEM_UpgradeBase_C_GetInstalledModuleAtIndex Parms{};

	Parms.ModuleIndex = ModuleIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (UpgradeClass != nullptr)
		*UpgradeClass = Parms.UpgradeClass;
}

}


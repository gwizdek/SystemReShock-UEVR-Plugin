#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_HandheldDevice_Base

#include "Basic.hpp"

#include "CoreGame_structs.hpp"


namespace SDK::Params
{

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.ExecuteUbergraph_ITEM_HandheldDevice_Base
// 0x0038 (0x0038 - 0x0000)
struct ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base) == 0x000038, "Wrong size on ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base, EntryPoint) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base, Temp_object_Variable) == 0x000020, "Member 'ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base, K2Node_DynamicCast_AsAnim_Montage) == 0x000028, "Member 'ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ITEM_HandheldDevice_Base_C_ExecuteUbergraph_ITEM_HandheldDevice_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.OnLoaded_C7864A054553FC5E3414D4B3DBBBFB08
// 0x0008 (0x0008 - 0x0000)
struct ITEM_HandheldDevice_Base_C_OnLoaded_C7864A054553FC5E3414D4B3DBBBFB08 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_OnLoaded_C7864A054553FC5E3414D4B3DBBBFB08) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_OnLoaded_C7864A054553FC5E3414D4B3DBBBFB08");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_OnLoaded_C7864A054553FC5E3414D4B3DBBBFB08) == 0x000008, "Wrong size on ITEM_HandheldDevice_Base_C_OnLoaded_C7864A054553FC5E3414D4B3DBBBFB08");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_OnLoaded_C7864A054553FC5E3414D4B3DBBBFB08, Loaded) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_OnLoaded_C7864A054553FC5E3414D4B3DBBBFB08::Loaded' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.IsUsingDevice
// 0x0050 (0x0050 - 0x0000)
struct ITEM_HandheldDevice_Base_C_IsUsingDevice final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CurrentMontage;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CurrentAction;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_IsUsingDevice) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_IsUsingDevice");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_IsUsingDevice) == 0x000050, "Wrong size on ITEM_HandheldDevice_Base_C_IsUsingDevice");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_IsUsingDevice, Result) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_IsUsingDevice::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_IsUsingDevice, CurrentMontage) == 0x000008, "Member 'ITEM_HandheldDevice_Base_C_IsUsingDevice::CurrentMontage' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_IsUsingDevice, CurrentAction) == 0x000010, "Member 'ITEM_HandheldDevice_Base_C_IsUsingDevice::CurrentAction' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_IsUsingDevice, CharacterOwner) == 0x000018, "Member 'ITEM_HandheldDevice_Base_C_IsUsingDevice::CharacterOwner' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_IsUsingDevice, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ITEM_HandheldDevice_Base_C_IsUsingDevice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_IsUsingDevice, CallFunc_GetCurrentAction_CurrentAction) == 0x000028, "Member 'ITEM_HandheldDevice_Base_C_IsUsingDevice::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_IsUsingDevice, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'ITEM_HandheldDevice_Base_C_IsUsingDevice::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_IsUsingDevice, CallFunc_GetMontage_Result) == 0x000038, "Member 'ITEM_HandheldDevice_Base_C_IsUsingDevice::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_IsUsingDevice, CallFunc_IsValid_ReturnValue_2) == 0x000040, "Member 'ITEM_HandheldDevice_Base_C_IsUsingDevice::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_IsUsingDevice, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000041, "Member 'ITEM_HandheldDevice_Base_C_IsUsingDevice::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_IsUsingDevice, CallFunc_GetOwnerCharacter_Character) == 0x000048, "Member 'ITEM_HandheldDevice_Base_C_IsUsingDevice::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.EVENT_OnStartedUsingDevice
// 0x0008 (0x0008 - 0x0000)
struct ITEM_HandheldDevice_Base_C_EVENT_OnStartedUsingDevice final
{
public:
	class UITEM_ConsumableBase_C*                 CallFunc_GetBestSlottedItemToConsume_ConsumableItem; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_EVENT_OnStartedUsingDevice) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_EVENT_OnStartedUsingDevice");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_EVENT_OnStartedUsingDevice) == 0x000008, "Wrong size on ITEM_HandheldDevice_Base_C_EVENT_OnStartedUsingDevice");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnStartedUsingDevice, CallFunc_GetBestSlottedItemToConsume_ConsumableItem) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnStartedUsingDevice::CallFunc_GetBestSlottedItemToConsume_ConsumableItem' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.TryResumeHandheldDeviceAction
// 0x0078 (0x0078 - 0x0000)
struct ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction final
{
public:
	class UCharacterAction_C*                     CurrentAction;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0040(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction_1;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction) == 0x000078, "Wrong size on ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction, CurrentAction) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction::CurrentAction' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction, OwnerCharacter) == 0x000008, "Member 'ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction, CallFunc_GetOwnerCharacter_Character) == 0x000010, "Member 'ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction, CallFunc_GetCurrentAction_CurrentAction) == 0x000020, "Member 'ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction, CallFunc_GetMontage_Result) == 0x000038, "Member 'ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000040, "Member 'ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction, CallFunc_GetCurrentAction_CurrentAction_1) == 0x000068, "Member 'ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction::CallFunc_GetCurrentAction_CurrentAction_1' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x000070, "Member 'ITEM_HandheldDevice_Base_C_TryResumeHandheldDeviceAction::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.ConsumeDevice
// 0x0078 (0x0078 - 0x0000)
struct ITEM_HandheldDevice_Base_C_ConsumeDevice final
{
public:
	class UITEM_ConsumableBase_C*                 PreviousActiveItem;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTotalConsumableItemCount_Result;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CycleEquippedWeapon_Success;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 CallFunc_GetActiveConsumableItem_Result;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 CallFunc_UseConsumable_ConsumedItem;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 CallFunc_GetActiveConsumableItem_Result_1;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_ConsumeDevice) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_ConsumeDevice");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_ConsumeDevice) == 0x000078, "Wrong size on ITEM_HandheldDevice_Base_C_ConsumeDevice");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, PreviousActiveItem) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::PreviousActiveItem' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, HackerPawn) == 0x000008, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::HackerPawn' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_GetOwnerCharacter_Character) == 0x000020, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000028, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_GetCurrentAction_CurrentAction) == 0x000038, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_GetTotalConsumableItemCount_Result) == 0x000040, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_GetTotalConsumableItemCount_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_IsEquipped_Result) == 0x000045, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_IsEquipped_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_Not_PreBool_ReturnValue) == 0x000046, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_BooleanOR_ReturnValue) == 0x000047, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_CycleEquippedWeapon_Success) == 0x000048, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_CycleEquippedWeapon_Success' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_GetOwnerCharacter_Character_1) == 0x000050, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_GetOwnerCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_GetActiveConsumableItem_Result) == 0x000058, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_GetActiveConsumableItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_UseConsumable_ConsumedItem) == 0x000060, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_UseConsumable_ConsumedItem' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_GetActiveConsumableItem_Result_1) == 0x000068, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_GetActiveConsumableItem_Result_1' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ConsumeDevice, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'ITEM_HandheldDevice_Base_C_ConsumeDevice::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.EVENT_OnFinishingUsingDevice
// 0x0060 (0x0060 - 0x0000)
struct ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsWaitingToHolster_Result;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetDrawMontage_Montage;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped_Result_1;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_TryBeginAction_Action;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTotalConsumableItemCount_Result;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice) == 0x000060, "Wrong size on ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, HackerPawn) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::HackerPawn' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, CallFunc_IsWaitingToHolster_Result) == 0x000008, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::CallFunc_IsWaitingToHolster_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, CallFunc_IsEquipped_Result) == 0x000009, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::CallFunc_IsEquipped_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, CallFunc_GetWeaponMeshComponent_Result) == 0x000010, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, CallFunc_GetDrawMontage_Montage) == 0x000020, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::CallFunc_GetDrawMontage_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, CallFunc_IsEquipped_Result_1) == 0x000028, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::CallFunc_IsEquipped_Result_1' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, CallFunc_TryBeginAction_Action) == 0x000030, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::CallFunc_TryBeginAction_Action' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, CallFunc_GetTotalConsumableItemCount_Result) == 0x000038, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::CallFunc_GetTotalConsumableItemCount_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, CallFunc_GetOwnerCharacter_Character) == 0x000040, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000050, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'ITEM_HandheldDevice_Base_C_EVENT_OnFinishingUsingDevice::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x000011, "Member 'ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000012, "Member 'ITEM_HandheldDevice_Base_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.SetupMaterial
// 0x0018 (0x0018 - 0x0000)
struct ITEM_HandheldDevice_Base_C_SetupMaterial final
{
public:
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_SetupMaterial) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_SetupMaterial");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_SetupMaterial) == 0x000018, "Wrong size on ITEM_HandheldDevice_Base_C_SetupMaterial");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_SetupMaterial, OverrideMaterial) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_SetupMaterial::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_SetupMaterial, CallFunc_GetWeaponMeshComponent_Result) == 0x000008, "Member 'ITEM_HandheldDevice_Base_C_SetupMaterial::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_SetupMaterial, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ITEM_HandheldDevice_Base_C_SetupMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.TryBecomeActivatableImmediately
// 0x0020 (0x0020 - 0x0000)
struct ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately final
{
public:
	bool                                          ShowImmediately;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CurrentAction;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryBecomeActivatableImmediately_Result;   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately) == 0x000020, "Wrong size on ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately, ShowImmediately) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately::ShowImmediately' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately, Result) == 0x000001, "Member 'ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately, CurrentAction) == 0x000008, "Member 'ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately::CurrentAction' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately, OwnerCharacter) == 0x000010, "Member 'ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately, CallFunc_TryBecomeActivatableImmediately_Result) == 0x000018, "Member 'ITEM_HandheldDevice_Base_C_TryBecomeActivatableImmediately::CallFunc_TryBecomeActivatableImmediately_Result' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.ResumeWaitingToHolster
// 0x0008 (0x0008 - 0x0000)
struct ITEM_HandheldDevice_Base_C_ResumeWaitingToHolster final
{
public:
	class UCOMP_Inventory_C*                      FromInventory;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_ResumeWaitingToHolster) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_ResumeWaitingToHolster");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_ResumeWaitingToHolster) == 0x000008, "Wrong size on ITEM_HandheldDevice_Base_C_ResumeWaitingToHolster");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_ResumeWaitingToHolster, FromInventory) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_ResumeWaitingToHolster::FromInventory' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.OnBecomeUnactivatable
// 0x0002 (0x0002 - 0x0000)
struct ITEM_HandheldDevice_Base_C_OnBecomeUnactivatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBecomeUnactivatable_Result;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_OnBecomeUnactivatable) == 0x000001, "Wrong alignment on ITEM_HandheldDevice_Base_C_OnBecomeUnactivatable");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_OnBecomeUnactivatable) == 0x000002, "Wrong size on ITEM_HandheldDevice_Base_C_OnBecomeUnactivatable");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_OnBecomeUnactivatable, Result) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_OnBecomeUnactivatable::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_OnBecomeUnactivatable, CallFunc_OnBecomeUnactivatable_Result) == 0x000001, "Member 'ITEM_HandheldDevice_Base_C_OnBecomeUnactivatable::CallFunc_OnBecomeUnactivatable_Result' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.Activate
// 0x0070 (0x0070 - 0x0000)
struct ITEM_HandheldDevice_Base_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Activate_Result;                          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLatentEventHandle                     CallFunc_CreateEventHandle_ReturnValue;            // 0x0050(0x0010)(ContainsInstancedReference)
	bool                                          CallFunc_IsUsingDevice_Result;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTotalConsumableItemCount_Result;       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_Activate) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_Activate");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_Activate) == 0x000070, "Wrong size on ITEM_HandheldDevice_Base_C_Activate");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, Character) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, Result) == 0x000008, "Member 'ITEM_HandheldDevice_Base_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, CallFunc_GetOwnerCharacter_Character) == 0x000010, "Member 'ITEM_HandheldDevice_Base_C_Activate::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, CallFunc_Activate_Result) == 0x000018, "Member 'ITEM_HandheldDevice_Base_C_Activate::CallFunc_Activate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000020, "Member 'ITEM_HandheldDevice_Base_C_Activate::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ITEM_HandheldDevice_Base_C_Activate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, K2Node_DynamicCast_AsAnim_Montage) == 0x000030, "Member 'ITEM_HandheldDevice_Base_C_Activate::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ITEM_HandheldDevice_Base_C_Activate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'ITEM_HandheldDevice_Base_C_Activate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, CallFunc_CreateEventHandle_ReturnValue) == 0x000050, "Member 'ITEM_HandheldDevice_Base_C_Activate::CallFunc_CreateEventHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, CallFunc_IsUsingDevice_Result) == 0x000060, "Member 'ITEM_HandheldDevice_Base_C_Activate::CallFunc_IsUsingDevice_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'ITEM_HandheldDevice_Base_C_Activate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, CallFunc_GetTotalConsumableItemCount_Result) == 0x000064, "Member 'ITEM_HandheldDevice_Base_C_Activate::CallFunc_GetTotalConsumableItemCount_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Activate, CallFunc_Greater_IntInt_ReturnValue) == 0x000068, "Member 'ITEM_HandheldDevice_Base_C_Activate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_HandheldDevice_Base.ITEM_HandheldDevice_Base_C.Deactivate
// 0x0028 (0x0028 - 0x0000)
struct ITEM_HandheldDevice_Base_C_Deactivate final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingDevice_Result;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Deactivate_Result;                        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_HandheldDevice_Base_C_Deactivate) == 0x000008, "Wrong alignment on ITEM_HandheldDevice_Base_C_Deactivate");
static_assert(sizeof(ITEM_HandheldDevice_Base_C_Deactivate) == 0x000028, "Wrong size on ITEM_HandheldDevice_Base_C_Deactivate");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Deactivate, Result) == 0x000000, "Member 'ITEM_HandheldDevice_Base_C_Deactivate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Deactivate, CharacterOwner) == 0x000008, "Member 'ITEM_HandheldDevice_Base_C_Deactivate::CharacterOwner' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Deactivate, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ITEM_HandheldDevice_Base_C_Deactivate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Deactivate, CallFunc_IsUsingDevice_Result) == 0x000011, "Member 'ITEM_HandheldDevice_Base_C_Deactivate::CallFunc_IsUsingDevice_Result' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Deactivate, CallFunc_GetOwnerCharacter_Character) == 0x000018, "Member 'ITEM_HandheldDevice_Base_C_Deactivate::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Deactivate, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'ITEM_HandheldDevice_Base_C_Deactivate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_HandheldDevice_Base_C_Deactivate, CallFunc_Deactivate_Result) == 0x000021, "Member 'ITEM_HandheldDevice_Base_C_Deactivate::CallFunc_Deactivate_Result' has a wrong offset!");

}


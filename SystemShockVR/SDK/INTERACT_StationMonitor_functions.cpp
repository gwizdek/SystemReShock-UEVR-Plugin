#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_StationMonitor

#include "Basic.hpp"

#include "INTERACT_StationMonitor_classes.hpp"
#include "INTERACT_StationMonitor_parameters.hpp"


namespace SDK
{

// Function INTERACT_StationMonitor.INTERACT_StationMonitor_C.ExecuteUbergraph_INTERACT_StationMonitor
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_StationMonitor_C::ExecuteUbergraph_INTERACT_StationMonitor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_StationMonitor_C", "ExecuteUbergraph_INTERACT_StationMonitor");

	Params::INTERACT_StationMonitor_C_ExecuteUbergraph_INTERACT_StationMonitor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_StationMonitor.INTERACT_StationMonitor_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AINTERACT_StationMonitor_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_StationMonitor_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_StationMonitor.INTERACT_StationMonitor_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_StationMonitor_C::BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_StationMonitor_C", "BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");

	Params::INTERACT_StationMonitor_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_StationMonitor.INTERACT_StationMonitor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_StationMonitor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_StationMonitor_C", "ReceiveTick");

	Params::INTERACT_StationMonitor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_StationMonitor.INTERACT_StationMonitor_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_StationMonitor_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_StationMonitor_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_StationMonitor.INTERACT_StationMonitor_C.InitializeStationMonitor
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_StationMonitor_C::InitializeStationMonitor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_StationMonitor_C", "InitializeStationMonitor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_StationMonitor.INTERACT_StationMonitor_C.UpdateMonitorRotation
// (Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_StationMonitor_C::UpdateMonitorRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_StationMonitor_C", "UpdateMonitorRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_StationMonitor.INTERACT_StationMonitor_C.UpdateDeathSettings
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DuringBeginPlay                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_StationMonitor_C::UpdateDeathSettings(bool DuringBeginPlay, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_StationMonitor_C", "UpdateDeathSettings");

	Params::INTERACT_StationMonitor_C_UpdateDeathSettings Parms{};

	Parms.DuringBeginPlay = DuringBeginPlay;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_StationMonitor.INTERACT_StationMonitor_C.OnDeath
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_StationMonitor_C::OnDeath(class AActor* SourceActor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_StationMonitor_C", "OnDeath");

	Params::INTERACT_StationMonitor_C_OnDeath Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_StationMonitor.INTERACT_StationMonitor_C.SpawnDebris
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_StationMonitor_C::SpawnDebris()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_StationMonitor_C", "SpawnDebris");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_StationMonitor.INTERACT_StationMonitor_C.UpdateVisibilityState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibilityState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_StationMonitor_C::UpdateVisibilityState(bool VisibilityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_StationMonitor_C", "UpdateVisibilityState");

	Params::INTERACT_StationMonitor_C_UpdateVisibilityState Parms{};

	Parms.VisibilityState = VisibilityState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_StationMonitor.INTERACT_StationMonitor_C.EVENT_OnImpactWithDamage
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           HitActor                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttribDamageInstance            ImpactDamageInstance                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// float                                   ImpactSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_StationMonitor_C::EVENT_OnImpactWithDamage(class AActor* HitActor, const struct FAttribDamageInstance& ImpactDamageInstance, float ImpactSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_StationMonitor_C", "EVENT_OnImpactWithDamage");

	Params::INTERACT_StationMonitor_C_EVENT_OnImpactWithDamage Parms{};

	Parms.HitActor = HitActor;
	Parms.ImpactDamageInstance = std::move(ImpactDamageInstance);
	Parms.ImpactSpeed = ImpactSpeed;

	UObject::ProcessEvent(Func, &Parms);
}

}


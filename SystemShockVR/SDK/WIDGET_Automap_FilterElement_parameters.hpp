#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Automap_FilterElement

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "STRUCT_MapFilterData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.ExecuteUbergraph_WIDGET_Automap_FilterElement
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_Automap_FilterElement_C_ExecuteUbergraph_WIDGET_Automap_FilterElement final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDisplayName_DisplayName;               // 0x0008(0x0018)()
	bool                                          CallFunc_DoesFilterStartActive_Result;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_ExecuteUbergraph_WIDGET_Automap_FilterElement) == 0x000008, "Wrong alignment on WIDGET_Automap_FilterElement_C_ExecuteUbergraph_WIDGET_Automap_FilterElement");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_ExecuteUbergraph_WIDGET_Automap_FilterElement) == 0x000028, "Wrong size on WIDGET_Automap_FilterElement_C_ExecuteUbergraph_WIDGET_Automap_FilterElement");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_ExecuteUbergraph_WIDGET_Automap_FilterElement, EntryPoint) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_ExecuteUbergraph_WIDGET_Automap_FilterElement::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_ExecuteUbergraph_WIDGET_Automap_FilterElement, CallFunc_GetDisplayName_DisplayName) == 0x000008, "Member 'WIDGET_Automap_FilterElement_C_ExecuteUbergraph_WIDGET_Automap_FilterElement::CallFunc_GetDisplayName_DisplayName' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_ExecuteUbergraph_WIDGET_Automap_FilterElement, CallFunc_DoesFilterStartActive_Result) == 0x000020, "Member 'WIDGET_Automap_FilterElement_C_ExecuteUbergraph_WIDGET_Automap_FilterElement::CallFunc_DoesFilterStartActive_Result' has a wrong offset!");

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.GetDisplayName
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_Automap_FilterElement_C_GetDisplayName final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0018)(Parm, OutParm)
	struct FSTRUCT_MapFilterData                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0018(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_GetDisplayName) == 0x000008, "Wrong alignment on WIDGET_Automap_FilterElement_C_GetDisplayName");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_GetDisplayName) == 0x000048, "Wrong size on WIDGET_Automap_FilterElement_C_GetDisplayName");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetDisplayName, DisplayName) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_GetDisplayName::DisplayName' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetDisplayName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000018, "Member 'WIDGET_Automap_FilterElement_C_GetDisplayName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetDisplayName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000040, "Member 'WIDGET_Automap_FilterElement_C_GetDisplayName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.EVENT_OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WIDGET_Automap_FilterElement_C_EVENT_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_EVENT_OnMouseEnter) == 0x000008, "Wrong alignment on WIDGET_Automap_FilterElement_C_EVENT_OnMouseEnter");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_EVENT_OnMouseEnter) == 0x0000B0, "Wrong size on WIDGET_Automap_FilterElement_C_EVENT_OnMouseEnter");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_EVENT_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WIDGET_Automap_FilterElement_C_EVENT_OnMouseEnter::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_OnMouseEnter, CallFunc_PlayAnimation_ReturnValue) == 0x0000A8, "Member 'WIDGET_Automap_FilterElement_C_EVENT_OnMouseEnter::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.EVENT_MouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WIDGET_Automap_FilterElement_C_EVENT_MouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_EVENT_MouseLeave) == 0x000008, "Wrong alignment on WIDGET_Automap_FilterElement_C_EVENT_MouseLeave");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_EVENT_MouseLeave) == 0x000078, "Wrong size on WIDGET_Automap_FilterElement_C_EVENT_MouseLeave");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseLeave, MouseEvent) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseLeave::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseLeave, CallFunc_PlayAnimation_ReturnValue) == 0x000070, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseLeave::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.EVENT_MouseButtonDown
// 0x0298 (0x0298 - 0x0000)
struct WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	class APAWN_Hacker_Implant_C*                 Hacker;                                            // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   CurrentFilterTag;                                  // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0180(0x00B8)()
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MapFilterData                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0250(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x027C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown) == 0x000008, "Wrong alignment on WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown) == 0x000298, "Wrong size on WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, MyGeometry) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, MouseEvent) == 0x000038, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, ReturnValue) == 0x0000A8, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, Hacker) == 0x000160, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, CurrentFilterTag) == 0x000168, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::CurrentFilterTag' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, Temp_int_Array_Index_Variable) == 0x000170, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, Temp_int_Loop_Counter_Variable) == 0x000174, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, CallFunc_Add_IntInt_ReturnValue) == 0x000178, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000180, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, CallFunc_GetPlayerPawn_ReturnValue) == 0x000238, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000240, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, K2Node_DynamicCast_bSuccess) == 0x000248, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, CallFunc_GetDataTableRowFromName_OutRow) == 0x000250, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000278, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, CallFunc_Array_Get_Item) == 0x00027C, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, CallFunc_PlayAnimation_ReturnValue) == 0x000288, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, CallFunc_Array_Length_ReturnValue) == 0x000290, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, CallFunc_Less_IntInt_ReturnValue) == 0x000294, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown, CallFunc_Not_PreBool_ReturnValue) == 0x000295, "Member 'WIDGET_Automap_FilterElement_C_EVENT_MouseButtonDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.UpdateVisualState
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_Automap_FilterElement_C_UpdateVisualState final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_DynamicMaterial;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_DynamicMaterial_1;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetHighlightedInactiveTextColor_Color;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetHighlightedActiveTextColor_Color;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetInactiveTextColor_Color;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_Select_Default;                             // 0x002C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetActiveTextColor_Color;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_Select_Default_1;                           // 0x0034(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_Select_Default_2;                           // 0x0038(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_UpdateVisualState) == 0x000008, "Wrong alignment on WIDGET_Automap_FilterElement_C_UpdateVisualState");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_UpdateVisualState) == 0x000040, "Wrong size on WIDGET_Automap_FilterElement_C_UpdateVisualState");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, Temp_bool_Variable) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, Temp_bool_Variable_1) == 0x000001, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, Temp_bool_Variable_2) == 0x000002, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, CallFunc_GetDynamicMaterial_DynamicMaterial) == 0x000008, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::CallFunc_GetDynamicMaterial_DynamicMaterial' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, CallFunc_GetDynamicMaterial_DynamicMaterial_1) == 0x000010, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::CallFunc_GetDynamicMaterial_DynamicMaterial_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, CallFunc_SelectFloat_ReturnValue_1) == 0x00001C, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, CallFunc_GetHighlightedInactiveTextColor_Color) == 0x000020, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::CallFunc_GetHighlightedInactiveTextColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, CallFunc_GetHighlightedActiveTextColor_Color) == 0x000024, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::CallFunc_GetHighlightedActiveTextColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, CallFunc_GetInactiveTextColor_Color) == 0x000028, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::CallFunc_GetInactiveTextColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, K2Node_Select_Default) == 0x00002C, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, CallFunc_GetActiveTextColor_Color) == 0x000030, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::CallFunc_GetActiveTextColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, K2Node_Select_Default_1) == 0x000034, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_UpdateVisualState, K2Node_Select_Default_2) == 0x000038, "Member 'WIDGET_Automap_FilterElement_C_UpdateVisualState::K2Node_Select_Default_2' has a wrong offset!");

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.GetActiveTextColor
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_Automap_FilterElement_C_GetActiveTextColor final
{
public:
	struct FColor                                 Color;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_GetActiveTextColor) == 0x000004, "Wrong alignment on WIDGET_Automap_FilterElement_C_GetActiveTextColor");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_GetActiveTextColor) == 0x000008, "Wrong size on WIDGET_Automap_FilterElement_C_GetActiveTextColor");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetActiveTextColor, Color) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_GetActiveTextColor::Color' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetActiveTextColor, CallFunc_GetMeshUIColor_Color) == 0x000004, "Member 'WIDGET_Automap_FilterElement_C_GetActiveTextColor::CallFunc_GetMeshUIColor_Color' has a wrong offset!");

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.GetInactiveTextColor
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_Automap_FilterElement_C_GetInactiveTextColor final
{
public:
	struct FColor                                 Color;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_GetInactiveTextColor) == 0x000004, "Wrong alignment on WIDGET_Automap_FilterElement_C_GetInactiveTextColor");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_GetInactiveTextColor) == 0x000040, "Wrong size on WIDGET_Automap_FilterElement_C_GetInactiveTextColor");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetInactiveTextColor, Color) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_GetInactiveTextColor::Color' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetInactiveTextColor, CallFunc_GetMeshUIColor_Color) == 0x000004, "Member 'WIDGET_Automap_FilterElement_C_GetInactiveTextColor::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetInactiveTextColor, CallFunc_GetMeshUIColor_Color_1) == 0x000008, "Member 'WIDGET_Automap_FilterElement_C_GetInactiveTextColor::CallFunc_GetMeshUIColor_Color_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetInactiveTextColor, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x00000C, "Member 'WIDGET_Automap_FilterElement_C_GetInactiveTextColor::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetInactiveTextColor, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x00001C, "Member 'WIDGET_Automap_FilterElement_C_GetInactiveTextColor::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetInactiveTextColor, CallFunc_LinearColorLerp_ReturnValue) == 0x00002C, "Member 'WIDGET_Automap_FilterElement_C_GetInactiveTextColor::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetInactiveTextColor, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x00003C, "Member 'WIDGET_Automap_FilterElement_C_GetInactiveTextColor::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.GetHighlightedActiveTextColor
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_Automap_FilterElement_C_GetHighlightedActiveTextColor final
{
public:
	struct FColor                                 Color;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_GetHighlightedActiveTextColor) == 0x000004, "Wrong alignment on WIDGET_Automap_FilterElement_C_GetHighlightedActiveTextColor");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_GetHighlightedActiveTextColor) == 0x000008, "Wrong size on WIDGET_Automap_FilterElement_C_GetHighlightedActiveTextColor");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetHighlightedActiveTextColor, Color) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_GetHighlightedActiveTextColor::Color' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetHighlightedActiveTextColor, CallFunc_GetMeshUIColor_Color) == 0x000004, "Member 'WIDGET_Automap_FilterElement_C_GetHighlightedActiveTextColor::CallFunc_GetMeshUIColor_Color' has a wrong offset!");

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.GetHighlightedInactiveTextColor
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor final
{
public:
	struct FColor                                 Color;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_1;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor) == 0x000004, "Wrong alignment on WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor) == 0x000040, "Wrong size on WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor, Color) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor::Color' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor, CallFunc_GetMeshUIColor_Color) == 0x000004, "Member 'WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor, CallFunc_GetMeshUIColor_Color_1) == 0x000008, "Member 'WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor::CallFunc_GetMeshUIColor_Color_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x00000C, "Member 'WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x00001C, "Member 'WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor, CallFunc_LinearColorLerp_ReturnValue) == 0x00002C, "Member 'WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x00003C, "Member 'WIDGET_Automap_FilterElement_C_GetHighlightedInactiveTextColor::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.DoesFilterStartActive
// 0x0080 (0x0080 - 0x0000)
struct WIDGET_Automap_FilterElement_C_DoesFilterStartActive final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Implant_C*                 Hacker;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   CurrentTag;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldScannableElementBeVisible_ReturnValue; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MapFilterData                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive) == 0x000008, "Wrong alignment on WIDGET_Automap_FilterElement_C_DoesFilterStartActive");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive) == 0x000080, "Wrong size on WIDGET_Automap_FilterElement_C_DoesFilterStartActive");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, Result) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, Hacker) == 0x000008, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, CurrentTag) == 0x000010, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::CurrentTag' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, CallFunc_GetPlayerPawn_ReturnValue) == 0x000028, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000030, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, CallFunc_ShouldScannableElementBeVisible_ReturnValue) == 0x000039, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::CallFunc_ShouldScannableElementBeVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000068, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, CallFunc_Array_Get_Item) == 0x00006C, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_DoesFilterStartActive, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'WIDGET_Automap_FilterElement_C_DoesFilterStartActive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.SetTexture
// 0x00C8 (0x00C8 - 0x0000)
struct WIDGET_Automap_FilterElement_C_SetTexture final
{
public:
	class UMaterial*                              Material;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterial>               SoftMaterial;                                      // 0x0008(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UTexture*                               Texture;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture>                SoftTexture;                                       // 0x0038(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_DynamicMaterial;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_DynamicMaterial_1;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              K2Node_DynamicCast_AsMaterial;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterial>               CallFunc_Map_Find_Value;                           // 0x0098(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_SetTexture) == 0x000008, "Wrong alignment on WIDGET_Automap_FilterElement_C_SetTexture");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_SetTexture) == 0x0000C8, "Wrong size on WIDGET_Automap_FilterElement_C_SetTexture");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, Material) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::Material' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, SoftMaterial) == 0x000008, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::SoftMaterial' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, Texture) == 0x000030, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::Texture' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, SoftTexture) == 0x000038, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::SoftTexture' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, CallFunc_GetDynamicMaterial_DynamicMaterial) == 0x000060, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::CallFunc_GetDynamicMaterial_DynamicMaterial' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, CallFunc_GetDynamicMaterial_DynamicMaterial_1) == 0x000068, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::CallFunc_GetDynamicMaterial_DynamicMaterial_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000070, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000078, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000080, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, K2Node_DynamicCast_AsMaterial) == 0x000088, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::K2Node_DynamicCast_AsMaterial' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, CallFunc_Map_Find_Value) == 0x000098, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_SetTexture, CallFunc_Map_Find_ReturnValue) == 0x0000C0, "Member 'WIDGET_Automap_FilterElement_C_SetTexture::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WIDGET_Automap_FilterElement.WIDGET_Automap_FilterElement_C.GetDynamicMaterial
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_Automap_FilterElement_C_GetDynamicMaterial final
{
public:
	class UMaterialInstanceDynamic*               DynamicMaterial_0;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Automap_FilterElement_C_GetDynamicMaterial) == 0x000008, "Wrong alignment on WIDGET_Automap_FilterElement_C_GetDynamicMaterial");
static_assert(sizeof(WIDGET_Automap_FilterElement_C_GetDynamicMaterial) == 0x000018, "Wrong size on WIDGET_Automap_FilterElement_C_GetDynamicMaterial");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetDynamicMaterial, DynamicMaterial_0) == 0x000000, "Member 'WIDGET_Automap_FilterElement_C_GetDynamicMaterial::DynamicMaterial_0' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetDynamicMaterial, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WIDGET_Automap_FilterElement_C_GetDynamicMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Automap_FilterElement_C_GetDynamicMaterial, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'WIDGET_Automap_FilterElement_C_GetDynamicMaterial::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_HardwareDetails

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_HardwareDetails.WIDGET_HardwareDetails_C.ExecuteUbergraph_WIDGET_HardwareDetails
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_HardwareDetails_C_ExecuteUbergraph_WIDGET_HardwareDetails final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_HardwareDetails_C_ExecuteUbergraph_WIDGET_HardwareDetails) == 0x000008, "Wrong alignment on WIDGET_HardwareDetails_C_ExecuteUbergraph_WIDGET_HardwareDetails");
static_assert(sizeof(WIDGET_HardwareDetails_C_ExecuteUbergraph_WIDGET_HardwareDetails) == 0x000018, "Wrong size on WIDGET_HardwareDetails_C_ExecuteUbergraph_WIDGET_HardwareDetails");
static_assert(offsetof(WIDGET_HardwareDetails_C_ExecuteUbergraph_WIDGET_HardwareDetails, EntryPoint) == 0x000000, "Member 'WIDGET_HardwareDetails_C_ExecuteUbergraph_WIDGET_HardwareDetails::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_ExecuteUbergraph_WIDGET_HardwareDetails, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'WIDGET_HardwareDetails_C_ExecuteUbergraph_WIDGET_HardwareDetails::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_ExecuteUbergraph_WIDGET_HardwareDetails, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WIDGET_HardwareDetails_C_ExecuteUbergraph_WIDGET_HardwareDetails::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_HardwareDetails.WIDGET_HardwareDetails_C.EnableHardwareDetails
// 0x00B8 (0x00B8 - 0x0000)
struct WIDGET_HardwareDetails_C_EnableHardwareDetails final
{
public:
	class UWIDGET_HardwareButton_C*               HardwareButton;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Offset;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Activated, bool MagLocked)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_HardwareBase_C*                   CallFunc_GetHardwareItem_HardwareItem;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               CallFunc_GetAnchors_ReturnValue;                   // 0x0048(0x0010)(NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0060(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_HardwareDetails_C_EnableHardwareDetails) == 0x000008, "Wrong alignment on WIDGET_HardwareDetails_C_EnableHardwareDetails");
static_assert(sizeof(WIDGET_HardwareDetails_C_EnableHardwareDetails) == 0x0000B8, "Wrong size on WIDGET_HardwareDetails_C_EnableHardwareDetails");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, HardwareButton) == 0x000000, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::HardwareButton' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, Offset) == 0x000008, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::Offset' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_GetHardwareItem_HardwareItem) == 0x000028, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_GetHardwareItem_HardwareItem' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_GetParent_ReturnValue) == 0x000030, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000038, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_PlayAnimation_ReturnValue) == 0x000040, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_GetAnchors_ReturnValue) == 0x000048, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_GetAnchors_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_BreakVector2D_X) == 0x000058, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_BreakVector2D_Y) == 0x00005C, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_GetCachedGeometry_ReturnValue) == 0x000060, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_Less_FloatFloat_ReturnValue) == 0x000098, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_LocalToViewport_PixelPosition) == 0x00009C, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_LocalToViewport_ViewportPosition) == 0x0000A4, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EnableHardwareDetails, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000AC, "Member 'WIDGET_HardwareDetails_C_EnableHardwareDetails::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WIDGET_HardwareDetails.WIDGET_HardwareDetails_C.UpdateHardwareText
// 0x00A0 (0x00A0 - 0x0000)
struct WIDGET_HardwareDetails_C_UpdateHardwareText final
{
public:
	class UITEM_HardwareBase_C*                   HardwareItem;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsActivated_Result;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsActivated_Result_1;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_Select_Default_1;                           // 0x0028(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetVersionNumber_Version;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsActivated_Result_2;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	class UITEM_HardwareBase_C*                   CallFunc_GetHardwareItem_HardwareItem;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0058(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0070(0x0018)()
	class FText                                   K2Node_Select_Default_2;                           // 0x0088(0x0018)(ConstParm)
};
static_assert(alignof(WIDGET_HardwareDetails_C_UpdateHardwareText) == 0x000008, "Wrong alignment on WIDGET_HardwareDetails_C_UpdateHardwareText");
static_assert(sizeof(WIDGET_HardwareDetails_C_UpdateHardwareText) == 0x0000A0, "Wrong size on WIDGET_HardwareDetails_C_UpdateHardwareText");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, HardwareItem) == 0x000000, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::HardwareItem' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, Temp_bool_Variable) == 0x000008, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, Temp_float_Variable) == 0x00000C, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, Temp_float_Variable_1) == 0x000010, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, Temp_bool_Variable_1) == 0x000014, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, Temp_bool_Variable_2) == 0x000015, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, CallFunc_IsValid_ReturnValue) == 0x000016, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, CallFunc_GetMeshUIColor_Color) == 0x000018, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, CallFunc_GetMeshUIColor_Color_1) == 0x00001C, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::CallFunc_GetMeshUIColor_Color_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, CallFunc_GetIsActivated_Result) == 0x000020, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::CallFunc_GetIsActivated_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, CallFunc_GetIsActivated_Result_1) == 0x000021, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::CallFunc_GetIsActivated_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, K2Node_Select_Default) == 0x000024, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, K2Node_Select_Default_1) == 0x000028, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, CallFunc_GetVersionNumber_Version) == 0x00002C, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::CallFunc_GetVersionNumber_Version' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, CallFunc_GetIsActivated_Result_2) == 0x000030, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::CallFunc_GetIsActivated_Result_2' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, CallFunc_GetHardwareItem_HardwareItem) == 0x000050, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::CallFunc_GetHardwareItem_HardwareItem' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, CallFunc_MakeLiteralText_ReturnValue) == 0x000058, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000070, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_UpdateHardwareText, K2Node_Select_Default_2) == 0x000088, "Member 'WIDGET_HardwareDetails_C_UpdateHardwareText::K2Node_Select_Default_2' has a wrong offset!");

// Function WIDGET_HardwareDetails.WIDGET_HardwareDetails_C.GetHardwareItem
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_HardwareDetails_C_GetHardwareItem final
{
public:
	class UITEM_HardwareBase_C*                   HardwareItem;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HardwareBase_C*                   K2Node_DynamicCast_AsITEM_Hardware_Base;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_HardwareDetails_C_GetHardwareItem) == 0x000008, "Wrong alignment on WIDGET_HardwareDetails_C_GetHardwareItem");
static_assert(sizeof(WIDGET_HardwareDetails_C_GetHardwareItem) == 0x000040, "Wrong size on WIDGET_HardwareDetails_C_GetHardwareItem");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetHardwareItem, HardwareItem) == 0x000000, "Member 'WIDGET_HardwareDetails_C_GetHardwareItem::HardwareItem' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetHardwareItem, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'WIDGET_HardwareDetails_C_GetHardwareItem::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetHardwareItem, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000010, "Member 'WIDGET_HardwareDetails_C_GetHardwareItem::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetHardwareItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_HardwareDetails_C_GetHardwareItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetHardwareItem, CallFunc_GetBagByType_Bag) == 0x000020, "Member 'WIDGET_HardwareDetails_C_GetHardwareItem::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetHardwareItem, CallFunc_FindItem_FoundItem) == 0x000028, "Member 'WIDGET_HardwareDetails_C_GetHardwareItem::CallFunc_FindItem_FoundItem' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetHardwareItem, K2Node_DynamicCast_AsITEM_Hardware_Base) == 0x000030, "Member 'WIDGET_HardwareDetails_C_GetHardwareItem::K2Node_DynamicCast_AsITEM_Hardware_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetHardwareItem, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WIDGET_HardwareDetails_C_GetHardwareItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WIDGET_HardwareDetails.WIDGET_HardwareDetails_C.EVENT_OnHardwareStateChanged
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_HardwareDetails_C_EVENT_OnHardwareStateChanged final
{
public:
	bool                                          Activated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MagLocked;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_HardwareDetails_C_EVENT_OnHardwareStateChanged) == 0x000001, "Wrong alignment on WIDGET_HardwareDetails_C_EVENT_OnHardwareStateChanged");
static_assert(sizeof(WIDGET_HardwareDetails_C_EVENT_OnHardwareStateChanged) == 0x000002, "Wrong size on WIDGET_HardwareDetails_C_EVENT_OnHardwareStateChanged");
static_assert(offsetof(WIDGET_HardwareDetails_C_EVENT_OnHardwareStateChanged, Activated) == 0x000000, "Member 'WIDGET_HardwareDetails_C_EVENT_OnHardwareStateChanged::Activated' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_EVENT_OnHardwareStateChanged, MagLocked) == 0x000001, "Member 'WIDGET_HardwareDetails_C_EVENT_OnHardwareStateChanged::MagLocked' has a wrong offset!");

// Function WIDGET_HardwareDetails.WIDGET_HardwareDetails_C.GetFormattedVersionHistory
// 0x01D8 (0x01D8 - 0x0000)
struct WIDGET_HardwareDetails_C_GetFormattedVersionHistory final
{
public:
	class UITEM_HardwareBase_C*                   HardwareItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
	TArray<class FText>                           VersionHistoryArray;                               // 0x0020(0x0010)(Edit, BlueprintVisible)
	class FText                                   FormattedVersionHistory;                           // 0x0030(0x0018)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           CallFunc_GetVersionHistory_VersionHistory;         // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0138(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0148(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0168(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01C0(0x0018)()
};
static_assert(alignof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory) == 0x000008, "Wrong alignment on WIDGET_HardwareDetails_C_GetFormattedVersionHistory");
static_assert(sizeof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory) == 0x0001D8, "Wrong size on WIDGET_HardwareDetails_C_GetFormattedVersionHistory");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, HardwareItem) == 0x000000, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::HardwareItem' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, Result) == 0x000008, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, VersionHistoryArray) == 0x000020, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::VersionHistoryArray' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, FormattedVersionHistory) == 0x000030, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::FormattedVersionHistory' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, Temp_int_Variable) == 0x000048, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, CallFunc_GetVersionHistory_VersionHistory) == 0x000050, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::CallFunc_GetVersionHistory_VersionHistory' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, CallFunc_Array_Length_ReturnValue) == 0x0000AC, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F0, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000F4, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F8, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, K2Node_MakeArray_Array) == 0x000138, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, CallFunc_Format_ReturnValue) == 0x000148, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, CallFunc_Array_Length_ReturnValue_1) == 0x000160, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, K2Node_MakeStruct_FormatArgumentData_3) == 0x000168, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, CallFunc_Greater_IntInt_ReturnValue) == 0x0001A8, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, K2Node_MakeArray_Array_1) == 0x0001B0, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_HardwareDetails_C_GetFormattedVersionHistory, CallFunc_Format_ReturnValue_1) == 0x0001C0, "Member 'WIDGET_HardwareDetails_C_GetFormattedVersionHistory::CallFunc_Format_ReturnValue_1' has a wrong offset!");

}


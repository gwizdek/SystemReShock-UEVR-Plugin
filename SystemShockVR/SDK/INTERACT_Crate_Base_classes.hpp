#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Crate_Base

#include "Basic.hpp"

#include "INTERACT_LootableBase_classes.hpp"
#include "Engine_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_Crate_Base.INTERACT_Crate_Base_C
// 0x01B8 (0x0560 - 0x03A8)
class AINTERACT_Crate_Base_C : public AINTERACT_LootableBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_Crate_Base_C;              // 0x03A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          CompartmentBox;                                    // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelCullable_C*                  COMP_VoxelCullable;                                // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          LidCollisionBox;                                   // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          EdgeCollisionBoxD;                                 // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          EdgeCollisionBoxC;                                 // 0x03D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          EdgeCollisionBoxB;                                 // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          EdgeCollisionBoxA;                                 // 0x03E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BaseCollisionBox;                                  // 0x03E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          SpawnBox;                                          // 0x03F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TargetBox;                                         // 0x03F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x0400(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            UnlockMontage;                                     // 0x0408(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            LockMontage;                                       // 0x0430(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         TransitionDuration;                                // 0x0458(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TransitionStartTimestamp;                          // 0x045C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldClose;                                       // 0x0460(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsClosing;                                         // 0x0461(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanOpenStartSFXPlay;                               // 0x0462(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanOpenEndSFXPlay;                                 // 0x0463(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanCloseStartSFXPlay;                              // 0x0464(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanCloseEndSFXPlay;                                // 0x0465(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_466[0x2];                                      // 0x0466(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               CrateUnlockingCue;                                 // 0x0468(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               CrateLockingCue;                                   // 0x0490(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               CrateOpenStartCue;                                 // 0x04B8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               CrateOpenEndCue;                                   // 0x04E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               CrateCloseStartCue;                                // 0x0508(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               CrateCloseEndCue;                                  // 0x0530(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           MontageTimerHandle;                                // 0x0558(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_INTERACT_Crate_Base(int32 EntryPoint);
	void ReceiveBeginPlay();
	void PlaySoundAttachedToLid(TSoftObjectPtr<class USoundCue> SoundCue);
	void PlaySoundAtLidLocation(TSoftObjectPtr<class USoundCue> SoundCue);
	void BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void InitializeCrate();
	void UpdateAngleToPlayer();
	void UpdateLidTransition();
	void StopChanneling(class AActor* NewChannelingInteract, bool* Result);
	void BeginClosingLid();
	void BeginLocking();
	void UpdateCrateVisibility(bool VisibilityState);
	void FinishedUnlocking();
	void GetCurrentLidProgress(float* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_Crate_Base_C">();
	}
	static class AINTERACT_Crate_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_Crate_Base_C>();
	}
};
static_assert(alignof(AINTERACT_Crate_Base_C) == 0x000008, "Wrong alignment on AINTERACT_Crate_Base_C");
static_assert(sizeof(AINTERACT_Crate_Base_C) == 0x000560, "Wrong size on AINTERACT_Crate_Base_C");
static_assert(offsetof(AINTERACT_Crate_Base_C, UberGraphFrame_INTERACT_Crate_Base_C) == 0x0003A8, "Member 'AINTERACT_Crate_Base_C::UberGraphFrame_INTERACT_Crate_Base_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, CompartmentBox) == 0x0003B0, "Member 'AINTERACT_Crate_Base_C::CompartmentBox' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, COMP_VoxelCullable) == 0x0003B8, "Member 'AINTERACT_Crate_Base_C::COMP_VoxelCullable' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, LidCollisionBox) == 0x0003C0, "Member 'AINTERACT_Crate_Base_C::LidCollisionBox' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, EdgeCollisionBoxD) == 0x0003C8, "Member 'AINTERACT_Crate_Base_C::EdgeCollisionBoxD' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, EdgeCollisionBoxC) == 0x0003D0, "Member 'AINTERACT_Crate_Base_C::EdgeCollisionBoxC' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, EdgeCollisionBoxB) == 0x0003D8, "Member 'AINTERACT_Crate_Base_C::EdgeCollisionBoxB' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, EdgeCollisionBoxA) == 0x0003E0, "Member 'AINTERACT_Crate_Base_C::EdgeCollisionBoxA' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, BaseCollisionBox) == 0x0003E8, "Member 'AINTERACT_Crate_Base_C::BaseCollisionBox' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, SpawnBox) == 0x0003F0, "Member 'AINTERACT_Crate_Base_C::SpawnBox' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, TargetBox) == 0x0003F8, "Member 'AINTERACT_Crate_Base_C::TargetBox' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, SkeletalMesh) == 0x000400, "Member 'AINTERACT_Crate_Base_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, UnlockMontage) == 0x000408, "Member 'AINTERACT_Crate_Base_C::UnlockMontage' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, LockMontage) == 0x000430, "Member 'AINTERACT_Crate_Base_C::LockMontage' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, TransitionDuration) == 0x000458, "Member 'AINTERACT_Crate_Base_C::TransitionDuration' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, TransitionStartTimestamp) == 0x00045C, "Member 'AINTERACT_Crate_Base_C::TransitionStartTimestamp' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, ShouldClose) == 0x000460, "Member 'AINTERACT_Crate_Base_C::ShouldClose' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, IsClosing) == 0x000461, "Member 'AINTERACT_Crate_Base_C::IsClosing' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, CanOpenStartSFXPlay) == 0x000462, "Member 'AINTERACT_Crate_Base_C::CanOpenStartSFXPlay' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, CanOpenEndSFXPlay) == 0x000463, "Member 'AINTERACT_Crate_Base_C::CanOpenEndSFXPlay' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, CanCloseStartSFXPlay) == 0x000464, "Member 'AINTERACT_Crate_Base_C::CanCloseStartSFXPlay' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, CanCloseEndSFXPlay) == 0x000465, "Member 'AINTERACT_Crate_Base_C::CanCloseEndSFXPlay' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, CrateUnlockingCue) == 0x000468, "Member 'AINTERACT_Crate_Base_C::CrateUnlockingCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, CrateLockingCue) == 0x000490, "Member 'AINTERACT_Crate_Base_C::CrateLockingCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, CrateOpenStartCue) == 0x0004B8, "Member 'AINTERACT_Crate_Base_C::CrateOpenStartCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, CrateOpenEndCue) == 0x0004E0, "Member 'AINTERACT_Crate_Base_C::CrateOpenEndCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, CrateCloseStartCue) == 0x000508, "Member 'AINTERACT_Crate_Base_C::CrateCloseStartCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, CrateCloseEndCue) == 0x000530, "Member 'AINTERACT_Crate_Base_C::CrateCloseEndCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_Crate_Base_C, MontageTimerHandle) == 0x000558, "Member 'AINTERACT_Crate_Base_C::MontageTimerHandle' has a wrong offset!");

}


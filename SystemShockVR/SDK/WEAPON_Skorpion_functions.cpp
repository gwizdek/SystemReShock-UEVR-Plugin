#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEAPON_Skorpion

#include "Basic.hpp"

#include "WEAPON_Skorpion_classes.hpp"
#include "WEAPON_Skorpion_parameters.hpp"


namespace SDK
{

// Function WEAPON_Skorpion.WEAPON_Skorpion_C.FireProjectile
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           FiredProjectile                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_Skorpion_C::FireProjectile(class AActor** FiredProjectile, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "FireProjectile");

	Params::WEAPON_Skorpion_C_FireProjectile Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FiredProjectile != nullptr)
		*FiredProjectile = Parms.FiredProjectile;

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.GetProjectileClass
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UClass*                           Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_Skorpion_C::GetProjectileClass(class UClass** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "GetProjectileClass");

	Params::WEAPON_Skorpion_C_GetProjectileClass Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.InitializeProjectile
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABulletProjectile_MachineGun_C*   Projectile                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_Skorpion_C::InitializeProjectile(class ABulletProjectile_MachineGun_C* Projectile)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "InitializeProjectile");

	Params::WEAPON_Skorpion_C_InitializeProjectile Parms{};

	Parms.Projectile = Projectile;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.AddHeat
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWEAPON_Skorpion_C::AddHeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "AddHeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.UpdateHeat
// (Protected, BlueprintCallable, BlueprintEvent)

void UWEAPON_Skorpion_C::UpdateHeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "UpdateHeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.OnUpdateHeat
// (Protected, BlueprintCallable, BlueprintEvent)

void UWEAPON_Skorpion_C::OnUpdateHeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "OnUpdateHeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.PrecomputeHeatSideEffects
// (Protected, BlueprintCallable, BlueprintEvent)

void UWEAPON_Skorpion_C::PrecomputeHeatSideEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "PrecomputeHeatSideEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.TryStartHeatTimer
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWEAPON_Skorpion_C::TryStartHeatTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "TryStartHeatTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.TryStopHeatTimer
// (Protected, BlueprintCallable, BlueprintEvent)

void UWEAPON_Skorpion_C::TryStopHeatTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "TryStopHeatTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.SetHasBarrelAttachment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_Skorpion_C::SetHasBarrelAttachment(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "SetHasBarrelAttachment");

	Params::WEAPON_Skorpion_C_SetHasBarrelAttachment Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.GetHeatPercentage
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_Skorpion_C::GetHeatPercentage(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "GetHeatPercentage");

	Params::WEAPON_Skorpion_C_GetHeatPercentage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.OnWeaponBecameActivatable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowImmediately                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_Skorpion_C::OnWeaponBecameActivatable(class APAWN_SystemShockCharacter_C* Character, bool ShowImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "OnWeaponBecameActivatable");

	Params::WEAPON_Skorpion_C_OnWeaponBecameActivatable Parms{};

	Parms.Character = Character;
	Parms.ShowImmediately = ShowImmediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.OnBecomeUnactivatable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWEAPON_Skorpion_C::OnBecomeUnactivatable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "OnBecomeUnactivatable");

	Params::WEAPON_Skorpion_C_OnBecomeUnactivatable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WEAPON_Skorpion.WEAPON_Skorpion_C.ComputeSpreadDirection
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          BarrelDirection                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SpreadDirection                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWEAPON_Skorpion_C::ComputeSpreadDirection(const struct FVector& BarrelDirection, struct FVector* SpreadDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WEAPON_Skorpion_C", "ComputeSpreadDirection");

	Params::WEAPON_Skorpion_C_ComputeSpreadDirection Parms{};

	Parms.BarrelDirection = std::move(BarrelDirection);

	UObject::ProcessEvent(Func, &Parms);

	if (SpreadDirection != nullptr)
		*SpreadDirection = std::move(Parms.SpreadDirection);
}

}


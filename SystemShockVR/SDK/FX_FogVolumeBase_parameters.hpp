#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FX_FogVolumeBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FX_FogVolumeBase.FX_FogVolumeBase_C.UserConstructionScript
// 0x0028 (0x0028 - 0x0000)
struct FX_FogVolumeBase_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FX_FogVolumeBase_C_UserConstructionScript) == 0x000004, "Wrong alignment on FX_FogVolumeBase_C_UserConstructionScript");
static_assert(sizeof(FX_FogVolumeBase_C_UserConstructionScript) == 0x000028, "Wrong size on FX_FogVolumeBase_C_UserConstructionScript");
static_assert(offsetof(FX_FogVolumeBase_C_UserConstructionScript, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000000, "Member 'FX_FogVolumeBase_C_UserConstructionScript::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(FX_FogVolumeBase_C_UserConstructionScript, CallFunc_GetComponentBounds_Origin) == 0x00000C, "Member 'FX_FogVolumeBase_C_UserConstructionScript::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(FX_FogVolumeBase_C_UserConstructionScript, CallFunc_GetComponentBounds_BoxExtent) == 0x000018, "Member 'FX_FogVolumeBase_C_UserConstructionScript::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(FX_FogVolumeBase_C_UserConstructionScript, CallFunc_GetComponentBounds_SphereRadius) == 0x000024, "Member 'FX_FogVolumeBase_C_UserConstructionScript::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");

// Function FX_FogVolumeBase.FX_FogVolumeBase_C.UpdateSize
// 0x0018 (0x0018 - 0x0000)
struct FX_FogVolumeBase_C_UpdateSize final
{
public:
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FX_FogVolumeBase_C_UpdateSize) == 0x000004, "Wrong alignment on FX_FogVolumeBase_C_UpdateSize");
static_assert(sizeof(FX_FogVolumeBase_C_UpdateSize) == 0x000018, "Wrong size on FX_FogVolumeBase_C_UpdateSize");
static_assert(offsetof(FX_FogVolumeBase_C_UpdateSize, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x000000, "Member 'FX_FogVolumeBase_C_UpdateSize::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(FX_FogVolumeBase_C_UpdateSize, CallFunc_Divide_VectorFloat_ReturnValue) == 0x00000C, "Member 'FX_FogVolumeBase_C_UpdateSize::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");

}


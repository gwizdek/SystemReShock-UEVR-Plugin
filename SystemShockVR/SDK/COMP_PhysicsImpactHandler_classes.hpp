#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_PhysicsImpactHandler

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass COMP_PhysicsImpactHandler.COMP_PhysicsImpactHandler_C
// 0x0088 (0x0138 - 0x00B0)
class UCOMP_PhysicsImpactHandler_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TSoftObjectPtr<class USoundCue>               ImpactCue;                                         // 0x00B8(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          ImpactFX;                                          // 0x00E0(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         ThrowDamage;                                       // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpactSpeedThreshold;                              // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSoundImpactSpeed;                               // 0x0110(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RetriggerDelay;                                    // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastImpactTimestamp;                               // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnImpactWithDamage;                                // 0x0128(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnImpactWithDamage__DelegateSignature(class AActor* HitActor, const struct FAttribDamageInstance& ImpactDamageInstance, float ImpactSpeed);
	void ExecuteUbergraph_COMP_PhysicsImpactHandler(int32 EntryPoint);
	void PlayImpactSound(const struct FVector& ImpactLocation, float VolumeScale, class UPhysicalMaterial* PhysMaterial);
	void OnLoaded_11AE4EBE489A0AC537EB32AE377168B1(class UObject* Loaded);
	void HasImpactProperties(bool* Result);
	void SetColliderComponent(class UPrimitiveComponent* Component);
	void EVENT_OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void SetThrown(int32 Damage);
	bool ShouldSaveComponent(struct FStreamingSaveGameComponentParams* Params_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"COMP_PhysicsImpactHandler_C">();
	}
	static class UCOMP_PhysicsImpactHandler_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCOMP_PhysicsImpactHandler_C>();
	}
};
static_assert(alignof(UCOMP_PhysicsImpactHandler_C) == 0x000008, "Wrong alignment on UCOMP_PhysicsImpactHandler_C");
static_assert(sizeof(UCOMP_PhysicsImpactHandler_C) == 0x000138, "Wrong size on UCOMP_PhysicsImpactHandler_C");
static_assert(offsetof(UCOMP_PhysicsImpactHandler_C, UberGraphFrame) == 0x0000B0, "Member 'UCOMP_PhysicsImpactHandler_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCOMP_PhysicsImpactHandler_C, ImpactCue) == 0x0000B8, "Member 'UCOMP_PhysicsImpactHandler_C::ImpactCue' has a wrong offset!");
static_assert(offsetof(UCOMP_PhysicsImpactHandler_C, ImpactFX) == 0x0000E0, "Member 'UCOMP_PhysicsImpactHandler_C::ImpactFX' has a wrong offset!");
static_assert(offsetof(UCOMP_PhysicsImpactHandler_C, ThrowDamage) == 0x000108, "Member 'UCOMP_PhysicsImpactHandler_C::ThrowDamage' has a wrong offset!");
static_assert(offsetof(UCOMP_PhysicsImpactHandler_C, ImpactSpeedThreshold) == 0x00010C, "Member 'UCOMP_PhysicsImpactHandler_C::ImpactSpeedThreshold' has a wrong offset!");
static_assert(offsetof(UCOMP_PhysicsImpactHandler_C, MaxSoundImpactSpeed) == 0x000110, "Member 'UCOMP_PhysicsImpactHandler_C::MaxSoundImpactSpeed' has a wrong offset!");
static_assert(offsetof(UCOMP_PhysicsImpactHandler_C, RetriggerDelay) == 0x000114, "Member 'UCOMP_PhysicsImpactHandler_C::RetriggerDelay' has a wrong offset!");
static_assert(offsetof(UCOMP_PhysicsImpactHandler_C, LastImpactTimestamp) == 0x000118, "Member 'UCOMP_PhysicsImpactHandler_C::LastImpactTimestamp' has a wrong offset!");
static_assert(offsetof(UCOMP_PhysicsImpactHandler_C, PrimitiveComponent) == 0x000120, "Member 'UCOMP_PhysicsImpactHandler_C::PrimitiveComponent' has a wrong offset!");
static_assert(offsetof(UCOMP_PhysicsImpactHandler_C, OnImpactWithDamage) == 0x000128, "Member 'UCOMP_PhysicsImpactHandler_C::OnImpactWithDamage' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_Recall

#include "Basic.hpp"


namespace SDK::Params
{

// Function ITEM_Recall.ITEM_Recall_C.Activate
// 0x0050 (0x0050 - 0x0000)
struct ITEM_Recall_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanActivate_Result;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryOpenCyberRiftFromCyberspace_Result;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_RemoveItemCount_RemovedItem;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_Recall_C_Activate) == 0x000008, "Wrong alignment on ITEM_Recall_C_Activate");
static_assert(sizeof(ITEM_Recall_C_Activate) == 0x000050, "Wrong size on ITEM_Recall_C_Activate");
static_assert(offsetof(ITEM_Recall_C_Activate, Character) == 0x000000, "Member 'ITEM_Recall_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_Activate, Result) == 0x000008, "Member 'ITEM_Recall_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_Activate, CallFunc_CanActivate_Result) == 0x000009, "Member 'ITEM_Recall_C_Activate::CallFunc_CanActivate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_Activate, K2Node_DynamicCast_AsPAWN_Avatar) == 0x000010, "Member 'ITEM_Recall_C_Activate::K2Node_DynamicCast_AsPAWN_Avatar' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_Activate, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_Recall_C_Activate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_Activate, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'ITEM_Recall_C_Activate::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_Activate, K2Node_DynamicCast_AsCON_Hacker) == 0x000028, "Member 'ITEM_Recall_C_Activate::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_Activate, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'ITEM_Recall_C_Activate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_Activate, CallFunc_GetBag_Result) == 0x000038, "Member 'ITEM_Recall_C_Activate::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_Activate, CallFunc_TryOpenCyberRiftFromCyberspace_Result) == 0x000040, "Member 'ITEM_Recall_C_Activate::CallFunc_TryOpenCyberRiftFromCyberspace_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_Activate, CallFunc_RemoveItemCount_RemovedItem) == 0x000048, "Member 'ITEM_Recall_C_Activate::CallFunc_RemoveItemCount_RemovedItem' has a wrong offset!");

// Function ITEM_Recall.ITEM_Recall_C.CanActivate
// 0x0038 (0x0038 - 0x0000)
struct ITEM_Recall_C_CanActivate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanActivate_Result;                       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPerformingCyberspaceTransition_Result;  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_Recall_C_CanActivate) == 0x000008, "Wrong alignment on ITEM_Recall_C_CanActivate");
static_assert(sizeof(ITEM_Recall_C_CanActivate) == 0x000038, "Wrong size on ITEM_Recall_C_CanActivate");
static_assert(offsetof(ITEM_Recall_C_CanActivate, Character) == 0x000000, "Member 'ITEM_Recall_C_CanActivate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_CanActivate, Result) == 0x000008, "Member 'ITEM_Recall_C_CanActivate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_CanActivate, CallFunc_CanActivate_Result) == 0x000009, "Member 'ITEM_Recall_C_CanActivate::CallFunc_CanActivate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_CanActivate, K2Node_DynamicCast_AsPAWN_Avatar) == 0x000010, "Member 'ITEM_Recall_C_CanActivate::K2Node_DynamicCast_AsPAWN_Avatar' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_CanActivate, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_Recall_C_CanActivate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_CanActivate, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'ITEM_Recall_C_CanActivate::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_CanActivate, K2Node_DynamicCast_AsCON_Hacker) == 0x000028, "Member 'ITEM_Recall_C_CanActivate::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_CanActivate, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'ITEM_Recall_C_CanActivate::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_CanActivate, CallFunc_IsPerformingCyberspaceTransition_Result) == 0x000031, "Member 'ITEM_Recall_C_CanActivate::CallFunc_IsPerformingCyberspaceTransition_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Recall_C_CanActivate, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'ITEM_Recall_C_CanActivate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}


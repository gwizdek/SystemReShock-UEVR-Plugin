#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MODKIT_AssaultRifle_FullAuto

#include "Basic.hpp"

#include "STRUCT_WeaponMode_structs.hpp"
#include "STRUCT_WeaponPropertyValue_structs.hpp"


namespace SDK::Params
{

// Function MODKIT_AssaultRifle_FullAuto.MODKIT_AssaultRifle_FullAuto_C.TryApplyWeaponModifications
// 0x0020 (0x0020 - 0x0000)
struct MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications final
{
public:
	class UITEM_WeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DuringInitialization;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryApplyWeaponModifications_Result;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWEAPON_AssaultRifle_C*                 K2Node_DynamicCast_AsWEAPON_Assault_Rifle;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications) == 0x000008, "Wrong alignment on MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications");
static_assert(sizeof(MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications) == 0x000020, "Wrong size on MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications, Weapon) == 0x000000, "Member 'MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications::Weapon' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications, DuringInitialization) == 0x000008, "Member 'MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications::DuringInitialization' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications, Result) == 0x000009, "Member 'MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications::Result' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications, CallFunc_TryApplyWeaponModifications_Result) == 0x00000A, "Member 'MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications::CallFunc_TryApplyWeaponModifications_Result' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications, K2Node_DynamicCast_AsWEAPON_Assault_Rifle) == 0x000010, "Member 'MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications::K2Node_DynamicCast_AsWEAPON_Assault_Rifle' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'MODKIT_AssaultRifle_FullAuto_C_TryApplyWeaponModifications::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MODKIT_AssaultRifle_FullAuto.MODKIT_AssaultRifle_FullAuto_C.GetModifiedWeaponMode
// 0x0330 (0x0330 - 0x0000)
struct MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode final
{
public:
	struct FSTRUCT_WeaponMode                     WeaponMode;                                        // 0x0000(0x0100)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     ResultMode;                                        // 0x0100(0x0100)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         MagazinePropertyIndex;                             // 0x0200(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTRUCT_WeaponPropertyValue>    WeaponProperties;                                  // 0x0208(0x0010)(Edit, BlueprintVisible)
	struct FSTRUCT_WeaponMode                     ModifiedMode;                                      // 0x0218(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSTRUCT_WeaponPropertyValue            K2Node_MakeStruct_STRUCT_WeaponPropertyValue;      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyIndexByType_ArrayIndex;  // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyIndexByType_ArrayIndex_1; // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponPropertyValue            K2Node_MakeStruct_STRUCT_WeaponPropertyValue_1;    // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode) == 0x000008, "Wrong alignment on MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode");
static_assert(sizeof(MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode) == 0x000330, "Wrong size on MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode, WeaponMode) == 0x000000, "Member 'MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode::WeaponMode' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode, ResultMode) == 0x000100, "Member 'MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode::ResultMode' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode, MagazinePropertyIndex) == 0x000200, "Member 'MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode::MagazinePropertyIndex' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode, WeaponProperties) == 0x000208, "Member 'MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode::WeaponProperties' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode, ModifiedMode) == 0x000218, "Member 'MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode::ModifiedMode' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode, K2Node_MakeStruct_STRUCT_WeaponPropertyValue) == 0x000318, "Member 'MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode::K2Node_MakeStruct_STRUCT_WeaponPropertyValue' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode, CallFunc_GetWeaponPropertyIndexByType_ArrayIndex) == 0x000320, "Member 'MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode::CallFunc_GetWeaponPropertyIndexByType_ArrayIndex' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode, CallFunc_GetWeaponPropertyIndexByType_ArrayIndex_1) == 0x000324, "Member 'MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode::CallFunc_GetWeaponPropertyIndexByType_ArrayIndex_1' has a wrong offset!");
static_assert(offsetof(MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode, K2Node_MakeStruct_STRUCT_WeaponPropertyValue_1) == 0x000328, "Member 'MODKIT_AssaultRifle_FullAuto_C_GetModifiedWeaponMode::K2Node_MakeStruct_STRUCT_WeaponPropertyValue_1' has a wrong offset!");

}


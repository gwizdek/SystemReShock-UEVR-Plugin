#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DEC_IsPlayerFalling

#include "Basic.hpp"


namespace SDK::Params
{

// Function DEC_IsPlayerFalling.DEC_IsPlayerFalling_C.PerformConditionCheckAI
// 0x0030 (0x0030 - 0x0000)
struct DEC_IsPlayerFalling_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(DEC_IsPlayerFalling_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on DEC_IsPlayerFalling_C_PerformConditionCheckAI");
static_assert(sizeof(DEC_IsPlayerFalling_C_PerformConditionCheckAI) == 0x000030, "Wrong size on DEC_IsPlayerFalling_C_PerformConditionCheckAI");
static_assert(offsetof(DEC_IsPlayerFalling_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'DEC_IsPlayerFalling_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(DEC_IsPlayerFalling_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'DEC_IsPlayerFalling_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(DEC_IsPlayerFalling_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'DEC_IsPlayerFalling_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_IsPlayerFalling_C_PerformConditionCheckAI, CallFunc_GetPlayerPawn_ReturnValue) == 0x000018, "Member 'DEC_IsPlayerFalling_C_PerformConditionCheckAI::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(DEC_IsPlayerFalling_C_PerformConditionCheckAI, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000020, "Member 'DEC_IsPlayerFalling_C_PerformConditionCheckAI::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(DEC_IsPlayerFalling_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'DEC_IsPlayerFalling_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(DEC_IsPlayerFalling_C_PerformConditionCheckAI, CallFunc_IsFalling_ReturnValue) == 0x000029, "Member 'DEC_IsPlayerFalling_C_PerformConditionCheckAI::CallFunc_IsFalling_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_BreakableSharedLightPanel

#include "Basic.hpp"

#include "INTERACT_BreakableSharedLightPanel_classes.hpp"
#include "INTERACT_BreakableSharedLightPanel_parameters.hpp"


namespace SDK
{

// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.ExecuteUbergraph_INTERACT_BreakableSharedLightPanel
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_BreakableSharedLightPanel_C::ExecuteUbergraph_INTERACT_BreakableSharedLightPanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "ExecuteUbergraph_INTERACT_BreakableSharedLightPanel");

	Params::INTERACT_BreakableSharedLightPanel_C_ExecuteUbergraph_INTERACT_BreakableSharedLightPanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AINTERACT_BreakableSharedLightPanel_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_BreakableSharedLightPanel_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.CanTakeDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAttribDamageType*                DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOBJ_ImpactData_C*                ImpactData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakableSharedLightPanel_C::CanTakeDamage(class UAttribDamageType* DamageType, class UOBJ_ImpactData_C* ImpactData, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "CanTakeDamage");

	Params::INTERACT_BreakableSharedLightPanel_C_CanTakeDamage Parms{};

	Parms.DamageType = DamageType;
	Parms.ImpactData = ImpactData;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.OnDamageReceived
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAttribDamageType*                DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   HitFaceIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ImpactRadius                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakableSharedLightPanel_C::OnDamageReceived(class AActor* SourceActor, class UAttribDamageType* DamageType, int32 DamageValue, class UPrimitiveComponent* HitComponent, int32 HitFaceIndex, const struct FVector& HitLocation, const struct FVector& HitNormal, float ImpactRadius, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "OnDamageReceived");

	Params::INTERACT_BreakableSharedLightPanel_C_OnDamageReceived Parms{};

	Parms.SourceActor = SourceActor;
	Parms.DamageType = DamageType;
	Parms.DamageValue = DamageValue;
	Parms.HitComponent = HitComponent;
	Parms.HitFaceIndex = HitFaceIndex;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.ImpactRadius = ImpactRadius;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.GetLightComponent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ULightComponent*                  LightComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_BreakableSharedLightPanel_C::GetLightComponent(class ULightComponent** LightComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "GetLightComponent");

	Params::INTERACT_BreakableSharedLightPanel_C_GetLightComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LightComponent != nullptr)
		*LightComponent = Parms.LightComponent;
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.GetLightIndexFromComponent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USceneComponent*                  Component                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LightIndex                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_BreakableSharedLightPanel_C::GetLightIndexFromComponent(class USceneComponent* Component, int32* LightIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "GetLightIndexFromComponent");

	Params::INTERACT_BreakableSharedLightPanel_C_GetLightIndexFromComponent Parms{};

	Parms.Component = Component;

	UObject::ProcessEvent(Func, &Parms);

	if (LightIndex != nullptr)
		*LightIndex = Parms.LightIndex;
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.InitializeBreakableLightPanel
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_BreakableSharedLightPanel_C::InitializeBreakableLightPanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "InitializeBreakableLightPanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.ForceUpdateLightParameters
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ActivationState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakableSharedLightPanel_C::ForceUpdateLightParameters(bool ActivationState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "ForceUpdateLightParameters");

	Params::INTERACT_BreakableSharedLightPanel_C_ForceUpdateLightParameters Parms{};

	Parms.ActivationState = ActivationState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.TryDestroyLightComponent
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_BreakableSharedLightPanel_C::TryDestroyLightComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "TryDestroyLightComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.UpdateLightIntensity
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULightComponent*                  LightComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_BreakableSharedLightPanel_C::UpdateLightIntensity(class ULightComponent* LightComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "UpdateLightIntensity");

	Params::INTERACT_BreakableSharedLightPanel_C_UpdateLightIntensity Parms{};

	Parms.LightComponent = LightComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.SetLightIntensity
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULightComponent*                  LightComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LightIntensity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_BreakableSharedLightPanel_C::SetLightIntensity(class ULightComponent* LightComponent, float LightIntensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "SetLightIntensity");

	Params::INTERACT_BreakableSharedLightPanel_C_SetLightIntensity Parms{};

	Parms.LightComponent = LightComponent;
	Parms.LightIntensity = LightIntensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.SetFlickeringMeshParameter
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakableSharedLightPanel_C::SetFlickeringMeshParameter(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "SetFlickeringMeshParameter");

	Params::INTERACT_BreakableSharedLightPanel_C_SetFlickeringMeshParameter Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.UpdateMaterialLightIntensity
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             LightPanelGlassComponent                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ActivationState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakableSharedLightPanel_C::UpdateMaterialLightIntensity(class UStaticMeshComponent* LightPanelGlassComponent, bool ActivationState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "UpdateMaterialLightIntensity");

	Params::INTERACT_BreakableSharedLightPanel_C_UpdateMaterialLightIntensity Parms{};

	Parms.LightPanelGlassComponent = LightPanelGlassComponent;
	Parms.ActivationState = ActivationState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.OnLightPanelGlassBroken
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             LightPanelGlass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalVector                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakableSharedLightPanel_C::OnLightPanelGlassBroken(class UStaticMeshComponent* LightPanelGlass, class AActor* SourceActor, const struct FVector& NormalVector, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "OnLightPanelGlassBroken");

	Params::INTERACT_BreakableSharedLightPanel_C_OnLightPanelGlassBroken Parms{};

	Parms.LightPanelGlass = LightPanelGlass;
	Parms.SourceActor = SourceActor;
	Parms.NormalVector = std::move(NormalVector);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.OnUpdateLightVisibility
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ActivationState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakableSharedLightPanel_C::OnUpdateLightVisibility(bool ActivationState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "OnUpdateLightVisibility");

	Params::INTERACT_BreakableSharedLightPanel_C_OnUpdateLightVisibility Parms{};

	Parms.ActivationState = ActivationState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.OnActivationStateChanged
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OnBeginPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakableSharedLightPanel_C::OnActivationStateChanged(bool State, bool OnBeginPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "OnActivationStateChanged");

	Params::INTERACT_BreakableSharedLightPanel_C_OnActivationStateChanged Parms{};

	Parms.State = State;
	Parms.OnBeginPlay = OnBeginPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.SetShouldBeVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibleState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakableSharedLightPanel_C::SetShouldBeVisible(bool VisibleState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "SetShouldBeVisible");

	Params::INTERACT_BreakableSharedLightPanel_C_SetShouldBeVisible Parms{};

	Parms.VisibleState = VisibleState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.OnUpdateLightColor
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_BreakableSharedLightPanel_C::OnUpdateLightColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "OnUpdateLightColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.GetInteractDestroyed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakableSharedLightPanel_C::GetInteractDestroyed(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "GetInteractDestroyed");

	Params::INTERACT_BreakableSharedLightPanel_C_GetInteractDestroyed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakableSharedLightPanel.INTERACT_BreakableSharedLightPanel_C.HasBrokenAllLights
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakableSharedLightPanel_C::HasBrokenAllLights(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakableSharedLightPanel_C", "HasBrokenAllLights");

	Params::INTERACT_BreakableSharedLightPanel_C_HasBrokenAllLights Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BulletProjectile_Railgun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BulletProjectile_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BulletProjectile_Railgun.BulletProjectile_Railgun_C
// 0x0020 (0x0340 - 0x0320)
class ABulletProjectile_Railgun_C final : public ABulletProjectile_Base_C
{
public:
	class UNiagaraComponent*                      TrailFX;                                           // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentKillCount;                                  // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    RailgunMultiKillAchievementHandle;                 // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void CanPierceThroughActor(class AActor* Actor, bool* Result);
	void TryPierceThroughArmor(int32 ArmorValue, bool* Result);
	void ApplyDamageMod(class UAttribManagerComponent* AttribManager, class UOBJ_ImpactData_C* ImpactData, float FrameHitDeltaTime, struct FAttribDamageInstance* DamageInstance, class UAttribMod** DamageMod);
	void TryIncrementKillCount(class UAttribManagerComponent* AttribManager, const struct FAttribDamageInstance& DamageInstance);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BulletProjectile_Railgun_C">();
	}
	static class ABulletProjectile_Railgun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABulletProjectile_Railgun_C>();
	}
};
static_assert(alignof(ABulletProjectile_Railgun_C) == 0x000008, "Wrong alignment on ABulletProjectile_Railgun_C");
static_assert(sizeof(ABulletProjectile_Railgun_C) == 0x000340, "Wrong size on ABulletProjectile_Railgun_C");
static_assert(offsetof(ABulletProjectile_Railgun_C, TrailFX) == 0x000320, "Member 'ABulletProjectile_Railgun_C::TrailFX' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Railgun_C, CurrentKillCount) == 0x000328, "Member 'ABulletProjectile_Railgun_C::CurrentKillCount' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Railgun_C, RailgunMultiKillAchievementHandle) == 0x000330, "Member 'ABulletProjectile_Railgun_C::RailgunMultiKillAchievementHandle' has a wrong offset!");

}


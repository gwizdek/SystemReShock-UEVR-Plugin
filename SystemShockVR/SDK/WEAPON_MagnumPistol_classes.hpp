#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEAPON_MagnumPistol

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ITEM_ProjectileWeapon_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass WEAPON_MagnumPistol.WEAPON_MagnumPistol_C
// 0x01A0 (0x06F0 - 0x0550)
class UWEAPON_MagnumPistol_C final : public UITEM_ProjectileWeapon_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WEAPON_MagnumPistol_C;              // 0x0550(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsLaserSightActive;                                // 0x0558(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          WasLastShotTargetAcquired;                         // 0x0559(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasLaserSightFeature;                              // 0x055A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55B[0x5];                                      // 0x055B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LastLaserTargetActor;                              // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      LaserSightComponent;                               // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      LaserDotComponent;                                 // 0x0570(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          LaserSightFX;                                      // 0x0578(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          LaserDotFX;                                        // 0x05A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               TargetAcquiredSoundCue;                            // 0x05C8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               AlternateDischargeSoundCue;                        // 0x05F0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UForceFeedbackEffect>    TargetLockDischargeForceFeedback;                  // 0x0618(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               LaserSightOnSoundCue;                              // 0x0640(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               LaserSightOffSoundCue;                             // 0x0668(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         LaserSightTargetProgress;                          // 0x0690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_694[0x4];                                      // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         CachedSightLaserFX;                                // 0x0698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         CachedSightDotFX;                                  // 0x06A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              CachedTargetAcquiredSoundCue;                      // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LaserSightAcquireDuration;                         // 0x06B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastVisualDetectionTimestamp;                      // 0x06B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LaserSightSocketName;                              // 0x06B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ToggleLaserMessage;                                // 0x06C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class USoundCue*                              CachedAlternateDischargeSoundCue;                  // 0x06D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              CachedLaserSightOnSoundCue;                        // 0x06D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              CachedLaserSightOffSoundCue;                       // 0x06E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   CachedTargetLockForceFeedback;                     // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WEAPON_MagnumPistol(int32 EntryPoint);
	void StreamWeaponAssets();
	void OnLoaded_9B2E297A4AFBF37B24895BA5F6B916DC(class UObject* Loaded);
	void OnLoaded_0170C2FE491A018C0B59EDAF707EBA59(class UObject* Loaded);
	void OnLoaded_76AE236949D93883787F2B9B8ACCE612(class UObject* Loaded);
	void OnLoaded_CAEA8A9B4D8C012A38284A94B12400A6(class UObject* Loaded);
	void OnLoaded_158F1CD24F82FB7BE0F484A918DB786B(class UObject* Loaded);
	void OnLoaded_4F11A09449D36806B5153F99CD167E2D(class UObject* Loaded);
	void OnLoaded_1728849E46066522302C81AB380A5060(class UObject* Loaded);
	void FireProjectile(class AActor** FiredProjectile, struct FVector* Direction);
	void GetProjectileClass(class UClass** Result);
	void InitializeMagnumProjectile(class ABulletProjectile_MagnumRound_C* MagnumProjectile);
	void CycleCurrentMode(bool Previous, bool* Result);
	void CanToggleLaserSight(bool* Result);
	void CanAcquireTarget(class AActor* Actor, bool* Result);
	void TryToggleLaserSight(bool* Result);
	void OnTargetAcquired();
	void UpdateTargetLocator(bool IsLocatorEnabled, const struct FVector& TraceHitLocation, const struct FVector& TraceDirection, const struct FVector& TargetNormal, float TargetDistance);
	void TryActivateLaserSight(bool* Result);
	void TryDeactivateLaserSight(bool* Result);
	void EquipTick(float DeltaTime);
	void OnWeaponBecameActivatable(class APAWN_SystemShockCharacter_C* Character, bool ShowImmediately);
	void OnBecomeUnactivatable(bool* Result);
	void EVENT_OnEnergyDepleted();
	void TryDeactivateLaserDot();
	void TryCreateVisualEventForLaserSight(const struct FVector& EventLocation, const struct FVector& TraceDirection);
	void ReceiveAnimationMessage(const class FString& Message, bool* Result);
	void PlayDischargeSoundFX(float VolumeScale, float PitchScale);
	void PlayDischargeForceFeedback();
	void SetLaserActiveParameter(bool State);
	void SetLaserSightTargetProgress(float Progress);
	void SetHasLaserSightFeature(bool State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WEAPON_MagnumPistol_C">();
	}
	static class UWEAPON_MagnumPistol_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWEAPON_MagnumPistol_C>();
	}
};
static_assert(alignof(UWEAPON_MagnumPistol_C) == 0x000008, "Wrong alignment on UWEAPON_MagnumPistol_C");
static_assert(sizeof(UWEAPON_MagnumPistol_C) == 0x0006F0, "Wrong size on UWEAPON_MagnumPistol_C");
static_assert(offsetof(UWEAPON_MagnumPistol_C, UberGraphFrame_WEAPON_MagnumPistol_C) == 0x000550, "Member 'UWEAPON_MagnumPistol_C::UberGraphFrame_WEAPON_MagnumPistol_C' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, IsLaserSightActive) == 0x000558, "Member 'UWEAPON_MagnumPistol_C::IsLaserSightActive' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, WasLastShotTargetAcquired) == 0x000559, "Member 'UWEAPON_MagnumPistol_C::WasLastShotTargetAcquired' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, HasLaserSightFeature) == 0x00055A, "Member 'UWEAPON_MagnumPistol_C::HasLaserSightFeature' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, LastLaserTargetActor) == 0x000560, "Member 'UWEAPON_MagnumPistol_C::LastLaserTargetActor' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, LaserSightComponent) == 0x000568, "Member 'UWEAPON_MagnumPistol_C::LaserSightComponent' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, LaserDotComponent) == 0x000570, "Member 'UWEAPON_MagnumPistol_C::LaserDotComponent' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, LaserSightFX) == 0x000578, "Member 'UWEAPON_MagnumPistol_C::LaserSightFX' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, LaserDotFX) == 0x0005A0, "Member 'UWEAPON_MagnumPistol_C::LaserDotFX' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, TargetAcquiredSoundCue) == 0x0005C8, "Member 'UWEAPON_MagnumPistol_C::TargetAcquiredSoundCue' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, AlternateDischargeSoundCue) == 0x0005F0, "Member 'UWEAPON_MagnumPistol_C::AlternateDischargeSoundCue' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, TargetLockDischargeForceFeedback) == 0x000618, "Member 'UWEAPON_MagnumPistol_C::TargetLockDischargeForceFeedback' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, LaserSightOnSoundCue) == 0x000640, "Member 'UWEAPON_MagnumPistol_C::LaserSightOnSoundCue' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, LaserSightOffSoundCue) == 0x000668, "Member 'UWEAPON_MagnumPistol_C::LaserSightOffSoundCue' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, LaserSightTargetProgress) == 0x000690, "Member 'UWEAPON_MagnumPistol_C::LaserSightTargetProgress' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, CachedSightLaserFX) == 0x000698, "Member 'UWEAPON_MagnumPistol_C::CachedSightLaserFX' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, CachedSightDotFX) == 0x0006A0, "Member 'UWEAPON_MagnumPistol_C::CachedSightDotFX' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, CachedTargetAcquiredSoundCue) == 0x0006A8, "Member 'UWEAPON_MagnumPistol_C::CachedTargetAcquiredSoundCue' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, LaserSightAcquireDuration) == 0x0006B0, "Member 'UWEAPON_MagnumPistol_C::LaserSightAcquireDuration' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, LastVisualDetectionTimestamp) == 0x0006B4, "Member 'UWEAPON_MagnumPistol_C::LastVisualDetectionTimestamp' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, LaserSightSocketName) == 0x0006B8, "Member 'UWEAPON_MagnumPistol_C::LaserSightSocketName' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, ToggleLaserMessage) == 0x0006C0, "Member 'UWEAPON_MagnumPistol_C::ToggleLaserMessage' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, CachedAlternateDischargeSoundCue) == 0x0006D0, "Member 'UWEAPON_MagnumPistol_C::CachedAlternateDischargeSoundCue' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, CachedLaserSightOnSoundCue) == 0x0006D8, "Member 'UWEAPON_MagnumPistol_C::CachedLaserSightOnSoundCue' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, CachedLaserSightOffSoundCue) == 0x0006E0, "Member 'UWEAPON_MagnumPistol_C::CachedLaserSightOffSoundCue' has a wrong offset!");
static_assert(offsetof(UWEAPON_MagnumPistol_C, CachedTargetLockForceFeedback) == 0x0006E8, "Member 'UWEAPON_MagnumPistol_C::CachedTargetLockForceFeedback' has a wrong offset!");

}


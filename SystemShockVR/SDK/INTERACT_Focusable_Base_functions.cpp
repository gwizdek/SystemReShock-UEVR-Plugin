#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Focusable_Base

#include "Basic.hpp"

#include "INTERACT_Focusable_Base_classes.hpp"
#include "INTERACT_Focusable_Base_parameters.hpp"


namespace SDK
{

// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.ShouldFocusOnInteract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Focusable_Base_C::ShouldFocusOnInteract(class AController* Controller, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Focusable_Base_C", "ShouldFocusOnInteract");

	Params::INTERACT_Focusable_Base_C_ShouldFocusOnInteract Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.GetFocusWorldTransform
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor)

void AINTERACT_Focusable_Base_C::GetFocusWorldTransform(struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Focusable_Base_C", "GetFocusWorldTransform");

	Params::INTERACT_Focusable_Base_C_GetFocusWorldTransform Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.BeginFocusSequence
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            HackerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Focusable_Base_C::BeginFocusSequence(class APAWN_Hacker_Simple_C* HackerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Focusable_Base_C", "BeginFocusSequence");

	Params::INTERACT_Focusable_Base_C_BeginFocusSequence Parms{};

	Parms.HackerPawn = HackerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.TryBeginFocusInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            HackerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Focusable_Base_C::TryBeginFocusInteraction(class APAWN_Hacker_Simple_C* HackerPawn, class UPrimitiveComponent* CursorPrimitive, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Focusable_Base_C", "TryBeginFocusInteraction");

	Params::INTERACT_Focusable_Base_C_TryBeginFocusInteraction Parms{};

	Parms.HackerPawn = HackerPawn;
	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.TryFinishFocusInteraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            HackerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Focusable_Base_C::TryFinishFocusInteraction(class APAWN_Hacker_Simple_C* HackerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Focusable_Base_C", "TryFinishFocusInteraction");

	Params::INTERACT_Focusable_Base_C_TryFinishFocusInteraction Parms{};

	Parms.HackerPawn = HackerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.ResumeChannelingInteraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            HackerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Focusable_Base_C::ResumeChannelingInteraction(class APAWN_Hacker_Simple_C* HackerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Focusable_Base_C", "ResumeChannelingInteraction");

	Params::INTERACT_Focusable_Base_C_ResumeChannelingInteraction Parms{};

	Parms.HackerPawn = HackerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.CycleFocusedPrimitiveComponent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Vertical                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Previous                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Focusable_Base_C::CycleFocusedPrimitiveComponent(class UPrimitiveComponent* CursorPrimitive, bool Vertical, bool Previous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Focusable_Base_C", "CycleFocusedPrimitiveComponent");

	Params::INTERACT_Focusable_Base_C_CycleFocusedPrimitiveComponent Parms{};

	Parms.CursorPrimitive = CursorPrimitive;
	Parms.Vertical = Vertical;
	Parms.Previous = Previous;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.FocusOnPrimitiveComponent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              PrimitiveComponent                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Focusable_Base_C::FocusOnPrimitiveComponent(class UPrimitiveComponent* PrimitiveComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Focusable_Base_C", "FocusOnPrimitiveComponent");

	Params::INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent Parms{};

	Parms.PrimitiveComponent = PrimitiveComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.StopFocusingInternal
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Hacker_Simple_C*            HackerPawn                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Focusable_Base_C::StopFocusingInternal(class APAWN_Hacker_Simple_C* HackerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Focusable_Base_C", "StopFocusingInternal");

	Params::INTERACT_Focusable_Base_C_StopFocusingInternal Parms{};

	Parms.HackerPawn = HackerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.OnFinishedFocusing
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_Focusable_Base_C::OnFinishedFocusing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Focusable_Base_C", "OnFinishedFocusing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.StopChanneling
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           NewChannelingInteract                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Focusable_Base_C::StopChanneling(class AActor* NewChannelingInteract, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Focusable_Base_C", "StopChanneling");

	Params::INTERACT_Focusable_Base_C_StopChanneling Parms{};

	Parms.NewChannelingInteract = NewChannelingInteract;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.TryInteract
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractionType                    InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_InteractResults          InteractResults                                        (Parm, OutParm, HasGetValueTypeHash)

void AINTERACT_Focusable_Base_C::TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Focusable_Base_C", "TryInteract");

	Params::INTERACT_Focusable_Base_C_TryInteract Parms{};

	Parms.SourceActor = SourceActor;
	Parms.CursorPrimitive = CursorPrimitive;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractResults != nullptr)
		*InteractResults = std::move(Parms.InteractResults);
}

}


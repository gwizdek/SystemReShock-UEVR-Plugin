#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ELEVATOR_Freight

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "STRUC_ElevatorInfo_structs.hpp"
#include "STRUCT_LevelInfo_structs.hpp"


namespace SDK::Params
{

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.UpdateEmissiveStrength
// 0x0008 (0x0008 - 0x0000)
struct ELEVATOR_Freight_C_UpdateEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Freight_C_UpdateEmissiveStrength) == 0x000004, "Wrong alignment on ELEVATOR_Freight_C_UpdateEmissiveStrength");
static_assert(sizeof(ELEVATOR_Freight_C_UpdateEmissiveStrength) == 0x000008, "Wrong size on ELEVATOR_Freight_C_UpdateEmissiveStrength");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateEmissiveStrength, Scale) == 0x000000, "Member 'ELEVATOR_Freight_C_UpdateEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'ELEVATOR_Freight_C_UpdateEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.SetElevatorVisibility
// 0x0001 (0x0001 - 0x0000)
struct ELEVATOR_Freight_C_SetElevatorVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ELEVATOR_Freight_C_SetElevatorVisibility) == 0x000001, "Wrong alignment on ELEVATOR_Freight_C_SetElevatorVisibility");
static_assert(sizeof(ELEVATOR_Freight_C_SetElevatorVisibility) == 0x000001, "Wrong size on ELEVATOR_Freight_C_SetElevatorVisibility");
static_assert(offsetof(ELEVATOR_Freight_C_SetElevatorVisibility, VisibilityState) == 0x000000, "Member 'ELEVATOR_Freight_C_SetElevatorVisibility::VisibilityState' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.UpdateDoorLightVisibility
// 0x0040 (0x0040 - 0x0000)
struct ELEVATOR_Freight_C_UpdateDoorLightVisibility final
{
public:
	int32                                         DoorLightIndex;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DoorLightBits;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftRight_ReturnValue;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Freight_C_UpdateDoorLightVisibility) == 0x000008, "Wrong alignment on ELEVATOR_Freight_C_UpdateDoorLightVisibility");
static_assert(sizeof(ELEVATOR_Freight_C_UpdateDoorLightVisibility) == 0x000040, "Wrong size on ELEVATOR_Freight_C_UpdateDoorLightVisibility");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, DoorLightIndex) == 0x000000, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::DoorLightIndex' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, DoorLightBits) == 0x000004, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::DoorLightBits' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, Temp_int_Variable) == 0x000008, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, CallFunc_Array_Get_Item) == 0x000020, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, CallFunc_BitShiftLeft_ReturnValue) == 0x000028, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, CallFunc_And_IntInt_ReturnValue) == 0x00002C, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000030, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000034, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateDoorLightVisibility, CallFunc_BitShiftRight_ReturnValue) == 0x000038, "Member 'ELEVATOR_Freight_C_UpdateDoorLightVisibility::CallFunc_BitShiftRight_ReturnValue' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.UpdateRectLightIntensity
// 0x0034 (0x0034 - 0x0000)
struct ELEVATOR_Freight_C_UpdateRectLightIntensity final
{
public:
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CountBits_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Freight_C_UpdateRectLightIntensity) == 0x000004, "Wrong alignment on ELEVATOR_Freight_C_UpdateRectLightIntensity");
static_assert(sizeof(ELEVATOR_Freight_C_UpdateRectLightIntensity) == 0x000034, "Wrong size on ELEVATOR_Freight_C_UpdateRectLightIntensity");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_GetAttribValue_ReturnValue) == 0x000000, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_BitShiftLeft_ReturnValue) == 0x000004, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_And_IntInt_ReturnValue) == 0x000018, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_CountBits_ReturnValue) == 0x00001C, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_CountBits_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000020, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000028, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UpdateRectLightIntensity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'ELEVATOR_Freight_C_UpdateRectLightIntensity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.PlayGlassBreakEffects
// 0x0098 (0x0098 - 0x0000)
struct ELEVATOR_Freight_C_PlayGlassBreakEffects final
{
public:
	class UStaticMeshComponent*                   BrokenGlassComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDoorGlass;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         GlassIndex;                                        // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          DebrisVolume;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FRotator                               EffectsRotation;                                   // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                EffectsLocation;                                   // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        CallFunc_GetChildComponent_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_Select_Default;                             // 0x0068(0x0010)(NoDestructor)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Freight_C_PlayGlassBreakEffects) == 0x000008, "Wrong alignment on ELEVATOR_Freight_C_PlayGlassBreakEffects");
static_assert(sizeof(ELEVATOR_Freight_C_PlayGlassBreakEffects) == 0x000098, "Wrong size on ELEVATOR_Freight_C_PlayGlassBreakEffects");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, BrokenGlassComponent) == 0x000000, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::BrokenGlassComponent' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, IsDoorGlass) == 0x000008, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::IsDoorGlass' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, GlassIndex) == 0x00000C, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::GlassIndex' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, DebrisVolume) == 0x000010, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::DebrisVolume' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, EffectsRotation) == 0x000018, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::EffectsRotation' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, EffectsLocation) == 0x000024, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::EffectsLocation' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, K2Node_DynamicCast_AsGI_Single_Player) == 0x000038, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, Temp_bool_Variable) == 0x000041, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000042, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000044, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, CallFunc_GetChildComponent_ReturnValue) == 0x000050, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::CallFunc_GetChildComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, K2Node_DynamicCast_AsBox_Collision) == 0x000058, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000061, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, CallFunc_BooleanOR_ReturnValue) == 0x000062, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, CallFunc_Array_Find_ReturnValue) == 0x000064, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, K2Node_Select_Default) == 0x000068, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, CallFunc_GetComponentBounds_Origin) == 0x000078, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, CallFunc_GetComponentBounds_BoxExtent) == 0x000084, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_PlayGlassBreakEffects, CallFunc_GetComponentBounds_SphereRadius) == 0x000090, "Member 'ELEVATOR_Freight_C_PlayGlassBreakEffects::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.InitializeElevator
// 0x0030 (0x0030 - 0x0000)
struct ELEVATOR_Freight_C_InitializeElevator final
{
public:
	int32                                         GlassIndex;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ELEVATOR_Freight_C_InitializeElevator) == 0x000008, "Wrong alignment on ELEVATOR_Freight_C_InitializeElevator");
static_assert(sizeof(ELEVATOR_Freight_C_InitializeElevator) == 0x000030, "Wrong size on ELEVATOR_Freight_C_InitializeElevator");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevator, GlassIndex) == 0x000000, "Member 'ELEVATOR_Freight_C_InitializeElevator::GlassIndex' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevator, Temp_int_Array_Index_Variable) == 0x000004, "Member 'ELEVATOR_Freight_C_InitializeElevator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevator, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'ELEVATOR_Freight_C_InitializeElevator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevator, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ELEVATOR_Freight_C_InitializeElevator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevator, CallFunc_Array_Get_Item) == 0x000010, "Member 'ELEVATOR_Freight_C_InitializeElevator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevator, CallFunc_BitShiftLeft_ReturnValue) == 0x000018, "Member 'ELEVATOR_Freight_C_InitializeElevator::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevator, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'ELEVATOR_Freight_C_InitializeElevator::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevator, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ELEVATOR_Freight_C_InitializeElevator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevator, CallFunc_And_IntInt_ReturnValue) == 0x000024, "Member 'ELEVATOR_Freight_C_InitializeElevator::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevator, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'ELEVATOR_Freight_C_InitializeElevator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevator, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000029, "Member 'ELEVATOR_Freight_C_InitializeElevator::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.TryDamageGlass
// 0x00A8 (0x00A8 - 0x0000)
struct ELEVATOR_Freight_C_TryDamageGlass final
{
public:
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GlassIndex;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   HitMeshComponent;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          IsExplosiveDamage;                                 // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ELEVATOR_Freight_C_TryDamageGlass) == 0x000008, "Wrong alignment on ELEVATOR_Freight_C_TryDamageGlass");
static_assert(sizeof(ELEVATOR_Freight_C_TryDamageGlass) == 0x0000A8, "Wrong size on ELEVATOR_Freight_C_TryDamageGlass");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, DamageInstance) == 0x000000, "Member 'ELEVATOR_Freight_C_TryDamageGlass::DamageInstance' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, ImpactData) == 0x000028, "Member 'ELEVATOR_Freight_C_TryDamageGlass::ImpactData' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, GlassIndex) == 0x000030, "Member 'ELEVATOR_Freight_C_TryDamageGlass::GlassIndex' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, HitMeshComponent) == 0x000038, "Member 'ELEVATOR_Freight_C_TryDamageGlass::HitMeshComponent' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, IsExplosiveDamage) == 0x000040, "Member 'ELEVATOR_Freight_C_TryDamageGlass::IsExplosiveDamage' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, Temp_int_Array_Index_Variable) == 0x000044, "Member 'ELEVATOR_Freight_C_TryDamageGlass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Round_ReturnValue) == 0x00004C, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'ELEVATOR_Freight_C_TryDamageGlass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000054, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Array_Get_Item) == 0x000060, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_BitShiftLeft_ReturnValue) == 0x00006C, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Conv_IntToByte_ReturnValue) == 0x000079, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00007C, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_BitShiftLeft_ReturnValue_1) == 0x000080, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_BitShiftLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Or_IntInt_ReturnValue) == 0x000084, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000088, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000090, "Member 'ELEVATOR_Freight_C_TryDamageGlass::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'ELEVATOR_Freight_C_TryDamageGlass::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_Array_Find_ReturnValue) == 0x00009C, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000A0, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_TryDamageGlass, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A1, "Member 'ELEVATOR_Freight_C_TryDamageGlass::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.GetControlsMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct ELEVATOR_Freight_C_GetControlsMeshComponent final
{
public:
	class UStaticMeshComponent*                   MeshComponent;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Freight_C_GetControlsMeshComponent) == 0x000008, "Wrong alignment on ELEVATOR_Freight_C_GetControlsMeshComponent");
static_assert(sizeof(ELEVATOR_Freight_C_GetControlsMeshComponent) == 0x000008, "Wrong size on ELEVATOR_Freight_C_GetControlsMeshComponent");
static_assert(offsetof(ELEVATOR_Freight_C_GetControlsMeshComponent, MeshComponent) == 0x000000, "Member 'ELEVATOR_Freight_C_GetControlsMeshComponent::MeshComponent' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.InitializeElevatorControls
// 0x0260 (0x0260 - 0x0000)
struct ELEVATOR_Freight_C_InitializeElevatorControls final
{
public:
	class FString                                 DeckSymbol;                                        // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         ButtonIndex;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUC_ElevatorInfo                    ElevatorInfo;                                      // 0x0018(0x0038)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0018)()
	class FName                                   CallFunc_GetLevelNameByDeckSymbol_LevelName;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)(HasGetValueTypeHash)
	struct FSTRUCT_LevelInfo                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C0(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0190(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01E0(0x0018)()
	float                                         CallFunc_Conv_StringToFloat_ReturnValue;           // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  K2Node_MakeArray_Array_1;                          // 0x0210(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FSTRUC_ElevatorInfo                    CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0220(0x0038)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ELEVATOR_Freight_C_InitializeElevatorControls) == 0x000008, "Wrong alignment on ELEVATOR_Freight_C_InitializeElevatorControls");
static_assert(sizeof(ELEVATOR_Freight_C_InitializeElevatorControls) == 0x000260, "Wrong size on ELEVATOR_Freight_C_InitializeElevatorControls");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, DeckSymbol) == 0x000000, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::DeckSymbol' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, ButtonIndex) == 0x000010, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::ButtonIndex' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, ElevatorInfo) == 0x000018, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::ElevatorInfo' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, Temp_int_Variable) == 0x000050, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, Temp_int_Variable_1) == 0x000054, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000058, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, CallFunc_GetLevelNameByDeckSymbol_LevelName) == 0x000078, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::CallFunc_GetLevelNameByDeckSymbol_LevelName' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C0, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000188, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, CallFunc_Add_IntInt_ReturnValue_1) == 0x00018C, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, K2Node_MakeStruct_FormatArgumentData_1) == 0x000190, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, K2Node_MakeArray_Array) == 0x0001D0, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, CallFunc_Format_ReturnValue) == 0x0001E0, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, CallFunc_Conv_StringToFloat_ReturnValue) == 0x0001F8, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::CallFunc_Conv_StringToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, K2Node_Select_Default) == 0x000200, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, K2Node_MakeArray_Array_1) == 0x000210, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000220, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_InitializeElevatorControls, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000258, "Member 'ELEVATOR_Freight_C_InitializeElevatorControls::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct ELEVATOR_Freight_C_UserConstructionScript final
{
public:
	TArray<class USpotLightComponent*>            K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(ELEVATOR_Freight_C_UserConstructionScript) == 0x000008, "Wrong alignment on ELEVATOR_Freight_C_UserConstructionScript");
static_assert(sizeof(ELEVATOR_Freight_C_UserConstructionScript) == 0x000020, "Wrong size on ELEVATOR_Freight_C_UserConstructionScript");
static_assert(offsetof(ELEVATOR_Freight_C_UserConstructionScript, K2Node_MakeArray_Array) == 0x000000, "Member 'ELEVATOR_Freight_C_UserConstructionScript::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_UserConstructionScript, K2Node_MakeArray_Array_1) == 0x000010, "Member 'ELEVATOR_Freight_C_UserConstructionScript::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.OnLoaded_0646D1694E49FA402640A8938BC55B31
// 0x0008 (0x0008 - 0x0000)
struct ELEVATOR_Freight_C_OnLoaded_0646D1694E49FA402640A8938BC55B31 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Freight_C_OnLoaded_0646D1694E49FA402640A8938BC55B31) == 0x000008, "Wrong alignment on ELEVATOR_Freight_C_OnLoaded_0646D1694E49FA402640A8938BC55B31");
static_assert(sizeof(ELEVATOR_Freight_C_OnLoaded_0646D1694E49FA402640A8938BC55B31) == 0x000008, "Wrong size on ELEVATOR_Freight_C_OnLoaded_0646D1694E49FA402640A8938BC55B31");
static_assert(offsetof(ELEVATOR_Freight_C_OnLoaded_0646D1694E49FA402640A8938BC55B31, Loaded) == 0x000000, "Member 'ELEVATOR_Freight_C_OnLoaded_0646D1694E49FA402640A8938BC55B31::Loaded' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.AsyncPlayGlassBreakParticleEffects
// 0x001C (0x001C - 0x0000)
struct ELEVATOR_Freight_C_AsyncPlayGlassBreakParticleEffects final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsDoorGlass;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ELEVATOR_Freight_C_AsyncPlayGlassBreakParticleEffects) == 0x000004, "Wrong alignment on ELEVATOR_Freight_C_AsyncPlayGlassBreakParticleEffects");
static_assert(sizeof(ELEVATOR_Freight_C_AsyncPlayGlassBreakParticleEffects) == 0x00001C, "Wrong size on ELEVATOR_Freight_C_AsyncPlayGlassBreakParticleEffects");
static_assert(offsetof(ELEVATOR_Freight_C_AsyncPlayGlassBreakParticleEffects, Location) == 0x000000, "Member 'ELEVATOR_Freight_C_AsyncPlayGlassBreakParticleEffects::Location' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_AsyncPlayGlassBreakParticleEffects, Rotation) == 0x00000C, "Member 'ELEVATOR_Freight_C_AsyncPlayGlassBreakParticleEffects::Rotation' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_AsyncPlayGlassBreakParticleEffects, IsDoorGlass) == 0x000018, "Member 'ELEVATOR_Freight_C_AsyncPlayGlassBreakParticleEffects::IsDoorGlass' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.BndEvt__ELEVATOR_Freight_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct ELEVATOR_Freight_C_BndEvt__ELEVATOR_Freight_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                UserParams;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ELEVATOR_Freight_C_BndEvt__ELEVATOR_Freight_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature) == 0x000008, "Wrong alignment on ELEVATOR_Freight_C_BndEvt__ELEVATOR_Freight_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature");
static_assert(sizeof(ELEVATOR_Freight_C_BndEvt__ELEVATOR_Freight_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature) == 0x000038, "Wrong size on ELEVATOR_Freight_C_BndEvt__ELEVATOR_Freight_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature");
static_assert(offsetof(ELEVATOR_Freight_C_BndEvt__ELEVATOR_Freight_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature, OtherActor) == 0x000000, "Member 'ELEVATOR_Freight_C_BndEvt__ELEVATOR_Freight_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_BndEvt__ELEVATOR_Freight_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature, DamageInstance) == 0x000008, "Member 'ELEVATOR_Freight_C_BndEvt__ELEVATOR_Freight_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature::DamageInstance' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_BndEvt__ELEVATOR_Freight_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature, UserParams) == 0x000030, "Member 'ELEVATOR_Freight_C_BndEvt__ELEVATOR_Freight_COMP_AttribManager_K2Node_ComponentBoundEvent_1_OnDamageSignature__DelegateSignature::UserParams' has a wrong offset!");

// Function ELEVATOR_Freight.ELEVATOR_Freight_C.ExecuteUbergraph_ELEVATOR_Freight
// 0x00C8 (0x00C8 - 0x0000)
struct ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  K2Node_ComponentBoundEvent_DamageInstance;         // 0x0010(0x0028)()
	class UObject*                                K2Node_ComponentBoundEvent_UserParams;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_ImpactData_C*                      K2Node_DynamicCast_AsOBJ_Impact_Data;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsDoorGlass;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight) == 0x000008, "Wrong alignment on ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight");
static_assert(sizeof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight) == 0x0000C8, "Wrong size on ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, EntryPoint) == 0x000000, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::EntryPoint' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_ComponentBoundEvent_OtherActor) == 0x000008, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_ComponentBoundEvent_DamageInstance) == 0x000010, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_ComponentBoundEvent_DamageInstance' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_ComponentBoundEvent_UserParams) == 0x000038, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_ComponentBoundEvent_UserParams' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, Temp_bool_Variable) == 0x000040, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_DynamicCast_AsOBJ_Impact_Data) == 0x000048, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_DynamicCast_AsOBJ_Impact_Data' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, Temp_float_Variable) == 0x000054, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, Temp_float_Variable_1) == 0x000058, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_CustomEvent_Location) == 0x00005C, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_CustomEvent_Rotation) == 0x000068, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_CustomEvent_IsDoorGlass) == 0x000074, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_CustomEvent_IsDoorGlass' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_Select_Default) == 0x000078, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, Temp_object_Variable) == 0x000080, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, CallFunc_MakeVector_ReturnValue) == 0x000088, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_DynamicCast_AsNiagara_System) == 0x000098, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_CustomEvent_Loaded) == 0x0000A8, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0000B0, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'ELEVATOR_Freight_C_ExecuteUbergraph_ELEVATOR_Freight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}


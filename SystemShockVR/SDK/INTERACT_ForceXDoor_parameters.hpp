#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_ForceXDoor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_ForceXDoor.INTERACT_ForceXDoor_C.ExecuteUbergraph_INTERACT_ForceXDoor
// 0x0078 (0x0078 - 0x0000)
struct INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_SourceActor;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor) == 0x000008, "Wrong alignment on INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor");
static_assert(sizeof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor) == 0x000078, "Wrong size on INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, EntryPoint) == 0x000000, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, K2Node_Event_SourceActor) == 0x000010, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::K2Node_Event_SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000028, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000030, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, K2Node_DynamicCast_AsGI_Single_Player) == 0x000048, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, CallFunc_GetGameInstance_ReturnValue_1) == 0x000058, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000060, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00006C, "Member 'INTERACT_ForceXDoor_C_ExecuteUbergraph_INTERACT_ForceXDoor::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");

// Function INTERACT_ForceXDoor.INTERACT_ForceXDoor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_ForceXDoor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceXDoor_C_ReceiveTick) == 0x000004, "Wrong alignment on INTERACT_ForceXDoor_C_ReceiveTick");
static_assert(sizeof(INTERACT_ForceXDoor_C_ReceiveTick) == 0x000004, "Wrong size on INTERACT_ForceXDoor_C_ReceiveTick");
static_assert(offsetof(INTERACT_ForceXDoor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'INTERACT_ForceXDoor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function INTERACT_ForceXDoor.INTERACT_ForceXDoor_C.OpenDoor
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_ForceXDoor_C_OpenDoor final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceXDoor_C_OpenDoor) == 0x000008, "Wrong alignment on INTERACT_ForceXDoor_C_OpenDoor");
static_assert(sizeof(INTERACT_ForceXDoor_C_OpenDoor) == 0x000008, "Wrong size on INTERACT_ForceXDoor_C_OpenDoor");
static_assert(offsetof(INTERACT_ForceXDoor_C_OpenDoor, SourceActor) == 0x000000, "Member 'INTERACT_ForceXDoor_C_OpenDoor::SourceActor' has a wrong offset!");

// Function INTERACT_ForceXDoor.INTERACT_ForceXDoor_C.IsSafeToClose
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_ForceXDoor_C_IsSafeToClose final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSafeToClose_Result;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceXDoor_C_IsSafeToClose) == 0x000008, "Wrong alignment on INTERACT_ForceXDoor_C_IsSafeToClose");
static_assert(sizeof(INTERACT_ForceXDoor_C_IsSafeToClose) == 0x000018, "Wrong size on INTERACT_ForceXDoor_C_IsSafeToClose");
static_assert(offsetof(INTERACT_ForceXDoor_C_IsSafeToClose, Result) == 0x000000, "Member 'INTERACT_ForceXDoor_C_IsSafeToClose::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_IsSafeToClose, CallFunc_IsSafeToClose_Result) == 0x000001, "Member 'INTERACT_ForceXDoor_C_IsSafeToClose::CallFunc_IsSafeToClose_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_IsSafeToClose, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_ForceXDoor_C_IsSafeToClose::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_IsSafeToClose, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000010, "Member 'INTERACT_ForceXDoor_C_IsSafeToClose::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_IsSafeToClose, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'INTERACT_ForceXDoor_C_IsSafeToClose::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_IsSafeToClose, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'INTERACT_ForceXDoor_C_IsSafeToClose::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceXDoor.INTERACT_ForceXDoor_C.UpdateMaterial
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_ForceXDoor_C_UpdateMaterial final
{
public:
	float                                         GlowProgress;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LaserProgress;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTimeInState;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActiveMontageDuration_Duration;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeFloatDivide_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_1;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_2;                       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue_3;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Ease_ReturnValue_4;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceXDoor_C_UpdateMaterial) == 0x000004, "Wrong alignment on INTERACT_ForceXDoor_C_UpdateMaterial");
static_assert(sizeof(INTERACT_ForceXDoor_C_UpdateMaterial) == 0x000058, "Wrong size on INTERACT_ForceXDoor_C_UpdateMaterial");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, GlowProgress) == 0x000000, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::GlowProgress' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, LaserProgress) == 0x000004, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::LaserProgress' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, ElapsedTimeInState) == 0x000008, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::ElapsedTimeInState' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x00000D, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_GetActiveMontageDuration_Duration) == 0x000010, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_GetActiveMontageDuration_Duration' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_SafeFloatDivide_ReturnValue) == 0x000018, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_SafeFloatDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00001C, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000028, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002C, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002D, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_BooleanOR_ReturnValue) == 0x00002E, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_FClamp_ReturnValue_1) == 0x000034, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, Temp_bool_Variable) == 0x000038, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_Ease_ReturnValue) == 0x00003C, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, K2Node_Select_Default) == 0x000040, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_Ease_ReturnValue_1) == 0x000044, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_Ease_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_Ease_ReturnValue_2) == 0x000048, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_Ease_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_Ease_ReturnValue_3) == 0x00004C, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_Ease_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateMaterial, CallFunc_Ease_ReturnValue_4) == 0x000054, "Member 'INTERACT_ForceXDoor_C_UpdateMaterial::CallFunc_Ease_ReturnValue_4' has a wrong offset!");

// Function INTERACT_ForceXDoor.INTERACT_ForceXDoor_C.UpdateAnimBP
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_ForceXDoor_C_UpdateAnimBP final
{
public:
	float                                         CallFunc_GetActiveMontageDuration_Duration;        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_ForceXDoor_C*                   K2Node_DynamicCast_AsAnim_BP_Force_XDoor;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_ForceXDoor_C*                   K2Node_DynamicCast_AsAnim_BP_Force_XDoor_1;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceXDoor_C_UpdateAnimBP) == 0x000008, "Wrong alignment on INTERACT_ForceXDoor_C_UpdateAnimBP");
static_assert(sizeof(INTERACT_ForceXDoor_C_UpdateAnimBP) == 0x000038, "Wrong size on INTERACT_ForceXDoor_C_UpdateAnimBP");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateAnimBP, CallFunc_GetActiveMontageDuration_Duration) == 0x000000, "Member 'INTERACT_ForceXDoor_C_UpdateAnimBP::CallFunc_GetActiveMontageDuration_Duration' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateAnimBP, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_ForceXDoor_C_UpdateAnimBP::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateAnimBP, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000010, "Member 'INTERACT_ForceXDoor_C_UpdateAnimBP::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateAnimBP, K2Node_DynamicCast_AsAnim_BP_Force_XDoor) == 0x000018, "Member 'INTERACT_ForceXDoor_C_UpdateAnimBP::K2Node_DynamicCast_AsAnim_BP_Force_XDoor' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateAnimBP, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_ForceXDoor_C_UpdateAnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateAnimBP, K2Node_DynamicCast_AsAnim_BP_Force_XDoor_1) == 0x000028, "Member 'INTERACT_ForceXDoor_C_UpdateAnimBP::K2Node_DynamicCast_AsAnim_BP_Force_XDoor_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateAnimBP, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'INTERACT_ForceXDoor_C_UpdateAnimBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function INTERACT_ForceXDoor.INTERACT_ForceXDoor_C.EVENT_OnStateFinished
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ForceXDoor_C_EVENT_OnStateFinished final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceXDoor_C_EVENT_OnStateFinished) == 0x000001, "Wrong alignment on INTERACT_ForceXDoor_C_EVENT_OnStateFinished");
static_assert(sizeof(INTERACT_ForceXDoor_C_EVENT_OnStateFinished) == 0x000001, "Wrong size on INTERACT_ForceXDoor_C_EVENT_OnStateFinished");
static_assert(offsetof(INTERACT_ForceXDoor_C_EVENT_OnStateFinished, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'INTERACT_ForceXDoor_C_EVENT_OnStateFinished::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceXDoor.INTERACT_ForceXDoor_C.GetActiveMontageDuration
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_ForceXDoor_C_GetActiveMontageDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ActiveMontage;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceXDoor_C_GetActiveMontageDuration) == 0x000008, "Wrong alignment on INTERACT_ForceXDoor_C_GetActiveMontageDuration");
static_assert(sizeof(INTERACT_ForceXDoor_C_GetActiveMontageDuration) == 0x000028, "Wrong size on INTERACT_ForceXDoor_C_GetActiveMontageDuration");
static_assert(offsetof(INTERACT_ForceXDoor_C_GetActiveMontageDuration, Duration) == 0x000000, "Member 'INTERACT_ForceXDoor_C_GetActiveMontageDuration::Duration' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_GetActiveMontageDuration, ActiveMontage) == 0x000008, "Member 'INTERACT_ForceXDoor_C_GetActiveMontageDuration::ActiveMontage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_GetActiveMontageDuration, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'INTERACT_ForceXDoor_C_GetActiveMontageDuration::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_GetActiveMontageDuration, CallFunc_GetPlayLength_ReturnValue) == 0x000014, "Member 'INTERACT_ForceXDoor_C_GetActiveMontageDuration::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_GetActiveMontageDuration, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'INTERACT_ForceXDoor_C_GetActiveMontageDuration::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_GetActiveMontageDuration, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000020, "Member 'INTERACT_ForceXDoor_C_GetActiveMontageDuration::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceXDoor.INTERACT_ForceXDoor_C.UpdateDoorEmissiveStrength
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Strength;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateDoorEmissiveStrength_Strength;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength");
static_assert(sizeof(INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength) == 0x000010, "Wrong size on INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength, Strength) == 0x000004, "Member 'INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength::Strength' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength, CallFunc_UpdateDoorEmissiveStrength_Strength) == 0x000008, "Member 'INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength::CallFunc_UpdateDoorEmissiveStrength_Strength' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength, CallFunc_Lerp_ReturnValue) == 0x00000C, "Member 'INTERACT_ForceXDoor_C_UpdateDoorEmissiveStrength::CallFunc_Lerp_ReturnValue' has a wrong offset!");

}


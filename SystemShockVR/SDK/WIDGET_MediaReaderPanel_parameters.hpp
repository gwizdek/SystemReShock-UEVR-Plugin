#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_MediaReaderPanel

#include "Basic.hpp"

#include "STRUCT_KeycodeSettings_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_MissionDifficultySettings_structs.hpp"
#include "STRUCT_MediaObject_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "STRUCT_LevelInfo_structs.hpp"
#include "STRUCT_NarrativeSpeakers_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.ExecuteUbergraph_WIDGET_MediaReaderPanel
// 0x0158 (0x0158 - 0x0000)
struct WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_ComponentBoundEvent_Geometry_1;             // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_ComponentBoundEvent_InputEvent_1;           // 0x0040(0x0070)()
	struct FGeometry                              K2Node_ComponentBoundEvent_Geometry;               // 0x00B0(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_ComponentBoundEvent_InputEvent;             // 0x00E8(0x0070)()
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel) == 0x000008, "Wrong alignment on WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel) == 0x000158, "Wrong size on WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel, EntryPoint) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel, K2Node_ComponentBoundEvent_Geometry_1) == 0x000004, "Member 'WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel::K2Node_ComponentBoundEvent_Geometry_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel, K2Node_ComponentBoundEvent_InputEvent_1) == 0x000040, "Member 'WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel::K2Node_ComponentBoundEvent_InputEvent_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel, K2Node_ComponentBoundEvent_Geometry) == 0x0000B0, "Member 'WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel::K2Node_ComponentBoundEvent_Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel, K2Node_ComponentBoundEvent_InputEvent) == 0x0000E8, "Member 'WIDGET_MediaReaderPanel_C_ExecuteUbergraph_WIDGET_MediaReaderPanel::K2Node_ComponentBoundEvent_InputEvent' has a wrong offset!");

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InputEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, Geometry) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, InputEvent) == 0x000038, "Member 'WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_2_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::InputEvent' has a wrong offset!");

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InputEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, Geometry) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, InputEvent) == 0x000038, "Member 'WIDGET_MediaReaderPanel_C_BndEvt__WIDGET_MediaReaderPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::InputEvent' has a wrong offset!");

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.InitializeReaderPanel
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_MediaReaderPanel_C_InitializeReaderPanel final
{
public:
	class UWIDGET_PlayerHUD_C*                    PlayerHUD_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MediaPanel_C*                   MediaPanel_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_InitializeReaderPanel) == 0x000008, "Wrong alignment on WIDGET_MediaReaderPanel_C_InitializeReaderPanel");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_InitializeReaderPanel) == 0x000018, "Wrong size on WIDGET_MediaReaderPanel_C_InitializeReaderPanel");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_InitializeReaderPanel, PlayerHUD_0) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_InitializeReaderPanel::PlayerHUD_0' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_InitializeReaderPanel, MediaPanel_0) == 0x000008, "Member 'WIDGET_MediaReaderPanel_C_InitializeReaderPanel::MediaPanel_0' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_InitializeReaderPanel, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'WIDGET_MediaReaderPanel_C_InitializeReaderPanel::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.SetMediaReaderData
// 0x0620 (0x0620 - 0x0000)
struct WIDGET_MediaReaderPanel_C_SetMediaReaderData final
{
public:
	class UITEM_MediaBase_C*                      MediaItem_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitFrameRate;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitColumns;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitRows;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    Level;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, NoDestructor)
	TSoftObjectPtr<class UTexture2D>              Portrait;                                          // 0x0028(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class FText                                   Surname;                                           // 0x0050(0x0018)(Edit, BlueprintVisible)
	class FText                                   Name_0;                                            // 0x0068(0x0018)(Edit, BlueprintVisible)
	struct FDateTime                              Date;                                              // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Transcription;                                     // 0x0088(0x0018)(Edit, BlueprintVisible)
	class FText                                   Subject;                                           // 0x00A0(0x0018)(Edit, BlueprintVisible)
	struct FDataTableRowHandle                    Speaker;                                           // 0x00B8(0x0010)(Edit, BlueprintVisible, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LevelInfo                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x00E0(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01B8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01D0(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0210(0x0040)(HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0260(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0270(0x0018)()
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0288(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0298(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x02D8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0318(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetMinute_ReturnValue;                    // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32C[0x4];                                      // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0330(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0348(0x0040)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x0388(0x0018)(ConstParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x03A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x03B0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x03C8(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHour_ReturnValue;                      // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x03E8(0x0040)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0428(0x0018)()
	class FText                                   CallFunc_AsDate_DateTime_ReturnValue;              // 0x0440(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0458(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0498(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x04D8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetFormattedNoteText_ResultText;          // 0x04E8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0500(0x0018)()
	class FText                                   CallFunc_GetFormattedLogText_ResultText;           // 0x0518(0x0018)()
	struct FSTRUCT_NarrativeSpeakers              CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0530(0x0068)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0599(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x059A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59B[0x5];                                      // 0x059B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    CallFunc_GetFemaleVersionOfSubtitle_MediaDataStruct; // 0x05A0(0x0080)(HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_SetMediaReaderData) == 0x000008, "Wrong alignment on WIDGET_MediaReaderPanel_C_SetMediaReaderData");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_SetMediaReaderData) == 0x000620, "Wrong size on WIDGET_MediaReaderPanel_C_SetMediaReaderData");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, MediaItem_0) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::MediaItem_0' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, PortraitFrameRate) == 0x000008, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::PortraitFrameRate' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, PortraitColumns) == 0x00000C, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::PortraitColumns' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, PortraitRows) == 0x000010, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::PortraitRows' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, Level) == 0x000018, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::Level' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, Portrait) == 0x000028, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::Portrait' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, Surname) == 0x000050, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::Surname' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, Name_0) == 0x000068, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::Name_0' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, Date) == 0x000080, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::Date' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, Transcription) == 0x000088, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::Transcription' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, Subject) == 0x0000A0, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::Subject' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, Speaker) == 0x0000B8, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::Speaker' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, Temp_bool_Variable) == 0x0000C8, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, Temp_bool_Variable_1) == 0x0000C9, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeStruct_Margin) == 0x0000CC, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000E0, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001A8, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0001B0, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_Conv_StringToText_ReturnValue) == 0x0001B8, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeStruct_FormatArgumentData) == 0x0001D0, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeStruct_FormatArgumentData_1) == 0x000210, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeStruct_Margin_1) == 0x000250, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeArray_Array) == 0x000260, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_Format_ReturnValue) == 0x000270, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000288, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_TextIsEmpty_ReturnValue) == 0x000290, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeStruct_FormatArgumentData_2) == 0x000298, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeStruct_FormatArgumentData_3) == 0x0002D8, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeArray_Array_1) == 0x000318, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_GetMinute_ReturnValue) == 0x000328, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_GetMinute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_Format_ReturnValue_1) == 0x000330, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeStruct_FormatArgumentData_4) == 0x000348, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_Select_Default) == 0x000388, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeArray_Array_2) == 0x0003A0, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_Conv_IntToText_ReturnValue) == 0x0003B0, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_Format_ReturnValue_2) == 0x0003C8, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0003E0, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_GetHour_ReturnValue) == 0x0003E4, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_GetHour_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeStruct_FormatArgumentData_5) == 0x0003E8, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_Select_Default_1) == 0x000428, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_AsDate_DateTime_ReturnValue) == 0x000440, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_AsDate_DateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeStruct_FormatArgumentData_6) == 0x000458, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeStruct_FormatArgumentData_7) == 0x000498, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, K2Node_MakeArray_Array_3) == 0x0004D8, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_GetFormattedNoteText_ResultText) == 0x0004E8, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_GetFormattedNoteText_ResultText' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_Format_ReturnValue_3) == 0x000500, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_GetFormattedLogText_ResultText) == 0x000518, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_GetFormattedLogText_ResultText' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000530, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000598, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000599, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00059A, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaReaderData, CallFunc_GetFemaleVersionOfSubtitle_MediaDataStruct) == 0x0005A0, "Member 'WIDGET_MediaReaderPanel_C_SetMediaReaderData::CallFunc_GetFemaleVersionOfSubtitle_MediaDataStruct' has a wrong offset!");

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.SetMediaTypeIcon
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MediaReaderPanel_C_SetMediaTypeIcon final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_SetMediaTypeIcon) == 0x000001, "Wrong alignment on WIDGET_MediaReaderPanel_C_SetMediaTypeIcon");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_SetMediaTypeIcon) == 0x000001, "Wrong size on WIDGET_MediaReaderPanel_C_SetMediaTypeIcon");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaTypeIcon, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_SetMediaTypeIcon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.SetMediaPortrait
// 0x0090 (0x0090 - 0x0000)
struct WIDGET_MediaReaderPanel_C_SetMediaPortrait final
{
public:
	TSoftObjectPtr<class UTexture2D>              PortraitTexture;                                   // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         PortraitRowCount;                                  // 0x0028(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitColumnCount;                               // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PortraitFrameRate;                                 // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x1];                                       // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue_2;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_3;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_SetMediaPortrait) == 0x000008, "Wrong alignment on WIDGET_MediaReaderPanel_C_SetMediaPortrait");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_SetMediaPortrait) == 0x000090, "Wrong size on WIDGET_MediaReaderPanel_C_SetMediaPortrait");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, PortraitTexture) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::PortraitTexture' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, PortraitRowCount) == 0x000028, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::PortraitRowCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, PortraitColumnCount) == 0x00002C, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::PortraitColumnCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, PortraitFrameRate) == 0x000030, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::PortraitFrameRate' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, Temp_object_Variable) == 0x000038, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000040, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, K2Node_DynamicCast_AsTexture_2D) == 0x000048, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000051, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_IsValid_ReturnValue) == 0x000052, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_Multiply_IntInt_ReturnValue) == 0x000054, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_Max_ReturnValue) == 0x000058, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_Max_ReturnValue_1) == 0x00005C, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000060, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000064, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000068, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, Temp_bool_Variable) == 0x00006C, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_Max_ReturnValue_2) == 0x000070, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_Max_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, K2Node_Select_Default) == 0x000078, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000080, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_Max_ReturnValue_3) == 0x000084, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_Max_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_SetMediaPortrait, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000088, "Member 'WIDGET_MediaReaderPanel_C_SetMediaPortrait::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.ToggleInteractivity
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MediaReaderPanel_C_ToggleInteractivity final
{
public:
	bool                                          IsInteractive;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_ToggleInteractivity) == 0x000001, "Wrong alignment on WIDGET_MediaReaderPanel_C_ToggleInteractivity");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_ToggleInteractivity) == 0x000001, "Wrong size on WIDGET_MediaReaderPanel_C_ToggleInteractivity");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_ToggleInteractivity, IsInteractive) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_ToggleInteractivity::IsInteractive' has a wrong offset!");

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.GetFormattedNoteText
// 0x0188 (0x0188 - 0x0000)
struct WIDGET_MediaReaderPanel_C_GetFormattedNoteText final
{
public:
	class FText                                   InputText;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ResultText;                                        // 0x0018(0x0018)(Parm, OutParm)
	class FString                                 CodeRowString;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 ResultString;                                      // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CodeName;                                          // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Keycode;                                           // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RightCount;                                        // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CloseBraceIndex;                                   // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OpenBraceIndex;                                    // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 NoteString;                                        // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindSubstring_ReturnValue;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_KeycodeSettings                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MissionDifficultySettings      CallFunc_GetMissionDifficultySettings_Settings;    // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00C8(0x0018)()
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUniqueRandomKeycode_Keycode;           // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Mid_ReturnValue;                          // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue_1;                        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Right_ReturnValue;                        // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindSubstring_ReturnValue_1;              // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText) == 0x000008, "Wrong alignment on WIDGET_MediaReaderPanel_C_GetFormattedNoteText");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText) == 0x000188, "Wrong size on WIDGET_MediaReaderPanel_C_GetFormattedNoteText");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, InputText) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::InputText' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, ResultText) == 0x000018, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::ResultText' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CodeRowString) == 0x000030, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CodeRowString' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, ResultString) == 0x000040, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::ResultString' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CodeName) == 0x000050, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CodeName' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, Keycode) == 0x000058, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::Keycode' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, RightCount) == 0x00005C, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::RightCount' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CloseBraceIndex) == 0x000060, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CloseBraceIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, OpenBraceIndex) == 0x000064, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::OpenBraceIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, NoteString) == 0x000068, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::NoteString' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, GameInstance) == 0x000078, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::GameInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Conv_TextToString_ReturnValue) == 0x000080, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000090, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_FindSubstring_ReturnValue) == 0x000094, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_FindSubstring_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_GetDataTableRowFromName_OutRow) == 0x000098, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A0, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A8, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B8, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_GetMissionDifficultySettings_Settings) == 0x0000BC, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_GetMissionDifficultySettings_Settings' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Conv_StringToText_ReturnValue) == 0x0000C8, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_GetGameInstance_ReturnValue) == 0x0000E0, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000E8, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_GetUniqueRandomKeycode_Keycode) == 0x0000F4, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_GetUniqueRandomKeycode_Keycode' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Len_ReturnValue) == 0x0000F8, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000FC, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Add_IntInt_ReturnValue) == 0x000100, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000104, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000108, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Mid_ReturnValue) == 0x000110, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Mid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_IsValid_ReturnValue) == 0x000120, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Conv_StringToName_ReturnValue) == 0x000124, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Len_ReturnValue_1) == 0x00012C, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Len_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000130, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Right_ReturnValue) == 0x000138, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000148, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Left_ReturnValue) == 0x000150, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Concat_StrStr_ReturnValue) == 0x000160, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_FindSubstring_ReturnValue_1) == 0x000170, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_FindSubstring_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedNoteText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000178, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedNoteText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.GetFormattedLogText
// 0x0140 (0x0140 - 0x0000)
struct WIDGET_MediaReaderPanel_C_GetFormattedLogText final
{
public:
	class FText                                   InputText;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   ResultText;                                        // 0x0018(0x0018)(Parm, OutParm)
	class FString                                 BuiltString;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          SkipChar;                                          // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentCharacterParsing;                           // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         TranscriptionCharArray;                            // 0x0058(0x0010)(Edit, BlueprintVisible)
	class FString                                 TranscriptionString;                               // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetCharacterArrayFromString_ReturnValue;  // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Trim_ReturnValue;                         // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0108(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_GetFormattedLogText) == 0x000008, "Wrong alignment on WIDGET_MediaReaderPanel_C_GetFormattedLogText");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_GetFormattedLogText) == 0x000140, "Wrong size on WIDGET_MediaReaderPanel_C_GetFormattedLogText");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, InputText) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::InputText' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, ResultText) == 0x000018, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::ResultText' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, BuiltString) == 0x000030, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::BuiltString' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, SkipChar) == 0x000040, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::SkipChar' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CurrentCharacterParsing) == 0x000048, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CurrentCharacterParsing' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, TranscriptionCharArray) == 0x000058, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::TranscriptionCharArray' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, TranscriptionString) == 0x000068, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::TranscriptionString' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_Conv_TextToString_ReturnValue) == 0x000078, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, K2Node_SwitchString_CmpSuccess) == 0x000088, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_GetCharacterArrayFromString_ReturnValue) == 0x000090, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_GetCharacterArrayFromString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_Trim_ReturnValue) == 0x0000C8, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_Trim_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_Replace_ReturnValue) == 0x0000D8, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_Replace_ReturnValue_1) == 0x0000E8, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F8, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_Conv_StringToText_ReturnValue) == 0x000108, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000120, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_GetFormattedLogText, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000130, "Member 'WIDGET_MediaReaderPanel_C_GetFormattedLogText::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.UpdateMediaReaderPortrait
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_MediaReaderPanel_C_UpdateMediaReaderPortrait final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_UpdateMediaReaderPortrait) == 0x000004, "Wrong alignment on WIDGET_MediaReaderPanel_C_UpdateMediaReaderPortrait");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_UpdateMediaReaderPortrait) == 0x000004, "Wrong size on WIDGET_MediaReaderPanel_C_UpdateMediaReaderPortrait");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_UpdateMediaReaderPortrait, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_UpdateMediaReaderPortrait::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.PlayPreviewedMedia
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_MediaReaderPanel_C_PlayPreviewedMedia final
{
public:
	bool                                          CallFunc_PlayMedia_Result;                         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_PlayPreviewedMedia) == 0x000001, "Wrong alignment on WIDGET_MediaReaderPanel_C_PlayPreviewedMedia");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_PlayPreviewedMedia) == 0x000001, "Wrong size on WIDGET_MediaReaderPanel_C_PlayPreviewedMedia");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_PlayPreviewedMedia, CallFunc_PlayMedia_Result) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_PlayPreviewedMedia::CallFunc_PlayMedia_Result' has a wrong offset!");

// Function WIDGET_MediaReaderPanel.WIDGET_MediaReaderPanel_C.UpdateMediaPlayIcon
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon final
{
public:
	class UAudioComponent*                        AudioLog;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_AudioLogManager_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStopCurrentMedia_Result;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon) == 0x000008, "Wrong alignment on WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon");
static_assert(sizeof(WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon) == 0x000038, "Wrong size on WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon, AudioLog) == 0x000000, "Member 'WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon::AudioLog' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000010, "Member 'WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000020, "Member 'WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon, CallFunc_CanStopCurrentMedia_Result) == 0x000030, "Member 'WIDGET_MediaReaderPanel_C_UpdateMediaPlayIcon::CallFunc_CanStopCurrentMedia_Result' has a wrong offset!");

}


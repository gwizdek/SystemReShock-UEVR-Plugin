#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GrenadeProjectile_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ExplosiveProjectile_Base_classes.hpp"
#include "ENUM_GameDifficulty_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GrenadeProjectile_Base.GrenadeProjectile_Base_C
// 0x0090 (0x03D8 - 0x0348)
class AGrenadeProjectile_Base_C : public AExplosiveProjectile_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GrenadeProjectile_Base_C;           // 0x0348(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   GrenadeMesh;                                       // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DetonationTimer;                                   // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArmTimestamp;                                      // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinFuseBeepDuration;                               // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxFuseBeepDuration;                               // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ContactDetonation;                                 // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ContactDamage;                                     // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class APAWN_SystemShockCharacter_C*>     CollidedShieldCharacters;                          // 0x0378(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, SaveGame)
	class USoundCue*                              FuseBeepSoundCue;                                  // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FuseBeepTimerHandle;                               // 0x03D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GrenadeProjectile_Base(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void InitializeGrenade(float InArmTimestamp, float InLastBeepTimestamp, bool InContactDetonation, int32 InContactDamage);
	void TryStartDetonationTimer();
	void EVENT_OnDetonationTimerExpired();
	void EVENT_OnComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void TryBindCollisionEvent();
	void TryDamageShields(float DeltaTime);
	void GetMinimumFuseTime(float* Time);
	void StartFuseBeepTimer(float LastTimestamp);
	void EVENT_OnFuseBeepTick();
	void DetonateExplosive();
	void StopFuseBeepTimer();
	void GetExplosivePhysicsComponent(class UPrimitiveComponent** PhysicsComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GrenadeProjectile_Base_C">();
	}
	static class AGrenadeProjectile_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGrenadeProjectile_Base_C>();
	}
};
static_assert(alignof(AGrenadeProjectile_Base_C) == 0x000008, "Wrong alignment on AGrenadeProjectile_Base_C");
static_assert(sizeof(AGrenadeProjectile_Base_C) == 0x0003D8, "Wrong size on AGrenadeProjectile_Base_C");
static_assert(offsetof(AGrenadeProjectile_Base_C, UberGraphFrame_GrenadeProjectile_Base_C) == 0x000348, "Member 'AGrenadeProjectile_Base_C::UberGraphFrame_GrenadeProjectile_Base_C' has a wrong offset!");
static_assert(offsetof(AGrenadeProjectile_Base_C, GrenadeMesh) == 0x000350, "Member 'AGrenadeProjectile_Base_C::GrenadeMesh' has a wrong offset!");
static_assert(offsetof(AGrenadeProjectile_Base_C, Capsule) == 0x000358, "Member 'AGrenadeProjectile_Base_C::Capsule' has a wrong offset!");
static_assert(offsetof(AGrenadeProjectile_Base_C, DetonationTimer) == 0x000360, "Member 'AGrenadeProjectile_Base_C::DetonationTimer' has a wrong offset!");
static_assert(offsetof(AGrenadeProjectile_Base_C, ArmTimestamp) == 0x000364, "Member 'AGrenadeProjectile_Base_C::ArmTimestamp' has a wrong offset!");
static_assert(offsetof(AGrenadeProjectile_Base_C, MinFuseBeepDuration) == 0x000368, "Member 'AGrenadeProjectile_Base_C::MinFuseBeepDuration' has a wrong offset!");
static_assert(offsetof(AGrenadeProjectile_Base_C, MaxFuseBeepDuration) == 0x00036C, "Member 'AGrenadeProjectile_Base_C::MaxFuseBeepDuration' has a wrong offset!");
static_assert(offsetof(AGrenadeProjectile_Base_C, ContactDetonation) == 0x000370, "Member 'AGrenadeProjectile_Base_C::ContactDetonation' has a wrong offset!");
static_assert(offsetof(AGrenadeProjectile_Base_C, ContactDamage) == 0x000374, "Member 'AGrenadeProjectile_Base_C::ContactDamage' has a wrong offset!");
static_assert(offsetof(AGrenadeProjectile_Base_C, CollidedShieldCharacters) == 0x000378, "Member 'AGrenadeProjectile_Base_C::CollidedShieldCharacters' has a wrong offset!");
static_assert(offsetof(AGrenadeProjectile_Base_C, FuseBeepSoundCue) == 0x0003C8, "Member 'AGrenadeProjectile_Base_C::FuseBeepSoundCue' has a wrong offset!");
static_assert(offsetof(AGrenadeProjectile_Base_C, FuseBeepTimerHandle) == 0x0003D0, "Member 'AGrenadeProjectile_Base_C::FuseBeepTimerHandle' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_DifficultyCategoryPanel

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_DifficultyCategoryPanel.WIDGET_DifficultyCategoryPanel_C
// 0x0028 (0x0288 - 0x0260)
class UWIDGET_DifficultyCategoryPanel_C final : public UUserWidget
{
public:
	class UWidgetAnimation*                       ANIM_CategoryNameContainer_Expand;                 // 0x0260(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 IMAGE_CategoryNamePlate;                           // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_CategoryNameContainer;                       // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_CategoryName;                                 // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Highlighted;                                       // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExpandContainer(bool Highlighted_0);
	void ShrinkContainer(bool Highlighted_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_DifficultyCategoryPanel_C">();
	}
	static class UWIDGET_DifficultyCategoryPanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_DifficultyCategoryPanel_C>();
	}
};
static_assert(alignof(UWIDGET_DifficultyCategoryPanel_C) == 0x000008, "Wrong alignment on UWIDGET_DifficultyCategoryPanel_C");
static_assert(sizeof(UWIDGET_DifficultyCategoryPanel_C) == 0x000288, "Wrong size on UWIDGET_DifficultyCategoryPanel_C");
static_assert(offsetof(UWIDGET_DifficultyCategoryPanel_C, ANIM_CategoryNameContainer_Expand) == 0x000260, "Member 'UWIDGET_DifficultyCategoryPanel_C::ANIM_CategoryNameContainer_Expand' has a wrong offset!");
static_assert(offsetof(UWIDGET_DifficultyCategoryPanel_C, IMAGE_CategoryNamePlate) == 0x000268, "Member 'UWIDGET_DifficultyCategoryPanel_C::IMAGE_CategoryNamePlate' has a wrong offset!");
static_assert(offsetof(UWIDGET_DifficultyCategoryPanel_C, PANEL_CategoryNameContainer) == 0x000270, "Member 'UWIDGET_DifficultyCategoryPanel_C::PANEL_CategoryNameContainer' has a wrong offset!");
static_assert(offsetof(UWIDGET_DifficultyCategoryPanel_C, TEXT_CategoryName) == 0x000278, "Member 'UWIDGET_DifficultyCategoryPanel_C::TEXT_CategoryName' has a wrong offset!");
static_assert(offsetof(UWIDGET_DifficultyCategoryPanel_C, Highlighted) == 0x000280, "Member 'UWIDGET_DifficultyCategoryPanel_C::Highlighted' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PROJECTILE_HomingMissile

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PROJECTILE_HomingMissile.PROJECTILE_HomingMissile_C.ExecuteUbergraph_PROJECTILE_HomingMissile
// 0x0008 (0x0008 - 0x0000)
struct PROJECTILE_HomingMissile_C_ExecuteUbergraph_PROJECTILE_HomingMissile final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PROJECTILE_HomingMissile_C_ExecuteUbergraph_PROJECTILE_HomingMissile) == 0x000004, "Wrong alignment on PROJECTILE_HomingMissile_C_ExecuteUbergraph_PROJECTILE_HomingMissile");
static_assert(sizeof(PROJECTILE_HomingMissile_C_ExecuteUbergraph_PROJECTILE_HomingMissile) == 0x000008, "Wrong size on PROJECTILE_HomingMissile_C_ExecuteUbergraph_PROJECTILE_HomingMissile");
static_assert(offsetof(PROJECTILE_HomingMissile_C_ExecuteUbergraph_PROJECTILE_HomingMissile, EntryPoint) == 0x000000, "Member 'PROJECTILE_HomingMissile_C_ExecuteUbergraph_PROJECTILE_HomingMissile::EntryPoint' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_ExecuteUbergraph_PROJECTILE_HomingMissile, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'PROJECTILE_HomingMissile_C_ExecuteUbergraph_PROJECTILE_HomingMissile::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function PROJECTILE_HomingMissile.PROJECTILE_HomingMissile_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PROJECTILE_HomingMissile_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PROJECTILE_HomingMissile_C_ReceiveTick) == 0x000004, "Wrong alignment on PROJECTILE_HomingMissile_C_ReceiveTick");
static_assert(sizeof(PROJECTILE_HomingMissile_C_ReceiveTick) == 0x000004, "Wrong size on PROJECTILE_HomingMissile_C_ReceiveTick");
static_assert(offsetof(PROJECTILE_HomingMissile_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PROJECTILE_HomingMissile_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PROJECTILE_HomingMissile.PROJECTILE_HomingMissile_C.InitializeHomingMissile
// 0x00A8 (0x00A8 - 0x0000)
struct PROJECTILE_HomingMissile_C_InitializeHomingMissile final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation_0;                                  // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSpreadRadius;                                   // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetExplosiveLocation_Location;            // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue_1;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PROJECTILE_HomingMissile_C_InitializeHomingMissile) == 0x000008, "Wrong alignment on PROJECTILE_HomingMissile_C_InitializeHomingMissile");
static_assert(sizeof(PROJECTILE_HomingMissile_C_InitializeHomingMissile) == 0x0000A8, "Wrong size on PROJECTILE_HomingMissile_C_InitializeHomingMissile");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, TargetActor) == 0x000000, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::TargetActor' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, TargetLocation_0) == 0x000008, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::TargetLocation_0' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, MaxSpreadRadius) == 0x000014, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::MaxSpreadRadius' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, Temp_bool_Variable) == 0x000018, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x000028, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, Temp_float_Variable) == 0x000034, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, Temp_float_Variable_1) == 0x000044, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_GetExplosiveLocation_Location) == 0x000048, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_GetExplosiveLocation_Location' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_GetInstigator_ReturnValue) == 0x000058, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_GetInstigator_ReturnValue_1) == 0x000060, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_GetInstigator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_GetActorRightVector_ReturnValue) == 0x000068, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000074, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_RandomFloatInRange_ReturnValue) == 0x000080, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000084, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000090, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_Dot_VectorVector_ReturnValue) == 0x000094, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000098, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, K2Node_Select_Default) == 0x00009C, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_InitializeHomingMissile, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A0, "Member 'PROJECTILE_HomingMissile_C_InitializeHomingMissile::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function PROJECTILE_HomingMissile.PROJECTILE_HomingMissile_C.UpdateHomingMotion
// 0x0480 (0x0480 - 0x0000)
struct PROJECTILE_HomingMissile_C_UpdateHomingMotion final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               HomingRotation;                                    // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                DesiredDirection;                                  // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SourceToTargetSegment;                             // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MoveLocation;                                      // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TranslationFrame;                                  // 0x0034(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SourceLocation;                                    // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HomingRotationFrame;                               // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HomingMagnitude;                                   // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrusterImpulse;                                   // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThrusterProgress;                                  // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedMovementTime;                               // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldRotation_SweepHitResult;  // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddActorLocalRotation_SweepHitResult;  // 0x0100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x019C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRotationTowards_OutRotationAxis;       // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotationTowards_ReturnValue;           // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetLocation_Location;               // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetExplosiveLocation_Location;            // 0x01F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0210(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0220(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x02B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343[0x1];                                      // 0x0343(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x03C4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue_1;                       // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PROJECTILE_HomingMissile_C_UpdateHomingMotion) == 0x000008, "Wrong alignment on PROJECTILE_HomingMissile_C_UpdateHomingMotion");
static_assert(sizeof(PROJECTILE_HomingMissile_C_UpdateHomingMotion) == 0x000480, "Wrong size on PROJECTILE_HomingMissile_C_UpdateHomingMotion");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, DeltaTime) == 0x000000, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::DeltaTime' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, HomingRotation) == 0x000004, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::HomingRotation' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, DesiredDirection) == 0x000010, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::DesiredDirection' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, SourceToTargetSegment) == 0x00001C, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::SourceToTargetSegment' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, MoveLocation) == 0x000028, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::MoveLocation' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, TranslationFrame) == 0x000034, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::TranslationFrame' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, SourceLocation) == 0x000040, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::SourceLocation' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, HomingRotationFrame) == 0x00004C, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::HomingRotationFrame' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, HomingMagnitude) == 0x000050, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::HomingMagnitude' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, ThrusterImpulse) == 0x000054, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::ThrusterImpulse' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, ThrusterProgress) == 0x000058, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::ThrusterProgress' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, ElapsedMovementTime) == 0x00005C, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::ElapsedMovementTime' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_K2_AddActorWorldRotation_SweepHitResult) == 0x000060, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_K2_AddActorWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_GetFloatValue_ReturnValue) == 0x0000E8, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000EC, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000F0, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_MakeRotator_ReturnValue) == 0x0000F4, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_K2_AddActorLocalRotation_SweepHitResult) == 0x000100, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_K2_AddActorLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000188, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00018C, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_GetActorUpVector_ReturnValue) == 0x000190, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_GetActorForwardVector_ReturnValue) == 0x00019C, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_GetRotationTowards_OutRotationAxis) == 0x0001A8, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_GetRotationTowards_OutRotationAxis' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_GetRotationTowards_ReturnValue) == 0x0001B4, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_GetRotationTowards_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_GetTargetLocation_Location) == 0x0001B8, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_GetTargetLocation_Location' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_SignOfFloat_ReturnValue) == 0x0001C4, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001C8, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Abs_ReturnValue) == 0x0001D4, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_FMin_ReturnValue) == 0x0001D8, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0001DC, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Normal_ReturnValue) == 0x0001E0, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x0001EC, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_GetExplosiveLocation_Location) == 0x0001F8, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_GetExplosiveLocation_Location' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_GetInstigator_ReturnValue) == 0x000208, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, K2Node_MakeArray_Array) == 0x000210, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000220, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0002A8, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Add_VectorVector_ReturnValue) == 0x0002AC, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_SphereTraceSingle_OutHit) == 0x0002B8, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_SphereTraceSingle_ReturnValue) == 0x000340, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_bBlockingHit) == 0x000341, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_bInitialOverlap) == 0x000342, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_Time) == 0x000344, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_Distance) == 0x000348, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_Location) == 0x00034C, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_ImpactPoint) == 0x000358, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_Normal) == 0x000364, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_ImpactNormal) == 0x000370, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_PhysMat) == 0x000380, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_HitActor) == 0x000388, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_HitComponent) == 0x000390, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_HitBoneName) == 0x000398, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_HitItem) == 0x0003A0, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_ElementIndex) == 0x0003A4, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_FaceIndex) == 0x0003A8, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_TraceStart) == 0x0003AC, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_BreakHitResult_TraceEnd) == 0x0003B8, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x0003C4, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x00044C, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000450, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x00045C, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000460, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Ease_ReturnValue) == 0x00046C, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000470, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000474, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_FMin_ReturnValue_1) == 0x000478, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_UpdateHomingMotion, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00047C, "Member 'PROJECTILE_HomingMissile_C_UpdateHomingMotion::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function PROJECTILE_HomingMissile.PROJECTILE_HomingMissile_C.GetTargetLocation
// 0x001C (0x001C - 0x0000)
struct PROJECTILE_HomingMissile_C_GetTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PROJECTILE_HomingMissile_C_GetTargetLocation) == 0x000004, "Wrong alignment on PROJECTILE_HomingMissile_C_GetTargetLocation");
static_assert(sizeof(PROJECTILE_HomingMissile_C_GetTargetLocation) == 0x00001C, "Wrong size on PROJECTILE_HomingMissile_C_GetTargetLocation");
static_assert(offsetof(PROJECTILE_HomingMissile_C_GetTargetLocation, Location) == 0x000000, "Member 'PROJECTILE_HomingMissile_C_GetTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_GetTargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'PROJECTILE_HomingMissile_C_GetTargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PROJECTILE_HomingMissile_C_GetTargetLocation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PROJECTILE_HomingMissile_C_GetTargetLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


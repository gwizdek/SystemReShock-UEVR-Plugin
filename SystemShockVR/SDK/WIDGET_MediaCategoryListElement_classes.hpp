#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_MediaCategoryListElement

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_MediaCategoryListElement.WIDGET_MediaCategoryListElement_C
// 0x00E0 (0x0340 - 0x0260)
class UWIDGET_MediaCategoryListElement_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ANIM_OnSelected;                                   // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANIM_OnMouseEnter;                                 // 0x0270(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_BG_Input;                                     // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_DeckSelectionBG;                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridMeshWidget*                        MESH_NewMedia;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_CategoryName;                                // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           PANEL_NewMedia;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_CategoryName;                                 // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_DeckSymbol;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextMeshWidget*                        TEXT_MessageCount;                                 // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsDeck;                                            // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   DeckSymbol;                                        // 0x02C0(0x0018)(Edit, BlueprintVisible)
	class FText                                   DeckName;                                          // 0x02D8(0x0018)(Edit, BlueprintVisible)
	class UWIDGET_PlayerHUD_C*                    PlayerHUD;                                         // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MediaPanel_C*                   MediaPanel;                                        // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color_Cyan;                                        // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color_Cyan_SemiTrans;                              // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelected;                                        // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsAllMediaViewed;                                  // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsMouseOver;                                       // 0x030A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30B[0x1];                                      // 0x030B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TotalMediaCount;                                   // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color_Text_Normal;                                 // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color_Text_Normal_SemiTrans;                       // 0x0314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color_Yellow_SemiTrans;                            // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color_Yellow;                                      // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MATPARARM_IsDeck;                                  // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OffsetDeck;                                        // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              OffsetCategory;                                    // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 TextColor;                                         // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WIDGET_MediaCategoryListElement(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void InitializeMediaCategoryListElement(class UWIDGET_MediaPanel_C* MediaPanel_0, class UWIDGET_PlayerHUD_C* PlayerHUD_0);
	void EVENT_OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void EVENT_OnMouseLeave(const struct FPointerEvent& MouseEvent);
	struct FEventReply EVENT_OnMouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SetMediaCount(int32 Messages);
	void SetAllMediaViewed(bool AllMessagesViewed);
	void SetCategorySelected(bool NewState);
	void OnCategorySelected(bool AutoHighlightFirstItem);
	void OnCategoryHighlighted(bool IsHighlighted);
	void RefreshText();
	void UpdateMediaCategoryListElement();
	void RefreshBackground();
	void UpdateMediaFilterType();
	void UpdateClearMouseOverState();
	void ToggleInteractivity(bool IsInteractive);
	void GetMeshWidget(class UGridMeshWidget** Result);
	void OnMouseOver(bool* Result);
	void OnMouseExit(bool* Result);
	void EnableFlickerEffect(bool* Result);
	void DisableFlickerEffect(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_MediaCategoryListElement_C">();
	}
	static class UWIDGET_MediaCategoryListElement_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_MediaCategoryListElement_C>();
	}
};
static_assert(alignof(UWIDGET_MediaCategoryListElement_C) == 0x000008, "Wrong alignment on UWIDGET_MediaCategoryListElement_C");
static_assert(sizeof(UWIDGET_MediaCategoryListElement_C) == 0x000340, "Wrong size on UWIDGET_MediaCategoryListElement_C");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, UberGraphFrame) == 0x000260, "Member 'UWIDGET_MediaCategoryListElement_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, ANIM_OnSelected) == 0x000268, "Member 'UWIDGET_MediaCategoryListElement_C::ANIM_OnSelected' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, ANIM_OnMouseEnter) == 0x000270, "Member 'UWIDGET_MediaCategoryListElement_C::ANIM_OnMouseEnter' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, MESH_BG_Input) == 0x000278, "Member 'UWIDGET_MediaCategoryListElement_C::MESH_BG_Input' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, MESH_DeckSelectionBG) == 0x000280, "Member 'UWIDGET_MediaCategoryListElement_C::MESH_DeckSelectionBG' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, MESH_NewMedia) == 0x000288, "Member 'UWIDGET_MediaCategoryListElement_C::MESH_NewMedia' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, PANEL_CategoryName) == 0x000290, "Member 'UWIDGET_MediaCategoryListElement_C::PANEL_CategoryName' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, PANEL_NewMedia) == 0x000298, "Member 'UWIDGET_MediaCategoryListElement_C::PANEL_NewMedia' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, TEXT_CategoryName) == 0x0002A0, "Member 'UWIDGET_MediaCategoryListElement_C::TEXT_CategoryName' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, TEXT_DeckSymbol) == 0x0002A8, "Member 'UWIDGET_MediaCategoryListElement_C::TEXT_DeckSymbol' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, TEXT_MessageCount) == 0x0002B0, "Member 'UWIDGET_MediaCategoryListElement_C::TEXT_MessageCount' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, IsDeck) == 0x0002B8, "Member 'UWIDGET_MediaCategoryListElement_C::IsDeck' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, DeckSymbol) == 0x0002C0, "Member 'UWIDGET_MediaCategoryListElement_C::DeckSymbol' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, DeckName) == 0x0002D8, "Member 'UWIDGET_MediaCategoryListElement_C::DeckName' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, PlayerHUD) == 0x0002F0, "Member 'UWIDGET_MediaCategoryListElement_C::PlayerHUD' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, MediaPanel) == 0x0002F8, "Member 'UWIDGET_MediaCategoryListElement_C::MediaPanel' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, Color_Cyan) == 0x000300, "Member 'UWIDGET_MediaCategoryListElement_C::Color_Cyan' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, Color_Cyan_SemiTrans) == 0x000304, "Member 'UWIDGET_MediaCategoryListElement_C::Color_Cyan_SemiTrans' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, IsSelected) == 0x000308, "Member 'UWIDGET_MediaCategoryListElement_C::IsSelected' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, IsAllMediaViewed) == 0x000309, "Member 'UWIDGET_MediaCategoryListElement_C::IsAllMediaViewed' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, IsMouseOver) == 0x00030A, "Member 'UWIDGET_MediaCategoryListElement_C::IsMouseOver' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, TotalMediaCount) == 0x00030C, "Member 'UWIDGET_MediaCategoryListElement_C::TotalMediaCount' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, Color_Text_Normal) == 0x000310, "Member 'UWIDGET_MediaCategoryListElement_C::Color_Text_Normal' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, Color_Text_Normal_SemiTrans) == 0x000314, "Member 'UWIDGET_MediaCategoryListElement_C::Color_Text_Normal_SemiTrans' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, Color_Yellow_SemiTrans) == 0x000318, "Member 'UWIDGET_MediaCategoryListElement_C::Color_Yellow_SemiTrans' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, Color_Yellow) == 0x00031C, "Member 'UWIDGET_MediaCategoryListElement_C::Color_Yellow' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, MATPARARM_IsDeck) == 0x000320, "Member 'UWIDGET_MediaCategoryListElement_C::MATPARARM_IsDeck' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, OffsetDeck) == 0x000328, "Member 'UWIDGET_MediaCategoryListElement_C::OffsetDeck' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, OffsetCategory) == 0x000330, "Member 'UWIDGET_MediaCategoryListElement_C::OffsetCategory' has a wrong offset!");
static_assert(offsetof(UWIDGET_MediaCategoryListElement_C, TextColor) == 0x000338, "Member 'UWIDGET_MediaCategoryListElement_C::TextColor' has a wrong offset!");

}


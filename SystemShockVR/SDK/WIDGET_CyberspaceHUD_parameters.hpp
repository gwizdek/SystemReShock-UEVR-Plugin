#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_CyberspaceHUD

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "ENUM_MenuNavigationInput_structs.hpp"
#include "ENUM_MFDTabCategory_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.ExecuteUbergraph_WIDGET_CyberspaceHUD
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_CyberspaceHUD_C_ExecuteUbergraph_WIDGET_CyberspaceHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_ExecuteUbergraph_WIDGET_CyberspaceHUD) == 0x000004, "Wrong alignment on WIDGET_CyberspaceHUD_C_ExecuteUbergraph_WIDGET_CyberspaceHUD");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_ExecuteUbergraph_WIDGET_CyberspaceHUD) == 0x000040, "Wrong size on WIDGET_CyberspaceHUD_C_ExecuteUbergraph_WIDGET_CyberspaceHUD");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ExecuteUbergraph_WIDGET_CyberspaceHUD, EntryPoint) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_ExecuteUbergraph_WIDGET_CyberspaceHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ExecuteUbergraph_WIDGET_CyberspaceHUD, K2Node_Event_MyGeometry) == 0x000004, "Member 'WIDGET_CyberspaceHUD_C_ExecuteUbergraph_WIDGET_CyberspaceHUD::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ExecuteUbergraph_WIDGET_CyberspaceHUD, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WIDGET_CyberspaceHUD_C_ExecuteUbergraph_WIDGET_CyberspaceHUD::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_CyberspaceHUD_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_Tick) == 0x000004, "Wrong alignment on WIDGET_CyberspaceHUD_C_Tick");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_Tick) == 0x00003C, "Wrong size on WIDGET_CyberspaceHUD_C_Tick");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_CyberspaceHUD_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.InitializeCyberspaceUI
// 0x00B8 (0x00B8 - 0x0000)
struct WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI final
{
public:
	class APAWN_Avatar_C*                         PlayerPawn_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        HealthAttribInstance;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Avatar_C*                         K2Node_DynamicCast_AsPAWN_Avatar;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue_1;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByName_Bag;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITEM_Base_C*>                   CallFunc_GetItemArray_Items;                       // 0x0078(0x0010)(ReferenceParm)
	TDelegate<void(class UInventoryBag_C* Bag, int32 SlotIndex)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	class UITEM_Base_C*                           CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Result;                          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI) == 0x000008, "Wrong alignment on WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI) == 0x0000B8, "Wrong size on WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, PlayerPawn_0) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::PlayerPawn_0' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, HealthAttribInstance) == 0x000008, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::HealthAttribInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000030, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, K2Node_DynamicCast_AsPAWN_Avatar) == 0x000038, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::K2Node_DynamicCast_AsPAWN_Avatar' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_GetValue_ReturnValue) == 0x000044, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_GetAttribInstance_ReturnValue) == 0x000048, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_GetValue_ReturnValue_1) == 0x000050, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_GetAttribInstance_ReturnValue_1) == 0x000068, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_GetAttribInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_GetBagByName_Bag) == 0x000070, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_GetBagByName_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_GetItemArray_Items) == 0x000078, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_GetItemArray_Items' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, K2Node_CreateDelegate_OutputDelegate_2) == 0x000088, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_Array_Get_Item) == 0x000098, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_GetCount_Result) == 0x0000A4, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_GetCount_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_Less_IntInt_ReturnValue) == 0x0000A8, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI, CallFunc_GetObjectClass_ReturnValue) == 0x0000B0, "Member 'WIDGET_CyberspaceHUD_C_InitializeCyberspaceUI::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.EVENT_OnInventoryBagChanged
// 0x01B0 (0x01B0 - 0x0000)
struct WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged final
{
public:
	class UInventoryBag_C*                        Bag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Slot_0;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           ChangedItem;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SoftwareItem_C*                 ItemWidget;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CurrentItem;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
	class UITEM_UpgradeBase_C*                    K2Node_DynamicCast_AsITEM_Upgrade_Base;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetVersionNumber_Version;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Result;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00F8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0138(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0148(0x0018)()
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item_1;                       // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_MediaBase_C*                      K2Node_DynamicCast_AsITEM_Media_Base;              // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item_2;                       // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByName_Bag;                         // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged) == 0x000008, "Wrong alignment on WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged) == 0x0001B0, "Wrong size on WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, Bag) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, Slot_0) == 0x000008, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::Slot_0' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, ChangedItem) == 0x000010, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::ChangedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, ItemWidget) == 0x000018, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::ItemWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CurrentItem) == 0x000020, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CurrentItem' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, K2Node_MakeArray_Array) == 0x0000B8, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, K2Node_DynamicCast_AsITEM_Upgrade_Base) == 0x0000E0, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::K2Node_DynamicCast_AsITEM_Upgrade_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_GetVersionNumber_Version) == 0x0000EC, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_GetVersionNumber_Version' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_GetCount_Result) == 0x0000F0, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_GetCount_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000F8, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, K2Node_MakeArray_Array_1) == 0x000138, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_Format_ReturnValue_1) == 0x000148, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_GetObjectClass_ReturnValue) == 0x000160, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_Map_Find_Value) == 0x000168, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_Map_Find_ReturnValue) == 0x00016C, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_Not_PreBool_ReturnValue) == 0x00016D, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_Less_IntInt_ReturnValue) == 0x00016E, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_BooleanOR_ReturnValue) == 0x00016F, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_GetSlotItem_Item) == 0x000170, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_IsValid_ReturnValue_2) == 0x000178, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_GetSlotItem_Item_1) == 0x000180, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_GetSlotItem_Item_1' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, K2Node_DynamicCast_AsITEM_Media_Base) == 0x000188, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::K2Node_DynamicCast_AsITEM_Media_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, K2Node_DynamicCast_bSuccess_1) == 0x000190, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_GetSlotItem_Item_2) == 0x000198, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_GetSlotItem_Item_2' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_GetBagByName_Bag) == 0x0001A0, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_GetBagByName_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001A8, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnInventoryBagChanged::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.ReceivePrimaryMessage
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage final
{
public:
	class FText                                   PrimaryMessage;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage) == 0x000008, "Wrong alignment on WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage) == 0x000038, "Wrong size on WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage, PrimaryMessage) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage::PrimaryMessage' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage, CallFunc_Len_ReturnValue) == 0x000028, "Member 'WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00002C, "Member 'WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000030, "Member 'WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage, CallFunc_FMax_ReturnValue) == 0x000034, "Member 'WIDGET_CyberspaceHUD_C_ReceivePrimaryMessage::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.EVENT_OnHealthChanged
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_CyberspaceHUD_C_EVENT_OnHealthChanged final
{
public:
	float                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Previous;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_EVENT_OnHealthChanged) == 0x000004, "Wrong alignment on WIDGET_CyberspaceHUD_C_EVENT_OnHealthChanged");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_EVENT_OnHealthChanged) == 0x000008, "Wrong size on WIDGET_CyberspaceHUD_C_EVENT_OnHealthChanged");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnHealthChanged, Current) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnHealthChanged::Current' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_EVENT_OnHealthChanged, Previous) == 0x000004, "Member 'WIDGET_CyberspaceHUD_C_EVENT_OnHealthChanged::Previous' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.ReceivedInfoMessage
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_CyberspaceHUD_C_ReceivedInfoMessage final
{
public:
	class FText                                   InfoMessage;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_ReceivedInfoMessage) == 0x000008, "Wrong alignment on WIDGET_CyberspaceHUD_C_ReceivedInfoMessage");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_ReceivedInfoMessage) == 0x000038, "Wrong size on WIDGET_CyberspaceHUD_C_ReceivedInfoMessage");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivedInfoMessage, InfoMessage) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_ReceivedInfoMessage::InfoMessage' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivedInfoMessage, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'WIDGET_CyberspaceHUD_C_ReceivedInfoMessage::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivedInfoMessage, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000028, "Member 'WIDGET_CyberspaceHUD_C_ReceivedInfoMessage::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivedInfoMessage, CallFunc_Len_ReturnValue) == 0x00002C, "Member 'WIDGET_CyberspaceHUD_C_ReceivedInfoMessage::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivedInfoMessage, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000030, "Member 'WIDGET_CyberspaceHUD_C_ReceivedInfoMessage::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivedInfoMessage, CallFunc_FMax_ReturnValue) == 0x000034, "Member 'WIDGET_CyberspaceHUD_C_ReceivedInfoMessage::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.ReceivedItemActivationMessage
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage final
{
public:
	class FText                                   ItemActivationMessage;                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage) == 0x000008, "Wrong alignment on WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage) == 0x000038, "Wrong size on WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage, ItemActivationMessage) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage::ItemActivationMessage' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000028, "Member 'WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage, CallFunc_Len_ReturnValue) == 0x00002C, "Member 'WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000030, "Member 'WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage, CallFunc_FMax_ReturnValue) == 0x000034, "Member 'WIDGET_CyberspaceHUD_C_ReceivedItemActivationMessage::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.UpdatePrimaryMessage
// 0x000C (0x000C - 0x0000)
struct WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage) == 0x000004, "Wrong alignment on WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage) == 0x00000C, "Wrong size on WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'WIDGET_CyberspaceHUD_C_UpdatePrimaryMessage::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.UpdateInfoMessage
// 0x000C (0x000C - 0x0000)
struct WIDGET_CyberspaceHUD_C_UpdateInfoMessage final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_UpdateInfoMessage) == 0x000004, "Wrong alignment on WIDGET_CyberspaceHUD_C_UpdateInfoMessage");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_UpdateInfoMessage) == 0x00000C, "Wrong size on WIDGET_CyberspaceHUD_C_UpdateInfoMessage");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdateInfoMessage, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_UpdateInfoMessage::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdateInfoMessage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'WIDGET_CyberspaceHUD_C_UpdateInfoMessage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdateInfoMessage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'WIDGET_CyberspaceHUD_C_UpdateInfoMessage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdateInfoMessage, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'WIDGET_CyberspaceHUD_C_UpdateInfoMessage::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.UpdateItemActivationMessage
// 0x000C (0x000C - 0x0000)
struct WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage) == 0x000004, "Wrong alignment on WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage) == 0x00000C, "Wrong size on WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000009, "Member 'WIDGET_CyberspaceHUD_C_UpdateItemActivationMessage::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.GetCurrentHealth
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_CyberspaceHUD_C_GetCurrentHealth final
{
public:
	float                                         CurrentHealth_0;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviousHealth;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_GetCurrentHealth) == 0x000004, "Wrong alignment on WIDGET_CyberspaceHUD_C_GetCurrentHealth");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_GetCurrentHealth) == 0x000010, "Wrong size on WIDGET_CyberspaceHUD_C_GetCurrentHealth");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetCurrentHealth, CurrentHealth_0) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_GetCurrentHealth::CurrentHealth_0' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetCurrentHealth, PreviousHealth) == 0x000004, "Member 'WIDGET_CyberspaceHUD_C_GetCurrentHealth::PreviousHealth' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetCurrentHealth, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'WIDGET_CyberspaceHUD_C_GetCurrentHealth::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetCurrentHealth, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'WIDGET_CyberspaceHUD_C_GetCurrentHealth::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetCurrentHealth, CallFunc_BooleanNOR_ReturnValue) == 0x00000D, "Member 'WIDGET_CyberspaceHUD_C_GetCurrentHealth::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetCurrentHealth, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000E, "Member 'WIDGET_CyberspaceHUD_C_GetCurrentHealth::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetCurrentHealth, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00000F, "Member 'WIDGET_CyberspaceHUD_C_GetCurrentHealth::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.GetCurrentTime
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_CyberspaceHUD_C_GetCurrentTime final
{
public:
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_GetCurrentTime) == 0x000001, "Wrong alignment on WIDGET_CyberspaceHUD_C_GetCurrentTime");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_GetCurrentTime) == 0x000001, "Wrong size on WIDGET_CyberspaceHUD_C_GetCurrentTime");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetCurrentTime, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_GetCurrentTime::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.ShowCrosshairs
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_CyberspaceHUD_C_ShowCrosshairs final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_ShowCrosshairs) == 0x000001, "Wrong alignment on WIDGET_CyberspaceHUD_C_ShowCrosshairs");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_ShowCrosshairs) == 0x000002, "Wrong size on WIDGET_CyberspaceHUD_C_ShowCrosshairs");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ShowCrosshairs, Visible) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_ShowCrosshairs::Visible' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_ShowCrosshairs, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WIDGET_CyberspaceHUD_C_ShowCrosshairs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.UpdateIceDrillLockOn
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_CyberspaceHUD_C_UpdateIceDrillLockOn final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_UpdateIceDrillLockOn) == 0x000004, "Wrong alignment on WIDGET_CyberspaceHUD_C_UpdateIceDrillLockOn");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_UpdateIceDrillLockOn) == 0x000004, "Wrong size on WIDGET_CyberspaceHUD_C_UpdateIceDrillLockOn");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_UpdateIceDrillLockOn, Progress) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_UpdateIceDrillLockOn::Progress' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.OnCrosshairVisibilityChanged
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged) == 0x000008, "Wrong alignment on WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged) == 0x000030, "Wrong size on WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged, CallFunc_GetPlayerController_ReturnValue_1) == 0x000008, "Member 'WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged, CallFunc_GetPlayerController_ReturnValue_2) == 0x000010, "Member 'WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged, CallFunc_GetPlayerController_ReturnValue_3) == 0x000018, "Member 'WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged, CallFunc_GetPlayerController_ReturnValue_4) == 0x000020, "Member 'WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged, CallFunc_GetPlayerController_ReturnValue_5) == 0x000028, "Member 'WIDGET_CyberspaceHUD_C_OnCrosshairVisibilityChanged::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.CenterMouseLocation
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_CyberspaceHUD_C_CenterMouseLocation final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsViewportInForeground_ReturnValue;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_CenterMouseLocation) == 0x000008, "Wrong alignment on WIDGET_CyberspaceHUD_C_CenterMouseLocation");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_CenterMouseLocation) == 0x000048, "Wrong size on WIDGET_CyberspaceHUD_C_CenterMouseLocation");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, PlayerController) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::PlayerController' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, K2Node_DynamicCast_AsCON_Hacker) == 0x000008, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, CallFunc_IsViewportInForeground_ReturnValue) == 0x000011, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::CallFunc_IsViewportInForeground_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, CallFunc_IsUsingGamepad_Result) == 0x000012, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::CallFunc_IsUsingGamepad_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, CallFunc_Not_PreBool_ReturnValue_1) == 0x000014, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, CallFunc_GetViewportSize_ReturnValue) == 0x000024, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00002C, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, CallFunc_BreakVector2D_X) == 0x000034, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, CallFunc_Round_ReturnValue) == 0x00003C, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_CenterMouseLocation, CallFunc_Round_ReturnValue_1) == 0x000040, "Member 'WIDGET_CyberspaceHUD_C_CenterMouseLocation::CallFunc_Round_ReturnValue_1' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.SetGameLockedForMenus
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_CyberspaceHUD_C_SetGameLockedForMenus final
{
public:
	bool                                          LockGame;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetGamePaused_ReturnValue_1;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_SetGameLockedForMenus) == 0x000001, "Wrong alignment on WIDGET_CyberspaceHUD_C_SetGameLockedForMenus");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_SetGameLockedForMenus) == 0x000004, "Wrong size on WIDGET_CyberspaceHUD_C_SetGameLockedForMenus");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_SetGameLockedForMenus, LockGame) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_SetGameLockedForMenus::LockGame' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_SetGameLockedForMenus, Result) == 0x000001, "Member 'WIDGET_CyberspaceHUD_C_SetGameLockedForMenus::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_SetGameLockedForMenus, CallFunc_SetGamePaused_ReturnValue) == 0x000002, "Member 'WIDGET_CyberspaceHUD_C_SetGameLockedForMenus::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_SetGameLockedForMenus, CallFunc_SetGamePaused_ReturnValue_1) == 0x000003, "Member 'WIDGET_CyberspaceHUD_C_SetGameLockedForMenus::CallFunc_SetGamePaused_ReturnValue_1' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.OnCharacterDied
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_CyberspaceHUD_C_OnCharacterDied final
{
public:
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_OnCharacterDied) == 0x000008, "Wrong alignment on WIDGET_CyberspaceHUD_C_OnCharacterDied");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_OnCharacterDied) == 0x000030, "Wrong size on WIDGET_CyberspaceHUD_C_OnCharacterDied");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_OnCharacterDied, DamageInstance) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_OnCharacterDied::DamageInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_OnCharacterDied, Result) == 0x000028, "Member 'WIDGET_CyberspaceHUD_C_OnCharacterDied::Result' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.OnCharacterRespawned
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_CyberspaceHUD_C_OnCharacterRespawned final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_OnCharacterRespawned) == 0x000001, "Wrong alignment on WIDGET_CyberspaceHUD_C_OnCharacterRespawned");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_OnCharacterRespawned) == 0x000001, "Wrong size on WIDGET_CyberspaceHUD_C_OnCharacterRespawned");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_OnCharacterRespawned, Result) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_OnCharacterRespawned::Result' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.GetTutorialWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_CyberspaceHUD_C_GetTutorialWidget final
{
public:
	class UWIDGET_TutorialMessage_C*              Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_GetTutorialWidget) == 0x000008, "Wrong alignment on WIDGET_CyberspaceHUD_C_GetTutorialWidget");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_GetTutorialWidget) == 0x000008, "Wrong size on WIDGET_CyberspaceHUD_C_GetTutorialWidget");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetTutorialWidget, Result) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_GetTutorialWidget::Result' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.GetMainMenuWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_CyberspaceHUD_C_GetMainMenuWidget final
{
public:
	class UWIDGET_MainMenu_InGame_C*              Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_GetMainMenuWidget) == 0x000008, "Wrong alignment on WIDGET_CyberspaceHUD_C_GetMainMenuWidget");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_GetMainMenuWidget) == 0x000008, "Wrong size on WIDGET_CyberspaceHUD_C_GetMainMenuWidget");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetMainMenuWidget, Result) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_GetMainMenuWidget::Result' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.GetCameraPanelWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_CyberspaceHUD_C_GetCameraPanelWidget final
{
public:
	class UCameraPanelWidget*                     Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_GetCameraPanelWidget) == 0x000008, "Wrong alignment on WIDGET_CyberspaceHUD_C_GetCameraPanelWidget");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_GetCameraPanelWidget) == 0x000008, "Wrong size on WIDGET_CyberspaceHUD_C_GetCameraPanelWidget");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetCameraPanelWidget, Result) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_GetCameraPanelWidget::Result' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.InvokeNavManager
// 0x0003 (0x0003 - 0x0000)
struct WIDGET_CyberspaceHUD_C_InvokeNavManager final
{
public:
	bool                                          InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuNavigationInput                      InputType;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_InvokeNavManager) == 0x000001, "Wrong alignment on WIDGET_CyberspaceHUD_C_InvokeNavManager");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_InvokeNavManager) == 0x000003, "Wrong size on WIDGET_CyberspaceHUD_C_InvokeNavManager");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InvokeNavManager, InputState) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_InvokeNavManager::InputState' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InvokeNavManager, InputType) == 0x000001, "Member 'WIDGET_CyberspaceHUD_C_InvokeNavManager::InputType' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_InvokeNavManager, Result) == 0x000002, "Member 'WIDGET_CyberspaceHUD_C_InvokeNavManager::Result' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.GetSubtitleWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_CyberspaceHUD_C_GetSubtitleWidget final
{
public:
	class UWIDGET_Subtitles_C*                    Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_GetSubtitleWidget) == 0x000008, "Wrong alignment on WIDGET_CyberspaceHUD_C_GetSubtitleWidget");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_GetSubtitleWidget) == 0x000008, "Wrong size on WIDGET_CyberspaceHUD_C_GetSubtitleWidget");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetSubtitleWidget, Result) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_GetSubtitleWidget::Result' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.OnStartedLoadingGame
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_CyberspaceHUD_C_OnStartedLoadingGame final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_OnStartedLoadingGame) == 0x000001, "Wrong alignment on WIDGET_CyberspaceHUD_C_OnStartedLoadingGame");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_OnStartedLoadingGame) == 0x000001, "Wrong size on WIDGET_CyberspaceHUD_C_OnStartedLoadingGame");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_OnStartedLoadingGame, Result) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_OnStartedLoadingGame::Result' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.OnFinishedLoadingGame
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_CyberspaceHUD_C_OnFinishedLoadingGame final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_OnFinishedLoadingGame) == 0x000001, "Wrong alignment on WIDGET_CyberspaceHUD_C_OnFinishedLoadingGame");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_OnFinishedLoadingGame) == 0x000001, "Wrong size on WIDGET_CyberspaceHUD_C_OnFinishedLoadingGame");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_OnFinishedLoadingGame, Result) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_OnFinishedLoadingGame::Result' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.OnPersistentMapMove
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_CyberspaceHUD_C_OnPersistentMapMove final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_OnPersistentMapMove) == 0x000001, "Wrong alignment on WIDGET_CyberspaceHUD_C_OnPersistentMapMove");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_OnPersistentMapMove) == 0x000001, "Wrong size on WIDGET_CyberspaceHUD_C_OnPersistentMapMove");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_OnPersistentMapMove, Result) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_OnPersistentMapMove::Result' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.GetMFDState
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_CyberspaceHUD_C_GetMFDState final
{
public:
	bool                                          IsMFDOpen;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MFDTabCategory                           CurrentMFDTab;                                     // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_GetMFDState) == 0x000001, "Wrong alignment on WIDGET_CyberspaceHUD_C_GetMFDState");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_GetMFDState) == 0x000002, "Wrong size on WIDGET_CyberspaceHUD_C_GetMFDState");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetMFDState, IsMFDOpen) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_GetMFDState::IsMFDOpen' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_GetMFDState, CurrentMFDTab) == 0x000001, "Member 'WIDGET_CyberspaceHUD_C_GetMFDState::CurrentMFDTab' has a wrong offset!");

// Function WIDGET_CyberspaceHUD.WIDGET_CyberspaceHUD_C.SetHoldInteractionProgress
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_CyberspaceHUD_C_SetHoldInteractionProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_CyberspaceHUD_C_SetHoldInteractionProgress) == 0x000004, "Wrong alignment on WIDGET_CyberspaceHUD_C_SetHoldInteractionProgress");
static_assert(sizeof(WIDGET_CyberspaceHUD_C_SetHoldInteractionProgress) == 0x000008, "Wrong size on WIDGET_CyberspaceHUD_C_SetHoldInteractionProgress");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_SetHoldInteractionProgress, Progress) == 0x000000, "Member 'WIDGET_CyberspaceHUD_C_SetHoldInteractionProgress::Progress' has a wrong offset!");
static_assert(offsetof(WIDGET_CyberspaceHUD_C_SetHoldInteractionProgress, Result) == 0x000004, "Member 'WIDGET_CyberspaceHUD_C_SetHoldInteractionProgress::Result' has a wrong offset!");

}


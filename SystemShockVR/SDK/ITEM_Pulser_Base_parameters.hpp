#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_Pulser_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ITEM_Pulser_Base.ITEM_Pulser_Base_C.EVENT_FireProjectile
// 0x0190 (0x0190 - 0x0000)
struct ITEM_Pulser_Base_C_EVENT_FireProjectile final
{
public:
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Deactivate_Result;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CanActivate_Result;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsActivated_Result;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsActivated_Result_1;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_SpawnProjectile_Projectile;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APROJECTILE_AvatarPulse_C*              K2Node_DynamicCast_AsPROJECTILE_Avatar_Pulse;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_SpawnProjectile_Projectile_1;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APROJECTILE_AvatarPulse_C*              K2Node_DynamicCast_AsPROJECTILE_Avatar_Pulse_1;    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x0074(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x0108(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ITEM_Pulser_Base_C_EVENT_FireProjectile) == 0x000008, "Wrong alignment on ITEM_Pulser_Base_C_EVENT_FireProjectile");
static_assert(sizeof(ITEM_Pulser_Base_C_EVENT_FireProjectile) == 0x000190, "Wrong size on ITEM_Pulser_Base_C_EVENT_FireProjectile");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000000, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_Deactivate_Result) == 0x000004, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_Deactivate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_CanActivate_Result) == 0x000020, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_CanActivate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_GetIsActivated_Result) == 0x000028, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_GetIsActivated_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_GetIsActivated_Result_1) == 0x000039, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_GetIsActivated_Result_1' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_SpawnProjectile_Projectile) == 0x000040, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_SpawnProjectile_Projectile' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, K2Node_DynamicCast_AsPROJECTILE_Avatar_Pulse) == 0x000048, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::K2Node_DynamicCast_AsPROJECTILE_Avatar_Pulse' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_SpawnProjectile_Projectile_1) == 0x000058, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_SpawnProjectile_Projectile_1' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000060, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, K2Node_DynamicCast_AsPROJECTILE_Avatar_Pulse_1) == 0x000068, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::K2Node_DynamicCast_AsPROJECTILE_Avatar_Pulse_1' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x000074, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000100, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_EVENT_FireProjectile, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x000108, "Member 'ITEM_Pulser_Base_C_EVENT_FireProjectile::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");

// Function ITEM_Pulser_Base.ITEM_Pulser_Base_C.Activate
// 0x0048 (0x0048 - 0x0000)
struct ITEM_Pulser_Base_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Activate_Result;                          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_Pulser_Base_C_Activate) == 0x000008, "Wrong alignment on ITEM_Pulser_Base_C_Activate");
static_assert(sizeof(ITEM_Pulser_Base_C_Activate) == 0x000048, "Wrong size on ITEM_Pulser_Base_C_Activate");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, Character) == 0x000000, "Member 'ITEM_Pulser_Base_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, Result) == 0x000008, "Member 'ITEM_Pulser_Base_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'ITEM_Pulser_Base_C_Activate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, CallFunc_Activate_Result) == 0x00001C, "Member 'ITEM_Pulser_Base_C_Activate::CallFunc_Activate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000020, "Member 'ITEM_Pulser_Base_C_Activate::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000024, "Member 'ITEM_Pulser_Base_C_Activate::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'ITEM_Pulser_Base_C_Activate::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00002C, "Member 'ITEM_Pulser_Base_C_Activate::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'ITEM_Pulser_Base_C_Activate::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000038, "Member 'ITEM_Pulser_Base_C_Activate::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x00003C, "Member 'ITEM_Pulser_Base_C_Activate::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'ITEM_Pulser_Base_C_Activate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Activate, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000044, "Member 'ITEM_Pulser_Base_C_Activate::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function ITEM_Pulser_Base.ITEM_Pulser_Base_C.Deactivate
// 0x0002 (0x0002 - 0x0000)
struct ITEM_Pulser_Base_C_Deactivate final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Deactivate_Result;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_Pulser_Base_C_Deactivate) == 0x000001, "Wrong alignment on ITEM_Pulser_Base_C_Deactivate");
static_assert(sizeof(ITEM_Pulser_Base_C_Deactivate) == 0x000002, "Wrong size on ITEM_Pulser_Base_C_Deactivate");
static_assert(offsetof(ITEM_Pulser_Base_C_Deactivate, Result) == 0x000000, "Member 'ITEM_Pulser_Base_C_Deactivate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_Pulser_Base_C_Deactivate, CallFunc_Deactivate_Result) == 0x000001, "Member 'ITEM_Pulser_Base_C_Deactivate::CallFunc_Deactivate_Result' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEAPON_LaserRapier

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_LaserRapierColor_structs.hpp"
#include "STRUCT_WeaponMode_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.ExecuteUbergraph_WEAPON_LaserRapier
// 0x00C8 (0x00C8 - 0x0000)
struct WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_1;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_2;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue_3;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier");
static_assert(sizeof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier) == 0x0000C8, "Wrong size on WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, EntryPoint) == 0x000000, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::EntryPoint' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_CustomEvent_Loaded_3) == 0x000028, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, Temp_object_Variable) == 0x000030, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_DynamicCast_AsSound_Cue) == 0x000038, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_CustomEvent_Loaded_2) == 0x000048, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, Temp_object_Variable_1) == 0x000050, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_DynamicCast_AsSound_Cue_1) == 0x000058, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_DynamicCast_AsSound_Cue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_CustomEvent_Loaded_1) == 0x000068, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, Temp_object_Variable_2) == 0x000070, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_DynamicCast_AsSound_Cue_2) == 0x000078, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_DynamicCast_AsSound_Cue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_CustomEvent_Loaded) == 0x000088, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, Temp_object_Variable_3) == 0x000090, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_DynamicCast_AsSound_Cue_3) == 0x000098, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_DynamicCast_AsSound_Cue_3' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_DynamicCast_bSuccess_3) == 0x0000A0, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A4, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B4, "Member 'WEAPON_LaserRapier_C_ExecuteUbergraph_WEAPON_LaserRapier::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.OnLoaded_66FA7A1D4D28050AD28993A6D88E34C2
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_LaserRapier_C_OnLoaded_66FA7A1D4D28050AD28993A6D88E34C2 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_OnLoaded_66FA7A1D4D28050AD28993A6D88E34C2) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_OnLoaded_66FA7A1D4D28050AD28993A6D88E34C2");
static_assert(sizeof(WEAPON_LaserRapier_C_OnLoaded_66FA7A1D4D28050AD28993A6D88E34C2) == 0x000008, "Wrong size on WEAPON_LaserRapier_C_OnLoaded_66FA7A1D4D28050AD28993A6D88E34C2");
static_assert(offsetof(WEAPON_LaserRapier_C_OnLoaded_66FA7A1D4D28050AD28993A6D88E34C2, Loaded) == 0x000000, "Member 'WEAPON_LaserRapier_C_OnLoaded_66FA7A1D4D28050AD28993A6D88E34C2::Loaded' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.OnLoaded_74CE337C44417AD258B229A6AA0B5EA3
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_LaserRapier_C_OnLoaded_74CE337C44417AD258B229A6AA0B5EA3 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_OnLoaded_74CE337C44417AD258B229A6AA0B5EA3) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_OnLoaded_74CE337C44417AD258B229A6AA0B5EA3");
static_assert(sizeof(WEAPON_LaserRapier_C_OnLoaded_74CE337C44417AD258B229A6AA0B5EA3) == 0x000008, "Wrong size on WEAPON_LaserRapier_C_OnLoaded_74CE337C44417AD258B229A6AA0B5EA3");
static_assert(offsetof(WEAPON_LaserRapier_C_OnLoaded_74CE337C44417AD258B229A6AA0B5EA3, Loaded) == 0x000000, "Member 'WEAPON_LaserRapier_C_OnLoaded_74CE337C44417AD258B229A6AA0B5EA3::Loaded' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.OnLoaded_E88F98A6428EA72C5A490C8D3B730228
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_LaserRapier_C_OnLoaded_E88F98A6428EA72C5A490C8D3B730228 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_OnLoaded_E88F98A6428EA72C5A490C8D3B730228) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_OnLoaded_E88F98A6428EA72C5A490C8D3B730228");
static_assert(sizeof(WEAPON_LaserRapier_C_OnLoaded_E88F98A6428EA72C5A490C8D3B730228) == 0x000008, "Wrong size on WEAPON_LaserRapier_C_OnLoaded_E88F98A6428EA72C5A490C8D3B730228");
static_assert(offsetof(WEAPON_LaserRapier_C_OnLoaded_E88F98A6428EA72C5A490C8D3B730228, Loaded) == 0x000000, "Member 'WEAPON_LaserRapier_C_OnLoaded_E88F98A6428EA72C5A490C8D3B730228::Loaded' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.OnLoaded_AEF86ED142CC08E9EAAE26975007B18D
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_LaserRapier_C_OnLoaded_AEF86ED142CC08E9EAAE26975007B18D final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_OnLoaded_AEF86ED142CC08E9EAAE26975007B18D) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_OnLoaded_AEF86ED142CC08E9EAAE26975007B18D");
static_assert(sizeof(WEAPON_LaserRapier_C_OnLoaded_AEF86ED142CC08E9EAAE26975007B18D) == 0x000008, "Wrong size on WEAPON_LaserRapier_C_OnLoaded_AEF86ED142CC08E9EAAE26975007B18D");
static_assert(offsetof(WEAPON_LaserRapier_C_OnLoaded_AEF86ED142CC08E9EAAE26975007B18D, Loaded) == 0x000000, "Member 'WEAPON_LaserRapier_C_OnLoaded_AEF86ED142CC08E9EAAE26975007B18D::Loaded' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.OnStartedMeleeAttack
// 0x0118 (0x0118 - 0x0000)
struct WEAPON_LaserRapier_C_OnStartedMeleeAttack final
{
public:
	bool                                          IsPowerSwing;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0008(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_HasEnoughEnergy_Result;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TryToDrainEnergy_PercentageDrained;       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_OnStartedMeleeAttack) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_OnStartedMeleeAttack");
static_assert(sizeof(WEAPON_LaserRapier_C_OnStartedMeleeAttack) == 0x000118, "Wrong size on WEAPON_LaserRapier_C_OnStartedMeleeAttack");
static_assert(offsetof(WEAPON_LaserRapier_C_OnStartedMeleeAttack, IsPowerSwing) == 0x000000, "Member 'WEAPON_LaserRapier_C_OnStartedMeleeAttack::IsPowerSwing' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnStartedMeleeAttack, CallFunc_GetCurrentMode_Mode) == 0x000008, "Member 'WEAPON_LaserRapier_C_OnStartedMeleeAttack::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnStartedMeleeAttack, CallFunc_HasEnoughEnergy_Result) == 0x000108, "Member 'WEAPON_LaserRapier_C_OnStartedMeleeAttack::CallFunc_HasEnoughEnergy_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnStartedMeleeAttack, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00010C, "Member 'WEAPON_LaserRapier_C_OnStartedMeleeAttack::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnStartedMeleeAttack, CallFunc_FTrunc_ReturnValue) == 0x000110, "Member 'WEAPON_LaserRapier_C_OnStartedMeleeAttack::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnStartedMeleeAttack, CallFunc_TryToDrainEnergy_PercentageDrained) == 0x000114, "Member 'WEAPON_LaserRapier_C_OnStartedMeleeAttack::CallFunc_TryToDrainEnergy_PercentageDrained' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.GetOwnerEnergy
// 0x0018 (0x0018 - 0x0000)
struct WEAPON_LaserRapier_C_GetOwnerEnergy final
{
public:
	int32                                         Energy;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_GetOwnerEnergy) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_GetOwnerEnergy");
static_assert(sizeof(WEAPON_LaserRapier_C_GetOwnerEnergy) == 0x000018, "Wrong size on WEAPON_LaserRapier_C_GetOwnerEnergy");
static_assert(offsetof(WEAPON_LaserRapier_C_GetOwnerEnergy, Energy) == 0x000000, "Member 'WEAPON_LaserRapier_C_GetOwnerEnergy::Energy' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GetOwnerEnergy, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'WEAPON_LaserRapier_C_GetOwnerEnergy::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GetOwnerEnergy, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'WEAPON_LaserRapier_C_GetOwnerEnergy::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GetOwnerEnergy, CallFunc_Round_ReturnValue) == 0x000014, "Member 'WEAPON_LaserRapier_C_GetOwnerEnergy::CallFunc_Round_ReturnValue' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.HasEnoughEnergy
// 0x0110 (0x0110 - 0x0000)
struct WEAPON_LaserRapier_C_HasEnoughEnergy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetOwnerEnergy_Energy;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0008(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_HasEnoughEnergy) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_HasEnoughEnergy");
static_assert(sizeof(WEAPON_LaserRapier_C_HasEnoughEnergy) == 0x000110, "Wrong size on WEAPON_LaserRapier_C_HasEnoughEnergy");
static_assert(offsetof(WEAPON_LaserRapier_C_HasEnoughEnergy, Result) == 0x000000, "Member 'WEAPON_LaserRapier_C_HasEnoughEnergy::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_HasEnoughEnergy, CallFunc_GetOwnerEnergy_Energy) == 0x000004, "Member 'WEAPON_LaserRapier_C_HasEnoughEnergy::CallFunc_GetOwnerEnergy_Energy' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_HasEnoughEnergy, CallFunc_GetCurrentMode_Mode) == 0x000008, "Member 'WEAPON_LaserRapier_C_HasEnoughEnergy::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_HasEnoughEnergy, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000108, "Member 'WEAPON_LaserRapier_C_HasEnoughEnergy::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.OnWeaponBecameActivatable
// 0x0018 (0x0018 - 0x0000)
struct WEAPON_LaserRapier_C_OnWeaponBecameActivatable final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowImmediately;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEnoughEnergy_Result;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_OnWeaponBecameActivatable) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_OnWeaponBecameActivatable");
static_assert(sizeof(WEAPON_LaserRapier_C_OnWeaponBecameActivatable) == 0x000018, "Wrong size on WEAPON_LaserRapier_C_OnWeaponBecameActivatable");
static_assert(offsetof(WEAPON_LaserRapier_C_OnWeaponBecameActivatable, Character) == 0x000000, "Member 'WEAPON_LaserRapier_C_OnWeaponBecameActivatable::Character' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnWeaponBecameActivatable, ShowImmediately) == 0x000008, "Member 'WEAPON_LaserRapier_C_OnWeaponBecameActivatable::ShowImmediately' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnWeaponBecameActivatable, Temp_bool_Variable) == 0x000009, "Member 'WEAPON_LaserRapier_C_OnWeaponBecameActivatable::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnWeaponBecameActivatable, Temp_float_Variable) == 0x00000C, "Member 'WEAPON_LaserRapier_C_OnWeaponBecameActivatable::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnWeaponBecameActivatable, CallFunc_HasEnoughEnergy_Result) == 0x000010, "Member 'WEAPON_LaserRapier_C_OnWeaponBecameActivatable::CallFunc_HasEnoughEnergy_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnWeaponBecameActivatable, K2Node_Select_Default) == 0x000014, "Member 'WEAPON_LaserRapier_C_OnWeaponBecameActivatable::K2Node_Select_Default' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.DisableDamage
// 0x0014 (0x0014 - 0x0000)
struct WEAPON_LaserRapier_C_DisableDamage final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasEnoughEnergy_Result;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DisableDamage_Result;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_DisableDamage) == 0x000004, "Wrong alignment on WEAPON_LaserRapier_C_DisableDamage");
static_assert(sizeof(WEAPON_LaserRapier_C_DisableDamage) == 0x000014, "Wrong size on WEAPON_LaserRapier_C_DisableDamage");
static_assert(offsetof(WEAPON_LaserRapier_C_DisableDamage, Result) == 0x000000, "Member 'WEAPON_LaserRapier_C_DisableDamage::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_DisableDamage, Temp_bool_Variable) == 0x000001, "Member 'WEAPON_LaserRapier_C_DisableDamage::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_DisableDamage, Temp_float_Variable) == 0x000004, "Member 'WEAPON_LaserRapier_C_DisableDamage::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_DisableDamage, CallFunc_HasEnoughEnergy_Result) == 0x000008, "Member 'WEAPON_LaserRapier_C_DisableDamage::CallFunc_HasEnoughEnergy_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_DisableDamage, K2Node_Select_Default) == 0x00000C, "Member 'WEAPON_LaserRapier_C_DisableDamage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_DisableDamage, CallFunc_DisableDamage_Result) == 0x000010, "Member 'WEAPON_LaserRapier_C_DisableDamage::CallFunc_DisableDamage_Result' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.UpdatePowerLevel
// 0x0028 (0x0028 - 0x0000)
struct WEAPON_LaserRapier_C_UpdatePowerLevel final
{
public:
	float                                         PowerLevel;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnDraw;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetLaserBeamColorValue_Color;             // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_PlayDischargeParticleFX_SpawnedComponent; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_UpdatePowerLevel) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_UpdatePowerLevel");
static_assert(sizeof(WEAPON_LaserRapier_C_UpdatePowerLevel) == 0x000028, "Wrong size on WEAPON_LaserRapier_C_UpdatePowerLevel");
static_assert(offsetof(WEAPON_LaserRapier_C_UpdatePowerLevel, PowerLevel) == 0x000000, "Member 'WEAPON_LaserRapier_C_UpdatePowerLevel::PowerLevel' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_UpdatePowerLevel, OnDraw) == 0x000004, "Member 'WEAPON_LaserRapier_C_UpdatePowerLevel::OnDraw' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_UpdatePowerLevel, CallFunc_GetLaserBeamColorValue_Color) == 0x000008, "Member 'WEAPON_LaserRapier_C_UpdatePowerLevel::CallFunc_GetLaserBeamColorValue_Color' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_UpdatePowerLevel, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WEAPON_LaserRapier_C_UpdatePowerLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_UpdatePowerLevel, CallFunc_PlayDischargeParticleFX_SpawnedComponent) == 0x000020, "Member 'WEAPON_LaserRapier_C_UpdatePowerLevel::CallFunc_PlayDischargeParticleFX_SpawnedComponent' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.EVENT_OnHolsterFinished
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_LaserRapier_C_EVENT_OnHolsterFinished final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_EVENT_OnHolsterFinished) == 0x000001, "Wrong alignment on WEAPON_LaserRapier_C_EVENT_OnHolsterFinished");
static_assert(sizeof(WEAPON_LaserRapier_C_EVENT_OnHolsterFinished) == 0x000001, "Wrong size on WEAPON_LaserRapier_C_EVENT_OnHolsterFinished");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnHolsterFinished, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WEAPON_LaserRapier_C_EVENT_OnHolsterFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.ChangeMeleeEventBindings
// 0x0048 (0x0048 - 0x0000)
struct WEAPON_LaserRapier_C_ChangeMeleeEventBindings final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_ChangeMeleeEventBindings) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_ChangeMeleeEventBindings");
static_assert(sizeof(WEAPON_LaserRapier_C_ChangeMeleeEventBindings) == 0x000048, "Wrong size on WEAPON_LaserRapier_C_ChangeMeleeEventBindings");
static_assert(offsetof(WEAPON_LaserRapier_C_ChangeMeleeEventBindings, Enable) == 0x000000, "Member 'WEAPON_LaserRapier_C_ChangeMeleeEventBindings::Enable' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ChangeMeleeEventBindings, OwnerCharacter) == 0x000008, "Member 'WEAPON_LaserRapier_C_ChangeMeleeEventBindings::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ChangeMeleeEventBindings, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WEAPON_LaserRapier_C_ChangeMeleeEventBindings::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ChangeMeleeEventBindings, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'WEAPON_LaserRapier_C_ChangeMeleeEventBindings::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ChangeMeleeEventBindings, CallFunc_GetAttribInstance_ReturnValue) == 0x000030, "Member 'WEAPON_LaserRapier_C_ChangeMeleeEventBindings::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ChangeMeleeEventBindings, CallFunc_GetOwnerCharacter_Character) == 0x000038, "Member 'WEAPON_LaserRapier_C_ChangeMeleeEventBindings::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ChangeMeleeEventBindings, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000040, "Member 'WEAPON_LaserRapier_C_ChangeMeleeEventBindings::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.EVENT_OnEnergyChanged
// 0x0128 (0x0128 - 0x0000)
struct WEAPON_LaserRapier_C_EVENT_OnEnergyChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EModApplyType                                 ApplyType;                                         // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0018(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_EVENT_OnEnergyChanged");
static_assert(sizeof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged) == 0x000128, "Wrong size on WEAPON_LaserRapier_C_EVENT_OnEnergyChanged");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged, CurrValue) == 0x000000, "Member 'WEAPON_LaserRapier_C_EVENT_OnEnergyChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged, LastValue) == 0x000004, "Member 'WEAPON_LaserRapier_C_EVENT_OnEnergyChanged::LastValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged, MaxValue) == 0x000008, "Member 'WEAPON_LaserRapier_C_EVENT_OnEnergyChanged::MaxValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged, ApplyType) == 0x00000C, "Member 'WEAPON_LaserRapier_C_EVENT_OnEnergyChanged::ApplyType' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged, Temp_bool_Variable) == 0x00000D, "Member 'WEAPON_LaserRapier_C_EVENT_OnEnergyChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged, Temp_float_Variable) == 0x000010, "Member 'WEAPON_LaserRapier_C_EVENT_OnEnergyChanged::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged, CallFunc_GetCurrentMode_Mode) == 0x000018, "Member 'WEAPON_LaserRapier_C_EVENT_OnEnergyChanged::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged, CallFunc_Less_FloatFloat_ReturnValue) == 0x000118, "Member 'WEAPON_LaserRapier_C_EVENT_OnEnergyChanged::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00011C, "Member 'WEAPON_LaserRapier_C_EVENT_OnEnergyChanged::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000120, "Member 'WEAPON_LaserRapier_C_EVENT_OnEnergyChanged::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnEnergyChanged, K2Node_Select_Default) == 0x000124, "Member 'WEAPON_LaserRapier_C_EVENT_OnEnergyChanged::K2Node_Select_Default' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.GenerateLaserBeamColorType
// 0x0038 (0x0038 - 0x0000)
struct WEAPON_LaserRapier_C_GenerateLaserBeamColorType final
{
public:
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetHUDColorTheme_Result;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Array_Random_OutItem;                     // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_GenerateLaserBeamColorType");
static_assert(sizeof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType) == 0x000038, "Wrong size on WEAPON_LaserRapier_C_GenerateLaserBeamColorType");
static_assert(offsetof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000000, "Member 'WEAPON_LaserRapier_C_GenerateLaserBeamColorType::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType, CallFunc_GetHUDColorTheme_Result) == 0x000008, "Member 'WEAPON_LaserRapier_C_GenerateLaserBeamColorType::CallFunc_GetHUDColorTheme_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WEAPON_LaserRapier_C_GenerateLaserBeamColorType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType, CallFunc_Map_Find_Value) == 0x000014, "Member 'WEAPON_LaserRapier_C_GenerateLaserBeamColorType::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'WEAPON_LaserRapier_C_GenerateLaserBeamColorType::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType, CallFunc_Conv_IntToByte_ReturnValue) == 0x000019, "Member 'WEAPON_LaserRapier_C_GenerateLaserBeamColorType::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType, CallFunc_Array_Random_OutItem) == 0x00001C, "Member 'WEAPON_LaserRapier_C_GenerateLaserBeamColorType::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType, CallFunc_Array_Random_OutIndex) == 0x00002C, "Member 'WEAPON_LaserRapier_C_GenerateLaserBeamColorType::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType, CallFunc_GetValidValue_ReturnValue) == 0x000030, "Member 'WEAPON_LaserRapier_C_GenerateLaserBeamColorType::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000031, "Member 'WEAPON_LaserRapier_C_GenerateLaserBeamColorType::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GenerateLaserBeamColorType, CallFunc_GetValidValue_ReturnValue_1) == 0x000032, "Member 'WEAPON_LaserRapier_C_GenerateLaserBeamColorType::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.GetLaserBeamColorType
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_LaserRapier_C_GetLaserBeamColorType final
{
public:
	ENUM_LaserRapierColor                         Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_GetLaserBeamColorType) == 0x000001, "Wrong alignment on WEAPON_LaserRapier_C_GetLaserBeamColorType");
static_assert(sizeof(WEAPON_LaserRapier_C_GetLaserBeamColorType) == 0x000001, "Wrong size on WEAPON_LaserRapier_C_GetLaserBeamColorType");
static_assert(offsetof(WEAPON_LaserRapier_C_GetLaserBeamColorType, Result) == 0x000000, "Member 'WEAPON_LaserRapier_C_GetLaserBeamColorType::Result' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.GetLaserBeamColorValue
// 0x002C (0x002C - 0x0000)
struct WEAPON_LaserRapier_C_GetLaserBeamColorValue final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_GetLaserBeamColorValue) == 0x000004, "Wrong alignment on WEAPON_LaserRapier_C_GetLaserBeamColorValue");
static_assert(sizeof(WEAPON_LaserRapier_C_GetLaserBeamColorValue) == 0x00002C, "Wrong size on WEAPON_LaserRapier_C_GetLaserBeamColorValue");
static_assert(offsetof(WEAPON_LaserRapier_C_GetLaserBeamColorValue, Color) == 0x000000, "Member 'WEAPON_LaserRapier_C_GetLaserBeamColorValue::Color' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GetLaserBeamColorValue, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'WEAPON_LaserRapier_C_GetLaserBeamColorValue::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GetLaserBeamColorValue, CallFunc_Array_Get_Item) == 0x000014, "Member 'WEAPON_LaserRapier_C_GetLaserBeamColorValue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GetLaserBeamColorValue, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000024, "Member 'WEAPON_LaserRapier_C_GetLaserBeamColorValue::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_GetLaserBeamColorValue, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000028, "Member 'WEAPON_LaserRapier_C_GetLaserBeamColorValue::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.CalcDamageAndArmorPenetration
// 0x0148 (0x0148 - 0x0000)
struct WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration final
{
public:
	float                                         DamageScale;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStrongSwing;                                     // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribDamageType*                      DamageType;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Damage;                                            // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ArmorPenetration;                                  // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0020(0x0100)(HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TryToDrainEnergy_PercentageDrained;       // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribDamageType*                      CallFunc_CalcDamageAndArmorPenetration_DamageType; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcDamageAndArmorPenetration_Damage;     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcDamageAndArmorPenetration_ArmorPenetration; // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration");
static_assert(sizeof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration) == 0x000148, "Wrong size on WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, DamageScale) == 0x000000, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::DamageScale' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, IsStrongSwing) == 0x000004, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::IsStrongSwing' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, DamageType) == 0x000008, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::DamageType' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, Damage) == 0x000010, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::Damage' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, ArmorPenetration) == 0x000014, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::ArmorPenetration' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000018, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, CallFunc_GetCurrentMode_Mode) == 0x000020, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000120, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, CallFunc_Round_ReturnValue) == 0x000124, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, CallFunc_Add_IntInt_ReturnValue) == 0x000128, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, CallFunc_TryToDrainEnergy_PercentageDrained) == 0x00012C, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::CallFunc_TryToDrainEnergy_PercentageDrained' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, CallFunc_Lerp_ReturnValue) == 0x000130, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, CallFunc_CalcDamageAndArmorPenetration_DamageType) == 0x000138, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::CallFunc_CalcDamageAndArmorPenetration_DamageType' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, CallFunc_CalcDamageAndArmorPenetration_Damage) == 0x000140, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::CallFunc_CalcDamageAndArmorPenetration_Damage' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration, CallFunc_CalcDamageAndArmorPenetration_ArmorPenetration) == 0x000144, "Member 'WEAPON_LaserRapier_C_CalcDamageAndArmorPenetration::CallFunc_CalcDamageAndArmorPenetration_ArmorPenetration' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.ForceUpdateIdleSound
// 0x00A8 (0x00A8 - 0x0000)
struct WEAPON_LaserRapier_C_ForceUpdateIdleSound final
{
public:
	float                                         NewPowerLevel;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnDraw;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             IdleTransitionSoundCue;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             IdleSoundCue;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               K2Node_Select_Default;                             // 0x0020(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_2;                           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result_1;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue_1;         // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_ForceUpdateIdleSound) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_ForceUpdateIdleSound");
static_assert(sizeof(WEAPON_LaserRapier_C_ForceUpdateIdleSound) == 0x0000A8, "Wrong size on WEAPON_LaserRapier_C_ForceUpdateIdleSound");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, NewPowerLevel) == 0x000000, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::NewPowerLevel' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, OnDraw) == 0x000004, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::OnDraw' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, IdleTransitionSoundCue) == 0x000008, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::IdleTransitionSoundCue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, IdleSoundCue) == 0x000010, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::IdleSoundCue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, Temp_bool_Variable) == 0x000018, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, Temp_bool_Variable_1) == 0x000019, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001A, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, K2Node_Select_Default) == 0x000020, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000050, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, K2Node_DynamicCast_AsSound_Cue) == 0x000058, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, Temp_bool_Variable_2) == 0x000061, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000062, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, CallFunc_GetWeaponMeshComponent_Result) == 0x000068, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, K2Node_Select_Default_1) == 0x000070, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000078, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000080, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, K2Node_Select_Default_2) == 0x000088, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, CallFunc_GetWeaponMeshComponent_Result_1) == 0x000090, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::CallFunc_GetWeaponMeshComponent_Result_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, CallFunc_SpawnSoundAttached_ReturnValue_1) == 0x000098, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::CallFunc_SpawnSoundAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ForceUpdateIdleSound, CallFunc_IsValid_ReturnValue_1) == 0x0000A0, "Member 'WEAPON_LaserRapier_C_ForceUpdateIdleSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.TryUpdateIdleSound
// 0x0008 (0x0008 - 0x0000)
struct WEAPON_LaserRapier_C_TryUpdateIdleSound final
{
public:
	float                                         NewPowerLevel;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnDraw;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_TryUpdateIdleSound) == 0x000004, "Wrong alignment on WEAPON_LaserRapier_C_TryUpdateIdleSound");
static_assert(sizeof(WEAPON_LaserRapier_C_TryUpdateIdleSound) == 0x000008, "Wrong size on WEAPON_LaserRapier_C_TryUpdateIdleSound");
static_assert(offsetof(WEAPON_LaserRapier_C_TryUpdateIdleSound, NewPowerLevel) == 0x000000, "Member 'WEAPON_LaserRapier_C_TryUpdateIdleSound::NewPowerLevel' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryUpdateIdleSound, OnDraw) == 0x000004, "Member 'WEAPON_LaserRapier_C_TryUpdateIdleSound::OnDraw' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryUpdateIdleSound, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000005, "Member 'WEAPON_LaserRapier_C_TryUpdateIdleSound::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryUpdateIdleSound, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000006, "Member 'WEAPON_LaserRapier_C_TryUpdateIdleSound::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryUpdateIdleSound, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000007, "Member 'WEAPON_LaserRapier_C_TryUpdateIdleSound::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.TryFadeOutIdleSound
// 0x0010 (0x0010 - 0x0000)
struct WEAPON_LaserRapier_C_TryFadeOutIdleSound final
{
public:
	class USoundBase*                             ActivationChangeCue;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_TryFadeOutIdleSound) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_TryFadeOutIdleSound");
static_assert(sizeof(WEAPON_LaserRapier_C_TryFadeOutIdleSound) == 0x000010, "Wrong size on WEAPON_LaserRapier_C_TryFadeOutIdleSound");
static_assert(offsetof(WEAPON_LaserRapier_C_TryFadeOutIdleSound, ActivationChangeCue) == 0x000000, "Member 'WEAPON_LaserRapier_C_TryFadeOutIdleSound::ActivationChangeCue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryFadeOutIdleSound, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WEAPON_LaserRapier_C_TryFadeOutIdleSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.TryToDrainEnergy
// 0x0050 (0x0050 - 0x0000)
struct WEAPON_LaserRapier_C_TryToDrainEnergy final
{
public:
	int32                                         EnergyToDrain;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PercentageDrained;                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EnergyPercentageDrained;                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOwnerEnergy_Energy;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_TryToDrainEnergy) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_TryToDrainEnergy");
static_assert(sizeof(WEAPON_LaserRapier_C_TryToDrainEnergy) == 0x000050, "Wrong size on WEAPON_LaserRapier_C_TryToDrainEnergy");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, EnergyToDrain) == 0x000000, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::EnergyToDrain' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, PercentageDrained) == 0x000004, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::PercentageDrained' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, EnergyPercentageDrained) == 0x000008, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::EnergyPercentageDrained' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, OwnerCharacter) == 0x000010, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00001C, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, CallFunc_GetOwnerEnergy_Energy) == 0x000020, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::CallFunc_GetOwnerEnergy_Energy' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000024, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000028, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, CallFunc_FClamp_ReturnValue) == 0x00002C, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, CallFunc_GetOwnerCharacter_Character) == 0x000038, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, CallFunc_Multiply_IntInt_ReturnValue) == 0x000040, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000044, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryToDrainEnergy, CallFunc_ApplyMod_ReturnValue) == 0x000048, "Member 'WEAPON_LaserRapier_C_TryToDrainEnergy::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.SetLaserBeamColorType
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_LaserRapier_C_SetLaserBeamColorType final
{
public:
	ENUM_LaserRapierColor                         Color;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_SetLaserBeamColorType) == 0x000001, "Wrong alignment on WEAPON_LaserRapier_C_SetLaserBeamColorType");
static_assert(sizeof(WEAPON_LaserRapier_C_SetLaserBeamColorType) == 0x000001, "Wrong size on WEAPON_LaserRapier_C_SetLaserBeamColorType");
static_assert(offsetof(WEAPON_LaserRapier_C_SetLaserBeamColorType, Color) == 0x000000, "Member 'WEAPON_LaserRapier_C_SetLaserBeamColorType::Color' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.OnBecomeUnactivatable
// 0x0002 (0x0002 - 0x0000)
struct WEAPON_LaserRapier_C_OnBecomeUnactivatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBecomeUnactivatable_Result;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_OnBecomeUnactivatable) == 0x000001, "Wrong alignment on WEAPON_LaserRapier_C_OnBecomeUnactivatable");
static_assert(sizeof(WEAPON_LaserRapier_C_OnBecomeUnactivatable) == 0x000002, "Wrong size on WEAPON_LaserRapier_C_OnBecomeUnactivatable");
static_assert(offsetof(WEAPON_LaserRapier_C_OnBecomeUnactivatable, Result) == 0x000000, "Member 'WEAPON_LaserRapier_C_OnBecomeUnactivatable::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnBecomeUnactivatable, CallFunc_OnBecomeUnactivatable_Result) == 0x000001, "Member 'WEAPON_LaserRapier_C_OnBecomeUnactivatable::CallFunc_OnBecomeUnactivatable_Result' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct WEAPON_LaserRapier_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_ReceiveAnimationMessage");
static_assert(sizeof(WEAPON_LaserRapier_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on WEAPON_LaserRapier_C_ReceiveAnimationMessage");
static_assert(offsetof(WEAPON_LaserRapier_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'WEAPON_LaserRapier_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'WEAPON_LaserRapier_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x000011, "Member 'WEAPON_LaserRapier_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000012, "Member 'WEAPON_LaserRapier_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.OnKilledCharacter
// 0x0040 (0x0040 - 0x0000)
struct WEAPON_LaserRapier_C_OnKilledCharacter final
{
public:
	class APAWN_SystemShockCharacter_C*           KilledCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    KillDiegoAchievementHandle;                        // 0x0008(0x0010)(Edit, BlueprintVisible, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_DiegoV3_C*                        K2Node_DynamicCast_AsPAWN_Diego_V3;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryCompleteBinaryAchievement_Result;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_OnKilledCharacter) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_OnKilledCharacter");
static_assert(sizeof(WEAPON_LaserRapier_C_OnKilledCharacter) == 0x000040, "Wrong size on WEAPON_LaserRapier_C_OnKilledCharacter");
static_assert(offsetof(WEAPON_LaserRapier_C_OnKilledCharacter, KilledCharacter) == 0x000000, "Member 'WEAPON_LaserRapier_C_OnKilledCharacter::KilledCharacter' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnKilledCharacter, KillDiegoAchievementHandle) == 0x000008, "Member 'WEAPON_LaserRapier_C_OnKilledCharacter::KillDiegoAchievementHandle' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnKilledCharacter, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'WEAPON_LaserRapier_C_OnKilledCharacter::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnKilledCharacter, K2Node_DynamicCast_AsPAWN_Diego_V3) == 0x000020, "Member 'WEAPON_LaserRapier_C_OnKilledCharacter::K2Node_DynamicCast_AsPAWN_Diego_V3' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnKilledCharacter, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WEAPON_LaserRapier_C_OnKilledCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnKilledCharacter, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'WEAPON_LaserRapier_C_OnKilledCharacter::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnKilledCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'WEAPON_LaserRapier_C_OnKilledCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_OnKilledCharacter, CallFunc_TryCompleteBinaryAchievement_Result) == 0x000039, "Member 'WEAPON_LaserRapier_C_OnKilledCharacter::CallFunc_TryCompleteBinaryAchievement_Result' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.IsSlicingAttack
// 0x0001 (0x0001 - 0x0000)
struct WEAPON_LaserRapier_C_IsSlicingAttack final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_IsSlicingAttack) == 0x000001, "Wrong alignment on WEAPON_LaserRapier_C_IsSlicingAttack");
static_assert(sizeof(WEAPON_LaserRapier_C_IsSlicingAttack) == 0x000001, "Wrong size on WEAPON_LaserRapier_C_IsSlicingAttack");
static_assert(offsetof(WEAPON_LaserRapier_C_IsSlicingAttack, Result) == 0x000000, "Member 'WEAPON_LaserRapier_C_IsSlicingAttack::Result' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.TryBeginReloading
// 0x0118 (0x0118 - 0x0000)
struct WEAPON_LaserRapier_C_TryBeginReloading final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           ItemToActivate;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        EnergyAttribInstance;                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxValue_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetBestBatteryClassForEnergyLevel_IsValid; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_GetBestBatteryClassForEnergyLevel_BestClass; // 0x0048(0x0028)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_GetBestBatteryClassForEnergyLevel_FallbackClass; // 0x0070(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x00B0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Activate_Result;                          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_FindItemBySoftClass_FoundItem;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetReloadCanUseBatteries_Result;          // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WEAPON_LaserRapier_C_TryBeginReloading) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_TryBeginReloading");
static_assert(sizeof(WEAPON_LaserRapier_C_TryBeginReloading) == 0x000118, "Wrong size on WEAPON_LaserRapier_C_TryBeginReloading");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, Result) == 0x000000, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, ItemToActivate) == 0x000008, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::ItemToActivate' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, EnergyAttribInstance) == 0x000010, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::EnergyAttribInstance' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CharacterOwner) == 0x000018, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CharacterOwner' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_IsValid_ReturnValue_1) == 0x000025, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_GetMaxValue_ReturnValue) == 0x000030, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_GetMaxValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_GetValue_ReturnValue) == 0x000034, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_Round_ReturnValue) == 0x00003C, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_GetBestBatteryClassForEnergyLevel_IsValid) == 0x000040, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_GetBestBatteryClassForEnergyLevel_IsValid' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_GetBestBatteryClassForEnergyLevel_BestClass) == 0x000048, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_GetBestBatteryClassForEnergyLevel_BestClass' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_GetBestBatteryClassForEnergyLevel_FallbackClass) == 0x000070, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_GetBestBatteryClassForEnergyLevel_FallbackClass' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_IsValid_ReturnValue_2) == 0x000098, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, K2Node_MakeArray_Array) == 0x0000A0, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_GetAttribInstance_ReturnValue) == 0x0000E0, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_Activate_Result) == 0x0000E8, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_Activate_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_GetInventoryComponent_Inventory) == 0x0000F0, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_FindItemBySoftClass_FoundItem) == 0x0000F8, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_FindItemBySoftClass_FoundItem' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_GetOwnerCharacter_Character) == 0x000100, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000108, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_IsEquipped_Result) == 0x000110, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_IsEquipped_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_TryBeginReloading, CallFunc_GetReloadCanUseBatteries_Result) == 0x000111, "Member 'WEAPON_LaserRapier_C_TryBeginReloading::CallFunc_GetReloadCanUseBatteries_Result' has a wrong offset!");

// Function WEAPON_LaserRapier.WEAPON_LaserRapier_C.EVENT_OnImpactEffectsSpawned
// 0x00D8 (0x00D8 - 0x0000)
struct WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NiagaraComponent;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      K2Node_DynamicCast_AsNiagara_Particle_System;      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x003C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_GetLaserBeamColorValue_Color;             // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned) == 0x000008, "Wrong alignment on WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned");
static_assert(sizeof(WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned) == 0x0000D8, "Wrong size on WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned, Object) == 0x000000, "Member 'WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned::Object' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned, NiagaraComponent) == 0x000008, "Member 'WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned::NiagaraComponent' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned, CallFunc_GetWeaponMeshComponent_Result) == 0x000010, "Member 'WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned, K2Node_DynamicCast_AsNiagara_Particle_System) == 0x000018, "Member 'WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned::K2Node_DynamicCast_AsNiagara_Particle_System' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned, CallFunc_GetSocketRotation_ReturnValue) == 0x000024, "Member 'WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned, CallFunc_ComposeRotators_ReturnValue) == 0x000030, "Member 'WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x00003C, "Member 'WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned, CallFunc_GetLaserBeamColorValue_Color) == 0x0000C4, "Member 'WEAPON_LaserRapier_C_EVENT_OnImpactEffectsSpawned::CallFunc_GetLaserBeamColorValue_Color' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_OptionsMenu_Controls_GamepadList

#include "Basic.hpp"

#include "STRUCT_BoundInputActionPair_structs.hpp"
#include "WIDGET_MenuListBase_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_OptionsMenu_Controls_GamepadList.WIDGET_OptionsMenu_Controls_GamepadList_C
// 0x0160 (0x0428 - 0x02C8)
class UWIDGET_OptionsMenu_Controls_GamepadList_C final : public UWIDGET_MenuListBase_C
{
public:
	uint8                                         Pad_2C2[0x6];                                      // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBox*                             SCROLLBOX_Options;                                 // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_ActionLabel;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_AltLabel;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_MainLabel;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> RealspaceKeyMap;                                   // 0x02E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> CyberspaceKeyMap;                                  // 0x0338(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> MinigameKeyMap;                                    // 0x0388(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class UOPTION_Controls_InputBind_C*> OptionKeyMap;                                      // 0x03D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void SetHighlightedListItem(int32 ItemIndex, bool SelectionState);
	void InitializeItemArray(TArray<class UWIDGET_MenuListItemBase_C*>* MenuListItems);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_OptionsMenu_Controls_GamepadList_C">();
	}
	static class UWIDGET_OptionsMenu_Controls_GamepadList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_OptionsMenu_Controls_GamepadList_C>();
	}
};
static_assert(alignof(UWIDGET_OptionsMenu_Controls_GamepadList_C) == 0x000008, "Wrong alignment on UWIDGET_OptionsMenu_Controls_GamepadList_C");
static_assert(sizeof(UWIDGET_OptionsMenu_Controls_GamepadList_C) == 0x000428, "Wrong size on UWIDGET_OptionsMenu_Controls_GamepadList_C");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_GamepadList_C, SCROLLBOX_Options) == 0x0002C8, "Member 'UWIDGET_OptionsMenu_Controls_GamepadList_C::SCROLLBOX_Options' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_GamepadList_C, TEXT_ActionLabel) == 0x0002D0, "Member 'UWIDGET_OptionsMenu_Controls_GamepadList_C::TEXT_ActionLabel' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_GamepadList_C, TEXT_AltLabel) == 0x0002D8, "Member 'UWIDGET_OptionsMenu_Controls_GamepadList_C::TEXT_AltLabel' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_GamepadList_C, TEXT_MainLabel) == 0x0002E0, "Member 'UWIDGET_OptionsMenu_Controls_GamepadList_C::TEXT_MainLabel' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_GamepadList_C, RealspaceKeyMap) == 0x0002E8, "Member 'UWIDGET_OptionsMenu_Controls_GamepadList_C::RealspaceKeyMap' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_GamepadList_C, CyberspaceKeyMap) == 0x000338, "Member 'UWIDGET_OptionsMenu_Controls_GamepadList_C::CyberspaceKeyMap' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_GamepadList_C, MinigameKeyMap) == 0x000388, "Member 'UWIDGET_OptionsMenu_Controls_GamepadList_C::MinigameKeyMap' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_GamepadList_C, OptionKeyMap) == 0x0003D8, "Member 'UWIDGET_OptionsMenu_Controls_GamepadList_C::OptionKeyMap' has a wrong offset!");

}


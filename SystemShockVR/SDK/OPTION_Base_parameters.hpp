#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OPTION_Base

#include "Basic.hpp"


namespace SDK::Params
{

// Function OPTION_Base.OPTION_Base_C.IsDirty
// 0x0001 (0x0001 - 0x0000)
struct OPTION_Base_C_IsDirty final
{
public:
	bool                                          IsDirty_0;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Base_C_IsDirty) == 0x000001, "Wrong alignment on OPTION_Base_C_IsDirty");
static_assert(sizeof(OPTION_Base_C_IsDirty) == 0x000001, "Wrong size on OPTION_Base_C_IsDirty");
static_assert(offsetof(OPTION_Base_C_IsDirty, IsDirty_0) == 0x000000, "Member 'OPTION_Base_C_IsDirty::IsDirty_0' has a wrong offset!");

// Function OPTION_Base.OPTION_Base_C.SetOptionEnabled
// 0x0002 (0x0002 - 0x0000)
struct OPTION_Base_C_SetOptionEnabled final
{
public:
	bool                                          IsOptionEnabled;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Base_C_SetOptionEnabled) == 0x000001, "Wrong alignment on OPTION_Base_C_SetOptionEnabled");
static_assert(sizeof(OPTION_Base_C_SetOptionEnabled) == 0x000002, "Wrong size on OPTION_Base_C_SetOptionEnabled");
static_assert(offsetof(OPTION_Base_C_SetOptionEnabled, IsOptionEnabled) == 0x000000, "Member 'OPTION_Base_C_SetOptionEnabled::IsOptionEnabled' has a wrong offset!");
static_assert(offsetof(OPTION_Base_C_SetOptionEnabled, Result) == 0x000001, "Member 'OPTION_Base_C_SetOptionEnabled::Result' has a wrong offset!");

// Function OPTION_Base.OPTION_Base_C.GetSaveSettings
// 0x0020 (0x0020 - 0x0000)
struct OPTION_Base_C_GetSaveSettings final
{
public:
	class USAVE_Settings_C*                       ShockSettings;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Base_C_GetSaveSettings) == 0x000008, "Wrong alignment on OPTION_Base_C_GetSaveSettings");
static_assert(sizeof(OPTION_Base_C_GetSaveSettings) == 0x000020, "Wrong size on OPTION_Base_C_GetSaveSettings");
static_assert(offsetof(OPTION_Base_C_GetSaveSettings, ShockSettings) == 0x000000, "Member 'OPTION_Base_C_GetSaveSettings::ShockSettings' has a wrong offset!");
static_assert(offsetof(OPTION_Base_C_GetSaveSettings, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'OPTION_Base_C_GetSaveSettings::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Base_C_GetSaveSettings, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'OPTION_Base_C_GetSaveSettings::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(OPTION_Base_C_GetSaveSettings, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'OPTION_Base_C_GetSaveSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function OPTION_Base.OPTION_Base_C.InitializeMenuListItem
// 0x0010 (0x0010 - 0x0000)
struct OPTION_Base_C_InitializeMenuListItem final
{
public:
	class UWIDGET_MenuListBase_C*                 ParentList;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OPTION_Base_C_InitializeMenuListItem) == 0x000008, "Wrong alignment on OPTION_Base_C_InitializeMenuListItem");
static_assert(sizeof(OPTION_Base_C_InitializeMenuListItem) == 0x000010, "Wrong size on OPTION_Base_C_InitializeMenuListItem");
static_assert(offsetof(OPTION_Base_C_InitializeMenuListItem, ParentList) == 0x000000, "Member 'OPTION_Base_C_InitializeMenuListItem::ParentList' has a wrong offset!");
static_assert(offsetof(OPTION_Base_C_InitializeMenuListItem, Index_0) == 0x000008, "Member 'OPTION_Base_C_InitializeMenuListItem::Index_0' has a wrong offset!");

// Function OPTION_Base.OPTION_Base_C.IsDefault
// 0x0001 (0x0001 - 0x0000)
struct OPTION_Base_C_IsDefault final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Base_C_IsDefault) == 0x000001, "Wrong alignment on OPTION_Base_C_IsDefault");
static_assert(sizeof(OPTION_Base_C_IsDefault) == 0x000001, "Wrong size on OPTION_Base_C_IsDefault");
static_assert(offsetof(OPTION_Base_C_IsDefault, Result) == 0x000000, "Member 'OPTION_Base_C_IsDefault::Result' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BulletProjectile_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BulletProjectile_Base.BulletProjectile_Base_C
// 0x0100 (0x0320 - 0x0220)
class ABulletProjectile_Base_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             ImpactDataTable;                                   // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    DropoffTemplate;                                   // 0x0240(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	float                                         ElapsedLifetime;                                   // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceTraveled;                                  // 0x0254(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTravelDistance;                                 // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileSpeed;                                   // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpactDetectionRadius;                             // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpactImpulseStrength;                             // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribDamageType*                      DamageType;                                        // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageValue;                                       // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArmorPenetration;                                  // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BulletRadius;                                      // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TraceComplexCollision;                             // 0x027C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DestroyOnCollision;                                // 0x027D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CollideWithInstigator;                             // 0x027E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27F[0x1];                                      // 0x027F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DeathBlowFXParamName;                              // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAttribModApplyData>            ApplyMods;                                         // 0x0288(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, SaveGame)
	ETraceTypeQuery                               CollisionTraceChannel;                             // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class APAWN_SystemShockCharacter_C*>     CollidedShieldCharacters;                          // 0x02A0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, SaveGame)
	TSoftObjectPtr<class UNiagaraSystem>          TracerFX;                                          // 0x02F0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UNiagaraComponent*                      TracerSystemComponent;                             // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BulletProjectile_Base(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void OnLoaded_B7AE79BA4DFA51C603CA18BF42112541(class UObject* Loaded);
	void InitializeDamageSettings(class UAttribDamageType* InDamageType, float InDamageValue, int32 InArmorPenetration, int32 InImpulseStrength, TArray<struct FAttribModApplyData>& AdditionalModsToApply);
	void IncrementalPositionUpdate(float DeltaTime, bool* Result);
	void TryBulletCollision(const struct FHitResult& Hit, float FrameHitDeltaTime, bool* Result);
	void ApplyDamageMod(class UAttribManagerComponent* AttribManager, class UOBJ_ImpactData_C* ImpactData, float FrameHitDeltaTime, struct FAttribDamageInstance* DamageInstance, class UAttribMod** DamageMod);
	void ApplySecondaryMod(class UAttribManagerComponent* AttribManager, struct FAttribModApplyData& ModApplyData, class UAttribMod** AttribMod);
	void GetIgnoreCollisionActors(TArray<class AActor*>* Result);
	void CanPierceThroughActor(class AActor* Actor, bool* Result);
	void TryPierceThroughArmor(int32 ArmorValue, bool* Result);
	void SetBaseBulletDamage(float NewDamage);
	void GetBaseBulletDamage(float* Result);
	void GetCurrentBulletDamage(float FrameHitDeltaTime, float* Result);
	void SetBaseBulletArmorPenetration(int32 NewValue);
	void GetBaseBulletArmorPenetration(int32* Result);
	void GetBulletDamageDropoffRate(float* Result);
	void GetImpactEffectParameters(const struct FHitResult& Hit, bool IsDeathBlow, struct FSTRUCT_EffectParams* EffectParams);
	void EVENT_OnSpawnedBulletImpactEffects(class UObject* EffectsObject);
	void SetDamageDropoffTemplate(const struct FDataTableRowHandle& Template);
	void OnSpawnedBulletImpactEffects(class UNiagaraComponent* EffectsComponent);
	void GetElapsedBulletLifetime(float* Result);
	void GetDamageBlockableByShields(float FrameHitDeltaTime, float* Result);
	void GetTracerSystemComponent(class UNiagaraComponent** SystemComponent);
	void GetInstigatorOrOwner(class AActor** Result);
	void CleanupBulletProjectile();
	void SpawnTracerEffects(class UNiagaraSystem* TracerSystem);
	void TryDeactivateTracerFX();
	void GetBulletTravelProgress(float* Result);
	bool ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0);
	bool ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms);
	bool ReceivePendingCharacterVelocity(const struct FVector& Velocity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BulletProjectile_Base_C">();
	}
	static class ABulletProjectile_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABulletProjectile_Base_C>();
	}
};
static_assert(alignof(ABulletProjectile_Base_C) == 0x000008, "Wrong alignment on ABulletProjectile_Base_C");
static_assert(sizeof(ABulletProjectile_Base_C) == 0x000320, "Wrong size on ABulletProjectile_Base_C");
static_assert(offsetof(ABulletProjectile_Base_C, UberGraphFrame) == 0x000220, "Member 'ABulletProjectile_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, StaticMesh) == 0x000228, "Member 'ABulletProjectile_Base_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, DefaultSceneRoot) == 0x000230, "Member 'ABulletProjectile_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, ImpactDataTable) == 0x000238, "Member 'ABulletProjectile_Base_C::ImpactDataTable' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, DropoffTemplate) == 0x000240, "Member 'ABulletProjectile_Base_C::DropoffTemplate' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, ElapsedLifetime) == 0x000250, "Member 'ABulletProjectile_Base_C::ElapsedLifetime' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, DistanceTraveled) == 0x000254, "Member 'ABulletProjectile_Base_C::DistanceTraveled' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, MaxTravelDistance) == 0x000258, "Member 'ABulletProjectile_Base_C::MaxTravelDistance' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, ProjectileSpeed) == 0x00025C, "Member 'ABulletProjectile_Base_C::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, ImpactDetectionRadius) == 0x000260, "Member 'ABulletProjectile_Base_C::ImpactDetectionRadius' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, ImpactImpulseStrength) == 0x000264, "Member 'ABulletProjectile_Base_C::ImpactImpulseStrength' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, DamageType) == 0x000268, "Member 'ABulletProjectile_Base_C::DamageType' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, DamageValue) == 0x000270, "Member 'ABulletProjectile_Base_C::DamageValue' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, ArmorPenetration) == 0x000274, "Member 'ABulletProjectile_Base_C::ArmorPenetration' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, BulletRadius) == 0x000278, "Member 'ABulletProjectile_Base_C::BulletRadius' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, TraceComplexCollision) == 0x00027C, "Member 'ABulletProjectile_Base_C::TraceComplexCollision' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, DestroyOnCollision) == 0x00027D, "Member 'ABulletProjectile_Base_C::DestroyOnCollision' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, CollideWithInstigator) == 0x00027E, "Member 'ABulletProjectile_Base_C::CollideWithInstigator' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, DeathBlowFXParamName) == 0x000280, "Member 'ABulletProjectile_Base_C::DeathBlowFXParamName' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, ApplyMods) == 0x000288, "Member 'ABulletProjectile_Base_C::ApplyMods' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, CollisionTraceChannel) == 0x000298, "Member 'ABulletProjectile_Base_C::CollisionTraceChannel' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, CollidedShieldCharacters) == 0x0002A0, "Member 'ABulletProjectile_Base_C::CollidedShieldCharacters' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, TracerFX) == 0x0002F0, "Member 'ABulletProjectile_Base_C::TracerFX' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_Base_C, TracerSystemComponent) == 0x000318, "Member 'ABulletProjectile_Base_C::TracerSystemComponent' has a wrong offset!");

}


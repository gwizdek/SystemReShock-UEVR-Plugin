#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HARDWARE_NavUnit_Base

#include "Basic.hpp"

#include "HARDWARE_NavUnit_Base_classes.hpp"
#include "HARDWARE_NavUnit_Base_parameters.hpp"


namespace SDK
{

// Function HARDWARE_NavUnit_Base.HARDWARE_NavUnit_Base_C.SetVoxelScannerActive
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_NavUnit_Base_C::SetVoxelScannerActive(bool Active)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_NavUnit_Base_C", "SetVoxelScannerActive");

	Params::HARDWARE_NavUnit_Base_C_SetVoxelScannerActive Parms{};

	Parms.Active = Active;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HARDWARE_NavUnit_Base.HARDWARE_NavUnit_Base_C.UpdateAvailableMapFilterTags
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UHARDWARE_NavUnit_Base_C::UpdateAvailableMapFilterTags()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_NavUnit_Base_C", "UpdateAvailableMapFilterTags");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HARDWARE_NavUnit_Base.HARDWARE_NavUnit_Base_C.GetMapFilterTags
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TSet<class FName>                       Tags                                                   (Parm, OutParm)

void UHARDWARE_NavUnit_Base_C::GetMapFilterTags(TSet<class FName>* Tags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_NavUnit_Base_C", "GetMapFilterTags");

	Params::HARDWARE_NavUnit_Base_C_GetMapFilterTags Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Tags != nullptr)
		*Tags = std::move(Parms.Tags);
}


// Function HARDWARE_NavUnit_Base.HARDWARE_NavUnit_Base_C.UpdateHardwareState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_NavUnit_Base_C::UpdateHardwareState(bool IsEnabled, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_NavUnit_Base_C", "UpdateHardwareState");

	Params::HARDWARE_NavUnit_Base_C_UpdateHardwareState Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_NavUnit_Base.HARDWARE_NavUnit_Base_C.OnUpgradedItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_UpgradeBase_C*              PreviousItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_NavUnit_Base_C::OnUpgradedItem(class UITEM_UpgradeBase_C* PreviousItem, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_NavUnit_Base_C", "OnUpgradedItem");

	Params::HARDWARE_NavUnit_Base_C_OnUpgradedItem Parms{};

	Parms.PreviousItem = PreviousItem;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_NavUnit_Base.HARDWARE_NavUnit_Base_C.GetHardwareFeatures
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTRUCT_HardwareFeature>  Result                                                 (Parm, OutParm)

void UHARDWARE_NavUnit_Base_C::GetHardwareFeatures(TArray<struct FSTRUCT_HardwareFeature>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_NavUnit_Base_C", "GetHardwareFeatures");

	Params::HARDWARE_NavUnit_Base_C_GetHardwareFeatures Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function HARDWARE_NavUnit_Base.HARDWARE_NavUnit_Base_C.OnAddedToInventory
// (Public, BlueprintCallable, BlueprintEvent)

void UHARDWARE_NavUnit_Base_C::OnAddedToInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_NavUnit_Base_C", "OnAddedToInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HARDWARE_NavUnit_Base.HARDWARE_NavUnit_Base_C.OnBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void UHARDWARE_NavUnit_Base_C::OnBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_NavUnit_Base_C", "OnBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}


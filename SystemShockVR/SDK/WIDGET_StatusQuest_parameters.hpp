#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_StatusQuest

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_StatusQuest.WIDGET_StatusQuest_C.ExecuteUbergraph_WIDGET_StatusQuest
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_StatusQuest_C_ExecuteUbergraph_WIDGET_StatusQuest final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_StatusQuest_C_ExecuteUbergraph_WIDGET_StatusQuest) == 0x000004, "Wrong alignment on WIDGET_StatusQuest_C_ExecuteUbergraph_WIDGET_StatusQuest");
static_assert(sizeof(WIDGET_StatusQuest_C_ExecuteUbergraph_WIDGET_StatusQuest) == 0x000008, "Wrong size on WIDGET_StatusQuest_C_ExecuteUbergraph_WIDGET_StatusQuest");
static_assert(offsetof(WIDGET_StatusQuest_C_ExecuteUbergraph_WIDGET_StatusQuest, EntryPoint) == 0x000000, "Member 'WIDGET_StatusQuest_C_ExecuteUbergraph_WIDGET_StatusQuest::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusQuest_C_ExecuteUbergraph_WIDGET_StatusQuest, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WIDGET_StatusQuest_C_ExecuteUbergraph_WIDGET_StatusQuest::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WIDGET_StatusQuest.WIDGET_StatusQuest_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_StatusQuest_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_StatusQuest_C_PreConstruct) == 0x000001, "Wrong alignment on WIDGET_StatusQuest_C_PreConstruct");
static_assert(sizeof(WIDGET_StatusQuest_C_PreConstruct) == 0x000001, "Wrong size on WIDGET_StatusQuest_C_PreConstruct");
static_assert(offsetof(WIDGET_StatusQuest_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WIDGET_StatusQuest_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WIDGET_StatusQuest.WIDGET_StatusQuest_C.InitializeStatusQuest
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_StatusQuest_C_InitializeStatusQuest final
{
public:
	class UWIDGET_Status_C*                       Status;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_StatusQuest_C_InitializeStatusQuest) == 0x000008, "Wrong alignment on WIDGET_StatusQuest_C_InitializeStatusQuest");
static_assert(sizeof(WIDGET_StatusQuest_C_InitializeStatusQuest) == 0x000008, "Wrong size on WIDGET_StatusQuest_C_InitializeStatusQuest");
static_assert(offsetof(WIDGET_StatusQuest_C_InitializeStatusQuest, Status) == 0x000000, "Member 'WIDGET_StatusQuest_C_InitializeStatusQuest::Status' has a wrong offset!");

// Function WIDGET_StatusQuest.WIDGET_StatusQuest_C.SetStatusQuest
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_StatusQuest_C_SetStatusQuest final
{
public:
	class FText                                   QuestValue;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_StatusQuest_C_SetStatusQuest) == 0x000008, "Wrong alignment on WIDGET_StatusQuest_C_SetStatusQuest");
static_assert(sizeof(WIDGET_StatusQuest_C_SetStatusQuest) == 0x000018, "Wrong size on WIDGET_StatusQuest_C_SetStatusQuest");
static_assert(offsetof(WIDGET_StatusQuest_C_SetStatusQuest, QuestValue) == 0x000000, "Member 'WIDGET_StatusQuest_C_SetStatusQuest::QuestValue' has a wrong offset!");

// Function WIDGET_StatusQuest.WIDGET_StatusQuest_C.EVENT_OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct WIDGET_StatusQuest_C_EVENT_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_StatusQuest_C_EVENT_OnMouseEnter) == 0x000008, "Wrong alignment on WIDGET_StatusQuest_C_EVENT_OnMouseEnter");
static_assert(sizeof(WIDGET_StatusQuest_C_EVENT_OnMouseEnter) == 0x0000B0, "Wrong size on WIDGET_StatusQuest_C_EVENT_OnMouseEnter");
static_assert(offsetof(WIDGET_StatusQuest_C_EVENT_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WIDGET_StatusQuest_C_EVENT_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusQuest_C_EVENT_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WIDGET_StatusQuest_C_EVENT_OnMouseEnter::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusQuest_C_EVENT_OnMouseEnter, CallFunc_PlayAnimation_ReturnValue) == 0x0000A8, "Member 'WIDGET_StatusQuest_C_EVENT_OnMouseEnter::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WIDGET_StatusQuest.WIDGET_StatusQuest_C.EVENT_OnMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_StatusQuest_C_EVENT_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_StatusQuest_C_EVENT_OnMouseLeave) == 0x000008, "Wrong alignment on WIDGET_StatusQuest_C_EVENT_OnMouseLeave");
static_assert(sizeof(WIDGET_StatusQuest_C_EVENT_OnMouseLeave) == 0x000070, "Wrong size on WIDGET_StatusQuest_C_EVENT_OnMouseLeave");
static_assert(offsetof(WIDGET_StatusQuest_C_EVENT_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WIDGET_StatusQuest_C_EVENT_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function WIDGET_StatusQuest.WIDGET_StatusQuest_C.EVENT_OnMouseButtonDown
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown) == 0x000008, "Wrong alignment on WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown");
static_assert(sizeof(WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown) == 0x000218, "Wrong size on WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown");
static_assert(offsetof(WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'WIDGET_StatusQuest_C_EVENT_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WIDGET_StatusQuest.WIDGET_StatusQuest_C.EVENT_OnMouseMove
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_StatusQuest_C_EVENT_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_StatusQuest_C_EVENT_OnMouseMove) == 0x000008, "Wrong alignment on WIDGET_StatusQuest_C_EVENT_OnMouseMove");
static_assert(sizeof(WIDGET_StatusQuest_C_EVENT_OnMouseMove) == 0x000218, "Wrong size on WIDGET_StatusQuest_C_EVENT_OnMouseMove");
static_assert(offsetof(WIDGET_StatusQuest_C_EVENT_OnMouseMove, MyGeometry) == 0x000000, "Member 'WIDGET_StatusQuest_C_EVENT_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusQuest_C_EVENT_OnMouseMove, MouseEvent) == 0x000038, "Member 'WIDGET_StatusQuest_C_EVENT_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusQuest_C_EVENT_OnMouseMove, ReturnValue) == 0x0000A8, "Member 'WIDGET_StatusQuest_C_EVENT_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_StatusQuest_C_EVENT_OnMouseMove, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'WIDGET_StatusQuest_C_EVENT_OnMouseMove::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WIDGET_StatusQuest.WIDGET_StatusQuest_C.GetToolTipText
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_StatusQuest_C_GetToolTipText final
{
public:
	class FText                                   ToolTip;                                           // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(WIDGET_StatusQuest_C_GetToolTipText) == 0x000008, "Wrong alignment on WIDGET_StatusQuest_C_GetToolTipText");
static_assert(sizeof(WIDGET_StatusQuest_C_GetToolTipText) == 0x000018, "Wrong size on WIDGET_StatusQuest_C_GetToolTipText");
static_assert(offsetof(WIDGET_StatusQuest_C_GetToolTipText, ToolTip) == 0x000000, "Member 'WIDGET_StatusQuest_C_GetToolTipText::ToolTip' has a wrong offset!");

}


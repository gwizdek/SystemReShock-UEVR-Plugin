#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_CyberWeapon_Base

#include "Basic.hpp"

#include "ITEM_Software_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ITEM_CyberWeapon_Base.ITEM_CyberWeapon_Base_C
// 0x0028 (0x0208 - 0x01E0)
#pragma pack(push, 0x1)
class alignas(0x08) UITEM_CyberWeapon_Base_C : public UITEM_Software_Base_C
{
public:
	class UClass*                                 ProjectileClass;                                   // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpawnDistance;                                     // 0x01E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribDamageType*                      DamageType;                                        // 0x01F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageValue;                                       // 0x01F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActivated;                                       // 0x01FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastFiredTimestamp;                                // 0x0200(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void EVENT_FireProjectile();
	void SpawnProjectile(const struct FVector& LocalOffset, class AActor** Projectile);
	void NotifyThreatenedEnemy(class APAWN_Avatar_C* Avatar);
	void GetIsActivated(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITEM_CyberWeapon_Base_C">();
	}
	static class UITEM_CyberWeapon_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITEM_CyberWeapon_Base_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UITEM_CyberWeapon_Base_C) == 0x000008, "Wrong alignment on UITEM_CyberWeapon_Base_C");
static_assert(sizeof(UITEM_CyberWeapon_Base_C) == 0x000208, "Wrong size on UITEM_CyberWeapon_Base_C");
static_assert(offsetof(UITEM_CyberWeapon_Base_C, ProjectileClass) == 0x0001E0, "Member 'UITEM_CyberWeapon_Base_C::ProjectileClass' has a wrong offset!");
static_assert(offsetof(UITEM_CyberWeapon_Base_C, SpawnDistance) == 0x0001E8, "Member 'UITEM_CyberWeapon_Base_C::SpawnDistance' has a wrong offset!");
static_assert(offsetof(UITEM_CyberWeapon_Base_C, DamageType) == 0x0001F0, "Member 'UITEM_CyberWeapon_Base_C::DamageType' has a wrong offset!");
static_assert(offsetof(UITEM_CyberWeapon_Base_C, DamageValue) == 0x0001F8, "Member 'UITEM_CyberWeapon_Base_C::DamageValue' has a wrong offset!");
static_assert(offsetof(UITEM_CyberWeapon_Base_C, IsActivated) == 0x0001FC, "Member 'UITEM_CyberWeapon_Base_C::IsActivated' has a wrong offset!");
static_assert(offsetof(UITEM_CyberWeapon_Base_C, LastFiredTimestamp) == 0x000200, "Member 'UITEM_CyberWeapon_Base_C::LastFiredTimestamp' has a wrong offset!");

}


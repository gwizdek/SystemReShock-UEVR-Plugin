#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_GamePig

#include "Basic.hpp"

#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ITEM_GamePig.ITEM_GamePig_C.PlayCurrentGame
// 0x00F0 (0x00F0 - 0x0000)
struct ITEM_GamePig_C_PlayCurrentGame final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_GameCartridge_Base_C*             GameCartridge;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  PlayerOwner;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_GameCartridge_Base_C*             CallFunc_GetGameCartridge_Game;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0070(0x0020)(HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_GamePig_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_GamePig_C_PlayCurrentGame) == 0x000010, "Wrong alignment on ITEM_GamePig_C_PlayCurrentGame");
static_assert(sizeof(ITEM_GamePig_C_PlayCurrentGame) == 0x0000F0, "Wrong size on ITEM_GamePig_C_PlayCurrentGame");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, Result) == 0x000000, "Member 'ITEM_GamePig_C_PlayCurrentGame::Result' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, GameCartridge) == 0x000008, "Member 'ITEM_GamePig_C_PlayCurrentGame::GameCartridge' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, PlayerOwner) == 0x000010, "Member 'ITEM_GamePig_C_PlayCurrentGame::PlayerOwner' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, CallFunc_GetGameCartridge_Game) == 0x000018, "Member 'ITEM_GamePig_C_PlayCurrentGame::CallFunc_GetGameCartridge_Game' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, CallFunc_GetInventory_Inventory) == 0x000020, "Member 'ITEM_GamePig_C_PlayCurrentGame::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'ITEM_GamePig_C_PlayCurrentGame::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000030, "Member 'ITEM_GamePig_C_PlayCurrentGame::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ITEM_GamePig_C_PlayCurrentGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, CallFunc_GetCameraRotation_ReturnValue) == 0x00003C, "Member 'ITEM_GamePig_C_PlayCurrentGame::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, CallFunc_ComposeRotators_ReturnValue) == 0x000048, "Member 'ITEM_GamePig_C_PlayCurrentGame::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, K2Node_DynamicCast_AsINTERF_Interactable) == 0x000058, "Member 'ITEM_GamePig_C_PlayCurrentGame::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'ITEM_GamePig_C_PlayCurrentGame::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, CallFunc_TryInteract_InteractResults) == 0x000070, "Member 'ITEM_GamePig_C_PlayCurrentGame::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'ITEM_GamePig_C_PlayCurrentGame::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, CallFunc_MakeTransform_ReturnValue) == 0x0000A0, "Member 'ITEM_GamePig_C_PlayCurrentGame::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000D0, "Member 'ITEM_GamePig_C_PlayCurrentGame::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D8, "Member 'ITEM_GamePig_C_PlayCurrentGame::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000E0, "Member 'ITEM_GamePig_C_PlayCurrentGame::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_PlayCurrentGame, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'ITEM_GamePig_C_PlayCurrentGame::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITEM_GamePig.ITEM_GamePig_C.GetGameCartridge
// 0x0048 (0x0048 - 0x0000)
struct ITEM_GamePig_C_GetGameCartridge final
{
public:
	class UITEM_GameCartridge_Base_C*             Game;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        GameBag;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_GameCartridge_Base_C*             K2Node_DynamicCast_AsITEM_Game_Cartridge_Base;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_GamePig_C_GetGameCartridge) == 0x000008, "Wrong alignment on ITEM_GamePig_C_GetGameCartridge");
static_assert(sizeof(ITEM_GamePig_C_GetGameCartridge) == 0x000048, "Wrong size on ITEM_GamePig_C_GetGameCartridge");
static_assert(offsetof(ITEM_GamePig_C_GetGameCartridge, Game) == 0x000000, "Member 'ITEM_GamePig_C_GetGameCartridge::Game' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_GetGameCartridge, GameBag) == 0x000008, "Member 'ITEM_GamePig_C_GetGameCartridge::GameBag' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_GetGameCartridge, CallFunc_GetSlotItem_Item) == 0x000010, "Member 'ITEM_GamePig_C_GetGameCartridge::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_GetGameCartridge, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ITEM_GamePig_C_GetGameCartridge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_GetGameCartridge, K2Node_DynamicCast_AsITEM_Game_Cartridge_Base) == 0x000020, "Member 'ITEM_GamePig_C_GetGameCartridge::K2Node_DynamicCast_AsITEM_Game_Cartridge_Base' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_GetGameCartridge, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ITEM_GamePig_C_GetGameCartridge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_GetGameCartridge, CallFunc_GetInventory_Inventory) == 0x000030, "Member 'ITEM_GamePig_C_GetGameCartridge::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_GetGameCartridge, CallFunc_GetBagByType_Bag) == 0x000038, "Member 'ITEM_GamePig_C_GetGameCartridge::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_GetGameCartridge, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'ITEM_GamePig_C_GetGameCartridge::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_GamePig.ITEM_GamePig_C.SetGameCartridge
// 0x0028 (0x0028 - 0x0000)
struct ITEM_GamePig_C_SetGameCartridge final
{
public:
	class UITEM_GameCartridge_Base_C*             GameCartridge;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CartridgeBag;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_Result;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_GamePig_C_SetGameCartridge) == 0x000008, "Wrong alignment on ITEM_GamePig_C_SetGameCartridge");
static_assert(sizeof(ITEM_GamePig_C_SetGameCartridge) == 0x000028, "Wrong size on ITEM_GamePig_C_SetGameCartridge");
static_assert(offsetof(ITEM_GamePig_C_SetGameCartridge, GameCartridge) == 0x000000, "Member 'ITEM_GamePig_C_SetGameCartridge::GameCartridge' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_SetGameCartridge, CartridgeBag) == 0x000008, "Member 'ITEM_GamePig_C_SetGameCartridge::CartridgeBag' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_SetGameCartridge, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ITEM_GamePig_C_SetGameCartridge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_SetGameCartridge, CallFunc_GetSlotIndex_Result) == 0x000014, "Member 'ITEM_GamePig_C_SetGameCartridge::CallFunc_GetSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_SetGameCartridge, CallFunc_GetBag_Result) == 0x000018, "Member 'ITEM_GamePig_C_SetGameCartridge::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_SetGameCartridge, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'ITEM_GamePig_C_SetGameCartridge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function ITEM_GamePig.ITEM_GamePig_C.Activate
// 0x0050 (0x0050 - 0x0000)
struct ITEM_GamePig_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  PlayerOwner;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Activate_Result;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipmentDisabled_Result;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory_1;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayCurrentGame_Result;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChannelingWithAnyInteractable_Result;   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_GamePig_C_Activate) == 0x000008, "Wrong alignment on ITEM_GamePig_C_Activate");
static_assert(sizeof(ITEM_GamePig_C_Activate) == 0x000050, "Wrong size on ITEM_GamePig_C_Activate");
static_assert(offsetof(ITEM_GamePig_C_Activate, Character) == 0x000000, "Member 'ITEM_GamePig_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, Result) == 0x000008, "Member 'ITEM_GamePig_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, PlayerOwner) == 0x000010, "Member 'ITEM_GamePig_C_Activate::PlayerOwner' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, CallFunc_GetInventory_Inventory) == 0x000018, "Member 'ITEM_GamePig_C_Activate::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, CallFunc_Activate_Result) == 0x000020, "Member 'ITEM_GamePig_C_Activate::CallFunc_Activate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, CallFunc_IsEquipmentDisabled_Result) == 0x000021, "Member 'ITEM_GamePig_C_Activate::CallFunc_IsEquipmentDisabled_Result' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, CallFunc_GetInventory_Inventory_1) == 0x000028, "Member 'ITEM_GamePig_C_Activate::CallFunc_GetInventory_Inventory_1' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'ITEM_GamePig_C_Activate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'ITEM_GamePig_C_Activate::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000040, "Member 'ITEM_GamePig_C_Activate::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'ITEM_GamePig_C_Activate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, CallFunc_PlayCurrentGame_Result) == 0x000049, "Member 'ITEM_GamePig_C_Activate::CallFunc_PlayCurrentGame_Result' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, CallFunc_IsChannelingWithAnyInteractable_Result) == 0x00004A, "Member 'ITEM_GamePig_C_Activate::CallFunc_IsChannelingWithAnyInteractable_Result' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004B, "Member 'ITEM_GamePig_C_Activate::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'ITEM_GamePig_C_Activate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, CallFunc_Not_PreBool_ReturnValue_2) == 0x00004D, "Member 'ITEM_GamePig_C_Activate::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Activate, CallFunc_BooleanAND_ReturnValue) == 0x00004E, "Member 'ITEM_GamePig_C_Activate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ITEM_GamePig.ITEM_GamePig_C.Deactivate
// 0x0004 (0x0004 - 0x0000)
struct ITEM_GamePig_C_Deactivate final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Deactivate_Result;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_GamePig_C_Deactivate) == 0x000001, "Wrong alignment on ITEM_GamePig_C_Deactivate");
static_assert(sizeof(ITEM_GamePig_C_Deactivate) == 0x000004, "Wrong size on ITEM_GamePig_C_Deactivate");
static_assert(offsetof(ITEM_GamePig_C_Deactivate, Result) == 0x000000, "Member 'ITEM_GamePig_C_Deactivate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Deactivate, CallFunc_Deactivate_Result) == 0x000001, "Member 'ITEM_GamePig_C_Deactivate::CallFunc_Deactivate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Deactivate, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'ITEM_GamePig_C_Deactivate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_Deactivate, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'ITEM_GamePig_C_Deactivate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ITEM_GamePig.ITEM_GamePig_C.CanActivate
// 0x0020 (0x0020 - 0x0000)
struct ITEM_GamePig_C_CanActivate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_GameCartridge_Base_C*             CallFunc_GetGameCartridge_Game;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_Result;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_GamePig_C_CanActivate) == 0x000008, "Wrong alignment on ITEM_GamePig_C_CanActivate");
static_assert(sizeof(ITEM_GamePig_C_CanActivate) == 0x000020, "Wrong size on ITEM_GamePig_C_CanActivate");
static_assert(offsetof(ITEM_GamePig_C_CanActivate, Character) == 0x000000, "Member 'ITEM_GamePig_C_CanActivate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_CanActivate, Result) == 0x000008, "Member 'ITEM_GamePig_C_CanActivate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_CanActivate, CallFunc_GetGameCartridge_Game) == 0x000010, "Member 'ITEM_GamePig_C_CanActivate::CallFunc_GetGameCartridge_Game' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_CanActivate, CallFunc_CanActivate_Result) == 0x000018, "Member 'ITEM_GamePig_C_CanActivate::CallFunc_CanActivate_Result' has a wrong offset!");
static_assert(offsetof(ITEM_GamePig_C_CanActivate, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'ITEM_GamePig_C_CanActivate::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


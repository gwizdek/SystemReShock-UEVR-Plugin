#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CYBR_DomainLink

#include "Basic.hpp"

#include "CYBR_DomainLink_classes.hpp"
#include "CYBR_DomainLink_parameters.hpp"


namespace SDK
{

// Function CYBR_DomainLink.CYBR_DomainLink_C.ExecuteUbergraph_CYBR_DomainLink
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACYBR_DomainLink_C::ExecuteUbergraph_CYBR_DomainLink(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "ExecuteUbergraph_CYBR_DomainLink");

	Params::CYBR_DomainLink_C_ExecuteUbergraph_CYBR_DomainLink Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ACYBR_DomainLink_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.BndEvt__OverlapBox_Entrance_Outer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACYBR_DomainLink_C::BndEvt__OverlapBox_Entrance_Outer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "BndEvt__OverlapBox_Entrance_Outer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::CYBR_DomainLink_C_BndEvt__OverlapBox_Entrance_Outer_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.BndEvt__OverlapBox_Entrance_Outer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ACYBR_DomainLink_C::BndEvt__OverlapBox_Entrance_Outer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "BndEvt__OverlapBox_Entrance_Outer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::CYBR_DomainLink_C_BndEvt__OverlapBox_Entrance_Outer_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.BndEvt__BoxVolume_Exit_K2Node_ComponentBoundEvent_10_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACYBR_DomainLink_C::BndEvt__BoxVolume_Exit_K2Node_ComponentBoundEvent_10_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "BndEvt__BoxVolume_Exit_K2Node_ComponentBoundEvent_10_ComponentEndOverlapSignature__DelegateSignature");

	Params::CYBR_DomainLink_C_BndEvt__BoxVolume_Exit_K2Node_ComponentBoundEvent_10_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.BndEvt__BoxVolume_Exit_K2Node_ComponentBoundEvent_9_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ACYBR_DomainLink_C::BndEvt__BoxVolume_Exit_K2Node_ComponentBoundEvent_9_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "BndEvt__BoxVolume_Exit_K2Node_ComponentBoundEvent_9_ComponentBeginOverlapSignature__DelegateSignature");

	Params::CYBR_DomainLink_C_BndEvt__BoxVolume_Exit_K2Node_ComponentBoundEvent_9_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.InitializeDomainLink
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ACYBR_DomainLink_C::InitializeDomainLink()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "InitializeDomainLink");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.TryEnterLink
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Avatar_C*                   Avatar                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsForward                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ACYBR_DomainLink_C::TryEnterLink(class APAWN_Avatar_C* Avatar, bool IsForward)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "TryEnterLink");

	Params::CYBR_DomainLink_C_TryEnterLink Parms{};

	Parms.Avatar = Avatar;
	Parms.IsForward = IsForward;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.TryExitLink
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_Avatar_C*                   Avatar                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACYBR_DomainLink_C::TryExitLink(class APAWN_Avatar_C* Avatar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "TryExitLink");

	Params::CYBR_DomainLink_C_TryExitLink Parms{};

	Parms.Avatar = Avatar;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.GetMaxAvatarFlySpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   DefaultSpeed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACYBR_DomainLink_C::GetMaxAvatarFlySpeed(float DefaultSpeed, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "GetMaxAvatarFlySpeed");

	Params::CYBR_DomainLink_C_GetMaxAvatarFlySpeed Parms{};

	Parms.DefaultSpeed = DefaultSpeed;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.GetAvatarAcceleration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   DefaultSpeed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACYBR_DomainLink_C::GetAvatarAcceleration(float DefaultSpeed, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "GetAvatarAcceleration");

	Params::CYBR_DomainLink_C_GetAvatarAcceleration Parms{};

	Parms.DefaultSpeed = DefaultSpeed;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.GetDomainLinkDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          PawnLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsForward                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACYBR_DomainLink_C::GetDomainLinkDirection(const struct FVector& PawnLocation, bool IsForward, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "GetDomainLinkDirection");

	Params::CYBR_DomainLink_C_GetDomainLinkDirection Parms{};

	Parms.PawnLocation = std::move(PawnLocation);
	Parms.IsForward = IsForward;

	UObject::ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.GetTargetLookDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          PawnLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsForward                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          LookDirection                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACYBR_DomainLink_C::GetTargetLookDirection(const struct FVector& PawnLocation, float Distance, bool IsForward, struct FVector* LookDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "GetTargetLookDirection");

	Params::CYBR_DomainLink_C_GetTargetLookDirection Parms{};

	Parms.PawnLocation = std::move(PawnLocation);
	Parms.Distance = Distance;
	Parms.IsForward = IsForward;

	UObject::ProcessEvent(Func, &Parms);

	if (LookDirection != nullptr)
		*LookDirection = std::move(Parms.LookDirection);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.GetTargetRollVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          PawnLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsForward                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          RollAxis                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACYBR_DomainLink_C::GetTargetRollVector(const struct FVector& PawnLocation, float Distance, bool IsForward, struct FVector* RollAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "GetTargetRollVector");

	Params::CYBR_DomainLink_C_GetTargetRollVector Parms{};

	Parms.PawnLocation = std::move(PawnLocation);
	Parms.Distance = Distance;
	Parms.IsForward = IsForward;

	UObject::ProcessEvent(Func, &Parms);

	if (RollAxis != nullptr)
		*RollAxis = std::move(Parms.RollAxis);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.GetDomainLinkMoveLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          PawnLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   PrevLinkDistance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NextLinkDistance                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ResultLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACYBR_DomainLink_C::GetDomainLinkMoveLocation(const struct FVector& PawnLocation, float PrevLinkDistance, float NextLinkDistance, struct FVector* ResultLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "GetDomainLinkMoveLocation");

	Params::CYBR_DomainLink_C_GetDomainLinkMoveLocation Parms{};

	Parms.PawnLocation = std::move(PawnLocation);
	Parms.PrevLinkDistance = PrevLinkDistance;
	Parms.NextLinkDistance = NextLinkDistance;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultLocation != nullptr)
		*ResultLocation = std::move(Parms.ResultLocation);
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.GetLinkDistanceClosestToWorldLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Distance                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACYBR_DomainLink_C::GetLinkDistanceClosestToWorldLocation(const struct FVector& Location, float* Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "GetLinkDistanceClosestToWorldLocation");

	Params::CYBR_DomainLink_C_GetLinkDistanceClosestToWorldLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Distance != nullptr)
		*Distance = Parms.Distance;
}


// Function CYBR_DomainLink.CYBR_DomainLink_C.GetSquareDistanceToPawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Pawn                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ACYBR_DomainLink_C::GetSquareDistanceToPawn(class APAWN_SystemShockCharacter_C* Pawn, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CYBR_DomainLink_C", "GetSquareDistanceToPawn");

	Params::CYBR_DomainLink_C_GetSquareDistanceToPawn Parms{};

	Parms.Pawn = Pawn;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


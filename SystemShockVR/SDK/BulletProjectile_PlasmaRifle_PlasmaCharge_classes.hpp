#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BulletProjectile_PlasmaRifle_PlasmaCharge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BulletProjectile_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BulletProjectile_PlasmaRifle_PlasmaCharge.BulletProjectile_PlasmaRifle_PlasmaCharge_C
// 0x0068 (0x0388 - 0x0320)
class ABulletProjectile_PlasmaRifle_PlasmaCharge_C final : public ABulletProjectile_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BulletProjectile_PlasmaRifle_PlasmaCharge_C; // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_VoxelAudio_C*                     COMP_VoxelAudio_Impact;                            // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     COMP_VoxelAudio_Loop;                              // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      ProjectileFX;                                      // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BlastRadius;                                       // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinPlasmaOrbLifetime;                              // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxPlasmaOrbLifetime;                              // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasCollidedWithWall;                               // 0x034C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentKillCount;                                  // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFXSystemAsset*                         SmallBurstParticleFX;                              // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemAsset*                         LargeBurstParticleFX;                              // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              SmallBurstSoundCue;                                // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              LargeBurstSoundCue;                                // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    PlasmaMultiKillAchievementHandle;                  // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void ExecuteUbergraph_BulletProjectile_PlasmaRifle_PlasmaCharge(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Detonate();
	void TryBulletCollision(const struct FHitResult& Hit, float FrameHitDeltaTime, bool* Result);
	void ChargeUp();
	void GetCurrentChargeUpRatio(float* Result);
	void CreateEffects(class UFXSystemAsset* ParticleFX, class USoundCue* SoundCue);
	void ApplyDamageMod(class UAttribManagerComponent* AttribManager, class UOBJ_ImpactData_C* ImpactData, float FrameHitDeltaTime, struct FAttribDamageInstance* DamageInstance, class UAttribMod** DamageMod);
	void OnDamagedActor(class UAttribManagerComponent* AttribManager, const struct FAttribDamageInstance& DamageInstance);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BulletProjectile_PlasmaRifle_PlasmaCharge_C">();
	}
	static class ABulletProjectile_PlasmaRifle_PlasmaCharge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABulletProjectile_PlasmaRifle_PlasmaCharge_C>();
	}
};
static_assert(alignof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C) == 0x000008, "Wrong alignment on ABulletProjectile_PlasmaRifle_PlasmaCharge_C");
static_assert(sizeof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C) == 0x000388, "Wrong size on ABulletProjectile_PlasmaRifle_PlasmaCharge_C");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, UberGraphFrame_BulletProjectile_PlasmaRifle_PlasmaCharge_C) == 0x000320, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::UberGraphFrame_BulletProjectile_PlasmaRifle_PlasmaCharge_C' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, COMP_VoxelAudio_Impact) == 0x000328, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::COMP_VoxelAudio_Impact' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, COMP_VoxelAudio_Loop) == 0x000330, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::COMP_VoxelAudio_Loop' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, ProjectileFX) == 0x000338, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::ProjectileFX' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, BlastRadius) == 0x000340, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::BlastRadius' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, MinPlasmaOrbLifetime) == 0x000344, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::MinPlasmaOrbLifetime' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, MaxPlasmaOrbLifetime) == 0x000348, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::MaxPlasmaOrbLifetime' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, HasCollidedWithWall) == 0x00034C, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::HasCollidedWithWall' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, CurrentKillCount) == 0x000350, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::CurrentKillCount' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, SmallBurstParticleFX) == 0x000358, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::SmallBurstParticleFX' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, LargeBurstParticleFX) == 0x000360, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::LargeBurstParticleFX' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, SmallBurstSoundCue) == 0x000368, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::SmallBurstSoundCue' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, LargeBurstSoundCue) == 0x000370, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::LargeBurstSoundCue' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_PlasmaRifle_PlasmaCharge_C, PlasmaMultiKillAchievementHandle) == 0x000378, "Member 'ABulletProjectile_PlasmaRifle_PlasmaCharge_C::PlasmaMultiKillAchievementHandle' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_DifficultyHexagonIcon

#include "Basic.hpp"

#include "ENUM_GameDifficultyConfigCategory_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_DifficultyHexagonIcon.WIDGET_DifficultyHexagonIcon_C.ExecuteUbergraph_WIDGET_DifficultyHexagonIcon
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_DifficultyHexagonIcon_C_ExecuteUbergraph_WIDGET_DifficultyHexagonIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonIcon_C_ExecuteUbergraph_WIDGET_DifficultyHexagonIcon) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonIcon_C_ExecuteUbergraph_WIDGET_DifficultyHexagonIcon");
static_assert(sizeof(WIDGET_DifficultyHexagonIcon_C_ExecuteUbergraph_WIDGET_DifficultyHexagonIcon) == 0x000010, "Wrong size on WIDGET_DifficultyHexagonIcon_C_ExecuteUbergraph_WIDGET_DifficultyHexagonIcon");
static_assert(offsetof(WIDGET_DifficultyHexagonIcon_C_ExecuteUbergraph_WIDGET_DifficultyHexagonIcon, EntryPoint) == 0x000000, "Member 'WIDGET_DifficultyHexagonIcon_C_ExecuteUbergraph_WIDGET_DifficultyHexagonIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonIcon_C_ExecuteUbergraph_WIDGET_DifficultyHexagonIcon, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WIDGET_DifficultyHexagonIcon_C_ExecuteUbergraph_WIDGET_DifficultyHexagonIcon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonIcon_C_ExecuteUbergraph_WIDGET_DifficultyHexagonIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WIDGET_DifficultyHexagonIcon_C_ExecuteUbergraph_WIDGET_DifficultyHexagonIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WIDGET_DifficultyHexagonIcon.WIDGET_DifficultyHexagonIcon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_DifficultyHexagonIcon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyHexagonIcon_C_PreConstruct) == 0x000001, "Wrong alignment on WIDGET_DifficultyHexagonIcon_C_PreConstruct");
static_assert(sizeof(WIDGET_DifficultyHexagonIcon_C_PreConstruct) == 0x000001, "Wrong size on WIDGET_DifficultyHexagonIcon_C_PreConstruct");
static_assert(offsetof(WIDGET_DifficultyHexagonIcon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WIDGET_DifficultyHexagonIcon_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WIDGET_DifficultyHexagonIcon.WIDGET_DifficultyHexagonIcon_C.SetHighlighted
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_DifficultyHexagonIcon_C_SetHighlighted final
{
public:
	bool                                          Highlighted_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyHexagonIcon_C_SetHighlighted) == 0x000001, "Wrong alignment on WIDGET_DifficultyHexagonIcon_C_SetHighlighted");
static_assert(sizeof(WIDGET_DifficultyHexagonIcon_C_SetHighlighted) == 0x000001, "Wrong size on WIDGET_DifficultyHexagonIcon_C_SetHighlighted");
static_assert(offsetof(WIDGET_DifficultyHexagonIcon_C_SetHighlighted, Highlighted_0) == 0x000000, "Member 'WIDGET_DifficultyHexagonIcon_C_SetHighlighted::Highlighted_0' has a wrong offset!");

// Function WIDGET_DifficultyHexagonIcon.WIDGET_DifficultyHexagonIcon_C.OnHighlighted
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_DifficultyHexagonIcon_C_OnHighlighted final
{
public:
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonIcon_C_OnHighlighted) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonIcon_C_OnHighlighted");
static_assert(sizeof(WIDGET_DifficultyHexagonIcon_C_OnHighlighted) == 0x000010, "Wrong size on WIDGET_DifficultyHexagonIcon_C_OnHighlighted");
static_assert(offsetof(WIDGET_DifficultyHexagonIcon_C_OnHighlighted, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000000, "Member 'WIDGET_DifficultyHexagonIcon_C_OnHighlighted::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonIcon_C_OnHighlighted, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WIDGET_DifficultyHexagonIcon_C_OnHighlighted::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WIDGET_DifficultyHexagonIcon.WIDGET_DifficultyHexagonIcon_C.SetIconInHex
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_DifficultyHexagonIcon_C_SetIconInHex final
{
public:
	ENUM_GameDifficultyConfigCategory             DifficultyCategory;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonIcon_C_SetIconInHex) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonIcon_C_SetIconInHex");
static_assert(sizeof(WIDGET_DifficultyHexagonIcon_C_SetIconInHex) == 0x000018, "Wrong size on WIDGET_DifficultyHexagonIcon_C_SetIconInHex");
static_assert(offsetof(WIDGET_DifficultyHexagonIcon_C_SetIconInHex, DifficultyCategory) == 0x000000, "Member 'WIDGET_DifficultyHexagonIcon_C_SetIconInHex::DifficultyCategory' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonIcon_C_SetIconInHex, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'WIDGET_DifficultyHexagonIcon_C_SetIconInHex::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonIcon_C_SetIconInHex, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WIDGET_DifficultyHexagonIcon_C_SetIconInHex::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonIcon_C_SetIconInHex, CallFunc_Array_Get_Item) == 0x000010, "Member 'WIDGET_DifficultyHexagonIcon_C_SetIconInHex::CallFunc_Array_Get_Item' has a wrong offset!");

}


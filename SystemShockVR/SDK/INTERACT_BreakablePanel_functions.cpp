#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_BreakablePanel

#include "Basic.hpp"

#include "INTERACT_BreakablePanel_classes.hpp"
#include "INTERACT_BreakablePanel_parameters.hpp"


namespace SDK
{

// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.ExecuteUbergraph_INTERACT_BreakablePanel
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_BreakablePanel_C::ExecuteUbergraph_INTERACT_BreakablePanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "ExecuteUbergraph_INTERACT_BreakablePanel");

	Params::INTERACT_BreakablePanel_C_ExecuteUbergraph_INTERACT_BreakablePanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAttribDamageInstance            DamageInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// class UObject*                          UserParams                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_BreakablePanel_C::BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature");

	Params::INTERACT_BreakablePanel_C_BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature Parms{};

	Parms.OtherActor = OtherActor;
	Parms.DamageInstance = std::move(DamageInstance);
	Parms.UserParams = UserParams;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature");

	Params::INTERACT_BreakablePanel_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AINTERACT_BreakablePanel_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_BreakablePanel_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.InitializeBreakablePanel
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_BreakablePanel_C::InitializeBreakablePanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "InitializeBreakablePanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.TryInitializeDisableQuest
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_BreakablePanel_C::TryInitializeDisableQuest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "TryInitializeDisableQuest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.OnActivationStateChanged
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OnBeginPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::OnActivationStateChanged(bool State, bool OnBeginPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "OnActivationStateChanged");

	Params::INTERACT_BreakablePanel_C_OnActivationStateChanged Parms{};

	Parms.State = State;
	Parms.OnBeginPlay = OnBeginPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.TrySetActivationState
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::TrySetActivationState(bool State, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "TrySetActivationState");

	Params::INTERACT_BreakablePanel_C_TrySetActivationState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.SetActivationStateInternal
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::SetActivationStateInternal(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "SetActivationStateInternal");

	Params::INTERACT_BreakablePanel_C_SetActivationStateInternal Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.OnDamageReceived
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAttribDamageType*                DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   DamageValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   HitFaceIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ImpactRadius                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::OnDamageReceived(class AActor* SourceActor, class UAttribDamageType* DamageType, int32 DamageValue, class UPrimitiveComponent* HitComponent, int32 HitFaceIndex, const struct FVector& HitLocation, const struct FVector& HitNormal, float ImpactRadius, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "OnDamageReceived");

	Params::INTERACT_BreakablePanel_C_OnDamageReceived Parms{};

	Parms.SourceActor = SourceActor;
	Parms.DamageType = DamageType;
	Parms.DamageValue = DamageValue;
	Parms.HitComponent = HitComponent;
	Parms.HitFaceIndex = HitFaceIndex;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.ImpactRadius = ImpactRadius;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.SetShouldBeVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibleState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::SetShouldBeVisible(bool VisibleState, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "SetShouldBeVisible");

	Params::INTERACT_BreakablePanel_C_SetShouldBeVisible Parms{};

	Parms.VisibleState = VisibleState;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.CanTakeDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAttribDamageType*                DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UOBJ_ImpactData_C*                ImpactData                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::CanTakeDamage(class UAttribDamageType* DamageType, class UOBJ_ImpactData_C* ImpactData, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "CanTakeDamage");

	Params::INTERACT_BreakablePanel_C_CanTakeDamage Parms{};

	Parms.DamageType = DamageType;
	Parms.ImpactData = ImpactData;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.EVENT_OnStoryQuestChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             StoryQuestName                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::EVENT_OnStoryQuestChanged(class FName StoryQuestName, bool Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "EVENT_OnStoryQuestChanged");

	Params::INTERACT_BreakablePanel_C_EVENT_OnStoryQuestChanged Parms{};

	Parms.StoryQuestName = StoryQuestName;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.IsActivatedAndPowered
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::IsActivatedAndPowered(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "IsActivatedAndPowered");

	Params::INTERACT_BreakablePanel_C_IsActivatedAndPowered Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.GetNormalizedLightColor
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     LightColor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_BreakablePanel_C::GetNormalizedLightColor(const struct FLinearColor& LightColor, struct FLinearColor* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "GetNormalizedLightColor");

	Params::INTERACT_BreakablePanel_C_GetNormalizedLightColor Parms{};

	Parms.LightColor = std::move(LightColor);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.HasCompletedDisableQuest
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::HasCompletedDisableQuest(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "HasCompletedDisableQuest");

	Params::INTERACT_BreakablePanel_C_HasCompletedDisableQuest Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.TryInteract
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_InteractionType                    InteractionType                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSTRUCT_InteractResults          InteractResults                                        (Parm, OutParm, HasGetValueTypeHash)

void AINTERACT_BreakablePanel_C::TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "TryInteract");

	Params::INTERACT_BreakablePanel_C_TryInteract Parms{};

	Parms.SourceActor = SourceActor;
	Parms.CursorPrimitive = CursorPrimitive;
	Parms.InteractionType = InteractionType;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractResults != nullptr)
		*InteractResults = std::move(Parms.InteractResults);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.IsInteractActivated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::IsInteractActivated(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "IsInteractActivated");

	Params::INTERACT_BreakablePanel_C_IsInteractActivated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.GetInteractLocked
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             LockMessage                                            (Parm, OutParm)

void AINTERACT_BreakablePanel_C::GetInteractLocked(class AActor* SourceActor, bool* Result, class FText* LockMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "GetInteractLocked");

	Params::INTERACT_BreakablePanel_C_GetInteractLocked Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (LockMessage != nullptr)
		*LockMessage = std::move(Parms.LockMessage);
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.CanModifyInteractPower
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::CanModifyInteractPower(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "CanModifyInteractPower");

	Params::INTERACT_BreakablePanel_C_CanModifyInteractPower Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_BreakablePanel.INTERACT_BreakablePanel_C.SetInteractPowered
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_BreakablePanel_C::SetInteractPowered(bool State, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_BreakablePanel_C", "SetInteractPowered");

	Params::INTERACT_BreakablePanel_C_SetInteractPowered Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_TutorialMessage

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "STRUCT_TutorialInstance_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_TutorialMessage.WIDGET_TutorialMessage_C.ExecuteUbergraph_WIDGET_TutorialMessage
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_TutorialMessage_C_ExecuteUbergraph_WIDGET_TutorialMessage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_TutorialMessage_C_ExecuteUbergraph_WIDGET_TutorialMessage) == 0x000004, "Wrong alignment on WIDGET_TutorialMessage_C_ExecuteUbergraph_WIDGET_TutorialMessage");
static_assert(sizeof(WIDGET_TutorialMessage_C_ExecuteUbergraph_WIDGET_TutorialMessage) == 0x000040, "Wrong size on WIDGET_TutorialMessage_C_ExecuteUbergraph_WIDGET_TutorialMessage");
static_assert(offsetof(WIDGET_TutorialMessage_C_ExecuteUbergraph_WIDGET_TutorialMessage, EntryPoint) == 0x000000, "Member 'WIDGET_TutorialMessage_C_ExecuteUbergraph_WIDGET_TutorialMessage::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_ExecuteUbergraph_WIDGET_TutorialMessage, K2Node_Event_MyGeometry) == 0x000004, "Member 'WIDGET_TutorialMessage_C_ExecuteUbergraph_WIDGET_TutorialMessage::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_ExecuteUbergraph_WIDGET_TutorialMessage, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WIDGET_TutorialMessage_C_ExecuteUbergraph_WIDGET_TutorialMessage::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WIDGET_TutorialMessage.WIDGET_TutorialMessage_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_TutorialMessage_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_TutorialMessage_C_Tick) == 0x000004, "Wrong alignment on WIDGET_TutorialMessage_C_Tick");
static_assert(sizeof(WIDGET_TutorialMessage_C_Tick) == 0x00003C, "Wrong size on WIDGET_TutorialMessage_C_Tick");
static_assert(offsetof(WIDGET_TutorialMessage_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_TutorialMessage_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_TutorialMessage_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_TutorialMessage.WIDGET_TutorialMessage_C.InitializeTutorialMessage
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_TutorialMessage_C_InitializeTutorialMessage final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TutorialMessage_C_InitializeTutorialMessage) == 0x000008, "Wrong alignment on WIDGET_TutorialMessage_C_InitializeTutorialMessage");
static_assert(sizeof(WIDGET_TutorialMessage_C_InitializeTutorialMessage) == 0x000018, "Wrong size on WIDGET_TutorialMessage_C_InitializeTutorialMessage");
static_assert(offsetof(WIDGET_TutorialMessage_C_InitializeTutorialMessage, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'WIDGET_TutorialMessage_C_InitializeTutorialMessage::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_InitializeTutorialMessage, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000008, "Member 'WIDGET_TutorialMessage_C_InitializeTutorialMessage::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_InitializeTutorialMessage, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WIDGET_TutorialMessage_C_InitializeTutorialMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_TutorialMessage.WIDGET_TutorialMessage_C.SetCurrentTutorial
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_TutorialMessage_C_SetCurrentTutorial final
{
public:
	struct FSTRUCT_TutorialInstance               Tutorial;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTutorialActorVisible_Result;            // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTutorialMessage_Result;                // 0x0038(0x0018)()
};
static_assert(alignof(WIDGET_TutorialMessage_C_SetCurrentTutorial) == 0x000008, "Wrong alignment on WIDGET_TutorialMessage_C_SetCurrentTutorial");
static_assert(sizeof(WIDGET_TutorialMessage_C_SetCurrentTutorial) == 0x000050, "Wrong size on WIDGET_TutorialMessage_C_SetCurrentTutorial");
static_assert(offsetof(WIDGET_TutorialMessage_C_SetCurrentTutorial, Tutorial) == 0x000000, "Member 'WIDGET_TutorialMessage_C_SetCurrentTutorial::Tutorial' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_SetCurrentTutorial, Temp_bool_Variable) == 0x000028, "Member 'WIDGET_TutorialMessage_C_SetCurrentTutorial::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_SetCurrentTutorial, Temp_float_Variable) == 0x00002C, "Member 'WIDGET_TutorialMessage_C_SetCurrentTutorial::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_SetCurrentTutorial, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'WIDGET_TutorialMessage_C_SetCurrentTutorial::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_SetCurrentTutorial, CallFunc_NotEqual_NameName_ReturnValue) == 0x000031, "Member 'WIDGET_TutorialMessage_C_SetCurrentTutorial::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_SetCurrentTutorial, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'WIDGET_TutorialMessage_C_SetCurrentTutorial::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_SetCurrentTutorial, CallFunc_IsTutorialActorVisible_Result) == 0x000033, "Member 'WIDGET_TutorialMessage_C_SetCurrentTutorial::CallFunc_IsTutorialActorVisible_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_SetCurrentTutorial, K2Node_Select_Default) == 0x000034, "Member 'WIDGET_TutorialMessage_C_SetCurrentTutorial::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_SetCurrentTutorial, CallFunc_GetTutorialMessage_Result) == 0x000038, "Member 'WIDGET_TutorialMessage_C_SetCurrentTutorial::CallFunc_GetTutorialMessage_Result' has a wrong offset!");

// Function WIDGET_TutorialMessage.WIDGET_TutorialMessage_C.SetTutorialsEnabled
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_TutorialMessage_C_SetTutorialsEnabled final
{
public:
	bool                                          TutorialsEnabled;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TutorialMessage_C_SetTutorialsEnabled) == 0x000001, "Wrong alignment on WIDGET_TutorialMessage_C_SetTutorialsEnabled");
static_assert(sizeof(WIDGET_TutorialMessage_C_SetTutorialsEnabled) == 0x000001, "Wrong size on WIDGET_TutorialMessage_C_SetTutorialsEnabled");
static_assert(offsetof(WIDGET_TutorialMessage_C_SetTutorialsEnabled, TutorialsEnabled) == 0x000000, "Member 'WIDGET_TutorialMessage_C_SetTutorialsEnabled::TutorialsEnabled' has a wrong offset!");

// Function WIDGET_TutorialMessage.WIDGET_TutorialMessage_C.SetTutorialsOverridden
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_TutorialMessage_C_SetTutorialsOverridden final
{
public:
	bool                                          TutorialsOverridden_0;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TutorialMessage_C_SetTutorialsOverridden) == 0x000001, "Wrong alignment on WIDGET_TutorialMessage_C_SetTutorialsOverridden");
static_assert(sizeof(WIDGET_TutorialMessage_C_SetTutorialsOverridden) == 0x000001, "Wrong size on WIDGET_TutorialMessage_C_SetTutorialsOverridden");
static_assert(offsetof(WIDGET_TutorialMessage_C_SetTutorialsOverridden, TutorialsOverridden_0) == 0x000000, "Member 'WIDGET_TutorialMessage_C_SetTutorialsOverridden::TutorialsOverridden_0' has a wrong offset!");

// Function WIDGET_TutorialMessage.WIDGET_TutorialMessage_C.TryShowTutorialMessage
// 0x0005 (0x0005 - 0x0000)
struct WIDGET_TutorialMessage_C_TryShowTutorialMessage final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyActiveTutorials_Result;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreTutorialsEnabled_TutorialsEnabled;     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TutorialMessage_C_TryShowTutorialMessage) == 0x000001, "Wrong alignment on WIDGET_TutorialMessage_C_TryShowTutorialMessage");
static_assert(sizeof(WIDGET_TutorialMessage_C_TryShowTutorialMessage) == 0x000005, "Wrong size on WIDGET_TutorialMessage_C_TryShowTutorialMessage");
static_assert(offsetof(WIDGET_TutorialMessage_C_TryShowTutorialMessage, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'WIDGET_TutorialMessage_C_TryShowTutorialMessage::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_TryShowTutorialMessage, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WIDGET_TutorialMessage_C_TryShowTutorialMessage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_TryShowTutorialMessage, CallFunc_HasAnyActiveTutorials_Result) == 0x000002, "Member 'WIDGET_TutorialMessage_C_TryShowTutorialMessage::CallFunc_HasAnyActiveTutorials_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_TryShowTutorialMessage, CallFunc_AreTutorialsEnabled_TutorialsEnabled) == 0x000003, "Member 'WIDGET_TutorialMessage_C_TryShowTutorialMessage::CallFunc_AreTutorialsEnabled_TutorialsEnabled' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_TryShowTutorialMessage, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'WIDGET_TutorialMessage_C_TryShowTutorialMessage::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function WIDGET_TutorialMessage.WIDGET_TutorialMessage_C.TryHideTutorialMessage
// 0x0005 (0x0005 - 0x0000)
struct WIDGET_TutorialMessage_C_TryHideTutorialMessage final
{
public:
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyActiveTutorials_Result;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AreTutorialsEnabled_TutorialsEnabled;     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TutorialMessage_C_TryHideTutorialMessage) == 0x000001, "Wrong alignment on WIDGET_TutorialMessage_C_TryHideTutorialMessage");
static_assert(sizeof(WIDGET_TutorialMessage_C_TryHideTutorialMessage) == 0x000005, "Wrong size on WIDGET_TutorialMessage_C_TryHideTutorialMessage");
static_assert(offsetof(WIDGET_TutorialMessage_C_TryHideTutorialMessage, CallFunc_IsVisible_ReturnValue) == 0x000000, "Member 'WIDGET_TutorialMessage_C_TryHideTutorialMessage::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_TryHideTutorialMessage, CallFunc_HasAnyActiveTutorials_Result) == 0x000001, "Member 'WIDGET_TutorialMessage_C_TryHideTutorialMessage::CallFunc_HasAnyActiveTutorials_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_TryHideTutorialMessage, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WIDGET_TutorialMessage_C_TryHideTutorialMessage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_TryHideTutorialMessage, CallFunc_AreTutorialsEnabled_TutorialsEnabled) == 0x000003, "Member 'WIDGET_TutorialMessage_C_TryHideTutorialMessage::CallFunc_AreTutorialsEnabled_TutorialsEnabled' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_TryHideTutorialMessage, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'WIDGET_TutorialMessage_C_TryHideTutorialMessage::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function WIDGET_TutorialMessage.WIDGET_TutorialMessage_C.UpdateCurrentMessageToTarget
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget final
{
public:
	class FName                                   ActionName;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 FormatTagString;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           ActionNames;                                       // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         FormatTagStrings;                                  // 0x0028(0x0010)(Edit, BlueprintVisible)
	class FString                                 MessageString;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget) == 0x000008, "Wrong alignment on WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget");
static_assert(sizeof(WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget) == 0x000048, "Wrong size on WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget, ActionName) == 0x000000, "Member 'WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget::ActionName' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget, FormatTagString) == 0x000008, "Member 'WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget::FormatTagString' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget, ActionNames) == 0x000018, "Member 'WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget::ActionNames' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget, FormatTagStrings) == 0x000028, "Member 'WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget::FormatTagStrings' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget, MessageString) == 0x000038, "Member 'WIDGET_TutorialMessage_C_UpdateCurrentMessageToTarget::MessageString' has a wrong offset!");

// Function WIDGET_TutorialMessage.WIDGET_TutorialMessage_C.UpdateRenderOpacity
// 0x0058 (0x0058 - 0x0000)
struct WIDGET_TutorialMessage_C_UpdateRenderOpacity final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TutorialChanged;                                   // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyActiveTutorials_Result;             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyActiveTutorials_Result_1;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTutorialActorVisible_Result;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TutorialInstance               CallFunc_GetHighestPriorityTutorial_Result;        // 0x0030(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_TutorialMessage_C_UpdateRenderOpacity) == 0x000008, "Wrong alignment on WIDGET_TutorialMessage_C_UpdateRenderOpacity");
static_assert(sizeof(WIDGET_TutorialMessage_C_UpdateRenderOpacity) == 0x000058, "Wrong size on WIDGET_TutorialMessage_C_UpdateRenderOpacity");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, DeltaTime) == 0x000000, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::DeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, TutorialChanged) == 0x000004, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::TutorialChanged' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000005, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_HasAnyActiveTutorials_Result) == 0x000006, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_HasAnyActiveTutorials_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_NotEqual_TextText_ReturnValue) == 0x000009, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_SignOfFloat_ReturnValue) == 0x000010, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_FClamp_ReturnValue) == 0x000024, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_HasAnyActiveTutorials_Result_1) == 0x000028, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_HasAnyActiveTutorials_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_IsTutorialActorVisible_Result) == 0x000029, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_IsTutorialActorVisible_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateRenderOpacity, CallFunc_GetHighestPriorityTutorial_Result) == 0x000030, "Member 'WIDGET_TutorialMessage_C_UpdateRenderOpacity::CallFunc_GetHighestPriorityTutorial_Result' has a wrong offset!");

// Function WIDGET_TutorialMessage.WIDGET_TutorialMessage_C.UpdateTargetLine
// 0x0160 (0x0160 - 0x0000)
struct WIDGET_TutorialMessage_C_UpdateTargetLine final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0024(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSplinePointCount_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSplinePointCount_ReturnValue_1;        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x00B0(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_1;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDeprojectedScreenPoint_DeprojectedScreenPosition; // 0x010C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition_1;          // 0x0114(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition_1;       // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_TutorialMessage_C_UpdateTargetLine) == 0x000008, "Wrong alignment on WIDGET_TutorialMessage_C_UpdateTargetLine");
static_assert(sizeof(WIDGET_TutorialMessage_C_UpdateTargetLine) == 0x000160, "Wrong size on WIDGET_TutorialMessage_C_UpdateTargetLine");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, ScreenPosition) == 0x000000, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_GetCachedGeometry_ReturnValue) == 0x000024, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_GetLocalSize_ReturnValue) == 0x00005C, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_GetSplinePointCount_ReturnValue) == 0x000064, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_GetSplinePointCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_BreakVector2D_X) == 0x000068, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_BreakVector2D_Y) == 0x00006C, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_Subtract_IntInt_ReturnValue) == 0x000070, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_MakeVector2D_ReturnValue) == 0x000074, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_LocalToViewport_PixelPosition) == 0x00007C, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_LocalToViewport_ViewportPosition) == 0x000084, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x00008C, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_GetSplinePointCount_ReturnValue_1) == 0x000094, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_GetSplinePointCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_BreakVector2D_X_1) == 0x000098, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_BreakVector2D_Y_1) == 0x00009C, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000A0, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000A4, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000A8, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x0000B0, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_GetLocalSize_ReturnValue_1) == 0x0000E8, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_GetLocalSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_BreakVector2D_X_2) == 0x0000F0, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_BreakVector2D_Y_2) == 0x0000F4, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x0000F8, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_MakeVector2D_ReturnValue_2) == 0x000104, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_GetDeprojectedScreenPoint_DeprojectedScreenPosition) == 0x00010C, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_GetDeprojectedScreenPoint_DeprojectedScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_LocalToViewport_PixelPosition_1) == 0x000114, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_LocalToViewport_PixelPosition_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_LocalToViewport_ViewportPosition_1) == 0x00011C, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_LocalToViewport_ViewportPosition_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x000124, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_BreakVector2D_X_3) == 0x00012C, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_BreakVector2D_Y_3) == 0x000130, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000134, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_GetController_ReturnValue) == 0x000138, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_MakeVector2D_ReturnValue_3) == 0x000140, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, K2Node_DynamicCast_AsPlayer_Controller) == 0x000148, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x000154, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x00015C, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_TutorialMessage_C_UpdateTargetLine, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00015D, "Member 'WIDGET_TutorialMessage_C_UpdateTargetLine::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}


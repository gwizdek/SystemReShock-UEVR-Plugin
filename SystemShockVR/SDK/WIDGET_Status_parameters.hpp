#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Status

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_Status.WIDGET_Status_C.SetStatusVisibility
// 0x0006 (0x0006 - 0x0000)
struct WIDGET_Status_C_SetStatusVisibility final
{
public:
	bool                                          Visibility_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Status_C_SetStatusVisibility) == 0x000001, "Wrong alignment on WIDGET_Status_C_SetStatusVisibility");
static_assert(sizeof(WIDGET_Status_C_SetStatusVisibility) == 0x000006, "Wrong size on WIDGET_Status_C_SetStatusVisibility");
static_assert(offsetof(WIDGET_Status_C_SetStatusVisibility, Visibility_0) == 0x000000, "Member 'WIDGET_Status_C_SetStatusVisibility::Visibility_0' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetStatusVisibility, Temp_bool_Variable) == 0x000001, "Member 'WIDGET_Status_C_SetStatusVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetStatusVisibility, Temp_byte_Variable) == 0x000002, "Member 'WIDGET_Status_C_SetStatusVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetStatusVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WIDGET_Status_C_SetStatusVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetStatusVisibility, K2Node_Select_Default) == 0x000004, "Member 'WIDGET_Status_C_SetStatusVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetStatusVisibility, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'WIDGET_Status_C_SetStatusVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_Status.WIDGET_Status_C.InitializeStatus
// 0x0158 (0x0158 - 0x0000)
struct WIDGET_Status_C_InitializeStatus final
{
public:
	class UWIDGET_PlayerHUD_C*                    HUD;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     SingleplayerGameInstance;                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UInventoryBag_C* Bag, int32 SlotIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_StatusQuest_C*                  K2Node_DynamicCast_AsWIDGET_Status_Quest;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_StatusQuest_C*                  K2Node_DynamicCast_AsWIDGET_Status_Quest_1;        // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_2;             // 0x00C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_2;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_StatusQuest_C*                  K2Node_DynamicCast_AsWIDGET_Status_Quest_2;        // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_3;             // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item_3;                         // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_StatusDeck_C*                   K2Node_DynamicCast_AsWIDGET_Status_Deck;           // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 NodesRemaining)>         K2Node_CreateDelegate_OutputDelegate_1;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName StoryQuestName, bool Value)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0144(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_Status_C_InitializeStatus) == 0x000008, "Wrong alignment on WIDGET_Status_C_InitializeStatus");
static_assert(sizeof(WIDGET_Status_C_InitializeStatus) == 0x000158, "Wrong size on WIDGET_Status_C_InitializeStatus");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, HUD) == 0x000000, "Member 'WIDGET_Status_C_InitializeStatus::HUD' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, SingleplayerGameInstance) == 0x000008, "Member 'WIDGET_Status_C_InitializeStatus::SingleplayerGameInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WIDGET_Status_C_InitializeStatus::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'WIDGET_Status_C_InitializeStatus::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, Temp_int_Loop_Counter_Variable_2) == 0x00001C, "Member 'WIDGET_Status_C_InitializeStatus::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Add_IntInt_ReturnValue_1) == 0x000020, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WIDGET_Status_C_InitializeStatus::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'WIDGET_Status_C_InitializeStatus::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, Temp_int_Loop_Counter_Variable_3) == 0x000030, "Member 'WIDGET_Status_C_InitializeStatus::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Add_IntInt_ReturnValue_3) == 0x000034, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, Temp_int_Array_Index_Variable_2) == 0x000038, "Member 'WIDGET_Status_C_InitializeStatus::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, Temp_int_Array_Index_Variable_3) == 0x00003C, "Member 'WIDGET_Status_C_InitializeStatus::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_GetPlayerPawn_ReturnValue) == 0x000050, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000058, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_GetAllChildren_ReturnValue) == 0x000068, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_GetAllChildren_ReturnValue_1) == 0x000078, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Array_Get_Item) == 0x000088, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_DynamicCast_AsWIDGET_Status_Quest) == 0x000098, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_DynamicCast_AsWIDGET_Status_Quest' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_DynamicCast_AsWIDGET_Status_Quest_1) == 0x0000A8, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_DynamicCast_AsWIDGET_Status_Quest_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BD, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_GetAllChildren_ReturnValue_2) == 0x0000C0, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_GetAllChildren_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Array_Get_Item_2) == 0x0000D0, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Array_Length_ReturnValue_2) == 0x0000D8, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_DynamicCast_AsWIDGET_Status_Quest_2) == 0x0000E0, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_DynamicCast_AsWIDGET_Status_Quest_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_DynamicCast_bSuccess_3) == 0x0000E8, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000E9, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_GetAllChildren_ReturnValue_3) == 0x0000F0, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_GetAllChildren_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_GetGameInstance_ReturnValue) == 0x000100, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Array_Get_Item_3) == 0x000108, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_DynamicCast_AsGI_Single_Player) == 0x000110, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_DynamicCast_bSuccess_4) == 0x000118, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_DynamicCast_AsWIDGET_Status_Deck) == 0x000120, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_DynamicCast_AsWIDGET_Status_Deck' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_DynamicCast_bSuccess_5) == 0x000128, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Array_Length_ReturnValue_3) == 0x00012C, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_CreateDelegate_OutputDelegate_1) == 0x000130, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, CallFunc_Less_IntInt_ReturnValue_3) == 0x000140, "Member 'WIDGET_Status_C_InitializeStatus::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStatus, K2Node_CreateDelegate_OutputDelegate_2) == 0x000144, "Member 'WIDGET_Status_C_InitializeStatus::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function WIDGET_Status.WIDGET_Status_C.EVENT_OnStoryQuestChanged
// 0x01D8 (0x01D8 - 0x0000)
struct WIDGET_Status_C_EVENT_OnStoryQuestChanged final
{
public:
	class FName                                   Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     SingleplayerGameInstance;                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0018(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0030(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0050(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0070(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x0088(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x00A8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_6;            // 0x00C0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_7;            // 0x00D8(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_8;            // 0x00F8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_9;            // 0x0110(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_10;           // 0x0128(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_11;           // 0x0140(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_12;           // 0x0158(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_13;           // 0x0170(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_14;           // 0x0188(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_15;           // 0x01A0(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_16;           // 0x01B8(0x0018)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_5;        // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_6;        // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_7;        // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Status_C_EVENT_OnStoryQuestChanged) == 0x000008, "Wrong alignment on WIDGET_Status_C_EVENT_OnStoryQuestChanged");
static_assert(sizeof(WIDGET_Status_C_EVENT_OnStoryQuestChanged) == 0x0001D8, "Wrong size on WIDGET_Status_C_EVENT_OnStoryQuestChanged");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, Quest) == 0x000000, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::Quest' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, Value) == 0x000008, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::Value' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, SingleplayerGameInstance) == 0x000010, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::SingleplayerGameInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue) == 0x000018, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000030, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000048, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000050, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000068, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000070, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_4) == 0x000088, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0000A0, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_5) == 0x0000A8, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_6) == 0x0000C0, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_7) == 0x0000D8, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x0000F0, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x0000F1, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_8) == 0x0000F8, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_9) == 0x000110, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_10) == 0x000128, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_11) == 0x000140, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_12) == 0x000158, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_13) == 0x000170, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_14) == 0x000188, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_15) == 0x0001A0, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_MakeLiteralText_ReturnValue_16) == 0x0001B8, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_MakeLiteralText_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_EqualEqual_NameName_ReturnValue_5) == 0x0001D0, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_EqualEqual_NameName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_EqualEqual_NameName_ReturnValue_6) == 0x0001D1, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_EqualEqual_NameName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnStoryQuestChanged, CallFunc_EqualEqual_NameName_ReturnValue_7) == 0x0001D2, "Member 'WIDGET_Status_C_EVENT_OnStoryQuestChanged::CallFunc_EqualEqual_NameName_ReturnValue_7' has a wrong offset!");

// Function WIDGET_Status.WIDGET_Status_C.EVENT_OnUpdateTbps
// 0x0120 (0x0120 - 0x0000)
struct WIDGET_Status_C_EVENT_OnUpdateTbps final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue_4;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_5;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0060(0x0018)()
	float                                         K2Node_Select_Default_2;                           // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)(HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x00D8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00F0(0x0018)()
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Status_C_EVENT_OnUpdateTbps) == 0x000008, "Wrong alignment on WIDGET_Status_C_EVENT_OnUpdateTbps");
static_assert(sizeof(WIDGET_Status_C_EVENT_OnUpdateTbps) == 0x000120, "Wrong size on WIDGET_Status_C_EVENT_OnUpdateTbps");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, Temp_bool_Variable) == 0x000000, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, Temp_bool_Variable_1) == 0x000001, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000024, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000028, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_RandomBool_ReturnValue) == 0x00002C, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, K2Node_CreateDelegate_OutputDelegate) == 0x000030, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000040, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_RandomBool_ReturnValue_1) == 0x000044, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_RandomFloatInRange_ReturnValue_4) == 0x000048, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_RandomFloatInRange_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_RandomFloatInRange_ReturnValue_5) == 0x00004C, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_RandomFloatInRange_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, K2Node_Select_Default) == 0x000050, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, Temp_bool_Variable_2) == 0x000054, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, K2Node_Select_Default_1) == 0x000058, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_Conv_FloatToText_ReturnValue) == 0x000060, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, K2Node_Select_Default_2) == 0x000078, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000C0, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, K2Node_MakeArray_Array) == 0x0000C8, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0000D8, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_Format_ReturnValue) == 0x0000F0, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_GetGameInstance_ReturnValue) == 0x000108, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, K2Node_DynamicCast_AsGI_Single_Player) == 0x000110, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnUpdateTbps, CallFunc_HasCompletedStoryQuest_Completed) == 0x000119, "Member 'WIDGET_Status_C_EVENT_OnUpdateTbps::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");

// Function WIDGET_Status.WIDGET_Status_C.InitializeStoryQuests
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_Status_C_InitializeStoryQuests final
{
public:
	class UGI_SinglePlayer_C*                     SingleplayerGameInstance;                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed_1;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed_2;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed_3;       // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed_4;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed_5;       // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed_6;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Status_C_InitializeStoryQuests) == 0x000008, "Wrong alignment on WIDGET_Status_C_InitializeStoryQuests");
static_assert(sizeof(WIDGET_Status_C_InitializeStoryQuests) == 0x000030, "Wrong size on WIDGET_Status_C_InitializeStoryQuests");
static_assert(offsetof(WIDGET_Status_C_InitializeStoryQuests, SingleplayerGameInstance) == 0x000000, "Member 'WIDGET_Status_C_InitializeStoryQuests::SingleplayerGameInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStoryQuests, CallFunc_HasCompletedStoryQuest_Completed) == 0x000008, "Member 'WIDGET_Status_C_InitializeStoryQuests::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStoryQuests, CallFunc_HasCompletedStoryQuest_Completed_1) == 0x000009, "Member 'WIDGET_Status_C_InitializeStoryQuests::CallFunc_HasCompletedStoryQuest_Completed_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStoryQuests, CallFunc_HasCompletedStoryQuest_Completed_2) == 0x00000A, "Member 'WIDGET_Status_C_InitializeStoryQuests::CallFunc_HasCompletedStoryQuest_Completed_2' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStoryQuests, CallFunc_HasCompletedStoryQuest_Completed_3) == 0x00000B, "Member 'WIDGET_Status_C_InitializeStoryQuests::CallFunc_HasCompletedStoryQuest_Completed_3' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStoryQuests, CallFunc_HasCompletedStoryQuest_Completed_4) == 0x00000C, "Member 'WIDGET_Status_C_InitializeStoryQuests::CallFunc_HasCompletedStoryQuest_Completed_4' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStoryQuests, CallFunc_HasCompletedStoryQuest_Completed_5) == 0x00000D, "Member 'WIDGET_Status_C_InitializeStoryQuests::CallFunc_HasCompletedStoryQuest_Completed_5' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStoryQuests, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'WIDGET_Status_C_InitializeStoryQuests::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStoryQuests, CallFunc_HasCompletedStoryQuest_Completed_6) == 0x000018, "Member 'WIDGET_Status_C_InitializeStoryQuests::CallFunc_HasCompletedStoryQuest_Completed_6' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStoryQuests, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'WIDGET_Status_C_InitializeStoryQuests::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_InitializeStoryQuests, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_Status_C_InitializeStoryQuests::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_Status.WIDGET_Status_C.EVENT_OnNodesChanged
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_Status_C_EVENT_OnNodesChanged final
{
public:
	int32                                         NodesRemaining;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Status_C_EVENT_OnNodesChanged) == 0x000004, "Wrong alignment on WIDGET_Status_C_EVENT_OnNodesChanged");
static_assert(sizeof(WIDGET_Status_C_EVENT_OnNodesChanged) == 0x000004, "Wrong size on WIDGET_Status_C_EVENT_OnNodesChanged");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnNodesChanged, NodesRemaining) == 0x000000, "Member 'WIDGET_Status_C_EVENT_OnNodesChanged::NodesRemaining' has a wrong offset!");

// Function WIDGET_Status.WIDGET_Status_C.SetSelectedDeck
// 0x0158 (0x0158 - 0x0000)
struct WIDGET_Status_C_SetSelectedDeck final
{
public:
	class UWIDGET_StatusDeck_C*                   StatusDeck;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetLevelNameByDeck_Level;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0018(0x0018)()
	int32                                         CallFunc_GetComputerNodesForLevel_RemainingNodes;  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_GetSecurityForLevel_Result;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0100(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0118(0x0018)()
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Status_C_SetSelectedDeck) == 0x000008, "Wrong alignment on WIDGET_Status_C_SetSelectedDeck");
static_assert(sizeof(WIDGET_Status_C_SetSelectedDeck) == 0x000158, "Wrong size on WIDGET_Status_C_SetSelectedDeck");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, StatusDeck) == 0x000000, "Member 'WIDGET_Status_C_SetSelectedDeck::StatusDeck' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, GameInstance) == 0x000008, "Member 'WIDGET_Status_C_SetSelectedDeck::GameInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, CallFunc_GetLevelNameByDeck_Level) == 0x000010, "Member 'WIDGET_Status_C_SetSelectedDeck::CallFunc_GetLevelNameByDeck_Level' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, CallFunc_MakeLiteralText_ReturnValue) == 0x000018, "Member 'WIDGET_Status_C_SetSelectedDeck::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, CallFunc_GetComputerNodesForLevel_RemainingNodes) == 0x000030, "Member 'WIDGET_Status_C_SetSelectedDeck::CallFunc_GetComputerNodesForLevel_RemainingNodes' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000038, "Member 'WIDGET_Status_C_SetSelectedDeck::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'WIDGET_Status_C_SetSelectedDeck::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, K2Node_MakeArray_Array) == 0x000090, "Member 'WIDGET_Status_C_SetSelectedDeck::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, CallFunc_GetSecurityForLevel_Result) == 0x0000A0, "Member 'WIDGET_Status_C_SetSelectedDeck::CallFunc_GetSecurityForLevel_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'WIDGET_Status_C_SetSelectedDeck::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'WIDGET_Status_C_SetSelectedDeck::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, K2Node_MakeArray_Array_1) == 0x000100, "Member 'WIDGET_Status_C_SetSelectedDeck::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, CallFunc_GetGameInstance_ReturnValue) == 0x000110, "Member 'WIDGET_Status_C_SetSelectedDeck::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, CallFunc_Format_ReturnValue_1) == 0x000118, "Member 'WIDGET_Status_C_SetSelectedDeck::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, K2Node_DynamicCast_AsGI_Single_Player) == 0x000130, "Member 'WIDGET_Status_C_SetSelectedDeck::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'WIDGET_Status_C_SetSelectedDeck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, CallFunc_PlayAnimation_ReturnValue) == 0x000140, "Member 'WIDGET_Status_C_SetSelectedDeck::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, CallFunc_PlayAnimation_ReturnValue_1) == 0x000148, "Member 'WIDGET_Status_C_SetSelectedDeck::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'WIDGET_Status_C_SetSelectedDeck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeck, CallFunc_IsValid_ReturnValue_1) == 0x000151, "Member 'WIDGET_Status_C_SetSelectedDeck::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WIDGET_Status.WIDGET_Status_C.EVENT_OnMouseDown_BG
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_Status_C_EVENT_OnMouseDown_BG final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_Status_C_EVENT_OnMouseDown_BG) == 0x000008, "Wrong alignment on WIDGET_Status_C_EVENT_OnMouseDown_BG");
static_assert(sizeof(WIDGET_Status_C_EVENT_OnMouseDown_BG) == 0x000218, "Wrong size on WIDGET_Status_C_EVENT_OnMouseDown_BG");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnMouseDown_BG, MyGeometry) == 0x000000, "Member 'WIDGET_Status_C_EVENT_OnMouseDown_BG::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnMouseDown_BG, MouseEvent) == 0x000038, "Member 'WIDGET_Status_C_EVENT_OnMouseDown_BG::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnMouseDown_BG, ReturnValue) == 0x0000A8, "Member 'WIDGET_Status_C_EVENT_OnMouseDown_BG::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnMouseDown_BG, CallFunc_Unhandled_ReturnValue) == 0x000160, "Member 'WIDGET_Status_C_EVENT_OnMouseDown_BG::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function WIDGET_Status.WIDGET_Status_C.SelectCurrentDeck
// 0x01E0 (0x01E0 - 0x0000)
struct WIDGET_Status_C_SelectCurrentDeck final
{
public:
	class FName                                   CurrentLevelName;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_MakeStruct_PointerEvent;                    // 0x0018(0x0070)()
	struct FGeometry                              K2Node_MakeStruct_Geometry;                        // 0x0088(0x0038)(IsPlainOldData, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00C8(0x0010)(ReferenceParm)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCurrentLevelName_Result;               // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_StatusDeck_C*                   K2Node_DynamicCast_AsWIDGET_Status_Deck;           // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_EVENT_OnMouseDown_ReturnValue;            // 0x0120(0x00B8)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Status_C_SelectCurrentDeck) == 0x000008, "Wrong alignment on WIDGET_Status_C_SelectCurrentDeck");
static_assert(sizeof(WIDGET_Status_C_SelectCurrentDeck) == 0x0001E0, "Wrong size on WIDGET_Status_C_SelectCurrentDeck");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, CurrentLevelName) == 0x000000, "Member 'WIDGET_Status_C_SelectCurrentDeck::CurrentLevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WIDGET_Status_C_SelectCurrentDeck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WIDGET_Status_C_SelectCurrentDeck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WIDGET_Status_C_SelectCurrentDeck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, K2Node_MakeStruct_PointerEvent) == 0x000018, "Member 'WIDGET_Status_C_SelectCurrentDeck::K2Node_MakeStruct_PointerEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, K2Node_MakeStruct_Geometry) == 0x000088, "Member 'WIDGET_Status_C_SelectCurrentDeck::K2Node_MakeStruct_Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, CallFunc_GetGameInstance_ReturnValue) == 0x0000C0, "Member 'WIDGET_Status_C_SelectCurrentDeck::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000C8, "Member 'WIDGET_Status_C_SelectCurrentDeck::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000D8, "Member 'WIDGET_Status_C_SelectCurrentDeck::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'WIDGET_Status_C_SelectCurrentDeck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, CallFunc_GetCurrentLevelName_Result) == 0x0000E4, "Member 'WIDGET_Status_C_SelectCurrentDeck::CallFunc_GetCurrentLevelName_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, CallFunc_GetAllChildren_ReturnValue) == 0x0000F0, "Member 'WIDGET_Status_C_SelectCurrentDeck::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, CallFunc_Array_Get_Item) == 0x000100, "Member 'WIDGET_Status_C_SelectCurrentDeck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'WIDGET_Status_C_SelectCurrentDeck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, K2Node_DynamicCast_AsWIDGET_Status_Deck) == 0x000110, "Member 'WIDGET_Status_C_SelectCurrentDeck::K2Node_DynamicCast_AsWIDGET_Status_Deck' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'WIDGET_Status_C_SelectCurrentDeck::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, CallFunc_Less_IntInt_ReturnValue) == 0x000119, "Member 'WIDGET_Status_C_SelectCurrentDeck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, CallFunc_EVENT_OnMouseDown_ReturnValue) == 0x000120, "Member 'WIDGET_Status_C_SelectCurrentDeck::CallFunc_EVENT_OnMouseDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SelectCurrentDeck, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0001D8, "Member 'WIDGET_Status_C_SelectCurrentDeck::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function WIDGET_Status.WIDGET_Status_C.SetSelectedDeckByLevel
// 0x0178 (0x0178 - 0x0000)
struct WIDGET_Status_C_SetSelectedDeckByLevel final
{
public:
	class FName                                   LevelName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_MakeStruct_PointerEvent;                    // 0x0010(0x0070)()
	struct FGeometry                              K2Node_MakeStruct_Geometry;                        // 0x0080(0x0038)(IsPlainOldData, NoDestructor)
	class UWIDGET_StatusDeck_C*                   CallFunc_GetDeckWidgetByLevelName_DeckStatusWidget; // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_EVENT_OnMouseDown_ReturnValue;            // 0x00C0(0x00B8)()
};
static_assert(alignof(WIDGET_Status_C_SetSelectedDeckByLevel) == 0x000008, "Wrong alignment on WIDGET_Status_C_SetSelectedDeckByLevel");
static_assert(sizeof(WIDGET_Status_C_SetSelectedDeckByLevel) == 0x000178, "Wrong size on WIDGET_Status_C_SetSelectedDeckByLevel");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeckByLevel, LevelName) == 0x000000, "Member 'WIDGET_Status_C_SetSelectedDeckByLevel::LevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeckByLevel, GameInstance) == 0x000008, "Member 'WIDGET_Status_C_SetSelectedDeckByLevel::GameInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeckByLevel, K2Node_MakeStruct_PointerEvent) == 0x000010, "Member 'WIDGET_Status_C_SetSelectedDeckByLevel::K2Node_MakeStruct_PointerEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeckByLevel, K2Node_MakeStruct_Geometry) == 0x000080, "Member 'WIDGET_Status_C_SetSelectedDeckByLevel::K2Node_MakeStruct_Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeckByLevel, CallFunc_GetDeckWidgetByLevelName_DeckStatusWidget) == 0x0000B8, "Member 'WIDGET_Status_C_SetSelectedDeckByLevel::CallFunc_GetDeckWidgetByLevelName_DeckStatusWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_SetSelectedDeckByLevel, CallFunc_EVENT_OnMouseDown_ReturnValue) == 0x0000C0, "Member 'WIDGET_Status_C_SetSelectedDeckByLevel::CallFunc_EVENT_OnMouseDown_ReturnValue' has a wrong offset!");

// Function WIDGET_Status.WIDGET_Status_C.GetDeckWidgetByLevelName
// 0x0060 (0x0060 - 0x0000)
struct WIDGET_Status_C_GetDeckWidgetByLevelName final
{
public:
	class FName                                   LevelName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_StatusDeck_C*                   DeckStatusWidget;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_StatusDeck_C*                   K2Node_DynamicCast_AsWIDGET_Status_Deck;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetDeckLevelName_LevelName;               // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Status_C_GetDeckWidgetByLevelName) == 0x000008, "Wrong alignment on WIDGET_Status_C_GetDeckWidgetByLevelName");
static_assert(sizeof(WIDGET_Status_C_GetDeckWidgetByLevelName) == 0x000060, "Wrong size on WIDGET_Status_C_GetDeckWidgetByLevelName");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, LevelName) == 0x000000, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::LevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, DeckStatusWidget) == 0x000008, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::DeckStatusWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, CallFunc_Array_Get_Item) == 0x000038, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, K2Node_DynamicCast_AsWIDGET_Status_Deck) == 0x000048, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::K2Node_DynamicCast_AsWIDGET_Status_Deck' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, CallFunc_GetDeckLevelName_LevelName) == 0x000054, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::CallFunc_GetDeckLevelName_LevelName' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_GetDeckWidgetByLevelName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00005C, "Member 'WIDGET_Status_C_GetDeckWidgetByLevelName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function WIDGET_Status.WIDGET_Status_C.EVENT_OnBagChanged
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_Status_C_EVENT_OnBagChanged final
{
public:
	class UInventoryBag_C*                        Bag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Slot_0;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHARDWARE_NavUnit_Base_C*               K2Node_DynamicCast_AsHARDWARE_Nav_Unit_Base;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Status_C_EVENT_OnBagChanged) == 0x000008, "Wrong alignment on WIDGET_Status_C_EVENT_OnBagChanged");
static_assert(sizeof(WIDGET_Status_C_EVENT_OnBagChanged) == 0x000028, "Wrong size on WIDGET_Status_C_EVENT_OnBagChanged");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnBagChanged, Bag) == 0x000000, "Member 'WIDGET_Status_C_EVENT_OnBagChanged::Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnBagChanged, Slot_0) == 0x000008, "Member 'WIDGET_Status_C_EVENT_OnBagChanged::Slot_0' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnBagChanged, CallFunc_GetSlotItem_Item) == 0x000010, "Member 'WIDGET_Status_C_EVENT_OnBagChanged::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnBagChanged, K2Node_DynamicCast_AsHARDWARE_Nav_Unit_Base) == 0x000018, "Member 'WIDGET_Status_C_EVENT_OnBagChanged::K2Node_DynamicCast_AsHARDWARE_Nav_Unit_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_EVENT_OnBagChanged, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WIDGET_Status_C_EVENT_OnBagChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_Status.WIDGET_Status_C.UpdateStationComputerNodesCount
// 0x0078 (0x0078 - 0x0000)
struct WIDGET_Status_C_UpdateStationComputerNodesCount final
{
public:
	int32                                         TotalNodes;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	TArray<class FName>                           CallFunc_GetLevelNames_Levels;                     // 0x0038(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComputerNodesForLevel_RemainingNodes;  // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Status_C_UpdateStationComputerNodesCount) == 0x000008, "Wrong alignment on WIDGET_Status_C_UpdateStationComputerNodesCount");
static_assert(sizeof(WIDGET_Status_C_UpdateStationComputerNodesCount) == 0x000078, "Wrong size on WIDGET_Status_C_UpdateStationComputerNodesCount");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, TotalNodes) == 0x000000, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::TotalNodes' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, GameInstance) == 0x000008, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::GameInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, CallFunc_GetLevelNames_Levels) == 0x000038, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::CallFunc_GetLevelNames_Levels' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, CallFunc_Array_Get_Item) == 0x000050, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, K2Node_DynamicCast_AsGI_Single_Player) == 0x000058, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, CallFunc_GetComputerNodesForLevel_RemainingNodes) == 0x000064, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::CallFunc_GetComputerNodesForLevel_RemainingNodes' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Status_C_UpdateStationComputerNodesCount, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'WIDGET_Status_C_UpdateStationComputerNodesCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}


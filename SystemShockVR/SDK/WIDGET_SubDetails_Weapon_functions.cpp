#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SubDetails_Weapon

#include "Basic.hpp"

#include "WIDGET_SubDetails_Weapon_classes.hpp"
#include "WIDGET_SubDetails_Weapon_parameters.hpp"


namespace SDK
{

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.ExecuteUbergraph_WIDGET_SubDetails_Weapon
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_SubDetails_Weapon_C::ExecuteUbergraph_WIDGET_SubDetails_Weapon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "ExecuteUbergraph_WIDGET_SubDetails_Weapon");

	Params::WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.OnShowItemDetails
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_SubDetails_Weapon_C::OnShowItemDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "OnShowItemDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.OnHideItemDetails
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_SubDetails_Weapon_C::OnHideItemDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "OnHideItemDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.EVENT_OnModeChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_WeaponBase_C*               Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OldMode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewMode                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_SubDetails_Weapon_C::EVENT_OnModeChanged(class UITEM_WeaponBase_C* Weapon, int32 OldMode, int32 NewMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "EVENT_OnModeChanged");

	Params::WIDGET_SubDetails_Weapon_C_EVENT_OnModeChanged Parms{};

	Parms.Weapon = Weapon;
	Parms.OldMode = OldMode;
	Parms.NewMode = NewMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.SetModeDetails
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_SubDetails_Weapon_C::SetModeDetails()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "SetModeDetails");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.OnDetailsTypeChanged
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_SubDetails_Weapon_C::OnDetailsTypeChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "OnDetailsTypeChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.OperationToText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_WeaponOperation                    Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)

void UWIDGET_SubDetails_Weapon_C::OperationToText(ENUM_WeaponOperation Operation, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "OperationToText");

	Params::WIDGET_SubDetails_Weapon_C_OperationToText Parms{};

	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetItemDetailsType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_WeaponDetailsType                  DetailsType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_SubDetails_Weapon_C::GetItemDetailsType(ENUM_WeaponDetailsType* DetailsType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "GetItemDetailsType");

	Params::WIDGET_SubDetails_Weapon_C_GetItemDetailsType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DetailsType != nullptr)
		*DetailsType = Parms.DetailsType;
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetModeDetailsType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FSTRUCT_WeaponMode               ModeToUse                                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// ENUM_WeaponDetailsType                  DetailsType                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_SubDetails_Weapon_C::GetModeDetailsType(const struct FSTRUCT_WeaponMode& ModeToUse, ENUM_WeaponDetailsType* DetailsType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "GetModeDetailsType");

	Params::WIDGET_SubDetails_Weapon_C_GetModeDetailsType Parms{};

	Parms.ModeToUse = std::move(ModeToUse);

	UObject::ProcessEvent(Func, &Parms);

	if (DetailsType != nullptr)
		*DetailsType = Parms.DetailsType;
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetWeaponMode
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    DefaultValues                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSTRUCT_WeaponMode               WeaponMode                                             (Parm, OutParm, HasGetValueTypeHash)

void UWIDGET_SubDetails_Weapon_C::GetWeaponMode(bool DefaultValues, struct FSTRUCT_WeaponMode* WeaponMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "GetWeaponMode");

	Params::WIDGET_SubDetails_Weapon_C_GetWeaponMode Parms{};

	Parms.DefaultValues = DefaultValues;

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponMode != nullptr)
		*WeaponMode = std::move(Parms.WeaponMode);
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetWeaponAllowsUserModeSelection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_SubDetails_Weapon_C::GetWeaponAllowsUserModeSelection(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "GetWeaponAllowsUserModeSelection");

	Params::WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetWeaponTextColor
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsModified                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FColor                           Color                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_SubDetails_Weapon_C::GetWeaponTextColor(bool IsModified, struct FColor* Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "GetWeaponTextColor");

	Params::WIDGET_SubDetails_Weapon_C_GetWeaponTextColor Parms{};

	Parms.IsModified = IsModified;

	UObject::ProcessEvent(Func, &Parms);

	if (Color != nullptr)
		*Color = std::move(Parms.Color);
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetWeaponDamageLabel
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAttribDamageType*                DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDetonation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Result                                                 (Parm, OutParm)

void UWIDGET_SubDetails_Weapon_C::GetWeaponDamageLabel(class UAttribDamageType* DamageType, bool IsDetonation, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "GetWeaponDamageLabel");

	Params::WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel Parms{};

	Parms.DamageType = DamageType;
	Parms.IsDetonation = IsDetonation;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetWeaponArmorModifierLabel
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAttribDamageType*                DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsDetonation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Result                                                 (Parm, OutParm)

void UWIDGET_SubDetails_Weapon_C::GetWeaponArmorModifierLabel(class UAttribDamageType* DamageType, bool IsDetonation, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "GetWeaponArmorModifierLabel");

	Params::WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel Parms{};

	Parms.DamageType = DamageType;
	Parms.IsDetonation = IsDetonation;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetAmmoDetails
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowAmmo                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CountInClip                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CountInInventory                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_SubDetails_Weapon_C::GetAmmoDetails(bool* ShowAmmo, int32* CountInClip, int32* CountInInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "GetAmmoDetails");

	Params::WIDGET_SubDetails_Weapon_C_GetAmmoDetails Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShowAmmo != nullptr)
		*ShowAmmo = Parms.ShowAmmo;

	if (CountInClip != nullptr)
		*CountInClip = Parms.CountInClip;

	if (CountInInventory != nullptr)
		*CountInInventory = Parms.CountInInventory;
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.InitializeItemDetails
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_Base_C*                     Item_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWIDGET_InventoryDetails_C*       InventoryDetails_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_SubDetails_Weapon_C::InitializeItemDetails(class UITEM_Base_C* Item_0, class UWIDGET_InventoryDetails_C* InventoryDetails_0, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "InitializeItemDetails");

	Params::WIDGET_SubDetails_Weapon_C_InitializeItemDetails Parms{};

	Parms.Item_0 = Item_0;
	Parms.InventoryDetails_0 = InventoryDetails_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.ShowExtendedDetails
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_SubDetails_Weapon_C::ShowExtendedDetails(bool* Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "ShowExtendedDetails");

	Params::WIDGET_SubDetails_Weapon_C_ShowExtendedDetails Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Show != nullptr)
		*Show = Parms.Show;
}


// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.ShowBars
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Show                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_SubDetails_Weapon_C::ShowBars(bool* Show)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_SubDetails_Weapon_C", "ShowBars");

	Params::WIDGET_SubDetails_Weapon_C_ShowBars Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Show != nullptr)
		*Show = Parms.Show;
}

}


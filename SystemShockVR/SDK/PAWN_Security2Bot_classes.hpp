#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_Security2Bot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PAWN_Enemy_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PAWN_Security2Bot.PAWN_Security2Bot_C
// 0x0100 (0x0B10 - 0x0A10)
class APAWN_Security2Bot_C final : public APAWN_Enemy_C
{
public:
	uint8                                         Pad_A01[0x7];                                      // 0x0A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_VoxelAudio_C*                     GatlingGunAudio;                                   // 0x0A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     FootAudioR;                                        // 0x0A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     FootAudioL;                                        // 0x0A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     MouthAudio;                                        // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ScanBox;                                           // 0x0A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_MeleeDamageComponent_C*           COMP_MeleeDamageComponent;                         // 0x0A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APAWN_Security1Bot_C*                   OriginalSecurity1Bot;                              // 0x0A38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         BlastOffStartTimestamp;                            // 0x0A40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlastOffDuration;                                  // 0x0A44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SOCKET_LeftEngine;                                 // 0x0A48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SOCKET_RightEngine;                                // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SOCKET_Torso;                                      // 0x0A58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            EngineThrustCurve;                                 // 0x0A60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            HoverThrustCurve;                                  // 0x0A68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            RotateThrustCurve;                                 // 0x0A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlastOffEngineStrength;                            // 0x0A78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlastOffHoverStrength;                             // 0x0A7C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlastOffRotateStrength;                            // 0x0A80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlastOff_RotateLeft;                               // 0x0A84(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BlastOff_RotateForward;                            // 0x0A85(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A86[0x2];                                      // 0x0A86(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               GatlingDilatedSingleShotCue;                       // 0x0A88(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               GatlingLoopingCue;                                 // 0x0AB0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               GatlingLoopStopCue;                                // 0x0AD8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTimerHandle                           GatlingLoopStopTimerHandle;                        // 0x0B00(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void UpdateCustomDeathBehavior(bool* IsFinished);
	void EVENT_OnDeathActionFinished();
	void PlayGatlingGunDischargeSound(float RefireTime);
	void StopGatlingGunDischargeSound();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PAWN_Security2Bot_C">();
	}
	static class APAWN_Security2Bot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APAWN_Security2Bot_C>();
	}
};
static_assert(alignof(APAWN_Security2Bot_C) == 0x000010, "Wrong alignment on APAWN_Security2Bot_C");
static_assert(sizeof(APAWN_Security2Bot_C) == 0x000B10, "Wrong size on APAWN_Security2Bot_C");
static_assert(offsetof(APAWN_Security2Bot_C, GatlingGunAudio) == 0x000A08, "Member 'APAWN_Security2Bot_C::GatlingGunAudio' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, FootAudioR) == 0x000A10, "Member 'APAWN_Security2Bot_C::FootAudioR' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, FootAudioL) == 0x000A18, "Member 'APAWN_Security2Bot_C::FootAudioL' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, MouthAudio) == 0x000A20, "Member 'APAWN_Security2Bot_C::MouthAudio' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, ScanBox) == 0x000A28, "Member 'APAWN_Security2Bot_C::ScanBox' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, COMP_MeleeDamageComponent) == 0x000A30, "Member 'APAWN_Security2Bot_C::COMP_MeleeDamageComponent' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, OriginalSecurity1Bot) == 0x000A38, "Member 'APAWN_Security2Bot_C::OriginalSecurity1Bot' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, BlastOffStartTimestamp) == 0x000A40, "Member 'APAWN_Security2Bot_C::BlastOffStartTimestamp' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, BlastOffDuration) == 0x000A44, "Member 'APAWN_Security2Bot_C::BlastOffDuration' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, SOCKET_LeftEngine) == 0x000A48, "Member 'APAWN_Security2Bot_C::SOCKET_LeftEngine' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, SOCKET_RightEngine) == 0x000A50, "Member 'APAWN_Security2Bot_C::SOCKET_RightEngine' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, SOCKET_Torso) == 0x000A58, "Member 'APAWN_Security2Bot_C::SOCKET_Torso' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, EngineThrustCurve) == 0x000A60, "Member 'APAWN_Security2Bot_C::EngineThrustCurve' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, HoverThrustCurve) == 0x000A68, "Member 'APAWN_Security2Bot_C::HoverThrustCurve' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, RotateThrustCurve) == 0x000A70, "Member 'APAWN_Security2Bot_C::RotateThrustCurve' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, BlastOffEngineStrength) == 0x000A78, "Member 'APAWN_Security2Bot_C::BlastOffEngineStrength' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, BlastOffHoverStrength) == 0x000A7C, "Member 'APAWN_Security2Bot_C::BlastOffHoverStrength' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, BlastOffRotateStrength) == 0x000A80, "Member 'APAWN_Security2Bot_C::BlastOffRotateStrength' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, BlastOff_RotateLeft) == 0x000A84, "Member 'APAWN_Security2Bot_C::BlastOff_RotateLeft' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, BlastOff_RotateForward) == 0x000A85, "Member 'APAWN_Security2Bot_C::BlastOff_RotateForward' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, GatlingDilatedSingleShotCue) == 0x000A88, "Member 'APAWN_Security2Bot_C::GatlingDilatedSingleShotCue' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, GatlingLoopingCue) == 0x000AB0, "Member 'APAWN_Security2Bot_C::GatlingLoopingCue' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, GatlingLoopStopCue) == 0x000AD8, "Member 'APAWN_Security2Bot_C::GatlingLoopStopCue' has a wrong offset!");
static_assert(offsetof(APAWN_Security2Bot_C, GatlingLoopStopTimerHandle) == 0x000B00, "Member 'APAWN_Security2Bot_C::GatlingLoopStopTimerHandle' has a wrong offset!");

}


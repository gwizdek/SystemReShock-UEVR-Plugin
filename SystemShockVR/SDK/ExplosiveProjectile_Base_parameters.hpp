#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ExplosiveProjectile_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "ENUM_Axis_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ExecuteUbergraph_ExplosiveProjectile_Base
// 0x0110 (0x0110 - 0x0000)
struct ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System_1;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  K2Node_ComponentBoundEvent_DamageInstance;         // 0x0068(0x0028)()
	class UObject*                                K2Node_ComponentBoundEvent_UserParams;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasImpactProperties_Result;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System_2;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttributeDef*                          CallFunc_GetHealthAttrib_ReturnValue;              // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base");
static_assert(sizeof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base) == 0x000110, "Wrong size on ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, EntryPoint) == 0x000000, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, Temp_object_Variable) == 0x000008, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_DynamicCast_AsSound_Cue) == 0x000010, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_CustomEvent_Loaded_1) == 0x000020, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, Temp_object_Variable_1) == 0x000028, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_DynamicCast_AsNiagara_System) == 0x000030, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_CustomEvent_Loaded) == 0x000040, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, Temp_object_Variable_2) == 0x000048, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_DynamicCast_AsNiagara_System_1) == 0x000050, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_DynamicCast_AsNiagara_System_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_ComponentBoundEvent_OtherActor) == 0x000060, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_ComponentBoundEvent_DamageInstance) == 0x000068, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_ComponentBoundEvent_DamageInstance' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_ComponentBoundEvent_UserParams) == 0x000090, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_ComponentBoundEvent_UserParams' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, CallFunc_HasImpactProperties_Result) == 0x000098, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::CallFunc_HasImpactProperties_Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_CreateDelegate_OutputDelegate) == 0x00009C, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x0000B0, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_CustomEvent_Loaded_2) == 0x0000B8, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C0, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0000D0, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000D8, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_DynamicCast_AsNiagara_System_2) == 0x0000E0, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_DynamicCast_AsNiagara_System_2' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_DynamicCast_bSuccess_3) == 0x0000E8, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, CallFunc_IsValid_ReturnValue) == 0x0000E9, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000EC, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, CallFunc_GetHealthAttrib_ReturnValue) == 0x000100, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::CallFunc_GetHealthAttrib_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000108, "Member 'ExplosiveProjectile_Base_C_ExecuteUbergraph_ExplosiveProjectile_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature
// 0x0038 (0x0038 - 0x0000)
struct ExplosiveProjectile_Base_C_BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                UserParams;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature");
static_assert(sizeof(ExplosiveProjectile_Base_C_BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature) == 0x000038, "Wrong size on ExplosiveProjectile_Base_C_BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature");
static_assert(offsetof(ExplosiveProjectile_Base_C_BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature, OtherActor) == 0x000000, "Member 'ExplosiveProjectile_Base_C_BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature, DamageInstance) == 0x000008, "Member 'ExplosiveProjectile_Base_C_BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature::DamageInstance' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature, UserParams) == 0x000030, "Member 'ExplosiveProjectile_Base_C_BndEvt__AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature::UserParams' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069
// 0x0008 (0x0008 - 0x0000)
struct ExplosiveProjectile_Base_C_OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069");
static_assert(sizeof(ExplosiveProjectile_Base_C_OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069) == 0x000008, "Wrong size on ExplosiveProjectile_Base_C_OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069, Loaded) == 0x000000, "Member 'ExplosiveProjectile_Base_C_OnLoaded_5C0E05EA4B3C5E4A13BF06B6966C5069::Loaded' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.OnLoaded_12A5614F482FB743652E76BC115EB237
// 0x0008 (0x0008 - 0x0000)
struct ExplosiveProjectile_Base_C_OnLoaded_12A5614F482FB743652E76BC115EB237 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_OnLoaded_12A5614F482FB743652E76BC115EB237) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_OnLoaded_12A5614F482FB743652E76BC115EB237");
static_assert(sizeof(ExplosiveProjectile_Base_C_OnLoaded_12A5614F482FB743652E76BC115EB237) == 0x000008, "Wrong size on ExplosiveProjectile_Base_C_OnLoaded_12A5614F482FB743652E76BC115EB237");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnLoaded_12A5614F482FB743652E76BC115EB237, Loaded) == 0x000000, "Member 'ExplosiveProjectile_Base_C_OnLoaded_12A5614F482FB743652E76BC115EB237::Loaded' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.OnLoaded_1001838C477EB2B0BA9CEF96E9984340
// 0x0008 (0x0008 - 0x0000)
struct ExplosiveProjectile_Base_C_OnLoaded_1001838C477EB2B0BA9CEF96E9984340 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_OnLoaded_1001838C477EB2B0BA9CEF96E9984340) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_OnLoaded_1001838C477EB2B0BA9CEF96E9984340");
static_assert(sizeof(ExplosiveProjectile_Base_C_OnLoaded_1001838C477EB2B0BA9CEF96E9984340) == 0x000008, "Wrong size on ExplosiveProjectile_Base_C_OnLoaded_1001838C477EB2B0BA9CEF96E9984340");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnLoaded_1001838C477EB2B0BA9CEF96E9984340, Loaded) == 0x000000, "Member 'ExplosiveProjectile_Base_C_OnLoaded_1001838C477EB2B0BA9CEF96E9984340::Loaded' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.InitializeExplosive
// 0x0040 (0x0040 - 0x0000)
struct ExplosiveProjectile_Base_C_InitializeExplosive final
{
public:
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1; // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_InitializeExplosive) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_InitializeExplosive");
static_assert(sizeof(ExplosiveProjectile_Base_C_InitializeExplosive) == 0x000040, "Wrong size on ExplosiveProjectile_Base_C_InitializeExplosive");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeExplosive, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000000, "Member 'ExplosiveProjectile_Base_C_InitializeExplosive::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeExplosive, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'ExplosiveProjectile_Base_C_InitializeExplosive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeExplosive, CallFunc_GetInstigator_ReturnValue) == 0x000018, "Member 'ExplosiveProjectile_Base_C_InitializeExplosive::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeExplosive, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'ExplosiveProjectile_Base_C_InitializeExplosive::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeExplosive, CallFunc_IsPlayerControlled_ReturnValue) == 0x000028, "Member 'ExplosiveProjectile_Base_C_InitializeExplosive::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeExplosive, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1) == 0x000030, "Member 'ExplosiveProjectile_Base_C_InitializeExplosive::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeExplosive, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'ExplosiveProjectile_Base_C_InitializeExplosive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.InitializeDamageSettings
// 0x0020 (0x0020 - 0x0000)
struct ExplosiveProjectile_Base_C_InitializeDamageSettings final
{
public:
	class UAttribDamageType*                      InDamageType;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InDamageValue;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InArmorPenetration;                                // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InBlastRadius;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InBlastImpulse;                                    // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_InitializeDamageSettings) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_InitializeDamageSettings");
static_assert(sizeof(ExplosiveProjectile_Base_C_InitializeDamageSettings) == 0x000020, "Wrong size on ExplosiveProjectile_Base_C_InitializeDamageSettings");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeDamageSettings, InDamageType) == 0x000000, "Member 'ExplosiveProjectile_Base_C_InitializeDamageSettings::InDamageType' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeDamageSettings, InDamageValue) == 0x000008, "Member 'ExplosiveProjectile_Base_C_InitializeDamageSettings::InDamageValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeDamageSettings, InArmorPenetration) == 0x00000C, "Member 'ExplosiveProjectile_Base_C_InitializeDamageSettings::InArmorPenetration' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeDamageSettings, InBlastRadius) == 0x000010, "Member 'ExplosiveProjectile_Base_C_InitializeDamageSettings::InBlastRadius' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeDamageSettings, InBlastImpulse) == 0x000014, "Member 'ExplosiveProjectile_Base_C_InitializeDamageSettings::InBlastImpulse' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeDamageSettings, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'ExplosiveProjectile_Base_C_InitializeDamageSettings::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeDamageSettings, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00001C, "Member 'ExplosiveProjectile_Base_C_InitializeDamageSettings::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct ExplosiveProjectile_Base_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_InitializeAttributes) == 0x000004, "Wrong alignment on ExplosiveProjectile_Base_C_InitializeAttributes");
static_assert(sizeof(ExplosiveProjectile_Base_C_InitializeAttributes) == 0x000014, "Wrong size on ExplosiveProjectile_Base_C_InitializeAttributes");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ExplosiveProjectile_Base_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'ExplosiveProjectile_Base_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.PlayExplosionEffects
// 0x0078 (0x0078 - 0x0000)
struct ExplosiveProjectile_Base_C_PlayExplosionEffects final
{
public:
	class UNiagaraComponent*                      SpawnedFX;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetExplosiveLocation_Location;            // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetExplosiveLocation_Location_1;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetExplosiveLocation_Location_2;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_PlayExplosionEffects) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_PlayExplosionEffects");
static_assert(sizeof(ExplosiveProjectile_Base_C_PlayExplosionEffects) == 0x000078, "Wrong size on ExplosiveProjectile_Base_C_PlayExplosionEffects");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, SpawnedFX) == 0x000000, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::SpawnedFX' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, CallFunc_GetExplosiveLocation_Location) == 0x000008, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::CallFunc_GetExplosiveLocation_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, CallFunc_GetExplosiveLocation_Location_1) == 0x000018, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::CallFunc_GetExplosiveLocation_Location_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, CallFunc_GetExplosiveLocation_Location_2) == 0x000024, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::CallFunc_GetExplosiveLocation_Location_2' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, K2Node_DynamicCast_AsGI_Single_Player) == 0x000038, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000048, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000050, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000058, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, K2Node_DynamicCast_AsNiagara_System) == 0x000068, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_PlayExplosionEffects, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'ExplosiveProjectile_Base_C_PlayExplosionEffects::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ApplyExplosionDamage
// 0x0080 (0x0080 - 0x0000)
struct ExplosiveProjectile_Base_C_ApplyExplosionDamage final
{
public:
	float                                         MinimumDamage;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaximumDamage;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BlastLocation;                                     // 0x0008(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetExplosiveLocation_Location;            // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UAttribMod*, struct FAttribDamageInstance> CallFunc_ApplyRadialDamageAndImpulse_DamageInstances; // 0x0020(0x0050)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_ApplyExplosionDamage) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_ApplyExplosionDamage");
static_assert(sizeof(ExplosiveProjectile_Base_C_ApplyExplosionDamage) == 0x000080, "Wrong size on ExplosiveProjectile_Base_C_ApplyExplosionDamage");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyExplosionDamage, MinimumDamage) == 0x000000, "Member 'ExplosiveProjectile_Base_C_ApplyExplosionDamage::MinimumDamage' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyExplosionDamage, MaximumDamage) == 0x000004, "Member 'ExplosiveProjectile_Base_C_ApplyExplosionDamage::MaximumDamage' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyExplosionDamage, BlastLocation) == 0x000008, "Member 'ExplosiveProjectile_Base_C_ApplyExplosionDamage::BlastLocation' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyExplosionDamage, CallFunc_GetExplosiveLocation_Location) == 0x000014, "Member 'ExplosiveProjectile_Base_C_ApplyExplosionDamage::CallFunc_GetExplosiveLocation_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyExplosionDamage, CallFunc_ApplyRadialDamageAndImpulse_DamageInstances) == 0x000020, "Member 'ExplosiveProjectile_Base_C_ApplyExplosionDamage::CallFunc_ApplyRadialDamageAndImpulse_DamageInstances' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyExplosionDamage, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000070, "Member 'ExplosiveProjectile_Base_C_ApplyExplosionDamage::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyExplosionDamage, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000074, "Member 'ExplosiveProjectile_Base_C_ApplyExplosionDamage::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyExplosionDamage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000078, "Member 'ExplosiveProjectile_Base_C_ApplyExplosionDamage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyExplosionDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00007C, "Member 'ExplosiveProjectile_Base_C_ApplyExplosionDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ApplyCameraShake
// 0x0060 (0x0060 - 0x0000)
struct ExplosiveProjectile_Base_C_ApplyCameraShake final
{
public:
	float                                         ShakeMagnitude;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  PlayerHacker;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetExplosiveLocation_Location;            // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_ApplyCameraShake) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_ApplyCameraShake");
static_assert(sizeof(ExplosiveProjectile_Base_C_ApplyCameraShake) == 0x000060, "Wrong size on ExplosiveProjectile_Base_C_ApplyCameraShake");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, ShakeMagnitude) == 0x000000, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::ShakeMagnitude' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, PlayerHacker) == 0x000008, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::PlayerHacker' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, CallFunc_GetExplosiveLocation_Location) == 0x000010, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::CallFunc_GetExplosiveLocation_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, CallFunc_Vector_Distance_ReturnValue) == 0x000030, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, CallFunc_GetPlayerPawn_ReturnValue) == 0x000038, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000040, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000048, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, CallFunc_FMin_ReturnValue) == 0x000054, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ApplyCameraShake, CallFunc_Ease_ReturnValue) == 0x000058, "Member 'ExplosiveProjectile_Base_C_ApplyCameraShake::CallFunc_Ease_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.DetonateExplosive
// 0x0010 (0x0010 - 0x0000)
struct ExplosiveProjectile_Base_C_DetonateExplosive final
{
public:
	bool                                          CallFunc_MarkHasBeenDetonated_Success;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_PlayExplosionEffects_SpawnedFX;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_DetonateExplosive) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_DetonateExplosive");
static_assert(sizeof(ExplosiveProjectile_Base_C_DetonateExplosive) == 0x000010, "Wrong size on ExplosiveProjectile_Base_C_DetonateExplosive");
static_assert(offsetof(ExplosiveProjectile_Base_C_DetonateExplosive, CallFunc_MarkHasBeenDetonated_Success) == 0x000000, "Member 'ExplosiveProjectile_Base_C_DetonateExplosive::CallFunc_MarkHasBeenDetonated_Success' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_DetonateExplosive, CallFunc_PlayExplosionEffects_SpawnedFX) == 0x000008, "Member 'ExplosiveProjectile_Base_C_DetonateExplosive::CallFunc_PlayExplosionEffects_SpawnedFX' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.CreateExplosionSoundDetectionEvent
// 0x0028 (0x0028 - 0x0000)
struct ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent final
{
public:
	struct FVector                                CallFunc_GetExplosiveLocation_Location;            // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent");
static_assert(sizeof(ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent) == 0x000028, "Wrong size on ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent");
static_assert(offsetof(ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent, CallFunc_GetExplosiveLocation_Location) == 0x000000, "Member 'ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent::CallFunc_GetExplosiveLocation_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent, CallFunc_GetInstigator_ReturnValue) == 0x000010, "Member 'ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000018, "Member 'ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'ExplosiveProjectile_Base_C_CreateExplosionSoundDetectionEvent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.OnDamageAppliedToActors
// 0x0108 (0x0108 - 0x0000)
struct ExplosiveProjectile_Base_C_OnDamageAppliedToActors final
{
public:
	TMap<class UAttribMod*, struct FAttribDamageInstance> DamageInstances;                                   // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FDataTableRowHandle                    MultiKillAchievementHandle;                        // 0x0050(0x0010)(Edit, BlueprintVisible, NoDestructor)
	int32                                         KillCount;                                         // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             DamageMod;                                         // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAttribMod*>                     CallFunc_Map_Keys_Keys;                            // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryCompleteBinaryAchievement_Result;      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetTargetActor_ReturnValue;               // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttribDamageInstance                  CallFunc_Map_Find_Value;                           // 0x00D8(0x0028)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_OnDamageAppliedToActors");
static_assert(sizeof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors) == 0x000108, "Wrong size on ExplosiveProjectile_Base_C_OnDamageAppliedToActors");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, DamageInstances) == 0x000000, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::DamageInstances' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, MultiKillAchievementHandle) == 0x000050, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::MultiKillAchievementHandle' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, KillCount) == 0x000060, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::KillCount' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, DamageMod) == 0x000068, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::DamageMod' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_Map_Keys_Keys) == 0x000070, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, Temp_int_Variable) == 0x000088, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, Temp_int_Array_Index_Variable) == 0x000098, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_GetGameInstance_ReturnValue) == 0x0000A8, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000B0, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_TryCompleteBinaryAchievement_Result) == 0x0000B9, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_TryCompleteBinaryAchievement_Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000BA, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_GetTargetActor_ReturnValue) == 0x0000C0, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_GetTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x0000C8, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_Map_Find_Value) == 0x0000D8, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_Map_Find_ReturnValue) == 0x000100, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_Not_PreBool_ReturnValue) == 0x000101, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_OnDamageAppliedToActors, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000102, "Member 'ExplosiveProjectile_Base_C_OnDamageAppliedToActors::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.IsTeleporting
// 0x0002 (0x0002 - 0x0000)
struct ExplosiveProjectile_Base_C_IsTeleporting final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_IsTeleporting) == 0x000001, "Wrong alignment on ExplosiveProjectile_Base_C_IsTeleporting");
static_assert(sizeof(ExplosiveProjectile_Base_C_IsTeleporting) == 0x000002, "Wrong size on ExplosiveProjectile_Base_C_IsTeleporting");
static_assert(offsetof(ExplosiveProjectile_Base_C_IsTeleporting, Result) == 0x000000, "Member 'ExplosiveProjectile_Base_C_IsTeleporting::Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_IsTeleporting, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000001, "Member 'ExplosiveProjectile_Base_C_IsTeleporting::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.CanTeleportExplosive
// 0x0005 (0x0005 - 0x0000)
struct ExplosiveProjectile_Base_C_CanTeleportExplosive final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTeleporting_Result;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_CanTeleportExplosive) == 0x000001, "Wrong alignment on ExplosiveProjectile_Base_C_CanTeleportExplosive");
static_assert(sizeof(ExplosiveProjectile_Base_C_CanTeleportExplosive) == 0x000005, "Wrong size on ExplosiveProjectile_Base_C_CanTeleportExplosive");
static_assert(offsetof(ExplosiveProjectile_Base_C_CanTeleportExplosive, Result) == 0x000000, "Member 'ExplosiveProjectile_Base_C_CanTeleportExplosive::Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_CanTeleportExplosive, CallFunc_IsTeleporting_Result) == 0x000001, "Member 'ExplosiveProjectile_Base_C_CanTeleportExplosive::CallFunc_IsTeleporting_Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_CanTeleportExplosive, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ExplosiveProjectile_Base_C_CanTeleportExplosive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_CanTeleportExplosive, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'ExplosiveProjectile_Base_C_CanTeleportExplosive::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_CanTeleportExplosive, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'ExplosiveProjectile_Base_C_CanTeleportExplosive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.GetExplosiveEffectsAttachParent
// 0x0028 (0x0028 - 0x0000)
struct ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent final
{
public:
	class USceneComponent*                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent");
static_assert(sizeof(ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent) == 0x000028, "Wrong size on ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent, Result) == 0x000000, "Member 'ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent::Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent, Temp_bool_Variable) == 0x000008, "Member 'ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000010, "Member 'ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent, K2Node_Select_Default) == 0x000020, "Member 'ExplosiveProjectile_Base_C_GetExplosiveEffectsAttachParent::K2Node_Select_Default' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.GetExplosivePhysicsComponent
// 0x0008 (0x0008 - 0x0000)
struct ExplosiveProjectile_Base_C_GetExplosivePhysicsComponent final
{
public:
	class UPrimitiveComponent*                    PhysicsComponent;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_GetExplosivePhysicsComponent) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_GetExplosivePhysicsComponent");
static_assert(sizeof(ExplosiveProjectile_Base_C_GetExplosivePhysicsComponent) == 0x000008, "Wrong size on ExplosiveProjectile_Base_C_GetExplosivePhysicsComponent");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetExplosivePhysicsComponent, PhysicsComponent) == 0x000000, "Member 'ExplosiveProjectile_Base_C_GetExplosivePhysicsComponent::PhysicsComponent' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.MarkHasBeenDetonated
// 0x0040 (0x0040 - 0x0000)
struct ExplosiveProjectile_Base_C_MarkHasBeenDetonated final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    ExplosivePhysicsComponent;                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_MarkHasBeenDetonated) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_MarkHasBeenDetonated");
static_assert(sizeof(ExplosiveProjectile_Base_C_MarkHasBeenDetonated) == 0x000040, "Wrong size on ExplosiveProjectile_Base_C_MarkHasBeenDetonated");
static_assert(offsetof(ExplosiveProjectile_Base_C_MarkHasBeenDetonated, Success) == 0x000000, "Member 'ExplosiveProjectile_Base_C_MarkHasBeenDetonated::Success' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_MarkHasBeenDetonated, ExplosivePhysicsComponent) == 0x000008, "Member 'ExplosiveProjectile_Base_C_MarkHasBeenDetonated::ExplosivePhysicsComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_MarkHasBeenDetonated, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ExplosiveProjectile_Base_C_MarkHasBeenDetonated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_MarkHasBeenDetonated, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'ExplosiveProjectile_Base_C_MarkHasBeenDetonated::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_MarkHasBeenDetonated, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000018, "Member 'ExplosiveProjectile_Base_C_MarkHasBeenDetonated::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_MarkHasBeenDetonated, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'ExplosiveProjectile_Base_C_MarkHasBeenDetonated::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_MarkHasBeenDetonated, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'ExplosiveProjectile_Base_C_MarkHasBeenDetonated::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_MarkHasBeenDetonated, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'ExplosiveProjectile_Base_C_MarkHasBeenDetonated::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.EVENT_OnDisableAttribChanged
// 0x0048 (0x0048 - 0x0000)
struct ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveStrength;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMeshComponent*>                 CallFunc_GetChildComponentsByClass_ReturnValue;    // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged) == 0x000048, "Wrong size on ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged, EmissiveStrength) == 0x000008, "Member 'ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged::EmissiveStrength' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged, Temp_int_Array_Index_Variable) == 0x000010, "Member 'ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged, CallFunc_GetChildComponentsByClass_ReturnValue) == 0x000020, "Member 'ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged::CallFunc_GetChildComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Array_Get_Item) == 0x000038, "Member 'ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'ExplosiveProjectile_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.EVENT_UpdateEnemyExplosiveCollisionResponse
// 0x0010 (0x0010 - 0x0000)
struct ExplosiveProjectile_Base_C_EVENT_UpdateEnemyExplosiveCollisionResponse final
{
public:
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_EVENT_UpdateEnemyExplosiveCollisionResponse) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_EVENT_UpdateEnemyExplosiveCollisionResponse");
static_assert(sizeof(ExplosiveProjectile_Base_C_EVENT_UpdateEnemyExplosiveCollisionResponse) == 0x000010, "Wrong size on ExplosiveProjectile_Base_C_EVENT_UpdateEnemyExplosiveCollisionResponse");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_UpdateEnemyExplosiveCollisionResponse, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000000, "Member 'ExplosiveProjectile_Base_C_EVENT_UpdateEnemyExplosiveCollisionResponse::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_EVENT_UpdateEnemyExplosiveCollisionResponse, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1) == 0x000008, "Member 'ExplosiveProjectile_Base_C_EVENT_UpdateEnemyExplosiveCollisionResponse::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent_1' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.GetExplosiveLocation
// 0x0040 (0x0040 - 0x0000)
struct ExplosiveProjectile_Base_C_GetExplosiveLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    ExplosivePhysicsComponent;                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_GetExplosiveLocation) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_GetExplosiveLocation");
static_assert(sizeof(ExplosiveProjectile_Base_C_GetExplosiveLocation) == 0x000040, "Wrong size on ExplosiveProjectile_Base_C_GetExplosiveLocation");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetExplosiveLocation, Location) == 0x000000, "Member 'ExplosiveProjectile_Base_C_GetExplosiveLocation::Location' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetExplosiveLocation, ExplosivePhysicsComponent) == 0x000010, "Member 'ExplosiveProjectile_Base_C_GetExplosiveLocation::ExplosivePhysicsComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetExplosiveLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'ExplosiveProjectile_Base_C_GetExplosiveLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetExplosiveLocation, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'ExplosiveProjectile_Base_C_GetExplosiveLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetExplosiveLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'ExplosiveProjectile_Base_C_GetExplosiveLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetExplosiveLocation, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000038, "Member 'ExplosiveProjectile_Base_C_GetExplosiveLocation::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.SpawnTrailEffects
// 0x0028 (0x0028 - 0x0000)
struct ExplosiveProjectile_Base_C_SpawnTrailEffects final
{
public:
	class UNiagaraSystem*                         TrailSystem;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetExplosiveEffectsAttachParent_Result;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalTrailOffset_Result;               // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_SpawnTrailEffects) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_SpawnTrailEffects");
static_assert(sizeof(ExplosiveProjectile_Base_C_SpawnTrailEffects) == 0x000028, "Wrong size on ExplosiveProjectile_Base_C_SpawnTrailEffects");
static_assert(offsetof(ExplosiveProjectile_Base_C_SpawnTrailEffects, TrailSystem) == 0x000000, "Member 'ExplosiveProjectile_Base_C_SpawnTrailEffects::TrailSystem' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_SpawnTrailEffects, CallFunc_GetExplosiveEffectsAttachParent_Result) == 0x000008, "Member 'ExplosiveProjectile_Base_C_SpawnTrailEffects::CallFunc_GetExplosiveEffectsAttachParent_Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_SpawnTrailEffects, CallFunc_GetLocalTrailOffset_Result) == 0x000010, "Member 'ExplosiveProjectile_Base_C_SpawnTrailEffects::CallFunc_GetLocalTrailOffset_Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_SpawnTrailEffects, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000020, "Member 'ExplosiveProjectile_Base_C_SpawnTrailEffects::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.TryPlayLaunchEffects
// 0x0058 (0x0058 - 0x0000)
struct ExplosiveProjectile_Base_C_TryPlayLaunchEffects final
{
public:
	class USceneComponent*                        CallFunc_GetExplosiveEffectsAttachParent_Result;   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_GetExplosiveEffectsAttachParent_Result_1; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalTrailOffset_Result;               // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalTrailOffset_Result_1;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetExplosiveLocation_Location;            // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVoxelAudioComponent*                   CallFunc_SpawnVoxelSoundAttachedFromClass_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_TryPlayLaunchEffects) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_TryPlayLaunchEffects");
static_assert(sizeof(ExplosiveProjectile_Base_C_TryPlayLaunchEffects) == 0x000058, "Wrong size on ExplosiveProjectile_Base_C_TryPlayLaunchEffects");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryPlayLaunchEffects, CallFunc_GetExplosiveEffectsAttachParent_Result) == 0x000000, "Member 'ExplosiveProjectile_Base_C_TryPlayLaunchEffects::CallFunc_GetExplosiveEffectsAttachParent_Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryPlayLaunchEffects, CallFunc_GetExplosiveEffectsAttachParent_Result_1) == 0x000008, "Member 'ExplosiveProjectile_Base_C_TryPlayLaunchEffects::CallFunc_GetExplosiveEffectsAttachParent_Result_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryPlayLaunchEffects, CallFunc_GetLocalTrailOffset_Result) == 0x000010, "Member 'ExplosiveProjectile_Base_C_TryPlayLaunchEffects::CallFunc_GetLocalTrailOffset_Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryPlayLaunchEffects, CallFunc_GetLocalTrailOffset_Result_1) == 0x00001C, "Member 'ExplosiveProjectile_Base_C_TryPlayLaunchEffects::CallFunc_GetLocalTrailOffset_Result_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryPlayLaunchEffects, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000028, "Member 'ExplosiveProjectile_Base_C_TryPlayLaunchEffects::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryPlayLaunchEffects, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'ExplosiveProjectile_Base_C_TryPlayLaunchEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryPlayLaunchEffects, CallFunc_GetExplosiveLocation_Location) == 0x000034, "Member 'ExplosiveProjectile_Base_C_TryPlayLaunchEffects::CallFunc_GetExplosiveLocation_Location' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryPlayLaunchEffects, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'ExplosiveProjectile_Base_C_TryPlayLaunchEffects::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryPlayLaunchEffects, CallFunc_SpawnVoxelSoundAttachedFromClass_ReturnValue) == 0x000048, "Member 'ExplosiveProjectile_Base_C_TryPlayLaunchEffects::CallFunc_SpawnVoxelSoundAttachedFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryPlayLaunchEffects, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'ExplosiveProjectile_Base_C_TryPlayLaunchEffects::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.TryTeleportExplosive
// 0x0180 (0x0180 - 0x0000)
struct ExplosiveProjectile_Base_C_TryTeleportExplosive final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MaterializeDuration;                               // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              SoundCue;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         TeleportFX;                                        // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      SpawnedTeleportFX;                                 // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundsHalfExtent;                                  // 0x0040(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BoundsOrigin;                                      // 0x004C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PhysicsComponent;                                  // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanTeleportExplosive_Result;              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x015C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0170(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_TryTeleportExplosive) == 0x000010, "Wrong alignment on ExplosiveProjectile_Base_C_TryTeleportExplosive");
static_assert(sizeof(ExplosiveProjectile_Base_C_TryTeleportExplosive) == 0x000180, "Wrong size on ExplosiveProjectile_Base_C_TryTeleportExplosive");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, Location) == 0x000000, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::Location' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, Rotation) == 0x00000C, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::Rotation' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, MaterializeDuration) == 0x000018, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::MaterializeDuration' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, SoundCue) == 0x000020, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::SoundCue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, TeleportFX) == 0x000028, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::TeleportFX' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, Result) == 0x000030, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, SpawnedTeleportFX) == 0x000038, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::SpawnedTeleportFX' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, BoundsHalfExtent) == 0x000040, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::BoundsHalfExtent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, BoundsOrigin) == 0x00004C, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::BoundsOrigin' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, PhysicsComponent) == 0x000058, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000090, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, CallFunc_GetActorBounds_Origin) == 0x000118, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, CallFunc_GetActorBounds_BoxExtent) == 0x000124, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000130, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000140, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000150, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, CallFunc_CanTeleportExplosive_Result) == 0x000158, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::CallFunc_CanTeleportExplosive_Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, K2Node_CreateDelegate_OutputDelegate) == 0x00015C, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_TryTeleportExplosive, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000170, "Member 'ExplosiveProjectile_Base_C_TryTeleportExplosive::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.UpdateExplosiveVisibility
// 0x0020 (0x0020 - 0x0000)
struct ExplosiveProjectile_Base_C_UpdateExplosiveVisibility final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    PhysicsComponent;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetExplosivePhysicsComponent_PhysicsComponent; // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_UpdateExplosiveVisibility) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_UpdateExplosiveVisibility");
static_assert(sizeof(ExplosiveProjectile_Base_C_UpdateExplosiveVisibility) == 0x000020, "Wrong size on ExplosiveProjectile_Base_C_UpdateExplosiveVisibility");
static_assert(offsetof(ExplosiveProjectile_Base_C_UpdateExplosiveVisibility, State) == 0x000000, "Member 'ExplosiveProjectile_Base_C_UpdateExplosiveVisibility::State' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_UpdateExplosiveVisibility, PhysicsComponent) == 0x000008, "Member 'ExplosiveProjectile_Base_C_UpdateExplosiveVisibility::PhysicsComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_UpdateExplosiveVisibility, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ExplosiveProjectile_Base_C_UpdateExplosiveVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_UpdateExplosiveVisibility, CallFunc_GetExplosivePhysicsComponent_PhysicsComponent) == 0x000018, "Member 'ExplosiveProjectile_Base_C_UpdateExplosiveVisibility::CallFunc_GetExplosivePhysicsComponent_PhysicsComponent' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.GetLocalTrailOffset
// 0x0040 (0x0040 - 0x0000)
struct ExplosiveProjectile_Base_C_GetLocalTrailOffset final
{
public:
	struct FVector                                Result;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_Axis                                     Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_GetLocalTrailOffset) == 0x000004, "Wrong alignment on ExplosiveProjectile_Base_C_GetLocalTrailOffset");
static_assert(sizeof(ExplosiveProjectile_Base_C_GetLocalTrailOffset) == 0x000040, "Wrong size on ExplosiveProjectile_Base_C_GetLocalTrailOffset");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetLocalTrailOffset, Result) == 0x000000, "Member 'ExplosiveProjectile_Base_C_GetLocalTrailOffset::Result' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetLocalTrailOffset, Temp_byte_Variable) == 0x00000C, "Member 'ExplosiveProjectile_Base_C_GetLocalTrailOffset::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetLocalTrailOffset, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'ExplosiveProjectile_Base_C_GetLocalTrailOffset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetLocalTrailOffset, CallFunc_MakeVector_ReturnValue_1) == 0x00001C, "Member 'ExplosiveProjectile_Base_C_GetLocalTrailOffset::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetLocalTrailOffset, CallFunc_MakeVector_ReturnValue_2) == 0x000028, "Member 'ExplosiveProjectile_Base_C_GetLocalTrailOffset::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetLocalTrailOffset, K2Node_Select_Default) == 0x000034, "Member 'ExplosiveProjectile_Base_C_GetLocalTrailOffset::K2Node_Select_Default' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.SetExplosionIgnoresOwner
// 0x0001 (0x0001 - 0x0000)
struct ExplosiveProjectile_Base_C_SetExplosionIgnoresOwner final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_SetExplosionIgnoresOwner) == 0x000001, "Wrong alignment on ExplosiveProjectile_Base_C_SetExplosionIgnoresOwner");
static_assert(sizeof(ExplosiveProjectile_Base_C_SetExplosionIgnoresOwner) == 0x000001, "Wrong size on ExplosiveProjectile_Base_C_SetExplosionIgnoresOwner");
static_assert(offsetof(ExplosiveProjectile_Base_C_SetExplosionIgnoresOwner, State) == 0x000000, "Member 'ExplosiveProjectile_Base_C_SetExplosionIgnoresOwner::State' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.GetTrailColor
// 0x0010 (0x0010 - 0x0000)
struct ExplosiveProjectile_Base_C_GetTrailColor final
{
public:
	struct FLinearColor                           Result;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ExplosiveProjectile_Base_C_GetTrailColor) == 0x000004, "Wrong alignment on ExplosiveProjectile_Base_C_GetTrailColor");
static_assert(sizeof(ExplosiveProjectile_Base_C_GetTrailColor) == 0x000010, "Wrong size on ExplosiveProjectile_Base_C_GetTrailColor");
static_assert(offsetof(ExplosiveProjectile_Base_C_GetTrailColor, Result) == 0x000000, "Member 'ExplosiveProjectile_Base_C_GetTrailColor::Result' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ShouldSaveActor
// 0x0040 (0x0040 - 0x0000)
struct ExplosiveProjectile_Base_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          K2Node_MakeStruct_StreamingSaveGameActorParams;    // 0x0020(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_ShouldSaveActor) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_ShouldSaveActor");
static_assert(sizeof(ExplosiveProjectile_Base_C_ShouldSaveActor) == 0x000040, "Wrong size on ExplosiveProjectile_Base_C_ShouldSaveActor");
static_assert(offsetof(ExplosiveProjectile_Base_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'ExplosiveProjectile_Base_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'ExplosiveProjectile_Base_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ShouldSaveActor, K2Node_MakeStruct_StreamingSaveGameActorParams) == 0x000020, "Member 'ExplosiveProjectile_Base_C_ShouldSaveActor::K2Node_MakeStruct_StreamingSaveGameActorParams' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ShouldSaveActor, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'ExplosiveProjectile_Base_C_ShouldSaveActor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ReceivePendingBodyTransforms
// 0x0020 (0x0020 - 0x0000)
struct ExplosiveProjectile_Base_C_ReceivePendingBodyTransforms final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     BodyTransforms;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_ReceivePendingBodyTransforms) == 0x000008, "Wrong alignment on ExplosiveProjectile_Base_C_ReceivePendingBodyTransforms");
static_assert(sizeof(ExplosiveProjectile_Base_C_ReceivePendingBodyTransforms) == 0x000020, "Wrong size on ExplosiveProjectile_Base_C_ReceivePendingBodyTransforms");
static_assert(offsetof(ExplosiveProjectile_Base_C_ReceivePendingBodyTransforms, SkeletalMeshComponent) == 0x000000, "Member 'ExplosiveProjectile_Base_C_ReceivePendingBodyTransforms::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ReceivePendingBodyTransforms, BodyTransforms) == 0x000008, "Member 'ExplosiveProjectile_Base_C_ReceivePendingBodyTransforms::BodyTransforms' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ReceivePendingBodyTransforms, ReturnValue) == 0x000018, "Member 'ExplosiveProjectile_Base_C_ReceivePendingBodyTransforms::ReturnValue' has a wrong offset!");

// Function ExplosiveProjectile_Base.ExplosiveProjectile_Base_C.ReceivePendingCharacterVelocity
// 0x0010 (0x0010 - 0x0000)
struct ExplosiveProjectile_Base_C_ReceivePendingCharacterVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ExplosiveProjectile_Base_C_ReceivePendingCharacterVelocity) == 0x000004, "Wrong alignment on ExplosiveProjectile_Base_C_ReceivePendingCharacterVelocity");
static_assert(sizeof(ExplosiveProjectile_Base_C_ReceivePendingCharacterVelocity) == 0x000010, "Wrong size on ExplosiveProjectile_Base_C_ReceivePendingCharacterVelocity");
static_assert(offsetof(ExplosiveProjectile_Base_C_ReceivePendingCharacterVelocity, Velocity) == 0x000000, "Member 'ExplosiveProjectile_Base_C_ReceivePendingCharacterVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(ExplosiveProjectile_Base_C_ReceivePendingCharacterVelocity, ReturnValue) == 0x00000C, "Member 'ExplosiveProjectile_Base_C_ReceivePendingCharacterVelocity::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_PowerStation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "ENUM_PowerStationRechargeState_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "INTERACT_Channeling_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_PowerStation.INTERACT_PowerStation_C
// 0x03E8 (0x0738 - 0x0350)
class AINTERACT_PowerStation_C final : public AINTERACT_Channeling_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_PowerStation_C;            // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_AttribManager_C*                  COMP_AttribManager;                                // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_CullableNavModifier_C*            VoxelNavigationBlocker;                            // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     IdleAudio;                                         // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointOfInterestComponent_C*            PointOfInterestComponent;                          // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Powerstation_Idle;                              // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelCullable_C*                  COMP_VoxelCullable;                                // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_ScannableObject_C*                COMP_ScannableObject;                              // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      TargetCapsule;                                     // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 PowerStationSkelMesh;                              // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	ENUM_PowerStationRechargeState                RechargeState;                                     // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttribModApplyData                    AttribModEnergy;                                   // 0x03B0(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FAttribModApplyData                    AttribModDamage;                                   // 0x0450(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           RechargeTimerHandle;                               // 0x04F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           PowerDownTimerHandle;                              // 0x04F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPowerStationAudible;                             // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsPoweredOn;                                       // 0x0501(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_502[0x2];                                      // 0x0502(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RechargeTimestamp;                                 // 0x0504(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RechargeDuration;                                  // 0x0508(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsUnstable;                                        // 0x050C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50D[0x3];                                      // 0x050D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            HackerUseMontage;                                  // 0x0510(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class AINTERACT_Base_C*>               TriggeredTargets;                                  // 0x0538(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          RequiresSecurityLevel;                             // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequiredSecurityLevel;                             // 0x054C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   RechargingMessage;                                 // 0x0550(0x0018)(Edit, BlueprintVisible)
	TSoftObjectPtr<class USoundCue>               ErrorCue;                                          // 0x0568(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               ActivationCue;                                     // 0x0590(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               PopUpCue;                                          // 0x05B8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               UIChargeCue;                                       // 0x05E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          InteractFX;                                        // 0x0608(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 ActivateAnimMessage;                               // 0x0630(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 LightOffAnimMessage;                               // 0x0640(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            DischargeMontage;                                  // 0x0650(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            Rise25Montage;                                     // 0x0678(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            Rise50Montage;                                     // 0x06A0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            Rise75Montage;                                     // 0x06C8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            Rise100Montage;                                    // 0x06F0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FDataTableRowHandle>            CompleteGameEvents;                                // 0x0718(0x0010)(Edit, BlueprintVisible)
	struct FDataTableRowHandle                    TimedTutorial;                                     // 0x0728(0x0010)(Edit, BlueprintVisible, NoDestructor)

public:
	void ExecuteUbergraph_INTERACT_PowerStation(int32 EntryPoint);
	void BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_1_CullableAudibilitySignature__DelegateSignature(bool bAudibleState);
	void BndEvt__INTERACT_PowerStation_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void EVENT_PowerDownTick();
	void EVENT_OnRechargeStageFinished();
	void EVENT_SecurityLevelChanged(int32 NewSecurityLevel);
	void InitializePowerStation();
	void EVENT_OnBeginDischarging();
	void InitializeAttributes();
	void UpdateMeshEmissiveStrength(float Value);
	void TryCompleteGameEvents();
	void TryBeginActivatingPowerStation();
	void ApplyPowerStationActivationMods();
	void UpdateRechargeAnimationState();
	void UpdateLightIntensity(float Scale);
	void UpdatePowerStationVisibility(bool VisibilityState);
	void UpdatePowerStationAudibility(bool AudibilityState);
	void TryDisablePowerStationLight();
	void PlayPowerStationIdleEffects();
	void PlayPowerStationMontage();
	void ReceiveAnimationMessage(const class FString& Message, bool* Result);
	void GetRechargeStateDuration(float* Result);
	void GetRechargeStateCount(int32* Count);
	void EVENT_OnSpawnedActivateFX(class UObject* Object);
	void CreateChannelingMoveControl(class APAWN_Hacker_Simple_C* HackerPawn, class UMOVECONTROL_Base_C** Result);
	void EVENT_OnDisableAttribChanged(float CurrValue, float LastValue);
	void IsPowerStationFunctional(bool* Result);
	void IsHiddenInteractablePrimitive(class APAWN_SystemShockCharacter_C* Character, class UPrimitiveComponent* CursorPrimitive, bool* Result);
	void CanModifyInteractPower(bool* Result);
	void SetInteractPowered(bool State, bool* Result);
	void OnPowerStateEnabled();
	void OnPowerStateDisabled(bool HandleTimerChanges);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_PowerStation_C">();
	}
	static class AINTERACT_PowerStation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_PowerStation_C>();
	}
};
static_assert(alignof(AINTERACT_PowerStation_C) == 0x000008, "Wrong alignment on AINTERACT_PowerStation_C");
static_assert(sizeof(AINTERACT_PowerStation_C) == 0x000738, "Wrong size on AINTERACT_PowerStation_C");
static_assert(offsetof(AINTERACT_PowerStation_C, UberGraphFrame_INTERACT_PowerStation_C) == 0x000350, "Member 'AINTERACT_PowerStation_C::UberGraphFrame_INTERACT_PowerStation_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, COMP_AttribManager) == 0x000358, "Member 'AINTERACT_PowerStation_C::COMP_AttribManager' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, VoxelNavigationBlocker) == 0x000360, "Member 'AINTERACT_PowerStation_C::VoxelNavigationBlocker' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, IdleAudio) == 0x000368, "Member 'AINTERACT_PowerStation_C::IdleAudio' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, PointOfInterestComponent) == 0x000370, "Member 'AINTERACT_PowerStation_C::PointOfInterestComponent' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, NS_Powerstation_Idle) == 0x000378, "Member 'AINTERACT_PowerStation_C::NS_Powerstation_Idle' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, COMP_VoxelCullable) == 0x000380, "Member 'AINTERACT_PowerStation_C::COMP_VoxelCullable' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, COMP_ScannableObject) == 0x000388, "Member 'AINTERACT_PowerStation_C::COMP_ScannableObject' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, PointLight) == 0x000390, "Member 'AINTERACT_PowerStation_C::PointLight' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, TargetCapsule) == 0x000398, "Member 'AINTERACT_PowerStation_C::TargetCapsule' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, PowerStationSkelMesh) == 0x0003A0, "Member 'AINTERACT_PowerStation_C::PowerStationSkelMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, RechargeState) == 0x0003A8, "Member 'AINTERACT_PowerStation_C::RechargeState' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, AttribModEnergy) == 0x0003B0, "Member 'AINTERACT_PowerStation_C::AttribModEnergy' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, AttribModDamage) == 0x000450, "Member 'AINTERACT_PowerStation_C::AttribModDamage' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, RechargeTimerHandle) == 0x0004F0, "Member 'AINTERACT_PowerStation_C::RechargeTimerHandle' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, PowerDownTimerHandle) == 0x0004F8, "Member 'AINTERACT_PowerStation_C::PowerDownTimerHandle' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, IsPowerStationAudible) == 0x000500, "Member 'AINTERACT_PowerStation_C::IsPowerStationAudible' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, IsPoweredOn) == 0x000501, "Member 'AINTERACT_PowerStation_C::IsPoweredOn' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, RechargeTimestamp) == 0x000504, "Member 'AINTERACT_PowerStation_C::RechargeTimestamp' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, RechargeDuration) == 0x000508, "Member 'AINTERACT_PowerStation_C::RechargeDuration' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, IsUnstable) == 0x00050C, "Member 'AINTERACT_PowerStation_C::IsUnstable' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, HackerUseMontage) == 0x000510, "Member 'AINTERACT_PowerStation_C::HackerUseMontage' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, TriggeredTargets) == 0x000538, "Member 'AINTERACT_PowerStation_C::TriggeredTargets' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, RequiresSecurityLevel) == 0x000548, "Member 'AINTERACT_PowerStation_C::RequiresSecurityLevel' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, RequiredSecurityLevel) == 0x00054C, "Member 'AINTERACT_PowerStation_C::RequiredSecurityLevel' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, RechargingMessage) == 0x000550, "Member 'AINTERACT_PowerStation_C::RechargingMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, ErrorCue) == 0x000568, "Member 'AINTERACT_PowerStation_C::ErrorCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, ActivationCue) == 0x000590, "Member 'AINTERACT_PowerStation_C::ActivationCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, PopUpCue) == 0x0005B8, "Member 'AINTERACT_PowerStation_C::PopUpCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, UIChargeCue) == 0x0005E0, "Member 'AINTERACT_PowerStation_C::UIChargeCue' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, InteractFX) == 0x000608, "Member 'AINTERACT_PowerStation_C::InteractFX' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, ActivateAnimMessage) == 0x000630, "Member 'AINTERACT_PowerStation_C::ActivateAnimMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, LightOffAnimMessage) == 0x000640, "Member 'AINTERACT_PowerStation_C::LightOffAnimMessage' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, DischargeMontage) == 0x000650, "Member 'AINTERACT_PowerStation_C::DischargeMontage' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, Rise25Montage) == 0x000678, "Member 'AINTERACT_PowerStation_C::Rise25Montage' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, Rise50Montage) == 0x0006A0, "Member 'AINTERACT_PowerStation_C::Rise50Montage' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, Rise75Montage) == 0x0006C8, "Member 'AINTERACT_PowerStation_C::Rise75Montage' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, Rise100Montage) == 0x0006F0, "Member 'AINTERACT_PowerStation_C::Rise100Montage' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, CompleteGameEvents) == 0x000718, "Member 'AINTERACT_PowerStation_C::CompleteGameEvents' has a wrong offset!");
static_assert(offsetof(AINTERACT_PowerStation_C, TimedTutorial) == 0x000728, "Member 'AINTERACT_PowerStation_C::TimedTutorial' has a wrong offset!");

}


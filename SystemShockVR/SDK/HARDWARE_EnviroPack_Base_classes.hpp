#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HARDWARE_EnviroPack_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ITEM_HardwareBase_classes.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass HARDWARE_EnviroPack_Base.HARDWARE_EnviroPack_Base_C
// 0x0040 (0x02C0 - 0x0280)
class UHARDWARE_EnviroPack_Base_C : public UITEM_HardwareBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_HARDWARE_EnviroPack_Base_C;         // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         HazardProtectionPercentage;                        // 0x0288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OrganicResistPercentage;                           // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAttributeDef>           OrganicResistAttribute;                            // 0x0290(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         EnergyDrainTickRate;                               // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HARDWARE_EnviroPack_Base(int32 EntryPoint);
	void OnHazardProtectionChanged();
	void OnBioDamageModApplied(class UAttribMod* BioDamageMod);
	void UpdateEnviroPackAttribMods(bool State);
	void UpdateAttributeBindings(bool State);
	void GetRadiationProtectionPercent(int32* ProtectPercent);
	void GetBiologicalProtectionPercent(int32* ProtectPercent);
	void GetCurrentProtectionFromDamageType(class UAttribDamageType* DamageType, int32* ProtectPercent);
	void UpdateHardwareState(bool IsEnabled, bool* Result);
	void GetHardwareFeatures(TArray<struct FSTRUCT_HardwareFeature>* Result);
	void OnUpgradedItem(class UITEM_UpgradeBase_C* PreviousItem, bool* Result);
	void EVENT_OnEnergyChanged(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType);
	void EVENT_OnEnergyDepleted();
	void EVENT_OnBioDamageDealt(class UAttribMod* AttribMod);
	void CanActivateHardware(bool* Result);
	void EVENT_OnDamageReceived(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams);
	void OnBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HARDWARE_EnviroPack_Base_C">();
	}
	static class UHARDWARE_EnviroPack_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHARDWARE_EnviroPack_Base_C>();
	}
};
static_assert(alignof(UHARDWARE_EnviroPack_Base_C) == 0x000008, "Wrong alignment on UHARDWARE_EnviroPack_Base_C");
static_assert(sizeof(UHARDWARE_EnviroPack_Base_C) == 0x0002C0, "Wrong size on UHARDWARE_EnviroPack_Base_C");
static_assert(offsetof(UHARDWARE_EnviroPack_Base_C, UberGraphFrame_HARDWARE_EnviroPack_Base_C) == 0x000280, "Member 'UHARDWARE_EnviroPack_Base_C::UberGraphFrame_HARDWARE_EnviroPack_Base_C' has a wrong offset!");
static_assert(offsetof(UHARDWARE_EnviroPack_Base_C, HazardProtectionPercentage) == 0x000288, "Member 'UHARDWARE_EnviroPack_Base_C::HazardProtectionPercentage' has a wrong offset!");
static_assert(offsetof(UHARDWARE_EnviroPack_Base_C, OrganicResistPercentage) == 0x00028C, "Member 'UHARDWARE_EnviroPack_Base_C::OrganicResistPercentage' has a wrong offset!");
static_assert(offsetof(UHARDWARE_EnviroPack_Base_C, OrganicResistAttribute) == 0x000290, "Member 'UHARDWARE_EnviroPack_Base_C::OrganicResistAttribute' has a wrong offset!");
static_assert(offsetof(UHARDWARE_EnviroPack_Base_C, EnergyDrainTickRate) == 0x0002B8, "Member 'UHARDWARE_EnviroPack_Base_C::EnergyDrainTickRate' has a wrong offset!");

}


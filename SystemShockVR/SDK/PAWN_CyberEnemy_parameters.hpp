#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_CyberEnemy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.ExecuteUbergraph_PAWN_CyberEnemy
// 0x0028 (0x0028 - 0x0000)
struct PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_SinglePlayer_C*                     K2Node_DynamicCast_AsGM_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy) == 0x000008, "Wrong alignment on PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy");
static_assert(sizeof(PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy) == 0x000028, "Wrong size on PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy");
static_assert(offsetof(PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy, EntryPoint) == 0x000000, "Member 'PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy::EntryPoint' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000008, "Member 'PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy, K2Node_Event_EndPlayReason) == 0x000009, "Member 'PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy, K2Node_DynamicCast_AsGM_Single_Player) == 0x000018, "Member 'PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy::K2Node_DynamicCast_AsGM_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PAWN_CyberEnemy_C_ExecuteUbergraph_PAWN_CyberEnemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PAWN_CyberEnemy_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_CyberEnemy_C_ReceiveTick) == 0x000004, "Wrong alignment on PAWN_CyberEnemy_C_ReceiveTick");
static_assert(sizeof(PAWN_CyberEnemy_C_ReceiveTick) == 0x000004, "Wrong size on PAWN_CyberEnemy_C_ReceiveTick");
static_assert(offsetof(PAWN_CyberEnemy_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PAWN_CyberEnemy_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.UpdateRotation
// 0x01D0 (0x01D0 - 0x0000)
struct PAWN_CyberEnemy_C_UpdateRotation final
{
public:
	float                                         TargetRotation;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentRotation;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x009C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0134(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyberEnemy_C_UpdateRotation) == 0x000010, "Wrong alignment on PAWN_CyberEnemy_C_UpdateRotation");
static_assert(sizeof(PAWN_CyberEnemy_C_UpdateRotation) == 0x0001D0, "Wrong size on PAWN_CyberEnemy_C_UpdateRotation");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, TargetRotation) == 0x000000, "Member 'PAWN_CyberEnemy_C_UpdateRotation::TargetRotation' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CurrentRotation) == 0x000004, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CurrentRotation' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000014, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_FInterpTo_ReturnValue) == 0x000018, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_GetRelativeTransform_ReturnValue) == 0x000020, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_BreakTransform_Location) == 0x000050, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_BreakTransform_Rotation) == 0x00005C, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_BreakTransform_Scale) == 0x000068, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_BreakRotator_Roll) == 0x000074, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_BreakRotator_Pitch) == 0x000078, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_BreakRotator_Yaw) == 0x00007C, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000080, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000084, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000088, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00008C, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x00009C, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_FInterpTo_ReturnValue_1) == 0x000124, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_MakeRotator_ReturnValue_1) == 0x000128, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000134, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0001BC, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_Abs_ReturnValue) == 0x0001C0, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateRotation, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x0001C4, "Member 'PAWN_CyberEnemy_C_UpdateRotation::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.EVENT_OnFinishedFadingOut
// 0x0008 (0x0008 - 0x0000)
struct PAWN_CyberEnemy_C_EVENT_OnFinishedFadingOut final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyberEnemy_C_EVENT_OnFinishedFadingOut) == 0x000004, "Wrong alignment on PAWN_CyberEnemy_C_EVENT_OnFinishedFadingOut");
static_assert(sizeof(PAWN_CyberEnemy_C_EVENT_OnFinishedFadingOut) == 0x000008, "Wrong size on PAWN_CyberEnemy_C_EVENT_OnFinishedFadingOut");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_OnFinishedFadingOut, Progress) == 0x000000, "Member 'PAWN_CyberEnemy_C_EVENT_OnFinishedFadingOut::Progress' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_OnFinishedFadingOut, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'PAWN_CyberEnemy_C_EVENT_OnFinishedFadingOut::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.SetCustomSpinEnabled
// 0x000C (0x000C - 0x0000)
struct PAWN_CyberEnemy_C_SetCustomSpinEnabled final
{
public:
	bool                                          CustomSpinEnabled;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SpinRate;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyberEnemy_C_SetCustomSpinEnabled) == 0x000004, "Wrong alignment on PAWN_CyberEnemy_C_SetCustomSpinEnabled");
static_assert(sizeof(PAWN_CyberEnemy_C_SetCustomSpinEnabled) == 0x00000C, "Wrong size on PAWN_CyberEnemy_C_SetCustomSpinEnabled");
static_assert(offsetof(PAWN_CyberEnemy_C_SetCustomSpinEnabled, CustomSpinEnabled) == 0x000000, "Member 'PAWN_CyberEnemy_C_SetCustomSpinEnabled::CustomSpinEnabled' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_SetCustomSpinEnabled, SpinRate) == 0x000004, "Member 'PAWN_CyberEnemy_C_SetCustomSpinEnabled::SpinRate' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_SetCustomSpinEnabled, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'PAWN_CyberEnemy_C_SetCustomSpinEnabled::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.EVENT_SetRandomRotation
// 0x0020 (0x0020 - 0x0000)
struct PAWN_CyberEnemy_C_EVENT_SetRandomRotation final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_CyberEnemy_C_EVENT_SetRandomRotation) == 0x000008, "Wrong alignment on PAWN_CyberEnemy_C_EVENT_SetRandomRotation");
static_assert(sizeof(PAWN_CyberEnemy_C_EVENT_SetRandomRotation) == 0x000020, "Wrong size on PAWN_CyberEnemy_C_EVENT_SetRandomRotation");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_SetRandomRotation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'PAWN_CyberEnemy_C_EVENT_SetRandomRotation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_SetRandomRotation, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000004, "Member 'PAWN_CyberEnemy_C_EVENT_SetRandomRotation::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_SetRandomRotation, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'PAWN_CyberEnemy_C_EVENT_SetRandomRotation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_SetRandomRotation, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'PAWN_CyberEnemy_C_EVENT_SetRandomRotation::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.SeekNewSpawnLocation
// 0x0050 (0x0050 - 0x0000)
struct PAWN_CyberEnemy_C_SeekNewSpawnLocation final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bResult, TArray<struct FVector4>& WeightedWorldLocations)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVoxelSpatialNavigationQuery*           CallFunc_CreateSpatialNavigationQuery_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddPathableVoxelsInBox_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExecuteQueryInBackground_ReturnValue;     // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyberEnemy_C_SeekNewSpawnLocation) == 0x000008, "Wrong alignment on PAWN_CyberEnemy_C_SeekNewSpawnLocation");
static_assert(sizeof(PAWN_CyberEnemy_C_SeekNewSpawnLocation) == 0x000050, "Wrong size on PAWN_CyberEnemy_C_SeekNewSpawnLocation");
static_assert(offsetof(PAWN_CyberEnemy_C_SeekNewSpawnLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'PAWN_CyberEnemy_C_SeekNewSpawnLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_SeekNewSpawnLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x00000C, "Member 'PAWN_CyberEnemy_C_SeekNewSpawnLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_SeekNewSpawnLocation, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'PAWN_CyberEnemy_C_SeekNewSpawnLocation::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_SeekNewSpawnLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'PAWN_CyberEnemy_C_SeekNewSpawnLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_SeekNewSpawnLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000034, "Member 'PAWN_CyberEnemy_C_SeekNewSpawnLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_SeekNewSpawnLocation, CallFunc_CreateSpatialNavigationQuery_ReturnValue) == 0x000040, "Member 'PAWN_CyberEnemy_C_SeekNewSpawnLocation::CallFunc_CreateSpatialNavigationQuery_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_SeekNewSpawnLocation, CallFunc_AddPathableVoxelsInBox_ReturnValue) == 0x000048, "Member 'PAWN_CyberEnemy_C_SeekNewSpawnLocation::CallFunc_AddPathableVoxelsInBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_SeekNewSpawnLocation, CallFunc_ExecuteQueryInBackground_ReturnValue) == 0x000049, "Member 'PAWN_CyberEnemy_C_SeekNewSpawnLocation::CallFunc_ExecuteQueryInBackground_ReturnValue' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.EVENT_FoundNewSpawnLocation
// 0x0060 (0x0060 - 0x0000)
struct PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector4>                       WeightedWorldLocations;                            // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector4ToVector_ReturnValue;         // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation) == 0x000010, "Wrong alignment on PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation");
static_assert(sizeof(PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation) == 0x000060, "Wrong size on PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation, bResult) == 0x000000, "Member 'PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation::bResult' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation, WeightedWorldLocations) == 0x000008, "Member 'PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation::WeightedWorldLocations' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000018, "Member 'PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation, CallFunc_Array_Get_Item) == 0x000020, "Member 'PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation, CallFunc_GetActorUpVector_ReturnValue) == 0x000030, "Member 'PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation, CallFunc_Conv_Vector4ToVector_ReturnValue) == 0x00003C, "Member 'PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation::CallFunc_Conv_Vector4ToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation, CallFunc_RotateAngleAxis_ReturnValue) == 0x000048, "Member 'PAWN_CyberEnemy_C_EVENT_FoundNewSpawnLocation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.ApplyIceShields
// 0x00A8 (0x00A8 - 0x0000)
struct PAWN_CyberEnemy_C_ApplyIceShields final
{
public:
	struct FAttribModApplyData                    IceShieldApplyData;                                // 0x0000(0x00A0)(Edit, BlueprintVisible)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_CyberEnemy_C_ApplyIceShields) == 0x000008, "Wrong alignment on PAWN_CyberEnemy_C_ApplyIceShields");
static_assert(sizeof(PAWN_CyberEnemy_C_ApplyIceShields) == 0x0000A8, "Wrong size on PAWN_CyberEnemy_C_ApplyIceShields");
static_assert(offsetof(PAWN_CyberEnemy_C_ApplyIceShields, IceShieldApplyData) == 0x000000, "Member 'PAWN_CyberEnemy_C_ApplyIceShields::IceShieldApplyData' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_ApplyIceShields, CallFunc_ApplyMod_ReturnValue) == 0x0000A0, "Member 'PAWN_CyberEnemy_C_ApplyIceShields::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.UpdateIceShieldMeshes
// 0x0050 (0x0050 - 0x0000)
struct PAWN_CyberEnemy_C_UpdateIceShieldMeshes final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   IceShieldMeshComponent;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionEnabled                             Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             K2Node_Select_Default;                             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetSortedChildComponentsByClassAndPrefix_ReturnValue; // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes) == 0x000008, "Wrong alignment on PAWN_CyberEnemy_C_UpdateIceShieldMeshes");
static_assert(sizeof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes) == 0x000050, "Wrong size on PAWN_CyberEnemy_C_UpdateIceShieldMeshes");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, State) == 0x000000, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::State' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, IceShieldMeshComponent) == 0x000008, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::IceShieldMeshComponent' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, Temp_bool_Variable) == 0x000010, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, Temp_byte_Variable) == 0x000011, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, Temp_byte_Variable_1) == 0x000012, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, Temp_int_Array_Index_Variable) == 0x000014, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, K2Node_Select_Default) == 0x000020, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, CallFunc_GetSortedChildComponentsByClassAndPrefix_ReturnValue) == 0x000028, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::CallFunc_GetSortedChildComponentsByClassAndPrefix_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, CallFunc_Array_Get_Item) == 0x000040, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_UpdateIceShieldMeshes, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'PAWN_CyberEnemy_C_UpdateIceShieldMeshes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.GetIceShieldSize
// 0x0004 (0x0004 - 0x0000)
struct PAWN_CyberEnemy_C_GetIceShieldSize final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_CyberEnemy_C_GetIceShieldSize) == 0x000004, "Wrong alignment on PAWN_CyberEnemy_C_GetIceShieldSize");
static_assert(sizeof(PAWN_CyberEnemy_C_GetIceShieldSize) == 0x000004, "Wrong size on PAWN_CyberEnemy_C_GetIceShieldSize");
static_assert(offsetof(PAWN_CyberEnemy_C_GetIceShieldSize, Result) == 0x000000, "Member 'PAWN_CyberEnemy_C_GetIceShieldSize::Result' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.GetShieldAttachComponent
// 0x0008 (0x0008 - 0x0000)
struct PAWN_CyberEnemy_C_GetShieldAttachComponent final
{
public:
	class USceneComponent*                        Component;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_CyberEnemy_C_GetShieldAttachComponent) == 0x000008, "Wrong alignment on PAWN_CyberEnemy_C_GetShieldAttachComponent");
static_assert(sizeof(PAWN_CyberEnemy_C_GetShieldAttachComponent) == 0x000008, "Wrong size on PAWN_CyberEnemy_C_GetShieldAttachComponent");
static_assert(offsetof(PAWN_CyberEnemy_C_GetShieldAttachComponent, Component) == 0x000000, "Member 'PAWN_CyberEnemy_C_GetShieldAttachComponent::Component' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.EVENT_OnShieldValueChanged
// 0x0020 (0x0020 - 0x0000)
struct PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetIceShieldSize_Result;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged) == 0x000008, "Wrong alignment on PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged");
static_assert(sizeof(PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged) == 0x000020, "Wrong size on PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged, CurrValue) == 0x000000, "Member 'PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged, LastValue) == 0x000004, "Member 'PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged::LastValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged, CallFunc_GetIceShieldSize_Result) == 0x000008, "Member 'PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged::CallFunc_GetIceShieldSize_Result' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000010, "Member 'PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000019, "Member 'PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00001A, "Member 'PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged, CallFunc_BooleanAND_ReturnValue) == 0x00001B, "Member 'PAWN_CyberEnemy_C_EVENT_OnShieldValueChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PAWN_CyberEnemy_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_CyberEnemy_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on PAWN_CyberEnemy_C_ReceiveEndPlay");
static_assert(sizeof(PAWN_CyberEnemy_C_ReceiveEndPlay) == 0x000001, "Wrong size on PAWN_CyberEnemy_C_ReceiveEndPlay");
static_assert(offsetof(PAWN_CyberEnemy_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PAWN_CyberEnemy_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.OnCharacterDied
// 0x0050 (0x0050 - 0x0000)
struct PAWN_CyberEnemy_C_OnCharacterDied final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 OtherActor;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ActorLocation;                                     // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnCharacterDied_Result;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyberEnemy_C_OnCharacterDied) == 0x000008, "Wrong alignment on PAWN_CyberEnemy_C_OnCharacterDied");
static_assert(sizeof(PAWN_CyberEnemy_C_OnCharacterDied) == 0x000050, "Wrong size on PAWN_CyberEnemy_C_OnCharacterDied");
static_assert(offsetof(PAWN_CyberEnemy_C_OnCharacterDied, ImpactData) == 0x000000, "Member 'PAWN_CyberEnemy_C_OnCharacterDied::ImpactData' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_OnCharacterDied, DamageInstance) == 0x000008, "Member 'PAWN_CyberEnemy_C_OnCharacterDied::DamageInstance' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_OnCharacterDied, OtherActor) == 0x000030, "Member 'PAWN_CyberEnemy_C_OnCharacterDied::OtherActor' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_OnCharacterDied, Result) == 0x000038, "Member 'PAWN_CyberEnemy_C_OnCharacterDied::Result' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_OnCharacterDied, ActorLocation) == 0x00003C, "Member 'PAWN_CyberEnemy_C_OnCharacterDied::ActorLocation' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_OnCharacterDied, CallFunc_OnCharacterDied_Result) == 0x000048, "Member 'PAWN_CyberEnemy_C_OnCharacterDied::CallFunc_OnCharacterDied_Result' has a wrong offset!");

// Function PAWN_CyberEnemy.PAWN_CyberEnemy_C.InitializeCharacter
// 0x0048 (0x0048 - 0x0000)
struct PAWN_CyberEnemy_C_InitializeCharacter final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightTransitionManager_C*              CallFunc_GetEnemyLightManager_Result;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightTransitionManager_C*              CallFunc_GetEnemyLightManager_Result_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_SinglePlayer_C*                     K2Node_DynamicCast_AsGM_Single_Player;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeCharacter_Result;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_CyberEnemy_C_InitializeCharacter) == 0x000008, "Wrong alignment on PAWN_CyberEnemy_C_InitializeCharacter");
static_assert(sizeof(PAWN_CyberEnemy_C_InitializeCharacter) == 0x000048, "Wrong size on PAWN_CyberEnemy_C_InitializeCharacter");
static_assert(offsetof(PAWN_CyberEnemy_C_InitializeCharacter, Result) == 0x000000, "Member 'PAWN_CyberEnemy_C_InitializeCharacter::Result' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_InitializeCharacter, CallFunc_GetEnemyLightManager_Result) == 0x000008, "Member 'PAWN_CyberEnemy_C_InitializeCharacter::CallFunc_GetEnemyLightManager_Result' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_InitializeCharacter, CallFunc_GetEnemyLightManager_Result_1) == 0x000010, "Member 'PAWN_CyberEnemy_C_InitializeCharacter::CallFunc_GetEnemyLightManager_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_InitializeCharacter, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PAWN_CyberEnemy_C_InitializeCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_InitializeCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'PAWN_CyberEnemy_C_InitializeCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_InitializeCharacter, CallFunc_GetGameMode_ReturnValue) == 0x000030, "Member 'PAWN_CyberEnemy_C_InitializeCharacter::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_InitializeCharacter, K2Node_DynamicCast_AsGM_Single_Player) == 0x000038, "Member 'PAWN_CyberEnemy_C_InitializeCharacter::K2Node_DynamicCast_AsGM_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_InitializeCharacter, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'PAWN_CyberEnemy_C_InitializeCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_CyberEnemy_C_InitializeCharacter, CallFunc_InitializeCharacter_Result) == 0x000041, "Member 'PAWN_CyberEnemy_C_InitializeCharacter::CallFunc_InitializeCharacter_Result' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MOVECONTROL_Cryobed

#include "Basic.hpp"

#include "STRUCT_MoveControlParams_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MOVECONTROL_Cryobed.MOVECONTROL_Cryobed_C.UpdateMoveControl
// 0x0088 (0x0088 - 0x0000)
struct MOVECONTROL_Cryobed_C_UpdateMoveControl final
{
public:
	struct FVector2D                              MoveInput;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LookInput;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveControlParams              ControlParams;                                     // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 ActionInputValues;                                 // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         MoveInputScale;                                    // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time;                                        // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldExpire;                                      // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMovementMode                                 Temp_byte_Variable;                                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_1;                              // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ClampPointToLozenge2D_ReturnValue;        // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Select_Default;                             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MOVECONTROL_Cryobed_C_UpdateMoveControl) == 0x000008, "Wrong alignment on MOVECONTROL_Cryobed_C_UpdateMoveControl");
static_assert(sizeof(MOVECONTROL_Cryobed_C_UpdateMoveControl) == 0x000088, "Wrong size on MOVECONTROL_Cryobed_C_UpdateMoveControl");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, MoveInput) == 0x000000, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::MoveInput' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, LookInput) == 0x000008, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::LookInput' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, ControlParams) == 0x000010, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::ControlParams' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, ActionInputValues) == 0x000038, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::ActionInputValues' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, MoveInputScale) == 0x000048, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::MoveInputScale' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, Delta_Time) == 0x00004C, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::Delta_Time' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, ShouldExpire) == 0x000050, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::ShouldExpire' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, Temp_bool_Variable) == 0x000051, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, Temp_byte_Variable) == 0x000052, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, Temp_byte_Variable_1) == 0x000053, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, CallFunc_BreakVector2D_X) == 0x000054, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x00005C, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, CallFunc_ClampPointToLozenge2D_ReturnValue) == 0x000064, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::CallFunc_ClampPointToLozenge2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, K2Node_Select_Default) == 0x00006C, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_UpdateMoveControl, CallFunc_MakeVector_ReturnValue) == 0x00007C, "Member 'MOVECONTROL_Cryobed_C_UpdateMoveControl::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function MOVECONTROL_Cryobed.MOVECONTROL_Cryobed_C.InitializeMoveControl
// 0x0050 (0x0050 - 0x0000)
struct MOVECONTROL_Cryobed_C_InitializeMoveControl final
{
public:
	class APAWN_Hacker_Simple_C*                  Player_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveControlParams              InitialControlParams;                              // 0x000C(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeMoveControl_Result;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MOVECONTROL_Cryobed_C_InitializeMoveControl) == 0x000008, "Wrong alignment on MOVECONTROL_Cryobed_C_InitializeMoveControl");
static_assert(sizeof(MOVECONTROL_Cryobed_C_InitializeMoveControl) == 0x000050, "Wrong size on MOVECONTROL_Cryobed_C_InitializeMoveControl");
static_assert(offsetof(MOVECONTROL_Cryobed_C_InitializeMoveControl, Player_0) == 0x000000, "Member 'MOVECONTROL_Cryobed_C_InitializeMoveControl::Player_0' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_InitializeMoveControl, GameTime) == 0x000008, "Member 'MOVECONTROL_Cryobed_C_InitializeMoveControl::GameTime' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_InitializeMoveControl, InitialControlParams) == 0x00000C, "Member 'MOVECONTROL_Cryobed_C_InitializeMoveControl::InitialControlParams' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_InitializeMoveControl, Result) == 0x000034, "Member 'MOVECONTROL_Cryobed_C_InitializeMoveControl::Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_InitializeMoveControl, CallFunc_InitializeMoveControl_Result) == 0x000035, "Member 'MOVECONTROL_Cryobed_C_InitializeMoveControl::CallFunc_InitializeMoveControl_Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_InitializeMoveControl, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'MOVECONTROL_Cryobed_C_InitializeMoveControl::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_InitializeMoveControl, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'MOVECONTROL_Cryobed_C_InitializeMoveControl::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_InitializeMoveControl, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'MOVECONTROL_Cryobed_C_InitializeMoveControl::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_Cryobed_C_InitializeMoveControl, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'MOVECONTROL_Cryobed_C_InitializeMoveControl::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MOVECONTROL_LadderMove

#include "Basic.hpp"

#include "ENUM_LeftRight_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_MoveControlParams_structs.hpp"


namespace SDK::Params
{

// Function MOVECONTROL_LadderMove.MOVECONTROL_LadderMove_C.InitializeMoveControl
// 0x00A0 (0x00A0 - 0x0000)
struct MOVECONTROL_LadderMove_C_InitializeMoveControl final
{
public:
	class APAWN_Hacker_Simple_C*                  Player_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GameTime;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveControlParams              InitialControlParams;                              // 0x000C(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeMoveControl_Result;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0xA];                                       // 0x0036(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MOVECONTROL_LadderMove_C_InitializeMoveControl) == 0x000010, "Wrong alignment on MOVECONTROL_LadderMove_C_InitializeMoveControl");
static_assert(sizeof(MOVECONTROL_LadderMove_C_InitializeMoveControl) == 0x0000A0, "Wrong size on MOVECONTROL_LadderMove_C_InitializeMoveControl");
static_assert(offsetof(MOVECONTROL_LadderMove_C_InitializeMoveControl, Player_0) == 0x000000, "Member 'MOVECONTROL_LadderMove_C_InitializeMoveControl::Player_0' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_InitializeMoveControl, GameTime) == 0x000008, "Member 'MOVECONTROL_LadderMove_C_InitializeMoveControl::GameTime' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_InitializeMoveControl, InitialControlParams) == 0x00000C, "Member 'MOVECONTROL_LadderMove_C_InitializeMoveControl::InitialControlParams' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_InitializeMoveControl, Result) == 0x000034, "Member 'MOVECONTROL_LadderMove_C_InitializeMoveControl::Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_InitializeMoveControl, CallFunc_InitializeMoveControl_Result) == 0x000035, "Member 'MOVECONTROL_LadderMove_C_InitializeMoveControl::CallFunc_InitializeMoveControl_Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_InitializeMoveControl, CallFunc_GetRelativeTransform_ReturnValue) == 0x000040, "Member 'MOVECONTROL_LadderMove_C_InitializeMoveControl::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_InitializeMoveControl, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000070, "Member 'MOVECONTROL_LadderMove_C_InitializeMoveControl::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_InitializeMoveControl, CallFunc_BreakTransform_Location) == 0x00007C, "Member 'MOVECONTROL_LadderMove_C_InitializeMoveControl::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_InitializeMoveControl, CallFunc_BreakTransform_Rotation) == 0x000088, "Member 'MOVECONTROL_LadderMove_C_InitializeMoveControl::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_InitializeMoveControl, CallFunc_BreakTransform_Scale) == 0x000094, "Member 'MOVECONTROL_LadderMove_C_InitializeMoveControl::CallFunc_BreakTransform_Scale' has a wrong offset!");

// Function MOVECONTROL_LadderMove.MOVECONTROL_LadderMove_C.UpdateMoveControl
// 0x0198 (0x0198 - 0x0000)
struct MOVECONTROL_LadderMove_C_UpdateMoveControl final
{
public:
	struct FVector2D                              MoveInput;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LookInput;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveControlParams              ControlParams;                                     // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<float>                                 ActionInputValues;                                 // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         MoveInputScale;                                    // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time;                                        // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldExpire;                                      // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldDismount;                                    // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                WorldLocation;                                     // 0x0054(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OvershootDistance;                                 // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetPlayerHeight;                                // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetRungHeight;                                  // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SourceRungHeight;                                  // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameMovement;                                     // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTimeRemaining;                                // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMountHeightOffset_Result;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClimbSpeed_Result;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetJumpDismountSpeed_Result;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMountHeightOffset_Result_1;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClimbSpeed_Result_1;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClimbSpeed_Result_2;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BeginMoving_ShouldDismount;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BeginMoving_ShouldDismount_1;             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRungLocationFromIndex_Result;          // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRungLocationFromIndex_Result_1;        // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15E[0x2];                                      // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Get_Item;                           // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Array_Get_Item_1;                         // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x017D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x017E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x017F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MOVECONTROL_LadderMove_C_UpdateMoveControl) == 0x000008, "Wrong alignment on MOVECONTROL_LadderMove_C_UpdateMoveControl");
static_assert(sizeof(MOVECONTROL_LadderMove_C_UpdateMoveControl) == 0x000198, "Wrong size on MOVECONTROL_LadderMove_C_UpdateMoveControl");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, MoveInput) == 0x000000, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::MoveInput' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, LookInput) == 0x000008, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::LookInput' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, ControlParams) == 0x000010, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::ControlParams' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, ActionInputValues) == 0x000038, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::ActionInputValues' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, MoveInputScale) == 0x000048, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::MoveInputScale' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, Delta_Time) == 0x00004C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::Delta_Time' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, ShouldExpire) == 0x000050, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::ShouldExpire' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, ShouldDismount) == 0x000051, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::ShouldDismount' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, WorldLocation) == 0x000054, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::WorldLocation' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, OvershootDistance) == 0x000060, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::OvershootDistance' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, TargetPlayerHeight) == 0x000064, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::TargetPlayerHeight' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, TargetRungHeight) == 0x000068, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::TargetRungHeight' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, SourceRungHeight) == 0x00006C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::SourceRungHeight' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, FrameMovement) == 0x000070, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::FrameMovement' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, DeltaTimeRemaining) == 0x000074, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::DeltaTimeRemaining' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_GetMountHeightOffset_Result) == 0x000078, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_GetMountHeightOffset_Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_GetClimbSpeed_Result) == 0x00007C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_GetClimbSpeed_Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000080, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00008C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_GetJumpDismountSpeed_Result) == 0x000098, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_GetJumpDismountSpeed_Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_GetActorForwardVector_ReturnValue) == 0x00009C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A8, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Not_PreBool_ReturnValue) == 0x0000B4, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000B5, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_SignOfFloat_ReturnValue) == 0x0000B8, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000BC, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000C0, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector_X) == 0x0000C4, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector_Y) == 0x0000C8, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector_Z) == 0x0000CC, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000D0, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_MakeVector_ReturnValue) == 0x0000D4, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_GetMountHeightOffset_Result_1) == 0x0000E0, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_GetMountHeightOffset_Result_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector_X_1) == 0x0000E4, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector_Y_1) == 0x0000E8, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector_Z_1) == 0x0000EC, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_GetClimbSpeed_Result_1) == 0x0000F0, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_GetClimbSpeed_Result_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000F4, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000F8, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_GetClimbSpeed_Result_2) == 0x0000FC, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_GetClimbSpeed_Result_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000100, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000104, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BeginMoving_ShouldDismount) == 0x000108, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BeginMoving_ShouldDismount' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BeginMoving_ShouldDismount_1) == 0x000109, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BeginMoving_ShouldDismount_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00010A, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, K2Node_SwitchEnum_CmpSuccess) == 0x00010B, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00010C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000110, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x000114, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000118, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_SignOfFloat_ReturnValue_1) == 0x00011C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000120, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_GetRungLocationFromIndex_Result) == 0x000124, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_GetRungLocationFromIndex_Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_GetRungLocationFromIndex_Result_1) == 0x000130, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_GetRungLocationFromIndex_Result_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector_X_2) == 0x00013C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector_Y_2) == 0x000140, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector_Z_2) == 0x000144, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector_X_3) == 0x000148, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector_Y_3) == 0x00014C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector_Z_3) == 0x000150, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000154, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x000158, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_MakeLiteralByte_ReturnValue) == 0x00015C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00015D, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000160, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Array_Get_Item) == 0x000164, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000168, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BooleanOR_ReturnValue) == 0x000169, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00016A, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x00016B, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00016C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000170, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BooleanOR_ReturnValue_1) == 0x000174, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Array_Get_Item_1) == 0x000178, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00017C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00017D, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BooleanAND_ReturnValue) == 0x00017E, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BooleanAND_ReturnValue_1) == 0x00017F, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector2D_X) == 0x000180, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector2D_Y) == 0x000184, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Less_FloatFloat_ReturnValue) == 0x000188, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector2D_X_1) == 0x00018C, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_BreakVector2D_Y_1) == 0x000190, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_UpdateMoveControl, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000194, "Member 'MOVECONTROL_LadderMove_C_UpdateMoveControl::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function MOVECONTROL_LadderMove.MOVECONTROL_LadderMove_C.BeginMoving
// 0x0010 (0x0010 - 0x0000)
struct MOVECONTROL_LadderMove_C_BeginMoving final
{
public:
	bool                                          ShouldDismount;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MOVECONTROL_LadderMove_C_BeginMoving) == 0x000004, "Wrong alignment on MOVECONTROL_LadderMove_C_BeginMoving");
static_assert(sizeof(MOVECONTROL_LadderMove_C_BeginMoving) == 0x000010, "Wrong size on MOVECONTROL_LadderMove_C_BeginMoving");
static_assert(offsetof(MOVECONTROL_LadderMove_C_BeginMoving, ShouldDismount) == 0x000000, "Member 'MOVECONTROL_LadderMove_C_BeginMoving::ShouldDismount' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_BeginMoving, CallFunc_Less_IntInt_ReturnValue) == 0x000001, "Member 'MOVECONTROL_LadderMove_C_BeginMoving::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_BeginMoving, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'MOVECONTROL_LadderMove_C_BeginMoving::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_BeginMoving, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'MOVECONTROL_LadderMove_C_BeginMoving::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_BeginMoving, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'MOVECONTROL_LadderMove_C_BeginMoving::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_BeginMoving, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000D, "Member 'MOVECONTROL_LadderMove_C_BeginMoving::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function MOVECONTROL_LadderMove.MOVECONTROL_LadderMove_C.SetPlayerMountStatus
// 0x0048 (0x0048 - 0x0000)
struct MOVECONTROL_LadderMove_C_SetPlayerMountStatus final
{
public:
	bool                                          IsMounted;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLadderParams_Result;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker_1;         // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetUseIK_Result;                          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MOVECONTROL_LadderMove_C_SetPlayerMountStatus) == 0x000008, "Wrong alignment on MOVECONTROL_LadderMove_C_SetPlayerMountStatus");
static_assert(sizeof(MOVECONTROL_LadderMove_C_SetPlayerMountStatus) == 0x000048, "Wrong size on MOVECONTROL_LadderMove_C_SetPlayerMountStatus");
static_assert(offsetof(MOVECONTROL_LadderMove_C_SetPlayerMountStatus, IsMounted) == 0x000000, "Member 'MOVECONTROL_LadderMove_C_SetPlayerMountStatus::IsMounted' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_SetPlayerMountStatus, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'MOVECONTROL_LadderMove_C_SetPlayerMountStatus::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_SetPlayerMountStatus, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'MOVECONTROL_LadderMove_C_SetPlayerMountStatus::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_SetPlayerMountStatus, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000010, "Member 'MOVECONTROL_LadderMove_C_SetPlayerMountStatus::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_SetPlayerMountStatus, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'MOVECONTROL_LadderMove_C_SetPlayerMountStatus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_SetPlayerMountStatus, CallFunc_SetLadderParams_Result) == 0x000021, "Member 'MOVECONTROL_LadderMove_C_SetPlayerMountStatus::CallFunc_SetLadderParams_Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_SetPlayerMountStatus, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000028, "Member 'MOVECONTROL_LadderMove_C_SetPlayerMountStatus::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_SetPlayerMountStatus, K2Node_DynamicCast_AsINTERF_ANIM_Hacker_1) == 0x000030, "Member 'MOVECONTROL_LadderMove_C_SetPlayerMountStatus::K2Node_DynamicCast_AsINTERF_ANIM_Hacker_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_SetPlayerMountStatus, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'MOVECONTROL_LadderMove_C_SetPlayerMountStatus::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_SetPlayerMountStatus, CallFunc_SetUseIK_Result) == 0x000041, "Member 'MOVECONTROL_LadderMove_C_SetPlayerMountStatus::CallFunc_SetUseIK_Result' has a wrong offset!");

// Function MOVECONTROL_LadderMove.MOVECONTROL_LadderMove_C.SetForceJumpNextFrame
// 0x0001 (0x0001 - 0x0000)
struct MOVECONTROL_LadderMove_C_SetForceJumpNextFrame final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MOVECONTROL_LadderMove_C_SetForceJumpNextFrame) == 0x000001, "Wrong alignment on MOVECONTROL_LadderMove_C_SetForceJumpNextFrame");
static_assert(sizeof(MOVECONTROL_LadderMove_C_SetForceJumpNextFrame) == 0x000001, "Wrong size on MOVECONTROL_LadderMove_C_SetForceJumpNextFrame");
static_assert(offsetof(MOVECONTROL_LadderMove_C_SetForceJumpNextFrame, Value) == 0x000000, "Member 'MOVECONTROL_LadderMove_C_SetForceJumpNextFrame::Value' has a wrong offset!");

// Function MOVECONTROL_LadderMove.MOVECONTROL_LadderMove_C.PlayerLadderStepMontage
// 0x0060 (0x0060 - 0x0000)
struct MOVECONTROL_LadderMove_C_PlayerLadderStepMontage final
{
public:
	class UAnimSequenceBase*                      NewIdle;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           ActionMontage;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_LeftRight                                Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRungTraversalTime_Result;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_LeftRight                                Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_LeftRight                                Temp_byte_Variable_2;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_LeftRight                                K2Node_Select_Default;                             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetLadderParams_Result;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage) == 0x000008, "Wrong alignment on MOVECONTROL_LadderMove_C_PlayerLadderStepMontage");
static_assert(sizeof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage) == 0x000060, "Wrong size on MOVECONTROL_LadderMove_C_PlayerLadderStepMontage");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, NewIdle) == 0x000000, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::NewIdle' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, ActionMontage) == 0x000008, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::ActionMontage' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, Temp_byte_Variable) == 0x000010, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, CallFunc_GetRungTraversalTime_Result) == 0x000014, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::CallFunc_GetRungTraversalTime_Result' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000020, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, CallFunc_Montage_Play_ReturnValue) == 0x000034, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, Temp_byte_Variable_1) == 0x000038, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, Temp_byte_Variable_2) == 0x000039, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, K2Node_Select_Default) == 0x00003A, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, K2Node_SwitchEnum_CmpSuccess_1) == 0x00003B, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, K2Node_SwitchEnum_CmpSuccess_2) == 0x00003C, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000040, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000048, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MOVECONTROL_LadderMove_C_PlayerLadderStepMontage, CallFunc_SetLadderParams_Result) == 0x000059, "Member 'MOVECONTROL_LadderMove_C_PlayerLadderStepMontage::CallFunc_SetLadderParams_Result' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_ForceDoor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "INTERACT_Base_classes.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_ForceDoor.INTERACT_ForceDoor_C
// 0x00A0 (0x03A8 - 0x0308)
class AINTERACT_ForceDoor_C final : public AINTERACT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_ForceDoor_C;               // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_VoxelAudio_C*                     IdleAudio;                                         // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelOccluder_C*                  COMP_VoxelOccluder;                                // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_ScannableObject_C*                COMP_ScannableObject;                              // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          SafetySensor;                                      // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CollisionBox;                                      // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ForceFieldMesh;                                    // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              ForceDoorSize;                                     // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartActive;                                       // 0x0350(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsActive;                                          // 0x0351(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          IsLocked;                                          // 0x0352(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_353[0x5];                                      // 0x0353(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BlockedText;                                       // 0x0358(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HasStarted;                                        // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LockedText;                                        // 0x0378(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          WantsToBeVisible;                                  // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RequiresSecurityLevel;                             // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_392[0x2];                                      // 0x0392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequiredSecurityLevel;                             // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    SynchronizeWithQuest;                              // 0x0398(0x0010)(Edit, BlueprintVisible, NoDestructor)

public:
	void ExecuteUbergraph_INTERACT_ForceDoor(int32 EntryPoint);
	void BndEvt__INTERACT_ForceDoor_COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void InitializeForceDoor();
	void InitializeStartingForceDoorState();
	void InitializeForceLockState();
	void UpdateMeshParameters();
	void UpdateOverlappingForceFrames();
	void UpdateForceDoorVisibility(bool VisibilityState);
	void SetForceDoorState(bool Active);
	void CanInteractionChangeActiveState(ENUM_InteractionType InteractionType, bool* Result);
	void EVENT_OnQuestStateChanged(class FName StoryQuestName, bool Value);
	void EVENT_OnSecurityLevelChanged(int32 NewSecurityLevel);
	void TrySynchronizeWithQuest();
	void TryBindSecurityLevelChangedEvent(bool RequiresLocked, bool* Result);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void IsInteractActivated(bool* Result);
	void GetInteractLocked(class AActor* SourceActor, bool* Result, class FText* LockMessage);
	void GetInteractBusy(bool* Result, class FText* BusyMessage);
	void SetInteractLocked(bool Locked, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_ForceDoor_C">();
	}
	static class AINTERACT_ForceDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_ForceDoor_C>();
	}
};
static_assert(alignof(AINTERACT_ForceDoor_C) == 0x000008, "Wrong alignment on AINTERACT_ForceDoor_C");
static_assert(sizeof(AINTERACT_ForceDoor_C) == 0x0003A8, "Wrong size on AINTERACT_ForceDoor_C");
static_assert(offsetof(AINTERACT_ForceDoor_C, UberGraphFrame_INTERACT_ForceDoor_C) == 0x000308, "Member 'AINTERACT_ForceDoor_C::UberGraphFrame_INTERACT_ForceDoor_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, IdleAudio) == 0x000310, "Member 'AINTERACT_ForceDoor_C::IdleAudio' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, COMP_VoxelOccluder) == 0x000318, "Member 'AINTERACT_ForceDoor_C::COMP_VoxelOccluder' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, PointLight) == 0x000320, "Member 'AINTERACT_ForceDoor_C::PointLight' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, COMP_ScannableObject) == 0x000328, "Member 'AINTERACT_ForceDoor_C::COMP_ScannableObject' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, SafetySensor) == 0x000330, "Member 'AINTERACT_ForceDoor_C::SafetySensor' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, CollisionBox) == 0x000338, "Member 'AINTERACT_ForceDoor_C::CollisionBox' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, ForceFieldMesh) == 0x000340, "Member 'AINTERACT_ForceDoor_C::ForceFieldMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, ForceDoorSize) == 0x000348, "Member 'AINTERACT_ForceDoor_C::ForceDoorSize' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, StartActive) == 0x000350, "Member 'AINTERACT_ForceDoor_C::StartActive' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, IsActive) == 0x000351, "Member 'AINTERACT_ForceDoor_C::IsActive' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, IsLocked) == 0x000352, "Member 'AINTERACT_ForceDoor_C::IsLocked' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, BlockedText) == 0x000358, "Member 'AINTERACT_ForceDoor_C::BlockedText' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, HasStarted) == 0x000370, "Member 'AINTERACT_ForceDoor_C::HasStarted' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, LockedText) == 0x000378, "Member 'AINTERACT_ForceDoor_C::LockedText' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, WantsToBeVisible) == 0x000390, "Member 'AINTERACT_ForceDoor_C::WantsToBeVisible' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, RequiresSecurityLevel) == 0x000391, "Member 'AINTERACT_ForceDoor_C::RequiresSecurityLevel' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, RequiredSecurityLevel) == 0x000394, "Member 'AINTERACT_ForceDoor_C::RequiredSecurityLevel' has a wrong offset!");
static_assert(offsetof(AINTERACT_ForceDoor_C, SynchronizeWithQuest) == 0x000398, "Member 'AINTERACT_ForceDoor_C::SynchronizeWithQuest' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_ForceDoor

#include "Basic.hpp"

#include "ENUM_InteractionType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.ExecuteUbergraph_INTERACT_ForceDoor
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_ForceDoor_C_ExecuteUbergraph_INTERACT_ForceDoor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_ExecuteUbergraph_INTERACT_ForceDoor) == 0x000004, "Wrong alignment on INTERACT_ForceDoor_C_ExecuteUbergraph_INTERACT_ForceDoor");
static_assert(sizeof(INTERACT_ForceDoor_C_ExecuteUbergraph_INTERACT_ForceDoor) == 0x000008, "Wrong size on INTERACT_ForceDoor_C_ExecuteUbergraph_INTERACT_ForceDoor");
static_assert(offsetof(INTERACT_ForceDoor_C_ExecuteUbergraph_INTERACT_ForceDoor, EntryPoint) == 0x000000, "Member 'INTERACT_ForceDoor_C_ExecuteUbergraph_INTERACT_ForceDoor::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_ExecuteUbergraph_INTERACT_ForceDoor, K2Node_ComponentBoundEvent_bVisibleState) == 0x000004, "Member 'INTERACT_ForceDoor_C_ExecuteUbergraph_INTERACT_ForceDoor::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.BndEvt__INTERACT_ForceDoor_COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ForceDoor_C_BndEvt__INTERACT_ForceDoor_COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_BndEvt__INTERACT_ForceDoor_COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_ForceDoor_C_BndEvt__INTERACT_ForceDoor_COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_ForceDoor_C_BndEvt__INTERACT_ForceDoor_COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_ForceDoor_C_BndEvt__INTERACT_ForceDoor_COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_ForceDoor_C_BndEvt__INTERACT_ForceDoor_COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_ForceDoor_C_BndEvt__INTERACT_ForceDoor_COMP_VoxelOccluder_K2Node_ComponentBoundEvent_1_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.InitializeForceDoor
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ForceDoor_C_InitializeForceDoor final
{
public:
	bool                                          CallFunc_TryBindSecurityLevelChangedEvent_Result;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_InitializeForceDoor) == 0x000001, "Wrong alignment on INTERACT_ForceDoor_C_InitializeForceDoor");
static_assert(sizeof(INTERACT_ForceDoor_C_InitializeForceDoor) == 0x000001, "Wrong size on INTERACT_ForceDoor_C_InitializeForceDoor");
static_assert(offsetof(INTERACT_ForceDoor_C_InitializeForceDoor, CallFunc_TryBindSecurityLevelChangedEvent_Result) == 0x000000, "Member 'INTERACT_ForceDoor_C_InitializeForceDoor::CallFunc_TryBindSecurityLevelChangedEvent_Result' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.InitializeForceLockState
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ForceDoor_C_InitializeForceLockState final
{
public:
	bool                                          CallFunc_TryBindSecurityLevelChangedEvent_Result;  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_InitializeForceLockState) == 0x000001, "Wrong alignment on INTERACT_ForceDoor_C_InitializeForceLockState");
static_assert(sizeof(INTERACT_ForceDoor_C_InitializeForceLockState) == 0x000001, "Wrong size on INTERACT_ForceDoor_C_InitializeForceLockState");
static_assert(offsetof(INTERACT_ForceDoor_C_InitializeForceLockState, CallFunc_TryBindSecurityLevelChangedEvent_Result) == 0x000000, "Member 'INTERACT_ForceDoor_C_InitializeForceLockState::CallFunc_TryBindSecurityLevelChangedEvent_Result' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.UpdateMeshParameters
// 0x0054 (0x0054 - 0x0000)
struct INTERACT_ForceDoor_C_UpdateMeshParameters final
{
public:
	struct FVector2D                              MeshScale2D;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ForceDoor_C_UpdateMeshParameters) == 0x000004, "Wrong alignment on INTERACT_ForceDoor_C_UpdateMeshParameters");
static_assert(sizeof(INTERACT_ForceDoor_C_UpdateMeshParameters) == 0x000054, "Wrong size on INTERACT_ForceDoor_C_UpdateMeshParameters");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, MeshScale2D) == 0x000000, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::MeshScale2D' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, CallFunc_Min_ReturnValue) == 0x000008, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, CallFunc_BreakVector2D_X) == 0x000014, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, CallFunc_BreakVector2D_Y) == 0x000018, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000028, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, CallFunc_MakeVector2D_ReturnValue) == 0x000034, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00003C, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000040, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, CallFunc_MakeVector2D_ReturnValue_1) == 0x000044, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateMeshParameters, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x00004C, "Member 'INTERACT_ForceDoor_C_UpdateMeshParameters::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.UpdateOverlappingForceFrames
// 0x00A0 (0x00A0 - 0x0000)
struct INTERACT_ForceDoor_C_UpdateOverlappingForceFrames final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	TArray<class AActor*>                         CallFunc_ComponentOverlapActors_OutActors;         // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComponentOverlapActors_ReturnValue;       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ForceFrame_Base_C*                  K2Node_DynamicCast_AsBP_Force_Frame_Base;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames) == 0x000010, "Wrong alignment on INTERACT_ForceDoor_C_UpdateOverlappingForceFrames");
static_assert(sizeof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames) == 0x0000A0, "Wrong size on INTERACT_ForceDoor_C_UpdateOverlappingForceFrames");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, Temp_int_Array_Index_Variable) == 0x000000, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, Temp_object_Variable) == 0x000010, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, K2Node_MakeArray_Array) == 0x000020, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, CallFunc_ComponentOverlapActors_OutActors) == 0x000060, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::CallFunc_ComponentOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, CallFunc_ComponentOverlapActors_ReturnValue) == 0x000070, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::CallFunc_ComponentOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, CallFunc_Array_Get_Item) == 0x000078, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, K2Node_DynamicCast_AsBP_Force_Frame_Base) == 0x000088, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::K2Node_DynamicCast_AsBP_Force_Frame_Base' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateOverlappingForceFrames, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'INTERACT_ForceDoor_C_UpdateOverlappingForceFrames::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.UpdateForceDoorVisibility
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_ForceDoor_C_UpdateForceDoorVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_UpdateForceDoorVisibility) == 0x000001, "Wrong alignment on INTERACT_ForceDoor_C_UpdateForceDoorVisibility");
static_assert(sizeof(INTERACT_ForceDoor_C_UpdateForceDoorVisibility) == 0x000002, "Wrong size on INTERACT_ForceDoor_C_UpdateForceDoorVisibility");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateForceDoorVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_ForceDoor_C_UpdateForceDoorVisibility::VisibilityState' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_UpdateForceDoorVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'INTERACT_ForceDoor_C_UpdateForceDoorVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.SetForceDoorState
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ForceDoor_C_SetForceDoorState final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_SetForceDoorState) == 0x000001, "Wrong alignment on INTERACT_ForceDoor_C_SetForceDoorState");
static_assert(sizeof(INTERACT_ForceDoor_C_SetForceDoorState) == 0x000001, "Wrong size on INTERACT_ForceDoor_C_SetForceDoorState");
static_assert(offsetof(INTERACT_ForceDoor_C_SetForceDoorState, Active) == 0x000000, "Member 'INTERACT_ForceDoor_C_SetForceDoorState::Active' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.CanInteractionChangeActiveState
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_ForceDoor_C_CanInteractionChangeActiveState final
{
public:
	ENUM_InteractionType                          InteractionType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_CanInteractionChangeActiveState) == 0x000001, "Wrong alignment on INTERACT_ForceDoor_C_CanInteractionChangeActiveState");
static_assert(sizeof(INTERACT_ForceDoor_C_CanInteractionChangeActiveState) == 0x000004, "Wrong size on INTERACT_ForceDoor_C_CanInteractionChangeActiveState");
static_assert(offsetof(INTERACT_ForceDoor_C_CanInteractionChangeActiveState, InteractionType) == 0x000000, "Member 'INTERACT_ForceDoor_C_CanInteractionChangeActiveState::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_CanInteractionChangeActiveState, Result) == 0x000001, "Member 'INTERACT_ForceDoor_C_CanInteractionChangeActiveState::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_CanInteractionChangeActiveState, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'INTERACT_ForceDoor_C_CanInteractionChangeActiveState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_CanInteractionChangeActiveState, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'INTERACT_ForceDoor_C_CanInteractionChangeActiveState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.EVENT_OnQuestStateChanged
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged final
{
public:
	class FName                                   StoryQuestName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DesiredActiveState;                                // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged) == 0x000004, "Wrong alignment on INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged");
static_assert(sizeof(INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged) == 0x000010, "Wrong size on INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged, StoryQuestName) == 0x000000, "Member 'INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged::StoryQuestName' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged, Value) == 0x000008, "Member 'INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged::Value' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged, DesiredActiveState) == 0x000009, "Member 'INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged::DesiredActiveState' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000B, "Member 'INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000C, "Member 'INTERACT_ForceDoor_C_EVENT_OnQuestStateChanged::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.EVENT_OnSecurityLevelChanged
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged final
{
public:
	int32                                         NewSecurityLevel;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInteractLocked_Result;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 NewSecurityLevel)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged) == 0x000008, "Wrong alignment on INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged");
static_assert(sizeof(INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged) == 0x000030, "Wrong size on INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged, NewSecurityLevel) == 0x000000, "Member 'INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged::NewSecurityLevel' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged, CallFunc_SetInteractLocked_Result) == 0x000004, "Member 'INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged::CallFunc_SetInteractLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'INTERACT_ForceDoor_C_EVENT_OnSecurityLevelChanged::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.TrySynchronizeWithQuest
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_ForceDoor_C_TrySynchronizeWithQuest final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName StoryQuestName, bool Value)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_TrySynchronizeWithQuest) == 0x000008, "Wrong alignment on INTERACT_ForceDoor_C_TrySynchronizeWithQuest");
static_assert(sizeof(INTERACT_ForceDoor_C_TrySynchronizeWithQuest) == 0x000038, "Wrong size on INTERACT_ForceDoor_C_TrySynchronizeWithQuest");
static_assert(offsetof(INTERACT_ForceDoor_C_TrySynchronizeWithQuest, GameInstance) == 0x000000, "Member 'INTERACT_ForceDoor_C_TrySynchronizeWithQuest::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TrySynchronizeWithQuest, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'INTERACT_ForceDoor_C_TrySynchronizeWithQuest::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TrySynchronizeWithQuest, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'INTERACT_ForceDoor_C_TrySynchronizeWithQuest::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TrySynchronizeWithQuest, CallFunc_HasCompletedStoryQuest_Completed) == 0x000020, "Member 'INTERACT_ForceDoor_C_TrySynchronizeWithQuest::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TrySynchronizeWithQuest, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'INTERACT_ForceDoor_C_TrySynchronizeWithQuest::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TrySynchronizeWithQuest, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_ForceDoor_C_TrySynchronizeWithQuest::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TrySynchronizeWithQuest, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'INTERACT_ForceDoor_C_TrySynchronizeWithQuest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TrySynchronizeWithQuest, CallFunc_NotEqual_NameName_ReturnValue) == 0x000032, "Member 'INTERACT_ForceDoor_C_TrySynchronizeWithQuest::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.TryBindSecurityLevelChangedEvent
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent final
{
public:
	bool                                          RequiresLocked;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSecurityForCurrentLevel_Result;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 NewSecurityLevel)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent) == 0x000008, "Wrong alignment on INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent");
static_assert(sizeof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent) == 0x000050, "Wrong size on INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent");
static_assert(offsetof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent, RequiresLocked) == 0x000000, "Member 'INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent::RequiresLocked' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent, Result) == 0x000001, "Member 'INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent, GameInstance) == 0x000008, "Member 'INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent, CallFunc_GetSecurityForCurrentLevel_Result) == 0x000014, "Member 'INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent::CallFunc_GetSecurityForCurrentLevel_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'INTERACT_ForceDoor_C_TryBindSecurityLevelChangedEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.TryInteract
// 0x0100 (0x0100 - 0x0000)
struct INTERACT_ForceDoor_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0038(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_CanInteractionChangeActiveState_Result;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInteractLocked_Result;                 // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInteractLocked_LockMessage;            // 0x0060(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0078(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x0098(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInteractBusy_Result;                   // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInteractBusy_BusyMessage;              // 0x00C0(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x00D8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_ForceDoor_C_TryInteract");
static_assert(sizeof(INTERACT_ForceDoor_C_TryInteract) == 0x000100, "Wrong size on INTERACT_ForceDoor_C_TryInteract");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_ForceDoor_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_ForceDoor_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_ForceDoor_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_ForceDoor_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000038, "Member 'INTERACT_ForceDoor_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, CallFunc_CanInteractionChangeActiveState_Result) == 0x000058, "Member 'INTERACT_ForceDoor_C_TryInteract::CallFunc_CanInteractionChangeActiveState_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, CallFunc_GetInteractLocked_Result) == 0x000059, "Member 'INTERACT_ForceDoor_C_TryInteract::CallFunc_GetInteractLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, CallFunc_GetInteractLocked_LockMessage) == 0x000060, "Member 'INTERACT_ForceDoor_C_TryInteract::CallFunc_GetInteractLocked_LockMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000078, "Member 'INTERACT_ForceDoor_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x000098, "Member 'INTERACT_ForceDoor_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'INTERACT_ForceDoor_C_TryInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, CallFunc_GetInteractBusy_Result) == 0x0000B9, "Member 'INTERACT_ForceDoor_C_TryInteract::CallFunc_GetInteractBusy_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, CallFunc_GetInteractBusy_BusyMessage) == 0x0000C0, "Member 'INTERACT_ForceDoor_C_TryInteract::CallFunc_GetInteractBusy_BusyMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x0000D8, "Member 'INTERACT_ForceDoor_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000F8, "Member 'INTERACT_ForceDoor_C_TryInteract::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_TryInteract, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000F9, "Member 'INTERACT_ForceDoor_C_TryInteract::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.IsInteractActivated
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ForceDoor_C_IsInteractActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_IsInteractActivated) == 0x000001, "Wrong alignment on INTERACT_ForceDoor_C_IsInteractActivated");
static_assert(sizeof(INTERACT_ForceDoor_C_IsInteractActivated) == 0x000001, "Wrong size on INTERACT_ForceDoor_C_IsInteractActivated");
static_assert(offsetof(INTERACT_ForceDoor_C_IsInteractActivated, Result) == 0x000000, "Member 'INTERACT_ForceDoor_C_IsInteractActivated::Result' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.GetInteractLocked
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_ForceDoor_C_GetInteractLocked final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LockMessage;                                       // 0x0010(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSecurityLockText_Result;               // 0x0030(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0018)()
};
static_assert(alignof(INTERACT_ForceDoor_C_GetInteractLocked) == 0x000008, "Wrong alignment on INTERACT_ForceDoor_C_GetInteractLocked");
static_assert(sizeof(INTERACT_ForceDoor_C_GetInteractLocked) == 0x000060, "Wrong size on INTERACT_ForceDoor_C_GetInteractLocked");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractLocked, SourceActor) == 0x000000, "Member 'INTERACT_ForceDoor_C_GetInteractLocked::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractLocked, Result) == 0x000008, "Member 'INTERACT_ForceDoor_C_GetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractLocked, LockMessage) == 0x000010, "Member 'INTERACT_ForceDoor_C_GetInteractLocked::LockMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractLocked, Temp_bool_Variable) == 0x000028, "Member 'INTERACT_ForceDoor_C_GetInteractLocked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractLocked, CallFunc_GetSecurityLockText_Result) == 0x000030, "Member 'INTERACT_ForceDoor_C_GetInteractLocked::CallFunc_GetSecurityLockText_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractLocked, K2Node_Select_Default) == 0x000048, "Member 'INTERACT_ForceDoor_C_GetInteractLocked::K2Node_Select_Default' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.GetInteractBusy
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_ForceDoor_C_GetInteractBusy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BusyMessage;                                       // 0x0008(0x0018)(Parm, OutParm)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_GetInteractBusy) == 0x000008, "Wrong alignment on INTERACT_ForceDoor_C_GetInteractBusy");
static_assert(sizeof(INTERACT_ForceDoor_C_GetInteractBusy) == 0x000038, "Wrong size on INTERACT_ForceDoor_C_GetInteractBusy");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractBusy, Result) == 0x000000, "Member 'INTERACT_ForceDoor_C_GetInteractBusy::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractBusy, BusyMessage) == 0x000008, "Member 'INTERACT_ForceDoor_C_GetInteractBusy::BusyMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractBusy, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000020, "Member 'INTERACT_ForceDoor_C_GetInteractBusy::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractBusy, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'INTERACT_ForceDoor_C_GetInteractBusy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractBusy, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'INTERACT_ForceDoor_C_GetInteractBusy::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractBusy, CallFunc_Greater_IntInt_ReturnValue) == 0x000035, "Member 'INTERACT_ForceDoor_C_GetInteractBusy::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_GetInteractBusy, CallFunc_BooleanAND_ReturnValue) == 0x000036, "Member 'INTERACT_ForceDoor_C_GetInteractBusy::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function INTERACT_ForceDoor.INTERACT_ForceDoor_C.SetInteractLocked
// 0x0006 (0x0006 - 0x0000)
struct INTERACT_ForceDoor_C_SetInteractLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ForceDoor_C_SetInteractLocked) == 0x000001, "Wrong alignment on INTERACT_ForceDoor_C_SetInteractLocked");
static_assert(sizeof(INTERACT_ForceDoor_C_SetInteractLocked) == 0x000006, "Wrong size on INTERACT_ForceDoor_C_SetInteractLocked");
static_assert(offsetof(INTERACT_ForceDoor_C_SetInteractLocked, Locked) == 0x000000, "Member 'INTERACT_ForceDoor_C_SetInteractLocked::Locked' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_SetInteractLocked, Result) == 0x000001, "Member 'INTERACT_ForceDoor_C_SetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_SetInteractLocked, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'INTERACT_ForceDoor_C_SetInteractLocked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_SetInteractLocked, CallFunc_Not_PreBool_ReturnValue_1) == 0x000003, "Member 'INTERACT_ForceDoor_C_SetInteractLocked::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_SetInteractLocked, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'INTERACT_ForceDoor_C_SetInteractLocked::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ForceDoor_C_SetInteractLocked, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000005, "Member 'INTERACT_ForceDoor_C_SetInteractLocked::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_EnergyWeapon_Base

#include "Basic.hpp"

#include "ITEM_EnergyWeapon_Base_classes.hpp"
#include "ITEM_EnergyWeapon_Base_parameters.hpp"


namespace SDK
{

// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.ExecuteUbergraph_ITEM_EnergyWeapon_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_EnergyWeapon_Base_C::ExecuteUbergraph_ITEM_EnergyWeapon_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "ExecuteUbergraph_ITEM_EnergyWeapon_Base");

	Params::ITEM_EnergyWeapon_Base_C_ExecuteUbergraph_ITEM_EnergyWeapon_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.StreamWeaponMontages
// (BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::StreamWeaponMontages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "StreamWeaponMontages");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.OnLoaded_7C46D5834BE1E67FCA70F5A801834542
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_EnergyWeapon_Base_C::OnLoaded_7C46D5834BE1E67FCA70F5A801834542(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "OnLoaded_7C46D5834BE1E67FCA70F5A801834542");

	Params::ITEM_EnergyWeapon_Base_C_OnLoaded_7C46D5834BE1E67FCA70F5A801834542 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.HasEnoughEnergyToActivate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_EnergyWeapon_Base_C::HasEnoughEnergyToActivate(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "HasEnoughEnergyToActivate");

	Params::ITEM_EnergyWeapon_Base_C_HasEnoughEnergyToActivate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.GetOwnerEnergy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CurrentEnergy                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MaxEnergy                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_EnergyWeapon_Base_C::GetOwnerEnergy(int32* CurrentEnergy, int32* MaxEnergy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "GetOwnerEnergy");

	Params::ITEM_EnergyWeapon_Base_C_GetOwnerEnergy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentEnergy != nullptr)
		*CurrentEnergy = Parms.CurrentEnergy;

	if (MaxEnergy != nullptr)
		*MaxEnergy = Parms.MaxEnergy;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.GetDischargeMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_EnergyWeapon_Base_C::GetDischargeMontage(class UAnimMontage** Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "GetDischargeMontage");

	Params::ITEM_EnergyWeapon_Base_C_GetDischargeMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Montage != nullptr)
		*Montage = Parms.Montage;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.InitializeEnergyWeaponState
// (Public, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::InitializeEnergyWeaponState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "InitializeEnergyWeaponState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.TryActivateWithPriority
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_ActionPriority                     Priority                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   QueueTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_EnergyWeapon_Base_C::TryActivateWithPriority(ENUM_ActionPriority Priority, float QueueTime, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "TryActivateWithPriority");

	Params::ITEM_EnergyWeapon_Base_C_TryActivateWithPriority Parms{};

	Parms.Priority = Priority;
	Parms.QueueTime = QueueTime;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.ConsumeEnergyForCurrentMode
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::ConsumeEnergyForCurrentMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "ConsumeEnergyForCurrentMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.ConsumeEnergy
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   EnergyValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_EnergyWeapon_Base_C::ConsumeEnergy(int32 EnergyValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "ConsumeEnergy");

	Params::ITEM_EnergyWeapon_Base_C_ConsumeEnergy Parms{};

	Parms.EnergyValue = EnergyValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.UpdateHeat
// (Public, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::UpdateHeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "UpdateHeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.IsOverheated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_EnergyWeapon_Base_C::IsOverheated(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "IsOverheated");

	Params::ITEM_EnergyWeapon_Base_C_IsOverheated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.GetHeat
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   HeatPercentage                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_EnergyWeapon_Base_C::GetHeat(float* HeatPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "GetHeat");

	Params::ITEM_EnergyWeapon_Base_C_GetHeat Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HeatPercentage != nullptr)
		*HeatPercentage = Parms.HeatPercentage;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.AddHeat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   HeatPercentage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_EnergyWeapon_Base_C::AddHeat(float HeatPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "AddHeat");

	Params::ITEM_EnergyWeapon_Base_C_AddHeat Parms{};

	Parms.HeatPercentage = HeatPercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.ResetHeat
// (Public, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::ResetHeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "ResetHeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.TryStartHeatTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::TryStartHeatTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "TryStartHeatTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.TryStopHeatTimer
// (Public, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::TryStopHeatTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "TryStopHeatTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.OnUpdateHeat
// (Public, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::OnUpdateHeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "OnUpdateHeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.UpdateVisualHeatState
// (Protected, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::UpdateVisualHeatState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "UpdateVisualHeatState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.UpdateVisualOverheatedState
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_EnergyWeapon_Base_C::UpdateVisualOverheatedState(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "UpdateVisualOverheatedState");

	Params::ITEM_EnergyWeapon_Base_C_UpdateVisualOverheatedState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.UpdateVisualModeState
// (Protected, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::UpdateVisualModeState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "UpdateVisualModeState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.OnBecameOverheated
// (Public, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::OnBecameOverheated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "OnBecameOverheated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.OnFinishedOverheating
// (Public, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::OnFinishedOverheating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "OnFinishedOverheating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.OnDischargeMontageStarted
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::OnDischargeMontageStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "OnDischargeMontageStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.EVENT_OnAllowRefire
// (Private, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::EVENT_OnAllowRefire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "EVENT_OnAllowRefire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.EVENT_OnDischargeStarted
// (Private, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::EVENT_OnDischargeStarted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "EVENT_OnDischargeStarted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.GetLastHeatPercentage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_EnergyWeapon_Base_C::GetLastHeatPercentage(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "GetLastHeatPercentage");

	Params::ITEM_EnergyWeapon_Base_C_GetLastHeatPercentage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.GetCoolingRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UITEM_EnergyWeapon_Base_C::GetCoolingRate(int32* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "GetCoolingRate");

	Params::ITEM_EnergyWeapon_Base_C_GetCoolingRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.EVENT_OnAllowAutomaticRefire
// (Private, BlueprintCallable, BlueprintEvent)

void UITEM_EnergyWeapon_Base_C::EVENT_OnAllowAutomaticRefire()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "EVENT_OnAllowAutomaticRefire");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.ShouldReloadWithBattery
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_EnergyWeapon_Base_C::ShouldReloadWithBattery(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "ShouldReloadWithBattery");

	Params::ITEM_EnergyWeapon_Base_C_ShouldReloadWithBattery Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.OnWeaponBecameActivatable
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShowImmediately                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_EnergyWeapon_Base_C::OnWeaponBecameActivatable(class APAWN_SystemShockCharacter_C* Character, bool ShowImmediately)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "OnWeaponBecameActivatable");

	Params::ITEM_EnergyWeapon_Base_C_OnWeaponBecameActivatable Parms{};

	Parms.Character = Character;
	Parms.ShowImmediately = ShowImmediately;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.GetWeaponModeDisplayName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   ModeIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShortName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Result                                                 (Parm, OutParm)

void UITEM_EnergyWeapon_Base_C::GetWeaponModeDisplayName(int32 ModeIndex, bool ShortName, class FText* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "GetWeaponModeDisplayName");

	Params::ITEM_EnergyWeapon_Base_C_GetWeaponModeDisplayName Parms{};

	Parms.ModeIndex = ModeIndex;
	Parms.ShortName = ShortName;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.SetCurrentMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_EnergyWeapon_Base_C::SetCurrentMode(int32 Mode, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "SetCurrentMode");

	Params::ITEM_EnergyWeapon_Base_C_SetCurrentMode Parms{};

	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.TryBeginReloading
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_EnergyWeapon_Base_C::TryBeginReloading(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "TryBeginReloading");

	Params::ITEM_EnergyWeapon_Base_C_TryBeginReloading Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.OnBecomeUnactivatable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_EnergyWeapon_Base_C::OnBecomeUnactivatable(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "OnBecomeUnactivatable");

	Params::ITEM_EnergyWeapon_Base_C_OnBecomeUnactivatable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.Activate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APAWN_SystemShockCharacter_C*     Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_EnergyWeapon_Base_C::Activate(class APAWN_SystemShockCharacter_C* Character, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "Activate");

	Params::ITEM_EnergyWeapon_Base_C_Activate Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function ITEM_EnergyWeapon_Base.ITEM_EnergyWeapon_Base_C.Deactivate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UITEM_EnergyWeapon_Base_C::Deactivate(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ITEM_EnergyWeapon_Base_C", "Deactivate");

	Params::ITEM_EnergyWeapon_Base_C_Deactivate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


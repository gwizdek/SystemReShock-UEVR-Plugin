#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_CyberspaceTerminal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "INTERACT_Channeling_Base_classes.hpp"
#include "ENUM_GameDifficulty_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_CyberspaceTerminal.INTERACT_CyberspaceTerminal_C
// 0x0228 (0x0578 - 0x0350)
class AINTERACT_CyberspaceTerminal_C final : public AINTERACT_Channeling_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_CyberspaceTerminal_C;      // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_AttribManager_C*                  COMP_AttribManager;                                // 0x0358(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     COMP_IdleAudio;                                    // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_ScannableObject_C*                COMP_ScannableObject;                              // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ScanBox;                                           // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        MountNode;                                         // 0x0378(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_BlueEnergy;                                     // 0x0380(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CollisionBackPanel;                                // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CollisionBarRight;                                 // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CollisionBarLeft;                                  // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TargetBox;                                         // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DisplayMesh;                                       // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CyberspaceLevel;                                   // 0x03B8(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FDataTableRowHandle                    CompleteTutorial;                                  // 0x03C8(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FAttribModApplyData                    SuperArmorApplyData;                               // 0x03D8(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FAttribModApplyData                    DisableApplyData;                                  // 0x0478(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class UAnimMontage>            DismountMontage;                                   // 0x0518(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMOVECONTROL_Base_C*                    ActiveMoveControl;                                 // 0x0540(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTerminalPowered;                                 // 0x0548(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsWaitingToKill;                                   // 0x0549(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54A[0x6];                                      // 0x054A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               NotFunctionalSoundCue;                             // 0x0550(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_INTERACT_CyberspaceTerminal(int32 EntryPoint);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void InitializeCyberTerminal();
	void TryCompleteTutorial();
	void TryAutoSave();
	void BeginDismount(class APAWN_Hacker_Implant_C* HackerPawn, bool NetLinkBroken);
	void EVENT_OnEnteredCyberWormhole();
	void EVENT_OnFinishedDismountingAction();
	void ReceiveAnimationMessage(const class FString& Message, bool* Result);
	void CreateChannelingMoveControl(class APAWN_Hacker_Simple_C* HackerPawn, class UMOVECONTROL_Base_C** Result);
	void BeginRiftTransition();
	void UpdateTerminalEffectsState(bool State);
	void UpdateTerminalEmissiveStrength(float Scale);
	void IsTerminalFunctional(bool* Result);
	void EVENT_OnDisableAttribChanged(float CurrValue, float LastValue);
	void GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent);
	void CanModifyInteractPower(bool* Result);
	void SetInteractPowered(bool State, bool* Result);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_CyberspaceTerminal_C">();
	}
	static class AINTERACT_CyberspaceTerminal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_CyberspaceTerminal_C>();
	}
};
static_assert(alignof(AINTERACT_CyberspaceTerminal_C) == 0x000008, "Wrong alignment on AINTERACT_CyberspaceTerminal_C");
static_assert(sizeof(AINTERACT_CyberspaceTerminal_C) == 0x000578, "Wrong size on AINTERACT_CyberspaceTerminal_C");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, UberGraphFrame_INTERACT_CyberspaceTerminal_C) == 0x000350, "Member 'AINTERACT_CyberspaceTerminal_C::UberGraphFrame_INTERACT_CyberspaceTerminal_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, COMP_AttribManager) == 0x000358, "Member 'AINTERACT_CyberspaceTerminal_C::COMP_AttribManager' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, COMP_IdleAudio) == 0x000360, "Member 'AINTERACT_CyberspaceTerminal_C::COMP_IdleAudio' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, COMP_ScannableObject) == 0x000368, "Member 'AINTERACT_CyberspaceTerminal_C::COMP_ScannableObject' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, ScanBox) == 0x000370, "Member 'AINTERACT_CyberspaceTerminal_C::ScanBox' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, MountNode) == 0x000378, "Member 'AINTERACT_CyberspaceTerminal_C::MountNode' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, NS_BlueEnergy) == 0x000380, "Member 'AINTERACT_CyberspaceTerminal_C::NS_BlueEnergy' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, PointLight) == 0x000388, "Member 'AINTERACT_CyberspaceTerminal_C::PointLight' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, CollisionBackPanel) == 0x000390, "Member 'AINTERACT_CyberspaceTerminal_C::CollisionBackPanel' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, CollisionBarRight) == 0x000398, "Member 'AINTERACT_CyberspaceTerminal_C::CollisionBarRight' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, CollisionBarLeft) == 0x0003A0, "Member 'AINTERACT_CyberspaceTerminal_C::CollisionBarLeft' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, TargetBox) == 0x0003A8, "Member 'AINTERACT_CyberspaceTerminal_C::TargetBox' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, DisplayMesh) == 0x0003B0, "Member 'AINTERACT_CyberspaceTerminal_C::DisplayMesh' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, CyberspaceLevel) == 0x0003B8, "Member 'AINTERACT_CyberspaceTerminal_C::CyberspaceLevel' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, CompleteTutorial) == 0x0003C8, "Member 'AINTERACT_CyberspaceTerminal_C::CompleteTutorial' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, SuperArmorApplyData) == 0x0003D8, "Member 'AINTERACT_CyberspaceTerminal_C::SuperArmorApplyData' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, DisableApplyData) == 0x000478, "Member 'AINTERACT_CyberspaceTerminal_C::DisableApplyData' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, DismountMontage) == 0x000518, "Member 'AINTERACT_CyberspaceTerminal_C::DismountMontage' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, ActiveMoveControl) == 0x000540, "Member 'AINTERACT_CyberspaceTerminal_C::ActiveMoveControl' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, IsTerminalPowered) == 0x000548, "Member 'AINTERACT_CyberspaceTerminal_C::IsTerminalPowered' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, IsWaitingToKill) == 0x000549, "Member 'AINTERACT_CyberspaceTerminal_C::IsWaitingToKill' has a wrong offset!");
static_assert(offsetof(AINTERACT_CyberspaceTerminal_C, NotFunctionalSoundCue) == 0x000550, "Member 'AINTERACT_CyberspaceTerminal_C::NotFunctionalSoundCue' has a wrong offset!");

}


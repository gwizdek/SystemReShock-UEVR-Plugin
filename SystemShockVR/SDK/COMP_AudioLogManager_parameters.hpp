#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_AudioLogManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "STRUCT_MediaObject_structs.hpp"
#include "ENUM_HackerGender_structs.hpp"


namespace SDK::Params
{

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.AudioLogCueFinished__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct COMP_AudioLogManager_C_AudioLogCueFinished__DelegateSignature final
{
public:
	class USoundCue*                              SoundCue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_AudioLogManager_C_AudioLogCueFinished__DelegateSignature) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_AudioLogCueFinished__DelegateSignature");
static_assert(sizeof(COMP_AudioLogManager_C_AudioLogCueFinished__DelegateSignature) == 0x000008, "Wrong size on COMP_AudioLogManager_C_AudioLogCueFinished__DelegateSignature");
static_assert(offsetof(COMP_AudioLogManager_C_AudioLogCueFinished__DelegateSignature, SoundCue) == 0x000000, "Member 'COMP_AudioLogManager_C_AudioLogCueFinished__DelegateSignature::SoundCue' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.AudioLogCueStarted__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct COMP_AudioLogManager_C_AudioLogCueStarted__DelegateSignature final
{
public:
	class USoundCue*                              SoundCue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_AudioLogManager_C_AudioLogCueStarted__DelegateSignature) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_AudioLogCueStarted__DelegateSignature");
static_assert(sizeof(COMP_AudioLogManager_C_AudioLogCueStarted__DelegateSignature) == 0x000010, "Wrong size on COMP_AudioLogManager_C_AudioLogCueStarted__DelegateSignature");
static_assert(offsetof(COMP_AudioLogManager_C_AudioLogCueStarted__DelegateSignature, SoundCue) == 0x000000, "Member 'COMP_AudioLogManager_C_AudioLogCueStarted__DelegateSignature::SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_AudioLogCueStarted__DelegateSignature, StartTime) == 0x000008, "Member 'COMP_AudioLogManager_C_AudioLogCueStarted__DelegateSignature::StartTime' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.ExecuteUbergraph_COMP_AudioLogManager
// 0x0060 (0x0060 - 0x0000)
struct COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               K2Node_CustomEvent_SoundCue;                       // 0x0008(0x0028)(HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager");
static_assert(sizeof(COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager) == 0x000060, "Wrong size on COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager");
static_assert(offsetof(COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager, EntryPoint) == 0x000000, "Member 'COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager, K2Node_CustomEvent_SoundCue) == 0x000008, "Member 'COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager::K2Node_CustomEvent_SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager, K2Node_CustomEvent_Loaded) == 0x000030, "Member 'COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager, Temp_object_Variable) == 0x000048, "Member 'COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager, K2Node_DynamicCast_AsSound_Cue) == 0x000050, "Member 'COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'COMP_AudioLogManager_C_ExecuteUbergraph_COMP_AudioLogManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.AsyncPlayAudioLogCue
// 0x0028 (0x0028 - 0x0000)
struct COMP_AudioLogManager_C_AsyncPlayAudioLogCue final
{
public:
	TSoftObjectPtr<class USoundCue>               SoundCue;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(COMP_AudioLogManager_C_AsyncPlayAudioLogCue) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_AsyncPlayAudioLogCue");
static_assert(sizeof(COMP_AudioLogManager_C_AsyncPlayAudioLogCue) == 0x000028, "Wrong size on COMP_AudioLogManager_C_AsyncPlayAudioLogCue");
static_assert(offsetof(COMP_AudioLogManager_C_AsyncPlayAudioLogCue, SoundCue) == 0x000000, "Member 'COMP_AudioLogManager_C_AsyncPlayAudioLogCue::SoundCue' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.OnLoaded_9E3D1CD743D02197C125BF926FE28325
// 0x0008 (0x0008 - 0x0000)
struct COMP_AudioLogManager_C_OnLoaded_9E3D1CD743D02197C125BF926FE28325 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_AudioLogManager_C_OnLoaded_9E3D1CD743D02197C125BF926FE28325) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_OnLoaded_9E3D1CD743D02197C125BF926FE28325");
static_assert(sizeof(COMP_AudioLogManager_C_OnLoaded_9E3D1CD743D02197C125BF926FE28325) == 0x000008, "Wrong size on COMP_AudioLogManager_C_OnLoaded_9E3D1CD743D02197C125BF926FE28325");
static_assert(offsetof(COMP_AudioLogManager_C_OnLoaded_9E3D1CD743D02197C125BF926FE28325, Loaded) == 0x000000, "Member 'COMP_AudioLogManager_C_OnLoaded_9E3D1CD743D02197C125BF926FE28325::Loaded' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.TryResumeMedia
// 0x0188 (0x0188 - 0x0000)
struct COMP_AudioLogManager_C_TryResumeMedia final
{
public:
	float                                         ElapsedTimeSinceStart;                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimestamp;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               MediaCue;                                          // 0x0008(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class USoundCue*                              SoundCue;                                          // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 PlayerHacker;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MediaObject                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result_1;                    // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result_2;                    // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsNOTE_Base;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0104(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0118(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_MediaBase_C*                      K2Node_DynamicCast_AsITEM_Media_Base;              // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               CallFunc_GetSoundCueFromActiveMedia_SoundCue;      // 0x0158(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0183(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_TryResumeMedia) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_TryResumeMedia");
static_assert(sizeof(COMP_AudioLogManager_C_TryResumeMedia) == 0x000188, "Wrong size on COMP_AudioLogManager_C_TryResumeMedia");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, ElapsedTimeSinceStart) == 0x000000, "Member 'COMP_AudioLogManager_C_TryResumeMedia::ElapsedTimeSinceStart' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, StartTimestamp) == 0x000004, "Member 'COMP_AudioLogManager_C_TryResumeMedia::StartTimestamp' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, MediaCue) == 0x000008, "Member 'COMP_AudioLogManager_C_TryResumeMedia::MediaCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, SoundCue) == 0x000030, "Member 'COMP_AudioLogManager_C_TryResumeMedia::SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, PlayerHacker) == 0x000038, "Member 'COMP_AudioLogManager_C_TryResumeMedia::PlayerHacker' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C0, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_GetNeuralHUD_Result) == 0x0000C8, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_GetNeuralHUD_Result_1) == 0x0000D0, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_GetNeuralHUD_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_GetNeuralHUD_Result_2) == 0x0000D8, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_GetNeuralHUD_Result_2' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_GetOwner_ReturnValue) == 0x0000E0, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x0000E8, "Member 'COMP_AudioLogManager_C_TryResumeMedia::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'COMP_AudioLogManager_C_TryResumeMedia::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, K2Node_ClassDynamicCast_AsNOTE_Base) == 0x0000F8, "Member 'COMP_AudioLogManager_C_TryResumeMedia::K2Node_ClassDynamicCast_AsNOTE_Base' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, K2Node_ClassDynamicCast_bSuccess) == 0x000100, "Member 'COMP_AudioLogManager_C_TryResumeMedia::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, K2Node_CreateDelegate_OutputDelegate) == 0x000104, "Member 'COMP_AudioLogManager_C_TryResumeMedia::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000118, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000120, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000128, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_FindItem_FoundItem) == 0x000130, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_FindItem_FoundItem' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, K2Node_DynamicCast_AsSound_Cue) == 0x000138, "Member 'COMP_AudioLogManager_C_TryResumeMedia::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, K2Node_DynamicCast_bSuccess_1) == 0x000140, "Member 'COMP_AudioLogManager_C_TryResumeMedia::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, K2Node_DynamicCast_AsITEM_Media_Base) == 0x000148, "Member 'COMP_AudioLogManager_C_TryResumeMedia::K2Node_DynamicCast_AsITEM_Media_Base' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, K2Node_DynamicCast_bSuccess_2) == 0x000150, "Member 'COMP_AudioLogManager_C_TryResumeMedia::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_GetSoundCueFromActiveMedia_SoundCue) == 0x000158, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_GetSoundCueFromActiveMedia_SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000180, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_Map_Contains_ReturnValue) == 0x000181, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_Not_PreBool_ReturnValue) == 0x000182, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeMedia, CallFunc_IsValidClass_ReturnValue) == 0x000183, "Member 'COMP_AudioLogManager_C_TryResumeMedia::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.PlayMediaFromItem
// 0x00D0 (0x00D0 - 0x0000)
struct COMP_AudioLogManager_C_PlayMediaFromItem final
{
public:
	class UITEM_MediaBase_C*                      MediaItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              SoundCue;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               CallFunc_GetSoundCueFromActiveMedia_SoundCue;      // 0x0040(0x0028)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result_1;                    // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant_2;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result_2;                    // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNOTE_Base_C*                           K2Node_DynamicCast_AsNOTE_Base;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStopCurrentAudioLogCue_Result;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPlayMedia_Result;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_PlayMediaFromItem) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_PlayMediaFromItem");
static_assert(sizeof(COMP_AudioLogManager_C_PlayMediaFromItem) == 0x0000D0, "Wrong size on COMP_AudioLogManager_C_PlayMediaFromItem");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, MediaItem) == 0x000000, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::MediaItem' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, Result) == 0x000008, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, SoundCue) == 0x000010, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000028, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, CallFunc_GetNeuralHUD_Result) == 0x000038, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, CallFunc_GetSoundCueFromActiveMedia_SoundCue) == 0x000040, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::CallFunc_GetSoundCueFromActiveMedia_SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, CallFunc_GetOwner_ReturnValue_1) == 0x000068, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, CallFunc_GetObjectClass_ReturnValue) == 0x000070, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, K2Node_DynamicCast_AsPAWN_Hacker_Implant_1) == 0x000078, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::K2Node_DynamicCast_AsPAWN_Hacker_Implant_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, CallFunc_GetNeuralHUD_Result_1) == 0x000088, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::CallFunc_GetNeuralHUD_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, CallFunc_GetOwner_ReturnValue_2) == 0x000090, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, K2Node_DynamicCast_AsPAWN_Hacker_Implant_2) == 0x000098, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::K2Node_DynamicCast_AsPAWN_Hacker_Implant_2' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, CallFunc_GetNeuralHUD_Result_2) == 0x0000A8, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::CallFunc_GetNeuralHUD_Result_2' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, K2Node_DynamicCast_AsNOTE_Base) == 0x0000B0, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::K2Node_DynamicCast_AsNOTE_Base' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, CallFunc_GetObjectClass_ReturnValue_1) == 0x0000C0, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, CallFunc_TryStopCurrentAudioLogCue_Result) == 0x0000C8, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::CallFunc_TryStopCurrentAudioLogCue_Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromItem, CallFunc_CanPlayMedia_Result) == 0x0000C9, "Member 'COMP_AudioLogManager_C_PlayMediaFromItem::CallFunc_CanPlayMedia_Result' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.PlayMediaFromTrap
// 0x01F8 (0x01F8 - 0x0000)
struct COMP_AudioLogManager_C_PlayMediaFromTrap final
{
public:
	struct FDataTableRowHandle                    MediaDataHandle;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant_1;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result_1;                    // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant_2;        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_HackerGender                             CallFunc_GetHackerGender_Result;                   // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result_2;                    // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0148(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant_3;        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result_3;                    // 0x01E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanPlayMedia_Result;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStopCurrentAudioLogCue_Result;         // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_PlayMediaFromTrap) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_PlayMediaFromTrap");
static_assert(sizeof(COMP_AudioLogManager_C_PlayMediaFromTrap) == 0x0001F8, "Wrong size on COMP_AudioLogManager_C_PlayMediaFromTrap");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, MediaDataHandle) == 0x000000, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::MediaDataHandle' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, Result) == 0x000010, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000020, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetNeuralHUD_Result) == 0x000030, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetOwner_ReturnValue_1) == 0x000058, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_Conv_StringToName_ReturnValue) == 0x000060, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, K2Node_DynamicCast_AsPAWN_Hacker_Implant_1) == 0x000068, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::K2Node_DynamicCast_AsPAWN_Hacker_Implant_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000F8, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetNeuralHUD_Result_1) == 0x000100, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetNeuralHUD_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetGameInstance_ReturnValue) == 0x000108, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetOwner_ReturnValue_2) == 0x000110, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, K2Node_DynamicCast_AsGI_Single_Player) == 0x000118, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, K2Node_DynamicCast_bSuccess_2) == 0x000120, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, K2Node_DynamicCast_AsPAWN_Hacker_Implant_2) == 0x000128, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::K2Node_DynamicCast_AsPAWN_Hacker_Implant_2' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, K2Node_DynamicCast_bSuccess_3) == 0x000130, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetHackerGender_Result) == 0x000131, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetHackerGender_Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetNeuralHUD_Result_2) == 0x000138, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetNeuralHUD_Result_2' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000140, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000148, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0001C8, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetOwner_ReturnValue_3) == 0x0001D0, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, K2Node_DynamicCast_AsPAWN_Hacker_Implant_3) == 0x0001D8, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::K2Node_DynamicCast_AsPAWN_Hacker_Implant_3' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, K2Node_DynamicCast_bSuccess_4) == 0x0001E0, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_GetNeuralHUD_Result_3) == 0x0001E8, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_GetNeuralHUD_Result_3' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_CanPlayMedia_Result) == 0x0001F0, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_CanPlayMedia_Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayMediaFromTrap, CallFunc_TryStopCurrentAudioLogCue_Result) == 0x0001F1, "Member 'COMP_AudioLogManager_C_PlayMediaFromTrap::CallFunc_TryStopCurrentAudioLogCue_Result' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.CanPlayMedia
// 0x0028 (0x0028 - 0x0000)
struct COMP_AudioLogManager_C_CanPlayMedia final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCount_Result;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_CanPlayMedia) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_CanPlayMedia");
static_assert(sizeof(COMP_AudioLogManager_C_CanPlayMedia) == 0x000028, "Wrong size on COMP_AudioLogManager_C_CanPlayMedia");
static_assert(offsetof(COMP_AudioLogManager_C_CanPlayMedia, Result) == 0x000000, "Member 'COMP_AudioLogManager_C_CanPlayMedia::Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_CanPlayMedia, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'COMP_AudioLogManager_C_CanPlayMedia::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_CanPlayMedia, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000010, "Member 'COMP_AudioLogManager_C_CanPlayMedia::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_CanPlayMedia, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'COMP_AudioLogManager_C_CanPlayMedia::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_CanPlayMedia, CallFunc_GetItemCount_Result) == 0x00001C, "Member 'COMP_AudioLogManager_C_CanPlayMedia::CallFunc_GetItemCount_Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_CanPlayMedia, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'COMP_AudioLogManager_C_CanPlayMedia::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.OnMediaPromptOpened
// 0x0010 (0x0010 - 0x0000)
struct COMP_AudioLogManager_C_OnMediaPromptOpened final
{
public:
	class UClass*                                 MediaItemClass;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_OnMediaPromptOpened) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_OnMediaPromptOpened");
static_assert(sizeof(COMP_AudioLogManager_C_OnMediaPromptOpened) == 0x000010, "Wrong size on COMP_AudioLogManager_C_OnMediaPromptOpened");
static_assert(offsetof(COMP_AudioLogManager_C_OnMediaPromptOpened, MediaItemClass) == 0x000000, "Member 'COMP_AudioLogManager_C_OnMediaPromptOpened::MediaItemClass' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_OnMediaPromptOpened, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000008, "Member 'COMP_AudioLogManager_C_OnMediaPromptOpened::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_OnMediaPromptOpened, CallFunc_IsValidClass_ReturnValue) == 0x00000C, "Member 'COMP_AudioLogManager_C_OnMediaPromptOpened::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.OnMediaPromptClosed
// 0x0001 (0x0001 - 0x0000)
struct COMP_AudioLogManager_C_OnMediaPromptClosed final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_OnMediaPromptClosed) == 0x000001, "Wrong alignment on COMP_AudioLogManager_C_OnMediaPromptClosed");
static_assert(sizeof(COMP_AudioLogManager_C_OnMediaPromptClosed) == 0x000001, "Wrong size on COMP_AudioLogManager_C_OnMediaPromptClosed");
static_assert(offsetof(COMP_AudioLogManager_C_OnMediaPromptClosed, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'COMP_AudioLogManager_C_OnMediaPromptClosed::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.PlayAudioLogCue
// 0x0010 (0x0010 - 0x0000)
struct COMP_AudioLogManager_C_PlayAudioLogCue final
{
public:
	class USoundCue*                              AudioLogCue;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_AudioLogManager_C_PlayAudioLogCue) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_PlayAudioLogCue");
static_assert(sizeof(COMP_AudioLogManager_C_PlayAudioLogCue) == 0x000010, "Wrong size on COMP_AudioLogManager_C_PlayAudioLogCue");
static_assert(offsetof(COMP_AudioLogManager_C_PlayAudioLogCue, AudioLogCue) == 0x000000, "Member 'COMP_AudioLogManager_C_PlayAudioLogCue::AudioLogCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayAudioLogCue, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'COMP_AudioLogManager_C_PlayAudioLogCue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_PlayAudioLogCue, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00000C, "Member 'COMP_AudioLogManager_C_PlayAudioLogCue::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.ResumeAudioLogCue
// 0x0040 (0x0040 - 0x0000)
struct COMP_AudioLogManager_C_ResumeAudioLogCue final
{
public:
	class USoundCue*                              SoundCue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Implant_C*                 HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_ResumeAudioLogCue) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_ResumeAudioLogCue");
static_assert(sizeof(COMP_AudioLogManager_C_ResumeAudioLogCue) == 0x000040, "Wrong size on COMP_AudioLogManager_C_ResumeAudioLogCue");
static_assert(offsetof(COMP_AudioLogManager_C_ResumeAudioLogCue, SoundCue) == 0x000000, "Member 'COMP_AudioLogManager_C_ResumeAudioLogCue::SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumeAudioLogCue, StartTime) == 0x000008, "Member 'COMP_AudioLogManager_C_ResumeAudioLogCue::StartTime' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumeAudioLogCue, HackerPawn) == 0x000010, "Member 'COMP_AudioLogManager_C_ResumeAudioLogCue::HackerPawn' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumeAudioLogCue, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'COMP_AudioLogManager_C_ResumeAudioLogCue::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumeAudioLogCue, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'COMP_AudioLogManager_C_ResumeAudioLogCue::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumeAudioLogCue, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000030, "Member 'COMP_AudioLogManager_C_ResumeAudioLogCue::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumeAudioLogCue, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'COMP_AudioLogManager_C_ResumeAudioLogCue::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.ResumePreviousAudioLogCues
// 0x00A8 (0x00A8 - 0x0000)
struct COMP_AudioLogManager_C_ResumePreviousAudioLogCues final
{
public:
	float                                         ElapsedTimeSinceStart;                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartTimestamp;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              SoundCue;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0020(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               CallFunc_GetSoundCueFromActiveMedia_SoundCue;      // 0x0048(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftObjectReference_ReturnValue; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USoundCue*>                      CallFunc_Map_Keys_Keys;                            // 0x0088(0x0010)(ReferenceParm)
	class USoundCue*                              CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_ResumePreviousAudioLogCues");
static_assert(sizeof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues) == 0x0000A8, "Wrong size on COMP_AudioLogManager_C_ResumePreviousAudioLogCues");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, ElapsedTimeSinceStart) == 0x000000, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::ElapsedTimeSinceStart' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, StartTimestamp) == 0x000004, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::StartTimestamp' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, SoundCue) == 0x000008, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, Temp_int_Array_Index_Variable) == 0x000010, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000020, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, CallFunc_GetSoundCueFromActiveMedia_SoundCue) == 0x000048, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::CallFunc_GetSoundCueFromActiveMedia_SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, CallFunc_EqualEqual_SoftObjectReference_ReturnValue) == 0x000070, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::CallFunc_EqualEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000074, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000078, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, CallFunc_Map_Find_Value) == 0x00007C, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, CallFunc_Map_Keys_Keys) == 0x000088, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, CallFunc_Array_Get_Item) == 0x000098, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ResumePreviousAudioLogCues, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'COMP_AudioLogManager_C_ResumePreviousAudioLogCues::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.TryResumeSubtitlesForActiveMedia
// 0x0190 (0x0190 - 0x0000)
struct COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia final
{
public:
	float                                         StartTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    PlayerHUD;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MediaObject                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_HackerGender                             CallFunc_GetHackerGender_Result;                   // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x00D8(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsNOTE_Base;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x018A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia");
static_assert(sizeof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia) == 0x000190, "Wrong size on COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, StartTime) == 0x000000, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::StartTime' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, PlayerHUD) == 0x000008, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::PlayerHUD' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_Conv_StringToName_ReturnValue) == 0x000030, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C0, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000C8, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_GetHackerGender_Result) == 0x0000D1, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_GetHackerGender_Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000D2, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0000D8, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000158, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_GetOwner_ReturnValue) == 0x000160, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000168, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, K2Node_DynamicCast_bSuccess_1) == 0x000170, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_GetNeuralHUD_Result) == 0x000178, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, K2Node_ClassDynamicCast_AsNOTE_Base) == 0x000180, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::K2Node_ClassDynamicCast_AsNOTE_Base' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, K2Node_ClassDynamicCast_bSuccess) == 0x000188, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_Not_PreBool_ReturnValue) == 0x000189, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia, CallFunc_NotEqual_NameName_ReturnValue) == 0x00018A, "Member 'COMP_AudioLogManager_C_TryResumeSubtitlesForActiveMedia::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.TryStopCurrentAudioLogCue
// 0x0028 (0x0028 - 0x0000)
struct COMP_AudioLogManager_C_TryStopCurrentAudioLogCue final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Implant_C*                 HackerPawn;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanStopCurrentMedia_Result;               // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_TryStopCurrentAudioLogCue) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_TryStopCurrentAudioLogCue");
static_assert(sizeof(COMP_AudioLogManager_C_TryStopCurrentAudioLogCue) == 0x000028, "Wrong size on COMP_AudioLogManager_C_TryStopCurrentAudioLogCue");
static_assert(offsetof(COMP_AudioLogManager_C_TryStopCurrentAudioLogCue, Result) == 0x000000, "Member 'COMP_AudioLogManager_C_TryStopCurrentAudioLogCue::Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryStopCurrentAudioLogCue, HackerPawn) == 0x000008, "Member 'COMP_AudioLogManager_C_TryStopCurrentAudioLogCue::HackerPawn' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryStopCurrentAudioLogCue, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'COMP_AudioLogManager_C_TryStopCurrentAudioLogCue::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryStopCurrentAudioLogCue, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000018, "Member 'COMP_AudioLogManager_C_TryStopCurrentAudioLogCue::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryStopCurrentAudioLogCue, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'COMP_AudioLogManager_C_TryStopCurrentAudioLogCue::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryStopCurrentAudioLogCue, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'COMP_AudioLogManager_C_TryStopCurrentAudioLogCue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_TryStopCurrentAudioLogCue, CallFunc_CanStopCurrentMedia_Result) == 0x000022, "Member 'COMP_AudioLogManager_C_TryStopCurrentAudioLogCue::CallFunc_CanStopCurrentMedia_Result' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.EVENT_OnAudioLogCueFinished
// 0x0050 (0x0050 - 0x0000)
struct COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished final
{
public:
	class USoundCue*                              AudioLogCue;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 HackerPawn;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished");
static_assert(sizeof(COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished) == 0x000050, "Wrong size on COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished");
static_assert(offsetof(COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished, AudioLogCue) == 0x000000, "Member 'COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished::AudioLogCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished, HackerPawn) == 0x000008, "Member 'COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished::HackerPawn' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished, CallFunc_GetNeuralHUD_Result) == 0x000010, "Member 'COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished, K2Node_DynamicCast_AsSound_Cue) == 0x000028, "Member 'COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000040, "Member 'COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished, CallFunc_Map_Remove_ReturnValue) == 0x000049, "Member 'COMP_AudioLogManager_C_EVENT_OnAudioLogCueFinished::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.ForceStopCurrentAudioLogCue
// 0x0018 (0x0018 - 0x0000)
struct COMP_AudioLogManager_C_ForceStopCurrentAudioLogCue final
{
public:
	class APAWN_Hacker_Implant_C*                 HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_ForceStopCurrentAudioLogCue) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_ForceStopCurrentAudioLogCue");
static_assert(sizeof(COMP_AudioLogManager_C_ForceStopCurrentAudioLogCue) == 0x000018, "Wrong size on COMP_AudioLogManager_C_ForceStopCurrentAudioLogCue");
static_assert(offsetof(COMP_AudioLogManager_C_ForceStopCurrentAudioLogCue, HackerPawn) == 0x000000, "Member 'COMP_AudioLogManager_C_ForceStopCurrentAudioLogCue::HackerPawn' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ForceStopCurrentAudioLogCue, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'COMP_AudioLogManager_C_ForceStopCurrentAudioLogCue::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.CanStopCurrentMedia
// 0x0020 (0x0020 - 0x0000)
struct COMP_AudioLogManager_C_CanStopCurrentMedia final
{
public:
	class UAudioComponent*                        AudioComponent_0;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsEMAIL_ITEM_Base;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_CanStopCurrentMedia) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_CanStopCurrentMedia");
static_assert(sizeof(COMP_AudioLogManager_C_CanStopCurrentMedia) == 0x000020, "Wrong size on COMP_AudioLogManager_C_CanStopCurrentMedia");
static_assert(offsetof(COMP_AudioLogManager_C_CanStopCurrentMedia, AudioComponent_0) == 0x000000, "Member 'COMP_AudioLogManager_C_CanStopCurrentMedia::AudioComponent_0' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_CanStopCurrentMedia, Result) == 0x000008, "Member 'COMP_AudioLogManager_C_CanStopCurrentMedia::Result' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_CanStopCurrentMedia, CallFunc_IsPlaying_ReturnValue) == 0x000009, "Member 'COMP_AudioLogManager_C_CanStopCurrentMedia::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_CanStopCurrentMedia, CallFunc_NotEqual_NameName_ReturnValue) == 0x00000A, "Member 'COMP_AudioLogManager_C_CanStopCurrentMedia::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_CanStopCurrentMedia, K2Node_ClassDynamicCast_AsEMAIL_ITEM_Base) == 0x000010, "Member 'COMP_AudioLogManager_C_CanStopCurrentMedia::K2Node_ClassDynamicCast_AsEMAIL_ITEM_Base' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_CanStopCurrentMedia, K2Node_ClassDynamicCast_bSuccess) == 0x000018, "Member 'COMP_AudioLogManager_C_CanStopCurrentMedia::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_CanStopCurrentMedia, CallFunc_Not_PreBool_ReturnValue) == 0x000019, "Member 'COMP_AudioLogManager_C_CanStopCurrentMedia::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.GetSoundCueFromActiveMedia
// 0x0148 (0x0148 - 0x0000)
struct COMP_AudioLogManager_C_GetSoundCueFromActiveMedia final
{
public:
	TSoftObjectPtr<class USoundCue>               SoundCue;                                          // 0x0000(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_MediaObject                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsNOTE_Base;               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MediaObject                    CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x00C0(0x0080)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_GetSoundCueFromActiveMedia) == 0x000008, "Wrong alignment on COMP_AudioLogManager_C_GetSoundCueFromActiveMedia");
static_assert(sizeof(COMP_AudioLogManager_C_GetSoundCueFromActiveMedia) == 0x000148, "Wrong size on COMP_AudioLogManager_C_GetSoundCueFromActiveMedia");
static_assert(offsetof(COMP_AudioLogManager_C_GetSoundCueFromActiveMedia, SoundCue) == 0x000000, "Member 'COMP_AudioLogManager_C_GetSoundCueFromActiveMedia::SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_GetSoundCueFromActiveMedia, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'COMP_AudioLogManager_C_GetSoundCueFromActiveMedia::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_GetSoundCueFromActiveMedia, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'COMP_AudioLogManager_C_GetSoundCueFromActiveMedia::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_GetSoundCueFromActiveMedia, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000A9, "Member 'COMP_AudioLogManager_C_GetSoundCueFromActiveMedia::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_GetSoundCueFromActiveMedia, K2Node_ClassDynamicCast_AsNOTE_Base) == 0x0000B0, "Member 'COMP_AudioLogManager_C_GetSoundCueFromActiveMedia::K2Node_ClassDynamicCast_AsNOTE_Base' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_GetSoundCueFromActiveMedia, K2Node_ClassDynamicCast_bSuccess) == 0x0000B8, "Member 'COMP_AudioLogManager_C_GetSoundCueFromActiveMedia::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_GetSoundCueFromActiveMedia, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x0000C0, "Member 'COMP_AudioLogManager_C_GetSoundCueFromActiveMedia::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_GetSoundCueFromActiveMedia, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000140, "Member 'COMP_AudioLogManager_C_GetSoundCueFromActiveMedia::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_GetSoundCueFromActiveMedia, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000141, "Member 'COMP_AudioLogManager_C_GetSoundCueFromActiveMedia::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function COMP_AudioLogManager.COMP_AudioLogManager_C.ShouldSaveComponent
// 0x000C (0x000C - 0x0000)
struct COMP_AudioLogManager_C_ShouldSaveComponent final
{
public:
	struct FStreamingSaveGameComponentParams      Params_0;                                          // 0x0000(0x0004)(Parm, OutParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameComponentParams      K2Node_MakeStruct_StreamingSaveGameComponentParams; // 0x0008(0x0004)(NoDestructor)
};
static_assert(alignof(COMP_AudioLogManager_C_ShouldSaveComponent) == 0x000004, "Wrong alignment on COMP_AudioLogManager_C_ShouldSaveComponent");
static_assert(sizeof(COMP_AudioLogManager_C_ShouldSaveComponent) == 0x00000C, "Wrong size on COMP_AudioLogManager_C_ShouldSaveComponent");
static_assert(offsetof(COMP_AudioLogManager_C_ShouldSaveComponent, Params_0) == 0x000000, "Member 'COMP_AudioLogManager_C_ShouldSaveComponent::Params_0' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ShouldSaveComponent, ReturnValue) == 0x000004, "Member 'COMP_AudioLogManager_C_ShouldSaveComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_AudioLogManager_C_ShouldSaveComponent, K2Node_MakeStruct_StreamingSaveGameComponentParams) == 0x000008, "Member 'COMP_AudioLogManager_C_ShouldSaveComponent::K2Node_MakeStruct_StreamingSaveGameComponentParams' has a wrong offset!");

}


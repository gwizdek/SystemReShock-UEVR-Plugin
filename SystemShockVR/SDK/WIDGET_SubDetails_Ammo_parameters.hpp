#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SubDetails_Ammo

#include "Basic.hpp"

#include "STRUCT_WeaponMode_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_SubDetails_Ammo.WIDGET_SubDetails_Ammo_C.ExecuteUbergraph_WIDGET_SubDetails_Ammo
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_SubDetails_Ammo_C_ExecuteUbergraph_WIDGET_SubDetails_Ammo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SubDetails_Ammo_C_ExecuteUbergraph_WIDGET_SubDetails_Ammo) == 0x000004, "Wrong alignment on WIDGET_SubDetails_Ammo_C_ExecuteUbergraph_WIDGET_SubDetails_Ammo");
static_assert(sizeof(WIDGET_SubDetails_Ammo_C_ExecuteUbergraph_WIDGET_SubDetails_Ammo) == 0x000004, "Wrong size on WIDGET_SubDetails_Ammo_C_ExecuteUbergraph_WIDGET_SubDetails_Ammo");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_ExecuteUbergraph_WIDGET_SubDetails_Ammo, EntryPoint) == 0x000000, "Member 'WIDGET_SubDetails_Ammo_C_ExecuteUbergraph_WIDGET_SubDetails_Ammo::EntryPoint' has a wrong offset!");

// Function WIDGET_SubDetails_Ammo.WIDGET_SubDetails_Ammo_C.GetWeaponModeForAmmo
// 0x0278 (0x0278 - 0x0000)
struct WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo final
{
public:
	class UAMMO_ITEM_Base_C*                      Ammo;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     Mode;                                              // 0x0008(0x0100)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         ModeIndex;                                         // 0x0108(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 WeaponClass;                                       // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetWeaponModeNameByIndex_ModeName;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0120(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponModeIndexForAmmo_ModeIndex;      // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0238(0x0028)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Weapon_Base;        // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo");
static_assert(sizeof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo) == 0x000278, "Wrong size on WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, Ammo) == 0x000000, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::Ammo' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, Mode) == 0x000008, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::Mode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, ModeIndex) == 0x000108, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::ModeIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, WeaponClass) == 0x000110, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::WeaponClass' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, CallFunc_GetWeaponModeNameByIndex_ModeName) == 0x000118, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::CallFunc_GetWeaponModeNameByIndex_ModeName' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000120, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000220, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000221, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, CallFunc_GetObjectClass_ReturnValue) == 0x000228, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, CallFunc_GetWeaponModeIndexForAmmo_ModeIndex) == 0x000230, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::CallFunc_GetWeaponModeIndexForAmmo_ModeIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, CallFunc_Array_Get_Item) == 0x000238, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000260, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, K2Node_ClassDynamicCast_AsITEM_Weapon_Base) == 0x000268, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::K2Node_ClassDynamicCast_AsITEM_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo, K2Node_ClassDynamicCast_bSuccess) == 0x000270, "Member 'WIDGET_SubDetails_Ammo_C_GetWeaponModeForAmmo::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_SubDetails_Ammo.WIDGET_SubDetails_Ammo_C.GetDamageText
// 0x0140 (0x0140 - 0x0000)
struct WIDGET_SubDetails_Ammo_C_GetDamageText final
{
public:
	class UAMMO_ITEM_Base_C*                      Ammo;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     Mode;                                              // 0x0008(0x0100)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FText                                   Result;                                            // 0x0108(0x0018)(Parm, OutParm)
	float                                         Damage;                                            // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetFormattedWeaponDamageText_Result;      // 0x0128(0x0018)()
};
static_assert(alignof(WIDGET_SubDetails_Ammo_C_GetDamageText) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Ammo_C_GetDamageText");
static_assert(sizeof(WIDGET_SubDetails_Ammo_C_GetDamageText) == 0x000140, "Wrong size on WIDGET_SubDetails_Ammo_C_GetDamageText");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetDamageText, Ammo) == 0x000000, "Member 'WIDGET_SubDetails_Ammo_C_GetDamageText::Ammo' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetDamageText, Mode) == 0x000008, "Member 'WIDGET_SubDetails_Ammo_C_GetDamageText::Mode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetDamageText, Result) == 0x000108, "Member 'WIDGET_SubDetails_Ammo_C_GetDamageText::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetDamageText, Damage) == 0x000120, "Member 'WIDGET_SubDetails_Ammo_C_GetDamageText::Damage' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetDamageText, CallFunc_GetFormattedWeaponDamageText_Result) == 0x000128, "Member 'WIDGET_SubDetails_Ammo_C_GetDamageText::CallFunc_GetFormattedWeaponDamageText_Result' has a wrong offset!");

// Function WIDGET_SubDetails_Ammo.WIDGET_SubDetails_Ammo_C.GetAmmoDetails
// 0x000C (0x000C - 0x0000)
struct WIDGET_SubDetails_Ammo_C_GetAmmoDetails final
{
public:
	bool                                          ShowAmmo;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CountInClip;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountInInventory;                                  // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SubDetails_Ammo_C_GetAmmoDetails) == 0x000004, "Wrong alignment on WIDGET_SubDetails_Ammo_C_GetAmmoDetails");
static_assert(sizeof(WIDGET_SubDetails_Ammo_C_GetAmmoDetails) == 0x00000C, "Wrong size on WIDGET_SubDetails_Ammo_C_GetAmmoDetails");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetAmmoDetails, ShowAmmo) == 0x000000, "Member 'WIDGET_SubDetails_Ammo_C_GetAmmoDetails::ShowAmmo' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetAmmoDetails, CountInClip) == 0x000004, "Member 'WIDGET_SubDetails_Ammo_C_GetAmmoDetails::CountInClip' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_GetAmmoDetails, CountInInventory) == 0x000008, "Member 'WIDGET_SubDetails_Ammo_C_GetAmmoDetails::CountInInventory' has a wrong offset!");

// Function WIDGET_SubDetails_Ammo.WIDGET_SubDetails_Ammo_C.InitializeItemDetails
// 0x0328 (0x0328 - 0x0000)
struct WIDGET_SubDetails_Ammo_C_InitializeItemDetails final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_InventoryDetails_C*             InventoryDetails;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     Mode;                                              // 0x0018(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UAMMO_ITEM_Base_C*                      Ammo;                                              // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ConsumableBase_C*                 ConsumableItem;                                    // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAMMO_ITEM_Base_C*                      K2Node_DynamicCast_AsAMMO_ITEM_Base;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0138(0x0018)()
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item;                           // 0x0150(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Base;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetWeaponModeDamageTypeText_Text;         // 0x01A0(0x0018)()
	class FText                                   CallFunc_GetWeaponModeArmorPenetrationText_Text;   // 0x01B8(0x0018)()
	class FText                                   CallFunc_GetDamageText_Result;                     // 0x01D0(0x0018)()
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponModeForAmmo_Mode;                // 0x01E8(0x0100)(HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Array_Get_Item_1;                         // 0x02E8(0x0028)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue_1;    // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Base_1;             // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Ammo_C_InitializeItemDetails");
static_assert(sizeof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails) == 0x000328, "Wrong size on WIDGET_SubDetails_Ammo_C_InitializeItemDetails");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, Item) == 0x000000, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, InventoryDetails) == 0x000008, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::InventoryDetails' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, Result) == 0x000010, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, Mode) == 0x000018, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::Mode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, Ammo) == 0x000118, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::Ammo' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, ConsumableItem) == 0x000120, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::ConsumableItem' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, K2Node_DynamicCast_AsAMMO_ITEM_Base) == 0x000128, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::K2Node_DynamicCast_AsAMMO_ITEM_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, CallFunc_GetEmptyText_ReturnValue) == 0x000138, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, CallFunc_Array_Get_Item) == 0x000150, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000180, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, CallFunc_Greater_IntInt_ReturnValue) == 0x000188, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, K2Node_ClassDynamicCast_AsITEM_Base) == 0x000190, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::K2Node_ClassDynamicCast_AsITEM_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, K2Node_ClassDynamicCast_bSuccess) == 0x000198, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, CallFunc_GetWeaponModeDamageTypeText_Text) == 0x0001A0, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::CallFunc_GetWeaponModeDamageTypeText_Text' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, CallFunc_GetWeaponModeArmorPenetrationText_Text) == 0x0001B8, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::CallFunc_GetWeaponModeArmorPenetrationText_Text' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, CallFunc_GetDamageText_Result) == 0x0001D0, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::CallFunc_GetDamageText_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, CallFunc_GetWeaponModeForAmmo_Mode) == 0x0001E8, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::CallFunc_GetWeaponModeForAmmo_Mode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, CallFunc_Array_Get_Item_1) == 0x0002E8, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, CallFunc_LoadClassAsset_Blocking_ReturnValue_1) == 0x000310, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::CallFunc_LoadClassAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, K2Node_ClassDynamicCast_AsITEM_Base_1) == 0x000318, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::K2Node_ClassDynamicCast_AsITEM_Base_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_InitializeItemDetails, K2Node_ClassDynamicCast_bSuccess_1) == 0x000320, "Member 'WIDGET_SubDetails_Ammo_C_InitializeItemDetails::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");

// Function WIDGET_SubDetails_Ammo.WIDGET_SubDetails_Ammo_C.ShowExtendedDetails
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_SubDetails_Ammo_C_ShowExtendedDetails final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Ammo_C_ShowExtendedDetails) == 0x000001, "Wrong alignment on WIDGET_SubDetails_Ammo_C_ShowExtendedDetails");
static_assert(sizeof(WIDGET_SubDetails_Ammo_C_ShowExtendedDetails) == 0x000001, "Wrong size on WIDGET_SubDetails_Ammo_C_ShowExtendedDetails");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_ShowExtendedDetails, Show) == 0x000000, "Member 'WIDGET_SubDetails_Ammo_C_ShowExtendedDetails::Show' has a wrong offset!");

// Function WIDGET_SubDetails_Ammo.WIDGET_SubDetails_Ammo_C.ShowBars
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_SubDetails_Ammo_C_ShowBars final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Ammo_C_ShowBars) == 0x000001, "Wrong alignment on WIDGET_SubDetails_Ammo_C_ShowBars");
static_assert(sizeof(WIDGET_SubDetails_Ammo_C_ShowBars) == 0x000001, "Wrong size on WIDGET_SubDetails_Ammo_C_ShowBars");
static_assert(offsetof(WIDGET_SubDetails_Ammo_C_ShowBars, Show) == 0x000000, "Member 'WIDGET_SubDetails_Ammo_C_ShowBars::Show' has a wrong offset!");

}


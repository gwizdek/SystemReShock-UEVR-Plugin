#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Focusable_Base

#include "Basic.hpp"

#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.ShouldFocusOnInteract
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_Focusable_Base_C_ShouldFocusOnInteract final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ACON_Hacker_C*                          HackerController;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFocusOnPuzzles_Result;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChannelingWithInteractable_Result;      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract) == 0x000008, "Wrong alignment on INTERACT_Focusable_Base_C_ShouldFocusOnInteract");
static_assert(sizeof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract) == 0x000058, "Wrong size on INTERACT_Focusable_Base_C_ShouldFocusOnInteract");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, Controller) == 0x000000, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::Controller' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, Result) == 0x000008, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, HackerPawn) == 0x000010, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, HackerController) == 0x000018, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::HackerController' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, K2Node_DynamicCast_AsCON_Hacker) == 0x000020, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000030, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, CallFunc_GetFocusOnPuzzles_Result) == 0x000038, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::CallFunc_GetFocusOnPuzzles_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000048, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, CallFunc_IsChannelingWithInteractable_Result) == 0x000051, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::CallFunc_IsChannelingWithInteractable_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, CallFunc_IsUsingGamepad_Result) == 0x000052, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::CallFunc_IsUsingGamepad_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_ShouldFocusOnInteract, CallFunc_BooleanOR_ReturnValue) == 0x000053, "Member 'INTERACT_Focusable_Base_C_ShouldFocusOnInteract::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.GetFocusWorldTransform
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_Focusable_Base_C_GetFocusWorldTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Focusable_Base_C_GetFocusWorldTransform) == 0x000010, "Wrong alignment on INTERACT_Focusable_Base_C_GetFocusWorldTransform");
static_assert(sizeof(INTERACT_Focusable_Base_C_GetFocusWorldTransform) == 0x000030, "Wrong size on INTERACT_Focusable_Base_C_GetFocusWorldTransform");
static_assert(offsetof(INTERACT_Focusable_Base_C_GetFocusWorldTransform, Transform) == 0x000000, "Member 'INTERACT_Focusable_Base_C_GetFocusWorldTransform::Transform' has a wrong offset!");

// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.BeginFocusSequence
// 0x0110 (0x0110 - 0x0000)
struct INTERACT_Focusable_Base_C_BeginFocusSequence final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponBase_C*                     EquippedWeapon;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetFocusWorldTransform_Transform;         // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible; // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterMoveControl_Result;               // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMOVECONTROL_FocusableInteract_C*       CallFunc_SpawnObject_ReturnValue;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponBase_C*                     CallFunc_GetEquippedWeapon_Weapon;                 // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0108(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Focusable_Base_C_BeginFocusSequence) == 0x000010, "Wrong alignment on INTERACT_Focusable_Base_C_BeginFocusSequence");
static_assert(sizeof(INTERACT_Focusable_Base_C_BeginFocusSequence) == 0x000110, "Wrong size on INTERACT_Focusable_Base_C_BeginFocusSequence");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, HackerPawn) == 0x000000, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, EquippedWeapon) == 0x000008, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::EquippedWeapon' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000024, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_BreakRotator_Roll_1) == 0x00003C, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_BreakRotator_Pitch_1) == 0x000040, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_BreakRotator_Yaw_1) == 0x000044, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000054, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_GetFocusWorldTransform_Transform) == 0x000060, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_GetFocusWorldTransform_Transform' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_BreakTransform_Location) == 0x000090, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_BreakTransform_Rotation) == 0x00009C, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x0000B8, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_BreakRotator_Roll_2) == 0x0000C4, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_BreakRotator_Pitch_2) == 0x0000C8, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_BreakRotator_Yaw_2) == 0x0000CC, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_GetNeuralHUD_Result) == 0x0000D0, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_MakeRotator_ReturnValue_1) == 0x0000D8, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible) == 0x0000E4, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E8, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_RegisterMoveControl_Result) == 0x0000F4, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_RegisterMoveControl_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_SpawnObject_ReturnValue) == 0x0000F8, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_GetEquippedWeapon_Weapon) == 0x000100, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_GetEquippedWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_BeginFocusSequence, CallFunc_GetInventory_Inventory) == 0x000108, "Member 'INTERACT_Focusable_Base_C_BeginFocusSequence::CallFunc_GetInventory_Inventory' has a wrong offset!");

// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.TryBeginFocusInteraction
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Focusable_Base_C_TryBeginFocusInteraction final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChannelingWithInteractable_Result;      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Focusable_Base_C_TryBeginFocusInteraction) == 0x000008, "Wrong alignment on INTERACT_Focusable_Base_C_TryBeginFocusInteraction");
static_assert(sizeof(INTERACT_Focusable_Base_C_TryBeginFocusInteraction) == 0x000018, "Wrong size on INTERACT_Focusable_Base_C_TryBeginFocusInteraction");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryBeginFocusInteraction, HackerPawn) == 0x000000, "Member 'INTERACT_Focusable_Base_C_TryBeginFocusInteraction::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryBeginFocusInteraction, CursorPrimitive) == 0x000008, "Member 'INTERACT_Focusable_Base_C_TryBeginFocusInteraction::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryBeginFocusInteraction, Result) == 0x000010, "Member 'INTERACT_Focusable_Base_C_TryBeginFocusInteraction::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryBeginFocusInteraction, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'INTERACT_Focusable_Base_C_TryBeginFocusInteraction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryBeginFocusInteraction, CallFunc_IsChannelingWithInteractable_Result) == 0x000012, "Member 'INTERACT_Focusable_Base_C_TryBeginFocusInteraction::CallFunc_IsChannelingWithInteractable_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryBeginFocusInteraction, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'INTERACT_Focusable_Base_C_TryBeginFocusInteraction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.TryFinishFocusInteraction
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Focusable_Base_C_TryFinishFocusInteraction final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Focusable_Base_C_TryFinishFocusInteraction) == 0x000008, "Wrong alignment on INTERACT_Focusable_Base_C_TryFinishFocusInteraction");
static_assert(sizeof(INTERACT_Focusable_Base_C_TryFinishFocusInteraction) == 0x000010, "Wrong size on INTERACT_Focusable_Base_C_TryFinishFocusInteraction");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryFinishFocusInteraction, HackerPawn) == 0x000000, "Member 'INTERACT_Focusable_Base_C_TryFinishFocusInteraction::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryFinishFocusInteraction, CallFunc_StopChanneling_Result) == 0x000008, "Member 'INTERACT_Focusable_Base_C_TryFinishFocusInteraction::CallFunc_StopChanneling_Result' has a wrong offset!");

// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.ResumeChannelingInteraction
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_Focusable_Base_C_ResumeChannelingInteraction final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Focusable_Base_C_ResumeChannelingInteraction) == 0x000008, "Wrong alignment on INTERACT_Focusable_Base_C_ResumeChannelingInteraction");
static_assert(sizeof(INTERACT_Focusable_Base_C_ResumeChannelingInteraction) == 0x000008, "Wrong size on INTERACT_Focusable_Base_C_ResumeChannelingInteraction");
static_assert(offsetof(INTERACT_Focusable_Base_C_ResumeChannelingInteraction, HackerPawn) == 0x000000, "Member 'INTERACT_Focusable_Base_C_ResumeChannelingInteraction::HackerPawn' has a wrong offset!");

// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.CycleFocusedPrimitiveComponent
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Focusable_Base_C_CycleFocusedPrimitiveComponent final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vertical;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Previous;                                          // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Focusable_Base_C_CycleFocusedPrimitiveComponent) == 0x000008, "Wrong alignment on INTERACT_Focusable_Base_C_CycleFocusedPrimitiveComponent");
static_assert(sizeof(INTERACT_Focusable_Base_C_CycleFocusedPrimitiveComponent) == 0x000010, "Wrong size on INTERACT_Focusable_Base_C_CycleFocusedPrimitiveComponent");
static_assert(offsetof(INTERACT_Focusable_Base_C_CycleFocusedPrimitiveComponent, CursorPrimitive) == 0x000000, "Member 'INTERACT_Focusable_Base_C_CycleFocusedPrimitiveComponent::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_CycleFocusedPrimitiveComponent, Vertical) == 0x000008, "Member 'INTERACT_Focusable_Base_C_CycleFocusedPrimitiveComponent::Vertical' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_CycleFocusedPrimitiveComponent, Previous) == 0x000009, "Member 'INTERACT_Focusable_Base_C_CycleFocusedPrimitiveComponent::Previous' has a wrong offset!");

// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.FocusOnPrimitiveComponent
// 0x00A8 (0x00A8 - 0x0000)
struct INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent final
{
public:
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraPanelWidget*                     CallFunc_GetCameraPanelWidget_Result;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0068(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent) == 0x000008, "Wrong alignment on INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent");
static_assert(sizeof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent) == 0x0000A8, "Wrong size on INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, PrimitiveComponent) == 0x000000, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::PrimitiveComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000018, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, K2Node_DynamicCast_AsINTERF_HUD) == 0x000030, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, CallFunc_GetCameraPanelWidget_Result) == 0x000048, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::CallFunc_GetCameraPanelWidget_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000050, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x00005C, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x000064, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, CallFunc_GetCachedGeometry_ReturnValue) == 0x000068, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent, CallFunc_LocalToAbsolute_ReturnValue) == 0x0000A0, "Member 'INTERACT_Focusable_Base_C_FocusOnPrimitiveComponent::CallFunc_LocalToAbsolute_ReturnValue' has a wrong offset!");

// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.StopFocusingInternal
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_Focusable_Base_C_StopFocusingInternal final
{
public:
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Focusable_Base_C_StopFocusingInternal) == 0x000008, "Wrong alignment on INTERACT_Focusable_Base_C_StopFocusingInternal");
static_assert(sizeof(INTERACT_Focusable_Base_C_StopFocusingInternal) == 0x000020, "Wrong size on INTERACT_Focusable_Base_C_StopFocusingInternal");
static_assert(offsetof(INTERACT_Focusable_Base_C_StopFocusingInternal, HackerPawn) == 0x000000, "Member 'INTERACT_Focusable_Base_C_StopFocusingInternal::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_StopFocusingInternal, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000008, "Member 'INTERACT_Focusable_Base_C_StopFocusingInternal::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_StopFocusingInternal, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'INTERACT_Focusable_Base_C_StopFocusingInternal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_StopFocusingInternal, CallFunc_GetNeuralHUD_Result) == 0x000018, "Member 'INTERACT_Focusable_Base_C_StopFocusingInternal::CallFunc_GetNeuralHUD_Result' has a wrong offset!");

// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.StopChanneling
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_Focusable_Base_C_StopChanneling final
{
public:
	class AActor*                                 NewChannelingInteract;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Focusable_Base_C_StopChanneling) == 0x000008, "Wrong alignment on INTERACT_Focusable_Base_C_StopChanneling");
static_assert(sizeof(INTERACT_Focusable_Base_C_StopChanneling) == 0x000020, "Wrong size on INTERACT_Focusable_Base_C_StopChanneling");
static_assert(offsetof(INTERACT_Focusable_Base_C_StopChanneling, NewChannelingInteract) == 0x000000, "Member 'INTERACT_Focusable_Base_C_StopChanneling::NewChannelingInteract' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_StopChanneling, Result) == 0x000008, "Member 'INTERACT_Focusable_Base_C_StopChanneling::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_StopChanneling, HackerPawn) == 0x000010, "Member 'INTERACT_Focusable_Base_C_StopChanneling::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_StopChanneling, CallFunc_StopChanneling_Result) == 0x000018, "Member 'INTERACT_Focusable_Base_C_StopChanneling::CallFunc_StopChanneling_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_StopChanneling, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'INTERACT_Focusable_Base_C_StopChanneling::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function INTERACT_Focusable_Base.INTERACT_Focusable_Base_C.TryInteract
// 0x01B0 (0x01B0 - 0x0000)
struct INTERACT_Focusable_Base_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesMovementAllowInteraction_Result;      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0058(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0078(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x0098(0x0020)(HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldFocusOnInteract_Result;             // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0xF];                                       // 0x00D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetFocusWorldTransform_Transform;         // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_3;        // 0x0110(0x0020)(HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_4;        // 0x0170(0x0020)(HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectPointOnToPlane_ReturnValue;        // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Focusable_Base_C_TryInteract) == 0x000010, "Wrong alignment on INTERACT_Focusable_Base_C_TryInteract");
static_assert(sizeof(INTERACT_Focusable_Base_C_TryInteract) == 0x0001B0, "Wrong size on INTERACT_Focusable_Base_C_TryInteract");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_Focusable_Base_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_Focusable_Base_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_Focusable_Base_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_Focusable_Base_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, HackerPawn) == 0x000038, "Member 'INTERACT_Focusable_Base_C_TryInteract::HackerPawn' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, Character) == 0x000040, "Member 'INTERACT_Focusable_Base_C_TryInteract::Character' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000048, "Member 'INTERACT_Focusable_Base_C_TryInteract::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'INTERACT_Focusable_Base_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CallFunc_DoesMovementAllowInteraction_Result) == 0x000051, "Member 'INTERACT_Focusable_Base_C_TryInteract::CallFunc_DoesMovementAllowInteraction_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000058, "Member 'INTERACT_Focusable_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000078, "Member 'INTERACT_Focusable_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x000098, "Member 'INTERACT_Focusable_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CallFunc_GetController_ReturnValue) == 0x0000B8, "Member 'INTERACT_Focusable_Base_C_TryInteract::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CallFunc_ShouldFocusOnInteract_Result) == 0x0000C0, "Member 'INTERACT_Focusable_Base_C_TryInteract::CallFunc_ShouldFocusOnInteract_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x0000C8, "Member 'INTERACT_Focusable_Base_C_TryInteract::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'INTERACT_Focusable_Base_C_TryInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CallFunc_GetFocusWorldTransform_Transform) == 0x0000E0, "Member 'INTERACT_Focusable_Base_C_TryInteract::CallFunc_GetFocusWorldTransform_Transform' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_3) == 0x000110, "Member 'INTERACT_Focusable_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CallFunc_BreakTransform_Location) == 0x000130, "Member 'INTERACT_Focusable_Base_C_TryInteract::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CallFunc_BreakTransform_Rotation) == 0x00013C, "Member 'INTERACT_Focusable_Base_C_TryInteract::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CallFunc_BreakTransform_Scale) == 0x000148, "Member 'INTERACT_Focusable_Base_C_TryInteract::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CallFunc_GetForwardVector_ReturnValue) == 0x000154, "Member 'INTERACT_Focusable_Base_C_TryInteract::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000160, "Member 'INTERACT_Focusable_Base_C_TryInteract::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_4) == 0x000170, "Member 'INTERACT_Focusable_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_4' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CallFunc_ProjectPointOnToPlane_ReturnValue) == 0x000190, "Member 'INTERACT_Focusable_Base_C_TryInteract::CallFunc_ProjectPointOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CallFunc_Vector_Distance_ReturnValue) == 0x00019C, "Member 'INTERACT_Focusable_Base_C_TryInteract::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Focusable_Base_C_TryInteract, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001A0, "Member 'INTERACT_Focusable_Base_C_TryInteract::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TRIGGER_MusicVolume

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"


namespace SDK::Params
{

// Function TRIGGER_MusicVolume.TRIGGER_MusicVolume_C.ExecuteUbergraph_TRIGGER_MusicVolume
// 0x00E0 (0x00E0 - 0x0000)
struct TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0040(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UGI_SinglePlayer_C*                     CallFunc_OnEnterVolume_OutGameInstance;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume) == 0x000008, "Wrong alignment on TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume");
static_assert(sizeof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume) == 0x0000E0, "Wrong size on TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, EntryPoint) == 0x000000, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000020, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, K2Node_ComponentBoundEvent_OtherActor) == 0x000028, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, K2Node_ComponentBoundEvent_OtherComp) == 0x000030, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000038, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, K2Node_ComponentBoundEvent_bFromSweep) == 0x00003C, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, K2Node_ComponentBoundEvent_SweepResult) == 0x000040, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, CallFunc_OnEnterVolume_OutGameInstance) == 0x0000C8, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::CallFunc_OnEnterVolume_OutGameInstance' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x0000D0, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume, CallFunc_Not_PreBool_ReturnValue) == 0x0000D9, "Member 'TRIGGER_MusicVolume_C_ExecuteUbergraph_TRIGGER_MusicVolume::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TRIGGER_MusicVolume.TRIGGER_MusicVolume_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'TRIGGER_MusicVolume_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function TRIGGER_MusicVolume.TRIGGER_MusicVolume_C.OnEnterVolume
// 0x0010 (0x0010 - 0x0000)
struct TRIGGER_MusicVolume_C_OnEnterVolume final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     OutGameInstance;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TRIGGER_MusicVolume_C_OnEnterVolume) == 0x000008, "Wrong alignment on TRIGGER_MusicVolume_C_OnEnterVolume");
static_assert(sizeof(TRIGGER_MusicVolume_C_OnEnterVolume) == 0x000010, "Wrong size on TRIGGER_MusicVolume_C_OnEnterVolume");
static_assert(offsetof(TRIGGER_MusicVolume_C_OnEnterVolume, GameInstance) == 0x000000, "Member 'TRIGGER_MusicVolume_C_OnEnterVolume::GameInstance' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_OnEnterVolume, OutGameInstance) == 0x000008, "Member 'TRIGGER_MusicVolume_C_OnEnterVolume::OutGameInstance' has a wrong offset!");

// Function TRIGGER_MusicVolume.TRIGGER_MusicVolume_C.ShouldSaveActor
// 0x0038 (0x0038 - 0x0000)
struct TRIGGER_MusicVolume_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          K2Node_MakeStruct_StreamingSaveGameActorParams;    // 0x0020(0x0018)()
};
static_assert(alignof(TRIGGER_MusicVolume_C_ShouldSaveActor) == 0x000008, "Wrong alignment on TRIGGER_MusicVolume_C_ShouldSaveActor");
static_assert(sizeof(TRIGGER_MusicVolume_C_ShouldSaveActor) == 0x000038, "Wrong size on TRIGGER_MusicVolume_C_ShouldSaveActor");
static_assert(offsetof(TRIGGER_MusicVolume_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'TRIGGER_MusicVolume_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'TRIGGER_MusicVolume_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ShouldSaveActor, K2Node_MakeStruct_StreamingSaveGameActorParams) == 0x000020, "Member 'TRIGGER_MusicVolume_C_ShouldSaveActor::K2Node_MakeStruct_StreamingSaveGameActorParams' has a wrong offset!");

// Function TRIGGER_MusicVolume.TRIGGER_MusicVolume_C.ReceivePendingBodyTransforms
// 0x0020 (0x0020 - 0x0000)
struct TRIGGER_MusicVolume_C_ReceivePendingBodyTransforms final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FTransform>                     BodyTransforms;                                    // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_MusicVolume_C_ReceivePendingBodyTransforms) == 0x000008, "Wrong alignment on TRIGGER_MusicVolume_C_ReceivePendingBodyTransforms");
static_assert(sizeof(TRIGGER_MusicVolume_C_ReceivePendingBodyTransforms) == 0x000020, "Wrong size on TRIGGER_MusicVolume_C_ReceivePendingBodyTransforms");
static_assert(offsetof(TRIGGER_MusicVolume_C_ReceivePendingBodyTransforms, SkeletalMeshComponent) == 0x000000, "Member 'TRIGGER_MusicVolume_C_ReceivePendingBodyTransforms::SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ReceivePendingBodyTransforms, BodyTransforms) == 0x000008, "Member 'TRIGGER_MusicVolume_C_ReceivePendingBodyTransforms::BodyTransforms' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ReceivePendingBodyTransforms, ReturnValue) == 0x000018, "Member 'TRIGGER_MusicVolume_C_ReceivePendingBodyTransforms::ReturnValue' has a wrong offset!");

// Function TRIGGER_MusicVolume.TRIGGER_MusicVolume_C.ReceivePendingCharacterVelocity
// 0x0010 (0x0010 - 0x0000)
struct TRIGGER_MusicVolume_C_ReceivePendingCharacterVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TRIGGER_MusicVolume_C_ReceivePendingCharacterVelocity) == 0x000004, "Wrong alignment on TRIGGER_MusicVolume_C_ReceivePendingCharacterVelocity");
static_assert(sizeof(TRIGGER_MusicVolume_C_ReceivePendingCharacterVelocity) == 0x000010, "Wrong size on TRIGGER_MusicVolume_C_ReceivePendingCharacterVelocity");
static_assert(offsetof(TRIGGER_MusicVolume_C_ReceivePendingCharacterVelocity, Velocity) == 0x000000, "Member 'TRIGGER_MusicVolume_C_ReceivePendingCharacterVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(TRIGGER_MusicVolume_C_ReceivePendingCharacterVelocity, ReturnValue) == 0x00000C, "Member 'TRIGGER_MusicVolume_C_ReceivePendingCharacterVelocity::ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_PowerStation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ENUM_PowerStationRechargeState_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ANIMBP_PowerStation.AnimBP_PowerStation_C
// 0x0440 (0x0700 - 0x02C0)
class UAnimBP_PowerStation_C final : public UAnimInstance
{
public:
	uint8                                         Pad_2B8[0x8];                                      // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02C8(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x02F8(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0340(0x00B0)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x03F0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0470(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x04F0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0570(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x05F0(0x0080)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0670(0x0080)()
	ENUM_PowerStationRechargeState                PowerStationRechargeState;                         // 0x06F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AnimBP_PowerStation(int32 EntryPoint);
	void SetRechargeState(ENUM_PowerStationRechargeState State);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_PowerStation_C">();
	}
	static class UAnimBP_PowerStation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_PowerStation_C>();
	}
};
static_assert(alignof(UAnimBP_PowerStation_C) == 0x000010, "Wrong alignment on UAnimBP_PowerStation_C");
static_assert(sizeof(UAnimBP_PowerStation_C) == 0x000700, "Wrong size on UAnimBP_PowerStation_C");
static_assert(offsetof(UAnimBP_PowerStation_C, UberGraphFrame) == 0x0002C0, "Member 'UAnimBP_PowerStation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_PowerStation_C, AnimGraphNode_Root) == 0x0002C8, "Member 'UAnimBP_PowerStation_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_PowerStation_C, AnimGraphNode_Slot) == 0x0002F8, "Member 'UAnimBP_PowerStation_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAnimBP_PowerStation_C, AnimGraphNode_BlendListByEnum) == 0x000340, "Member 'UAnimBP_PowerStation_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UAnimBP_PowerStation_C, AnimGraphNode_SequencePlayer_5) == 0x0003F0, "Member 'UAnimBP_PowerStation_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UAnimBP_PowerStation_C, AnimGraphNode_SequencePlayer_4) == 0x000470, "Member 'UAnimBP_PowerStation_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UAnimBP_PowerStation_C, AnimGraphNode_SequencePlayer_3) == 0x0004F0, "Member 'UAnimBP_PowerStation_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UAnimBP_PowerStation_C, AnimGraphNode_SequencePlayer_2) == 0x000570, "Member 'UAnimBP_PowerStation_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UAnimBP_PowerStation_C, AnimGraphNode_SequencePlayer_1) == 0x0005F0, "Member 'UAnimBP_PowerStation_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_PowerStation_C, AnimGraphNode_SequencePlayer) == 0x000670, "Member 'UAnimBP_PowerStation_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_PowerStation_C, PowerStationRechargeState) == 0x0006F0, "Member 'UAnimBP_PowerStation_C::PowerStationRechargeState' has a wrong offset!");

}


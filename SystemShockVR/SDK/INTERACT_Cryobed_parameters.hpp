#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Cryobed

#include "Basic.hpp"

#include "ENUM_DoorState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_Cryobed.INTERACT_Cryobed_C.ExecuteUbergraph_INTERACT_Cryobed
// 0x000C (0x000C - 0x0000)
struct INTERACT_Cryobed_C_ExecuteUbergraph_INTERACT_Cryobed final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Cryobed_C_ExecuteUbergraph_INTERACT_Cryobed) == 0x000004, "Wrong alignment on INTERACT_Cryobed_C_ExecuteUbergraph_INTERACT_Cryobed");
static_assert(sizeof(INTERACT_Cryobed_C_ExecuteUbergraph_INTERACT_Cryobed) == 0x00000C, "Wrong size on INTERACT_Cryobed_C_ExecuteUbergraph_INTERACT_Cryobed");
static_assert(offsetof(INTERACT_Cryobed_C_ExecuteUbergraph_INTERACT_Cryobed, EntryPoint) == 0x000000, "Member 'INTERACT_Cryobed_C_ExecuteUbergraph_INTERACT_Cryobed::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_ExecuteUbergraph_INTERACT_Cryobed, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'INTERACT_Cryobed_C_ExecuteUbergraph_INTERACT_Cryobed::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_ExecuteUbergraph_INTERACT_Cryobed, K2Node_ComponentBoundEvent_bVisibleState) == 0x000008, "Member 'INTERACT_Cryobed_C_ExecuteUbergraph_INTERACT_Cryobed::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");

// Function INTERACT_Cryobed.INTERACT_Cryobed_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Cryobed_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Cryobed_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_Cryobed_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_Cryobed_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_Cryobed_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_Cryobed_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_Cryobed_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_Cryobed.INTERACT_Cryobed_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_Cryobed_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Cryobed_C_ReceiveTick) == 0x000004, "Wrong alignment on INTERACT_Cryobed_C_ReceiveTick");
static_assert(sizeof(INTERACT_Cryobed_C_ReceiveTick) == 0x000004, "Wrong size on INTERACT_Cryobed_C_ReceiveTick");
static_assert(offsetof(INTERACT_Cryobed_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'INTERACT_Cryobed_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function INTERACT_Cryobed.INTERACT_Cryobed_C.SetState
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_Cryobed_C_SetState final
{
public:
	ENUM_DoorState                                NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Cryobed_C_SetState) == 0x000008, "Wrong alignment on INTERACT_Cryobed_C_SetState");
static_assert(sizeof(INTERACT_Cryobed_C_SetState) == 0x000028, "Wrong size on INTERACT_Cryobed_C_SetState");
static_assert(offsetof(INTERACT_Cryobed_C_SetState, NewState) == 0x000000, "Member 'INTERACT_Cryobed_C_SetState::NewState' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_SetState, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'INTERACT_Cryobed_C_SetState::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_SetState, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'INTERACT_Cryobed_C_SetState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_SetState, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_Cryobed_C_SetState::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_SetState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_Cryobed_C_SetState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_SetState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'INTERACT_Cryobed_C_SetState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_SetState, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000024, "Member 'INTERACT_Cryobed_C_SetState::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");

// Function INTERACT_Cryobed.INTERACT_Cryobed_C.UpdateState
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_Cryobed_C_UpdateState final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Cryobed_C_UpdateState) == 0x000008, "Wrong alignment on INTERACT_Cryobed_C_UpdateState");
static_assert(sizeof(INTERACT_Cryobed_C_UpdateState) == 0x000040, "Wrong size on INTERACT_Cryobed_C_UpdateState");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateState, Progress) == 0x000000, "Member 'INTERACT_Cryobed_C_UpdateState::Progress' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateState, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_Cryobed_C_UpdateState::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateState, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_Cryobed_C_UpdateState::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_Cryobed_C_UpdateState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateState, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'INTERACT_Cryobed_C_UpdateState::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateState, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'INTERACT_Cryobed_C_UpdateState::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateState, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00002C, "Member 'INTERACT_Cryobed_C_UpdateState::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateState, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'INTERACT_Cryobed_C_UpdateState::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateState, K2Node_SwitchEnum_CmpSuccess) == 0x000034, "Member 'INTERACT_Cryobed_C_UpdateState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateState, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'INTERACT_Cryobed_C_UpdateState::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateState, CallFunc_FClamp_ReturnValue) == 0x00003C, "Member 'INTERACT_Cryobed_C_UpdateState::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function INTERACT_Cryobed.INTERACT_Cryobed_C.UpdateBedPosition
// 0x00AC (0x00AC - 0x0000)
struct INTERACT_Cryobed_C_UpdateBedPosition final
{
public:
	ENUM_DoorState                                TargetState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Progress;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OpenedProgress;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0024(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(INTERACT_Cryobed_C_UpdateBedPosition) == 0x000004, "Wrong alignment on INTERACT_Cryobed_C_UpdateBedPosition");
static_assert(sizeof(INTERACT_Cryobed_C_UpdateBedPosition) == 0x0000AC, "Wrong size on INTERACT_Cryobed_C_UpdateBedPosition");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateBedPosition, TargetState) == 0x000000, "Member 'INTERACT_Cryobed_C_UpdateBedPosition::TargetState' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateBedPosition, Progress) == 0x000004, "Member 'INTERACT_Cryobed_C_UpdateBedPosition::Progress' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateBedPosition, OpenedProgress) == 0x000008, "Member 'INTERACT_Cryobed_C_UpdateBedPosition::OpenedProgress' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateBedPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Cryobed_C_UpdateBedPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateBedPosition, CallFunc_Ease_ReturnValue) == 0x000010, "Member 'INTERACT_Cryobed_C_UpdateBedPosition::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateBedPosition, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'INTERACT_Cryobed_C_UpdateBedPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateBedPosition, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'INTERACT_Cryobed_C_UpdateBedPosition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Cryobed_C_UpdateBedPosition, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000024, "Member 'INTERACT_Cryobed_C_UpdateBedPosition::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

}


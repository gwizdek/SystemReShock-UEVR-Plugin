#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Button

#include "Basic.hpp"

#include "INTERACT_Button_classes.hpp"
#include "INTERACT_Button_parameters.hpp"


namespace SDK
{

// Function INTERACT_Button.INTERACT_Button_C.ExecuteUbergraph_INTERACT_Button
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Button_C::ExecuteUbergraph_INTERACT_Button(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "ExecuteUbergraph_INTERACT_Button");

	Params::INTERACT_Button_C_ExecuteUbergraph_INTERACT_Button Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Button.INTERACT_Button_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_C::BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");

	Params::INTERACT_Button_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Button.INTERACT_Button_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button.INTERACT_Button_C.GetTargetShape
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              CursorPrimitive                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UShapeComponent*                  ShapeComponent                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Button_C::GetTargetShape(class UPrimitiveComponent* CursorPrimitive, class UShapeComponent** ShapeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "GetTargetShape");

	Params::INTERACT_Button_C_GetTargetShape Parms{};

	Parms.CursorPrimitive = CursorPrimitive;

	UObject::ProcessEvent(Func, &Parms);

	if (ShapeComponent != nullptr)
		*ShapeComponent = Parms.ShapeComponent;
}


// Function INTERACT_Button.INTERACT_Button_C.OnBrokenInteraction
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_C::OnBrokenInteraction(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "OnBrokenInteraction");

	Params::INTERACT_Button_C_OnBrokenInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button.INTERACT_Button_C.InitializeButtonState
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_C::InitializeButtonState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "InitializeButtonState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button.INTERACT_Button_C.SetButtonMeshColor
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Button_C::SetButtonMeshColor(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "SetButtonMeshColor");

	Params::INTERACT_Button_C_SetButtonMeshColor Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Button.INTERACT_Button_C.UpdateButtonColor
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_C::UpdateButtonColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "UpdateButtonColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button.INTERACT_Button_C.StartButtonPulse
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_C::StartButtonPulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "StartButtonPulse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button.INTERACT_Button_C.TickButtonPulse
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_C::TickButtonPulse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "TickButtonPulse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button.INTERACT_Button_C.OnLockedInteraction
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_C::OnLockedInteraction(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "OnLockedInteraction");

	Params::INTERACT_Button_C_OnLockedInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function INTERACT_Button.INTERACT_Button_C.TryUpdateRetriggerTimer
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_C::TryUpdateRetriggerTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "TryUpdateRetriggerTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button.INTERACT_Button_C.EVENT_OnRetriggerButton
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_C::EVENT_OnRetriggerButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "EVENT_OnRetriggerButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button.INTERACT_Button_C.GetInteractBusy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             BusyMessage                                            (Parm, OutParm)

void AINTERACT_Button_C::GetInteractBusy(bool* Result, class FText* BusyMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "GetInteractBusy");

	Params::INTERACT_Button_C_GetInteractBusy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (BusyMessage != nullptr)
		*BusyMessage = std::move(Parms.BusyMessage);
}


// Function INTERACT_Button.INTERACT_Button_C.UpdateButtonVisibility
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibilityState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AINTERACT_Button_C::UpdateButtonVisibility(bool VisibilityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "UpdateButtonVisibility");

	Params::INTERACT_Button_C_UpdateButtonVisibility Parms{};

	Parms.VisibilityState = VisibilityState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Button.INTERACT_Button_C.OnInteractSuccess
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           SourceActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AINTERACT_Button_C::OnInteractSuccess(class AActor* SourceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "OnInteractSuccess");

	Params::INTERACT_Button_C_OnInteractSuccess Parms{};

	Parms.SourceActor = SourceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function INTERACT_Button.INTERACT_Button_C.OnTargetLockStateChanged
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_C::OnTargetLockStateChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "OnTargetLockStateChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function INTERACT_Button.INTERACT_Button_C.OnButtonBecameDysfunctional
// (Protected, BlueprintCallable, BlueprintEvent)

void AINTERACT_Button_C::OnButtonBecameDysfunctional()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERACT_Button_C", "OnButtonBecameDysfunctional");

	UObject::ProcessEvent(Func, nullptr);
}

}


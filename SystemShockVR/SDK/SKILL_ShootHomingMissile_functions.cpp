#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SKILL_ShootHomingMissile

#include "Basic.hpp"

#include "SKILL_ShootHomingMissile_classes.hpp"
#include "SKILL_ShootHomingMissile_parameters.hpp"


namespace SDK
{

// Function SKILL_ShootHomingMissile.SKILL_ShootHomingMissile_C.LaunchProjectile
// (Protected, BlueprintCallable, BlueprintEvent)

void USKILL_ShootHomingMissile_C::LaunchProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_ShootHomingMissile_C", "LaunchProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SKILL_ShootHomingMissile.SKILL_ShootHomingMissile_C.OnProjectileLaunched
// (Protected, BlueprintCallable, BlueprintEvent)

void USKILL_ShootHomingMissile_C::OnProjectileLaunched()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_ShootHomingMissile_C", "OnProjectileLaunched");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SKILL_ShootHomingMissile.SKILL_ShootHomingMissile_C.OnAttachProjectileToBarrel
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BarrelSocketName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_ShootHomingMissile_C::OnAttachProjectileToBarrel(class FName BarrelSocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_ShootHomingMissile_C", "OnAttachProjectileToBarrel");

	Params::SKILL_ShootHomingMissile_C_OnAttachProjectileToBarrel Parms{};

	Parms.BarrelSocketName = BarrelSocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SKILL_ShootHomingMissile.SKILL_ShootHomingMissile_C.GetBarrelTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             BarrelName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor)

void USKILL_ShootHomingMissile_C::GetBarrelTransform(class FName BarrelName, struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_ShootHomingMissile_C", "GetBarrelTransform");

	Params::SKILL_ShootHomingMissile_C_GetBarrelTransform Parms{};

	Parms.BarrelName = BarrelName;

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function SKILL_ShootHomingMissile.SKILL_ShootHomingMissile_C.OnCycleBarrel
// (Protected, BlueprintCallable, BlueprintEvent)

void USKILL_ShootHomingMissile_C::OnCycleBarrel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_ShootHomingMissile_C", "OnCycleBarrel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SKILL_ShootHomingMissile.SKILL_ShootHomingMissile_C.GetPortOffsetFromIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PortIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_ShootHomingMissile_C::GetPortOffsetFromIndex(int32 PortIndex, struct FVector2D* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_ShootHomingMissile_C", "GetPortOffsetFromIndex");

	Params::SKILL_ShootHomingMissile_C_GetPortOffsetFromIndex Parms{};

	Parms.PortIndex = PortIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}

}


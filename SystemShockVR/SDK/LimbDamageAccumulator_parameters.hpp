#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LimbDamageAccumulator

#include "Basic.hpp"

#include "STRUCT_LimbDamageTimestamp_structs.hpp"


namespace SDK::Params
{

// Function LimbDamageAccumulator.LimbDamageAccumulator_C.AddDamageInstance
// 0x0064 (0x0064 - 0x0000)
struct LimbDamageAccumulator_C_AddDamageInstance final
{
public:
	int32                                         DamageValue;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTime;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NetDamage;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScaledDamageValue;                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalDamage;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_LimbDamageTimestamp            K2Node_MakeStruct_STRUCT_LimbDamageTimestamp;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_LimbDamageTimestamp            CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LimbDamageAccumulator_C_AddDamageInstance) == 0x000004, "Wrong alignment on LimbDamageAccumulator_C_AddDamageInstance");
static_assert(sizeof(LimbDamageAccumulator_C_AddDamageInstance) == 0x000064, "Wrong size on LimbDamageAccumulator_C_AddDamageInstance");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, DamageValue) == 0x000000, "Member 'LimbDamageAccumulator_C_AddDamageInstance::DamageValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CurrentTime) == 0x000004, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CurrentTime' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, NetDamage) == 0x000008, "Member 'LimbDamageAccumulator_C_AddDamageInstance::NetDamage' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, ScaledDamageValue) == 0x00000C, "Member 'LimbDamageAccumulator_C_AddDamageInstance::ScaledDamageValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, TotalDamage) == 0x000010, "Member 'LimbDamageAccumulator_C_AddDamageInstance::TotalDamage' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, Temp_int_Array_Index_Variable) == 0x000014, "Member 'LimbDamageAccumulator_C_AddDamageInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'LimbDamageAccumulator_C_AddDamageInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Lerp_ReturnValue) == 0x000034, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000038, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Round_ReturnValue) == 0x00003C, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Max_ReturnValue) == 0x000044, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, K2Node_MakeStruct_STRUCT_LimbDamageTimestamp) == 0x000048, "Member 'LimbDamageAccumulator_C_AddDamageInstance::K2Node_MakeStruct_STRUCT_LimbDamageTimestamp' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Array_Get_Item) == 0x000050, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_AddDamageInstance, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'LimbDamageAccumulator_C_AddDamageInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function LimbDamageAccumulator.LimbDamageAccumulator_C.RemoveDamageAmount
// 0x0048 (0x0048 - 0x0000)
struct LimbDamageAccumulator_C_RemoveDamageAmount final
{
public:
	int32                                         DamageAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InstanceDamage;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InstanceIndex;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageRemaining;                                   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LimbDamageTimestamp            CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_LimbDamageTimestamp            K2Node_MakeStruct_STRUCT_LimbDamageTimestamp;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LimbDamageAccumulator_C_RemoveDamageAmount) == 0x000004, "Wrong alignment on LimbDamageAccumulator_C_RemoveDamageAmount");
static_assert(sizeof(LimbDamageAccumulator_C_RemoveDamageAmount) == 0x000048, "Wrong size on LimbDamageAccumulator_C_RemoveDamageAmount");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, DamageAmount) == 0x000000, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::DamageAmount' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, InstanceDamage) == 0x000004, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::InstanceDamage' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, InstanceIndex) == 0x000008, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::InstanceIndex' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, DamageRemaining) == 0x00000C, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::DamageRemaining' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, Temp_int_Array_Index_Variable) == 0x000010, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001D, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000024, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000028, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, CallFunc_Array_Get_Item) == 0x00002C, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, K2Node_MakeStruct_STRUCT_LimbDamageTimestamp) == 0x000038, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::K2Node_MakeStruct_STRUCT_LimbDamageTimestamp' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000040, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemoveDamageAmount, CallFunc_Max_ReturnValue) == 0x000044, "Member 'LimbDamageAccumulator_C_RemoveDamageAmount::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function LimbDamageAccumulator.LimbDamageAccumulator_C.RemovedExpiredDamageInstances
// 0x0034 (0x0034 - 0x0000)
struct LimbDamageAccumulator_C_RemovedExpiredDamageInstances final
{
public:
	float                                         CurrentTimestamp;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageIndex;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LimbDamageTimestamp            CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances) == 0x000004, "Wrong alignment on LimbDamageAccumulator_C_RemovedExpiredDamageInstances");
static_assert(sizeof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances) == 0x000034, "Wrong size on LimbDamageAccumulator_C_RemovedExpiredDamageInstances");
static_assert(offsetof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances, CurrentTimestamp) == 0x000000, "Member 'LimbDamageAccumulator_C_RemovedExpiredDamageInstances::CurrentTimestamp' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances, DamageIndex) == 0x000004, "Member 'LimbDamageAccumulator_C_RemovedExpiredDamageInstances::DamageIndex' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances, Temp_int_Array_Index_Variable) == 0x000008, "Member 'LimbDamageAccumulator_C_RemovedExpiredDamageInstances::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'LimbDamageAccumulator_C_RemovedExpiredDamageInstances::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'LimbDamageAccumulator_C_RemovedExpiredDamageInstances::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'LimbDamageAccumulator_C_RemovedExpiredDamageInstances::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances, CallFunc_Array_Get_Item) == 0x000018, "Member 'LimbDamageAccumulator_C_RemovedExpiredDamageInstances::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'LimbDamageAccumulator_C_RemovedExpiredDamageInstances::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000024, "Member 'LimbDamageAccumulator_C_RemovedExpiredDamageInstances::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'LimbDamageAccumulator_C_RemovedExpiredDamageInstances::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances, CallFunc_Max_ReturnValue) == 0x00002C, "Member 'LimbDamageAccumulator_C_RemovedExpiredDamageInstances::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(LimbDamageAccumulator_C_RemovedExpiredDamageInstances, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'LimbDamageAccumulator_C_RemovedExpiredDamageInstances::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}


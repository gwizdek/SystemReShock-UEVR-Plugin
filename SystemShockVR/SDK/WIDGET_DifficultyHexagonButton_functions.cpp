#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_DifficultyHexagonButton

#include "Basic.hpp"

#include "WIDGET_DifficultyHexagonButton_classes.hpp"
#include "WIDGET_DifficultyHexagonButton_parameters.hpp"


namespace SDK
{

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.OnSelectNewDifficulty__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   IndexInList_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_DifficultyHexagonButton_C::OnSelectNewDifficulty__DelegateSignature(int32 IndexInList_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "OnSelectNewDifficulty__DelegateSignature");

	Params::WIDGET_DifficultyHexagonButton_C_OnSelectNewDifficulty__DelegateSignature Parms{};

	Parms.IndexInList_0 = IndexInList_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.ExecuteUbergraph_WIDGET_DifficultyHexagonButton
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_DifficultyHexagonButton_C::ExecuteUbergraph_WIDGET_DifficultyHexagonButton(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "ExecuteUbergraph_WIDGET_DifficultyHexagonButton");

	Params::WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWIDGET_DifficultyHexagonButton_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_DifficultyHexagonButton_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "PreConstruct");

	Params::WIDGET_DifficultyHexagonButton_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SelectedHandler
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_DifficultyHexagonButton_C::SelectedHandler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "SelectedHandler");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SetSelected
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Selected_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_DifficultyHexagonButton_C::SetSelected(bool Selected_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "SetSelected");

	Params::WIDGET_DifficultyHexagonButton_C_SetSelected Parms{};

	Parms.Selected_0 = Selected_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SetHighlighted
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Highlighted_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_DifficultyHexagonButton_C::SetHighlighted(bool Highlighted_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "SetHighlighted");

	Params::WIDGET_DifficultyHexagonButton_C_SetHighlighted Parms{};

	Parms.Highlighted_0 = Highlighted_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.HighlightedHandler
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_DifficultyHexagonButton_C::HighlightedHandler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "HighlightedHandler");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.EVENT_MouseDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWIDGET_DifficultyHexagonButton_C::EVENT_MouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "EVENT_MouseDown");

	Params::WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SetDisabled
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Disabled_0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_DifficultyHexagonButton_C::SetDisabled(bool Disabled_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "SetDisabled");

	Params::WIDGET_DifficultyHexagonButton_C_SetDisabled Parms{};

	Parms.Disabled_0 = Disabled_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.OnDisabled
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_DifficultyHexagonButton_C::OnDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "OnDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.EVENT_MouseEnter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWIDGET_DifficultyHexagonButton_C::EVENT_MouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "EVENT_MouseEnter");

	Params::WIDGET_DifficultyHexagonButton_C_EVENT_MouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SetHovered
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hovered_0                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_DifficultyHexagonButton_C::SetHovered(bool Hovered_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "SetHovered");

	Params::WIDGET_DifficultyHexagonButton_C_SetHovered Parms{};

	Parms.Hovered_0 = Hovered_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.HoveredHandler
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_DifficultyHexagonButton_C::HoveredHandler()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "HoveredHandler");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.EVENT_MouseExit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWIDGET_DifficultyHexagonButton_C::EVENT_MouseExit(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "EVENT_MouseExit");

	Params::WIDGET_DifficultyHexagonButton_C_EVENT_MouseExit Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SetIndexInList
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   DifficultyHexIndex                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_DifficultyHexagonButton_C::SetIndexInList(int32 DifficultyHexIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "SetIndexInList");

	Params::WIDGET_DifficultyHexagonButton_C_SetIndexInList Parms{};

	Parms.DifficultyHexIndex = DifficultyHexIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SetVolumeMultiplier
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_DifficultyHexagonButton_C::SetVolumeMultiplier(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "SetVolumeMultiplier");

	Params::WIDGET_DifficultyHexagonButton_C_SetVolumeMultiplier Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.UpdateNumber
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Number                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWIDGET_DifficultyHexagonButton_C::UpdateNumber(const class FText& Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_DifficultyHexagonButton_C", "UpdateNumber");

	Params::WIDGET_DifficultyHexagonButton_C_UpdateNumber Parms{};

	Parms.Number = std::move(Number);

	UObject::ProcessEvent(Func, &Parms);
}

}


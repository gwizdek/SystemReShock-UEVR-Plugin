#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_ComputerNodeMonitor

#include "Basic.hpp"

#include "ENUM_InteractionType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.ExecuteUbergraph_INTERACT_ComputerNodeMonitor
// 0x000C (0x000C - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldUpdateDigit_Result;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor) == 0x000004, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor) == 0x00000C, "Wrong size on INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor, EntryPoint) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor, CallFunc_ShouldUpdateDigit_Result) == 0x000008, "Member 'INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor::CallFunc_ShouldUpdateDigit_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor, K2Node_ComponentBoundEvent_bVisibleState) == 0x000009, "Member 'INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor, CallFunc_Greater_IntInt_ReturnValue) == 0x00000A, "Member 'INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00000B, "Member 'INTERACT_ComputerNodeMonitor_C_ExecuteUbergraph_INTERACT_ComputerNodeMonitor::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_ComputerNodeMonitor_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_ReceiveTick) == 0x000004, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_ReceiveTick");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_ReceiveTick) == 0x000004, "Wrong size on INTERACT_ComputerNodeMonitor_C_ReceiveTick");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.EVENT_OnPylonDestroyed
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_EVENT_OnPylonDestroyed final
{
public:
	int32                                         RemainingNodes;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_EVENT_OnPylonDestroyed) == 0x000004, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_EVENT_OnPylonDestroyed");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_EVENT_OnPylonDestroyed) == 0x000008, "Wrong size on INTERACT_ComputerNodeMonitor_C_EVENT_OnPylonDestroyed");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_EVENT_OnPylonDestroyed, RemainingNodes) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_EVENT_OnPylonDestroyed::RemainingNodes' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_EVENT_OnPylonDestroyed, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'INTERACT_ComputerNodeMonitor_C_EVENT_OnPylonDestroyed::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.InitializePylonTracking
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_InitializePylonTracking final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetComputerNodesForCurrentLevel_RemainingNodes; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 NodesRemaining)>         K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_InitializePylonTracking) == 0x000008, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_InitializePylonTracking");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_InitializePylonTracking) == 0x000038, "Wrong size on INTERACT_ComputerNodeMonitor_C_InitializePylonTracking");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_InitializePylonTracking, GameInstance) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_InitializePylonTracking::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_InitializePylonTracking, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'INTERACT_ComputerNodeMonitor_C_InitializePylonTracking::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_InitializePylonTracking, CallFunc_GetComputerNodesForCurrentLevel_RemainingNodes) == 0x00000C, "Member 'INTERACT_ComputerNodeMonitor_C_InitializePylonTracking::CallFunc_GetComputerNodesForCurrentLevel_RemainingNodes' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_InitializePylonTracking, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'INTERACT_ComputerNodeMonitor_C_InitializePylonTracking::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_InitializePylonTracking, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'INTERACT_ComputerNodeMonitor_C_InitializePylonTracking::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_InitializePylonTracking, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'INTERACT_ComputerNodeMonitor_C_InitializePylonTracking::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_InitializePylonTracking, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_ComputerNodeMonitor_C_InitializePylonTracking::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.UpdateDisplayDigit
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit final
{
public:
	bool                                          FinalValue;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DisplayDigit;                                      // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDestructionCodeDigitForCurrentLevel_Result; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit) == 0x000008, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit) == 0x000030, "Wrong size on INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit, FinalValue) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit::FinalValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit, DisplayDigit) == 0x000004, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit::DisplayDigit' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit, CallFunc_GetDestructionCodeDigitForCurrentLevel_Result) == 0x00001C, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit::CallFunc_GetDestructionCodeDigitForCurrentLevel_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000024, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000028, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateDisplayDigit::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.UpdateEmissiveColor
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor) == 0x000010, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor) == 0x000040, "Wrong size on INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor, State) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor::State' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor, Temp_bool_Variable) == 0x000001, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor, K2Node_Select_Default) == 0x000004, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor, CallFunc_BreakColor_R) == 0x000014, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor, CallFunc_BreakColor_G) == 0x000018, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor, CallFunc_BreakColor_B) == 0x00001C, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor, CallFunc_BreakColor_A) == 0x000020, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor, CallFunc_MakeVector4_ReturnValue) == 0x000030, "Member 'INTERACT_ComputerNodeMonitor_C_UpdateEmissiveColor::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.GetAcquireDigitQuestName
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName final
{
public:
	class FName                                   Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         QuestIndex;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCurrentLevelName_Result;               // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDeckNumberByLevelName_Result;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName) == 0x000008, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName) == 0x000038, "Wrong size on INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName, Result) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName, QuestIndex) == 0x000008, "Member 'INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName::QuestIndex' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000C, "Member 'INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName, CallFunc_GetCurrentLevelName_Result) == 0x000024, "Member 'INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName::CallFunc_GetCurrentLevelName_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName, CallFunc_GetDeckNumberByLevelName_Result) == 0x00002C, "Member 'INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName::CallFunc_GetDeckNumberByLevelName_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'INTERACT_ComputerNodeMonitor_C_GetAcquireDigitQuestName::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.HasAcquiredCurrentDigit
// 0x0030 (0x0030 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   QuestName;                                         // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAcquireDigitQuestName_Result;          // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit) == 0x000008, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit) == 0x000030, "Wrong size on INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit, Result) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit, QuestName) == 0x000004, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit::QuestName' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit, CallFunc_NotEqual_NameName_ReturnValue) == 0x00000C, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit, CallFunc_GetAcquireDigitQuestName_Result) == 0x000024, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit::CallFunc_GetAcquireDigitQuestName_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit, CallFunc_HasCompletedStoryQuest_Completed) == 0x00002C, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredCurrentDigit::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.HasAcquiredAllDigits
// 0x0050 (0x0050 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0038(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits) == 0x000008, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits) == 0x000050, "Wrong size on INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, Result) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, GameInstance) == 0x000008, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, Temp_int_Array_Index_Variable) == 0x000010, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, CallFunc_Array_Get_Item) == 0x000038, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, CallFunc_HasCompletedStoryQuest_Completed) == 0x00004C, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, CallFunc_Less_IntInt_ReturnValue) == 0x00004D, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits, CallFunc_Not_PreBool_ReturnValue) == 0x00004E, "Member 'INTERACT_ComputerNodeMonitor_C_HasAcquiredAllDigits::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.ShouldUpdateDigit
// 0x002C (0x002C - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit) == 0x000004, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit) == 0x00002C, "Wrong size on INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, Result) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000001, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000008, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000014, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000018, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x00001C, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000020, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, CallFunc_Lerp_ReturnValue) == 0x000024, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'INTERACT_ComputerNodeMonitor_C_ShouldUpdateDigit::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.SetDisplayDigit
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_SetDisplayDigit final
{
public:
	int32                                         NewDigit;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinalValue;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_SetDisplayDigit) == 0x000004, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_SetDisplayDigit");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_SetDisplayDigit) == 0x000010, "Wrong size on INTERACT_ComputerNodeMonitor_C_SetDisplayDigit");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_SetDisplayDigit, NewDigit) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_SetDisplayDigit::NewDigit' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_SetDisplayDigit, FinalValue) == 0x000004, "Member 'INTERACT_ComputerNodeMonitor_C_SetDisplayDigit::FinalValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_SetDisplayDigit, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000008, "Member 'INTERACT_ComputerNodeMonitor_C_SetDisplayDigit::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_SetDisplayDigit, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_ComputerNodeMonitor_C_SetDisplayDigit::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.TryInteract
// 0x0080 (0x0080 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0038(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0058(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_TryAcquireDigit_Result;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_TryInteract");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_TryInteract) == 0x000080, "Wrong size on INTERACT_ComputerNodeMonitor_C_TryInteract");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_ComputerNodeMonitor_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_ComputerNodeMonitor_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_ComputerNodeMonitor_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000038, "Member 'INTERACT_ComputerNodeMonitor_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000058, "Member 'INTERACT_ComputerNodeMonitor_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryInteract, CallFunc_TryAcquireDigit_Result) == 0x000078, "Member 'INTERACT_ComputerNodeMonitor_C_TryInteract::CallFunc_TryAcquireDigit_Result' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAcquiredCurrentDigit_Result;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_GetTargetShape");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_GetTargetShape) == 0x000018, "Wrong size on INTERACT_ComputerNodeMonitor_C_GetTargetShape");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_ComputerNodeMonitor_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetTargetShape, CallFunc_HasAcquiredCurrentDigit_Result) == 0x000010, "Member 'INTERACT_ComputerNodeMonitor_C_GetTargetShape::CallFunc_HasAcquiredCurrentDigit_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetTargetShape, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000011, "Member 'INTERACT_ComputerNodeMonitor_C_GetTargetShape::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_GetTargetShape, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'INTERACT_ComputerNodeMonitor_C_GetTargetShape::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_ComputerNodeMonitor.INTERACT_ComputerNodeMonitor_C.TryAcquireDigit
// 0x0060 (0x0060 - 0x0000)
struct INTERACT_ComputerNodeMonitor_C_TryAcquireDigit final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAcquiredAllDigits_Result;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SetCompletedStoryQuest_LogString;         // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetAcquireDigitQuestName_Result;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SetCompletedStoryQuest_LogString_1;       // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAcquiredCurrentDigit_Result;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit) == 0x000008, "Wrong alignment on INTERACT_ComputerNodeMonitor_C_TryAcquireDigit");
static_assert(sizeof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit) == 0x000060, "Wrong size on INTERACT_ComputerNodeMonitor_C_TryAcquireDigit");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit, Result) == 0x000000, "Member 'INTERACT_ComputerNodeMonitor_C_TryAcquireDigit::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit, GameInstance) == 0x000008, "Member 'INTERACT_ComputerNodeMonitor_C_TryAcquireDigit::GameInstance' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit, CallFunc_HasAcquiredAllDigits_Result) == 0x000010, "Member 'INTERACT_ComputerNodeMonitor_C_TryAcquireDigit::CallFunc_HasAcquiredAllDigits_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit, CallFunc_SetCompletedStoryQuest_LogString) == 0x000018, "Member 'INTERACT_ComputerNodeMonitor_C_TryAcquireDigit::CallFunc_SetCompletedStoryQuest_LogString' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit, CallFunc_GetAcquireDigitQuestName_Result) == 0x000028, "Member 'INTERACT_ComputerNodeMonitor_C_TryAcquireDigit::CallFunc_GetAcquireDigitQuestName_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit, CallFunc_SetCompletedStoryQuest_LogString_1) == 0x000030, "Member 'INTERACT_ComputerNodeMonitor_C_TryAcquireDigit::CallFunc_SetCompletedStoryQuest_LogString_1' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit, CallFunc_HasAcquiredCurrentDigit_Result) == 0x000040, "Member 'INTERACT_ComputerNodeMonitor_C_TryAcquireDigit::CallFunc_HasAcquiredCurrentDigit_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'INTERACT_ComputerNodeMonitor_C_TryAcquireDigit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000042, "Member 'INTERACT_ComputerNodeMonitor_C_TryAcquireDigit::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'INTERACT_ComputerNodeMonitor_C_TryAcquireDigit::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit, K2Node_DynamicCast_AsGI_Single_Player) == 0x000050, "Member 'INTERACT_ComputerNodeMonitor_C_TryAcquireDigit::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_ComputerNodeMonitor_C_TryAcquireDigit, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'INTERACT_ComputerNodeMonitor_C_TryAcquireDigit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_VoxelCullableNavAgent

#include "Basic.hpp"

#include "COMP_VoxelCullableNavAgent_classes.hpp"
#include "COMP_VoxelCullableNavAgent_parameters.hpp"


namespace SDK
{

// Function COMP_VoxelCullableNavAgent.COMP_VoxelCullableNavAgent_C.GetVoxelLevelManager
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UVoxelLevelManager*               ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class UVoxelLevelManager* UCOMP_VoxelCullableNavAgent_C::GetVoxelLevelManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_VoxelCullableNavAgent_C", "GetVoxelLevelManager");

	Params::COMP_VoxelCullableNavAgent_C_GetVoxelLevelManager Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function COMP_VoxelCullableNavAgent.COMP_VoxelCullableNavAgent_C.OnOverlapHazardLevelChanged
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// uint8                                   HazardType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   HazardLevel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UCOMP_VoxelCullableNavAgent_C::OnOverlapHazardLevelChanged(uint8 HazardType, uint8 HazardLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_VoxelCullableNavAgent_C", "OnOverlapHazardLevelChanged");

	Params::COMP_VoxelCullableNavAgent_C_OnOverlapHazardLevelChanged Parms{};

	Parms.HazardType = HazardType;
	Parms.HazardLevel = HazardLevel;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


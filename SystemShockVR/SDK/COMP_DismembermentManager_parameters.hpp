#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_DismembermentManager

#include "Basic.hpp"

#include "STRUCT_DynaDamageElement_structs.hpp"
#include "STRUCT_ImpactParams_structs.hpp"
#include "ENUM_LimbStrength_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "STRUCT_LimbSpawnEffect_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_DismemberableLimb_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "STRUCT_LimbStrengthSettings_structs.hpp"
#include "STRUCT_AnimatedLimb_structs.hpp"


namespace SDK::Params
{

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.OnLimbDismembered__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature final
{
public:
	class FName                                   LimbName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              LimbData;                                          // 0x0008(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              LimbActor;                                         // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnBeginPlay;                                       // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature");
static_assert(sizeof(COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature) == 0x0000B0, "Wrong size on COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature");
static_assert(offsetof(COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature, LimbName) == 0x000000, "Member 'COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature::LimbName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature, LimbData) == 0x000008, "Member 'COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature::LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature, LimbActor) == 0x0000A0, "Member 'COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature::LimbActor' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature, OnBeginPlay) == 0x0000A8, "Member 'COMP_DismembermentManager_C_OnLimbDismembered__DelegateSignature::OnBeginPlay' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.OnDynaDamage__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct COMP_DismembermentManager_C_OnDynaDamage__DelegateSignature final
{
public:
	class FName                                   DynaElementName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnBeginPlay;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_OnDynaDamage__DelegateSignature) == 0x000004, "Wrong alignment on COMP_DismembermentManager_C_OnDynaDamage__DelegateSignature");
static_assert(sizeof(COMP_DismembermentManager_C_OnDynaDamage__DelegateSignature) == 0x00000C, "Wrong size on COMP_DismembermentManager_C_OnDynaDamage__DelegateSignature");
static_assert(offsetof(COMP_DismembermentManager_C_OnDynaDamage__DelegateSignature, DynaElementName) == 0x000000, "Member 'COMP_DismembermentManager_C_OnDynaDamage__DelegateSignature::DynaElementName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_OnDynaDamage__DelegateSignature, OnBeginPlay) == 0x000008, "Member 'COMP_DismembermentManager_C_OnDynaDamage__DelegateSignature::OnBeginPlay' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.ExecuteUbergraph_COMP_DismembermentManager
// 0x00F8 (0x00F8 - 0x0000)
struct COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_LimbName;                       // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              K2Node_CustomEvent_LimbData;                       // 0x0020(0x0098)(ConstParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_1;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E3[0x5];                                       // 0x00E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager");
static_assert(sizeof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager) == 0x0000F8, "Wrong size on COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, EntryPoint) == 0x000000, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, K2Node_CustomEvent_LimbName) == 0x000014, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::K2Node_CustomEvent_LimbName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, K2Node_CustomEvent_LimbData) == 0x000020, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::K2Node_CustomEvent_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, Temp_object_Variable) == 0x0000B8, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000C0, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x0000C8, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, K2Node_DynamicCast_AsSkeletal_Mesh_1) == 0x0000D8, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::K2Node_DynamicCast_AsSkeletal_Mesh_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, CallFunc_IsValid_ReturnValue) == 0x0000E1, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, CallFunc_Not_PreBool_ReturnValue) == 0x0000E2, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, K2Node_CustomEvent_Loaded) == 0x0000E8, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager, K2Node_Event_DeltaSeconds) == 0x0000F0, "Member 'COMP_DismembermentManager_C_ExecuteUbergraph_COMP_DismembermentManager::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct COMP_DismembermentManager_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_ReceiveTick) == 0x000004, "Wrong alignment on COMP_DismembermentManager_C_ReceiveTick");
static_assert(sizeof(COMP_DismembermentManager_C_ReceiveTick) == 0x000004, "Wrong size on COMP_DismembermentManager_C_ReceiveTick");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'COMP_DismembermentManager_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.StreamDismemberableLimbMesh
// 0x00A0 (0x00A0 - 0x0000)
struct COMP_DismembermentManager_C_StreamDismemberableLimbMesh final
{
public:
	class FName                                   LimbName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              LimbData;                                          // 0x0008(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_StreamDismemberableLimbMesh) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_StreamDismemberableLimbMesh");
static_assert(sizeof(COMP_DismembermentManager_C_StreamDismemberableLimbMesh) == 0x0000A0, "Wrong size on COMP_DismembermentManager_C_StreamDismemberableLimbMesh");
static_assert(offsetof(COMP_DismembermentManager_C_StreamDismemberableLimbMesh, LimbName) == 0x000000, "Member 'COMP_DismembermentManager_C_StreamDismemberableLimbMesh::LimbName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_StreamDismemberableLimbMesh, LimbData) == 0x000008, "Member 'COMP_DismembermentManager_C_StreamDismemberableLimbMesh::LimbData' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.OnLoaded_3E0AC6B84CCA7F17E04CA4AA481994B7
// 0x0008 (0x0008 - 0x0000)
struct COMP_DismembermentManager_C_OnLoaded_3E0AC6B84CCA7F17E04CA4AA481994B7 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_OnLoaded_3E0AC6B84CCA7F17E04CA4AA481994B7) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_OnLoaded_3E0AC6B84CCA7F17E04CA4AA481994B7");
static_assert(sizeof(COMP_DismembermentManager_C_OnLoaded_3E0AC6B84CCA7F17E04CA4AA481994B7) == 0x000008, "Wrong size on COMP_DismembermentManager_C_OnLoaded_3E0AC6B84CCA7F17E04CA4AA481994B7");
static_assert(offsetof(COMP_DismembermentManager_C_OnLoaded_3E0AC6B84CCA7F17E04CA4AA481994B7, Loaded) == 0x000000, "Member 'COMP_DismembermentManager_C_OnLoaded_3E0AC6B84CCA7F17E04CA4AA481994B7::Loaded' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.InitializeDismembermentManager
// 0x0250 (0x0250 - 0x0000)
struct COMP_DismembermentManager_C_InitializeDismembermentManager final
{
public:
	class FName                                   CurrentLimbName;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LimbRootBone;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              LimbData;                                          // 0x0010(0x0098)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LimbMesh;                                          // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x00C0(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSetBitIndices_ReturnValue;             // 0x0160(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetDynaDamageByIndex_DynaName;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSetBitIndices_ReturnValue_1;           // 0x0188(0x0010)(ReferenceParm)
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData_1;                   // 0x0198(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetLimbByIndex_LimbName;                  // 0x0234(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0240(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_InitializeDismembermentManager) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_InitializeDismembermentManager");
static_assert(sizeof(COMP_DismembermentManager_C_InitializeDismembermentManager) == 0x000250, "Wrong size on COMP_DismembermentManager_C_InitializeDismembermentManager");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CurrentLimbName) == 0x000000, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CurrentLimbName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, LimbRootBone) == 0x000008, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::LimbRootBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, LimbData) == 0x000010, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, LimbMesh) == 0x0000A8, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::LimbMesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, Temp_int_Array_Index_Variable_1) == 0x0000BC, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_GetLimbData_LimbData) == 0x0000C0, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_GetLimbData_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_BoneIsChildOf_ReturnValue) == 0x000158, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, Temp_int_Loop_Counter_Variable_1) == 0x00015C, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_GetSetBitIndices_ReturnValue) == 0x000160, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_GetSetBitIndices_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_Array_Get_Item) == 0x000170, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_Array_Length_ReturnValue) == 0x000174, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_GetDynaDamageByIndex_DynaName) == 0x000178, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_GetDynaDamageByIndex_DynaName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_Less_IntInt_ReturnValue) == 0x000180, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x000184, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_GetSetBitIndices_ReturnValue_1) == 0x000188, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_GetSetBitIndices_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_GetLimbData_LimbData_1) == 0x000198, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_GetLimbData_LimbData_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_Array_Get_Item_1) == 0x000230, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_GetLimbByIndex_LimbName) == 0x000234, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_GetLimbByIndex_LimbName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_Array_Length_ReturnValue_1) == 0x00023C, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_GetLimbMesh_Mesh) == 0x000240, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismembermentManager, CallFunc_Less_IntInt_ReturnValue_1) == 0x000248, "Member 'COMP_DismembermentManager_C_InitializeDismembermentManager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.InitializeDismemberedLimb
// 0x0038 (0x0038 - 0x0000)
struct COMP_DismembermentManager_C_InitializeDismemberedLimb final
{
public:
	int32                                         LowHideMask_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HighHideMask_0;                                    // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DismembermentData;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DynaDamageData;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LimbRowName_0;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MissingLimbBits;                                   // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActivatedDynaDamageBits;                           // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector4>                       BloodData;                                         // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(COMP_DismembermentManager_C_InitializeDismemberedLimb) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_InitializeDismemberedLimb");
static_assert(sizeof(COMP_DismembermentManager_C_InitializeDismemberedLimb) == 0x000038, "Wrong size on COMP_DismembermentManager_C_InitializeDismemberedLimb");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismemberedLimb, LowHideMask_0) == 0x000000, "Member 'COMP_DismembermentManager_C_InitializeDismemberedLimb::LowHideMask_0' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismemberedLimb, HighHideMask_0) == 0x000004, "Member 'COMP_DismembermentManager_C_InitializeDismemberedLimb::HighHideMask_0' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismemberedLimb, DismembermentData) == 0x000008, "Member 'COMP_DismembermentManager_C_InitializeDismemberedLimb::DismembermentData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismemberedLimb, DynaDamageData) == 0x000010, "Member 'COMP_DismembermentManager_C_InitializeDismemberedLimb::DynaDamageData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismemberedLimb, LimbRowName_0) == 0x000018, "Member 'COMP_DismembermentManager_C_InitializeDismemberedLimb::LimbRowName_0' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismemberedLimb, MissingLimbBits) == 0x000020, "Member 'COMP_DismembermentManager_C_InitializeDismemberedLimb::MissingLimbBits' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismemberedLimb, ActivatedDynaDamageBits) == 0x000024, "Member 'COMP_DismembermentManager_C_InitializeDismemberedLimb::ActivatedDynaDamageBits' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_InitializeDismemberedLimb, BloodData) == 0x000028, "Member 'COMP_DismembermentManager_C_InitializeDismemberedLimb::BloodData' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.ReceiveDamage
// 0x0048 (0x0048 - 0x0000)
struct COMP_DismembermentManager_C_ReceiveDamage final
{
public:
	class UOBJ_ImpactData_C*                      Impact;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  Damage;                                            // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          LegDismembered;                                    // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LimbDismembered;                                   // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          PseudoLimbDismembered;                             // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDismembermentAllowed_Result;            // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DealDamageToDismemberLimbs_LegDismembered; // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DealDamageToDismemberLimbs_LimbDismembered; // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DealDamageToDynaElements_PseudoLimbsDestroyed; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_ReceiveDamage) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_ReceiveDamage");
static_assert(sizeof(COMP_DismembermentManager_C_ReceiveDamage) == 0x000048, "Wrong size on COMP_DismembermentManager_C_ReceiveDamage");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, Impact) == 0x000000, "Member 'COMP_DismembermentManager_C_ReceiveDamage::Impact' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, Damage) == 0x000008, "Member 'COMP_DismembermentManager_C_ReceiveDamage::Damage' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, LegDismembered) == 0x000030, "Member 'COMP_DismembermentManager_C_ReceiveDamage::LegDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, LimbDismembered) == 0x000031, "Member 'COMP_DismembermentManager_C_ReceiveDamage::LimbDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, PseudoLimbDismembered) == 0x000032, "Member 'COMP_DismembermentManager_C_ReceiveDamage::PseudoLimbDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_IsDismembermentAllowed_Result) == 0x000033, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_IsDismembermentAllowed_Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000035, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_NotEqual_NameName_ReturnValue) == 0x000036, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_BooleanOR_ReturnValue) == 0x000037, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_IsValid_ReturnValue_2) == 0x000039, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00003B, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_BooleanOR_ReturnValue_1) == 0x00003C, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_DealDamageToDismemberLimbs_LegDismembered) == 0x00003D, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_DealDamageToDismemberLimbs_LegDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_DealDamageToDismemberLimbs_LimbDismembered) == 0x00003E, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_DealDamageToDismemberLimbs_LimbDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_BooleanAND_ReturnValue) == 0x00003F, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_BooleanOR_ReturnValue_2) == 0x000040, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ReceiveDamage, CallFunc_DealDamageToDynaElements_PseudoLimbsDestroyed) == 0x000041, "Member 'COMP_DismembermentManager_C_ReceiveDamage::CallFunc_DealDamageToDynaElements_PseudoLimbsDestroyed' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.DealDamageToDismemberLimbs
// 0x0258 (0x0258 - 0x0000)
struct COMP_DismembermentManager_C_DealDamageToDismemberLimbs final
{
public:
	class UOBJ_ImpactData_C*                      Impact;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  Damage;                                            // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          LegDismembered;                                    // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LimbDismembered;                                   // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LimbWasDismembered;                                // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LegWasDismembered;                                 // 0x0033(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         HitReqToDestroy;                                   // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitReqToDismember;                                 // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageReqPerHit;                                   // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LimbToDismember;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NetDamageOnLimb;                                   // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULimbDamageAccumulator_C*               Accumulator;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitsDealt;                                         // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              LimbDataToDismember;                               // 0x0060(0x0098)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         LimbIndex;                                         // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 LimbMesh;                                          // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ForceDismemberLimb_LegDismembered;        // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0128(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetOrderedLimbList_Limbs;                 // 0x0130(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x0150(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_GetLimbIndex_Index;                       // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ULimbDamageAccumulator_C*               CallFunc_GetLimbDamageAccumulator_Accumulator;     // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLimbAttached_Result;                    // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FD[0x3];                                      // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ComputeSlicingDamage_Result;              // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddDamageInstance_NetDamage;              // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOwnerAlive_IsAlive;                     // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21E[0x2];                                      // 0x021E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetLimbByBone_Limb;                       // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_245[0x3];                                      // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLimbStrengthSettings_StackArmor;       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLimbStrengthSettings_StackCount;       // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_DealDamageToDismemberLimbs");
static_assert(sizeof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs) == 0x000258, "Wrong size on COMP_DismembermentManager_C_DealDamageToDismemberLimbs");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, Impact) == 0x000000, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::Impact' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, Damage) == 0x000008, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::Damage' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, LegDismembered) == 0x000030, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::LegDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, LimbDismembered) == 0x000031, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::LimbDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, LimbWasDismembered) == 0x000032, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::LimbWasDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, LegWasDismembered) == 0x000033, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::LegWasDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, HitReqToDestroy) == 0x000034, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::HitReqToDestroy' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, HitReqToDismember) == 0x000038, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::HitReqToDismember' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, DamageReqPerHit) == 0x00003C, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::DamageReqPerHit' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, LimbToDismember) == 0x000040, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::LimbToDismember' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, NetDamageOnLimb) == 0x000048, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::NetDamageOnLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, Accumulator) == 0x000050, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::Accumulator' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, HitsDealt) == 0x000058, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::HitsDealt' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, LimbDataToDismember) == 0x000060, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::LimbDataToDismember' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, LimbIndex) == 0x0000F8, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::LimbIndex' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, LimbMesh) == 0x000100, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::LimbMesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, Temp_int_Array_Index_Variable) == 0x000108, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Multiply_IntInt_ReturnValue) == 0x00010C, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Array_Get_Item) == 0x000114, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Greater_IntInt_ReturnValue) == 0x000118, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_BooleanAND_ReturnValue) == 0x000119, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_ForceDismemberLimb_LegDismembered) == 0x00011A, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_ForceDismemberLimb_LegDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x00011C, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000120, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_GetLimbMesh_Mesh) == 0x000128, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_GetOrderedLimbList_Limbs) == 0x000130, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_GetOrderedLimbList_Limbs' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_GetLimbData_LimbData) == 0x000150, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_GetLimbData_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_GetLimbIndex_Index) == 0x0001E8, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_GetLimbIndex_Index' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_GetLimbDamageAccumulator_Accumulator) == 0x0001F0, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_GetLimbDamageAccumulator_Accumulator' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_NotEqual_NameName_ReturnValue) == 0x0001F8, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x0001F9, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_BooleanAND_ReturnValue_1) == 0x0001FA, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_IsLimbAttached_Result) == 0x0001FB, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_IsLimbAttached_Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_BooleanOR_ReturnValue) == 0x0001FC, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Divide_IntInt_ReturnValue) == 0x000200, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000204, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_ComputeSlicingDamage_Result) == 0x000208, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_ComputeSlicingDamage_Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00020C, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Round_ReturnValue) == 0x000210, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Not_PreBool_ReturnValue) == 0x000214, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_AddDamageInstance_NetDamage) == 0x000218, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_AddDamageInstance_NetDamage' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_IsOwnerAlive_IsAlive) == 0x00021C, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_IsOwnerAlive_IsAlive' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Not_PreBool_ReturnValue_1) == 0x00021D, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_GetLimbByBone_Limb) == 0x000220, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_GetLimbByBone_Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, Temp_int_Loop_Counter_Variable) == 0x000228, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Less_IntInt_ReturnValue) == 0x00022C, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Add_IntInt_ReturnValue) == 0x000230, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Array_Get_Item_2) == 0x000234, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000238, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Array_Get_Item_3) == 0x00023C, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Add_IntInt_ReturnValue_1) == 0x000240, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000244, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_GetLimbStrengthSettings_StackArmor) == 0x000248, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_GetLimbStrengthSettings_StackArmor' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_GetLimbStrengthSettings_StackCount) == 0x00024C, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_GetLimbStrengthSettings_StackCount' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDismemberLimbs, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000250, "Member 'COMP_DismembermentManager_C_DealDamageToDismemberLimbs::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.TryDismemberLimbManually
// 0x0110 (0x0110 - 0x0000)
struct COMP_DismembermentManager_C_TryDismemberLimbManually final
{
public:
	class FName                                   LimbName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LinearImpulse;                                     // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLimbAttached_Result;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDismembermentAllowed_Result;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttribDamageInstance                  K2Node_MakeStruct_AttribDamageInstance;            // 0x0028(0x0028)()
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetLimbName_Limb;                         // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_ImpactData_C*                      CallFunc_SpawnObject_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x0070(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ForceDismemberLimb_LegDismembered;        // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_TryDismemberLimbManually) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_TryDismemberLimbManually");
static_assert(sizeof(COMP_DismembermentManager_C_TryDismemberLimbManually) == 0x000110, "Wrong size on COMP_DismembermentManager_C_TryDismemberLimbManually");
static_assert(offsetof(COMP_DismembermentManager_C_TryDismemberLimbManually, LimbName) == 0x000000, "Member 'COMP_DismembermentManager_C_TryDismemberLimbManually::LimbName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryDismemberLimbManually, ImpactPoint) == 0x000008, "Member 'COMP_DismembermentManager_C_TryDismemberLimbManually::ImpactPoint' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryDismemberLimbManually, LinearImpulse) == 0x000014, "Member 'COMP_DismembermentManager_C_TryDismemberLimbManually::LinearImpulse' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryDismemberLimbManually, Success) == 0x000020, "Member 'COMP_DismembermentManager_C_TryDismemberLimbManually::Success' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryDismemberLimbManually, CallFunc_IsLimbAttached_Result) == 0x000021, "Member 'COMP_DismembermentManager_C_TryDismemberLimbManually::CallFunc_IsLimbAttached_Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryDismemberLimbManually, CallFunc_IsDismembermentAllowed_Result) == 0x000022, "Member 'COMP_DismembermentManager_C_TryDismemberLimbManually::CallFunc_IsDismembermentAllowed_Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryDismemberLimbManually, K2Node_MakeStruct_AttribDamageInstance) == 0x000028, "Member 'COMP_DismembermentManager_C_TryDismemberLimbManually::K2Node_MakeStruct_AttribDamageInstance' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryDismemberLimbManually, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000050, "Member 'COMP_DismembermentManager_C_TryDismemberLimbManually::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryDismemberLimbManually, CallFunc_GetLimbName_Limb) == 0x00005C, "Member 'COMP_DismembermentManager_C_TryDismemberLimbManually::CallFunc_GetLimbName_Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryDismemberLimbManually, CallFunc_SpawnObject_ReturnValue) == 0x000068, "Member 'COMP_DismembermentManager_C_TryDismemberLimbManually::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryDismemberLimbManually, CallFunc_GetLimbData_LimbData) == 0x000070, "Member 'COMP_DismembermentManager_C_TryDismemberLimbManually::CallFunc_GetLimbData_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryDismemberLimbManually, CallFunc_ForceDismemberLimb_LegDismembered) == 0x000108, "Member 'COMP_DismembermentManager_C_TryDismemberLimbManually::CallFunc_ForceDismemberLimb_LegDismembered' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.ForceDismemberLimb
// 0x0338 (0x0338 - 0x0000)
struct COMP_DismembermentManager_C_ForceDismemberLimb final
{
public:
	class FName                                   LimbToDismember;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_ImpactData_C*                      Impact;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  Damage;                                            // 0x0010(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          DestroyLimb_0;                                     // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LegDismembered;                                    // 0x0039(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ParentBoneName;                                    // 0x003C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LimbWasDismembered;                                // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          LegWasDismembered;                                 // 0x0045(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_LimbManager_C*                    LimbManager;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LimbIndex;                                         // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 LimbMesh;                                          // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              LimbDataToDismember;                               // 0x0060(0x0098)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x0100(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetChildLimbs_ChildLimbs;                 // 0x01A0(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData_1;                   // 0x01B8(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_GetLimbIndex_Index;                       // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetChildLimbs_ChildLimbs_1;               // 0x0260(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ADismembermentLimb_Base_C*              CallFunc_SpawnDismemberedLimb_NewLimb;             // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue_1;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_AnimatedLimb                   CallFunc_GetLimbFromBoneName_Limb;                 // 0x0284(0x0024)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AA[0x2];                                      // 0x02AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_AnimatedLimb                   CallFunc_GetLimbFromBoneName_Limb_1;               // 0x02AC(0x0024)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_LimbManager_C*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2[0x2];                                      // 0x02F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue_1;                  // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              K2Node_DynamicCast_AsDismemberment_Limb_Base;      // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31B[0x1];                                      // 0x031B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              CallFunc_SpawnDismemberedLimb_NewLimb_1;           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLimbAttached_Result;                    // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_ForceDismemberLimb) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_ForceDismemberLimb");
static_assert(sizeof(COMP_DismembermentManager_C_ForceDismemberLimb) == 0x000338, "Wrong size on COMP_DismembermentManager_C_ForceDismemberLimb");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, LimbToDismember) == 0x000000, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::LimbToDismember' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, Impact) == 0x000008, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::Impact' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, Damage) == 0x000010, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::Damage' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, DestroyLimb_0) == 0x000038, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::DestroyLimb_0' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, LegDismembered) == 0x000039, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::LegDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, ParentBoneName) == 0x00003C, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::ParentBoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, LimbWasDismembered) == 0x000044, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::LimbWasDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, LegWasDismembered) == 0x000045, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::LegWasDismembered' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, LimbManager) == 0x000048, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::LimbManager' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, LimbIndex) == 0x000050, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::LimbIndex' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, LimbMesh) == 0x000058, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::LimbMesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, LimbDataToDismember) == 0x000060, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::LimbDataToDismember' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, Temp_int_Array_Index_Variable) == 0x0000F8, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_GetLimbData_LimbData) == 0x000100, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_GetLimbData_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_GetLimbMesh_Mesh) == 0x000198, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_GetChildLimbs_ChildLimbs) == 0x0001A0, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_GetChildLimbs_ChildLimbs' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_GetLimbData_LimbData_1) == 0x0001B8, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_GetLimbData_LimbData_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_GetLimbIndex_Index) == 0x000250, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_GetLimbIndex_Index' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_BitShiftLeft_ReturnValue) == 0x000254, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_Array_Length_ReturnValue) == 0x000258, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_GetChildLimbs_ChildLimbs_1) == 0x000260, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_GetChildLimbs_ChildLimbs_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_Array_Length_ReturnValue_1) == 0x000270, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_SpawnDismemberedLimb_NewLimb) == 0x000278, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_SpawnDismemberedLimb_NewLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_BitShiftLeft_ReturnValue_1) == 0x000280, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_BitShiftLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_GetLimbFromBoneName_Limb) == 0x000284, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_GetLimbFromBoneName_Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_IsValid_ReturnValue) == 0x0002A8, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002A9, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_GetLimbFromBoneName_Limb_1) == 0x0002AC, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_GetLimbFromBoneName_Limb_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_IsValid_ReturnValue_1) == 0x0002D0, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002D1, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_GetOwner_ReturnValue) == 0x0002D8, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_GetComponentByClass_ReturnValue) == 0x0002E0, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, Temp_int_Loop_Counter_Variable) == 0x0002E8, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, Temp_int_Loop_Counter_Variable_1) == 0x0002EC, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_Less_IntInt_ReturnValue) == 0x0002F0, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002F1, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_Add_IntInt_ReturnValue) == 0x0002F4, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002F8, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_Not_PreBool_ReturnValue) == 0x0002FC, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_Or_IntInt_ReturnValue) == 0x000300, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_Or_IntInt_ReturnValue_1) == 0x000304, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_Or_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_GetOwner_ReturnValue_1) == 0x000308, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, K2Node_DynamicCast_AsDismemberment_Limb_Base) == 0x000310, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::K2Node_DynamicCast_AsDismemberment_Limb_Base' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, K2Node_DynamicCast_bSuccess) == 0x000318, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000319, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_NotEqual_NameName_ReturnValue) == 0x00031A, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, Temp_int_Array_Index_Variable_1) == 0x00031C, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_Array_Get_Item_1) == 0x000320, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_SpawnDismemberedLimb_NewLimb_1) == 0x000328, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_SpawnDismemberedLimb_NewLimb_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ForceDismemberLimb, CallFunc_IsLimbAttached_Result) == 0x000330, "Member 'COMP_DismembermentManager_C_ForceDismemberLimb::CallFunc_IsLimbAttached_Result' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.SpawnDismemberedLimb
// 0x0270 (0x0270 - 0x0000)
struct COMP_DismembermentManager_C_SpawnDismemberedLimb final
{
public:
	class FName                                   Limb;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              NewLimb;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DismemberBone;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdjustedLinearImpulse;                             // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpulseDirection;                                  // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SocketDirection;                                   // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ParentSocketLocation;                              // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DismemberSocketLocation;                           // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          DismemberMesh;                                     // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ParentMesh;                                        // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              LimbData;                                          // 0x0070(0x0098)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              New_Limb;                                          // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDataTableRowCount_ReturnValue;         // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue_1;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildLimbBits_ChildBits;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Xor_IntInt_ReturnValue;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue_1;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_Map_Find_Value;                           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_163[0xD];                                      // 0x0163(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0170(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TransferDecals_Result;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector4>                       K2Node_MakeArray_Array;                            // 0x01C0(0x0010)(ReferenceParm)
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x01D0(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_SpawnDismemberedLimb) == 0x000010, "Wrong alignment on COMP_DismembermentManager_C_SpawnDismemberedLimb");
static_assert(sizeof(COMP_DismembermentManager_C_SpawnDismemberedLimb) == 0x000270, "Wrong size on COMP_DismembermentManager_C_SpawnDismemberedLimb");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, Limb) == 0x000000, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, ImpactData) == 0x000008, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::ImpactData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, NewLimb) == 0x000010, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::NewLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, DismemberBone) == 0x000018, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::DismemberBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, AdjustedLinearImpulse) == 0x000020, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::AdjustedLinearImpulse' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, ImpulseDirection) == 0x00002C, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::ImpulseDirection' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, SocketDirection) == 0x000038, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::SocketDirection' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, ParentSocketLocation) == 0x000044, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::ParentSocketLocation' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, DismemberSocketLocation) == 0x000050, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::DismemberSocketLocation' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, DismemberMesh) == 0x000060, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::DismemberMesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, ParentMesh) == 0x000068, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::ParentMesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, LimbData) == 0x000070, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, New_Limb) == 0x000108, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::New_Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_BitShiftLeft_ReturnValue) == 0x000110, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_Subtract_IntInt_ReturnValue) == 0x000114, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_GetDataTableRowCount_ReturnValue) == 0x000118, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_GetDataTableRowCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_BitShiftLeft_ReturnValue_1) == 0x00011C, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_BitShiftLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_GetChildLimbBits_ChildBits) == 0x000120, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_GetChildLimbBits_ChildBits' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000124, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_Xor_IntInt_ReturnValue) == 0x000128, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_Xor_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_And_IntInt_ReturnValue) == 0x00012C, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_And_IntInt_ReturnValue_1) == 0x000130, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_And_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_Or_IntInt_ReturnValue) == 0x000134, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_GetOwner_ReturnValue) == 0x000138, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_Map_Find_Value) == 0x000140, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_Map_Find_ReturnValue) == 0x000148, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000150, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000158, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_Map_Remove_ReturnValue) == 0x000161, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_IsValid_ReturnValue) == 0x000162, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000170, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001A0, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_GetLimbMesh_Mesh) == 0x0001A8, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001B0, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_TransferDecals_Result) == 0x0001B8, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_TransferDecals_Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, K2Node_MakeArray_Array) == 0x0001C0, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberedLimb, CallFunc_GetLimbData_LimbData) == 0x0001D0, "Member 'COMP_DismembermentManager_C_SpawnDismemberedLimb::CallFunc_GetLimbData_LimbData' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.DestroyLimb
// 0x01A0 (0x01A0 - 0x0000)
struct COMP_DismembermentManager_C_DestroyLimb final
{
public:
	class FName                                   Limb;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              LimbData;                                          // 0x0038(0x0098)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x00D0(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0180(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_DestroyLimb) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_DestroyLimb");
static_assert(sizeof(COMP_DismembermentManager_C_DestroyLimb) == 0x0001A0, "Wrong size on COMP_DismembermentManager_C_DestroyLimb");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, Limb) == 0x000000, "Member 'COMP_DismembermentManager_C_DestroyLimb::Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, DamageInstance) == 0x000008, "Member 'COMP_DismembermentManager_C_DestroyLimb::DamageInstance' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, ImpactData) == 0x000030, "Member 'COMP_DismembermentManager_C_DestroyLimb::ImpactData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, LimbData) == 0x000038, "Member 'COMP_DismembermentManager_C_DestroyLimb::LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, CallFunc_GetLimbData_LimbData) == 0x0000D0, "Member 'COMP_DismembermentManager_C_DestroyLimb::CallFunc_GetLimbData_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, Temp_int_Array_Index_Variable) == 0x000168, "Member 'COMP_DismembermentManager_C_DestroyLimb::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, Temp_int_Loop_Counter_Variable) == 0x00016C, "Member 'COMP_DismembermentManager_C_DestroyLimb::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, CallFunc_Add_IntInt_ReturnValue) == 0x000170, "Member 'COMP_DismembermentManager_C_DestroyLimb::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, CallFunc_GetOwner_ReturnValue) == 0x000178, "Member 'COMP_DismembermentManager_C_DestroyLimb::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000180, "Member 'COMP_DismembermentManager_C_DestroyLimb::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, CallFunc_Array_Get_Item) == 0x000190, "Member 'COMP_DismembermentManager_C_DestroyLimb::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'COMP_DismembermentManager_C_DestroyLimb::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DestroyLimb, CallFunc_Less_IntInt_ReturnValue) == 0x00019C, "Member 'COMP_DismembermentManager_C_DestroyLimb::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetLimbMesh
// 0x0040 (0x0040 - 0x0000)
struct COMP_DismembermentManager_C_GetLimbMesh final
{
public:
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACORPSE_SkeletalBase_C*                 K2Node_DynamicCast_AsCORPSE_Skeletal_Base;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADismembermentLimb_Base_C*              K2Node_DynamicCast_AsDismemberment_Limb_Base;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetLimbMesh) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetLimbMesh");
static_assert(sizeof(COMP_DismembermentManager_C_GetLimbMesh) == 0x000040, "Wrong size on COMP_DismembermentManager_C_GetLimbMesh");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbMesh, Mesh) == 0x000000, "Member 'COMP_DismembermentManager_C_GetLimbMesh::Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbMesh, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'COMP_DismembermentManager_C_GetLimbMesh::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbMesh, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000010, "Member 'COMP_DismembermentManager_C_GetLimbMesh::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbMesh, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'COMP_DismembermentManager_C_GetLimbMesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbMesh, K2Node_DynamicCast_AsCORPSE_Skeletal_Base) == 0x000020, "Member 'COMP_DismembermentManager_C_GetLimbMesh::K2Node_DynamicCast_AsCORPSE_Skeletal_Base' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbMesh, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'COMP_DismembermentManager_C_GetLimbMesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbMesh, K2Node_DynamicCast_AsDismemberment_Limb_Base) == 0x000030, "Member 'COMP_DismembermentManager_C_GetLimbMesh::K2Node_DynamicCast_AsDismemberment_Limb_Base' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbMesh, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'COMP_DismembermentManager_C_GetLimbMesh::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.RemoveLimb
// 0x0188 (0x0188 - 0x0000)
struct COMP_DismembermentManager_C_RemoveLimb final
{
public:
	class FName                                   LimbName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LimbIndex;                                         // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              LimbData;                                          // 0x0010(0x0098)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x00A8(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetChildLimbs_ChildLimbs;                 // 0x0150(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLimbIndex_Index;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue_1;               // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue_1;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_RemoveLimb) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_RemoveLimb");
static_assert(sizeof(COMP_DismembermentManager_C_RemoveLimb) == 0x000188, "Wrong size on COMP_DismembermentManager_C_RemoveLimb");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, LimbName) == 0x000000, "Member 'COMP_DismembermentManager_C_RemoveLimb::LimbName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, LimbIndex) == 0x000008, "Member 'COMP_DismembermentManager_C_RemoveLimb::LimbIndex' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, LimbData) == 0x000010, "Member 'COMP_DismembermentManager_C_RemoveLimb::LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, CallFunc_GetLimbData_LimbData) == 0x0000A8, "Member 'COMP_DismembermentManager_C_RemoveLimb::CallFunc_GetLimbData_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, Temp_int_Array_Index_Variable) == 0x000140, "Member 'COMP_DismembermentManager_C_RemoveLimb::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'COMP_DismembermentManager_C_RemoveLimb::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, CallFunc_Add_IntInt_ReturnValue) == 0x000148, "Member 'COMP_DismembermentManager_C_RemoveLimb::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, CallFunc_GetChildLimbs_ChildLimbs) == 0x000150, "Member 'COMP_DismembermentManager_C_RemoveLimb::CallFunc_GetChildLimbs_ChildLimbs' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, CallFunc_Array_Get_Item) == 0x000160, "Member 'COMP_DismembermentManager_C_RemoveLimb::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'COMP_DismembermentManager_C_RemoveLimb::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, CallFunc_GetLimbIndex_Index) == 0x00016C, "Member 'COMP_DismembermentManager_C_RemoveLimb::CallFunc_GetLimbIndex_Index' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, CallFunc_Less_IntInt_ReturnValue) == 0x000170, "Member 'COMP_DismembermentManager_C_RemoveLimb::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, CallFunc_BitShiftLeft_ReturnValue) == 0x000174, "Member 'COMP_DismembermentManager_C_RemoveLimb::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, CallFunc_Or_IntInt_ReturnValue) == 0x000178, "Member 'COMP_DismembermentManager_C_RemoveLimb::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, CallFunc_BitShiftLeft_ReturnValue_1) == 0x00017C, "Member 'COMP_DismembermentManager_C_RemoveLimb::CallFunc_BitShiftLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_RemoveLimb, CallFunc_Or_IntInt_ReturnValue_1) == 0x000180, "Member 'COMP_DismembermentManager_C_RemoveLimb::CallFunc_Or_IntInt_ReturnValue_1' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetLimbDamageAccumulator
// 0x0038 (0x0038 - 0x0000)
struct COMP_DismembermentManager_C_GetLimbDamageAccumulator final
{
public:
	class FName                                   Limb;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULimbDamageAccumulator_C*               Accumulator;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULimbDamageAccumulator_C*               DamageAccumulator;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULimbDamageAccumulator_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULimbDamageAccumulator_C*               CallFunc_Map_Find_Value;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetLimbDamageAccumulator) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetLimbDamageAccumulator");
static_assert(sizeof(COMP_DismembermentManager_C_GetLimbDamageAccumulator) == 0x000038, "Wrong size on COMP_DismembermentManager_C_GetLimbDamageAccumulator");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbDamageAccumulator, Limb) == 0x000000, "Member 'COMP_DismembermentManager_C_GetLimbDamageAccumulator::Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbDamageAccumulator, Accumulator) == 0x000008, "Member 'COMP_DismembermentManager_C_GetLimbDamageAccumulator::Accumulator' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbDamageAccumulator, DamageAccumulator) == 0x000010, "Member 'COMP_DismembermentManager_C_GetLimbDamageAccumulator::DamageAccumulator' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbDamageAccumulator, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'COMP_DismembermentManager_C_GetLimbDamageAccumulator::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbDamageAccumulator, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'COMP_DismembermentManager_C_GetLimbDamageAccumulator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbDamageAccumulator, CallFunc_Map_Find_Value) == 0x000028, "Member 'COMP_DismembermentManager_C_GetLimbDamageAccumulator::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbDamageAccumulator, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'COMP_DismembermentManager_C_GetLimbDamageAccumulator::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetLimbName
// 0x0008 (0x0008 - 0x0000)
struct COMP_DismembermentManager_C_GetLimbName final
{
public:
	class FName                                   Limb;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_GetLimbName) == 0x000004, "Wrong alignment on COMP_DismembermentManager_C_GetLimbName");
static_assert(sizeof(COMP_DismembermentManager_C_GetLimbName) == 0x000008, "Wrong size on COMP_DismembermentManager_C_GetLimbName");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbName, Limb) == 0x000000, "Member 'COMP_DismembermentManager_C_GetLimbName::Limb' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.IsLimbAttached
// 0x0020 (0x0020 - 0x0000)
struct COMP_DismembermentManager_C_IsLimbAttached final
{
public:
	class FName                                   Limb;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LimbIndex;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLimbIndex_Index;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_IsLimbAttached) == 0x000004, "Wrong alignment on COMP_DismembermentManager_C_IsLimbAttached");
static_assert(sizeof(COMP_DismembermentManager_C_IsLimbAttached) == 0x000020, "Wrong size on COMP_DismembermentManager_C_IsLimbAttached");
static_assert(offsetof(COMP_DismembermentManager_C_IsLimbAttached, Limb) == 0x000000, "Member 'COMP_DismembermentManager_C_IsLimbAttached::Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsLimbAttached, Result) == 0x000008, "Member 'COMP_DismembermentManager_C_IsLimbAttached::Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsLimbAttached, LimbIndex) == 0x00000C, "Member 'COMP_DismembermentManager_C_IsLimbAttached::LimbIndex' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsLimbAttached, CallFunc_BitShiftLeft_ReturnValue) == 0x000010, "Member 'COMP_DismembermentManager_C_IsLimbAttached::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsLimbAttached, CallFunc_And_IntInt_ReturnValue) == 0x000014, "Member 'COMP_DismembermentManager_C_IsLimbAttached::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsLimbAttached, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'COMP_DismembermentManager_C_IsLimbAttached::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsLimbAttached, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'COMP_DismembermentManager_C_IsLimbAttached::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsLimbAttached, CallFunc_GetLimbIndex_Index) == 0x00001C, "Member 'COMP_DismembermentManager_C_IsLimbAttached::CallFunc_GetLimbIndex_Index' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.SetHideIndices
// 0x0060 (0x0060 - 0x0000)
struct COMP_DismembermentManager_C_SetHideIndices final
{
public:
	TArray<int32>                                 HideIndices;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          HideState;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BitFlag;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BitIndex;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Not_Int_ReturnValue;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Not_Int_ReturnValue_1;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BitShiftLeft_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue_1;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_SetHideIndices) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_SetHideIndices");
static_assert(sizeof(COMP_DismembermentManager_C_SetHideIndices) == 0x000060, "Wrong size on COMP_DismembermentManager_C_SetHideIndices");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, HideIndices) == 0x000000, "Member 'COMP_DismembermentManager_C_SetHideIndices::HideIndices' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, HideState) == 0x000010, "Member 'COMP_DismembermentManager_C_SetHideIndices::HideState' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, BitFlag) == 0x000014, "Member 'COMP_DismembermentManager_C_SetHideIndices::BitFlag' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, BitIndex) == 0x000018, "Member 'COMP_DismembermentManager_C_SetHideIndices::BitIndex' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'COMP_DismembermentManager_C_SetHideIndices::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_Array_Get_Item) == 0x000024, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'COMP_DismembermentManager_C_SetHideIndices::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_Not_Int_ReturnValue) == 0x000034, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_Not_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_And_IntInt_ReturnValue) == 0x000038, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_BitShiftLeft_ReturnValue) == 0x000040, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_Not_Int_ReturnValue_1) == 0x000044, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_Not_Int_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_And_IntInt_ReturnValue_1) == 0x000048, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_And_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004D, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_BitShiftLeft_ReturnValue_1) == 0x000050, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_BitShiftLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_BooleanAND_ReturnValue) == 0x000054, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000055, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_Or_IntInt_ReturnValue) == 0x000058, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetHideIndices, CallFunc_Or_IntInt_ReturnValue_1) == 0x00005C, "Member 'COMP_DismembermentManager_C_SetHideIndices::CallFunc_Or_IntInt_ReturnValue_1' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.UpdateMaterialParameters
// 0x0018 (0x0018 - 0x0000)
struct COMP_DismembermentManager_C_UpdateMaterialParameters final
{
public:
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh_1;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_UpdateMaterialParameters) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_UpdateMaterialParameters");
static_assert(sizeof(COMP_DismembermentManager_C_UpdateMaterialParameters) == 0x000018, "Wrong size on COMP_DismembermentManager_C_UpdateMaterialParameters");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateMaterialParameters, CallFunc_GetLimbMesh_Mesh) == 0x000000, "Member 'COMP_DismembermentManager_C_UpdateMaterialParameters::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateMaterialParameters, CallFunc_GetLimbMesh_Mesh_1) == 0x000008, "Member 'COMP_DismembermentManager_C_UpdateMaterialParameters::CallFunc_GetLimbMesh_Mesh_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateMaterialParameters, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'COMP_DismembermentManager_C_UpdateMaterialParameters::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateMaterialParameters, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000014, "Member 'COMP_DismembermentManager_C_UpdateMaterialParameters::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.HideInitialIDs
// 0x0148 (0x0148 - 0x0000)
struct COMP_DismembermentManager_C_HideInitialIDs final
{
public:
	TArray<int32>                                 DynaDamageHideIDs;                                 // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0020(0x0010)(ReferenceParm)
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x0030(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDataTableRowFromName_OutRow;           // 0x00D0(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_HideInitialIDs) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_HideInitialIDs");
static_assert(sizeof(COMP_DismembermentManager_C_HideInitialIDs) == 0x000148, "Wrong size on COMP_DismembermentManager_C_HideInitialIDs");
static_assert(offsetof(COMP_DismembermentManager_C_HideInitialIDs, DynaDamageHideIDs) == 0x000000, "Member 'COMP_DismembermentManager_C_HideInitialIDs::DynaDamageHideIDs' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HideInitialIDs, Temp_int_Array_Index_Variable) == 0x000010, "Member 'COMP_DismembermentManager_C_HideInitialIDs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HideInitialIDs, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'COMP_DismembermentManager_C_HideInitialIDs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HideInitialIDs, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'COMP_DismembermentManager_C_HideInitialIDs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HideInitialIDs, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000020, "Member 'COMP_DismembermentManager_C_HideInitialIDs::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HideInitialIDs, CallFunc_GetLimbData_LimbData) == 0x000030, "Member 'COMP_DismembermentManager_C_HideInitialIDs::CallFunc_GetLimbData_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HideInitialIDs, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'COMP_DismembermentManager_C_HideInitialIDs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HideInitialIDs, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000D0, "Member 'COMP_DismembermentManager_C_HideInitialIDs::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HideInitialIDs, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000138, "Member 'COMP_DismembermentManager_C_HideInitialIDs::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HideInitialIDs, CallFunc_Array_Length_ReturnValue) == 0x00013C, "Member 'COMP_DismembermentManager_C_HideInitialIDs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HideInitialIDs, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'COMP_DismembermentManager_C_HideInitialIDs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.IsOwnerAlive
// 0x0020 (0x0020 - 0x0000)
struct COMP_DismembermentManager_C_IsOwnerAlive final
{
public:
	bool                                          IsAlive;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_IsOwnerAlive) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_IsOwnerAlive");
static_assert(sizeof(COMP_DismembermentManager_C_IsOwnerAlive) == 0x000020, "Wrong size on COMP_DismembermentManager_C_IsOwnerAlive");
static_assert(offsetof(COMP_DismembermentManager_C_IsOwnerAlive, IsAlive) == 0x000000, "Member 'COMP_DismembermentManager_C_IsOwnerAlive::IsAlive' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsOwnerAlive, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'COMP_DismembermentManager_C_IsOwnerAlive::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsOwnerAlive, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000010, "Member 'COMP_DismembermentManager_C_IsOwnerAlive::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsOwnerAlive, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'COMP_DismembermentManager_C_IsOwnerAlive::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.DealDamageToDynaElements
// 0x02A0 (0x02A0 - 0x0000)
struct COMP_DismembermentManager_C_DealDamageToDynaElements final
{
public:
	class UOBJ_ImpactData_C*                      Impact;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  Damage;                                            // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          PseudoLimbsDestroyed;                              // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          DestroyedPseudoLimb;                               // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HitsReqToDestroy;                                  // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DamageReqPerHit;                                   // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NetDamageOnLimb;                                   // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentDynaElement;                                // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULimbDamageAccumulator_C*               Accumulator;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitsDealt;                                         // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ImpactDistance;                                    // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ImpactedBoneName;                                  // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DynaDamageParentBoneName;                          // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LimbMesh;                                          // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DynaDamageElement              CurrentDynaDamageElement;                          // 0x0070(0x0068)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CurrentDynaDamageIndex;                            // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue_1;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15E[0x2];                                      // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDynaIndex_Index;                       // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0170(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0196(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_197[0x1];                                      // 0x0197(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ULimbDamageAccumulator_C*               CallFunc_GetDynaDamageAccumumlator_Accumulator;    // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ComputeSlicingDamage_Result;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddDamageInstance_NetDamage;              // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDynaData_DynaData;                     // 0x01B8(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsOwnerAlive_IsAlive;                     // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDynaDamageByBone_DynaDamageElements;   // 0x0228(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x2];                                      // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_3;                         // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x025D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25E[0x2];                                      // 0x025E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLimbStrengthSettings_StackArmor;       // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLimbStrengthSettings_StackCount;       // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformToBoneSpace_OutPosition;         // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_TransformToBoneSpace_OutRotation;         // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_295[0x3];                                      // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_DealDamageToDynaElements) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_DealDamageToDynaElements");
static_assert(sizeof(COMP_DismembermentManager_C_DealDamageToDynaElements) == 0x0002A0, "Wrong size on COMP_DismembermentManager_C_DealDamageToDynaElements");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, Impact) == 0x000000, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::Impact' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, Damage) == 0x000008, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::Damage' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, PseudoLimbsDestroyed) == 0x000030, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::PseudoLimbsDestroyed' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, DestroyedPseudoLimb) == 0x000031, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::DestroyedPseudoLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, HitsReqToDestroy) == 0x000034, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::HitsReqToDestroy' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, DamageReqPerHit) == 0x000038, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::DamageReqPerHit' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, NetDamageOnLimb) == 0x00003C, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::NetDamageOnLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CurrentDynaElement) == 0x000040, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CurrentDynaElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, Accumulator) == 0x000048, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::Accumulator' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, HitsDealt) == 0x000050, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::HitsDealt' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, ImpactDistance) == 0x000054, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::ImpactDistance' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, ImpactedBoneName) == 0x000058, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::ImpactedBoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, DynaDamageParentBoneName) == 0x000060, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::DynaDamageParentBoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, LimbMesh) == 0x000068, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::LimbMesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CurrentDynaDamageElement) == 0x000070, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CurrentDynaDamageElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CurrentDynaDamageIndex) == 0x0000D8, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CurrentDynaDamageIndex' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, Temp_int_Array_Index_Variable) == 0x0000DC, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Conv_IntToString_ReturnValue) == 0x0000E0, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Conv_NameToString_ReturnValue) == 0x0000F0, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Concat_StrStr_ReturnValue) == 0x000100, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000110, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000120, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000128, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, Temp_int_Loop_Counter_Variable) == 0x000138, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000140, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, Temp_int_Loop_Counter_Variable_1) == 0x000144, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Add_IntInt_ReturnValue_1) == 0x000148, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_BitShiftLeft_ReturnValue) == 0x00014C, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Or_IntInt_ReturnValue) == 0x000150, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_BitShiftLeft_ReturnValue_1) == 0x000154, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_BitShiftLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_And_IntInt_ReturnValue) == 0x000158, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00015C, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00015D, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Multiply_IntInt_ReturnValue) == 0x000160, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000164, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Add_FloatFloat_ReturnValue) == 0x000168, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_GetDynaIndex_Index) == 0x00016C, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_GetDynaIndex_Index' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000170, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Array_Get_Item) == 0x000180, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_NotEqual_NameName_ReturnValue) == 0x000188, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Array_Length_ReturnValue) == 0x00018C, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, Temp_int_Array_Index_Variable_1) == 0x000190, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Less_IntInt_ReturnValue) == 0x000194, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000195, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Not_PreBool_ReturnValue) == 0x000196, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_GetDynaDamageAccumumlator_Accumulator) == 0x000198, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_GetDynaDamageAccumumlator_Accumulator' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Divide_IntInt_ReturnValue) == 0x0001A0, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_ComputeSlicingDamage_Result) == 0x0001A4, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_ComputeSlicingDamage_Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0001A8, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Round_ReturnValue) == 0x0001AC, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_AddDamageInstance_NetDamage) == 0x0001B0, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_AddDamageInstance_NetDamage' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_GetDynaData_DynaData) == 0x0001B8, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_GetDynaData_DynaData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_IsOwnerAlive_IsAlive) == 0x000220, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_IsOwnerAlive_IsAlive' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Not_PreBool_ReturnValue_1) == 0x000221, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_GetDynaDamageByBone_DynaDamageElements) == 0x000228, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_GetDynaDamageByBone_DynaDamageElements' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Array_Get_Item_1) == 0x000238, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Not_PreBool_ReturnValue_2) == 0x000240, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Array_Length_ReturnValue_1) == 0x000244, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_BooleanOR_ReturnValue) == 0x000248, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Less_IntInt_ReturnValue_1) == 0x000249, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Array_Get_Item_2) == 0x00024C, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Greater_IntInt_ReturnValue) == 0x000250, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Array_Get_Item_3) == 0x000254, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Add_IntInt_ReturnValue_2) == 0x000258, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00025C, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x00025D, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_GetLimbStrengthSettings_StackArmor) == 0x000260, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_GetLimbStrengthSettings_StackArmor' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_GetLimbStrengthSettings_StackCount) == 0x000264, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_GetLimbStrengthSettings_StackCount' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_GetLimbMesh_Mesh) == 0x000268, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_TransformToBoneSpace_OutPosition) == 0x000270, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_TransformToBoneSpace_OutPosition' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_TransformToBoneSpace_OutRotation) == 0x00027C, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_TransformToBoneSpace_OutRotation' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000288, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000294, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DealDamageToDynaElements, CallFunc_VSize_ReturnValue) == 0x000298, "Member 'COMP_DismembermentManager_C_DealDamageToDynaElements::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.SpawnDynaDamageEffects
// 0x01B0 (0x01B0 - 0x0000)
struct COMP_DismembermentManager_C_SpawnDynaDamageEffects final
{
public:
	class FName                                   DynaDamage;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RootBoneName;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_LimbSpawnEffect                CurrentEffect;                                     // 0x0010(0x0050)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FSTRUCT_DynaDamageElement              DynaElement;                                       // 0x0060(0x0068)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0xC];                                       // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LimbSpawnEffect                CallFunc_Array_Get_Item;                           // 0x00E0(0x0050)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0138(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_SpawnDynaDamageEffects) == 0x000010, "Wrong alignment on COMP_DismembermentManager_C_SpawnDynaDamageEffects");
static_assert(sizeof(COMP_DismembermentManager_C_SpawnDynaDamageEffects) == 0x0001B0, "Wrong size on COMP_DismembermentManager_C_SpawnDynaDamageEffects");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDynaDamageEffects, DynaDamage) == 0x000000, "Member 'COMP_DismembermentManager_C_SpawnDynaDamageEffects::DynaDamage' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDynaDamageEffects, RootBoneName) == 0x000008, "Member 'COMP_DismembermentManager_C_SpawnDynaDamageEffects::RootBoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDynaDamageEffects, CurrentEffect) == 0x000010, "Member 'COMP_DismembermentManager_C_SpawnDynaDamageEffects::CurrentEffect' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDynaDamageEffects, DynaElement) == 0x000060, "Member 'COMP_DismembermentManager_C_SpawnDynaDamageEffects::DynaElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDynaDamageEffects, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'COMP_DismembermentManager_C_SpawnDynaDamageEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDynaDamageEffects, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'COMP_DismembermentManager_C_SpawnDynaDamageEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDynaDamageEffects, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'COMP_DismembermentManager_C_SpawnDynaDamageEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDynaDamageEffects, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'COMP_DismembermentManager_C_SpawnDynaDamageEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDynaDamageEffects, CallFunc_Array_Length_ReturnValue) == 0x000130, "Member 'COMP_DismembermentManager_C_SpawnDynaDamageEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDynaDamageEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000134, "Member 'COMP_DismembermentManager_C_SpawnDynaDamageEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDynaDamageEffects, CallFunc_GetDataTableRowFromName_OutRow) == 0x000138, "Member 'COMP_DismembermentManager_C_SpawnDynaDamageEffects::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDynaDamageEffects, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001A0, "Member 'COMP_DismembermentManager_C_SpawnDynaDamageEffects::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.DisableChildBoneCollision
// 0x0050 (0x0050 - 0x0000)
struct COMP_DismembermentManager_C_DisableChildBoneCollision final
{
public:
	class FName                                   ParentBone;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCleanBreak;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RequiresPhysicsRebuild;                            // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurrentBoneName;                                   // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DisableBodyCollision_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumBones_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBoneName_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_DisableChildBoneCollision) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_DisableChildBoneCollision");
static_assert(sizeof(COMP_DismembermentManager_C_DisableChildBoneCollision) == 0x000050, "Wrong size on COMP_DismembermentManager_C_DisableChildBoneCollision");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, ParentBone) == 0x000000, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::ParentBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, IsCleanBreak) == 0x000008, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::IsCleanBreak' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, RequiresPhysicsRebuild) == 0x000009, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::RequiresPhysicsRebuild' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, CurrentBoneName) == 0x00000C, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::CurrentBoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, Mesh) == 0x000018, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, CallFunc_DisableBodyCollision_ReturnValue) == 0x000020, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::CallFunc_DisableBodyCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, Temp_int_Variable) == 0x000024, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, CallFunc_BoneIsChildOf_ReturnValue) == 0x00002C, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, CallFunc_GetNumBones_ReturnValue) == 0x000030, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::CallFunc_GetNumBones_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, CallFunc_GetBoneName_ReturnValue) == 0x000038, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::CallFunc_GetBoneName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000040, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DisableChildBoneCollision, CallFunc_GetLimbMesh_Mesh) == 0x000048, "Member 'COMP_DismembermentManager_C_DisableChildBoneCollision::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetLimbByBone
// 0x0240 (0x0240 - 0x0000)
struct COMP_DismembermentManager_C_GetLimbByBone final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Limb;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentRowName;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BestRowName;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentBoneName;                                   // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              BestLimb;                                          // 0x0028(0x0098)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              CurrentLimb;                                       // 0x00C0(0x0098)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LimbMesh;                                          // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x0170(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0210(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0230(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue_1;              // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetLimbByBone) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetLimbByBone");
static_assert(sizeof(COMP_DismembermentManager_C_GetLimbByBone) == 0x000240, "Wrong size on COMP_DismembermentManager_C_GetLimbByBone");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, BoneName) == 0x000000, "Member 'COMP_DismembermentManager_C_GetLimbByBone::BoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, Limb) == 0x000008, "Member 'COMP_DismembermentManager_C_GetLimbByBone::Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CurrentRowName) == 0x000010, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CurrentRowName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, BestRowName) == 0x000018, "Member 'COMP_DismembermentManager_C_GetLimbByBone::BestRowName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CurrentBoneName) == 0x000020, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CurrentBoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, BestLimb) == 0x000028, "Member 'COMP_DismembermentManager_C_GetLimbByBone::BestLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CurrentLimb) == 0x0000C0, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CurrentLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, LimbMesh) == 0x000158, "Member 'COMP_DismembermentManager_C_GetLimbByBone::LimbMesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, Temp_int_Array_Index_Variable) == 0x000160, "Member 'COMP_DismembermentManager_C_GetLimbByBone::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, Temp_int_Loop_Counter_Variable) == 0x000164, "Member 'COMP_DismembermentManager_C_GetLimbByBone::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CallFunc_Add_IntInt_ReturnValue) == 0x000168, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CallFunc_NotEqual_NameName_ReturnValue) == 0x00016C, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CallFunc_GetLimbData_LimbData) == 0x000170, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CallFunc_GetLimbData_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000208, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000210, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CallFunc_Array_Get_Item) == 0x000220, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CallFunc_Array_Length_ReturnValue) == 0x000228, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CallFunc_Less_IntInt_ReturnValue) == 0x00022C, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CallFunc_GetLimbMesh_Mesh) == 0x000230, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CallFunc_DoesSocketExist_ReturnValue) == 0x000238, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CallFunc_BoneIsChildOf_ReturnValue) == 0x000239, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByBone, CallFunc_BoneIsChildOf_ReturnValue_1) == 0x00023A, "Member 'COMP_DismembermentManager_C_GetLimbByBone::CallFunc_BoneIsChildOf_ReturnValue_1' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetLimbByIndex
// 0x0040 (0x0040 - 0x0000)
struct COMP_DismembermentManager_C_GetLimbByIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LimbName;                                          // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           LimbNames;                                         // 0x0010(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           CallFunc_GetOrderedLimbList_Limbs;                 // 0x0020(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetLimbByIndex) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetLimbByIndex");
static_assert(sizeof(COMP_DismembermentManager_C_GetLimbByIndex) == 0x000040, "Wrong size on COMP_DismembermentManager_C_GetLimbByIndex");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByIndex, Index_0) == 0x000000, "Member 'COMP_DismembermentManager_C_GetLimbByIndex::Index_0' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByIndex, LimbName) == 0x000004, "Member 'COMP_DismembermentManager_C_GetLimbByIndex::LimbName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByIndex, LimbNames) == 0x000010, "Member 'COMP_DismembermentManager_C_GetLimbByIndex::LimbNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByIndex, CallFunc_GetOrderedLimbList_Limbs) == 0x000020, "Member 'COMP_DismembermentManager_C_GetLimbByIndex::CallFunc_GetOrderedLimbList_Limbs' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByIndex, CallFunc_Array_Get_Item) == 0x000030, "Member 'COMP_DismembermentManager_C_GetLimbByIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByIndex, CallFunc_Array_LastIndex_ReturnValue) == 0x000038, "Member 'COMP_DismembermentManager_C_GetLimbByIndex::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbByIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003C, "Member 'COMP_DismembermentManager_C_GetLimbByIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.UpdateDestroyedDynaDamageBits
// 0x00D8 (0x00D8 - 0x0000)
struct COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits final
{
public:
	class FName                                   ParentBoneName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DynaRootBone;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentDynaElement;                                // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 LimbMeshComponent;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDynaData_DynaData;                     // 0x0050(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00B8(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits");
static_assert(sizeof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits) == 0x0000D8, "Wrong size on COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, ParentBoneName) == 0x000000, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::ParentBoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, DynaRootBone) == 0x000008, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::DynaRootBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CurrentIndex) == 0x000010, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CurrentIndex' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CurrentDynaElement) == 0x000014, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CurrentDynaElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, LimbMeshComponent) == 0x000020, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::LimbMeshComponent' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, Temp_int_Array_Index_Variable) == 0x000030, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_GetLimbMesh_Mesh) == 0x000038, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000040, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_IsValid_ReturnValue) == 0x000041, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_BoneIsChildOf_ReturnValue) == 0x000042, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_IsValid_ReturnValue_1) == 0x000043, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_BitShiftLeft_ReturnValue) == 0x000044, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_Or_IntInt_ReturnValue) == 0x000048, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_GetDynaData_DynaData) == 0x000050, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_GetDynaData_DynaData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000B8, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'COMP_DismembermentManager_C_UpdateDestroyedDynaDamageBits::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetDynaDamageAccumumlator
// 0x0030 (0x0030 - 0x0000)
struct COMP_DismembermentManager_C_GetDynaDamageAccumumlator final
{
public:
	class FName                                   DynaDamageElement;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULimbDamageAccumulator_C*               Accumulator;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULimbDamageAccumulator_C*               DamageAccumulator;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULimbDamageAccumulator_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULimbDamageAccumulator_C*               CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetDynaDamageAccumumlator) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetDynaDamageAccumumlator");
static_assert(sizeof(COMP_DismembermentManager_C_GetDynaDamageAccumumlator) == 0x000030, "Wrong size on COMP_DismembermentManager_C_GetDynaDamageAccumumlator");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageAccumumlator, DynaDamageElement) == 0x000000, "Member 'COMP_DismembermentManager_C_GetDynaDamageAccumumlator::DynaDamageElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageAccumumlator, Accumulator) == 0x000008, "Member 'COMP_DismembermentManager_C_GetDynaDamageAccumumlator::Accumulator' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageAccumumlator, DamageAccumulator) == 0x000010, "Member 'COMP_DismembermentManager_C_GetDynaDamageAccumumlator::DamageAccumulator' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageAccumumlator, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'COMP_DismembermentManager_C_GetDynaDamageAccumumlator::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageAccumumlator, CallFunc_Map_Find_Value) == 0x000020, "Member 'COMP_DismembermentManager_C_GetDynaDamageAccumumlator::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageAccumumlator, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'COMP_DismembermentManager_C_GetDynaDamageAccumumlator::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetLimbRowName
// 0x0178 (0x0178 - 0x0000)
struct COMP_DismembermentManager_C_GetLimbRowName final
{
public:
	struct FSTRUCT_DismemberableLimb              Limb;                                              // 0x0000(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   RowName;                                           // 0x0098(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentRowName;                                    // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B8(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0158(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetLimbRowName) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetLimbRowName");
static_assert(sizeof(COMP_DismembermentManager_C_GetLimbRowName) == 0x000178, "Wrong size on COMP_DismembermentManager_C_GetLimbRowName");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, Limb) == 0x000000, "Member 'COMP_DismembermentManager_C_GetLimbRowName::Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, RowName) == 0x000098, "Member 'COMP_DismembermentManager_C_GetLimbRowName::RowName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, CurrentRowName) == 0x0000A0, "Member 'COMP_DismembermentManager_C_GetLimbRowName::CurrentRowName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'COMP_DismembermentManager_C_GetLimbRowName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'COMP_DismembermentManager_C_GetLimbRowName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'COMP_DismembermentManager_C_GetLimbRowName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B8, "Member 'COMP_DismembermentManager_C_GetLimbRowName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000150, "Member 'COMP_DismembermentManager_C_GetLimbRowName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000158, "Member 'COMP_DismembermentManager_C_GetLimbRowName::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, CallFunc_Array_Get_Item) == 0x000168, "Member 'COMP_DismembermentManager_C_GetLimbRowName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'COMP_DismembermentManager_C_GetLimbRowName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, CallFunc_Less_IntInt_ReturnValue) == 0x000174, "Member 'COMP_DismembermentManager_C_GetLimbRowName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbRowName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000175, "Member 'COMP_DismembermentManager_C_GetLimbRowName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetLimbData
// 0x0148 (0x0148 - 0x0000)
struct COMP_DismembermentManager_C_GetLimbData final
{
public:
	class FName                                   Limb;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              LimbData;                                          // 0x0008(0x0098)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A8(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetLimbData) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetLimbData");
static_assert(sizeof(COMP_DismembermentManager_C_GetLimbData) == 0x000148, "Wrong size on COMP_DismembermentManager_C_GetLimbData");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbData, Limb) == 0x000000, "Member 'COMP_DismembermentManager_C_GetLimbData::Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbData, LimbData) == 0x000008, "Member 'COMP_DismembermentManager_C_GetLimbData::LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbData, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'COMP_DismembermentManager_C_GetLimbData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbData, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A8, "Member 'COMP_DismembermentManager_C_GetLimbData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000140, "Member 'COMP_DismembermentManager_C_GetLimbData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetLimbIndex
// 0x00B0 (0x00B0 - 0x0000)
struct COMP_DismembermentManager_C_GetLimbIndex final
{
public:
	class FName                                   LimbName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetLimbIndex) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetLimbIndex");
static_assert(sizeof(COMP_DismembermentManager_C_GetLimbIndex) == 0x0000B0, "Wrong size on COMP_DismembermentManager_C_GetLimbIndex");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbIndex, LimbName) == 0x000000, "Member 'COMP_DismembermentManager_C_GetLimbIndex::LimbName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbIndex, Index_0) == 0x000008, "Member 'COMP_DismembermentManager_C_GetLimbIndex::Index_0' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbIndex, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'COMP_DismembermentManager_C_GetLimbIndex::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbIndex, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000A8, "Member 'COMP_DismembermentManager_C_GetLimbIndex::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.TryApplyInstantDynaDamage
// 0x0100 (0x0100 - 0x0000)
struct COMP_DismembermentManager_C_TryApplyInstantDynaDamage final
{
public:
	class FName                                   DynaDamageElement;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnEffects;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DynaDamageElement              DynaData;                                          // 0x0010(0x0068)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ElementIndex;                                      // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDynaIndex_Index;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDynaData_DynaData;                     // 0x0098(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_TryApplyInstantDynaDamage");
static_assert(sizeof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage) == 0x000100, "Wrong size on COMP_DismembermentManager_C_TryApplyInstantDynaDamage");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, DynaDamageElement) == 0x000000, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::DynaDamageElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, SpawnEffects) == 0x000008, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::SpawnEffects' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, Result) == 0x000009, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, DynaData) == 0x000010, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::DynaData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, ElementIndex) == 0x000078, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::ElementIndex' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, CallFunc_GetDynaIndex_Index) == 0x00007C, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::CallFunc_GetDynaIndex_Index' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000080, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, CallFunc_BitShiftLeft_ReturnValue) == 0x000084, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, CallFunc_Or_IntInt_ReturnValue) == 0x000088, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, CallFunc_BitShiftLeft_ReturnValue_1) == 0x00008C, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::CallFunc_BitShiftLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, CallFunc_And_IntInt_ReturnValue) == 0x000090, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000094, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TryApplyInstantDynaDamage, CallFunc_GetDynaData_DynaData) == 0x000098, "Member 'COMP_DismembermentManager_C_TryApplyInstantDynaDamage::CallFunc_GetDynaData_DynaData' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetDynaData
// 0x00E8 (0x00E8 - 0x0000)
struct COMP_DismembermentManager_C_GetDynaData final
{
public:
	class FName                                   DynaElement;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DynaDamageElement              DynaData;                                          // 0x0008(0x0068)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetDynaData) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetDynaData");
static_assert(sizeof(COMP_DismembermentManager_C_GetDynaData) == 0x0000E8, "Wrong size on COMP_DismembermentManager_C_GetDynaData");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaData, DynaElement) == 0x000000, "Member 'COMP_DismembermentManager_C_GetDynaData::DynaElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaData, DynaData) == 0x000008, "Member 'COMP_DismembermentManager_C_GetDynaData::DynaData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaData, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'COMP_DismembermentManager_C_GetDynaData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaData, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'COMP_DismembermentManager_C_GetDynaData::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaData, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E0, "Member 'COMP_DismembermentManager_C_GetDynaData::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetDynaIndex
// 0x0028 (0x0028 - 0x0000)
struct COMP_DismembermentManager_C_GetDynaIndex final
{
public:
	class FName                                   DynaElement;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_GetDynaIndex) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetDynaIndex");
static_assert(sizeof(COMP_DismembermentManager_C_GetDynaIndex) == 0x000028, "Wrong size on COMP_DismembermentManager_C_GetDynaIndex");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaIndex, DynaElement) == 0x000000, "Member 'COMP_DismembermentManager_C_GetDynaIndex::DynaElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaIndex, Index_0) == 0x000008, "Member 'COMP_DismembermentManager_C_GetDynaIndex::Index_0' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaIndex, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'COMP_DismembermentManager_C_GetDynaIndex::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaIndex, CallFunc_Array_Find_ReturnValue) == 0x000020, "Member 'COMP_DismembermentManager_C_GetDynaIndex::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.HasAnyDismemberedLimbs
// 0x0002 (0x0002 - 0x0000)
struct COMP_DismembermentManager_C_HasAnyDismemberedLimbs final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_HasAnyDismemberedLimbs) == 0x000001, "Wrong alignment on COMP_DismembermentManager_C_HasAnyDismemberedLimbs");
static_assert(sizeof(COMP_DismembermentManager_C_HasAnyDismemberedLimbs) == 0x000002, "Wrong size on COMP_DismembermentManager_C_HasAnyDismemberedLimbs");
static_assert(offsetof(COMP_DismembermentManager_C_HasAnyDismemberedLimbs, Result) == 0x000000, "Member 'COMP_DismembermentManager_C_HasAnyDismemberedLimbs::Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAnyDismemberedLimbs, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'COMP_DismembermentManager_C_HasAnyDismemberedLimbs::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.HasAnyDynamicDamage
// 0x0002 (0x0002 - 0x0000)
struct COMP_DismembermentManager_C_HasAnyDynamicDamage final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_HasAnyDynamicDamage) == 0x000001, "Wrong alignment on COMP_DismembermentManager_C_HasAnyDynamicDamage");
static_assert(sizeof(COMP_DismembermentManager_C_HasAnyDynamicDamage) == 0x000002, "Wrong size on COMP_DismembermentManager_C_HasAnyDynamicDamage");
static_assert(offsetof(COMP_DismembermentManager_C_HasAnyDynamicDamage, Result) == 0x000000, "Member 'COMP_DismembermentManager_C_HasAnyDynamicDamage::Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAnyDynamicDamage, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000001, "Member 'COMP_DismembermentManager_C_HasAnyDynamicDamage::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.HasAttachedChildLimb
// 0x01B8 (0x01B8 - 0x0000)
struct COMP_DismembermentManager_C_HasAttachedChildLimb final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurrentRootBone;                                   // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentLimb;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RootBone;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           DismemberableLimbs;                                // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLimbAttached_Result;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0040(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0070(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x0110(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_HasAttachedChildLimb) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_HasAttachedChildLimb");
static_assert(sizeof(COMP_DismembermentManager_C_HasAttachedChildLimb) == 0x0001B8, "Wrong size on COMP_DismembermentManager_C_HasAttachedChildLimb");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, Result) == 0x000000, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CurrentRootBone) == 0x000004, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CurrentRootBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CurrentIndex) == 0x00000C, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CurrentIndex' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, Mesh) == 0x000010, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CurrentLimb) == 0x000018, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CurrentLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, RootBone) == 0x000020, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::RootBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, DismemberableLimbs) == 0x000028, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::DismemberableLimbs' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, Temp_int_Array_Index_Variable) == 0x000038, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_IsLimbAttached_Result) == 0x00003C, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_IsLimbAttached_Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000040, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_Array_Get_Item) == 0x000050, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_BoneIsChildOf_ReturnValue) == 0x000068, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000069, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_GetDataTableRowFromName_OutRow) == 0x000070, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000108, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_NotEqual_NameName_ReturnValue) == 0x000109, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_GetLimbData_LimbData) == 0x000110, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_GetLimbData_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_IsValid_ReturnValue) == 0x0001A8, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasAttachedChildLimb, CallFunc_GetLimbMesh_Mesh) == 0x0001B0, "Member 'COMP_DismembermentManager_C_HasAttachedChildLimb::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.HasUnactivatedDynaDamage
// 0x0168 (0x0168 - 0x0000)
struct COMP_DismembermentManager_C_HasUnactivatedDynaDamage final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           DynaDamageElements;                                // 0x0008(0x0010)(Edit, BlueprintVisible)
	class FName                                   CurrentRootBone;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RootBone;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentDynaDamageElement;                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0078(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDynaData_DynaData;                     // 0x00E8(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_HasUnactivatedDynaDamage");
static_assert(sizeof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage) == 0x000168, "Wrong size on COMP_DismembermentManager_C_HasUnactivatedDynaDamage");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, Result) == 0x000000, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, DynaDamageElements) == 0x000008, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::DynaDamageElements' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CurrentRootBone) == 0x000018, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CurrentRootBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, RootBone) == 0x000020, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::RootBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CurrentDynaDamageElement) == 0x000028, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CurrentDynaDamageElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CurrentIndex) == 0x000030, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CurrentIndex' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, Mesh) == 0x000038, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, Temp_int_Array_Index_Variable) == 0x000040, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_BitShiftLeft_ReturnValue) == 0x000044, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_And_IntInt_ReturnValue) == 0x000048, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00004C, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004D, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_Array_Get_Item) == 0x000050, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000060, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_BoneIsChildOf_ReturnValue) == 0x000070, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000071, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_GetDataTableRowFromName_OutRow) == 0x000078, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E0, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000E1, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, Temp_int_Loop_Counter_Variable) == 0x0000E4, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_GetDynaData_DynaData) == 0x0000E8, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_GetDynaData_DynaData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_Less_IntInt_ReturnValue) == 0x000150, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000154, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_HasUnactivatedDynaDamage, CallFunc_GetLimbMesh_Mesh) == 0x000160, "Member 'COMP_DismembermentManager_C_HasUnactivatedDynaDamage::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.IsDynaElementUnactivated
// 0x0020 (0x0020 - 0x0000)
struct COMP_DismembermentManager_C_IsDynaElementUnactivated final
{
public:
	class FName                                   DynaElement;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DynaIndex;                                         // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetDynaIndex_Index;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_IsDynaElementUnactivated) == 0x000004, "Wrong alignment on COMP_DismembermentManager_C_IsDynaElementUnactivated");
static_assert(sizeof(COMP_DismembermentManager_C_IsDynaElementUnactivated) == 0x000020, "Wrong size on COMP_DismembermentManager_C_IsDynaElementUnactivated");
static_assert(offsetof(COMP_DismembermentManager_C_IsDynaElementUnactivated, DynaElement) == 0x000000, "Member 'COMP_DismembermentManager_C_IsDynaElementUnactivated::DynaElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsDynaElementUnactivated, Result) == 0x000008, "Member 'COMP_DismembermentManager_C_IsDynaElementUnactivated::Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsDynaElementUnactivated, DynaIndex) == 0x00000C, "Member 'COMP_DismembermentManager_C_IsDynaElementUnactivated::DynaIndex' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsDynaElementUnactivated, CallFunc_BitShiftLeft_ReturnValue) == 0x000010, "Member 'COMP_DismembermentManager_C_IsDynaElementUnactivated::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsDynaElementUnactivated, CallFunc_And_IntInt_ReturnValue) == 0x000014, "Member 'COMP_DismembermentManager_C_IsDynaElementUnactivated::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsDynaElementUnactivated, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'COMP_DismembermentManager_C_IsDynaElementUnactivated::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsDynaElementUnactivated, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'COMP_DismembermentManager_C_IsDynaElementUnactivated::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_IsDynaElementUnactivated, CallFunc_GetDynaIndex_Index) == 0x00001C, "Member 'COMP_DismembermentManager_C_IsDynaElementUnactivated::CallFunc_GetDynaIndex_Index' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetChildLimbBits
// 0x0050 (0x0050 - 0x0000)
struct COMP_DismembermentManager_C_GetChildLimbBits final
{
public:
	class FName                                   ParentLimb;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IncludeSelf;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ChildBits;                                         // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LimbBits;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetChildLimbs_ChildLimbs;                 // 0x0018(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLimbIndex_Index;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Or_IntInt_ReturnValue;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_GetChildLimbBits) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetChildLimbBits");
static_assert(sizeof(COMP_DismembermentManager_C_GetChildLimbBits) == 0x000050, "Wrong size on COMP_DismembermentManager_C_GetChildLimbBits");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, ParentLimb) == 0x000000, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::ParentLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, IncludeSelf) == 0x000008, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::IncludeSelf' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, ChildBits) == 0x00000C, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::ChildBits' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, LimbBits) == 0x000010, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::LimbBits' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, CallFunc_GetChildLimbs_ChildLimbs) == 0x000018, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::CallFunc_GetChildLimbs_ChildLimbs' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, Temp_int_Array_Index_Variable) == 0x000028, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, CallFunc_Array_Get_Item) == 0x000030, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, CallFunc_GetLimbIndex_Index) == 0x000038, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::CallFunc_GetLimbIndex_Index' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, CallFunc_BitShiftLeft_ReturnValue) == 0x000040, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbBits, CallFunc_Or_IntInt_ReturnValue) == 0x00004C, "Member 'COMP_DismembermentManager_C_GetChildLimbBits::CallFunc_Or_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetChildLimbs
// 0x01D0 (0x01D0 - 0x0000)
struct COMP_DismembermentManager_C_GetChildLimbs final
{
public:
	class FName                                   ParentLimb;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IncludeSelf;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IncludeDescendants;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ChildLimbs;                                        // 0x0010(0x0010)(Parm, OutParm)
	class FName                                   CurrentLimb;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ReturnChildLimbs;                                  // 0x0028(0x0010)(Edit, BlueprintVisible)
	class FName                                   CurrentBone;                                       // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LimbMesh;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParentBone;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x0060(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   CallFunc_GetParentLimb_ParentLimb;                 // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_103[0x1];                                      // 0x0103(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetOrderedLimbList_Limbs;                 // 0x0108(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData_1;                   // 0x0130(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_GetChildLimbs) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetChildLimbs");
static_assert(sizeof(COMP_DismembermentManager_C_GetChildLimbs) == 0x0001D0, "Wrong size on COMP_DismembermentManager_C_GetChildLimbs");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, ParentLimb) == 0x000000, "Member 'COMP_DismembermentManager_C_GetChildLimbs::ParentLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, IncludeSelf) == 0x000008, "Member 'COMP_DismembermentManager_C_GetChildLimbs::IncludeSelf' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, IncludeDescendants) == 0x000009, "Member 'COMP_DismembermentManager_C_GetChildLimbs::IncludeDescendants' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, ChildLimbs) == 0x000010, "Member 'COMP_DismembermentManager_C_GetChildLimbs::ChildLimbs' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CurrentLimb) == 0x000020, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CurrentLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, ReturnChildLimbs) == 0x000028, "Member 'COMP_DismembermentManager_C_GetChildLimbs::ReturnChildLimbs' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CurrentBone) == 0x000038, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CurrentBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, LimbMesh) == 0x000040, "Member 'COMP_DismembermentManager_C_GetChildLimbs::LimbMesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, ParentBone) == 0x000048, "Member 'COMP_DismembermentManager_C_GetChildLimbs::ParentBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, Temp_int_Array_Index_Variable) == 0x000050, "Member 'COMP_DismembermentManager_C_GetChildLimbs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'COMP_DismembermentManager_C_GetChildLimbs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00005C, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00005D, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_GetLimbData_LimbData) == 0x000060, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_GetLimbData_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_GetParentLimb_ParentLimb) == 0x0000F8, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_GetParentLimb_ParentLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000100, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_NotEqual_NameName_ReturnValue) == 0x000101, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_BooleanOR_ReturnValue) == 0x000102, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_Array_Add_ReturnValue) == 0x000104, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_GetOrderedLimbList_Limbs) == 0x000108, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_GetOrderedLimbList_Limbs' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_Array_Get_Item) == 0x000118, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_Array_Add_ReturnValue_1) == 0x000128, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_BoneIsChildOf_ReturnValue) == 0x00012C, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_GetLimbData_LimbData_1) == 0x000130, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_GetLimbData_LimbData_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildLimbs, CallFunc_GetLimbMesh_Mesh) == 0x0001C8, "Member 'COMP_DismembermentManager_C_GetChildLimbs::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetChildDynaElements
// 0x0160 (0x0160 - 0x0000)
struct COMP_DismembermentManager_C_GetChildDynaElements final
{
public:
	class FName                                   ParentElement;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ChildElements;                                     // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FName>                           ReturnChildElements;                               // 0x0018(0x0010)(Edit, BlueprintVisible)
	class FName                                   CurrentBone;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentDynaElement;                                // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParentBone;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LimbMesh;                                          // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0050(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDynaData_DynaData;                     // 0x0068(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDynaData_DynaData_1;                   // 0x00D8(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_GetChildDynaElements) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetChildDynaElements");
static_assert(sizeof(COMP_DismembermentManager_C_GetChildDynaElements) == 0x000160, "Wrong size on COMP_DismembermentManager_C_GetChildDynaElements");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, ParentElement) == 0x000000, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::ParentElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, ChildElements) == 0x000008, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::ChildElements' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, ReturnChildElements) == 0x000018, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::ReturnChildElements' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, CurrentBone) == 0x000028, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::CurrentBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, CurrentDynaElement) == 0x000030, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::CurrentDynaElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, ParentBone) == 0x000038, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::ParentBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, LimbMesh) == 0x000040, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::LimbMesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, Temp_int_Array_Index_Variable) == 0x000048, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000050, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, CallFunc_Array_Get_Item) == 0x000060, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, CallFunc_GetDynaData_DynaData) == 0x000068, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::CallFunc_GetDynaData_DynaData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, CallFunc_GetDynaData_DynaData_1) == 0x0000D8, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::CallFunc_GetDynaData_DynaData_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, CallFunc_Array_Add_ReturnValue) == 0x000140, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, CallFunc_GetLimbMesh_Mesh) == 0x000148, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, CallFunc_BoneIsChildOf_ReturnValue) == 0x000150, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, Temp_int_Loop_Counter_Variable) == 0x000154, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, CallFunc_Less_IntInt_ReturnValue) == 0x000158, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetChildDynaElements, CallFunc_Add_IntInt_ReturnValue) == 0x00015C, "Member 'COMP_DismembermentManager_C_GetChildDynaElements::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetDynaDamageBonusFromBoneName
// 0x0078 (0x0078 - 0x0000)
struct COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BonusPercent;                                      // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDynaElementUnactivated_Result;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDynaData_DynaData;                     // 0x0010(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName");
static_assert(sizeof(COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName) == 0x000078, "Wrong size on COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName, BoneName) == 0x000000, "Member 'COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName::BoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName, BonusPercent) == 0x000008, "Member 'COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName::BonusPercent' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName, CallFunc_IsDynaElementUnactivated_Result) == 0x00000C, "Member 'COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName::CallFunc_IsDynaElementUnactivated_Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName, CallFunc_GetDynaData_DynaData) == 0x000010, "Member 'COMP_DismembermentManager_C_GetDynaDamageBonusFromBoneName::CallFunc_GetDynaData_DynaData' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetOrderedLimbList
// 0x0100 (0x0100 - 0x0000)
struct COMP_DismembermentManager_C_GetOrderedLimbList final
{
public:
	TArray<class FName>                           Limbs;                                             // 0x0000(0x0010)(Parm, OutParm)
	class FName                                   LimbName;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           UnorderedLimbList;                                 // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00E8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_GetOrderedLimbList) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetOrderedLimbList");
static_assert(sizeof(COMP_DismembermentManager_C_GetOrderedLimbList) == 0x000100, "Wrong size on COMP_DismembermentManager_C_GetOrderedLimbList");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, Limbs) == 0x000000, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::Limbs' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, LimbName) == 0x000010, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::LimbName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, UnorderedLimbList) == 0x000018, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::UnorderedLimbList' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, Temp_int_Array_Index_Variable) == 0x000028, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, CallFunc_Array_Get_Item) == 0x000030, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, CallFunc_Array_Length_ReturnValue_2) == 0x00003C, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000E0, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, Temp_int_Loop_Counter_Variable) == 0x0000E4, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000E8, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetOrderedLimbList, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'COMP_DismembermentManager_C_GetOrderedLimbList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetDynaDamageByBone
// 0x00E0 (0x00E0 - 0x0000)
struct COMP_DismembermentManager_C_GetDynaDamageByBone final
{
public:
	class FName                                   Bone;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           DynaDamageElements;                                // 0x0008(0x0010)(Parm, OutParm)
	TArray<class FName>                           Elements;                                          // 0x0018(0x0010)(Edit, BlueprintVisible)
	class FName                                   CurrentDynaDamage;                                 // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentRootBone;                                   // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0048(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00C0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetDynaDamageByBone) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetDynaDamageByBone");
static_assert(sizeof(COMP_DismembermentManager_C_GetDynaDamageByBone) == 0x0000E0, "Wrong size on COMP_DismembermentManager_C_GetDynaDamageByBone");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, Bone) == 0x000000, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::Bone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, DynaDamageElements) == 0x000008, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::DynaDamageElements' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, Elements) == 0x000018, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::Elements' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, CurrentDynaDamage) == 0x000028, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::CurrentDynaDamage' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, CurrentRootBone) == 0x000030, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::CurrentRootBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, Temp_int_Array_Index_Variable) == 0x000038, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, CallFunc_Array_Add_ReturnValue) == 0x00003C, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000040, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, CallFunc_GetDataTableRowFromName_OutRow) == 0x000048, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000C0, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, CallFunc_Array_Get_Item) == 0x0000D4, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByBone, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'COMP_DismembermentManager_C_GetDynaDamageByBone::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetDynaDamageBone
// 0x0080 (0x0080 - 0x0000)
struct COMP_DismembermentManager_C_GetDynaDamageBone final
{
public:
	class FName                                   DynaDamage;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Bone;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetDynaDamageBone) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetDynaDamageBone");
static_assert(sizeof(COMP_DismembermentManager_C_GetDynaDamageBone) == 0x000080, "Wrong size on COMP_DismembermentManager_C_GetDynaDamageBone");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageBone, DynaDamage) == 0x000000, "Member 'COMP_DismembermentManager_C_GetDynaDamageBone::DynaDamage' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageBone, Bone) == 0x000008, "Member 'COMP_DismembermentManager_C_GetDynaDamageBone::Bone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageBone, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'COMP_DismembermentManager_C_GetDynaDamageBone::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageBone, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000078, "Member 'COMP_DismembermentManager_C_GetDynaDamageBone::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetLimbStrengthSettings
// 0x0038 (0x0038 - 0x0000)
struct COMP_DismembermentManager_C_GetLimbStrengthSettings final
{
public:
	ENUM_LimbStrength                             Strength;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StackArmor;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StackCount;                                        // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_LimbStrengthSettings           CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x0008)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetLimbStrengthSettings) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetLimbStrengthSettings");
static_assert(sizeof(COMP_DismembermentManager_C_GetLimbStrengthSettings) == 0x000038, "Wrong size on COMP_DismembermentManager_C_GetLimbStrengthSettings");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbStrengthSettings, Strength) == 0x000000, "Member 'COMP_DismembermentManager_C_GetLimbStrengthSettings::Strength' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbStrengthSettings, StackArmor) == 0x000004, "Member 'COMP_DismembermentManager_C_GetLimbStrengthSettings::StackArmor' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbStrengthSettings, StackCount) == 0x000008, "Member 'COMP_DismembermentManager_C_GetLimbStrengthSettings::StackCount' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbStrengthSettings, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000010, "Member 'COMP_DismembermentManager_C_GetLimbStrengthSettings::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbStrengthSettings, CallFunc_Conv_StringToName_ReturnValue) == 0x000020, "Member 'COMP_DismembermentManager_C_GetLimbStrengthSettings::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbStrengthSettings, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'COMP_DismembermentManager_C_GetLimbStrengthSettings::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbStrengthSettings, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000030, "Member 'COMP_DismembermentManager_C_GetLimbStrengthSettings::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetDynaDamageByIndex
// 0x0028 (0x0028 - 0x0000)
struct COMP_DismembermentManager_C_GetDynaDamageByIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DynaName;                                          // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_GetDynaDamageByIndex) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetDynaDamageByIndex");
static_assert(sizeof(COMP_DismembermentManager_C_GetDynaDamageByIndex) == 0x000028, "Wrong size on COMP_DismembermentManager_C_GetDynaDamageByIndex");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByIndex, Index_0) == 0x000000, "Member 'COMP_DismembermentManager_C_GetDynaDamageByIndex::Index_0' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByIndex, DynaName) == 0x000004, "Member 'COMP_DismembermentManager_C_GetDynaDamageByIndex::DynaName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByIndex, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'COMP_DismembermentManager_C_GetDynaDamageByIndex::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDynaDamageByIndex, CallFunc_Array_Get_Item) == 0x000020, "Member 'COMP_DismembermentManager_C_GetDynaDamageByIndex::CallFunc_Array_Get_Item' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.SetOwnerLimbRemoved
// 0x00B0 (0x00B0 - 0x0000)
struct COMP_DismembermentManager_C_SetOwnerLimbRemoved final
{
public:
	class FName                                   Limb;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              LimbData;                                          // 0x0008(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              LimbActor;                                         // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Initialization;                                    // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_SetOwnerLimbRemoved) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_SetOwnerLimbRemoved");
static_assert(sizeof(COMP_DismembermentManager_C_SetOwnerLimbRemoved) == 0x0000B0, "Wrong size on COMP_DismembermentManager_C_SetOwnerLimbRemoved");
static_assert(offsetof(COMP_DismembermentManager_C_SetOwnerLimbRemoved, Limb) == 0x000000, "Member 'COMP_DismembermentManager_C_SetOwnerLimbRemoved::Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetOwnerLimbRemoved, LimbData) == 0x000008, "Member 'COMP_DismembermentManager_C_SetOwnerLimbRemoved::LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetOwnerLimbRemoved, LimbActor) == 0x0000A0, "Member 'COMP_DismembermentManager_C_SetOwnerLimbRemoved::LimbActor' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetOwnerLimbRemoved, Initialization) == 0x0000A8, "Member 'COMP_DismembermentManager_C_SetOwnerLimbRemoved::Initialization' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.SetOwnerDynaDestroyed
// 0x000C (0x000C - 0x0000)
struct COMP_DismembermentManager_C_SetOwnerDynaDestroyed final
{
public:
	class FName                                   DynaElement;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Initialization;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_SetOwnerDynaDestroyed) == 0x000004, "Wrong alignment on COMP_DismembermentManager_C_SetOwnerDynaDestroyed");
static_assert(sizeof(COMP_DismembermentManager_C_SetOwnerDynaDestroyed) == 0x00000C, "Wrong size on COMP_DismembermentManager_C_SetOwnerDynaDestroyed");
static_assert(offsetof(COMP_DismembermentManager_C_SetOwnerDynaDestroyed, DynaElement) == 0x000000, "Member 'COMP_DismembermentManager_C_SetOwnerDynaDestroyed::DynaElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SetOwnerDynaDestroyed, Initialization) == 0x000008, "Member 'COMP_DismembermentManager_C_SetOwnerDynaDestroyed::Initialization' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.ComputeSlicingDamage
// 0x0050 (0x0050 - 0x0000)
struct COMP_DismembermentManager_C_ComputeSlicingDamage final
{
public:
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         Result;                                            // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlicingFactor;                                     // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseDamage;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_ComputeSlicingDamage) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_ComputeSlicingDamage");
static_assert(sizeof(COMP_DismembermentManager_C_ComputeSlicingDamage) == 0x000050, "Wrong size on COMP_DismembermentManager_C_ComputeSlicingDamage");
static_assert(offsetof(COMP_DismembermentManager_C_ComputeSlicingDamage, DamageInstance) == 0x000000, "Member 'COMP_DismembermentManager_C_ComputeSlicingDamage::DamageInstance' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ComputeSlicingDamage, Result) == 0x000028, "Member 'COMP_DismembermentManager_C_ComputeSlicingDamage::Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ComputeSlicingDamage, SlicingFactor) == 0x00002C, "Member 'COMP_DismembermentManager_C_ComputeSlicingDamage::SlicingFactor' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ComputeSlicingDamage, BaseDamage) == 0x000030, "Member 'COMP_DismembermentManager_C_ComputeSlicingDamage::BaseDamage' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ComputeSlicingDamage, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'COMP_DismembermentManager_C_ComputeSlicingDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ComputeSlicingDamage, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'COMP_DismembermentManager_C_ComputeSlicingDamage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ComputeSlicingDamage, CallFunc_MapRangeClamped_ReturnValue) == 0x00003C, "Member 'COMP_DismembermentManager_C_ComputeSlicingDamage::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ComputeSlicingDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'COMP_DismembermentManager_C_ComputeSlicingDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ComputeSlicingDamage, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'COMP_DismembermentManager_C_ComputeSlicingDamage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ComputeSlicingDamage, CallFunc_FMin_ReturnValue) == 0x000048, "Member 'COMP_DismembermentManager_C_ComputeSlicingDamage::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ComputeSlicingDamage, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'COMP_DismembermentManager_C_ComputeSlicingDamage::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.ShouldDestroyLimbActor
// 0x0001 (0x0001 - 0x0000)
struct COMP_DismembermentManager_C_ShouldDestroyLimbActor final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_ShouldDestroyLimbActor) == 0x000001, "Wrong alignment on COMP_DismembermentManager_C_ShouldDestroyLimbActor");
static_assert(sizeof(COMP_DismembermentManager_C_ShouldDestroyLimbActor) == 0x000001, "Wrong size on COMP_DismembermentManager_C_ShouldDestroyLimbActor");
static_assert(offsetof(COMP_DismembermentManager_C_ShouldDestroyLimbActor, Result) == 0x000000, "Member 'COMP_DismembermentManager_C_ShouldDestroyLimbActor::Result' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.DoesLimbDestroyActor
// 0x0030 (0x0030 - 0x0000)
struct COMP_DismembermentManager_C_DoesLimbDestroyActor final
{
public:
	class FName                                   Limb;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADismembermentLimb_Base_C*              K2Node_DynamicCast_AsDismemberment_Limb_Base;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_DoesLimbDestroyActor) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_DoesLimbDestroyActor");
static_assert(sizeof(COMP_DismembermentManager_C_DoesLimbDestroyActor) == 0x000030, "Wrong size on COMP_DismembermentManager_C_DoesLimbDestroyActor");
static_assert(offsetof(COMP_DismembermentManager_C_DoesLimbDestroyActor, Limb) == 0x000000, "Member 'COMP_DismembermentManager_C_DoesLimbDestroyActor::Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DoesLimbDestroyActor, Result) == 0x000008, "Member 'COMP_DismembermentManager_C_DoesLimbDestroyActor::Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DoesLimbDestroyActor, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'COMP_DismembermentManager_C_DoesLimbDestroyActor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DoesLimbDestroyActor, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000018, "Member 'COMP_DismembermentManager_C_DoesLimbDestroyActor::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DoesLimbDestroyActor, K2Node_DynamicCast_AsDismemberment_Limb_Base) == 0x000020, "Member 'COMP_DismembermentManager_C_DoesLimbDestroyActor::K2Node_DynamicCast_AsDismemberment_Limb_Base' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DoesLimbDestroyActor, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'COMP_DismembermentManager_C_DoesLimbDestroyActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.SpawnDismemberLimbEffects
// 0x0230 (0x0230 - 0x0000)
struct COMP_DismembermentManager_C_SpawnDismemberLimbEffects final
{
public:
	class FName                                   LimbName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADismembermentLimb_Base_C*              NewLimb;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              LimbData;                                          // 0x0010(0x0098)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_LimbSpawnEffect                CallFunc_Array_Get_Item;                           // 0x00D0(0x0050)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FSTRUCT_LimbSpawnEffect                CallFunc_Array_Get_Item_1;                         // 0x0120(0x0050)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_186[0x2];                                      // 0x0186(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0188(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects) == 0x000010, "Wrong alignment on COMP_DismembermentManager_C_SpawnDismemberLimbEffects");
static_assert(sizeof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects) == 0x000230, "Wrong size on COMP_DismembermentManager_C_SpawnDismemberLimbEffects");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, LimbName) == 0x000000, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::LimbName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, NewLimb) == 0x000008, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::NewLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, LimbData) == 0x000010, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, Temp_bool_Variable) == 0x0000A8, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, Temp_int_Array_Index_Variable_1) == 0x0000B8, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, CallFunc_GetLimbMesh_Mesh) == 0x0000C0, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, Temp_int_Loop_Counter_Variable_1) == 0x0000C8, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000CC, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000174, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, K2Node_Select_Default) == 0x000178, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, CallFunc_Array_Length_ReturnValue_1) == 0x000180, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, CallFunc_Less_IntInt_ReturnValue_1) == 0x000184, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, CallFunc_IsValid_ReturnValue) == 0x000185, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, CallFunc_GetDataTableRowFromName_OutRow) == 0x000188, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnDismemberLimbEffects, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000220, "Member 'COMP_DismembermentManager_C_SpawnDismemberLimbEffects::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetParentLimb
// 0x02E8 (0x02E8 - 0x0000)
struct COMP_DismembermentManager_C_GetParentLimb final
{
public:
	class FName                                   ChildLimb;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParentLimb;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BestLimb;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentLimb;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x0030(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData_1;                   // 0x00C8(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData_2;                   // 0x0170(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData_3;                   // 0x0210(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh_1;                       // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue_1;              // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetOrderedLimbList_Limbs;                 // 0x02C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x02D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetParentLimb) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetParentLimb");
static_assert(sizeof(COMP_DismembermentManager_C_GetParentLimb) == 0x0002E8, "Wrong size on COMP_DismembermentManager_C_GetParentLimb");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, ChildLimb) == 0x000000, "Member 'COMP_DismembermentManager_C_GetParentLimb::ChildLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, ParentLimb) == 0x000008, "Member 'COMP_DismembermentManager_C_GetParentLimb::ParentLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, BestLimb) == 0x000010, "Member 'COMP_DismembermentManager_C_GetParentLimb::BestLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CurrentLimb) == 0x000018, "Member 'COMP_DismembermentManager_C_GetParentLimb::CurrentLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, Temp_int_Array_Index_Variable) == 0x000020, "Member 'COMP_DismembermentManager_C_GetParentLimb::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'COMP_DismembermentManager_C_GetParentLimb::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_GetLimbData_LimbData) == 0x000030, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_GetLimbData_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_GetLimbData_LimbData_1) == 0x0000C8, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_GetLimbData_LimbData_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_GetLimbMesh_Mesh) == 0x000160, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_BoneIsChildOf_ReturnValue) == 0x000168, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_GetLimbData_LimbData_2) == 0x000170, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_GetLimbData_LimbData_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_Not_PreBool_ReturnValue) == 0x000208, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_GetLimbData_LimbData_3) == 0x000210, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_GetLimbData_LimbData_3' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0002A8, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_BooleanOR_ReturnValue) == 0x0002A9, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_GetLimbMesh_Mesh_1) == 0x0002B0, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_GetLimbMesh_Mesh_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_BoneIsChildOf_ReturnValue_1) == 0x0002B8, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_BoneIsChildOf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_GetOrderedLimbList_Limbs) == 0x0002C0, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_GetOrderedLimbList_Limbs' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_NotEqual_NameName_ReturnValue) == 0x0002D0, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_Array_Get_Item) == 0x0002D4, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_Array_Length_ReturnValue) == 0x0002DC, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetParentLimb, CallFunc_Less_IntInt_ReturnValue) == 0x0002E0, "Member 'COMP_DismembermentManager_C_GetParentLimb::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetLimbBoneNames
// 0x01A0 (0x01A0 - 0x0000)
struct COMP_DismembermentManager_C_GetLimbBoneNames final
{
public:
	class FName                                   Limb;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           LimbBoneNames;                                     // 0x0008(0x0010)(Parm, OutParm)
	class FName                                   ParentBone;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OtherLimbRootBone;                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrentBoneName;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LimbRootBone;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           ChildBones;                                        // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x005C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue_1;               // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue_2;               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DismemberableLimb              CallFunc_GetLimbData_LimbData;                     // 0x00A0(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value_1;                         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0158(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetParentBone_ReturnValue;                // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumBones_ReturnValue;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetBoneName_ReturnValue;                  // 0x018C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetLimbBoneNames) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetLimbBoneNames");
static_assert(sizeof(COMP_DismembermentManager_C_GetLimbBoneNames) == 0x0001A0, "Wrong size on COMP_DismembermentManager_C_GetLimbBoneNames");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, Limb) == 0x000000, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, LimbBoneNames) == 0x000008, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::LimbBoneNames' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, ParentBone) == 0x000018, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::ParentBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, OtherLimbRootBone) == 0x000020, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::OtherLimbRootBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CurrentBoneName) == 0x000028, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CurrentBoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, LimbRootBone) == 0x000030, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::LimbRootBone' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, Mesh) == 0x000038, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, ChildBones) == 0x000040, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::ChildBones' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, Temp_int_Array_Index_Variable) == 0x000058, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, Temp_name_Variable) == 0x00005C, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, Temp_int_Variable) == 0x000064, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_GetLimbMesh_Mesh) == 0x000070, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Map_Find_Value) == 0x000078, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Map_Find_ReturnValue) == 0x000080, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Map_Contains_ReturnValue) == 0x000081, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000082, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Map_Contains_ReturnValue_1) == 0x000083, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Map_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Not_PreBool_ReturnValue) == 0x000084, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, Temp_int_Array_Index_Variable_1) == 0x000088, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Add_IntInt_ReturnValue_2) == 0x000090, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Array_Get_Item) == 0x000094, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Map_Contains_ReturnValue_2) == 0x00009C, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Map_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_GetLimbData_LimbData) == 0x0000A0, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_GetLimbData_LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Not_PreBool_ReturnValue_1) == 0x000138, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Array_Length_ReturnValue) == 0x00013C, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Array_Add_ReturnValue) == 0x000144, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Map_Find_Value_1) == 0x000148, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Map_Find_ReturnValue_1) == 0x000150, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000151, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Map_Keys_Keys) == 0x000158, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Array_Get_Item_1) == 0x000168, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Array_Length_ReturnValue_1) == 0x000170, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Less_IntInt_ReturnValue_1) == 0x000174, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Map_Length_ReturnValue) == 0x000178, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00017C, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_GetParentBone_ReturnValue) == 0x000180, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_GetParentBone_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_GetNumBones_ReturnValue) == 0x000188, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_GetNumBones_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_GetBoneName_ReturnValue) == 0x00018C, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_GetBoneName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_Subtract_IntInt_ReturnValue) == 0x000194, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetLimbBoneNames, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000198, "Member 'COMP_DismembermentManager_C_GetLimbBoneNames::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.GetDecalSampler
// 0x0030 (0x0030 - 0x0000)
struct COMP_DismembermentManager_C_GetDecalSampler final
{
public:
	class USkinnedDecalSampler*                   SkinnedDecalSampler;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADismembermentLimb_Base_C*              K2Node_DynamicCast_AsDismemberment_Limb_Base;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_GetDecalSampler) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_GetDecalSampler");
static_assert(sizeof(COMP_DismembermentManager_C_GetDecalSampler) == 0x000030, "Wrong size on COMP_DismembermentManager_C_GetDecalSampler");
static_assert(offsetof(COMP_DismembermentManager_C_GetDecalSampler, SkinnedDecalSampler) == 0x000000, "Member 'COMP_DismembermentManager_C_GetDecalSampler::SkinnedDecalSampler' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDecalSampler, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'COMP_DismembermentManager_C_GetDecalSampler::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDecalSampler, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000010, "Member 'COMP_DismembermentManager_C_GetDecalSampler::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDecalSampler, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'COMP_DismembermentManager_C_GetDecalSampler::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDecalSampler, K2Node_DynamicCast_AsDismemberment_Limb_Base) == 0x000020, "Member 'COMP_DismembermentManager_C_GetDecalSampler::K2Node_DynamicCast_AsDismemberment_Limb_Base' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_GetDecalSampler, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'COMP_DismembermentManager_C_GetDecalSampler::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.StreamDismemberableLimbAssets
// 0x00A8 (0x00A8 - 0x0000)
struct COMP_DismembermentManager_C_StreamDismemberableLimbAssets final
{
public:
	class FName                                   LimbName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              LimbData;                                          // 0x0008(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_StreamDismemberableLimbAssets) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_StreamDismemberableLimbAssets");
static_assert(sizeof(COMP_DismembermentManager_C_StreamDismemberableLimbAssets) == 0x0000A8, "Wrong size on COMP_DismembermentManager_C_StreamDismemberableLimbAssets");
static_assert(offsetof(COMP_DismembermentManager_C_StreamDismemberableLimbAssets, LimbName) == 0x000000, "Member 'COMP_DismembermentManager_C_StreamDismemberableLimbAssets::LimbName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_StreamDismemberableLimbAssets, LimbData) == 0x000008, "Member 'COMP_DismembermentManager_C_StreamDismemberableLimbAssets::LimbData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_StreamDismemberableLimbAssets, CallFunc_Map_Contains_ReturnValue) == 0x0000A0, "Member 'COMP_DismembermentManager_C_StreamDismemberableLimbAssets::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_StreamDismemberableLimbAssets, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'COMP_DismembermentManager_C_StreamDismemberableLimbAssets::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.SpawnEffect
// 0x0080 (0x0080 - 0x0000)
struct COMP_DismembermentManager_C_SpawnEffect final
{
public:
	struct FSTRUCT_LimbSpawnEffect                EffectParams;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class USceneComponent*                        ParentComponent;                                   // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   K2Node_Select_Default;                             // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnEffectImmediately_ParticleSystem;    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_SpawnEffect) == 0x000010, "Wrong alignment on COMP_DismembermentManager_C_SpawnEffect");
static_assert(sizeof(COMP_DismembermentManager_C_SpawnEffect) == 0x000080, "Wrong size on COMP_DismembermentManager_C_SpawnEffect");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffect, EffectParams) == 0x000000, "Member 'COMP_DismembermentManager_C_SpawnEffect::EffectParams' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffect, ParentComponent) == 0x000050, "Member 'COMP_DismembermentManager_C_SpawnEffect::ParentComponent' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffect, BoneName) == 0x000058, "Member 'COMP_DismembermentManager_C_SpawnEffect::BoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffect, Temp_bool_Variable) == 0x000060, "Member 'COMP_DismembermentManager_C_SpawnEffect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffect, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'COMP_DismembermentManager_C_SpawnEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffect, CallFunc_IsValid_ReturnValue_1) == 0x000062, "Member 'COMP_DismembermentManager_C_SpawnEffect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffect, CallFunc_NotEqual_NameName_ReturnValue) == 0x000063, "Member 'COMP_DismembermentManager_C_SpawnEffect::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffect, K2Node_Select_Default) == 0x000064, "Member 'COMP_DismembermentManager_C_SpawnEffect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffect, CallFunc_SpawnEffectImmediately_ParticleSystem) == 0x000070, "Member 'COMP_DismembermentManager_C_SpawnEffect::CallFunc_SpawnEffectImmediately_ParticleSystem' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.SpawnEffectAttached
// 0x0060 (0x0060 - 0x0000)
struct COMP_DismembermentManager_C_SpawnEffectAttached final
{
public:
	struct FSTRUCT_LimbSpawnEffect                EffectParams;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_SpawnEffectAttached) == 0x000010, "Wrong alignment on COMP_DismembermentManager_C_SpawnEffectAttached");
static_assert(sizeof(COMP_DismembermentManager_C_SpawnEffectAttached) == 0x000060, "Wrong size on COMP_DismembermentManager_C_SpawnEffectAttached");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectAttached, EffectParams) == 0x000000, "Member 'COMP_DismembermentManager_C_SpawnEffectAttached::EffectParams' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectAttached, BoneName) == 0x000050, "Member 'COMP_DismembermentManager_C_SpawnEffectAttached::BoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectAttached, CallFunc_GetLimbMesh_Mesh) == 0x000058, "Member 'COMP_DismembermentManager_C_SpawnEffectAttached::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.SpawnEffectImmediately
// 0x00E0 (0x00E0 - 0x0000)
struct COMP_DismembermentManager_C_SpawnEffectImmediately final
{
public:
	class UNiagaraSystem*                         NiagaraSystem;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ParentComponent;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LocalTransform;                                    // 0x0020(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      ParticleSystem;                                    // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformFromBoneSpace_OutPosition;       // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_TransformFromBoneSpace_OutRotation;       // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_DismembermentManager_C_SpawnEffectImmediately) == 0x000010, "Wrong alignment on COMP_DismembermentManager_C_SpawnEffectImmediately");
static_assert(sizeof(COMP_DismembermentManager_C_SpawnEffectImmediately) == 0x0000E0, "Wrong size on COMP_DismembermentManager_C_SpawnEffectImmediately");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, NiagaraSystem) == 0x000000, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::NiagaraSystem' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, ParentComponent) == 0x000008, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::ParentComponent' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, BoneName) == 0x000010, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::BoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, LocalTransform) == 0x000020, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::LocalTransform' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, ParticleSystem) == 0x000050, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::ParticleSystem' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_IsValid_ReturnValue_1) == 0x000059, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_BreakTransform_Location) == 0x00005C, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_BreakTransform_Rotation) == 0x000068, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_BreakTransform_Scale) == 0x000074, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_BreakTransform_Location_1) == 0x000080, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_BreakTransform_Rotation_1) == 0x00008C, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_BreakTransform_Scale_1) == 0x000098, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_SpawnSystemAttached_ReturnValue) == 0x0000A8, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_GetLimbMesh_Mesh) == 0x0000B0, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_TransformFromBoneSpace_OutPosition) == 0x0000B8, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_TransformFromBoneSpace_OutPosition' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_TransformFromBoneSpace_OutRotation) == 0x0000C4, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_TransformFromBoneSpace_OutRotation' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_SpawnEffectImmediately, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0000D0, "Member 'COMP_DismembermentManager_C_SpawnEffectImmediately::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.DrawDebugSpheres
// 0x0198 (0x0198 - 0x0000)
struct COMP_DismembermentManager_C_DrawDebugSpheres final
{
public:
	struct FSTRUCT_DynaDamageElement              CurrentDynaDamage;                                 // 0x0000(0x0068)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          Pawn;                                              // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   CurrentDebugDynaDamageElement;                     // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Map_Find_Value;                           // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_DynaDamageElement              CallFunc_GetDynaData_DynaData;                     // 0x00C0(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformFromBoneSpace_OutPosition;       // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_TransformFromBoneSpace_OutRotation;       // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x015C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0170(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_DrawDebugSpheres) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_DrawDebugSpheres");
static_assert(sizeof(COMP_DismembermentManager_C_DrawDebugSpheres) == 0x000198, "Wrong size on COMP_DismembermentManager_C_DrawDebugSpheres");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CurrentDynaDamage) == 0x000000, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CurrentDynaDamage' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, Pawn) == 0x000068, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::Pawn' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CurrentDebugDynaDamageElement) == 0x000070, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CurrentDebugDynaDamageElement' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, Temp_struct_Variable) == 0x000078, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, Temp_struct_Variable_1) == 0x000088, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, Temp_int_Array_Index_Variable) == 0x000098, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x0000A4, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_Map_Remove_ReturnValue) == 0x0000A8, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_Map_Find_Value) == 0x0000AC, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_Map_Find_ReturnValue) == 0x0000B0, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B4, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000B8, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_GetDynaData_DynaData) == 0x0000C0, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_GetDynaData_DynaData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_TransformFromBoneSpace_OutPosition) == 0x000128, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_TransformFromBoneSpace_OutPosition' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_TransformFromBoneSpace_OutRotation) == 0x000134, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_TransformFromBoneSpace_OutRotation' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, Temp_bool_Variable) == 0x000140, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_GetOwner_ReturnValue) == 0x000148, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000150, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, K2Node_Select_Default) == 0x00015C, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_Map_Keys_Keys) == 0x000170, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_Array_Get_Item) == 0x000180, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_Array_Length_ReturnValue) == 0x000188, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_Array_Length_ReturnValue_1) == 0x00018C, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_Less_IntInt_ReturnValue) == 0x000190, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_DrawDebugSpheres, CallFunc_Greater_IntInt_ReturnValue) == 0x000191, "Member 'COMP_DismembermentManager_C_DrawDebugSpheres::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.TransferAttachedLimbEffects
// 0x00C0 (0x00C0 - 0x0000)
struct COMP_DismembermentManager_C_TransferAttachedLimbEffects final
{
public:
	class ADismembermentLimb_Base_C*              New_Limb;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachSocketName;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     EffectsComponent;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 LimbMesh;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 NewLimbMesh;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProximityMineProjectile_C*             K2Node_DynamicCast_AsProximity_Mine_Projectile;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachAndModifyComponentOwnership_ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue;          // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BoneIsChildOf_ReturnValue;                // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UFXSystemComponent*>             CallFunc_GetChildComponentsByClass_ReturnValue;    // 0x0098(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFXSystemComponent*                     CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_TransferAttachedLimbEffects) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_TransferAttachedLimbEffects");
static_assert(sizeof(COMP_DismembermentManager_C_TransferAttachedLimbEffects) == 0x0000C0, "Wrong size on COMP_DismembermentManager_C_TransferAttachedLimbEffects");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, New_Limb) == 0x000000, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::New_Limb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, BoneName) == 0x000008, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::BoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, AttachSocketName) == 0x000010, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::AttachSocketName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, EffectsComponent) == 0x000018, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::EffectsComponent' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, LimbMesh) == 0x000020, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::LimbMesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, NewLimbMesh) == 0x000028, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::NewLimbMesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, Temp_int_Array_Index_Variable) == 0x000030, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_GetChildrenComponents_Children) == 0x000048, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_Array_Get_Item) == 0x000058, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_GetOwner_ReturnValue) == 0x000068, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, K2Node_DynamicCast_AsProximity_Mine_Projectile) == 0x000078, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::K2Node_DynamicCast_AsProximity_Mine_Projectile' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_Add_IntInt_ReturnValue_1) == 0x000084, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_AttachAndModifyComponentOwnership_ReturnValue) == 0x000088, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_AttachAndModifyComponentOwnership_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_GetAttachSocketName_ReturnValue) == 0x00008C, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_GetAttachSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000094, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_BoneIsChildOf_ReturnValue) == 0x000095, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_BoneIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_GetChildComponentsByClass_ReturnValue) == 0x000098, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_GetChildComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_GetLimbMesh_Mesh) == 0x0000A8, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_Array_Length_ReturnValue_1) == 0x0000B8, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferAttachedLimbEffects, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BC, "Member 'COMP_DismembermentManager_C_TransferAttachedLimbEffects::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.TransferDecals
// 0x0020 (0x0020 - 0x0000)
struct COMP_DismembermentManager_C_TransferDecals final
{
public:
	class ADismembermentLimb_Base_C*              NewLimb;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedDecalSampler*                   CallFunc_GetDecalSampler_SkinnedDecalSampler;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_TransferDecals) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_TransferDecals");
static_assert(sizeof(COMP_DismembermentManager_C_TransferDecals) == 0x000020, "Wrong size on COMP_DismembermentManager_C_TransferDecals");
static_assert(offsetof(COMP_DismembermentManager_C_TransferDecals, NewLimb) == 0x000000, "Member 'COMP_DismembermentManager_C_TransferDecals::NewLimb' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferDecals, Result) == 0x000008, "Member 'COMP_DismembermentManager_C_TransferDecals::Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferDecals, CallFunc_GetDecalSampler_SkinnedDecalSampler) == 0x000010, "Member 'COMP_DismembermentManager_C_TransferDecals::CallFunc_GetDecalSampler_SkinnedDecalSampler' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_TransferDecals, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'COMP_DismembermentManager_C_TransferDecals::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.PlayDismemberImpactSound
// 0x0100 (0x0100 - 0x0000)
struct COMP_DismembermentManager_C_PlayDismemberImpactSound final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_ImpactParams                   ImpactParams;                                      // 0x0010(0x0058)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceType;                                       // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetImpactParamsForSurfaceType_Found;      // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_ImpactParams                   CallFunc_GetImpactParamsForSurfaceType_Result;     // 0x0070(0x0058)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetLimbMesh_Mesh;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_PlayDismemberImpactSound) == 0x000008, "Wrong alignment on COMP_DismembermentManager_C_PlayDismemberImpactSound");
static_assert(sizeof(COMP_DismembermentManager_C_PlayDismemberImpactSound) == 0x000100, "Wrong size on COMP_DismembermentManager_C_PlayDismemberImpactSound");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, ImpactData) == 0x000000, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::ImpactData' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, BoneName) == 0x000008, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::BoneName' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, ImpactParams) == 0x000010, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::ImpactParams' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, SurfaceType) == 0x000068, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::SurfaceType' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, CallFunc_IsValid_ReturnValue_1) == 0x00006A, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, CallFunc_GetImpactParamsForSurfaceType_Found) == 0x00006B, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::CallFunc_GetImpactParamsForSurfaceType_Found' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, CallFunc_GetImpactParamsForSurfaceType_Result) == 0x000070, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::CallFunc_GetImpactParamsForSurfaceType_Result' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, CallFunc_IsValid_ReturnValue_2) == 0x0000C8, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, CallFunc_GetLimbMesh_Mesh) == 0x0000D0, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::CallFunc_GetLimbMesh_Mesh' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, CallFunc_GetGameInstance_ReturnValue) == 0x0000D8, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, CallFunc_GetSocketLocation_ReturnValue) == 0x0000E0, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000F0, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_PlayDismemberImpactSound, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'COMP_DismembermentManager_C_PlayDismemberImpactSound::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function COMP_DismembermentManager.COMP_DismembermentManager_C.ShouldSaveComponent
// 0x000C (0x000C - 0x0000)
struct COMP_DismembermentManager_C_ShouldSaveComponent final
{
public:
	struct FStreamingSaveGameComponentParams      Params_0;                                          // 0x0000(0x0004)(Parm, OutParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameComponentParams      K2Node_MakeStruct_StreamingSaveGameComponentParams; // 0x0008(0x0004)(NoDestructor)
};
static_assert(alignof(COMP_DismembermentManager_C_ShouldSaveComponent) == 0x000004, "Wrong alignment on COMP_DismembermentManager_C_ShouldSaveComponent");
static_assert(sizeof(COMP_DismembermentManager_C_ShouldSaveComponent) == 0x00000C, "Wrong size on COMP_DismembermentManager_C_ShouldSaveComponent");
static_assert(offsetof(COMP_DismembermentManager_C_ShouldSaveComponent, Params_0) == 0x000000, "Member 'COMP_DismembermentManager_C_ShouldSaveComponent::Params_0' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ShouldSaveComponent, ReturnValue) == 0x000004, "Member 'COMP_DismembermentManager_C_ShouldSaveComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_DismembermentManager_C_ShouldSaveComponent, K2Node_MakeStruct_StreamingSaveGameComponentParams) == 0x000008, "Member 'COMP_DismembermentManager_C_ShouldSaveComponent::K2Node_MakeStruct_StreamingSaveGameComponentParams' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_OptionsMenu_Controls_KeyboardBindList

#include "Basic.hpp"

#include "STRUCT_BoundInputActionPair_structs.hpp"
#include "WIDGET_OptionsMenu_Controls_BindsList_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_OptionsMenu_Controls_KeyboardBindList.WIDGET_OptionsMenu_Controls_KeyboardBindList_C
// 0x0318 (0x0810 - 0x04F8)
class UWIDGET_OptionsMenu_Controls_KeyboardBindList_C final : public UWIDGET_OptionsMenu_Controls_BindsList_C
{
public:
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Accept;                  // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_AcquireTarget;           // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_AimDownSights;           // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Attack;                  // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_BioScan;                 // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Boots;                   // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Crouch;                  // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_Ascend;            // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_Decoy;             // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_Descend;           // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_MoveBackward;      // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_MoveForward;       // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_MoveLeft;          // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_MoveRight;         // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_PrimaryAttack;     // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_Recall;            // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_RollLeft;          // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_RollRight;         // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_SecondaryAttack;   // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Cyber_TurboDash;         // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_EnergyShield;            // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Enviropack;              // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Interact;                // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Jump;                    // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_LeanLeft;                // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_LeanRight;               // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Minigame_MoveDown;       // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Minigame_MoveLeft;       // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Minigame_MoveRight;      // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Minigame_MoveUp;         // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Minigame_PrimaryAction;  // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Minigame_SecondaryAction; // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_ModeSwitch;              // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_MoveBackward;            // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_MoveForward;             // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_NavUnit;                 // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_QuickLoad;               // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_QuickSave;               // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Reload;                  // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Sensaround;              // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_Sprint;                  // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_StrafeLeft;              // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_StrafeRight;             // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_TargetID;                // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_ToggleEquip;             // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_ToggleInventory;         // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_ToggleMap;               // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_ToggleMFD;               // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOPTION_Controls_InputBind_C*           OPTION_Controls_InputBind_VisionUnit;              // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             SCROLLBOX_Options;                                 // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_ActionLabel;                                  // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_AltLabel;                                     // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TEXT_MainLabel;                                    // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_ListCategoryHeader_C*           WIDGET_ListCategoryHeader_Cyberspace;              // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_ListCategoryHeader_C*           WIDGET_ListCategoryHeader_Hardware;                // 0x06A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_ListCategoryHeader_C*           WIDGET_ListCategoryHeader_Interaction;             // 0x06B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_ListCategoryHeader_C*           WIDGET_ListCategoryHeader_Minigames;               // 0x06B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_ListCategoryHeader_C*           WIDGET_ListCategoryHeader_Movement;                // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWIDGET_ListCategoryHeader_C*           WIDGET_ListCategoryHeader_Other;                   // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> RealspaceKeyMap_0;                                 // 0x06D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> CyberspaceKeyMap_0;                                // 0x0720(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, struct FSTRUCT_BoundInputActionPair> MinigameKeyMap_0;                                  // 0x0770(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FName, class UOPTION_Controls_InputBind_C*> OptionKeyMap_0;                                    // 0x07C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void InitializeItemArray(TArray<class UWIDGET_MenuListItemBase_C*>* MenuListItems);
	void InitializeList(class UWIDGET_MenuBase_C* ParentScreen);
	void OnListOpen();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_OptionsMenu_Controls_KeyboardBindList_C">();
	}
	static class UWIDGET_OptionsMenu_Controls_KeyboardBindList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_OptionsMenu_Controls_KeyboardBindList_C>();
	}
};
static_assert(alignof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C) == 0x000008, "Wrong alignment on UWIDGET_OptionsMenu_Controls_KeyboardBindList_C");
static_assert(sizeof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C) == 0x000810, "Wrong size on UWIDGET_OptionsMenu_Controls_KeyboardBindList_C");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Accept) == 0x0004F8, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Accept' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_AcquireTarget) == 0x000500, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_AcquireTarget' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_AimDownSights) == 0x000508, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_AimDownSights' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Attack) == 0x000510, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Attack' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_BioScan) == 0x000518, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_BioScan' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Boots) == 0x000520, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Boots' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Crouch) == 0x000528, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Crouch' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_Ascend) == 0x000530, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_Ascend' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_Decoy) == 0x000538, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_Decoy' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_Descend) == 0x000540, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_Descend' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_MoveBackward) == 0x000548, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_MoveBackward' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_MoveForward) == 0x000550, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_MoveForward' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_MoveLeft) == 0x000558, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_MoveLeft' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_MoveRight) == 0x000560, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_MoveRight' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_PrimaryAttack) == 0x000568, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_PrimaryAttack' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_Recall) == 0x000570, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_Recall' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_RollLeft) == 0x000578, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_RollLeft' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_RollRight) == 0x000580, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_RollRight' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_SecondaryAttack) == 0x000588, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_SecondaryAttack' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Cyber_TurboDash) == 0x000590, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Cyber_TurboDash' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_EnergyShield) == 0x000598, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_EnergyShield' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Enviropack) == 0x0005A0, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Enviropack' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Interact) == 0x0005A8, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Interact' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Jump) == 0x0005B0, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Jump' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_LeanLeft) == 0x0005B8, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_LeanLeft' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_LeanRight) == 0x0005C0, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_LeanRight' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Minigame_MoveDown) == 0x0005C8, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Minigame_MoveDown' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Minigame_MoveLeft) == 0x0005D0, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Minigame_MoveLeft' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Minigame_MoveRight) == 0x0005D8, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Minigame_MoveRight' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Minigame_MoveUp) == 0x0005E0, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Minigame_MoveUp' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Minigame_PrimaryAction) == 0x0005E8, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Minigame_PrimaryAction' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Minigame_SecondaryAction) == 0x0005F0, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Minigame_SecondaryAction' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_ModeSwitch) == 0x0005F8, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_ModeSwitch' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_MoveBackward) == 0x000600, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_MoveBackward' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_MoveForward) == 0x000608, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_MoveForward' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_NavUnit) == 0x000610, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_NavUnit' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_QuickLoad) == 0x000618, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_QuickLoad' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_QuickSave) == 0x000620, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_QuickSave' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Reload) == 0x000628, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Reload' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Sensaround) == 0x000630, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Sensaround' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_Sprint) == 0x000638, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_Sprint' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_StrafeLeft) == 0x000640, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_StrafeLeft' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_StrafeRight) == 0x000648, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_StrafeRight' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_TargetID) == 0x000650, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_TargetID' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_ToggleEquip) == 0x000658, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_ToggleEquip' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_ToggleInventory) == 0x000660, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_ToggleInventory' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_ToggleMap) == 0x000668, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_ToggleMap' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_ToggleMFD) == 0x000670, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_ToggleMFD' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OPTION_Controls_InputBind_VisionUnit) == 0x000678, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OPTION_Controls_InputBind_VisionUnit' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, SCROLLBOX_Options) == 0x000680, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::SCROLLBOX_Options' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, TEXT_ActionLabel) == 0x000688, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::TEXT_ActionLabel' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, TEXT_AltLabel) == 0x000690, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::TEXT_AltLabel' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, TEXT_MainLabel) == 0x000698, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::TEXT_MainLabel' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, WIDGET_ListCategoryHeader_Cyberspace) == 0x0006A0, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::WIDGET_ListCategoryHeader_Cyberspace' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, WIDGET_ListCategoryHeader_Hardware) == 0x0006A8, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::WIDGET_ListCategoryHeader_Hardware' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, WIDGET_ListCategoryHeader_Interaction) == 0x0006B0, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::WIDGET_ListCategoryHeader_Interaction' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, WIDGET_ListCategoryHeader_Minigames) == 0x0006B8, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::WIDGET_ListCategoryHeader_Minigames' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, WIDGET_ListCategoryHeader_Movement) == 0x0006C0, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::WIDGET_ListCategoryHeader_Movement' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, WIDGET_ListCategoryHeader_Other) == 0x0006C8, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::WIDGET_ListCategoryHeader_Other' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, RealspaceKeyMap_0) == 0x0006D0, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::RealspaceKeyMap_0' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, CyberspaceKeyMap_0) == 0x000720, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::CyberspaceKeyMap_0' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, MinigameKeyMap_0) == 0x000770, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::MinigameKeyMap_0' has a wrong offset!");
static_assert(offsetof(UWIDGET_OptionsMenu_Controls_KeyboardBindList_C, OptionKeyMap_0) == 0x0007C0, "Member 'UWIDGET_OptionsMenu_Controls_KeyboardBindList_C::OptionKeyMap_0' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TRIGGER_ElectromagneticVortex

#include "Basic.hpp"

#include "TRIGGER_ElectromagneticVortex_classes.hpp"
#include "TRIGGER_ElectromagneticVortex_parameters.hpp"


namespace SDK
{

// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.ExecuteUbergraph_TRIGGER_ElectromagneticVortex
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATRIGGER_ElectromagneticVortex_C::ExecuteUbergraph_TRIGGER_ElectromagneticVortex(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_ElectromagneticVortex_C", "ExecuteUbergraph_TRIGGER_ElectromagneticVortex");

	Params::TRIGGER_ElectromagneticVortex_C_ExecuteUbergraph_TRIGGER_ElectromagneticVortex Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ATRIGGER_ElectromagneticVortex_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_ElectromagneticVortex_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATRIGGER_ElectromagneticVortex_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_ElectromagneticVortex_C", "ReceiveTick");

	Params::TRIGGER_ElectromagneticVortex_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.InitializeElectromagneticVortex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LifeTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ElectricDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MagneticDamage                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MagneticSlowPercent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATRIGGER_ElectromagneticVortex_C::InitializeElectromagneticVortex(float Impulse, float Radius, float LifeTime, int32 ElectricDamage, int32 MagneticDamage, int32 MagneticSlowPercent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_ElectromagneticVortex_C", "InitializeElectromagneticVortex");

	Params::TRIGGER_ElectromagneticVortex_C_InitializeElectromagneticVortex Parms{};

	Parms.Impulse = Impulse;
	Parms.Radius = Radius;
	Parms.LifeTime = LifeTime;
	Parms.ElectricDamage = ElectricDamage;
	Parms.MagneticDamage = MagneticDamage;
	Parms.MagneticSlowPercent = MagneticSlowPercent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.UpdateElectromagneticVortex
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATRIGGER_ElectromagneticVortex_C::UpdateElectromagneticVortex(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_ElectromagneticVortex_C", "UpdateElectromagneticVortex");

	Params::TRIGGER_ElectromagneticVortex_C_UpdateElectromagneticVortex Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.TryTickElectromagneticDamage
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   TotalElapsedTime                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ATRIGGER_ElectromagneticVortex_C::TryTickElectromagneticDamage(float TotalElapsedTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_ElectromagneticVortex_C", "TryTickElectromagneticDamage");

	Params::TRIGGER_ElectromagneticVortex_C_TryTickElectromagneticDamage Parms{};

	Parms.TotalElapsedTime = TotalElapsedTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.TryCreateVortexEffects
// (Protected, BlueprintCallable, BlueprintEvent)

void ATRIGGER_ElectromagneticVortex_C::TryCreateVortexEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_ElectromagneticVortex_C", "TryCreateVortexEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.ShouldSaveActor
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStreamingSaveGameActorParams    Params_0                                               (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATRIGGER_ElectromagneticVortex_C::ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_ElectromagneticVortex_C", "ShouldSaveActor");

	Params::TRIGGER_ElectromagneticVortex_C_ShouldSaveActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);

	return Parms.ReturnValue;
}


// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.ReceivePendingBodyTransforms
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkeletalMeshComponent                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FTransform>               BodyTransforms                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATRIGGER_ElectromagneticVortex_C::ReceivePendingBodyTransforms(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FTransform>& BodyTransforms)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_ElectromagneticVortex_C", "ReceivePendingBodyTransforms");

	Params::TRIGGER_ElectromagneticVortex_C_ReceivePendingBodyTransforms Parms{};

	Parms.SkeletalMeshComponent = SkeletalMeshComponent;
	Parms.BodyTransforms = std::move(BodyTransforms);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function TRIGGER_ElectromagneticVortex.TRIGGER_ElectromagneticVortex_C.ReceivePendingCharacterVelocity
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Velocity                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ATRIGGER_ElectromagneticVortex_C::ReceivePendingCharacterVelocity(const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TRIGGER_ElectromagneticVortex_C", "ReceivePendingCharacterVelocity");

	Params::TRIGGER_ElectromagneticVortex_C_ReceivePendingCharacterVelocity Parms{};

	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}


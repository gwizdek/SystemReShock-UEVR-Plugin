#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_PuzzleCell_Base

#include "Basic.hpp"


namespace SDK::Params
{

// Function COMP_PuzzleCell_Base.COMP_PuzzleCell_Base_C.GetModifiedCellParameters
// 0x0001 (0x0001 - 0x0000)
struct COMP_PuzzleCell_Base_C_GetModifiedCellParameters final
{
public:
	uint8                                         Param;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_PuzzleCell_Base_C_GetModifiedCellParameters) == 0x000001, "Wrong alignment on COMP_PuzzleCell_Base_C_GetModifiedCellParameters");
static_assert(sizeof(COMP_PuzzleCell_Base_C_GetModifiedCellParameters) == 0x000001, "Wrong size on COMP_PuzzleCell_Base_C_GetModifiedCellParameters");
static_assert(offsetof(COMP_PuzzleCell_Base_C_GetModifiedCellParameters, Param) == 0x000000, "Member 'COMP_PuzzleCell_Base_C_GetModifiedCellParameters::Param' has a wrong offset!");

// Function COMP_PuzzleCell_Base.COMP_PuzzleCell_Base_C.SetModifiedCellParameters
// 0x0002 (0x0002 - 0x0000)
struct COMP_PuzzleCell_Base_C_SetModifiedCellParameters final
{
public:
	uint8                                         Params_0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_PuzzleCell_Base_C_SetModifiedCellParameters) == 0x000001, "Wrong alignment on COMP_PuzzleCell_Base_C_SetModifiedCellParameters");
static_assert(sizeof(COMP_PuzzleCell_Base_C_SetModifiedCellParameters) == 0x000002, "Wrong size on COMP_PuzzleCell_Base_C_SetModifiedCellParameters");
static_assert(offsetof(COMP_PuzzleCell_Base_C_SetModifiedCellParameters, Params_0) == 0x000000, "Member 'COMP_PuzzleCell_Base_C_SetModifiedCellParameters::Params_0' has a wrong offset!");
static_assert(offsetof(COMP_PuzzleCell_Base_C_SetModifiedCellParameters, Result) == 0x000001, "Member 'COMP_PuzzleCell_Base_C_SetModifiedCellParameters::Result' has a wrong offset!");

// Function COMP_PuzzleCell_Base.COMP_PuzzleCell_Base_C.SetCellVisibility
// 0x0002 (0x0002 - 0x0000)
struct COMP_PuzzleCell_Base_C_SetCellVisibility final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_PuzzleCell_Base_C_SetCellVisibility) == 0x000001, "Wrong alignment on COMP_PuzzleCell_Base_C_SetCellVisibility");
static_assert(sizeof(COMP_PuzzleCell_Base_C_SetCellVisibility) == 0x000002, "Wrong size on COMP_PuzzleCell_Base_C_SetCellVisibility");
static_assert(offsetof(COMP_PuzzleCell_Base_C_SetCellVisibility, IsVisible_0) == 0x000000, "Member 'COMP_PuzzleCell_Base_C_SetCellVisibility::IsVisible_0' has a wrong offset!");
static_assert(offsetof(COMP_PuzzleCell_Base_C_SetCellVisibility, Result) == 0x000001, "Member 'COMP_PuzzleCell_Base_C_SetCellVisibility::Result' has a wrong offset!");

// Function COMP_PuzzleCell_Base.COMP_PuzzleCell_Base_C.IsCellFocusable
// 0x0001 (0x0001 - 0x0000)
struct COMP_PuzzleCell_Base_C_IsCellFocusable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_PuzzleCell_Base_C_IsCellFocusable) == 0x000001, "Wrong alignment on COMP_PuzzleCell_Base_C_IsCellFocusable");
static_assert(sizeof(COMP_PuzzleCell_Base_C_IsCellFocusable) == 0x000001, "Wrong size on COMP_PuzzleCell_Base_C_IsCellFocusable");
static_assert(offsetof(COMP_PuzzleCell_Base_C_IsCellFocusable, Result) == 0x000000, "Member 'COMP_PuzzleCell_Base_C_IsCellFocusable::Result' has a wrong offset!");

}


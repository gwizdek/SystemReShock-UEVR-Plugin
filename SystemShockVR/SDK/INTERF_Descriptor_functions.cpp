#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERF_Descriptor

#include "Basic.hpp"

#include "INTERF_Descriptor_classes.hpp"
#include "INTERF_Descriptor_parameters.hpp"


namespace SDK
{

// Function INTERF_Descriptor.INTERF_Descriptor_C.GetDescriptionMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Message                                                (Parm, OutParm)

void IINTERF_Descriptor_C::GetDescriptionMessage(class UPrimitiveComponent* Primitive, class FText* Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERF_Descriptor_C", "GetDescriptionMessage");

	Params::INTERF_Descriptor_C_GetDescriptionMessage Parms{};

	Parms.Primitive = Primitive;

	UObject::ProcessEvent(Func, &Parms);

	if (Message != nullptr)
		*Message = std::move(Parms.Message);
}


// Function INTERF_Descriptor.INTERF_Descriptor_C.GetInteractFlavorMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (Parm, OutParm)

void IINTERF_Descriptor_C::GetInteractFlavorMessage(class FText* Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("INTERF_Descriptor_C", "GetInteractFlavorMessage");

	Params::INTERF_Descriptor_C_GetInteractFlavorMessage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Message != nullptr)
		*Message = std::move(Parms.Message);
}

}


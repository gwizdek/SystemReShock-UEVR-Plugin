#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_ProjectileWeapon_Base

#include "Basic.hpp"

#include "CoreGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_WeaponMode_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_ActionPriority_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "STRUCT_HardItemParams_structs.hpp"


namespace SDK::Params
{

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.ExecuteUbergraph_ITEM_ProjectileWeapon_Base
// 0x0128 (0x0128 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_5;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_4;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_1;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_3;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_2;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_2;               // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_3;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_3;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_4;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_4;               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_5;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage_5;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_3;            // 0x00F4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_4;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_5;            // 0x0114(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base) == 0x000128, "Wrong size on ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, EntryPoint) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_CustomEvent_Loaded_5) == 0x000028, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_CustomEvent_Loaded_5' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, Temp_object_Variable) == 0x000040, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_DynamicCast_AsAnim_Montage) == 0x000048, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_CustomEvent_Loaded_4) == 0x000058, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_CustomEvent_Loaded_4' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, Temp_object_Variable_1) == 0x000060, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_DynamicCast_AsAnim_Montage_1) == 0x000068, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_DynamicCast_AsAnim_Montage_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_CustomEvent_Loaded_3) == 0x000078, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_CustomEvent_Loaded_3' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, Temp_object_Variable_2) == 0x000080, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_DynamicCast_AsAnim_Montage_2) == 0x000088, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_DynamicCast_AsAnim_Montage_2' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_CustomEvent_Loaded_2) == 0x000098, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, Temp_object_Variable_3) == 0x0000A0, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_DynamicCast_AsAnim_Montage_3) == 0x0000A8, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_DynamicCast_AsAnim_Montage_3' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_CustomEvent_Loaded_1) == 0x0000B8, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, Temp_object_Variable_4) == 0x0000C0, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_DynamicCast_AsAnim_Montage_4) == 0x0000C8, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_DynamicCast_AsAnim_Montage_4' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_DynamicCast_bSuccess_4) == 0x0000D0, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_CustomEvent_Loaded) == 0x0000D8, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, Temp_object_Variable_5) == 0x0000E0, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_DynamicCast_AsAnim_Montage_5) == 0x0000E8, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_DynamicCast_AsAnim_Montage_5' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_DynamicCast_bSuccess_5) == 0x0000F0, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F4, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_CreateDelegate_OutputDelegate_4) == 0x000104, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, K2Node_CreateDelegate_OutputDelegate_5) == 0x000114, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000124, "Member 'ITEM_ProjectileWeapon_Base_C_ExecuteUbergraph_ITEM_ProjectileWeapon_Base::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.OnLoaded_9046651747D724C56C1F3FB472BA2644
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_OnLoaded_9046651747D724C56C1F3FB472BA2644 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_OnLoaded_9046651747D724C56C1F3FB472BA2644) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_OnLoaded_9046651747D724C56C1F3FB472BA2644");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_OnLoaded_9046651747D724C56C1F3FB472BA2644) == 0x000008, "Wrong size on ITEM_ProjectileWeapon_Base_C_OnLoaded_9046651747D724C56C1F3FB472BA2644");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnLoaded_9046651747D724C56C1F3FB472BA2644, Loaded) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_OnLoaded_9046651747D724C56C1F3FB472BA2644::Loaded' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.OnLoaded_5DAA8C1E43E8A4939EEF1C91476CA4D4
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_OnLoaded_5DAA8C1E43E8A4939EEF1C91476CA4D4 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_OnLoaded_5DAA8C1E43E8A4939EEF1C91476CA4D4) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_OnLoaded_5DAA8C1E43E8A4939EEF1C91476CA4D4");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_OnLoaded_5DAA8C1E43E8A4939EEF1C91476CA4D4) == 0x000008, "Wrong size on ITEM_ProjectileWeapon_Base_C_OnLoaded_5DAA8C1E43E8A4939EEF1C91476CA4D4");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnLoaded_5DAA8C1E43E8A4939EEF1C91476CA4D4, Loaded) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_OnLoaded_5DAA8C1E43E8A4939EEF1C91476CA4D4::Loaded' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.OnLoaded_2842429F4E6B3880E4FBCCB35F2E69FA
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_OnLoaded_2842429F4E6B3880E4FBCCB35F2E69FA final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_OnLoaded_2842429F4E6B3880E4FBCCB35F2E69FA) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_OnLoaded_2842429F4E6B3880E4FBCCB35F2E69FA");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_OnLoaded_2842429F4E6B3880E4FBCCB35F2E69FA) == 0x000008, "Wrong size on ITEM_ProjectileWeapon_Base_C_OnLoaded_2842429F4E6B3880E4FBCCB35F2E69FA");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnLoaded_2842429F4E6B3880E4FBCCB35F2E69FA, Loaded) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_OnLoaded_2842429F4E6B3880E4FBCCB35F2E69FA::Loaded' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.OnLoaded_690C388B40163C7491D441BA893CD6FC
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_OnLoaded_690C388B40163C7491D441BA893CD6FC final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_OnLoaded_690C388B40163C7491D441BA893CD6FC) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_OnLoaded_690C388B40163C7491D441BA893CD6FC");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_OnLoaded_690C388B40163C7491D441BA893CD6FC) == 0x000008, "Wrong size on ITEM_ProjectileWeapon_Base_C_OnLoaded_690C388B40163C7491D441BA893CD6FC");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnLoaded_690C388B40163C7491D441BA893CD6FC, Loaded) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_OnLoaded_690C388B40163C7491D441BA893CD6FC::Loaded' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.OnLoaded_36493C924805267668187694115D493B
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_OnLoaded_36493C924805267668187694115D493B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_OnLoaded_36493C924805267668187694115D493B) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_OnLoaded_36493C924805267668187694115D493B");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_OnLoaded_36493C924805267668187694115D493B) == 0x000008, "Wrong size on ITEM_ProjectileWeapon_Base_C_OnLoaded_36493C924805267668187694115D493B");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnLoaded_36493C924805267668187694115D493B, Loaded) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_OnLoaded_36493C924805267668187694115D493B::Loaded' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.OnLoaded_3960340748179C183102AEBC17F001F3
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_OnLoaded_3960340748179C183102AEBC17F001F3 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_OnLoaded_3960340748179C183102AEBC17F001F3) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_OnLoaded_3960340748179C183102AEBC17F001F3");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_OnLoaded_3960340748179C183102AEBC17F001F3) == 0x000008, "Wrong size on ITEM_ProjectileWeapon_Base_C_OnLoaded_3960340748179C183102AEBC17F001F3");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnLoaded_3960340748179C183102AEBC17F001F3, Loaded) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_OnLoaded_3960340748179C183102AEBC17F001F3::Loaded' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.ForceActivateWithPriority
// 0x0188 (0x0188 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority final
{
public:
	ENUM_ActionPriority                           Priority;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         QueueDuration;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_ActionManager_C*                  ActionManager;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	struct FLatentEventHandle                     CallFunc_CreateEventHandle_ReturnValue;            // 0x0020(0x0010)(ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetDischargeMontage_DischargeAnimation;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0048(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAmmoInMagazineOrChamber_Result;        // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanBeginAction_Result;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority) == 0x000188, "Wrong size on ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, Priority) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::Priority' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, QueueDuration) == 0x000004, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::QueueDuration' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, ActionManager) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::ActionManager' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, CallFunc_CreateEventHandle_ReturnValue) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::CallFunc_CreateEventHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, Temp_int_Variable) == 0x000030, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, CallFunc_GetDischargeMontage_DischargeAnimation) == 0x000038, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::CallFunc_GetDischargeMontage_DischargeAnimation' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, Temp_bool_Variable) == 0x000040, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000041, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, CallFunc_GetCurrentMode_Mode) == 0x000048, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000148, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, CallFunc_ForceBeginAction_Action) == 0x000150, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::CallFunc_ForceBeginAction_Action' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, K2Node_Select_Default) == 0x00015C, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, CallFunc_HasAmmoInMagazineOrChamber_Result) == 0x000160, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::CallFunc_HasAmmoInMagazineOrChamber_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, CallFunc_CanBeginAction_Result) == 0x000161, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::CallFunc_CanBeginAction_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, CallFunc_GetInventory_Inventory) == 0x000168, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, CallFunc_GetOwner_ReturnValue) == 0x000170, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000178, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'ITEM_ProjectileWeapon_Base_C_ForceActivateWithPriority::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.ConsumeAmmo
// 0x0028 (0x0028 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_ConsumeAmmo final
{
public:
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_ConsumeAmmo) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_ConsumeAmmo");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_ConsumeAmmo) == 0x000028, "Wrong size on ITEM_ProjectileWeapon_Base_C_ConsumeAmmo");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ConsumeAmmo, CallFunc_GetInventory_Inventory) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_ConsumeAmmo::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ConsumeAmmo, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_ConsumeAmmo::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ConsumeAmmo, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_ConsumeAmmo::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ConsumeAmmo, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_ConsumeAmmo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ConsumeAmmo, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000019, "Member 'ITEM_ProjectileWeapon_Base_C_ConsumeAmmo::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ConsumeAmmo, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'ITEM_ProjectileWeapon_Base_C_ConsumeAmmo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ConsumeAmmo, CallFunc_Max_ReturnValue) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_ConsumeAmmo::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.GetAdditionalMods
// 0x0010 (0x0010 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_GetAdditionalMods final
{
public:
	TArray<struct FAttribModApplyData>            Result;                                            // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_GetAdditionalMods) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_GetAdditionalMods");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_GetAdditionalMods) == 0x000010, "Wrong size on ITEM_ProjectileWeapon_Base_C_GetAdditionalMods");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetAdditionalMods, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_GetAdditionalMods::Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.HasAmmoInMagazineOrChamber
// 0x000C (0x000C - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_HasAmmoInMagazineOrChamber final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAmmoInMagazineAndChamber_Ammo;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_HasAmmoInMagazineOrChamber) == 0x000004, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_HasAmmoInMagazineOrChamber");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_HasAmmoInMagazineOrChamber) == 0x00000C, "Wrong size on ITEM_ProjectileWeapon_Base_C_HasAmmoInMagazineOrChamber");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasAmmoInMagazineOrChamber, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_HasAmmoInMagazineOrChamber::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasAmmoInMagazineOrChamber, CallFunc_GetAmmoInMagazineAndChamber_Ammo) == 0x000004, "Member 'ITEM_ProjectileWeapon_Base_C_HasAmmoInMagazineOrChamber::CallFunc_GetAmmoInMagazineAndChamber_Ammo' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasAmmoInMagazineOrChamber, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_HasAmmoInMagazineOrChamber::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.GetAmmoInMagazineAndChamber
// 0x0010 (0x0010 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber final
{
public:
	int32                                         Ammo;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmmoInChamber_Ammo;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmmoInMagazine_Ammo;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber) == 0x000004, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber) == 0x000010, "Wrong size on ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber, Ammo) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber::Ammo' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber, CallFunc_GetAmmoInChamber_Ammo) == 0x000004, "Member 'ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber::CallFunc_GetAmmoInChamber_Ammo' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber, CallFunc_GetAmmoInMagazine_Ammo) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber::CallFunc_GetAmmoInMagazine_Ammo' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazineAndChamber::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.CanEmptyAmmoInMagazineOrChamber
// 0x0002 (0x0002 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_CanEmptyAmmoInMagazineOrChamber final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAmmoInMagazineOrChamber_Result;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_CanEmptyAmmoInMagazineOrChamber) == 0x000001, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_CanEmptyAmmoInMagazineOrChamber");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_CanEmptyAmmoInMagazineOrChamber) == 0x000002, "Wrong size on ITEM_ProjectileWeapon_Base_C_CanEmptyAmmoInMagazineOrChamber");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_CanEmptyAmmoInMagazineOrChamber, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_CanEmptyAmmoInMagazineOrChamber::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_CanEmptyAmmoInMagazineOrChamber, CallFunc_HasAmmoInMagazineOrChamber_Result) == 0x000001, "Member 'ITEM_ProjectileWeapon_Base_C_CanEmptyAmmoInMagazineOrChamber::CallFunc_HasAmmoInMagazineOrChamber_Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.HasLowAmmoInMagazineAndChamber
// 0x0120 (0x0120 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0008(0x0100)(HasGetValueTypeHash)
	int32                                         CallFunc_GetAmmoInMagazineAndChamber_Ammo;         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber) == 0x000120, "Wrong size on ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber, CallFunc_GetCurrentMode_Mode) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber, CallFunc_GetAmmoInMagazineAndChamber_Ammo) == 0x000108, "Member 'ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber::CallFunc_GetAmmoInMagazineAndChamber_Ammo' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber, CallFunc_GetWeaponPropertyValueByType_Value) == 0x00010C, "Member 'ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000110, "Member 'ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000114, "Member 'ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000118, "Member 'ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00011C, "Member 'ITEM_ProjectileWeapon_Base_C_HasLowAmmoInMagazineAndChamber::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.GetAmmoInMagazine
// 0x0004 (0x0004 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazine final
{
public:
	int32                                         Ammo;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazine) == 0x000004, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazine");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazine) == 0x000004, "Wrong size on ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazine");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazine, Ammo) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_GetAmmoInMagazine::Ammo' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.GetAmmoInChamber
// 0x0004 (0x0004 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_GetAmmoInChamber final
{
public:
	int32                                         Ammo;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_GetAmmoInChamber) == 0x000004, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_GetAmmoInChamber");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_GetAmmoInChamber) == 0x000004, "Wrong size on ITEM_ProjectileWeapon_Base_C_GetAmmoInChamber");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetAmmoInChamber, Ammo) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_GetAmmoInChamber::Ammo' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.GetSpreadHalfAngle
// 0x0020 (0x0020 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpreadAngle_Result;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle) == 0x000020, "Wrong size on ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle, CallFunc_GetCurrentSpreadAngle_Result) == 0x00001C, "Member 'ITEM_ProjectileWeapon_Base_C_GetSpreadHalfAngle::CallFunc_GetCurrentSpreadAngle_Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.ComputeSpreadDirection
// 0x0028 (0x0028 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection final
{
public:
	struct FVector                                BarrelDirection;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpreadDirection;                                   // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSpreadHalfAngle_Result;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRandomWeaponSpreadDirection_SpreadDirection; // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection) == 0x000004, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection) == 0x000028, "Wrong size on ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection, BarrelDirection) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection::BarrelDirection' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection, SpreadDirection) == 0x00000C, "Member 'ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection::SpreadDirection' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection, CallFunc_GetSpreadHalfAngle_Result) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection::CallFunc_GetSpreadHalfAngle_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection, CallFunc_GetRandomWeaponSpreadDirection_SpreadDirection) == 0x00001C, "Member 'ITEM_ProjectileWeapon_Base_C_ComputeSpreadDirection::CallFunc_GetRandomWeaponSpreadDirection_SpreadDirection' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.QueueReloading
// 0x0038 (0x0038 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_QueueReloading final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_QueueReloading) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_QueueReloading");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_QueueReloading) == 0x000038, "Wrong size on ITEM_ProjectileWeapon_Base_C_QueueReloading");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_QueueReloading, Temp_bool_Variable) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_QueueReloading::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_QueueReloading, CallFunc_GetInventory_Inventory) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_QueueReloading::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_QueueReloading, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_QueueReloading::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_QueueReloading, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_QueueReloading::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_QueueReloading, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_QueueReloading::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_QueueReloading, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ITEM_ProjectileWeapon_Base_C_QueueReloading::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_QueueReloading, K2Node_Select_Default) == 0x000030, "Member 'ITEM_ProjectileWeapon_Base_C_QueueReloading::K2Node_Select_Default' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.OnDischargeMontageStarted
// 0x0478 (0x0478 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted final
{
public:
	float                                         RefireRate;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FireRate;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldRefire;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0010(0x0100)(HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0114(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0128(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode_1;                    // 0x0138(0x0100)(HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_1;     // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode_2;                    // 0x0248(0x0100)(HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_2;     // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x034D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34E[0x2];                                      // 0x034E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode_3;                    // 0x0350(0x0100)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_455[0x3];                                      // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0458(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C[0x4];                                      // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0470(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted) == 0x000478, "Wrong size on ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, RefireRate) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::RefireRate' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, FireRate) == 0x000004, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::FireRate' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, ShouldRefire) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::ShouldRefire' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x00000A, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_GetCurrentMode_Mode) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_GetWeaponPropertyValueByType_Value) == 0x000110, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, K2Node_CreateDelegate_OutputDelegate) == 0x000114, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000124, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000128, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_SafeDivide_ReturnValue) == 0x000130, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_GetCurrentMode_Mode_1) == 0x000138, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_GetCurrentMode_Mode_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_GetWeaponPropertyValueByType_Value_1) == 0x000238, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_GetWeaponPropertyValueByType_Value_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00023C, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000240, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_GetCurrentMode_Mode_2) == 0x000248, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_GetCurrentMode_Mode_2' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_GetWeaponPropertyValueByType_Value_2) == 0x000348, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_GetWeaponPropertyValueByType_Value_2' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_Less_IntInt_ReturnValue) == 0x00034C, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_Less_IntInt_ReturnValue_1) == 0x00034D, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_GetCurrentMode_Mode_3) == 0x000350, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_GetCurrentMode_Mode_3' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_Add_IntInt_ReturnValue) == 0x000450, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000454, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, K2Node_CreateDelegate_OutputDelegate_1) == 0x000458, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, Temp_int_Variable) == 0x000468, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000470, "Member 'ITEM_ProjectileWeapon_Base_C_OnDischargeMontageStarted::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.IsTryingToRefillMagazine
// 0x0001 (0x0001 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_IsTryingToRefillMagazine final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_IsTryingToRefillMagazine) == 0x000001, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_IsTryingToRefillMagazine");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_IsTryingToRefillMagazine) == 0x000001, "Wrong size on ITEM_ProjectileWeapon_Base_C_IsTryingToRefillMagazine");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsTryingToRefillMagazine, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_IsTryingToRefillMagazine::Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.IsPlayingReloadMontage
// 0x0058 (0x0058 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          AnimInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetActionMeshComponent_SkeletalMeshComponent; // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue_1;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage) == 0x000058, "Wrong size on ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage, AnimInstance) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage::AnimInstance' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage, CallFunc_GetInventory_Inventory) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage, CallFunc_Montage_IsPlaying_ReturnValue) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000028, "Member 'ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage, CallFunc_GetActionMeshComponent_SkeletalMeshComponent) == 0x000038, "Member 'ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage::CallFunc_GetActionMeshComponent_SkeletalMeshComponent' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage, CallFunc_Montage_IsPlaying_ReturnValue_1) == 0x000040, "Member 'ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage::CallFunc_Montage_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000048, "Member 'ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000051, "Member 'ITEM_ProjectileWeapon_Base_C_IsPlayingReloadMontage::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.CanRefillMagazine
// 0x0110 (0x0110 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_CanRefillMagazine final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasSpareAmmo_Result;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0008(0x0100)(HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_CanRefillMagazine) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_CanRefillMagazine");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_CanRefillMagazine) == 0x000110, "Wrong size on ITEM_ProjectileWeapon_Base_C_CanRefillMagazine");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_CanRefillMagazine, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_CanRefillMagazine::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_CanRefillMagazine, CallFunc_HasSpareAmmo_Result) == 0x000001, "Member 'ITEM_ProjectileWeapon_Base_C_CanRefillMagazine::CallFunc_HasSpareAmmo_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_CanRefillMagazine, CallFunc_GetCurrentMode_Mode) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_CanRefillMagazine::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_CanRefillMagazine, CallFunc_GetWeaponPropertyValueByType_Value) == 0x000108, "Member 'ITEM_ProjectileWeapon_Base_C_CanRefillMagazine::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_CanRefillMagazine, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'ITEM_ProjectileWeapon_Base_C_CanRefillMagazine::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.HasSpareAmmo
// 0x0128 (0x0128 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_HasSpareAmmo final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        AmmoBag;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0018(0x0100)(HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemCount_Result;                      // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_HasSpareAmmo) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_HasSpareAmmo");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_HasSpareAmmo) == 0x000128, "Wrong size on ITEM_ProjectileWeapon_Base_C_HasSpareAmmo");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasSpareAmmo, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_HasSpareAmmo::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasSpareAmmo, AmmoBag) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_HasSpareAmmo::AmmoBag' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasSpareAmmo, CallFunc_GetInventory_Inventory) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_HasSpareAmmo::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasSpareAmmo, CallFunc_GetCurrentMode_Mode) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_HasSpareAmmo::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasSpareAmmo, CallFunc_GetBagByType_Bag) == 0x000118, "Member 'ITEM_ProjectileWeapon_Base_C_HasSpareAmmo::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasSpareAmmo, CallFunc_GetItemCount_Result) == 0x000120, "Member 'ITEM_ProjectileWeapon_Base_C_HasSpareAmmo::CallFunc_GetItemCount_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasSpareAmmo, CallFunc_Greater_IntInt_ReturnValue) == 0x000124, "Member 'ITEM_ProjectileWeapon_Base_C_HasSpareAmmo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_HasSpareAmmo, CallFunc_IsValid_ReturnValue) == 0x000125, "Member 'ITEM_ProjectileWeapon_Base_C_HasSpareAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.ShouldAutoReload
// 0x0018 (0x0018 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_ShouldAutoReload final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAutoReload_Result;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_ShouldAutoReload) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_ShouldAutoReload");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_ShouldAutoReload) == 0x000018, "Wrong size on ITEM_ProjectileWeapon_Base_C_ShouldAutoReload");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ShouldAutoReload, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_ShouldAutoReload::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ShouldAutoReload, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_ShouldAutoReload::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ShouldAutoReload, CallFunc_GetAutoReload_Result) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_ShouldAutoReload::CallFunc_GetAutoReload_Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.SetListenToInventory
// 0x0060 (0x0060 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_SetListenToInventory final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        AmmoBag;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SlotIndex)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(int32 SlotIndex)>              K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_SetListenToInventory) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_SetListenToInventory");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_SetListenToInventory) == 0x000060, "Wrong size on ITEM_ProjectileWeapon_Base_C_SetListenToInventory");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToInventory, State) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToInventory::State' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToInventory, AmmoBag) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToInventory::AmmoBag' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToInventory, CharacterOwner) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToInventory::CharacterOwner' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToInventory, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToInventory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToInventory, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToInventory::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToInventory, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToInventory, CallFunc_GetInventoryComponent_Inventory) == 0x000040, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToInventory::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToInventory, CallFunc_GetBagByType_Bag) == 0x000048, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToInventory::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToInventory, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToInventory, CallFunc_GetOwnerCharacter_Character) == 0x000058, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToInventory::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.SetListenToActionManager
// 0x0038 (0x0038 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_SetListenToActionManager final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UCharacterAction_C* Action)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCharacterAction_C* Action)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_SetListenToActionManager) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_SetListenToActionManager");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_SetListenToActionManager) == 0x000038, "Wrong size on ITEM_ProjectileWeapon_Base_C_SetListenToActionManager");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToActionManager, State) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToActionManager::State' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToActionManager, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToActionManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToActionManager, CallFunc_GetOwnerCharacter_Character) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToActionManager::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToActionManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToActionManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetListenToActionManager, CallFunc_GetOwnerCharacter_Character_1) == 0x000030, "Member 'ITEM_ProjectileWeapon_Base_C_SetListenToActionManager::CallFunc_GetOwnerCharacter_Character_1' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.SetManualQueueDuration
// 0x0004 (0x0004 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_SetManualQueueDuration final
{
public:
	float                                         NewDuration;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_SetManualQueueDuration) == 0x000004, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_SetManualQueueDuration");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_SetManualQueueDuration) == 0x000004, "Wrong size on ITEM_ProjectileWeapon_Base_C_SetManualQueueDuration");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetManualQueueDuration, NewDuration) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_SetManualQueueDuration::NewDuration' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.TryEmptyMagazine
// 0x0005 (0x0005 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine final
{
public:
	bool                                          CallFunc_CanEmptyAmmoInMagazineOrChamber_Result;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActivatable_Result;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReloadMontage_Result;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine) == 0x000001, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine) == 0x000005, "Wrong size on ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine, CallFunc_CanEmptyAmmoInMagazineOrChamber_Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine::CallFunc_CanEmptyAmmoInMagazineOrChamber_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine, CallFunc_IsActivatable_Result) == 0x000001, "Member 'ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine::CallFunc_IsActivatable_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine, CallFunc_IsPlayingReloadMontage_Result) == 0x000002, "Member 'ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine::CallFunc_IsPlayingReloadMontage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine, CallFunc_IsEquipped_Result) == 0x000004, "Member 'ITEM_ProjectileWeapon_Base_C_TryEmptyMagazine::CallFunc_IsEquipped_Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TrySwitchToDesiredModeImmediately_Result; // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_3;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x000011, "Member 'ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage, CallFunc_TrySwitchToDesiredModeImmediately_Result) == 0x000012, "Member 'ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage::CallFunc_TrySwitchToDesiredModeImmediately_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000013, "Member 'ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000014, "Member 'ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000015, "Member 'ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue_3) == 0x000016, "Member 'ITEM_ProjectileWeapon_Base_C_ReceiveAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue_3' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.OnAutoReloadStateChanged
// 0x0001 (0x0001 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_OnAutoReloadStateChanged final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_OnAutoReloadStateChanged) == 0x000001, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_OnAutoReloadStateChanged");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_OnAutoReloadStateChanged) == 0x000001, "Wrong size on ITEM_ProjectileWeapon_Base_C_OnAutoReloadStateChanged");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnAutoReloadStateChanged, State) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_OnAutoReloadStateChanged::State' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.MarkShouldRefillMagazine
// 0x0001 (0x0001 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_MarkShouldRefillMagazine final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_MarkShouldRefillMagazine) == 0x000001, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_MarkShouldRefillMagazine");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_MarkShouldRefillMagazine) == 0x000001, "Wrong size on ITEM_ProjectileWeapon_Base_C_MarkShouldRefillMagazine");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MarkShouldRefillMagazine, State) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_MarkShouldRefillMagazine::State' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.ForceAddAmmoToMagazine
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_ForceAddAmmoToMagazine final
{
public:
	int32                                         Ammo;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_ForceAddAmmoToMagazine) == 0x000004, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_ForceAddAmmoToMagazine");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_ForceAddAmmoToMagazine) == 0x000008, "Wrong size on ITEM_ProjectileWeapon_Base_C_ForceAddAmmoToMagazine");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceAddAmmoToMagazine, Ammo) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_ForceAddAmmoToMagazine::Ammo' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceAddAmmoToMagazine, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'ITEM_ProjectileWeapon_Base_C_ForceAddAmmoToMagazine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.ForceSetAmmoInMagazine
// 0x0004 (0x0004 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_ForceSetAmmoInMagazine final
{
public:
	int32                                         Ammo;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_ForceSetAmmoInMagazine) == 0x000004, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_ForceSetAmmoInMagazine");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_ForceSetAmmoInMagazine) == 0x000004, "Wrong size on ITEM_ProjectileWeapon_Base_C_ForceSetAmmoInMagazine");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_ForceSetAmmoInMagazine, Ammo) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_ForceSetAmmoInMagazine::Ammo' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.RefillMagazine
// 0x0248 (0x0248 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_RefillMagazine final
{
public:
	int32                                         RefillCount;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        AmmoBag;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0010(0x0100)(HasGetValueTypeHash)
	int32                                         CallFunc_GetAmmoInMagazineAndChamber_Ammo;         // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode_1;                    // 0x0118(0x0100)(HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveItemCountByClass_RemovedCount;      // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentMode_Result;                    // 0x0246(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_RefillMagazine) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_RefillMagazine");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_RefillMagazine) == 0x000248, "Wrong size on ITEM_ProjectileWeapon_Base_C_RefillMagazine");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, RefillCount) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::RefillCount' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, AmmoBag) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::AmmoBag' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_GetCurrentMode_Mode) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_GetAmmoInMagazineAndChamber_Ammo) == 0x000110, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_GetAmmoInMagazineAndChamber_Ammo' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_GetCurrentMode_Mode_1) == 0x000118, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_GetCurrentMode_Mode_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_GetInventory_Inventory) == 0x000218, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_GetWeaponPropertyValueByType_Value) == 0x000220, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_IsValid_ReturnValue) == 0x000224, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_Subtract_IntInt_ReturnValue) == 0x000228, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_GetBagByType_Bag) == 0x000230, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_RemoveItemCountByClass_RemovedCount) == 0x000238, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_RemoveItemCountByClass_RemovedCount' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_Greater_IntInt_ReturnValue) == 0x00023C, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_Add_IntInt_ReturnValue) == 0x000240, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000244, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_IsValid_ReturnValue_1) == 0x000245, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_RefillMagazine, CallFunc_SetCurrentMode_Result) == 0x000246, "Member 'ITEM_ProjectileWeapon_Base_C_RefillMagazine::CallFunc_SetCurrentMode_Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.UpdateMaterial
// 0x0050 (0x0050 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_UpdateMaterial final
{
public:
	bool                                          Glitch;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasLowAmmoInMagazineAndChamber_Result;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result_1;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result_2;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result_3;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result_4;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeSeconds_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmmoInMagazineAndChamber_Ammo;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_UpdateMaterial");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial) == 0x000050, "Wrong size on ITEM_ProjectileWeapon_Base_C_UpdateMaterial");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, Glitch) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::Glitch' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, CallFunc_HasLowAmmoInMagazineAndChamber_Result) == 0x000001, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::CallFunc_HasLowAmmoInMagazineAndChamber_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, CallFunc_GetWeaponMeshComponent_Result) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, CallFunc_GetWeaponMeshComponent_Result_1) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::CallFunc_GetWeaponMeshComponent_Result_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, CallFunc_GetWeaponMeshComponent_Result_2) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::CallFunc_GetWeaponMeshComponent_Result_2' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, CallFunc_GetWeaponMeshComponent_Result_3) == 0x000028, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::CallFunc_GetWeaponMeshComponent_Result_3' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, CallFunc_GetWeaponMeshComponent_Result_4) == 0x000030, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::CallFunc_GetWeaponMeshComponent_Result_4' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, CallFunc_GetTimeSeconds_ReturnValue) == 0x000038, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, CallFunc_IsValid_ReturnValue) == 0x00003C, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, CallFunc_GetAmmoInMagazineAndChamber_Ammo) == 0x000044, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::CallFunc_GetAmmoInMagazineAndChamber_Ammo' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_UpdateMaterial, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000048, "Member 'ITEM_ProjectileWeapon_Base_C_UpdateMaterial::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.EjectShell
// 0x0110 (0x0110 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_EjectShell final
{
public:
	struct FVector                                EjectVelocity;                                     // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EjectDirection;                                    // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             EjectorTransform;                                  // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue; // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformDirection_ReturnValue;           // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_EjectShell) == 0x000010, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_EjectShell");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_EjectShell) == 0x000110, "Wrong size on ITEM_ProjectileWeapon_Base_C_EjectShell");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, EjectVelocity) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::EjectVelocity' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, EjectDirection) == 0x00000C, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::EjectDirection' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, EjectorTransform) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::EjectorTransform' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CharacterOwner) == 0x000050, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CharacterOwner' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CallFunc_GetVelocity_ReturnValue) == 0x00005C, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CallFunc_GetOwnerCharacter_Character) == 0x000068, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CallFunc_RandomFloatInRange_ReturnValue) == 0x000074, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue) == 0x000078, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CallFunc_RandomUnitVectorInConeInDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CallFunc_GetWeaponMeshComponent_Result) == 0x000088, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000090, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00009C, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CallFunc_GetSocketTransform_ReturnValue) == 0x0000B0, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E0, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CallFunc_Normal_ReturnValue) == 0x0000EC, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EjectShell, CallFunc_TransformDirection_ReturnValue) == 0x0000F8, "Member 'ITEM_ProjectileWeapon_Base_C_EjectShell::CallFunc_TransformDirection_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.MoveAmmoToInventory
// 0x01B0 (0x01B0 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory final
{
public:
	int32                                         AmmoToMove;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 AmmoClass;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GrantItemSuccess;                                  // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmmoInMagazine_Ammo;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APICKUP_Base_C*                         CallFunc_SpawnPickupActorWithItemCount_Result;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentMode_Result;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0070(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory_1;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GrantItem_Result;                         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0098(0x0100)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Base;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory) == 0x0001B0, "Wrong size on ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, AmmoToMove) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::AmmoToMove' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, AmmoClass) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::AmmoClass' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, GrantItemSuccess) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::GrantItemSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_GetInventory_Inventory) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_GetAmmoInMagazine_Ammo) == 0x000028, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_GetAmmoInMagazine_Ammo' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_GetActorForwardVector_ReturnValue) == 0x00002C, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000038, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000044, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_SpawnPickupActorWithItemCount_Result) == 0x000060, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_SpawnPickupActorWithItemCount_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000068, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_SetCurrentMode_Result) == 0x000069, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_SetCurrentMode_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000070, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_Greater_IntInt_ReturnValue) == 0x000080, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_GetInventory_Inventory_1) == 0x000088, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_GetInventory_Inventory_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_GrantItem_Result) == 0x000090, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_GrantItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_Not_PreBool_ReturnValue_1) == 0x000091, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_GetCurrentMode_Mode) == 0x000098, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000198, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, K2Node_ClassDynamicCast_AsITEM_Base) == 0x0001A0, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::K2Node_ClassDynamicCast_AsITEM_Base' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory, K2Node_ClassDynamicCast_bSuccess) == 0x0001A8, "Member 'ITEM_ProjectileWeapon_Base_C_MoveAmmoToInventory::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.EnableDamage
// 0x0020 (0x0020 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_EnableDamage final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EnableDamage_Result;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FireProjectile_FiredProjectile;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FireProjectile_Direction;                 // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_EnableDamage) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_EnableDamage");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_EnableDamage) == 0x000020, "Wrong size on ITEM_ProjectileWeapon_Base_C_EnableDamage");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EnableDamage, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_EnableDamage::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EnableDamage, CallFunc_EnableDamage_Result) == 0x000001, "Member 'ITEM_ProjectileWeapon_Base_C_EnableDamage::CallFunc_EnableDamage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EnableDamage, CallFunc_FireProjectile_FiredProjectile) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_EnableDamage::CallFunc_FireProjectile_FiredProjectile' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EnableDamage, CallFunc_FireProjectile_Direction) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_EnableDamage::CallFunc_FireProjectile_Direction' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.FireProjectile
// 0x0110 (0x0110 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_FireProjectile final
{
public:
	class AActor*                                 FiredProjectile;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectileDirection;                               // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpreadDirection;                                   // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BarrelLocation;                                    // 0x002C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraDirection;                                   // 0x0038(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraLocation;                                    // 0x0044(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ComputeSpreadDirection_SpreadDirection;   // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxCombatTraceDistance_Distance;       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FireProjectileInDirection_FiredProjectile; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FireProjectileInDirection_Direction;      // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TriangulateRayDirection_TriangulatedDirection; // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetHeadTransform_Transform;               // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_FireProjectile) == 0x000010, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_FireProjectile");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_FireProjectile) == 0x000110, "Wrong size on ITEM_ProjectileWeapon_Base_C_FireProjectile");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, FiredProjectile) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::FiredProjectile' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, Direction) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::Direction' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, ProjectileDirection) == 0x000014, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::ProjectileDirection' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, SpreadDirection) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::SpreadDirection' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, BarrelLocation) == 0x00002C, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::BarrelLocation' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CameraDirection) == 0x000038, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CameraDirection' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CameraLocation) == 0x000044, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CameraLocation' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CharacterOwner) == 0x000050, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CharacterOwner' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_ComputeSpreadDirection_SpreadDirection) == 0x000058, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_ComputeSpreadDirection_SpreadDirection' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_GetMaxCombatTraceDistance_Distance) == 0x000064, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_GetMaxCombatTraceDistance_Distance' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_GetWeaponMeshComponent_Result) == 0x000068, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_GetOwnerCharacter_Character) == 0x000070, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_GetSocketLocation_ReturnValue) == 0x000078, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_FireProjectileInDirection_FiredProjectile) == 0x000088, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_FireProjectileInDirection_FiredProjectile' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_FireProjectileInDirection_Direction) == 0x000090, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_FireProjectileInDirection_Direction' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_TriangulateRayDirection_TriangulatedDirection) == 0x00009C, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_TriangulateRayDirection_TriangulatedDirection' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_GetHeadTransform_Transform) == 0x0000B0, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_GetHeadTransform_Transform' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_BreakTransform_Location) == 0x0000E0, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_BreakTransform_Rotation) == 0x0000EC, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_BreakTransform_Scale) == 0x0000F8, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectile, CallFunc_GetForwardVector_ReturnValue) == 0x000104, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectile::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.SetCurrentMode
// 0x0218 (0x0218 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_SetCurrentMode final
{
public:
	int32                                         Mode;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActivatable_Result;                     // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActivatable_Result_1;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponMode_Mode;                       // 0x0010(0x0100)(HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponMode_Mode_1;                     // 0x0110(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_SoftClassReference_ReturnValue;  // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentMode_Result;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentMode_Result_1;                  // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_SetCurrentMode");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode) == 0x000218, "Wrong size on ITEM_ProjectileWeapon_Base_C_SetCurrentMode");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode, Mode) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_SetCurrentMode::Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode, Result) == 0x000004, "Member 'ITEM_ProjectileWeapon_Base_C_SetCurrentMode::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode, CallFunc_IsActivatable_Result) == 0x000005, "Member 'ITEM_ProjectileWeapon_Base_C_SetCurrentMode::CallFunc_IsActivatable_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode, CallFunc_IsActivatable_Result_1) == 0x000006, "Member 'ITEM_ProjectileWeapon_Base_C_SetCurrentMode::CallFunc_IsActivatable_Result_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000007, "Member 'ITEM_ProjectileWeapon_Base_C_SetCurrentMode::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_SetCurrentMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode, CallFunc_GetWeaponMode_Mode) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_SetCurrentMode::CallFunc_GetWeaponMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode, CallFunc_GetWeaponMode_Mode_1) == 0x000110, "Member 'ITEM_ProjectileWeapon_Base_C_SetCurrentMode::CallFunc_GetWeaponMode_Mode_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode, CallFunc_NotEqual_SoftClassReference_ReturnValue) == 0x000210, "Member 'ITEM_ProjectileWeapon_Base_C_SetCurrentMode::CallFunc_NotEqual_SoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode, CallFunc_SetCurrentMode_Result) == 0x000211, "Member 'ITEM_ProjectileWeapon_Base_C_SetCurrentMode::CallFunc_SetCurrentMode_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode, CallFunc_SetCurrentMode_Result_1) == 0x000212, "Member 'ITEM_ProjectileWeapon_Base_C_SetCurrentMode::CallFunc_SetCurrentMode_Result_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_SetCurrentMode, CallFunc_IsEquipped_Result) == 0x000213, "Member 'ITEM_ProjectileWeapon_Base_C_SetCurrentMode::CallFunc_IsEquipped_Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.EVENT_OnTryAutomaticRefire
// 0x0018 (0x0018 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire final
{
public:
	bool                                          CallFunc_IsWeaponObstructed_Result;                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanActivate_Result;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire) == 0x000018, "Wrong size on ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire, CallFunc_IsWeaponObstructed_Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire::CallFunc_IsWeaponObstructed_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire, CallFunc_CanActivate_Result) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryAutomaticRefire::CallFunc_CanActivate_Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.FireProjectileInDirection
// 0x0210 (0x0210 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection final
{
public:
	struct FVector                                BarrelLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectileDirection;                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 FiredProjectile;                                   // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0020(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CurrentMode;                                       // 0x0030(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class ABulletProjectile_Base_C*               BulletProjectileActor;                             // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ProjectileActor;                                   // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           OwnerPawn;                                         // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ProjectileClassToFire;                             // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABulletProjectile_Base_C*               K2Node_DynamicCast_AsBullet_Projectile_Base;       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetProjectileClass_Result;                // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection) == 0x000010, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection) == 0x000210, "Wrong size on ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, BarrelLocation) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::BarrelLocation' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, ProjectileDirection) == 0x00000C, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::ProjectileDirection' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, FiredProjectile) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::FiredProjectile' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, Direction) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::Direction' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CurrentMode) == 0x000030, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CurrentMode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, BulletProjectileActor) == 0x000130, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::BulletProjectileActor' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, ProjectileActor) == 0x000138, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::ProjectileActor' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, OwnerPawn) == 0x000140, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::OwnerPawn' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, ProjectileClassToFire) == 0x000148, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::ProjectileClassToFire' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, K2Node_DynamicCast_AsBullet_Projectile_Base) == 0x000150, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::K2Node_DynamicCast_AsBullet_Projectile_Base' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, K2Node_DynamicCast_bSuccess) == 0x000158, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_GetProjectileClass_Result) == 0x000160, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_GetProjectileClass_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_GetInventory_Inventory) == 0x000168, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_GetOwner_ReturnValue) == 0x000170, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000178, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, K2Node_DynamicCast_bSuccess_1) == 0x000180, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000184, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_BreakRotator_Roll) == 0x000190, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_BreakRotator_Pitch) == 0x000194, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_BreakRotator_Yaw) == 0x000198, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_BreakRotator_Roll_1) == 0x00019C, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_BreakRotator_Pitch_1) == 0x0001A0, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_BreakRotator_Yaw_1) == 0x0001A4, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001A8, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0001AC, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x0001B0, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_MakeRotator_ReturnValue) == 0x0001B4, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_MakeTransform_ReturnValue) == 0x0001C0, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001F0, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_IsValidClass_ReturnValue) == 0x0001F8, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection, CallFunc_FinishSpawningActor_ReturnValue) == 0x000200, "Member 'ITEM_ProjectileWeapon_Base_C_FireProjectileInDirection::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.InitializeProjectileDamageSettings
// 0x0220 (0x0220 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings final
{
public:
	class ABulletProjectile_Base_C*               BulletProjectileActor;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CurrentMode;                                       // 0x0008(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FAttribModApplyData>            CallFunc_GetAdditionalMods_Result;                 // 0x0108(0x0010)(ReferenceParm)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0118(0x0100)(HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings) == 0x000220, "Wrong size on ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings, BulletProjectileActor) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings::BulletProjectileActor' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings, CurrentMode) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings::CurrentMode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings, CallFunc_GetAdditionalMods_Result) == 0x000108, "Member 'ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings::CallFunc_GetAdditionalMods_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings, CallFunc_GetCurrentMode_Mode) == 0x000118, "Member 'ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings, CallFunc_GetWeaponPropertyValueByType_Value) == 0x000218, "Member 'ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00021C, "Member 'ITEM_ProjectileWeapon_Base_C_InitializeProjectileDamageSettings::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.PlayDischargeEffects
// 0x0158 (0x0158 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects final
{
public:
	struct FVector                                BarrelLocation;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_GetWeaponMeshComponent_Result;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_PlayDischargeParticleFX_SpawnedComponent; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0050(0x0100)(HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects) == 0x000158, "Wrong size on ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects, BarrelLocation) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects::BarrelLocation' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects, CallFunc_GetInventory_Inventory) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects, CallFunc_GetWeaponMeshComponent_Result) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects::CallFunc_GetWeaponMeshComponent_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects, CallFunc_GetSocketLocation_ReturnValue) == 0x000028, "Member 'ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000038, "Member 'ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects, CallFunc_PlayDischargeParticleFX_SpawnedComponent) == 0x000048, "Member 'ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects::CallFunc_PlayDischargeParticleFX_SpawnedComponent' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects, CallFunc_GetCurrentMode_Mode) == 0x000050, "Member 'ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects, CallFunc_GetWeaponPropertyValueByType_Value) == 0x000150, "Member 'ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000154, "Member 'ITEM_ProjectileWeapon_Base_C_PlayDischargeEffects::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.GetProjectileClass
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_GetProjectileClass final
{
public:
	class UClass*                                 Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_GetProjectileClass) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_GetProjectileClass");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_GetProjectileClass) == 0x000008, "Wrong size on ITEM_ProjectileWeapon_Base_C_GetProjectileClass");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetProjectileClass, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_GetProjectileClass::Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.GetDischargeMontage
// 0x0010 (0x0010 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_GetDischargeMontage final
{
public:
	class UAnimMontage*                           DischargeAnimation;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_GetDischargeMontage) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_GetDischargeMontage");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_GetDischargeMontage) == 0x000010, "Wrong size on ITEM_ProjectileWeapon_Base_C_GetDischargeMontage");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetDischargeMontage, DischargeAnimation) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_GetDischargeMontage::DischargeAnimation' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetDischargeMontage, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_GetDischargeMontage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.EVENT_OnAllowRefire
// 0x0040 (0x0040 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CurrentAction;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_ActionPriority                           CallFunc_GetPriority_Result;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire) == 0x000040, "Wrong size on ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire, Montage) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire::Montage' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire, CurrentAction) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire::CurrentAction' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_GetPriority_Result) == 0x000011, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_GetPriority_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000012, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_GetMontage_Result) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_GetOwnerCharacter_Character) == 0x000028, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000030, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_BooleanOR_ReturnValue) == 0x000031, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire, CallFunc_GetCurrentAction_CurrentAction) == 0x000038, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnAllowRefire::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.QueueModeSwitchWithDuration
// 0x0010 (0x0010 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_QueueModeSwitchWithDuration final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_QueueModeSwitchWithDuration) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_QueueModeSwitchWithDuration");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_QueueModeSwitchWithDuration) == 0x000010, "Wrong size on ITEM_ProjectileWeapon_Base_C_QueueModeSwitchWithDuration");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_QueueModeSwitchWithDuration, Duration) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_QueueModeSwitchWithDuration::Duration' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_QueueModeSwitchWithDuration, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_QueueModeSwitchWithDuration::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.GetWeaponModeDisplayName
// 0x0158 (0x0158 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName final
{
public:
	int32                                         ModeIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShortName;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponMode_Mode;                       // 0x0028(0x0100)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Base;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0140(0x0018)()
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName) == 0x000158, "Wrong size on ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName, ModeIndex) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName::ModeIndex' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName, ShortName) == 0x000004, "Member 'ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName::ShortName' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName, Result) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName, Temp_bool_Variable) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName, CallFunc_GetWeaponMode_Mode) == 0x000028, "Member 'ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName::CallFunc_GetWeaponMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000128, "Member 'ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName, K2Node_ClassDynamicCast_AsITEM_Base) == 0x000130, "Member 'ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName::K2Node_ClassDynamicCast_AsITEM_Base' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName, K2Node_ClassDynamicCast_bSuccess) == 0x000138, "Member 'ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName, K2Node_Select_Default) == 0x000140, "Member 'ITEM_ProjectileWeapon_Base_C_GetWeaponModeDisplayName::K2Node_Select_Default' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.EVENT_OnTryReloadWhenActionFinished
// 0x0048 (0x0048 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished final
{
public:
	class UCharacterAction_C*                     Action;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetDrawMontage_Montage;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmmoInMagazineAndChamber_Ammo;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontage_Result_1;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetMontage_Result_2;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSpareAmmo_Result;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryBeginReloading_Result;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished) == 0x000048, "Wrong size on ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, Action) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::Action' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_GetDrawMontage_Montage) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_GetDrawMontage_Montage' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_GetMontage_Result) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_GetAmmoInMagazineAndChamber_Ammo) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_GetAmmoInMagazineAndChamber_Ammo' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000024, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000025, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_GetMontage_Result_1) == 0x000028, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_GetMontage_Result_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000030, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_GetMontage_Result_2) == 0x000038, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_GetMontage_Result_2' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_HasSpareAmmo_Result) == 0x000040, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_HasSpareAmmo_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000041, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_TryBeginReloading_Result) == 0x000043, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_TryBeginReloading_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished, CallFunc_BooleanOR_ReturnValue_1) == 0x000044, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenActionFinished::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.EVENT_OnTryReloadWhenAmmoBagChanged
// 0x0180 (0x0180 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged final
{
public:
	int32                                         SlotIndex_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           SlotItem;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        AmmoBag;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmmoInMagazineAndChamber_Ammo;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0020(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryBeginReloading_Result;                 // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0130(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_SoftClassReference_ReturnValue; // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventoryComponent_Inventory;          // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged) == 0x000180, "Wrong size on ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, SlotIndex_0) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::SlotIndex_0' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, SlotItem) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::SlotItem' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, AmmoBag) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::AmmoBag' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, CallFunc_GetAmmoInMagazineAndChamber_Ammo) == 0x000018, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::CallFunc_GetAmmoInMagazineAndChamber_Ammo' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, CallFunc_GetCurrentMode_Mode) == 0x000020, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000120, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, CallFunc_TryBeginReloading_Result) == 0x000121, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::CallFunc_TryBeginReloading_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, CallFunc_IsValid_ReturnValue) == 0x000122, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, CallFunc_GetObjectClass_ReturnValue) == 0x000128, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000130, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, CallFunc_GetSlotItem_Item) == 0x000158, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, CallFunc_EqualEqual_SoftClassReference_ReturnValue) == 0x000160, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::CallFunc_EqualEqual_SoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, CallFunc_GetOwnerCharacter_Character) == 0x000168, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, CallFunc_GetInventoryComponent_Inventory) == 0x000170, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::CallFunc_GetInventoryComponent_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged, CallFunc_GetBagByType_Bag) == 0x000178, "Member 'ITEM_ProjectileWeapon_Base_C_EVENT_OnTryReloadWhenAmmoBagChanged::CallFunc_GetBagByType_Bag' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.OnWeaponBecameActivatable
// 0x0010 (0x0010 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_OnWeaponBecameActivatable final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowImmediately;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldAutoReload_Result;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_OnWeaponBecameActivatable) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_OnWeaponBecameActivatable");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_OnWeaponBecameActivatable) == 0x000010, "Wrong size on ITEM_ProjectileWeapon_Base_C_OnWeaponBecameActivatable");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnWeaponBecameActivatable, Character) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_OnWeaponBecameActivatable::Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnWeaponBecameActivatable, ShowImmediately) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_OnWeaponBecameActivatable::ShowImmediately' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnWeaponBecameActivatable, CallFunc_ShouldAutoReload_Result) == 0x000009, "Member 'ITEM_ProjectileWeapon_Base_C_OnWeaponBecameActivatable::CallFunc_ShouldAutoReload_Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.GetDesiredModeSwitchIndex
// 0x0004 (0x0004 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_GetDesiredModeSwitchIndex final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_GetDesiredModeSwitchIndex) == 0x000004, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_GetDesiredModeSwitchIndex");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_GetDesiredModeSwitchIndex) == 0x000004, "Wrong size on ITEM_ProjectileWeapon_Base_C_GetDesiredModeSwitchIndex");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_GetDesiredModeSwitchIndex, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_GetDesiredModeSwitchIndex::Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.TrySwitchToDesiredModeImmediately
// 0x0003 (0x0003 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_TrySwitchToDesiredModeImmediately final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentMode_Result;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_TrySwitchToDesiredModeImmediately) == 0x000001, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_TrySwitchToDesiredModeImmediately");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_TrySwitchToDesiredModeImmediately) == 0x000003, "Wrong size on ITEM_ProjectileWeapon_Base_C_TrySwitchToDesiredModeImmediately");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TrySwitchToDesiredModeImmediately, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_TrySwitchToDesiredModeImmediately::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TrySwitchToDesiredModeImmediately, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000001, "Member 'ITEM_ProjectileWeapon_Base_C_TrySwitchToDesiredModeImmediately::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TrySwitchToDesiredModeImmediately, CallFunc_SetCurrentMode_Result) == 0x000002, "Member 'ITEM_ProjectileWeapon_Base_C_TrySwitchToDesiredModeImmediately::CallFunc_SetCurrentMode_Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.TryCreateShellCasingComponent
// 0x0050 (0x0050 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent final
{
public:
	class AActor*                                 CallFunc_GetOwnerActor_Actor;                      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class UCOMP_PhysInstancedStaticMesh_C*        CallFunc_AddComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent) == 0x000010, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent) == 0x000050, "Wrong size on ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent, CallFunc_GetOwnerActor_Actor) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent::CallFunc_GetOwnerActor_Actor' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent, CallFunc_SetStaticMesh_ReturnValue) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent, CallFunc_AddComponentByClass_ReturnValue) == 0x000040, "Member 'ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'ITEM_ProjectileWeapon_Base_C_TryCreateShellCasingComponent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.TryDestroyShellCasingComponent
// 0x0001 (0x0001 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_TryDestroyShellCasingComponent final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_TryDestroyShellCasingComponent) == 0x000001, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_TryDestroyShellCasingComponent");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_TryDestroyShellCasingComponent) == 0x000001, "Wrong size on ITEM_ProjectileWeapon_Base_C_TryDestroyShellCasingComponent");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryDestroyShellCasingComponent, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_TryDestroyShellCasingComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.TryBeginReloading
// 0x0008 (0x0008 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_TryBeginReloading final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActivatable_Result;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHolsterActionPlaying_Result;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingReloadMontage_Result;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanRefillMagazine_Result;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_TryBeginReloading) == 0x000001, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_TryBeginReloading");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_TryBeginReloading) == 0x000008, "Wrong size on ITEM_ProjectileWeapon_Base_C_TryBeginReloading");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryBeginReloading, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_TryBeginReloading::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryBeginReloading, CallFunc_IsActivatable_Result) == 0x000001, "Member 'ITEM_ProjectileWeapon_Base_C_TryBeginReloading::CallFunc_IsActivatable_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryBeginReloading, CallFunc_IsHolsterActionPlaying_Result) == 0x000002, "Member 'ITEM_ProjectileWeapon_Base_C_TryBeginReloading::CallFunc_IsHolsterActionPlaying_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryBeginReloading, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'ITEM_ProjectileWeapon_Base_C_TryBeginReloading::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryBeginReloading, CallFunc_IsPlayingReloadMontage_Result) == 0x000004, "Member 'ITEM_ProjectileWeapon_Base_C_TryBeginReloading::CallFunc_IsPlayingReloadMontage_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryBeginReloading, CallFunc_Not_PreBool_ReturnValue_1) == 0x000005, "Member 'ITEM_ProjectileWeapon_Base_C_TryBeginReloading::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryBeginReloading, CallFunc_IsEquipped_Result) == 0x000006, "Member 'ITEM_ProjectileWeapon_Base_C_TryBeginReloading::CallFunc_IsEquipped_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_TryBeginReloading, CallFunc_CanRefillMagazine_Result) == 0x000007, "Member 'ITEM_ProjectileWeapon_Base_C_TryBeginReloading::CallFunc_CanRefillMagazine_Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.OnBecomeUnactivatable
// 0x0003 (0x0003 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_OnBecomeUnactivatable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldAutoReload_Result;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnBecomeUnactivatable_Result;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_OnBecomeUnactivatable) == 0x000001, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_OnBecomeUnactivatable");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_OnBecomeUnactivatable) == 0x000003, "Wrong size on ITEM_ProjectileWeapon_Base_C_OnBecomeUnactivatable");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnBecomeUnactivatable, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_OnBecomeUnactivatable::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnBecomeUnactivatable, CallFunc_ShouldAutoReload_Result) == 0x000001, "Member 'ITEM_ProjectileWeapon_Base_C_OnBecomeUnactivatable::CallFunc_ShouldAutoReload_Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_OnBecomeUnactivatable, CallFunc_OnBecomeUnactivatable_Result) == 0x000002, "Member 'ITEM_ProjectileWeapon_Base_C_OnBecomeUnactivatable::CallFunc_OnBecomeUnactivatable_Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.Activate
// 0x0010 (0x0010 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Activate_Result;                          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_Activate) == 0x000008, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_Activate");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_Activate) == 0x000010, "Wrong size on ITEM_ProjectileWeapon_Base_C_Activate");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_Activate, Character) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_Activate, Result) == 0x000008, "Member 'ITEM_ProjectileWeapon_Base_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_Activate, CallFunc_Activate_Result) == 0x000009, "Member 'ITEM_ProjectileWeapon_Base_C_Activate::CallFunc_Activate_Result' has a wrong offset!");

// Function ITEM_ProjectileWeapon_Base.ITEM_ProjectileWeapon_Base_C.Deactivate
// 0x0003 (0x0003 - 0x0000)
struct ITEM_ProjectileWeapon_Base_C_Deactivate final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Deactivate_Result;                        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_ProjectileWeapon_Base_C_Deactivate) == 0x000001, "Wrong alignment on ITEM_ProjectileWeapon_Base_C_Deactivate");
static_assert(sizeof(ITEM_ProjectileWeapon_Base_C_Deactivate) == 0x000003, "Wrong size on ITEM_ProjectileWeapon_Base_C_Deactivate");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_Deactivate, Result) == 0x000000, "Member 'ITEM_ProjectileWeapon_Base_C_Deactivate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_Deactivate, CallFunc_Less_IntInt_ReturnValue) == 0x000001, "Member 'ITEM_ProjectileWeapon_Base_C_Deactivate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_ProjectileWeapon_Base_C_Deactivate, CallFunc_Deactivate_Result) == 0x000002, "Member 'ITEM_ProjectileWeapon_Base_C_Deactivate::CallFunc_Deactivate_Result' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_ContextSubMenu

#include "Basic.hpp"

#include "WIDGET_ContextSubMenu_classes.hpp"
#include "WIDGET_ContextSubMenu_parameters.hpp"


namespace SDK
{

// Function WIDGET_ContextSubMenu.WIDGET_ContextSubMenu_C.InitializeContextSubMenu
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UCONTEXT_Base_C*>          ContextOptions                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UWIDGET_ContextSubMenu_C::InitializeContextSubMenu(TArray<class UCONTEXT_Base_C*>& ContextOptions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_ContextSubMenu_C", "InitializeContextSubMenu");

	Params::WIDGET_ContextSubMenu_C_InitializeContextSubMenu Parms{};

	Parms.ContextOptions = std::move(ContextOptions);

	UObject::ProcessEvent(Func, &Parms);

	ContextOptions = std::move(Parms.ContextOptions);
}


// Function WIDGET_ContextSubMenu.WIDGET_ContextSubMenu_C.UpdateBackgroundWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_ContextSubMenu_C::UpdateBackgroundWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_ContextSubMenu_C", "UpdateBackgroundWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_ContextSubMenu.WIDGET_ContextSubMenu_C.UpdateSubMenuPosition
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_ContextSubMenu_C::UpdateSubMenuPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_ContextSubMenu_C", "UpdateSubMenuPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_ContextSubMenu.WIDGET_ContextSubMenu_C.EVENT_OnMouseEnter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWIDGET_ContextSubMenu_C::EVENT_OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_ContextSubMenu_C", "EVENT_OnMouseEnter");

	Params::WIDGET_ContextSubMenu_C_EVENT_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_ContextSubMenu.WIDGET_ContextSubMenu_C.EVENT_OnMouseLeave
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UWIDGET_ContextSubMenu_C::EVENT_OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_ContextSubMenu_C", "EVENT_OnMouseLeave");

	Params::WIDGET_ContextSubMenu_C_EVENT_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_ContextSubMenu.WIDGET_ContextSubMenu_C.SetSubMenuSelectionState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_ContextSubMenu_C::SetSubMenuSelectionState(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_ContextSubMenu_C", "SetSubMenuSelectionState");

	Params::WIDGET_ContextSubMenu_C_SetSubMenuSelectionState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WirePuzzleSwitch

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WirePuzzleSwitch.WirePuzzleSwitch_C.ExecuteUbergraph_WirePuzzleSwitch
// 0x0008 (0x0008 - 0x0000)
struct WirePuzzleSwitch_C_ExecuteUbergraph_WirePuzzleSwitch final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WirePuzzleSwitch_C_ExecuteUbergraph_WirePuzzleSwitch) == 0x000004, "Wrong alignment on WirePuzzleSwitch_C_ExecuteUbergraph_WirePuzzleSwitch");
static_assert(sizeof(WirePuzzleSwitch_C_ExecuteUbergraph_WirePuzzleSwitch) == 0x000008, "Wrong size on WirePuzzleSwitch_C_ExecuteUbergraph_WirePuzzleSwitch");
static_assert(offsetof(WirePuzzleSwitch_C_ExecuteUbergraph_WirePuzzleSwitch, EntryPoint) == 0x000000, "Member 'WirePuzzleSwitch_C_ExecuteUbergraph_WirePuzzleSwitch::EntryPoint' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_ExecuteUbergraph_WirePuzzleSwitch, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'WirePuzzleSwitch_C_ExecuteUbergraph_WirePuzzleSwitch::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function WirePuzzleSwitch.WirePuzzleSwitch_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct WirePuzzleSwitch_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WirePuzzleSwitch_C_ReceiveTick) == 0x000004, "Wrong alignment on WirePuzzleSwitch_C_ReceiveTick");
static_assert(sizeof(WirePuzzleSwitch_C_ReceiveTick) == 0x000004, "Wrong size on WirePuzzleSwitch_C_ReceiveTick");
static_assert(offsetof(WirePuzzleSwitch_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'WirePuzzleSwitch_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function WirePuzzleSwitch.WirePuzzleSwitch_C.InitializeWireSwitch
// 0x011C (0x011C - 0x0000)
struct WirePuzzleSwitch_C_InitializeWireSwitch final
{
public:
	struct FHitResult                             CallFunc_K2_AddRelativeLocation_SweepHitResult;    // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_GetTargetRotationValue_Rotation;          // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0094(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WirePuzzleSwitch_C_InitializeWireSwitch) == 0x000004, "Wrong alignment on WirePuzzleSwitch_C_InitializeWireSwitch");
static_assert(sizeof(WirePuzzleSwitch_C_InitializeWireSwitch) == 0x00011C, "Wrong size on WirePuzzleSwitch_C_InitializeWireSwitch");
static_assert(offsetof(WirePuzzleSwitch_C_InitializeWireSwitch, CallFunc_K2_AddRelativeLocation_SweepHitResult) == 0x000000, "Member 'WirePuzzleSwitch_C_InitializeWireSwitch::CallFunc_K2_AddRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_InitializeWireSwitch, CallFunc_GetTargetRotationValue_Rotation) == 0x000088, "Member 'WirePuzzleSwitch_C_InitializeWireSwitch::CallFunc_GetTargetRotationValue_Rotation' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_InitializeWireSwitch, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000094, "Member 'WirePuzzleSwitch_C_InitializeWireSwitch::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function WirePuzzleSwitch.WirePuzzleSwitch_C.UpdateRotation
// 0x00B4 (0x00B4 - 0x0000)
struct WirePuzzleSwitch_C_UpdateRotation final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TargetRotation;                                    // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetTargetRotationValue_Rotation;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RInterpTo_Constant_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x002C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WirePuzzleSwitch_C_UpdateRotation) == 0x000004, "Wrong alignment on WirePuzzleSwitch_C_UpdateRotation");
static_assert(sizeof(WirePuzzleSwitch_C_UpdateRotation) == 0x0000B4, "Wrong size on WirePuzzleSwitch_C_UpdateRotation");
static_assert(offsetof(WirePuzzleSwitch_C_UpdateRotation, DeltaSeconds) == 0x000000, "Member 'WirePuzzleSwitch_C_UpdateRotation::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_UpdateRotation, TargetRotation) == 0x000004, "Member 'WirePuzzleSwitch_C_UpdateRotation::TargetRotation' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_UpdateRotation, CallFunc_GetTargetRotationValue_Rotation) == 0x000010, "Member 'WirePuzzleSwitch_C_UpdateRotation::CallFunc_GetTargetRotationValue_Rotation' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_UpdateRotation, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x00001C, "Member 'WirePuzzleSwitch_C_UpdateRotation::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_UpdateRotation, CallFunc_RInterpTo_Constant_ReturnValue) == 0x000020, "Member 'WirePuzzleSwitch_C_UpdateRotation::CallFunc_RInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_UpdateRotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00002C, "Member 'WirePuzzleSwitch_C_UpdateRotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function WirePuzzleSwitch.WirePuzzleSwitch_C.GetTargetRotationValue
// 0x0070 (0x0070 - 0x0000)
struct WirePuzzleSwitch_C_GetTargetRotationValue final
{
public:
	bool                                          Position;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Yaw;                                               // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Pitch;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_3;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_5;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_3;                           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WirePuzzleSwitch_C_GetTargetRotationValue) == 0x000004, "Wrong alignment on WirePuzzleSwitch_C_GetTargetRotationValue");
static_assert(sizeof(WirePuzzleSwitch_C_GetTargetRotationValue) == 0x000070, "Wrong size on WirePuzzleSwitch_C_GetTargetRotationValue");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Position) == 0x000000, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Position' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Rotation) == 0x000004, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Rotation' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Yaw) == 0x000010, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Yaw' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Pitch) == 0x000014, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Pitch' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Temp_float_Variable) == 0x000018, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Temp_bool_Variable) == 0x00001C, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Temp_float_Variable_1) == 0x000020, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Temp_float_Variable_2) == 0x000024, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Temp_bool_Variable_1) == 0x000028, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Temp_float_Variable_3) == 0x00002C, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Temp_float_Variable_4) == 0x000030, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Temp_bool_Variable_2) == 0x000034, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Temp_float_Variable_5) == 0x000038, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Temp_float_Variable_6) == 0x00003C, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Temp_float_Variable_7) == 0x000040, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, K2Node_Select_Default) == 0x000044, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, K2Node_Select_Default_1) == 0x000048, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, Temp_bool_Variable_3) == 0x00004C, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, K2Node_Select_Default_2) == 0x000050, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, K2Node_Select_Default_3) == 0x000054, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, K2Node_SwitchInteger_CmpSuccess) == 0x000058, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00005C, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_GetTargetRotationValue, CallFunc_MakeRotator_ReturnValue) == 0x000064, "Member 'WirePuzzleSwitch_C_GetTargetRotationValue::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function WirePuzzleSwitch.WirePuzzleSwitch_C.UpdateSwitchMaterial
// 0x0014 (0x0014 - 0x0000)
struct WirePuzzleSwitch_C_UpdateSwitchMaterial final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WirePuzzleSwitch_C_UpdateSwitchMaterial) == 0x000004, "Wrong alignment on WirePuzzleSwitch_C_UpdateSwitchMaterial");
static_assert(sizeof(WirePuzzleSwitch_C_UpdateSwitchMaterial) == 0x000014, "Wrong size on WirePuzzleSwitch_C_UpdateSwitchMaterial");
static_assert(offsetof(WirePuzzleSwitch_C_UpdateSwitchMaterial, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'WirePuzzleSwitch_C_UpdateSwitchMaterial::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_UpdateSwitchMaterial, CallFunc_SelectFloat_ReturnValue) == 0x00000C, "Member 'WirePuzzleSwitch_C_UpdateSwitchMaterial::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WirePuzzleSwitch_C_UpdateSwitchMaterial, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'WirePuzzleSwitch_C_UpdateSwitchMaterial::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

}


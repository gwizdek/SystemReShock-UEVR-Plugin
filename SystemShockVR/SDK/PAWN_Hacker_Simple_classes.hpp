#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_Hacker_Simple

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_HackerGender_structs.hpp"
#include "ENUM_HazardType_structs.hpp"
#include "GameplayState_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "PAWN_SystemShockCharacter_classes.hpp"
#include "STRUCT_TutorialInstance_structs.hpp"
#include "ENUM_MFDTabCategory_structs.hpp"
#include "ENUM_HotbarStyle_structs.hpp"
#include "UMG_structs.hpp"
#include "ENUM_CardinalDirection_structs.hpp"
#include "ENUM_PostProcessingOptions_structs.hpp"
#include "ENUM_DetectionState_structs.hpp"
#include "SystemReShock_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PAWN_Hacker_Simple.PAWN_Hacker_Simple_C
// 0x07D0 (0x0E50 - 0x0680)
class APAWN_Hacker_Simple_C : public APAWN_SystemShockCharacter_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PAWN_Hacker_Simple_C;               // 0x0680(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Breathing;                                         // 0x0688(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     MouthAudio;                                        // 0x0690(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_HackerInventory_C*                COMP_HackerInventory;                              // 0x0698(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       HeadRangedCollision;                               // 0x06A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      EnvironmentFX;                                     // 0x06A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelCullableNavAgent_C*          COMP_VoxelCullableNavAgent;                        // 0x06B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        AnimCameraStart;                                   // 0x06B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        AnimCameraPosition;                                // 0x06C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        AnimHeadPosition;                                  // 0x06C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WeaponMesh;                                        // 0x06D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ArmsMesh;                                          // 0x06D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LookPivot;                                         // 0x06E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        EffectsPivot;                                      // 0x06E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        RecoilPivot;                                       // 0x06F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       PlayerCamera;                                      // 0x06F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelCuller_C*                    COMP_VoxelCuller;                                  // 0x0700(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_PlayerCameraEffects_C*            COMP_PlayerCameraEffects;                          // 0x0708(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_MoveControlManager_C*             COMP_MoveControlManager;                           // 0x0710(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BankPivot;                                         // 0x0718(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        BobOffset;                                         // 0x0720(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LeanOffset;                                        // 0x0728(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        LeanPivot;                                         // 0x0730(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Scanner_C*                        COMP_Scanner;                                      // 0x0738(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SensaroundTimeline_OpacityValue_07BE0984496D46460014C994C478D474; // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SensaroundTimeline__Direction_07BE0984496D46460014C994C478D474; // 0x0744(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_745[0x3];                                      // 0x0745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SensaroundTimeline;                                // 0x0748(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_13_NewTrack_0_3E12CFD547E84720973BFF9F51540152; // 0x0750(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_13__Direction_3E12CFD547E84720973BFF9F51540152; // 0x0754(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_755[0x3];                                      // 0x0755(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_13;                                       // 0x0758(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_12_NewTrack_0_0BBCFEFE4B59637D0DBB25AB4F4E81C9; // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_12__Direction_0BBCFEFE4B59637D0DBB25AB4F4E81C9; // 0x0764(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_765[0x3];                                      // 0x0765(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_12;                                       // 0x0768(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_11_NewTrack_0_E66E344A4D0506561FC489B4D75114D0; // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_11__Direction_E66E344A4D0506561FC489B4D75114D0; // 0x0774(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_775[0x3];                                      // 0x0775(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_11;                                       // 0x0778(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_10_NewTrack_0_D9A073704A9F17D92928BBB9726C5540; // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_10__Direction_D9A073704A9F17D92928BBB9726C5540; // 0x0784(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_785[0x3];                                      // 0x0785(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_10;                                       // 0x0788(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_9_NewTrack_0_A89065FD49500C5AE565ECA555E4EBC7; // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_9__Direction_A89065FD49500C5AE565ECA555E4EBC7; // 0x0794(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_795[0x3];                                      // 0x0795(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_9;                                        // 0x0798(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_8_NewTrack_0_4454CA0646ADF00A663035BD35E5C30C; // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_8__Direction_4454CA0646ADF00A663035BD35E5C30C; // 0x07A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A5[0x3];                                      // 0x07A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_8;                                        // 0x07A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_7_NewTrack_0_D0B7891143F740FE1D9ECD88ED21E0FF; // 0x07B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_7__Direction_D0B7891143F740FE1D9ECD88ED21E0FF; // 0x07B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B5[0x3];                                      // 0x07B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_7;                                        // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_F87153A4472BED1B6884D39C3C56EA77; // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_F87153A4472BED1B6884D39C3C56EA77; // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_6_NewTrack_0_586BE42448B71547967C179F9959580E; // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_6__Direction_586BE42448B71547967C179F9959580E; // 0x07D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D5[0x3];                                      // 0x07D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_6;                                        // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_5_NewTrack_0_D0D9DF4347C200C69987958E4E18831B; // 0x07E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_5__Direction_D0D9DF4347C200C69987958E4E18831B; // 0x07E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E5[0x3];                                      // 0x07E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_5;                                        // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_4_NewTrack_0_84F32218415EE577678B05B212CBD9DD; // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_4__Direction_84F32218415EE577678B05B212CBD9DD; // 0x07F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F5[0x3];                                      // 0x07F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_4;                                        // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_3_NewTrack_0_45A9575740992A750E60D09D8A4BCD81; // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_3__Direction_45A9575740992A750E60D09D8A4BCD81; // 0x0804(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_805[0x3];                                      // 0x0805(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_3;                                        // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_1_NewTrack_0_B8FB9C4644E36FA975184BB299A2787D; // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_1__Direction_B8FB9C4644E36FA975184BB299A2787D; // 0x0814(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_815[0x3];                                      // 0x0815(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_1;                                        // 0x0818(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Psychosis_Enable_Timeline_Trippy_Effect_6F4178564EEC0E01EFF5138088FCA53D; // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Psychosis_Enable_Timeline_Blood_Screen_6F4178564EEC0E01EFF5138088FCA53D; // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Psychosis_Enable_Timeline_Grain_Intensity_6F4178564EEC0E01EFF5138088FCA53D; // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Psychosis_Enable_Timeline_ChromaticAbberation_6F4178564EEC0E01EFF5138088FCA53D; // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Psychosis_Enable_Timeline_BloodVessels_6F4178564EEC0E01EFF5138088FCA53D; // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Psychosis_Enable_Timeline_Vignette_6F4178564EEC0E01EFF5138088FCA53D; // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Psychosis_Enable_Timeline__Direction_6F4178564EEC0E01EFF5138088FCA53D; // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_839[0x7];                                      // 0x0839(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Psychosis_Enable_Timeline;                         // 0x0840(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Berserk_PP_Disable_Timeline_Effect_Fade_763D7365490C280AD99684B156CDC422; // 0x0848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Berserk_PP_Disable_Timeline__Direction_763D7365490C280AD99684B156CDC422; // 0x084C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84D[0x3];                                      // 0x084D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Berserk_PP_Disable_Timeline;                       // 0x0850(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTryingToInteract;                                // 0x0858(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TryReloadIfNoInteract;                             // 0x0859(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85A[0x2];                                      // 0x085A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentChannelingHoldTime;                         // 0x085C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxInteractDistance;                               // 0x0860(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleCushionHeight;                              // 0x0864(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    BioPoisonDamageAttribMod;                          // 0x0868(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FAttribModApplyData                    IncreaseBioPoisonLevelAttribMod;                   // 0x0908(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FAttribModApplyData                    DecreaseBioPoisonLevelAttribMod;                   // 0x09A8(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FAttribModApplyData                    StaminaRegenAttribMod;                             // 0x0A48(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FAttribModApplyData                    SpreadCorrectionMod;                               // 0x0AE8(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
	class APlayerCameraManager*                   CameraManager;                                     // 0x0B88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            PlayerHUDWidget;                                   // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   OutOfRangeMessage;                                 // 0x0B98(0x0018)(Edit, BlueprintVisible)
	class FName                                   ChannelingInteractableName;                        // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ChannelingPrimComponentName;                       // 0x0BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ChannelingInteractable;                            // 0x0BC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    ChannelingPrimitiveComponent;                      // 0x0BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TutorialsEnabledState;                             // 0x0BD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD1[0x7];                                      // 0x0BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTRUCT_TutorialInstance>       TutorialsToDisplay;                                // 0x0BD8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         InitialFMinusStop;                                 // 0x0BE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InitialFocalDistance;                              // 0x0BEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TutorialPeriodicTimerHandle;                       // 0x0BF0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ScreenEffectsMaterial;                             // 0x0BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        BiohazardMaintainAudioComponent;                   // 0x0C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LeanKeyDownCount;                                  // 0x0C08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MoveKeyDownCount;                                  // 0x0C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KeyboardMoveX;                                     // 0x0C10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KeyboardMoveY;                                     // 0x0C14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GamepadMoveX;                                      // 0x0C18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GamepadMoveY;                                      // 0x0C1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GamepadPitch;                                      // 0x0C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GamepadYaw;                                        // 0x0C24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MouseYaw;                                          // 0x0C28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MousePitch;                                        // 0x0C2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GamepadCursorMoveTimestamp;                        // 0x0C30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsTryingToLean;                                    // 0x0C34(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C35[0x3];                                      // 0x0C35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LastRecoilTimestamp;                               // 0x0C38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RecoilRecenterDelay;                               // 0x0C3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentWeaponOffset;                               // 0x0C40(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentKickbackRatio;                              // 0x0C4C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Base_C*                       RecentInteractable;                                // 0x0C50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    RecentInteractPrimitive;                           // 0x0C58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           DetoxTimerHandle;                                  // 0x0C60(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              LastViewportSize;                                  // 0x0C68(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastHorizontalFOV;                                 // 0x0C70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C74[0x4];                                      // 0x0C74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MI_Medipatch_PP;                                   // 0x0C78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChromaticAbberationMax;                            // 0x0C80(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C84[0x4];                                      // 0x0C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MI_Berserk_Side_Effect_PP;                         // 0x0C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Beserk_Patch_Apply_PP;                             // 0x0C90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Psychosis_Side_Effect_PP;                          // 0x0C98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      PsychosisSpritesNiagara;                           // 0x0CA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Cyberspace_Entry_PP;                               // 0x0CA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               LensDistortionPP;                                  // 0x0CB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ThermalDamageAttribCategory;                       // 0x0CB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UAttributeDef*>       DermalPatchAttribCategoryMap;                      // 0x0CC0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<ENUM_HazardType>                       BioPoisonHazardTypes;                              // 0x0D10(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FName                                   QueuedRespawnLevelName;                            // 0x0D20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D28[0x8];                                      // 0x0D28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             DefaultMeshTransform;                              // 0x0D30(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingUp;                                       // 0x0D60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingDown;                                     // 0x0D61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingLeft;                                     // 0x0D62(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingRight;                                    // 0x0D63(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingAccept;                                   // 0x0D64(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingBack;                                     // 0x0D65(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingAlt1;                                     // 0x0D66(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingAlt2;                                     // 0x0D67(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingTabLeft;                                  // 0x0D68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingTabRight;                                 // 0x0D69(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6A[0x6];                                      // 0x0D6A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MI_EnhanceVision_PP;                               // 0x0D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_Staminup_PP;                                    // 0x0D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_Reflex_PP;                                      // 0x0D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_Detox_PP;                                       // 0x0D88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MI_NightVision_PP;                                 // 0x0D90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCyberspaceTransitionStarted;                     // 0x0D98(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         FullScreenOpacity;                                 // 0x0DA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DAC[0x4];                                      // 0x0DAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MI_EnergyShield_PP;                                // 0x0DB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MISensaroundPP;                                    // 0x0DB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PlayerHUDClass;                                    // 0x0DC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ThreateningActors;                                 // 0x0DC8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UMaterialInstanceDynamic*               MIRadDamagePP;                                     // 0x0DD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameplayState                                DefaultMusicGameplayState;                         // 0x0DE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE1[0x7];                                      // 0x0DE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            GameProgressToThreatScale;                         // 0x0DE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UClass*>              AttribCategoryToDermalPatchItemMap;                // 0x0DF0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsHoldingAlt3;                                     // 0x0E40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsHoldingAlt4;                                     // 0x0E41(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDebugConditionMet;                               // 0x0E42(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugTabHeld;                                      // 0x0E43(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugCtrlHeld;                                     // 0x0E44(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugGamepadLeftShoulderHeld;                      // 0x0E45(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugGamepadRightShoulderHeld;                     // 0x0E46(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugGamepadLeftTriggerHeld;                       // 0x0E47(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugGamepadLeftSpecialHeld;                       // 0x0E48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugGamepadRightThumbHeld;                        // 0x0E49(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugGamepadRightTriggerHeld;                      // 0x0E4A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnCyberspaceTransitionStarted__DelegateSignature();
	void ExecuteUbergraph_PAWN_Hacker_Simple(int32 EntryPoint);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveUnpossessed(class AController* OldController);
	void BndEvt__COMP_VoxelCuller_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void ReceivePossessed(class AController* NewController);
	void OnLanded(const struct FHitResult& Hit);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void InpAxisEvt_Locked_ZoomAxis_K2Node_InputAxisEvent_19(float AxisValue);
	void InpAxisEvt_Gamepad_LookYaw_K2Node_InputAxisEvent_18(float AxisValue);
	void InpAxisEvt_Gamepad_LookPitch_K2Node_InputAxisEvent_15(float AxisValue);
	void InpAxisEvt_Locked_LookYaw_K2Node_InputAxisEvent_13(float AxisValue);
	void InpAxisEvt_Locked_LookPitch_K2Node_InputAxisEvent_12(float AxisValue);
	void InpAxisEvt_Gamepad_Real_MoveAxis_Y_K2Node_InputAxisEvent_4(float AxisValue);
	void InpAxisEvt_Gamepad_Real_MoveAxis_X_K2Node_InputAxisEvent_3(float AxisValue);
	void InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17(float AxisValue);
	void InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16(float AxisValue);
	void BndEvt__COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void Medipatch_Apply_PP();
	void Beserk_Apply_PP();
	void BioPoisoningEnd();
	void BioPoisoningStart(bool IsRadiationDamage);
	void SensaroundEnd();
	void SensaroundStart();
	void SetWarpEffect_Beserk(float Value);
	void AsyncPlayPsychosisSystem(TSoftObjectPtr<class UNiagaraSystem> System);
	void Beserk_End_PP();
	void EnergyShieldEnd();
	void EnergyShieldStart();
	void DetoxEnd();
	void ReflexEnd();
	void Medipatch_End();
	void StimupEnd();
	void ReflexStart();
	void NightVisionEnd();
	void NightVisionStart();
	void StimupStart();
	void DetoxStart();
	void EnhanceVisionEnd();
	void EnhanceVisionStart();
	void Psychosis_End();
	void Psychosis_Start();
	void InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_2(const struct FKey& Key);
	void InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_3(const struct FKey& Key);
	void InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_4(const struct FKey& Key);
	void InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_6(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_7(const struct FKey& Key);
	void InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_8(const struct FKey& Key);
	void InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_9(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_10(const struct FKey& Key);
	void InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_11(const struct FKey& Key);
	void InpActEvt_LeftControl_K2Node_InputKeyEvent_12(const struct FKey& Key);
	void InpActEvt_LeftControl_K2Node_InputKeyEvent_13(const struct FKey& Key);
	void InpActEvt_Tab_K2Node_InputKeyEvent_14(const struct FKey& Key);
	void InpActEvt_Tab_K2Node_InputKeyEvent_15(const struct FKey& Key);
	void InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0(const struct FKey& Key);
	void InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1(const struct FKey& Key);
	void InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2(const struct FKey& Key);
	void InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3(const struct FKey& Key);
	void InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4(const struct FKey& Key);
	void InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5(const struct FKey& Key);
	void InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6(const struct FKey& Key);
	void InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_8(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_9(const struct FKey& Key);
	void InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_10(const struct FKey& Key);
	void InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_11(const struct FKey& Key);
	void InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_12(const struct FKey& Key);
	void InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_13(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_14(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_15(const struct FKey& Key);
	void InpActEvt_Real_ToggleEquip_K2Node_InputActionEvent_16(const struct FKey& Key);
	void InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_17(const struct FKey& Key);
	void InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_18(const struct FKey& Key);
	void InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_19(const struct FKey& Key);
	void InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_20(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_21(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_22(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_23(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_24(const struct FKey& Key);
	void InpActEvt_Real_QuickSave_K2Node_InputActionEvent_25(const struct FKey& Key);
	void InpActEvt_Real_QuickLoad_K2Node_InputActionEvent_26(const struct FKey& Key);
	void InpActEvt_Real_LeanRight_K2Node_InputActionEvent_27(const struct FKey& Key);
	void InpActEvt_Real_LeanRight_K2Node_InputActionEvent_28(const struct FKey& Key);
	void InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_29(const struct FKey& Key);
	void InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_30(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_Lean_K2Node_InputActionEvent_31(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_32(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_33(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_34(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_35(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_36(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_37(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_38(const struct FKey& Key);
	void InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_39(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_HotbarCycleNext_K2Node_InputActionEvent_40(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_HotbarCyclePrevious_K2Node_InputActionEvent_41(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_ModeNext_K2Node_InputActionEvent_42(const struct FKey& Key);
	void InpActEvt_Real_ModeNext_K2Node_InputActionEvent_43(const struct FKey& Key);
	void InpActEvt_Real_Reload_K2Node_InputActionEvent_44(const struct FKey& Key);
	void InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_45(const struct FKey& Key);
	void InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_46(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_47(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_48(const struct FKey& Key);
	void InpActEvt_Real_Interact_K2Node_InputActionEvent_49(const struct FKey& Key);
	void InpActEvt_Real_Interact_K2Node_InputActionEvent_50(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_51(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_52(const struct FKey& Key);
	void InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_53(const struct FKey& Key);
	void InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_54(const struct FKey& Key);
	void InpActEvt_Real_MoveForward_K2Node_InputActionEvent_55(const struct FKey& Key);
	void InpActEvt_Real_MoveForward_K2Node_InputActionEvent_56(const struct FKey& Key);
	void InpActEvt_Real_MoveRight_K2Node_InputActionEvent_57(const struct FKey& Key);
	void InpActEvt_Real_MoveRight_K2Node_InputActionEvent_58(const struct FKey& Key);
	void InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_59(const struct FKey& Key);
	void InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_60(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_61(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_62(const struct FKey& Key);
	void InpActEvt_Real_Jump_K2Node_InputActionEvent_63(const struct FKey& Key);
	void InpActEvt_Real_Jump_K2Node_InputActionEvent_64(const struct FKey& Key);
	void InpActEvt_Real_Sprint_K2Node_InputActionEvent_65(const struct FKey& Key);
	void InpActEvt_Real_Sprint_K2Node_InputActionEvent_66(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_67(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_68(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_69(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_70(const struct FKey& Key);
	void InpActEvt_Real_Crouch_K2Node_InputActionEvent_71(const struct FKey& Key);
	void InpActEvt_Real_Crouch_K2Node_InputActionEvent_72(const struct FKey& Key);
	void InpActEvt_Real_Aim_K2Node_InputActionEvent_73(const struct FKey& Key);
	void InpActEvt_Real_Aim_K2Node_InputActionEvent_74(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_75(const struct FKey& Key);
	void InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_76(const struct FKey& Key);
	void InpActEvt_Locked_Escape_K2Node_InputActionEvent_77(const struct FKey& Key);
	void InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_78(const struct FKey& Key);
	void InpActEvt_MenuNav_Back_K2Node_InputActionEvent_79(const struct FKey& Key);
	void InpActEvt_MenuNav_Back_K2Node_InputActionEvent_80(const struct FKey& Key);
	void InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_81(const struct FKey& Key);
	void InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_82(const struct FKey& Key);
	void InpActEvt_Decimal_K2Node_InputKeyEvent_16(const struct FKey& Key);
	void InpActEvt_Subtract_K2Node_InputKeyEvent_17(const struct FKey& Key);
	void InpActEvt_NumPadNine_K2Node_InputKeyEvent_18(const struct FKey& Key);
	void InpActEvt_NumPadEight_K2Node_InputKeyEvent_19(const struct FKey& Key);
	void InpActEvt_NumPadSeven_K2Node_InputKeyEvent_20(const struct FKey& Key);
	void InpActEvt_NumPadSix_K2Node_InputKeyEvent_21(const struct FKey& Key);
	void InpActEvt_NumPadFive_K2Node_InputKeyEvent_22(const struct FKey& Key);
	void InpActEvt_NumPadFour_K2Node_InputKeyEvent_23(const struct FKey& Key);
	void InpActEvt_NumPadThree_K2Node_InputKeyEvent_24(const struct FKey& Key);
	void InpActEvt_NumPadTwo_K2Node_InputKeyEvent_25(const struct FKey& Key);
	void InpActEvt_NumPadOne_K2Node_InputKeyEvent_26(const struct FKey& Key);
	void InpActEvt_NumPadZero_K2Node_InputKeyEvent_27(const struct FKey& Key);
	void InpActEvt_AnyKey_K2Node_InputKeyEvent_28(const struct FKey& Key);
	void InpActEvt_X_K2Node_InputKeyEvent_29(const struct FKey& Key);
	void InpActEvt_X_K2Node_InputKeyEvent_30(const struct FKey& Key);
	void InpActEvt_Z_K2Node_InputKeyEvent_31(const struct FKey& Key);
	void OnLoaded_9A78B542483B7F7CB2D9279EC6F3C245(class UObject* Loaded);
	void SensaroundTimeline__UpdateFunc();
	void SensaroundTimeline__FinishedFunc();
	void Berserk_PP_Disable_Timeline__UpdateFunc();
	void Berserk_PP_Disable_Timeline__FinishedFunc();
	void Timeline_13__UpdateFunc();
	void Timeline_13__FinishedFunc();
	void Timeline_12__UpdateFunc();
	void Timeline_12__FinishedFunc();
	void Timeline_11__UpdateFunc();
	void Timeline_11__FinishedFunc();
	void Timeline_10__UpdateFunc();
	void Timeline_10__FinishedFunc();
	void Timeline_9__UpdateFunc();
	void Timeline_9__FinishedFunc();
	void Timeline_8__UpdateFunc();
	void Timeline_8__FinishedFunc();
	void Timeline_7__UpdateFunc();
	void Timeline_7__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void Timeline_6__UpdateFunc();
	void Timeline_6__FinishedFunc();
	void Timeline_5__UpdateFunc();
	void Timeline_5__FinishedFunc();
	void Timeline_4__UpdateFunc();
	void Timeline_4__FinishedFunc();
	void Timeline_3__UpdateFunc();
	void Timeline_3__FinishedFunc();
	void Timeline_1__UpdateFunc();
	void Timeline_1__FinishedFunc();
	void Psychosis_Enable_Timeline__UpdateFunc();
	void Psychosis_Enable_Timeline__FinishedFunc();
	void UserConstructionScript();
	void InitializeChannelingInteract();
	void TryInteract(bool* ValidInteract);
	void IsPrimitiveInInteractRange(class UPrimitiveComponent* Primitive, bool* Result);
	void IsSafeToInteract(bool* Result);
	void DoesMovementAllowInteraction(bool* Result);
	void UpdateInteraction(float DeltaTime);
	void GetGazeLocations(TArray<struct FVector>* GazeLocations);
	void GetActionMeshComponent(class USkeletalMeshComponent** SkeletalMeshComponent);
	void SetDisplayMesh(class USkeletalMesh* DisplayMesh, class UClass* AnimBP, class UMaterialInterface* OverrideMaterial, bool* Result);
	void IsDirectlyThreatenedByAnyEnemy(bool* Result);
	void IsIndirectlyThreatenedByAnyEnemy(bool* Result);
	void IsThreatenedByAnyExplosive(bool* Result);
	void GetThreatenedLevel(int32* Result);
	void GetCurrentSpreadAngle(float* Result);
	void IncreaseRecoilSpreadAngle(float AddAngle, float MaxAngle, float CorrectionDelay);
	void SetSpreadCorrectionSpeed(int32 CorrectionSpeed);
	void ResetSpreadCorrectionSpeed();
	void ApplyMoveSpreadIncreaseMod(const struct FAttribModApplyData& SpreadIncreaseMod);
	void ApplyMoveSpreadCorrection();
	void OnEnemyThreatLevelChanged(class AActor* Actor, bool IsThreatening);
	void HasDisplayMesh(bool* Result);
	void HasGamepadMovedCursorRecently(float TimeThreshold, bool* Result);
	void HandleEscape();
	void OnInteractionFailed(const class FText& FailedText);
	void BeginChannelingInteraction(class AActor* Interactable, class UPrimitiveComponent* PrimitiveComponent);
	void FinishChannelingInteraction();
	void TryStopChannelingInteraction(bool* Result);
	void TryStopFocusingOnInteract(bool* Result);
	void IsChannelingWithInteractable(class AActor* Interactable, bool* Result);
	void IsChannelingWithAnyInteractable(bool* Result);
	void GetChannelingInteractable(class AActor** Result);
	void InitializeTutorials();
	void EVENT_OnTutorialCompleted(class FName TutorialName);
	void GetHighestPriorityTutorial(struct FSTRUCT_TutorialInstance* Result);
	void SetTutorialsEnabled(bool TutorialsEnabled);
	void AreTutorialsEnabled(bool* TutorialsEnabled);
	void ActivateTimedTutorial(class FName Tutorial, float Duration);
	void DeactivateTutorial(class FName Tutorial);
	void GetTutorialMessage(class FName Tutorial, class FText* Result);
	void ActivateVolumeTutorials(TArray<struct FSTRUCT_TutorialVolumeData>& Tutorials);
	void AddVolumeTutorial(class FName Name_0, float Timestamp, class AActor* TargetActor, const struct FVector& TargetOffset);
	void TryRemoveTutorials(class FName Name_0, bool* Result);
	void PlayDamageVocalization(class UAttribDamageType* DamageType);
	void OnCharacterDied(class UOBJ_ImpactData_C* ImpactData, const struct FAttribDamageInstance& DamageInstance, class AActor* OtherActor, bool* Result);
	void PlayDamageFoley(class UAttribDamageType* DamageType);
	void EVENT_OnDOFChanged(float CurrValue, float PrevValue);
	void InitializeCameraSettings();
	void HasAnyActiveTutorials(bool* Result);
	void HasAnyActiveTimedTutorials(bool* Result);
	void HasActiveTutorialByName(class FName TutorialName, bool* Result);
	void GetAngleToTutorialActor(class AActor* TargetActor, const struct FVector& TargetOffset, float* Result);
	void GetPitchYawToTutorialActor(class AActor* TargetActor, const struct FVector& TargetOffset, struct FVector2D* PitchYawDegrees);
	void IsTutorialActorVisible(class AActor* TargetActor, const struct FVector& TargetOffset, bool* Result);
	void TryHandlePressAnyKey();
	void TryEnterKeypadDigit(int32 Digit);
	void TryCompleteTimedTutorials();
	void TryStartPeriodicTutorialTick();
	void TryStopPeriodicTutorialTick();
	void TryPressKeypadClear();
	void TryPressKeypadEraseLast();
	void HandleMousePitch(float NewPitch);
	void HandleMouseYaw(float NewYaw);
	void HandleZoom(float AxisValue);
	void GetDisplayMeshComponent(class USkeletalMeshComponent** MeshComponent);
	void TryAddDisplayMeshAttachment(class UStaticMesh* Mesh_0, const struct FTransform& AttachTransform, class FName SocketName);
	void DestroyDisplayMeshAttachments();
	void InitializeGender();
	void InitializeAttributes();
	void InitializeSavedOptions();
	void SetPostProccessEnabled(ENUM_PostProcessingOptions Option, bool IsPostProccessEnabled);
	void GetPostProccessEnabled(ENUM_PostProcessingOptions Option, bool* Value);
	void EVENT_OnLBPChanged(float CurrValue, float LastValue);
	void HandleKeyboardMove(ENUM_CardinalDirection Direction, bool IsDown);
	void HandleKeyboardLean(float Value, bool IsDown);
	void HandleKeyboardInteract(bool IsDown);
	void GamepadInteract(bool IsDown);
	void UpdateGamepadLook(float DeltaTime);
	void UpdateGamepadCursor();
	void UpdateMoveControls(float DeltaTime);
	void ClearMovementValues(bool ClearMoveActions);
	void SetJumpInputState(bool InputState);
	void GamepadJump(bool IsDown);
	void SetTryCrouch(bool IsTryingToCrouch);
	void SetTryAimDownSights(bool State, bool IsGamepad);
	void GamepadTryLeanToggle();
	void GamepadTryCrouch(bool IsTryingToCrouch);
	void PreAnimationTick(float DeltaTime);
	void UpdateBodyRig();
	void PostAnimationTick(float DeltaTime);
	void UpdateCameraAnimationOffset();
	void AddRecoil(float MaxPitch, float Magnitude, float RecenterDelay, bool HasKickback);
	void UpdateRecoilRecentering(float DeltaTime);
	void EVENT_OnGlobalTimeScaleChanged(float CurrValue, float LastValue);
	void EVENT_OnDetoxRateChanged(float CurrValue, float LastValue);
	void EVENT_OnDetoxTick();
	void OnCharacterHurt(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UOBJ_ImpactData_C* ImpactData, bool* Result);
	void UpdateWeaponHeightOffset();
	void InitializePlayerAudio();
	void OnPossessedStateChange(bool IsPossessed);
	void CaptureSceneFromPlayerCamera(class UTextureRenderTarget2D* RenderTarget);
	void GetInventoryComponent(class UCOMP_Inventory_C** Inventory);
	void QuitGame();
	void GamepadCycleHotbarSlot(bool Previous);
	void CanSaveGames(bool* Result);
	void CacheDermalPatchAttribCategories();
	void ApplyForceFeedback(class UAttribDamageType* DamageType, float TotalDamage);
	void GrantSpecificCharacterLoadout(const struct FSTRUCT_CharacterLoadoutSettings& Loadout);
	void ApplyInstantHazardLevel(ENUM_HazardType HazardType, uint8 HazardLevel);
	void OnApplyHazardMods(ENUM_HazardType HazardType, uint8 HazardLevel, bool* Result);
	void OnBioPoisoningChanged(class UAttribMod* HazardMod, float CurrValue, float LastValue);
	void IsOnFlatGroundForDeathAnimation(bool* Result);
	void HandleDeathPhysicsOrAnimation(class UAttribDamageType* DamageType);
	void EVENT_OnWalkableFloorAngleChanged(float CurrValue, float LastValue);
	void HandleMenuNavUp(bool ButtonDown);
	void HandleMenuNavDown(bool ButtonDown);
	void HandleMenuNavLeft(bool ButtonDown);
	void HandleMenuNavRight(bool ButtonDown);
	void HandleMenuNavAccept(bool ButtonDown);
	void HandleMenuNavBack(bool ButtonDown);
	void BindCharacterEvents();
	void HandleMenuNavAlt1(bool ButtonDown);
	void HandleMenuNavAlt2(bool ButtonDown);
	void HandleMenuNavAlt3(bool ButtonDown);
	void HandleMenuNavAlt4(bool ButtonDown);
	void HandleMenuNavTabLeft(bool ButtonDown);
	void HandleMenuNavTabRight(bool ButtonDown);
	void UpdatePsychosisEffect(bool Activate);
	void CreatePlayerHUD();
	void RestoreDefaultMeshTransform();
	void SyncGlobalTimeDilation();
	void OnRespawnHacker(const struct FVector& SpawnLocation, const struct FRotator& SpawnRotation);
	void HasQueuedOrActiveCinematicAction(bool* Result);
	void InitializeEmissiveStrength(bool BeginPlay);
	void SetEmissiveStrength(float Strength);
	void EVENT_OnChannelingInteractEndPlay(class AActor* Actor, EEndPlayReason Reason);
	void TryLeaveCurrentLevel(bool* Result);
	void InitializeControllerConnection();
	void OnControllerConnectionStateChange(bool ControllerConnectedState);
	bool ReceiveAnimationMessage(const EActorMessagePriority& Priority, const class FString& Message);
	bool ShouldSaveActor(struct FStreamingSaveGameActorParams* Params_0);
	void InitializeCharacter(bool* Result);
	void GetHeadTransform(struct FTransform* Transform);
	void OnHazardLevelChanged(ENUM_HazardType HazardType, uint8 HazardLevel);
	void OnHazardProtectionChanged();
	void GetLocationalAudioSceneComponent(class USceneComponent** Result);
	void TryTeleportCharacter(const struct FVector& Location, const struct FRotator& Rotation, float MaterializeDuration, class USoundCue* SoundCue, class UNiagaraSystem* BoundsFX, class UNiagaraSystem* MeshFX, bool* Result);
	void UpdateCharacterStateForTeleport(bool ShouldUpdateVisibility);
	void ApplyKnockback(const struct FVector& LinearImpulse, const struct FVector& ImpactPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PAWN_Hacker_Simple_C">();
	}
	static class APAWN_Hacker_Simple_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APAWN_Hacker_Simple_C>();
	}
};
static_assert(alignof(APAWN_Hacker_Simple_C) == 0x000010, "Wrong alignment on APAWN_Hacker_Simple_C");
static_assert(sizeof(APAWN_Hacker_Simple_C) == 0x000E50, "Wrong size on APAWN_Hacker_Simple_C");
static_assert(offsetof(APAWN_Hacker_Simple_C, UberGraphFrame_PAWN_Hacker_Simple_C) == 0x000680, "Member 'APAWN_Hacker_Simple_C::UberGraphFrame_PAWN_Hacker_Simple_C' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Breathing) == 0x000688, "Member 'APAWN_Hacker_Simple_C::Breathing' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MouthAudio) == 0x000690, "Member 'APAWN_Hacker_Simple_C::MouthAudio' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, COMP_HackerInventory) == 0x000698, "Member 'APAWN_Hacker_Simple_C::COMP_HackerInventory' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, HeadRangedCollision) == 0x0006A0, "Member 'APAWN_Hacker_Simple_C::HeadRangedCollision' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, EnvironmentFX) == 0x0006A8, "Member 'APAWN_Hacker_Simple_C::EnvironmentFX' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, COMP_VoxelCullableNavAgent) == 0x0006B0, "Member 'APAWN_Hacker_Simple_C::COMP_VoxelCullableNavAgent' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, AnimCameraStart) == 0x0006B8, "Member 'APAWN_Hacker_Simple_C::AnimCameraStart' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, AnimCameraPosition) == 0x0006C0, "Member 'APAWN_Hacker_Simple_C::AnimCameraPosition' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, AnimHeadPosition) == 0x0006C8, "Member 'APAWN_Hacker_Simple_C::AnimHeadPosition' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, WeaponMesh) == 0x0006D0, "Member 'APAWN_Hacker_Simple_C::WeaponMesh' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, ArmsMesh) == 0x0006D8, "Member 'APAWN_Hacker_Simple_C::ArmsMesh' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, LookPivot) == 0x0006E0, "Member 'APAWN_Hacker_Simple_C::LookPivot' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, EffectsPivot) == 0x0006E8, "Member 'APAWN_Hacker_Simple_C::EffectsPivot' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, RecoilPivot) == 0x0006F0, "Member 'APAWN_Hacker_Simple_C::RecoilPivot' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, PlayerCamera) == 0x0006F8, "Member 'APAWN_Hacker_Simple_C::PlayerCamera' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, COMP_VoxelCuller) == 0x000700, "Member 'APAWN_Hacker_Simple_C::COMP_VoxelCuller' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, COMP_PlayerCameraEffects) == 0x000708, "Member 'APAWN_Hacker_Simple_C::COMP_PlayerCameraEffects' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, COMP_MoveControlManager) == 0x000710, "Member 'APAWN_Hacker_Simple_C::COMP_MoveControlManager' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, BankPivot) == 0x000718, "Member 'APAWN_Hacker_Simple_C::BankPivot' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, BobOffset) == 0x000720, "Member 'APAWN_Hacker_Simple_C::BobOffset' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, LeanOffset) == 0x000728, "Member 'APAWN_Hacker_Simple_C::LeanOffset' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, LeanPivot) == 0x000730, "Member 'APAWN_Hacker_Simple_C::LeanPivot' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, COMP_Scanner) == 0x000738, "Member 'APAWN_Hacker_Simple_C::COMP_Scanner' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, SensaroundTimeline_OpacityValue_07BE0984496D46460014C994C478D474) == 0x000740, "Member 'APAWN_Hacker_Simple_C::SensaroundTimeline_OpacityValue_07BE0984496D46460014C994C478D474' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, SensaroundTimeline__Direction_07BE0984496D46460014C994C478D474) == 0x000744, "Member 'APAWN_Hacker_Simple_C::SensaroundTimeline__Direction_07BE0984496D46460014C994C478D474' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, SensaroundTimeline) == 0x000748, "Member 'APAWN_Hacker_Simple_C::SensaroundTimeline' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_13_NewTrack_0_3E12CFD547E84720973BFF9F51540152) == 0x000750, "Member 'APAWN_Hacker_Simple_C::Timeline_13_NewTrack_0_3E12CFD547E84720973BFF9F51540152' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_13__Direction_3E12CFD547E84720973BFF9F51540152) == 0x000754, "Member 'APAWN_Hacker_Simple_C::Timeline_13__Direction_3E12CFD547E84720973BFF9F51540152' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_13) == 0x000758, "Member 'APAWN_Hacker_Simple_C::Timeline_13' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_12_NewTrack_0_0BBCFEFE4B59637D0DBB25AB4F4E81C9) == 0x000760, "Member 'APAWN_Hacker_Simple_C::Timeline_12_NewTrack_0_0BBCFEFE4B59637D0DBB25AB4F4E81C9' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_12__Direction_0BBCFEFE4B59637D0DBB25AB4F4E81C9) == 0x000764, "Member 'APAWN_Hacker_Simple_C::Timeline_12__Direction_0BBCFEFE4B59637D0DBB25AB4F4E81C9' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_12) == 0x000768, "Member 'APAWN_Hacker_Simple_C::Timeline_12' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_11_NewTrack_0_E66E344A4D0506561FC489B4D75114D0) == 0x000770, "Member 'APAWN_Hacker_Simple_C::Timeline_11_NewTrack_0_E66E344A4D0506561FC489B4D75114D0' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_11__Direction_E66E344A4D0506561FC489B4D75114D0) == 0x000774, "Member 'APAWN_Hacker_Simple_C::Timeline_11__Direction_E66E344A4D0506561FC489B4D75114D0' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_11) == 0x000778, "Member 'APAWN_Hacker_Simple_C::Timeline_11' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_10_NewTrack_0_D9A073704A9F17D92928BBB9726C5540) == 0x000780, "Member 'APAWN_Hacker_Simple_C::Timeline_10_NewTrack_0_D9A073704A9F17D92928BBB9726C5540' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_10__Direction_D9A073704A9F17D92928BBB9726C5540) == 0x000784, "Member 'APAWN_Hacker_Simple_C::Timeline_10__Direction_D9A073704A9F17D92928BBB9726C5540' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_10) == 0x000788, "Member 'APAWN_Hacker_Simple_C::Timeline_10' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_9_NewTrack_0_A89065FD49500C5AE565ECA555E4EBC7) == 0x000790, "Member 'APAWN_Hacker_Simple_C::Timeline_9_NewTrack_0_A89065FD49500C5AE565ECA555E4EBC7' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_9__Direction_A89065FD49500C5AE565ECA555E4EBC7) == 0x000794, "Member 'APAWN_Hacker_Simple_C::Timeline_9__Direction_A89065FD49500C5AE565ECA555E4EBC7' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_9) == 0x000798, "Member 'APAWN_Hacker_Simple_C::Timeline_9' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_8_NewTrack_0_4454CA0646ADF00A663035BD35E5C30C) == 0x0007A0, "Member 'APAWN_Hacker_Simple_C::Timeline_8_NewTrack_0_4454CA0646ADF00A663035BD35E5C30C' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_8__Direction_4454CA0646ADF00A663035BD35E5C30C) == 0x0007A4, "Member 'APAWN_Hacker_Simple_C::Timeline_8__Direction_4454CA0646ADF00A663035BD35E5C30C' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_8) == 0x0007A8, "Member 'APAWN_Hacker_Simple_C::Timeline_8' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_7_NewTrack_0_D0B7891143F740FE1D9ECD88ED21E0FF) == 0x0007B0, "Member 'APAWN_Hacker_Simple_C::Timeline_7_NewTrack_0_D0B7891143F740FE1D9ECD88ED21E0FF' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_7__Direction_D0B7891143F740FE1D9ECD88ED21E0FF) == 0x0007B4, "Member 'APAWN_Hacker_Simple_C::Timeline_7__Direction_D0B7891143F740FE1D9ECD88ED21E0FF' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_7) == 0x0007B8, "Member 'APAWN_Hacker_Simple_C::Timeline_7' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_0_NewTrack_0_F87153A4472BED1B6884D39C3C56EA77) == 0x0007C0, "Member 'APAWN_Hacker_Simple_C::Timeline_0_NewTrack_0_F87153A4472BED1B6884D39C3C56EA77' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_0__Direction_F87153A4472BED1B6884D39C3C56EA77) == 0x0007C4, "Member 'APAWN_Hacker_Simple_C::Timeline_0__Direction_F87153A4472BED1B6884D39C3C56EA77' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_0) == 0x0007C8, "Member 'APAWN_Hacker_Simple_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_6_NewTrack_0_586BE42448B71547967C179F9959580E) == 0x0007D0, "Member 'APAWN_Hacker_Simple_C::Timeline_6_NewTrack_0_586BE42448B71547967C179F9959580E' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_6__Direction_586BE42448B71547967C179F9959580E) == 0x0007D4, "Member 'APAWN_Hacker_Simple_C::Timeline_6__Direction_586BE42448B71547967C179F9959580E' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_6) == 0x0007D8, "Member 'APAWN_Hacker_Simple_C::Timeline_6' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_5_NewTrack_0_D0D9DF4347C200C69987958E4E18831B) == 0x0007E0, "Member 'APAWN_Hacker_Simple_C::Timeline_5_NewTrack_0_D0D9DF4347C200C69987958E4E18831B' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_5__Direction_D0D9DF4347C200C69987958E4E18831B) == 0x0007E4, "Member 'APAWN_Hacker_Simple_C::Timeline_5__Direction_D0D9DF4347C200C69987958E4E18831B' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_5) == 0x0007E8, "Member 'APAWN_Hacker_Simple_C::Timeline_5' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_4_NewTrack_0_84F32218415EE577678B05B212CBD9DD) == 0x0007F0, "Member 'APAWN_Hacker_Simple_C::Timeline_4_NewTrack_0_84F32218415EE577678B05B212CBD9DD' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_4__Direction_84F32218415EE577678B05B212CBD9DD) == 0x0007F4, "Member 'APAWN_Hacker_Simple_C::Timeline_4__Direction_84F32218415EE577678B05B212CBD9DD' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_4) == 0x0007F8, "Member 'APAWN_Hacker_Simple_C::Timeline_4' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_3_NewTrack_0_45A9575740992A750E60D09D8A4BCD81) == 0x000800, "Member 'APAWN_Hacker_Simple_C::Timeline_3_NewTrack_0_45A9575740992A750E60D09D8A4BCD81' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_3__Direction_45A9575740992A750E60D09D8A4BCD81) == 0x000804, "Member 'APAWN_Hacker_Simple_C::Timeline_3__Direction_45A9575740992A750E60D09D8A4BCD81' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_3) == 0x000808, "Member 'APAWN_Hacker_Simple_C::Timeline_3' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_1_NewTrack_0_B8FB9C4644E36FA975184BB299A2787D) == 0x000810, "Member 'APAWN_Hacker_Simple_C::Timeline_1_NewTrack_0_B8FB9C4644E36FA975184BB299A2787D' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_1__Direction_B8FB9C4644E36FA975184BB299A2787D) == 0x000814, "Member 'APAWN_Hacker_Simple_C::Timeline_1__Direction_B8FB9C4644E36FA975184BB299A2787D' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Timeline_1) == 0x000818, "Member 'APAWN_Hacker_Simple_C::Timeline_1' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Psychosis_Enable_Timeline_Trippy_Effect_6F4178564EEC0E01EFF5138088FCA53D) == 0x000820, "Member 'APAWN_Hacker_Simple_C::Psychosis_Enable_Timeline_Trippy_Effect_6F4178564EEC0E01EFF5138088FCA53D' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Psychosis_Enable_Timeline_Blood_Screen_6F4178564EEC0E01EFF5138088FCA53D) == 0x000824, "Member 'APAWN_Hacker_Simple_C::Psychosis_Enable_Timeline_Blood_Screen_6F4178564EEC0E01EFF5138088FCA53D' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Psychosis_Enable_Timeline_Grain_Intensity_6F4178564EEC0E01EFF5138088FCA53D) == 0x000828, "Member 'APAWN_Hacker_Simple_C::Psychosis_Enable_Timeline_Grain_Intensity_6F4178564EEC0E01EFF5138088FCA53D' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Psychosis_Enable_Timeline_ChromaticAbberation_6F4178564EEC0E01EFF5138088FCA53D) == 0x00082C, "Member 'APAWN_Hacker_Simple_C::Psychosis_Enable_Timeline_ChromaticAbberation_6F4178564EEC0E01EFF5138088FCA53D' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Psychosis_Enable_Timeline_BloodVessels_6F4178564EEC0E01EFF5138088FCA53D) == 0x000830, "Member 'APAWN_Hacker_Simple_C::Psychosis_Enable_Timeline_BloodVessels_6F4178564EEC0E01EFF5138088FCA53D' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Psychosis_Enable_Timeline_Vignette_6F4178564EEC0E01EFF5138088FCA53D) == 0x000834, "Member 'APAWN_Hacker_Simple_C::Psychosis_Enable_Timeline_Vignette_6F4178564EEC0E01EFF5138088FCA53D' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Psychosis_Enable_Timeline__Direction_6F4178564EEC0E01EFF5138088FCA53D) == 0x000838, "Member 'APAWN_Hacker_Simple_C::Psychosis_Enable_Timeline__Direction_6F4178564EEC0E01EFF5138088FCA53D' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Psychosis_Enable_Timeline) == 0x000840, "Member 'APAWN_Hacker_Simple_C::Psychosis_Enable_Timeline' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Berserk_PP_Disable_Timeline_Effect_Fade_763D7365490C280AD99684B156CDC422) == 0x000848, "Member 'APAWN_Hacker_Simple_C::Berserk_PP_Disable_Timeline_Effect_Fade_763D7365490C280AD99684B156CDC422' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Berserk_PP_Disable_Timeline__Direction_763D7365490C280AD99684B156CDC422) == 0x00084C, "Member 'APAWN_Hacker_Simple_C::Berserk_PP_Disable_Timeline__Direction_763D7365490C280AD99684B156CDC422' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Berserk_PP_Disable_Timeline) == 0x000850, "Member 'APAWN_Hacker_Simple_C::Berserk_PP_Disable_Timeline' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsTryingToInteract) == 0x000858, "Member 'APAWN_Hacker_Simple_C::IsTryingToInteract' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, TryReloadIfNoInteract) == 0x000859, "Member 'APAWN_Hacker_Simple_C::TryReloadIfNoInteract' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, CurrentChannelingHoldTime) == 0x00085C, "Member 'APAWN_Hacker_Simple_C::CurrentChannelingHoldTime' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MaxInteractDistance) == 0x000860, "Member 'APAWN_Hacker_Simple_C::MaxInteractDistance' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, CapsuleCushionHeight) == 0x000864, "Member 'APAWN_Hacker_Simple_C::CapsuleCushionHeight' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, BioPoisonDamageAttribMod) == 0x000868, "Member 'APAWN_Hacker_Simple_C::BioPoisonDamageAttribMod' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IncreaseBioPoisonLevelAttribMod) == 0x000908, "Member 'APAWN_Hacker_Simple_C::IncreaseBioPoisonLevelAttribMod' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DecreaseBioPoisonLevelAttribMod) == 0x0009A8, "Member 'APAWN_Hacker_Simple_C::DecreaseBioPoisonLevelAttribMod' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, StaminaRegenAttribMod) == 0x000A48, "Member 'APAWN_Hacker_Simple_C::StaminaRegenAttribMod' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, SpreadCorrectionMod) == 0x000AE8, "Member 'APAWN_Hacker_Simple_C::SpreadCorrectionMod' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, CameraManager) == 0x000B88, "Member 'APAWN_Hacker_Simple_C::CameraManager' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, PlayerHUDWidget) == 0x000B90, "Member 'APAWN_Hacker_Simple_C::PlayerHUDWidget' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, OutOfRangeMessage) == 0x000B98, "Member 'APAWN_Hacker_Simple_C::OutOfRangeMessage' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, ChannelingInteractableName) == 0x000BB0, "Member 'APAWN_Hacker_Simple_C::ChannelingInteractableName' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, ChannelingPrimComponentName) == 0x000BB8, "Member 'APAWN_Hacker_Simple_C::ChannelingPrimComponentName' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, ChannelingInteractable) == 0x000BC0, "Member 'APAWN_Hacker_Simple_C::ChannelingInteractable' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, ChannelingPrimitiveComponent) == 0x000BC8, "Member 'APAWN_Hacker_Simple_C::ChannelingPrimitiveComponent' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, TutorialsEnabledState) == 0x000BD0, "Member 'APAWN_Hacker_Simple_C::TutorialsEnabledState' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, TutorialsToDisplay) == 0x000BD8, "Member 'APAWN_Hacker_Simple_C::TutorialsToDisplay' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, InitialFMinusStop) == 0x000BE8, "Member 'APAWN_Hacker_Simple_C::InitialFMinusStop' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, InitialFocalDistance) == 0x000BEC, "Member 'APAWN_Hacker_Simple_C::InitialFocalDistance' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, TutorialPeriodicTimerHandle) == 0x000BF0, "Member 'APAWN_Hacker_Simple_C::TutorialPeriodicTimerHandle' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, ScreenEffectsMaterial) == 0x000BF8, "Member 'APAWN_Hacker_Simple_C::ScreenEffectsMaterial' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, BiohazardMaintainAudioComponent) == 0x000C00, "Member 'APAWN_Hacker_Simple_C::BiohazardMaintainAudioComponent' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, LeanKeyDownCount) == 0x000C08, "Member 'APAWN_Hacker_Simple_C::LeanKeyDownCount' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MoveKeyDownCount) == 0x000C0C, "Member 'APAWN_Hacker_Simple_C::MoveKeyDownCount' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, KeyboardMoveX) == 0x000C10, "Member 'APAWN_Hacker_Simple_C::KeyboardMoveX' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, KeyboardMoveY) == 0x000C14, "Member 'APAWN_Hacker_Simple_C::KeyboardMoveY' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, GamepadMoveX) == 0x000C18, "Member 'APAWN_Hacker_Simple_C::GamepadMoveX' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, GamepadMoveY) == 0x000C1C, "Member 'APAWN_Hacker_Simple_C::GamepadMoveY' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, GamepadPitch) == 0x000C20, "Member 'APAWN_Hacker_Simple_C::GamepadPitch' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, GamepadYaw) == 0x000C24, "Member 'APAWN_Hacker_Simple_C::GamepadYaw' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MouseYaw) == 0x000C28, "Member 'APAWN_Hacker_Simple_C::MouseYaw' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MousePitch) == 0x000C2C, "Member 'APAWN_Hacker_Simple_C::MousePitch' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, GamepadCursorMoveTimestamp) == 0x000C30, "Member 'APAWN_Hacker_Simple_C::GamepadCursorMoveTimestamp' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsTryingToLean) == 0x000C34, "Member 'APAWN_Hacker_Simple_C::IsTryingToLean' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, LastRecoilTimestamp) == 0x000C38, "Member 'APAWN_Hacker_Simple_C::LastRecoilTimestamp' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, RecoilRecenterDelay) == 0x000C3C, "Member 'APAWN_Hacker_Simple_C::RecoilRecenterDelay' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, CurrentWeaponOffset) == 0x000C40, "Member 'APAWN_Hacker_Simple_C::CurrentWeaponOffset' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, CurrentKickbackRatio) == 0x000C4C, "Member 'APAWN_Hacker_Simple_C::CurrentKickbackRatio' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, RecentInteractable) == 0x000C50, "Member 'APAWN_Hacker_Simple_C::RecentInteractable' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, RecentInteractPrimitive) == 0x000C58, "Member 'APAWN_Hacker_Simple_C::RecentInteractPrimitive' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DetoxTimerHandle) == 0x000C60, "Member 'APAWN_Hacker_Simple_C::DetoxTimerHandle' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, LastViewportSize) == 0x000C68, "Member 'APAWN_Hacker_Simple_C::LastViewportSize' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, LastHorizontalFOV) == 0x000C70, "Member 'APAWN_Hacker_Simple_C::LastHorizontalFOV' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MI_Medipatch_PP) == 0x000C78, "Member 'APAWN_Hacker_Simple_C::MI_Medipatch_PP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, ChromaticAbberationMax) == 0x000C80, "Member 'APAWN_Hacker_Simple_C::ChromaticAbberationMax' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MI_Berserk_Side_Effect_PP) == 0x000C88, "Member 'APAWN_Hacker_Simple_C::MI_Berserk_Side_Effect_PP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Beserk_Patch_Apply_PP) == 0x000C90, "Member 'APAWN_Hacker_Simple_C::Beserk_Patch_Apply_PP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Psychosis_Side_Effect_PP) == 0x000C98, "Member 'APAWN_Hacker_Simple_C::Psychosis_Side_Effect_PP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, PsychosisSpritesNiagara) == 0x000CA0, "Member 'APAWN_Hacker_Simple_C::PsychosisSpritesNiagara' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, Cyberspace_Entry_PP) == 0x000CA8, "Member 'APAWN_Hacker_Simple_C::Cyberspace_Entry_PP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, LensDistortionPP) == 0x000CB0, "Member 'APAWN_Hacker_Simple_C::LensDistortionPP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, ThermalDamageAttribCategory) == 0x000CB8, "Member 'APAWN_Hacker_Simple_C::ThermalDamageAttribCategory' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DermalPatchAttribCategoryMap) == 0x000CC0, "Member 'APAWN_Hacker_Simple_C::DermalPatchAttribCategoryMap' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, BioPoisonHazardTypes) == 0x000D10, "Member 'APAWN_Hacker_Simple_C::BioPoisonHazardTypes' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, QueuedRespawnLevelName) == 0x000D20, "Member 'APAWN_Hacker_Simple_C::QueuedRespawnLevelName' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DefaultMeshTransform) == 0x000D30, "Member 'APAWN_Hacker_Simple_C::DefaultMeshTransform' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsHoldingUp) == 0x000D60, "Member 'APAWN_Hacker_Simple_C::IsHoldingUp' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsHoldingDown) == 0x000D61, "Member 'APAWN_Hacker_Simple_C::IsHoldingDown' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsHoldingLeft) == 0x000D62, "Member 'APAWN_Hacker_Simple_C::IsHoldingLeft' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsHoldingRight) == 0x000D63, "Member 'APAWN_Hacker_Simple_C::IsHoldingRight' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsHoldingAccept) == 0x000D64, "Member 'APAWN_Hacker_Simple_C::IsHoldingAccept' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsHoldingBack) == 0x000D65, "Member 'APAWN_Hacker_Simple_C::IsHoldingBack' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsHoldingAlt1) == 0x000D66, "Member 'APAWN_Hacker_Simple_C::IsHoldingAlt1' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsHoldingAlt2) == 0x000D67, "Member 'APAWN_Hacker_Simple_C::IsHoldingAlt2' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsHoldingTabLeft) == 0x000D68, "Member 'APAWN_Hacker_Simple_C::IsHoldingTabLeft' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsHoldingTabRight) == 0x000D69, "Member 'APAWN_Hacker_Simple_C::IsHoldingTabRight' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MI_EnhanceVision_PP) == 0x000D70, "Member 'APAWN_Hacker_Simple_C::MI_EnhanceVision_PP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MI_Staminup_PP) == 0x000D78, "Member 'APAWN_Hacker_Simple_C::MI_Staminup_PP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MI_Reflex_PP) == 0x000D80, "Member 'APAWN_Hacker_Simple_C::MI_Reflex_PP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MI_Detox_PP) == 0x000D88, "Member 'APAWN_Hacker_Simple_C::MI_Detox_PP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MI_NightVision_PP) == 0x000D90, "Member 'APAWN_Hacker_Simple_C::MI_NightVision_PP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, OnCyberspaceTransitionStarted) == 0x000D98, "Member 'APAWN_Hacker_Simple_C::OnCyberspaceTransitionStarted' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, FullScreenOpacity) == 0x000DA8, "Member 'APAWN_Hacker_Simple_C::FullScreenOpacity' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MI_EnergyShield_PP) == 0x000DB0, "Member 'APAWN_Hacker_Simple_C::MI_EnergyShield_PP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MISensaroundPP) == 0x000DB8, "Member 'APAWN_Hacker_Simple_C::MISensaroundPP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, PlayerHUDClass) == 0x000DC0, "Member 'APAWN_Hacker_Simple_C::PlayerHUDClass' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, ThreateningActors) == 0x000DC8, "Member 'APAWN_Hacker_Simple_C::ThreateningActors' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, MIRadDamagePP) == 0x000DD8, "Member 'APAWN_Hacker_Simple_C::MIRadDamagePP' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DefaultMusicGameplayState) == 0x000DE0, "Member 'APAWN_Hacker_Simple_C::DefaultMusicGameplayState' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, GameProgressToThreatScale) == 0x000DE8, "Member 'APAWN_Hacker_Simple_C::GameProgressToThreatScale' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, AttribCategoryToDermalPatchItemMap) == 0x000DF0, "Member 'APAWN_Hacker_Simple_C::AttribCategoryToDermalPatchItemMap' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsHoldingAlt3) == 0x000E40, "Member 'APAWN_Hacker_Simple_C::IsHoldingAlt3' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsHoldingAlt4) == 0x000E41, "Member 'APAWN_Hacker_Simple_C::IsHoldingAlt4' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, IsDebugConditionMet) == 0x000E42, "Member 'APAWN_Hacker_Simple_C::IsDebugConditionMet' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DebugTabHeld) == 0x000E43, "Member 'APAWN_Hacker_Simple_C::DebugTabHeld' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DebugCtrlHeld) == 0x000E44, "Member 'APAWN_Hacker_Simple_C::DebugCtrlHeld' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DebugGamepadLeftShoulderHeld) == 0x000E45, "Member 'APAWN_Hacker_Simple_C::DebugGamepadLeftShoulderHeld' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DebugGamepadRightShoulderHeld) == 0x000E46, "Member 'APAWN_Hacker_Simple_C::DebugGamepadRightShoulderHeld' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DebugGamepadLeftTriggerHeld) == 0x000E47, "Member 'APAWN_Hacker_Simple_C::DebugGamepadLeftTriggerHeld' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DebugGamepadLeftSpecialHeld) == 0x000E48, "Member 'APAWN_Hacker_Simple_C::DebugGamepadLeftSpecialHeld' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DebugGamepadRightThumbHeld) == 0x000E49, "Member 'APAWN_Hacker_Simple_C::DebugGamepadRightThumbHeld' has a wrong offset!");
static_assert(offsetof(APAWN_Hacker_Simple_C, DebugGamepadRightTriggerHeld) == 0x000E4A, "Member 'APAWN_Hacker_Simple_C::DebugGamepadRightTriggerHeld' has a wrong offset!");

}


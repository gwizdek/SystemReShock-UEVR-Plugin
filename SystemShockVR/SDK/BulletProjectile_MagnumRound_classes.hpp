#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BulletProjectile_MagnumRound

#include "Basic.hpp"

#include "BulletProjectile_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BulletProjectile_MagnumRound.BulletProjectile_MagnumRound_C
// 0x0018 (0x0338 - 0x0320)
class ABulletProjectile_MagnumRound_C final : public ABulletProjectile_Base_C
{
public:
	class AActor*                                 TargetActor;                                       // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetDamageBonus;                                 // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TargetArmorPenetrationBonus;                       // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageDropoffScale;                                // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AcquireTarget(class AActor* Actor, int32 BonusDamage, int32 BonusArmorPenetration);
	void TryBulletCollision(const struct FHitResult& Hit, float FrameHitDeltaTime, bool* Result);
	void TryApplyTargetDamageBonus(class AActor* HitActor);
	void SpawnTracerEffects(class UNiagaraSystem* TracerSystem);
	void TryUpdateTracerColor();
	void GetBulletDamageDropoffRate(float* Result);
	void SetDamageDropoffScale(float Scale);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BulletProjectile_MagnumRound_C">();
	}
	static class ABulletProjectile_MagnumRound_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABulletProjectile_MagnumRound_C>();
	}
};
static_assert(alignof(ABulletProjectile_MagnumRound_C) == 0x000008, "Wrong alignment on ABulletProjectile_MagnumRound_C");
static_assert(sizeof(ABulletProjectile_MagnumRound_C) == 0x000338, "Wrong size on ABulletProjectile_MagnumRound_C");
static_assert(offsetof(ABulletProjectile_MagnumRound_C, TargetActor) == 0x000320, "Member 'ABulletProjectile_MagnumRound_C::TargetActor' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_MagnumRound_C, TargetDamageBonus) == 0x000328, "Member 'ABulletProjectile_MagnumRound_C::TargetDamageBonus' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_MagnumRound_C, TargetArmorPenetrationBonus) == 0x00032C, "Member 'ABulletProjectile_MagnumRound_C::TargetArmorPenetrationBonus' has a wrong offset!");
static_assert(offsetof(ABulletProjectile_MagnumRound_C, DamageDropoffScale) == 0x000330, "Member 'ABulletProjectile_MagnumRound_C::DamageDropoffScale' has a wrong offset!");

}


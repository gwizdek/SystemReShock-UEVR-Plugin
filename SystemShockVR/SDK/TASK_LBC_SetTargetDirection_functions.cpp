#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_LBC_SetTargetDirection

#include "Basic.hpp"

#include "TASK_LBC_SetTargetDirection_classes.hpp"
#include "TASK_LBC_SetTargetDirection_parameters.hpp"


namespace SDK
{

// Function TASK_LBC_SetTargetDirection.TASK_LBC_SetTargetDirection_C.ExecuteUbergraph_TASK_LBC_SetTargetDirection
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_LBC_SetTargetDirection_C::ExecuteUbergraph_TASK_LBC_SetTargetDirection(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_LBC_SetTargetDirection_C", "ExecuteUbergraph_TASK_LBC_SetTargetDirection");

	Params::TASK_LBC_SetTargetDirection_C_ExecuteUbergraph_TASK_LBC_SetTargetDirection Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_LBC_SetTargetDirection.TASK_LBC_SetTargetDirection_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_LBC_SetTargetDirection_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_LBC_SetTargetDirection_C", "ReceiveExecuteAI");

	Params::TASK_LBC_SetTargetDirection_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SKILL_MeleeDamage_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.EVENT_ColliderBeginOverlap
// 0x0150 (0x0150 - 0x0000)
struct SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap final
{
public:
	class AActor*                                 OverlapActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OverlapComponent;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitboxTag_0;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageScale;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          HitboxComponent;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribManagerComponent*                HitAttributeManager;                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    DamageMod;                                         // 0x0030(0x00A0)(Edit, BlueprintVisible)
	class APAWN_SystemShockCharacter_C*           OverlapCharacter;                                  // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PostApplyDamage_Result;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMeleeDamageValue_Result;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetKnockbackDirection_Direction;          // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_ImpactData_C*                      CallFunc_SpawnObject_ReturnValue;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody; // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue;   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap) == 0x000008, "Wrong alignment on SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap");
static_assert(sizeof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap) == 0x000150, "Wrong size on SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, OverlapActor) == 0x000000, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::OverlapActor' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, OverlapComponent) == 0x000008, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::OverlapComponent' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, HitboxTag_0) == 0x000010, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::HitboxTag_0' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, DamageScale) == 0x000018, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::DamageScale' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, HitboxComponent) == 0x000020, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::HitboxComponent' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, HitAttributeManager) == 0x000028, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::HitAttributeManager' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, DamageMod) == 0x000030, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::DamageMod' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, OverlapCharacter) == 0x0000D0, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::OverlapCharacter' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_GetSkillPawn_SkillPawn) == 0x0000D8, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_PostApplyDamage_Result) == 0x0000E0, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_PostApplyDamage_Result' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_ApplyMod_ReturnValue) == 0x0000E8, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_GetMeleeDamageValue_Result) == 0x0000F0, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_GetMeleeDamageValue_Result' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_GetKnockbackDirection_Direction) == 0x0000F4, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_GetKnockbackDirection_Direction' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000100, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000108, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000114, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000120, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_SpawnObject_ReturnValue) == 0x000130, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_GetClosestPointOnCollision_OutPointOnBody) == 0x000138, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_GetClosestPointOnCollision_OutPointOnBody' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_GetClosestPointOnCollision_ReturnValue) == 0x000144, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_GetClosestPointOnCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_IsPlayerControlled_ReturnValue) == 0x000148, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000149, "Member 'SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.InitializeSkill
// 0x0028 (0x0028 - 0x0000)
struct SKILL_MeleeDamage_Base_C_InitializeSkill final
{
public:
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlapActor, class UPrimitiveComponent* OverlapComponent, class FName HitboxTag, float DamageScale, class UBoxComponent* HitboxComponent)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UCOMP_MeleeDamageComponent_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_MeleeDamage_Base_C_InitializeSkill) == 0x000008, "Wrong alignment on SKILL_MeleeDamage_Base_C_InitializeSkill");
static_assert(sizeof(SKILL_MeleeDamage_Base_C_InitializeSkill) == 0x000028, "Wrong size on SKILL_MeleeDamage_Base_C_InitializeSkill");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_InitializeSkill, CallFunc_GetSkillPawn_SkillPawn) == 0x000000, "Member 'SKILL_MeleeDamage_Base_C_InitializeSkill::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_InitializeSkill, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'SKILL_MeleeDamage_Base_C_InitializeSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_InitializeSkill, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'SKILL_MeleeDamage_Base_C_InitializeSkill::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_InitializeSkill, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'SKILL_MeleeDamage_Base_C_InitializeSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.TryUseSkill
// 0x0038 (0x0038 - 0x0000)
struct SKILL_MeleeDamage_Base_C_TryUseSkill final
{
public:
	class UCharacterAction_C*                     Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlapActor, class UPrimitiveComponent* OverlapComponent, class FName HitboxTag, float DamageScale, class UBoxComponent* HitboxComponent)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UCOMP_MeleeDamageComponent_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_TryUseSkill_Result;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_MeleeDamage_Base_C_TryUseSkill) == 0x000008, "Wrong alignment on SKILL_MeleeDamage_Base_C_TryUseSkill");
static_assert(sizeof(SKILL_MeleeDamage_Base_C_TryUseSkill) == 0x000038, "Wrong size on SKILL_MeleeDamage_Base_C_TryUseSkill");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_TryUseSkill, Result) == 0x000000, "Member 'SKILL_MeleeDamage_Base_C_TryUseSkill::Result' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_TryUseSkill, CallFunc_GetSkillPawn_SkillPawn) == 0x000008, "Member 'SKILL_MeleeDamage_Base_C_TryUseSkill::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_TryUseSkill, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'SKILL_MeleeDamage_Base_C_TryUseSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_TryUseSkill, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'SKILL_MeleeDamage_Base_C_TryUseSkill::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_TryUseSkill, CallFunc_TryUseSkill_Result) == 0x000028, "Member 'SKILL_MeleeDamage_Base_C_TryUseSkill::CallFunc_TryUseSkill_Result' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_TryUseSkill, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'SKILL_MeleeDamage_Base_C_TryUseSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.GetKnockbackDirection
// 0x0090 (0x0090 - 0x0000)
struct SKILL_MeleeDamage_Base_C_GetKnockbackDirection final
{
public:
	class UPrimitiveComponent*                    OverlapComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitboxComponent;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                KnockbackDirection;                                // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_MeleeDamageComponent_C*           MeleeDamageComponent;                              // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqualExactly_VectorVector_ReturnValue; // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentHitboxDirection_Vector;         // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_MeleeDamageComponent_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection) == 0x000008, "Wrong alignment on SKILL_MeleeDamage_Base_C_GetKnockbackDirection");
static_assert(sizeof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection) == 0x000090, "Wrong size on SKILL_MeleeDamage_Base_C_GetKnockbackDirection");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, OverlapComponent) == 0x000000, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::OverlapComponent' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, HitboxComponent) == 0x000008, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::HitboxComponent' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, Direction) == 0x000010, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::Direction' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, KnockbackDirection) == 0x00001C, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::KnockbackDirection' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, MeleeDamageComponent) == 0x000028, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::MeleeDamageComponent' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, CallFunc_NotEqualExactly_VectorVector_ReturnValue) == 0x000031, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::CallFunc_NotEqualExactly_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, CallFunc_Normal_ReturnValue) == 0x000034, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, CallFunc_GetCurrentHitboxDirection_Vector) == 0x000040, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::CallFunc_GetCurrentHitboxDirection_Vector' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, CallFunc_GetSkillPawn_SkillPawn) == 0x000050, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000060, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x00006C, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetKnockbackDirection, CallFunc_Normal_ReturnValue_1) == 0x000084, "Member 'SKILL_MeleeDamage_Base_C_GetKnockbackDirection::CallFunc_Normal_ReturnValue_1' has a wrong offset!");

// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.CanUseSkill
// 0x00B8 (0x00B8 - 0x0000)
struct SKILL_MeleeDamage_Base_C_CanUseSkill final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetLocation;                                    // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SourceLocation;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetDetectedPawn_Pawn;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRoomAudibilityBetweenPoints_OutObstruction; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRoomAudibilityBetweenPoints_OutOcclusion; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetRoomAudibilityBetweenPoints_ReturnValue; // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn_1;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_EnemyTarget_C*                     CallFunc_GetTarget_Target_1;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetDetectedPawn_Pawn_1;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasUnobstructedPropagationPathBetweenPoints_ReturnValue; // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUseSkill_Result;                       // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_MeleeDamage_Base_C_CanUseSkill) == 0x000008, "Wrong alignment on SKILL_MeleeDamage_Base_C_CanUseSkill");
static_assert(sizeof(SKILL_MeleeDamage_Base_C_CanUseSkill) == 0x0000B8, "Wrong size on SKILL_MeleeDamage_Base_C_CanUseSkill");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, Result) == 0x000000, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::Result' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, TargetLocation) == 0x000004, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::TargetLocation' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, SourceLocation) == 0x000010, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::SourceLocation' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_GetSkillPawn_SkillPawn) == 0x000020, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_GetTarget_Target) == 0x000028, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_GetTarget_Target' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_GetDetectedPawn_Pawn) == 0x000050, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_GetDetectedPawn_Pawn' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_GetRoomAudibilityBetweenPoints_OutObstruction) == 0x00005C, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_GetRoomAudibilityBetweenPoints_OutObstruction' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_GetRoomAudibilityBetweenPoints_OutOcclusion) == 0x000060, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_GetRoomAudibilityBetweenPoints_OutOcclusion' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_GetRoomAudibilityBetweenPoints_ReturnValue) == 0x000064, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_GetRoomAudibilityBetweenPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_GetSkillPawn_SkillPawn_1) == 0x000068, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_GetSkillPawn_SkillPawn_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_GetGameInstance_ReturnValue_1) == 0x000070, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_GetTarget_Target_1) == 0x000078, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_GetTarget_Target_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000080, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_GetDetectedPawn_Pawn_1) == 0x000090, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_GetDetectedPawn_Pawn_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_HasUnobstructedPropagationPathBetweenPoints_ReturnValue) == 0x0000A4, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_HasUnobstructedPropagationPathBetweenPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A8, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_CanUseSkill, CallFunc_CanUseSkill_Result) == 0x0000B4, "Member 'SKILL_MeleeDamage_Base_C_CanUseSkill::CallFunc_CanUseSkill_Result' has a wrong offset!");

// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.GetMeleeDamageValue
// 0x0018 (0x0018 - 0x0000)
struct SKILL_MeleeDamage_Base_C_GetMeleeDamageValue final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetScaledEnemyDamage_DamageValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_MeleeDamage_Base_C_GetMeleeDamageValue) == 0x000008, "Wrong alignment on SKILL_MeleeDamage_Base_C_GetMeleeDamageValue");
static_assert(sizeof(SKILL_MeleeDamage_Base_C_GetMeleeDamageValue) == 0x000018, "Wrong size on SKILL_MeleeDamage_Base_C_GetMeleeDamageValue");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetMeleeDamageValue, Result) == 0x000000, "Member 'SKILL_MeleeDamage_Base_C_GetMeleeDamageValue::Result' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetMeleeDamageValue, CallFunc_GetSkillPawn_SkillPawn) == 0x000008, "Member 'SKILL_MeleeDamage_Base_C_GetMeleeDamageValue::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetMeleeDamageValue, CallFunc_GetScaledEnemyDamage_DamageValue) == 0x000010, "Member 'SKILL_MeleeDamage_Base_C_GetMeleeDamageValue::CallFunc_GetScaledEnemyDamage_DamageValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_GetMeleeDamageValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000014, "Member 'SKILL_MeleeDamage_Base_C_GetMeleeDamageValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.PostApplyDamage
// 0x0010 (0x0010 - 0x0000)
struct SKILL_MeleeDamage_Base_C_PostApplyDamage final
{
public:
	class UAttribManagerComponent*                HitAttributeManager;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_MeleeDamage_Base_C_PostApplyDamage) == 0x000008, "Wrong alignment on SKILL_MeleeDamage_Base_C_PostApplyDamage");
static_assert(sizeof(SKILL_MeleeDamage_Base_C_PostApplyDamage) == 0x000010, "Wrong size on SKILL_MeleeDamage_Base_C_PostApplyDamage");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_PostApplyDamage, HitAttributeManager) == 0x000000, "Member 'SKILL_MeleeDamage_Base_C_PostApplyDamage::HitAttributeManager' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_PostApplyDamage, Result) == 0x000008, "Member 'SKILL_MeleeDamage_Base_C_PostApplyDamage::Result' has a wrong offset!");

// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.ReceiveAnimationMessage
// 0x00B0 (0x00B0 - 0x0000)
struct SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         HitboxTags;                                        // 0x0018(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn_1;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_MeleeDamageComponent_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_MeleeDamageComponent_C*           CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0068(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartsWith_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue_1;             // 0x0098(0x0010)(ReferenceParm)
	bool                                          CallFunc_StartsWith_ReturnValue_1;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage");
static_assert(sizeof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage) == 0x0000B0, "Wrong size on SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, HitboxTags) == 0x000018, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::HitboxTags' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x000028, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_GetSkillPawn_SkillPawn) == 0x000030, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_GetSkillPawn_SkillPawn_1) == 0x000038, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_GetSkillPawn_SkillPawn_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000048, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_Array_Get_Item) == 0x000050, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_Conv_StringToName_ReturnValue) == 0x000060, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_ParseIntoArray_ReturnValue) == 0x000068, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000088, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_StartsWith_ReturnValue) == 0x000090, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_StartsWith_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_ParseIntoArray_ReturnValue_1) == 0x000098, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_ParseIntoArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage, CallFunc_StartsWith_ReturnValue_1) == 0x0000A8, "Member 'SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage::CallFunc_StartsWith_ReturnValue_1' has a wrong offset!");

// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.IsSkillActivated
// 0x0028 (0x0028 - 0x0000)
struct SKILL_MeleeDamage_Base_C_IsSkillActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_MeleeDamageComponent_C*           MeleeDamageComponent;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyHitboxOverlaps_Result;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_MeleeDamageComponent_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_MeleeDamage_Base_C_IsSkillActivated) == 0x000008, "Wrong alignment on SKILL_MeleeDamage_Base_C_IsSkillActivated");
static_assert(sizeof(SKILL_MeleeDamage_Base_C_IsSkillActivated) == 0x000028, "Wrong size on SKILL_MeleeDamage_Base_C_IsSkillActivated");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_IsSkillActivated, Result) == 0x000000, "Member 'SKILL_MeleeDamage_Base_C_IsSkillActivated::Result' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_IsSkillActivated, MeleeDamageComponent) == 0x000008, "Member 'SKILL_MeleeDamage_Base_C_IsSkillActivated::MeleeDamageComponent' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_IsSkillActivated, CallFunc_HasAnyHitboxOverlaps_Result) == 0x000010, "Member 'SKILL_MeleeDamage_Base_C_IsSkillActivated::CallFunc_HasAnyHitboxOverlaps_Result' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_IsSkillActivated, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'SKILL_MeleeDamage_Base_C_IsSkillActivated::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_IsSkillActivated, CallFunc_GetSkillPawn_SkillPawn) == 0x000018, "Member 'SKILL_MeleeDamage_Base_C_IsSkillActivated::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_IsSkillActivated, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'SKILL_MeleeDamage_Base_C_IsSkillActivated::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.OnDeactivateSkill
// 0x0030 (0x0030 - 0x0000)
struct SKILL_MeleeDamage_Base_C_OnDeactivateSkill final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_MeleeDamageComponent_C*           MeleeDamageComponent;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* OverlapActor, class UPrimitiveComponent* OverlapComponent, class FName HitboxTag, float DamageScale, class UBoxComponent* HitboxComponent)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class APAWN_Enemy_C*                          CallFunc_GetSkillPawn_SkillPawn;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_MeleeDamageComponent_C*           CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_MeleeDamage_Base_C_OnDeactivateSkill) == 0x000008, "Wrong alignment on SKILL_MeleeDamage_Base_C_OnDeactivateSkill");
static_assert(sizeof(SKILL_MeleeDamage_Base_C_OnDeactivateSkill) == 0x000030, "Wrong size on SKILL_MeleeDamage_Base_C_OnDeactivateSkill");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_OnDeactivateSkill, Result) == 0x000000, "Member 'SKILL_MeleeDamage_Base_C_OnDeactivateSkill::Result' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_OnDeactivateSkill, MeleeDamageComponent) == 0x000008, "Member 'SKILL_MeleeDamage_Base_C_OnDeactivateSkill::MeleeDamageComponent' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_OnDeactivateSkill, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'SKILL_MeleeDamage_Base_C_OnDeactivateSkill::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_OnDeactivateSkill, CallFunc_GetSkillPawn_SkillPawn) == 0x000020, "Member 'SKILL_MeleeDamage_Base_C_OnDeactivateSkill::CallFunc_GetSkillPawn_SkillPawn' has a wrong offset!");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_OnDeactivateSkill, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'SKILL_MeleeDamage_Base_C_OnDeactivateSkill::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.OnHitboxEnabled
// 0x0008 (0x0008 - 0x0000)
struct SKILL_MeleeDamage_Base_C_OnHitboxEnabled final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SKILL_MeleeDamage_Base_C_OnHitboxEnabled) == 0x000004, "Wrong alignment on SKILL_MeleeDamage_Base_C_OnHitboxEnabled");
static_assert(sizeof(SKILL_MeleeDamage_Base_C_OnHitboxEnabled) == 0x000008, "Wrong size on SKILL_MeleeDamage_Base_C_OnHitboxEnabled");
static_assert(offsetof(SKILL_MeleeDamage_Base_C_OnHitboxEnabled, Tag) == 0x000000, "Member 'SKILL_MeleeDamage_Base_C_OnHitboxEnabled::Tag' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SaveRow

#include "Basic.hpp"

#include "ENUM_GameDifficulty_structs.hpp"
#include "SlateCore_structs.hpp"
#include "STRUCT_LevelInfo_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.ExecuteUbergraph_WIDGET_SaveRow
// 0x0300 (0x0300 - 0x0000)
struct WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DeleteSlot_Result;                        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0018(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0030(0x0018)()
	class FText                                   CallFunc_GetLevelDisplayName_DisplayName;          // 0x0048(0x0018)()
	struct FGeometry                              K2Node_ComponentBoundEvent_Geometry_1;             // 0x0060(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_ComponentBoundEvent_InputEvent_1;           // 0x0098(0x0070)()
	struct FGeometry                              K2Node_ComponentBoundEvent_Geometry;               // 0x0108(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_ComponentBoundEvent_InputEvent;             // 0x0140(0x0070)()
	ENUM_GameDifficulty                           CallFunc_GetDifficultyValuesFromProfile_Combat;    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           CallFunc_GetDifficultyValuesFromProfile_Mission;   // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           CallFunc_GetDifficultyValuesFromProfile_Puzzle;    // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           CallFunc_GetDifficultyValuesFromProfile_Cyber;     // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_AsTimeZoneDateTime_DateTime_ReturnValue;  // 0x01B8(0x0018)()
	int32                                         CallFunc_Round_ReturnValue;                        // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_TimeSecondsToStringHMS_ReturnValue;       // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01E8(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x0200(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x0218(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x0230(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0280(0x0018)()
	class UStreamingSaveGameProfile*              CallFunc_LoadGameProfile_ReturnValue;              // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_5;            // 0x02A0(0x0018)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x02B8(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow");
static_assert(sizeof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow) == 0x000300, "Wrong size on WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, EntryPoint) == 0x000000, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_DeleteSlot_Result) == 0x000012, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_DeleteSlot_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_MakeLiteralText_ReturnValue) == 0x000018, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000030, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_GetLevelDisplayName_DisplayName) == 0x000048, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_GetLevelDisplayName_DisplayName' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, K2Node_ComponentBoundEvent_Geometry_1) == 0x000060, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::K2Node_ComponentBoundEvent_Geometry_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, K2Node_ComponentBoundEvent_InputEvent_1) == 0x000098, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::K2Node_ComponentBoundEvent_InputEvent_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, K2Node_ComponentBoundEvent_Geometry) == 0x000108, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::K2Node_ComponentBoundEvent_Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, K2Node_ComponentBoundEvent_InputEvent) == 0x000140, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::K2Node_ComponentBoundEvent_InputEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_GetDifficultyValuesFromProfile_Combat) == 0x0001B0, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_GetDifficultyValuesFromProfile_Combat' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_GetDifficultyValuesFromProfile_Mission) == 0x0001B1, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_GetDifficultyValuesFromProfile_Mission' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_GetDifficultyValuesFromProfile_Puzzle) == 0x0001B2, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_GetDifficultyValuesFromProfile_Puzzle' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_GetDifficultyValuesFromProfile_Cyber) == 0x0001B3, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_GetDifficultyValuesFromProfile_Cyber' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_AsTimeZoneDateTime_DateTime_ReturnValue) == 0x0001B8, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_AsTimeZoneDateTime_DateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_Round_ReturnValue) == 0x0001D0, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_TimeSecondsToStringHMS_ReturnValue) == 0x0001D8, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_TimeSecondsToStringHMS_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_Conv_StringToText_ReturnValue) == 0x0001E8, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_MakeLiteralText_ReturnValue_2) == 0x000200, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_MakeLiteralText_ReturnValue_3) == 0x000218, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_MakeLiteralText_ReturnValue_4) == 0x000230, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_Conv_TextToString_ReturnValue) == 0x000248, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_Concat_StrStr_ReturnValue) == 0x000258, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, K2Node_SwitchString_CmpSuccess) == 0x000268, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_Replace_ReturnValue) == 0x000270, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000280, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_LoadGameProfile_ReturnValue) == 0x000298, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_LoadGameProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_MakeLiteralText_ReturnValue_5) == 0x0002A0, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_MakeLiteralText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, K2Node_Event_MyGeometry) == 0x0002B8, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, K2Node_Event_InDeltaTime) == 0x0002F0, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x0002F4, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_Add_FloatFloat_ReturnValue) == 0x0002F8, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0002FC, "Member 'WIDGET_SaveRow_C_ExecuteUbergraph_WIDGET_SaveRow::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_SaveRow_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SaveRow_C_Tick) == 0x000004, "Wrong alignment on WIDGET_SaveRow_C_Tick");
static_assert(sizeof(WIDGET_SaveRow_C_Tick) == 0x00003C, "Wrong size on WIDGET_SaveRow_C_Tick");
static_assert(offsetof(WIDGET_SaveRow_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_SaveRow_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_SaveRow_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Delete_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Delete_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InputEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Delete_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Delete_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");
static_assert(sizeof(WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Delete_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Delete_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature");
static_assert(offsetof(WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Delete_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature, Geometry) == 0x000000, "Member 'WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Delete_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature::Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Delete_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature, InputEvent) == 0x000038, "Member 'WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Delete_K2Node_ComponentBoundEvent_5_OnClicked__DelegateSignature::InputEvent' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Save_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Save_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InputEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Save_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Save_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");
static_assert(sizeof(WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Save_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Save_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature");
static_assert(offsetof(WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Save_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature, Geometry) == 0x000000, "Member 'WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Save_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature::Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Save_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature, InputEvent) == 0x000038, "Member 'WIDGET_SaveRow_C_BndEvt__WIDGET_SaveRow_WIDGET_ButtonLegend_Save_K2Node_ComponentBoundEvent_4_OnClicked__DelegateSignature::InputEvent' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.TriggerSaveLoad
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_SaveRow_C_TriggerSaveLoad final
{
public:
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SaveRow_C_TriggerSaveLoad) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_TriggerSaveLoad");
static_assert(sizeof(WIDGET_SaveRow_C_TriggerSaveLoad) == 0x000018, "Wrong size on WIDGET_SaveRow_C_TriggerSaveLoad");
static_assert(offsetof(WIDGET_SaveRow_C_TriggerSaveLoad, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000000, "Member 'WIDGET_SaveRow_C_TriggerSaveLoad::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_TriggerSaveLoad, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'WIDGET_SaveRow_C_TriggerSaveLoad::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_TriggerSaveLoad, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WIDGET_SaveRow_C_TriggerSaveLoad::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_TriggerSaveLoad, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WIDGET_SaveRow_C_TriggerSaveLoad::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.SaveToSlot
// 0x0068 (0x0068 - 0x0000)
struct WIDGET_SaveRow_C_SaveToSlot final
{
public:
	int32                                         UserIndex_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStreamingSaveGameSession*              GameSession;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TDelegate<void(const class FString& SaveName, int32 UserIndex, bool bSuccess)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_CanSaveGames_Result;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AsyncSaveGameWithEvent_ReturnValue;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStreamingSaveGameSession*              CallFunc_GetGameSession_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SaveRow_C_SaveToSlot) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_SaveToSlot");
static_assert(sizeof(WIDGET_SaveRow_C_SaveToSlot) == 0x000068, "Wrong size on WIDGET_SaveRow_C_SaveToSlot");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, UserIndex_0) == 0x000000, "Member 'WIDGET_SaveRow_C_SaveToSlot::UserIndex_0' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, GameSession) == 0x000008, "Member 'WIDGET_SaveRow_C_SaveToSlot::GameSession' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, HackerPawn) == 0x000010, "Member 'WIDGET_SaveRow_C_SaveToSlot::HackerPawn' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WIDGET_SaveRow_C_SaveToSlot::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, CallFunc_CanSaveGames_Result) == 0x000028, "Member 'WIDGET_SaveRow_C_SaveToSlot::CallFunc_CanSaveGames_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, CallFunc_AsyncSaveGameWithEvent_ReturnValue) == 0x000029, "Member 'WIDGET_SaveRow_C_SaveToSlot::CallFunc_AsyncSaveGameWithEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'WIDGET_SaveRow_C_SaveToSlot::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, K2Node_DynamicCast_AsGI_Single_Player) == 0x000038, "Member 'WIDGET_SaveRow_C_SaveToSlot::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'WIDGET_SaveRow_C_SaveToSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, CallFunc_GetGameSession_ReturnValue) == 0x000048, "Member 'WIDGET_SaveRow_C_SaveToSlot::CallFunc_GetGameSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, CallFunc_GetPlayerPawn_ReturnValue) == 0x000050, "Member 'WIDGET_SaveRow_C_SaveToSlot::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000058, "Member 'WIDGET_SaveRow_C_SaveToSlot::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SaveToSlot, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'WIDGET_SaveRow_C_SaveToSlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.LoadSlot
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_SaveRow_C_LoadSlot final
{
public:
	int32                                         UserIndex_0;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStreamingSaveGameSession*              GameSession;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SaveRow_C_LoadSlot) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_LoadSlot");
static_assert(sizeof(WIDGET_SaveRow_C_LoadSlot) == 0x000028, "Wrong size on WIDGET_SaveRow_C_LoadSlot");
static_assert(offsetof(WIDGET_SaveRow_C_LoadSlot, UserIndex_0) == 0x000000, "Member 'WIDGET_SaveRow_C_LoadSlot::UserIndex_0' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_LoadSlot, GameSession) == 0x000008, "Member 'WIDGET_SaveRow_C_LoadSlot::GameSession' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_LoadSlot, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'WIDGET_SaveRow_C_LoadSlot::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_LoadSlot, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'WIDGET_SaveRow_C_LoadSlot::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_LoadSlot, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WIDGET_SaveRow_C_LoadSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.DeleteSlot
// 0x0003 (0x0003 - 0x0000)
struct WIDGET_SaveRow_C_DeleteSlot final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DeleteSaveGameByName_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SaveRow_C_DeleteSlot) == 0x000001, "Wrong alignment on WIDGET_SaveRow_C_DeleteSlot");
static_assert(sizeof(WIDGET_SaveRow_C_DeleteSlot) == 0x000003, "Wrong size on WIDGET_SaveRow_C_DeleteSlot");
static_assert(offsetof(WIDGET_SaveRow_C_DeleteSlot, Result) == 0x000000, "Member 'WIDGET_SaveRow_C_DeleteSlot::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_DeleteSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WIDGET_SaveRow_C_DeleteSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_DeleteSlot, CallFunc_DeleteSaveGameByName_ReturnValue) == 0x000002, "Member 'WIDGET_SaveRow_C_DeleteSlot::CallFunc_DeleteSaveGameByName_ReturnValue' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.GetLevelDisplayName
// 0x0120 (0x0120 - 0x0000)
struct WIDGET_SaveRow_C_GetLevelDisplayName final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0018(0x0018)()
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LevelInfo                      CallFunc_GetLevelInfo_LevelInfo;                   // 0x0050(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetLevelInfo_Found;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SaveRow_C_GetLevelDisplayName) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_GetLevelDisplayName");
static_assert(sizeof(WIDGET_SaveRow_C_GetLevelDisplayName) == 0x000120, "Wrong size on WIDGET_SaveRow_C_GetLevelDisplayName");
static_assert(offsetof(WIDGET_SaveRow_C_GetLevelDisplayName, DisplayName) == 0x000000, "Member 'WIDGET_SaveRow_C_GetLevelDisplayName::DisplayName' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetLevelDisplayName, CallFunc_Conv_NameToText_ReturnValue) == 0x000018, "Member 'WIDGET_SaveRow_C_GetLevelDisplayName::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetLevelDisplayName, CallFunc_NotEqual_NameName_ReturnValue) == 0x000030, "Member 'WIDGET_SaveRow_C_GetLevelDisplayName::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetLevelDisplayName, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'WIDGET_SaveRow_C_GetLevelDisplayName::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetLevelDisplayName, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'WIDGET_SaveRow_C_GetLevelDisplayName::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetLevelDisplayName, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WIDGET_SaveRow_C_GetLevelDisplayName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetLevelDisplayName, CallFunc_GetLevelInfo_LevelInfo) == 0x000050, "Member 'WIDGET_SaveRow_C_GetLevelDisplayName::CallFunc_GetLevelInfo_LevelInfo' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetLevelDisplayName, CallFunc_GetLevelInfo_Found) == 0x000118, "Member 'WIDGET_SaveRow_C_GetLevelDisplayName::CallFunc_GetLevelInfo_Found' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.SetSelected
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_SaveRow_C_SetSelected final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SaveRow_C_SetSelected) == 0x000001, "Wrong alignment on WIDGET_SaveRow_C_SetSelected");
static_assert(sizeof(WIDGET_SaveRow_C_SetSelected) == 0x000002, "Wrong size on WIDGET_SaveRow_C_SetSelected");
static_assert(offsetof(WIDGET_SaveRow_C_SetSelected, Selected) == 0x000000, "Member 'WIDGET_SaveRow_C_SetSelected::Selected' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SetSelected, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'WIDGET_SaveRow_C_SetSelected::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.EVENT_MouseEnterInputBox
// 0x00B8 (0x00B8 - 0x0000)
struct WIDGET_SaveRow_C_EVENT_MouseEnterInputBox final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SaveRow_C_EVENT_MouseEnterInputBox) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_EVENT_MouseEnterInputBox");
static_assert(sizeof(WIDGET_SaveRow_C_EVENT_MouseEnterInputBox) == 0x0000B8, "Wrong size on WIDGET_SaveRow_C_EVENT_MouseEnterInputBox");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_MouseEnterInputBox, MyGeometry) == 0x000000, "Member 'WIDGET_SaveRow_C_EVENT_MouseEnterInputBox::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_MouseEnterInputBox, MouseEvent) == 0x000038, "Member 'WIDGET_SaveRow_C_EVENT_MouseEnterInputBox::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_MouseEnterInputBox, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000A8, "Member 'WIDGET_SaveRow_C_EVENT_MouseEnterInputBox::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_MouseEnterInputBox, CallFunc_Not_PreBool_ReturnValue) == 0x0000B0, "Member 'WIDGET_SaveRow_C_EVENT_MouseEnterInputBox::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.EVENT_MouseExitInputBox
// 0x0080 (0x0080 - 0x0000)
struct WIDGET_SaveRow_C_EVENT_MouseExitInputBox final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SaveRow_C_EVENT_MouseExitInputBox) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_EVENT_MouseExitInputBox");
static_assert(sizeof(WIDGET_SaveRow_C_EVENT_MouseExitInputBox) == 0x000080, "Wrong size on WIDGET_SaveRow_C_EVENT_MouseExitInputBox");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_MouseExitInputBox, MouseEvent) == 0x000000, "Member 'WIDGET_SaveRow_C_EVENT_MouseExitInputBox::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_MouseExitInputBox, CallFunc_GetOwningPlayer_ReturnValue) == 0x000070, "Member 'WIDGET_SaveRow_C_EVENT_MouseExitInputBox::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_MouseExitInputBox, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000078, "Member 'WIDGET_SaveRow_C_EVENT_MouseExitInputBox::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.ToggleButtonVisibility
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_SaveRow_C_ToggleButtonVisibility final
{
public:
	bool                                          Selected;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SaveRow_C_ToggleButtonVisibility) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_ToggleButtonVisibility");
static_assert(sizeof(WIDGET_SaveRow_C_ToggleButtonVisibility) == 0x000018, "Wrong size on WIDGET_SaveRow_C_ToggleButtonVisibility");
static_assert(offsetof(WIDGET_SaveRow_C_ToggleButtonVisibility, Selected) == 0x000000, "Member 'WIDGET_SaveRow_C_ToggleButtonVisibility::Selected' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ToggleButtonVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WIDGET_SaveRow_C_ToggleButtonVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ToggleButtonVisibility, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'WIDGET_SaveRow_C_ToggleButtonVisibility::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_ToggleButtonVisibility, CallFunc_PlayAnimation_ReturnValue_1) == 0x000010, "Member 'WIDGET_SaveRow_C_ToggleButtonVisibility::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.GetDifficultyValuesFromProfile
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_SaveRow_C_GetDifficultyValuesFromProfile final
{
public:
	class UStreamingSaveGameProfile*              Profile;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           Combat;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           Mission;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           Puzzle;                                            // 0x000A(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           Cyber;                                             // 0x000B(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           CallFunc_GetShockDifficultyValuesFromBitfield_Combat; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           CallFunc_GetShockDifficultyValuesFromBitfield_Mission; // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           CallFunc_GetShockDifficultyValuesFromBitfield_Puzzle; // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           CallFunc_GetShockDifficultyValuesFromBitfield_Cyber; // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SaveRow_C_GetDifficultyValuesFromProfile) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_GetDifficultyValuesFromProfile");
static_assert(sizeof(WIDGET_SaveRow_C_GetDifficultyValuesFromProfile) == 0x000010, "Wrong size on WIDGET_SaveRow_C_GetDifficultyValuesFromProfile");
static_assert(offsetof(WIDGET_SaveRow_C_GetDifficultyValuesFromProfile, Profile) == 0x000000, "Member 'WIDGET_SaveRow_C_GetDifficultyValuesFromProfile::Profile' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetDifficultyValuesFromProfile, Combat) == 0x000008, "Member 'WIDGET_SaveRow_C_GetDifficultyValuesFromProfile::Combat' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetDifficultyValuesFromProfile, Mission) == 0x000009, "Member 'WIDGET_SaveRow_C_GetDifficultyValuesFromProfile::Mission' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetDifficultyValuesFromProfile, Puzzle) == 0x00000A, "Member 'WIDGET_SaveRow_C_GetDifficultyValuesFromProfile::Puzzle' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetDifficultyValuesFromProfile, Cyber) == 0x00000B, "Member 'WIDGET_SaveRow_C_GetDifficultyValuesFromProfile::Cyber' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetDifficultyValuesFromProfile, CallFunc_GetShockDifficultyValuesFromBitfield_Combat) == 0x00000C, "Member 'WIDGET_SaveRow_C_GetDifficultyValuesFromProfile::CallFunc_GetShockDifficultyValuesFromBitfield_Combat' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetDifficultyValuesFromProfile, CallFunc_GetShockDifficultyValuesFromBitfield_Mission) == 0x00000D, "Member 'WIDGET_SaveRow_C_GetDifficultyValuesFromProfile::CallFunc_GetShockDifficultyValuesFromBitfield_Mission' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetDifficultyValuesFromProfile, CallFunc_GetShockDifficultyValuesFromBitfield_Puzzle) == 0x00000E, "Member 'WIDGET_SaveRow_C_GetDifficultyValuesFromProfile::CallFunc_GetShockDifficultyValuesFromBitfield_Puzzle' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_GetDifficultyValuesFromProfile, CallFunc_GetShockDifficultyValuesFromBitfield_Cyber) == 0x00000F, "Member 'WIDGET_SaveRow_C_GetDifficultyValuesFromProfile::CallFunc_GetShockDifficultyValuesFromBitfield_Cyber' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.CheckSaveProfileValidity
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_SaveRow_C_CheckSaveProfileValidity final
{
public:
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidProfile_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SaveRow_C_CheckSaveProfileValidity) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_CheckSaveProfileValidity");
static_assert(sizeof(WIDGET_SaveRow_C_CheckSaveProfileValidity) == 0x000038, "Wrong size on WIDGET_SaveRow_C_CheckSaveProfileValidity");
static_assert(offsetof(WIDGET_SaveRow_C_CheckSaveProfileValidity, K2Node_MakeStruct_Margin) == 0x000000, "Member 'WIDGET_SaveRow_C_CheckSaveProfileValidity::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_CheckSaveProfileValidity, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'WIDGET_SaveRow_C_CheckSaveProfileValidity::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_CheckSaveProfileValidity, K2Node_MakeStruct_Margin_1) == 0x000018, "Member 'WIDGET_SaveRow_C_CheckSaveProfileValidity::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_CheckSaveProfileValidity, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000028, "Member 'WIDGET_SaveRow_C_CheckSaveProfileValidity::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_CheckSaveProfileValidity, CallFunc_IsValidProfile_ReturnValue) == 0x000030, "Member 'WIDGET_SaveRow_C_CheckSaveProfileValidity::CallFunc_IsValidProfile_ReturnValue' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.SetDifficultyValue
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_SaveRow_C_SetDifficultyValue final
{
public:
	class UWIDGET_SaveDifficultyIndicator_C*      SaveDifficultyIndicator;                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           DifficultyCategory;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0018(0x0018)()
};
static_assert(alignof(WIDGET_SaveRow_C_SetDifficultyValue) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_SetDifficultyValue");
static_assert(sizeof(WIDGET_SaveRow_C_SetDifficultyValue) == 0x000030, "Wrong size on WIDGET_SaveRow_C_SetDifficultyValue");
static_assert(offsetof(WIDGET_SaveRow_C_SetDifficultyValue, SaveDifficultyIndicator) == 0x000000, "Member 'WIDGET_SaveRow_C_SetDifficultyValue::SaveDifficultyIndicator' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SetDifficultyValue, DifficultyCategory) == 0x000008, "Member 'WIDGET_SaveRow_C_SetDifficultyValue::DifficultyCategory' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SetDifficultyValue, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'WIDGET_SaveRow_C_SetDifficultyValue::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SetDifficultyValue, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WIDGET_SaveRow_C_SetDifficultyValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_SetDifficultyValue, CallFunc_Conv_IntToText_ReturnValue) == 0x000018, "Member 'WIDGET_SaveRow_C_SetDifficultyValue::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.EVENT_OnGameSessionSaved
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_SaveRow_C_EVENT_OnGameSessionSaved final
{
public:
	class FString                                 SaveName_0;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         UserIndex_0;                                       // 0x0010(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSuccess;                                          // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SaveRow_C_EVENT_OnGameSessionSaved) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_EVENT_OnGameSessionSaved");
static_assert(sizeof(WIDGET_SaveRow_C_EVENT_OnGameSessionSaved) == 0x000030, "Wrong size on WIDGET_SaveRow_C_EVENT_OnGameSessionSaved");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_OnGameSessionSaved, SaveName_0) == 0x000000, "Member 'WIDGET_SaveRow_C_EVENT_OnGameSessionSaved::SaveName_0' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_OnGameSessionSaved, UserIndex_0) == 0x000010, "Member 'WIDGET_SaveRow_C_EVENT_OnGameSessionSaved::UserIndex_0' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_OnGameSessionSaved, bSuccess) == 0x000014, "Member 'WIDGET_SaveRow_C_EVENT_OnGameSessionSaved::bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_OnGameSessionSaved, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'WIDGET_SaveRow_C_EVENT_OnGameSessionSaved::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_OnGameSessionSaved, K2Node_DynamicCast_AsCON_Hacker) == 0x000020, "Member 'WIDGET_SaveRow_C_EVENT_OnGameSessionSaved::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_OnGameSessionSaved, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_SaveRow_C_EVENT_OnGameSessionSaved::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_EVENT_OnGameSessionSaved, CallFunc_IsUsingGamepad_Result) == 0x000029, "Member 'WIDGET_SaveRow_C_EVENT_OnGameSessionSaved::CallFunc_IsUsingGamepad_Result' has a wrong offset!");

// Function WIDGET_SaveRow.WIDGET_SaveRow_C.CheckIsSavingAsync
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_SaveRow_C_CheckIsSavingAsync final
{
public:
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSavePendingAsyncCompletion_ReturnValue; // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SaveRow_C_CheckIsSavingAsync) == 0x000008, "Wrong alignment on WIDGET_SaveRow_C_CheckIsSavingAsync");
static_assert(sizeof(WIDGET_SaveRow_C_CheckIsSavingAsync) == 0x000040, "Wrong size on WIDGET_SaveRow_C_CheckIsSavingAsync");
static_assert(offsetof(WIDGET_SaveRow_C_CheckIsSavingAsync, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000000, "Member 'WIDGET_SaveRow_C_CheckIsSavingAsync::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_CheckIsSavingAsync, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WIDGET_SaveRow_C_CheckIsSavingAsync::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_CheckIsSavingAsync, CallFunc_GetEndTime_ReturnValue) == 0x000014, "Member 'WIDGET_SaveRow_C_CheckIsSavingAsync::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_CheckIsSavingAsync, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WIDGET_SaveRow_C_CheckIsSavingAsync::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_CheckIsSavingAsync, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000020, "Member 'WIDGET_SaveRow_C_CheckIsSavingAsync::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_CheckIsSavingAsync, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'WIDGET_SaveRow_C_CheckIsSavingAsync::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_CheckIsSavingAsync, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'WIDGET_SaveRow_C_CheckIsSavingAsync::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_CheckIsSavingAsync, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WIDGET_SaveRow_C_CheckIsSavingAsync::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SaveRow_C_CheckIsSavingAsync, CallFunc_IsSavePendingAsyncCompletion_ReturnValue) == 0x000039, "Member 'WIDGET_SaveRow_C_CheckIsSavingAsync::CallFunc_IsSavePendingAsyncCompletion_ReturnValue' has a wrong offset!");

}


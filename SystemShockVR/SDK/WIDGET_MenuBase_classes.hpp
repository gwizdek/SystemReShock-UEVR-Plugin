#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_MenuBase

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "ENUM_MenuNavigationInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WIDGET_MenuBase.WIDGET_MenuBase_C
// 0x00A8 (0x0308 - 0x0260)
class UWIDGET_MenuBase_C : public UUserWidget
{
public:
	class UWIDGET_MenuBase_C*                     ParentMenu;                                        // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SubMenu_Header_C*               Header;                                            // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MenuListBase_C*                 ActiveMenuList;                                    // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MenuBase_C*                     OpenedSubMenu;                                     // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DimBackgroundWhenOpened;                           // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnMenuOpened;                                      // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   MenuLabel;                                         // 0x0298(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnMenuClosed;                                      // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnSubMenuOpened;                                   // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnSubMenuClosed;                                   // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnCanApply;                                        // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnCanReset;                                        // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          CanMenuClose;                                      // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void OnMenuOpened__DelegateSignature(class UWIDGET_MenuBase_C* Menu);
	void OnMenuClosed__DelegateSignature(class UWIDGET_MenuBase_C* Menu);
	void OnSubMenuOpened__DelegateSignature(class UWIDGET_MenuBase_C* SubMenu);
	void OnSubMenuClosed__DelegateSignature(class UWIDGET_MenuBase_C* SubMenu);
	void OnCanApply__DelegateSignature(bool CanApply);
	void OnCanReset__DelegateSignature(bool CanReset);
	void InitializeMenu(class UWIDGET_MenuBase_C* ParentMenuWidget);
	void OnMenuOpen();
	void OnMenuClose();
	void InvokeNavManager(ENUM_MenuNavigationInput InputType, bool InputState);
	void TryOpenSubMenu(class UWIDGET_MenuBase_C* SubMenu);
	void TryCloseSubMenu();
	void IsUsingGamepad(bool* Result);
	void GetActiveMenuList(class UWIDGET_MenuListBase_C** Result);
	void SetActiveMenuList(class UWIDGET_MenuListBase_C* Value);
	void GetMenuLabel(class FText* Page);
	void EVENT_ActiveListDirtyValueChanged(bool IsDirty);
	void EVENT_ActivateListDefaultValueChanged(bool IsDefault);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WIDGET_MenuBase_C">();
	}
	static class UWIDGET_MenuBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWIDGET_MenuBase_C>();
	}
};
static_assert(alignof(UWIDGET_MenuBase_C) == 0x000008, "Wrong alignment on UWIDGET_MenuBase_C");
static_assert(sizeof(UWIDGET_MenuBase_C) == 0x000308, "Wrong size on UWIDGET_MenuBase_C");
static_assert(offsetof(UWIDGET_MenuBase_C, ParentMenu) == 0x000260, "Member 'UWIDGET_MenuBase_C::ParentMenu' has a wrong offset!");
static_assert(offsetof(UWIDGET_MenuBase_C, Header) == 0x000268, "Member 'UWIDGET_MenuBase_C::Header' has a wrong offset!");
static_assert(offsetof(UWIDGET_MenuBase_C, ActiveMenuList) == 0x000270, "Member 'UWIDGET_MenuBase_C::ActiveMenuList' has a wrong offset!");
static_assert(offsetof(UWIDGET_MenuBase_C, OpenedSubMenu) == 0x000278, "Member 'UWIDGET_MenuBase_C::OpenedSubMenu' has a wrong offset!");
static_assert(offsetof(UWIDGET_MenuBase_C, DimBackgroundWhenOpened) == 0x000280, "Member 'UWIDGET_MenuBase_C::DimBackgroundWhenOpened' has a wrong offset!");
static_assert(offsetof(UWIDGET_MenuBase_C, OnMenuOpened) == 0x000288, "Member 'UWIDGET_MenuBase_C::OnMenuOpened' has a wrong offset!");
static_assert(offsetof(UWIDGET_MenuBase_C, MenuLabel) == 0x000298, "Member 'UWIDGET_MenuBase_C::MenuLabel' has a wrong offset!");
static_assert(offsetof(UWIDGET_MenuBase_C, OnMenuClosed) == 0x0002B0, "Member 'UWIDGET_MenuBase_C::OnMenuClosed' has a wrong offset!");
static_assert(offsetof(UWIDGET_MenuBase_C, OnSubMenuOpened) == 0x0002C0, "Member 'UWIDGET_MenuBase_C::OnSubMenuOpened' has a wrong offset!");
static_assert(offsetof(UWIDGET_MenuBase_C, OnSubMenuClosed) == 0x0002D0, "Member 'UWIDGET_MenuBase_C::OnSubMenuClosed' has a wrong offset!");
static_assert(offsetof(UWIDGET_MenuBase_C, OnCanApply) == 0x0002E0, "Member 'UWIDGET_MenuBase_C::OnCanApply' has a wrong offset!");
static_assert(offsetof(UWIDGET_MenuBase_C, OnCanReset) == 0x0002F0, "Member 'UWIDGET_MenuBase_C::OnCanReset' has a wrong offset!");
static_assert(offsetof(UWIDGET_MenuBase_C, CanMenuClose) == 0x000300, "Member 'UWIDGET_MenuBase_C::CanMenuClose' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OPTION_Graphics_DLSSMode

#include "Basic.hpp"

#include "DLSSBlueprint_structs.hpp"


namespace SDK::Params
{

// Function OPTION_Graphics_DLSSMode.OPTION_Graphics_DLSSMode_C.AcceptCurrentValue
// 0x0010 (0x0010 - 0x0000)
struct OPTION_Graphics_DLSSMode_C_AcceptCurrentValue final
{
public:
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDLSSMode                                    CallFunc_Array_Get_Item;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OPTION_Graphics_DLSSMode_C_AcceptCurrentValue) == 0x000008, "Wrong alignment on OPTION_Graphics_DLSSMode_C_AcceptCurrentValue");
static_assert(sizeof(OPTION_Graphics_DLSSMode_C_AcceptCurrentValue) == 0x000010, "Wrong size on OPTION_Graphics_DLSSMode_C_AcceptCurrentValue");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_AcceptCurrentValue, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000000, "Member 'OPTION_Graphics_DLSSMode_C_AcceptCurrentValue::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_AcceptCurrentValue, CallFunc_Array_Get_Item) == 0x000008, "Member 'OPTION_Graphics_DLSSMode_C_AcceptCurrentValue::CallFunc_Array_Get_Item' has a wrong offset!");

// Function OPTION_Graphics_DLSSMode.OPTION_Graphics_DLSSMode_C.ApplyCleanValue
// 0x0010 (0x0010 - 0x0000)
struct OPTION_Graphics_DLSSMode_C_ApplyCleanValue final
{
public:
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDLSSMode                                    CallFunc_GetDLSS_Result;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OPTION_Graphics_DLSSMode_C_ApplyCleanValue) == 0x000008, "Wrong alignment on OPTION_Graphics_DLSSMode_C_ApplyCleanValue");
static_assert(sizeof(OPTION_Graphics_DLSSMode_C_ApplyCleanValue) == 0x000010, "Wrong size on OPTION_Graphics_DLSSMode_C_ApplyCleanValue");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_ApplyCleanValue, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000000, "Member 'OPTION_Graphics_DLSSMode_C_ApplyCleanValue::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_ApplyCleanValue, CallFunc_GetDLSS_Result) == 0x000008, "Member 'OPTION_Graphics_DLSSMode_C_ApplyCleanValue::CallFunc_GetDLSS_Result' has a wrong offset!");

// Function OPTION_Graphics_DLSSMode.OPTION_Graphics_DLSSMode_C.ApplyDirtyValue
// 0x0010 (0x0010 - 0x0000)
struct OPTION_Graphics_DLSSMode_C_ApplyDirtyValue final
{
public:
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDLSSMode                                    CallFunc_Array_Get_Item;                           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDirty_IsDirty;                          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Graphics_DLSSMode_C_ApplyDirtyValue) == 0x000008, "Wrong alignment on OPTION_Graphics_DLSSMode_C_ApplyDirtyValue");
static_assert(sizeof(OPTION_Graphics_DLSSMode_C_ApplyDirtyValue) == 0x000010, "Wrong size on OPTION_Graphics_DLSSMode_C_ApplyDirtyValue");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_ApplyDirtyValue, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000000, "Member 'OPTION_Graphics_DLSSMode_C_ApplyDirtyValue::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_ApplyDirtyValue, CallFunc_Array_Get_Item) == 0x000008, "Member 'OPTION_Graphics_DLSSMode_C_ApplyDirtyValue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_ApplyDirtyValue, CallFunc_IsDirty_IsDirty) == 0x000009, "Member 'OPTION_Graphics_DLSSMode_C_ApplyDirtyValue::CallFunc_IsDirty_IsDirty' has a wrong offset!");

// Function OPTION_Graphics_DLSSMode.OPTION_Graphics_DLSSMode_C.IsDirty
// 0x0018 (0x0018 - 0x0000)
struct OPTION_Graphics_DLSSMode_C_IsDirty final
{
public:
	bool                                          Param_IsDirty_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDLSSMode                                    CallFunc_GetDLSS_Result;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDLSSMode                                    CallFunc_Array_Get_Item;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Graphics_DLSSMode_C_IsDirty) == 0x000008, "Wrong alignment on OPTION_Graphics_DLSSMode_C_IsDirty");
static_assert(sizeof(OPTION_Graphics_DLSSMode_C_IsDirty) == 0x000018, "Wrong size on OPTION_Graphics_DLSSMode_C_IsDirty");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_IsDirty, Param_IsDirty_0) == 0x000000, "Member 'OPTION_Graphics_DLSSMode_C_IsDirty::Param_IsDirty_0' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_IsDirty, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000008, "Member 'OPTION_Graphics_DLSSMode_C_IsDirty::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_IsDirty, CallFunc_GetDLSS_Result) == 0x000010, "Member 'OPTION_Graphics_DLSSMode_C_IsDirty::CallFunc_GetDLSS_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_IsDirty, CallFunc_Array_Get_Item) == 0x000011, "Member 'OPTION_Graphics_DLSSMode_C_IsDirty::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_IsDirty, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000012, "Member 'OPTION_Graphics_DLSSMode_C_IsDirty::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function OPTION_Graphics_DLSSMode.OPTION_Graphics_DLSSMode_C.PopulateUniqueSettings
// 0x0050 (0x0050 - 0x0000)
struct OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDLSSMode>                            CallFunc_Map_Keys_Keys;                            // 0x0010(0x0010)(ReferenceParm)
	EUDLSSMode                                    CallFunc_Array_Get_Item;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Map_Find_Value;                           // 0x0028(0x0018)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDLSSModeSupported_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings) == 0x000008, "Wrong alignment on OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings");
static_assert(sizeof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings) == 0x000050, "Wrong size on OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings, Temp_int_Array_Index_Variable) == 0x000000, "Member 'OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings, CallFunc_Map_Keys_Keys) == 0x000010, "Member 'OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings, CallFunc_Array_Get_Item) == 0x000020, "Member 'OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings, CallFunc_Map_Find_Value) == 0x000028, "Member 'OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings, CallFunc_Less_IntInt_ReturnValue) == 0x000041, "Member 'OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings, CallFunc_Array_Add_ReturnValue_1) == 0x000048, "Member 'OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings, CallFunc_IsDLSSModeSupported_ReturnValue) == 0x00004C, "Member 'OPTION_Graphics_DLSSMode_C_PopulateUniqueSettings::CallFunc_IsDLSSModeSupported_ReturnValue' has a wrong offset!");

// Function OPTION_Graphics_DLSSMode.OPTION_Graphics_DLSSMode_C.UpdateVisuals
// 0x0030 (0x0030 - 0x0000)
struct OPTION_Graphics_DLSSMode_C_UpdateVisuals final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetSaveSettings_ShockSettings;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDLSSMode                                    CallFunc_GetDLSS_Result;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetOptionEnabled_Result;                  // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUDLSSMode                                    CallFunc_Array_Get_Item;                           // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Graphics_DLSSMode_C_UpdateVisuals) == 0x000008, "Wrong alignment on OPTION_Graphics_DLSSMode_C_UpdateVisuals");
static_assert(sizeof(OPTION_Graphics_DLSSMode_C_UpdateVisuals) == 0x000030, "Wrong size on OPTION_Graphics_DLSSMode_C_UpdateVisuals");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, Temp_int_Array_Index_Variable) == 0x000004, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, CallFunc_GetSaveSettings_ShockSettings) == 0x000018, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::CallFunc_GetSaveSettings_ShockSettings' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, CallFunc_GetDLSS_Result) == 0x000024, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::CallFunc_GetDLSS_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, CallFunc_Greater_IntInt_ReturnValue) == 0x000025, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, CallFunc_SetOptionEnabled_Result) == 0x000026, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::CallFunc_SetOptionEnabled_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, CallFunc_Array_Get_Item) == 0x000027, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002C, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_UpdateVisuals, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'OPTION_Graphics_DLSSMode_C_UpdateVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function OPTION_Graphics_DLSSMode.OPTION_Graphics_DLSSMode_C.SelectDefaultValue
// 0x0030 (0x0030 - 0x0000)
struct OPTION_Graphics_DLSSMode_C_SelectDefaultValue final
{
public:
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentCulture_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDLSSMode                                    CallFunc_GetDLSSProfileValue_Result;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(OPTION_Graphics_DLSSMode_C_SelectDefaultValue) == 0x000008, "Wrong alignment on OPTION_Graphics_DLSSMode_C_SelectDefaultValue");
static_assert(sizeof(OPTION_Graphics_DLSSMode_C_SelectDefaultValue) == 0x000030, "Wrong size on OPTION_Graphics_DLSSMode_C_SelectDefaultValue");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_SelectDefaultValue, CallFunc_GetPlatformName_ReturnValue) == 0x000000, "Member 'OPTION_Graphics_DLSSMode_C_SelectDefaultValue::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_SelectDefaultValue, CallFunc_GetCurrentCulture_ReturnValue) == 0x000010, "Member 'OPTION_Graphics_DLSSMode_C_SelectDefaultValue::CallFunc_GetCurrentCulture_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_SelectDefaultValue, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000020, "Member 'OPTION_Graphics_DLSSMode_C_SelectDefaultValue::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_SelectDefaultValue, CallFunc_GetDLSSProfileValue_Result) == 0x000028, "Member 'OPTION_Graphics_DLSSMode_C_SelectDefaultValue::CallFunc_GetDLSSProfileValue_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_SelectDefaultValue, CallFunc_Array_Find_ReturnValue) == 0x00002C, "Member 'OPTION_Graphics_DLSSMode_C_SelectDefaultValue::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function OPTION_Graphics_DLSSMode.OPTION_Graphics_DLSSMode_C.IsDefault
// 0x0040 (0x0040 - 0x0000)
struct OPTION_Graphics_DLSSMode_C_IsDefault final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentCulture_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDLSSMode                                    CallFunc_GetDLSSProfileValue_Result;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Graphics_DLSSMode_C_IsDefault) == 0x000008, "Wrong alignment on OPTION_Graphics_DLSSMode_C_IsDefault");
static_assert(sizeof(OPTION_Graphics_DLSSMode_C_IsDefault) == 0x000040, "Wrong size on OPTION_Graphics_DLSSMode_C_IsDefault");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_IsDefault, Result) == 0x000000, "Member 'OPTION_Graphics_DLSSMode_C_IsDefault::Result' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_IsDefault, CallFunc_GetPlatformName_ReturnValue) == 0x000008, "Member 'OPTION_Graphics_DLSSMode_C_IsDefault::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_IsDefault, CallFunc_GetCurrentCulture_ReturnValue) == 0x000018, "Member 'OPTION_Graphics_DLSSMode_C_IsDefault::CallFunc_GetCurrentCulture_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_IsDefault, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000028, "Member 'OPTION_Graphics_DLSSMode_C_IsDefault::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_IsDefault, CallFunc_GetDLSSProfileValue_Result) == 0x000030, "Member 'OPTION_Graphics_DLSSMode_C_IsDefault::CallFunc_GetDLSSProfileValue_Result' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_IsDefault, CallFunc_Array_Find_ReturnValue) == 0x000034, "Member 'OPTION_Graphics_DLSSMode_C_IsDefault::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_IsDefault, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'OPTION_Graphics_DLSSMode_C_IsDefault::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function OPTION_Graphics_DLSSMode.OPTION_Graphics_DLSSMode_C.InitializeMenuListItem
// 0x0038 (0x0038 - 0x0000)
struct OPTION_Graphics_DLSSMode_C_InitializeMenuListItem final
{
public:
	class UWIDGET_MenuListBase_C*                 ParentList;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EUDLSSMode>                            CallFunc_Map_Keys_Keys;                            // 0x0018(0x0010)(ReferenceParm)
	EUDLSSMode                                    CallFunc_Array_Get_Item;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDLSSModeSupported_ReturnValue;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem) == 0x000008, "Wrong alignment on OPTION_Graphics_DLSSMode_C_InitializeMenuListItem");
static_assert(sizeof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem) == 0x000038, "Wrong size on OPTION_Graphics_DLSSMode_C_InitializeMenuListItem");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem, ParentList) == 0x000000, "Member 'OPTION_Graphics_DLSSMode_C_InitializeMenuListItem::ParentList' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem, Index_0) == 0x000008, "Member 'OPTION_Graphics_DLSSMode_C_InitializeMenuListItem::Index_0' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'OPTION_Graphics_DLSSMode_C_InitializeMenuListItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'OPTION_Graphics_DLSSMode_C_InitializeMenuListItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'OPTION_Graphics_DLSSMode_C_InitializeMenuListItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem, CallFunc_Map_Keys_Keys) == 0x000018, "Member 'OPTION_Graphics_DLSSMode_C_InitializeMenuListItem::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem, CallFunc_Array_Get_Item) == 0x000028, "Member 'OPTION_Graphics_DLSSMode_C_InitializeMenuListItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'OPTION_Graphics_DLSSMode_C_InitializeMenuListItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem, CallFunc_Array_Add_ReturnValue) == 0x000030, "Member 'OPTION_Graphics_DLSSMode_C_InitializeMenuListItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'OPTION_Graphics_DLSSMode_C_InitializeMenuListItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(OPTION_Graphics_DLSSMode_C_InitializeMenuListItem, CallFunc_IsDLSSModeSupported_ReturnValue) == 0x000035, "Member 'OPTION_Graphics_DLSSMode_C_InitializeMenuListItem::CallFunc_IsDLSSModeSupported_ReturnValue' has a wrong offset!");

}


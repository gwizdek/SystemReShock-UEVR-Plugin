#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HARDWARE_VisionUnit_Base

#include "Basic.hpp"

#include "STRUCT_HardwareFeature_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function HARDWARE_VisionUnit_Base.HARDWARE_VisionUnit_Base_C.ExecuteUbergraph_HARDWARE_VisionUnit_Base
// 0x0018 (0x0018 - 0x0000)
struct HARDWARE_VisionUnit_Base_C_ExecuteUbergraph_HARDWARE_VisionUnit_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsActivated_Result;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_VisionUnit_Base_C_ExecuteUbergraph_HARDWARE_VisionUnit_Base) == 0x000008, "Wrong alignment on HARDWARE_VisionUnit_Base_C_ExecuteUbergraph_HARDWARE_VisionUnit_Base");
static_assert(sizeof(HARDWARE_VisionUnit_Base_C_ExecuteUbergraph_HARDWARE_VisionUnit_Base) == 0x000018, "Wrong size on HARDWARE_VisionUnit_Base_C_ExecuteUbergraph_HARDWARE_VisionUnit_Base");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_ExecuteUbergraph_HARDWARE_VisionUnit_Base, EntryPoint) == 0x000000, "Member 'HARDWARE_VisionUnit_Base_C_ExecuteUbergraph_HARDWARE_VisionUnit_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_ExecuteUbergraph_HARDWARE_VisionUnit_Base, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'HARDWARE_VisionUnit_Base_C_ExecuteUbergraph_HARDWARE_VisionUnit_Base::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_ExecuteUbergraph_HARDWARE_VisionUnit_Base, CallFunc_GetIsActivated_Result) == 0x000010, "Member 'HARDWARE_VisionUnit_Base_C_ExecuteUbergraph_HARDWARE_VisionUnit_Base::CallFunc_GetIsActivated_Result' has a wrong offset!");

// Function HARDWARE_VisionUnit_Base.HARDWARE_VisionUnit_Base_C.EVENT_OnEnergyDepleted
// 0x0001 (0x0001 - 0x0000)
struct HARDWARE_VisionUnit_Base_C_EVENT_OnEnergyDepleted final
{
public:
	bool                                          CallFunc_Deactivate_Result;                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_VisionUnit_Base_C_EVENT_OnEnergyDepleted) == 0x000001, "Wrong alignment on HARDWARE_VisionUnit_Base_C_EVENT_OnEnergyDepleted");
static_assert(sizeof(HARDWARE_VisionUnit_Base_C_EVENT_OnEnergyDepleted) == 0x000001, "Wrong size on HARDWARE_VisionUnit_Base_C_EVENT_OnEnergyDepleted");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_EVENT_OnEnergyDepleted, CallFunc_Deactivate_Result) == 0x000000, "Member 'HARDWARE_VisionUnit_Base_C_EVENT_OnEnergyDepleted::CallFunc_Deactivate_Result' has a wrong offset!");

// Function HARDWARE_VisionUnit_Base.HARDWARE_VisionUnit_Base_C.ActivateVisionUnit
// 0x00C8 (0x00C8 - 0x0000)
struct HARDWARE_VisionUnit_Base_C_ActivateVisionUnit final
{
public:
	bool                                          ApplyInstantDrain;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttribModApplyData                    InstantEnergyDrainModData;                         // 0x0008(0x00A0)(Edit, BlueprintVisible)
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue_1;                   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_VisionUnit_Base_C_ActivateVisionUnit) == 0x000008, "Wrong alignment on HARDWARE_VisionUnit_Base_C_ActivateVisionUnit");
static_assert(sizeof(HARDWARE_VisionUnit_Base_C_ActivateVisionUnit) == 0x0000C8, "Wrong size on HARDWARE_VisionUnit_Base_C_ActivateVisionUnit");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_ActivateVisionUnit, ApplyInstantDrain) == 0x000000, "Member 'HARDWARE_VisionUnit_Base_C_ActivateVisionUnit::ApplyInstantDrain' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_ActivateVisionUnit, InstantEnergyDrainModData) == 0x000008, "Member 'HARDWARE_VisionUnit_Base_C_ActivateVisionUnit::InstantEnergyDrainModData' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_ActivateVisionUnit, OwnerCharacter) == 0x0000A8, "Member 'HARDWARE_VisionUnit_Base_C_ActivateVisionUnit::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_ActivateVisionUnit, CallFunc_GetOwnerCharacter_Character) == 0x0000B0, "Member 'HARDWARE_VisionUnit_Base_C_ActivateVisionUnit::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_ActivateVisionUnit, CallFunc_ApplyMod_ReturnValue) == 0x0000B8, "Member 'HARDWARE_VisionUnit_Base_C_ActivateVisionUnit::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_ActivateVisionUnit, CallFunc_ApplyMod_ReturnValue_1) == 0x0000C0, "Member 'HARDWARE_VisionUnit_Base_C_ActivateVisionUnit::CallFunc_ApplyMod_ReturnValue_1' has a wrong offset!");

// Function HARDWARE_VisionUnit_Base.HARDWARE_VisionUnit_Base_C.DeactivateVisionUnit
// 0x0028 (0x0028 - 0x0000)
struct HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit final
{
public:
	class UAttribInstance*                        EnergyAttribInstance;                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_Actor;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ExpireModsWithCategory_ReturnValue;       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit) == 0x000008, "Wrong alignment on HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit");
static_assert(sizeof(HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit) == 0x000028, "Wrong size on HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit, EnergyAttribInstance) == 0x000000, "Member 'HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit::EnergyAttribInstance' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit, OwnerCharacter) == 0x000008, "Member 'HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit, CallFunc_GetOwnerActor_Actor) == 0x000010, "Member 'HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit::CallFunc_GetOwnerActor_Actor' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000018, "Member 'HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit, CallFunc_ExpireModsWithCategory_ReturnValue) == 0x000024, "Member 'HARDWARE_VisionUnit_Base_C_DeactivateVisionUnit::CallFunc_ExpireModsWithCategory_ReturnValue' has a wrong offset!");

// Function HARDWARE_VisionUnit_Base.HARDWARE_VisionUnit_Base_C.UpdateHardwareState
// 0x0003 (0x0003 - 0x0000)
struct HARDWARE_VisionUnit_Base_C_UpdateHardwareState final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateHardwareState_Result;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_VisionUnit_Base_C_UpdateHardwareState) == 0x000001, "Wrong alignment on HARDWARE_VisionUnit_Base_C_UpdateHardwareState");
static_assert(sizeof(HARDWARE_VisionUnit_Base_C_UpdateHardwareState) == 0x000003, "Wrong size on HARDWARE_VisionUnit_Base_C_UpdateHardwareState");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_UpdateHardwareState, IsEnabled) == 0x000000, "Member 'HARDWARE_VisionUnit_Base_C_UpdateHardwareState::IsEnabled' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_UpdateHardwareState, Result) == 0x000001, "Member 'HARDWARE_VisionUnit_Base_C_UpdateHardwareState::Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_UpdateHardwareState, CallFunc_UpdateHardwareState_Result) == 0x000002, "Member 'HARDWARE_VisionUnit_Base_C_UpdateHardwareState::CallFunc_UpdateHardwareState_Result' has a wrong offset!");

// Function HARDWARE_VisionUnit_Base.HARDWARE_VisionUnit_Base_C.CanActivateHardware
// 0x0018 (0x0018 - 0x0000)
struct HARDWARE_VisionUnit_Base_C_CanActivateHardware final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_VisionUnit_Base_C_CanActivateHardware) == 0x000008, "Wrong alignment on HARDWARE_VisionUnit_Base_C_CanActivateHardware");
static_assert(sizeof(HARDWARE_VisionUnit_Base_C_CanActivateHardware) == 0x000018, "Wrong size on HARDWARE_VisionUnit_Base_C_CanActivateHardware");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_CanActivateHardware, Result) == 0x000000, "Member 'HARDWARE_VisionUnit_Base_C_CanActivateHardware::Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_CanActivateHardware, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'HARDWARE_VisionUnit_Base_C_CanActivateHardware::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_CanActivateHardware, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'HARDWARE_VisionUnit_Base_C_CanActivateHardware::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_CanActivateHardware, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'HARDWARE_VisionUnit_Base_C_CanActivateHardware::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function HARDWARE_VisionUnit_Base.HARDWARE_VisionUnit_Base_C.OnUpgradedItem
// 0x0020 (0x0020 - 0x0000)
struct HARDWARE_VisionUnit_Base_C_OnUpgradedItem final
{
public:
	class UITEM_UpgradeBase_C*                    PreviousItem;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnUpgradedItem_Result;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsActivated_Result;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UHARDWARE_VisionUnit_Base_C*            K2Node_DynamicCast_AsHARDWARE_Vision_Unit_Base;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_VisionUnit_Base_C_OnUpgradedItem) == 0x000008, "Wrong alignment on HARDWARE_VisionUnit_Base_C_OnUpgradedItem");
static_assert(sizeof(HARDWARE_VisionUnit_Base_C_OnUpgradedItem) == 0x000020, "Wrong size on HARDWARE_VisionUnit_Base_C_OnUpgradedItem");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnUpgradedItem, PreviousItem) == 0x000000, "Member 'HARDWARE_VisionUnit_Base_C_OnUpgradedItem::PreviousItem' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnUpgradedItem, Result) == 0x000008, "Member 'HARDWARE_VisionUnit_Base_C_OnUpgradedItem::Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnUpgradedItem, CallFunc_OnUpgradedItem_Result) == 0x000009, "Member 'HARDWARE_VisionUnit_Base_C_OnUpgradedItem::CallFunc_OnUpgradedItem_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnUpgradedItem, CallFunc_GetIsActivated_Result) == 0x00000A, "Member 'HARDWARE_VisionUnit_Base_C_OnUpgradedItem::CallFunc_GetIsActivated_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnUpgradedItem, K2Node_DynamicCast_AsHARDWARE_Vision_Unit_Base) == 0x000010, "Member 'HARDWARE_VisionUnit_Base_C_OnUpgradedItem::K2Node_DynamicCast_AsHARDWARE_Vision_Unit_Base' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnUpgradedItem, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'HARDWARE_VisionUnit_Base_C_OnUpgradedItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function HARDWARE_VisionUnit_Base.HARDWARE_VisionUnit_Base_C.OnVisionUnitActivated
// 0x0020 (0x0020 - 0x0000)
struct HARDWARE_VisionUnit_Base_C_OnVisionUnitActivated final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_VisionUnit_Base_C_OnVisionUnitActivated) == 0x000008, "Wrong alignment on HARDWARE_VisionUnit_Base_C_OnVisionUnitActivated");
static_assert(sizeof(HARDWARE_VisionUnit_Base_C_OnVisionUnitActivated) == 0x000020, "Wrong size on HARDWARE_VisionUnit_Base_C_OnVisionUnitActivated");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnVisionUnitActivated, Character) == 0x000000, "Member 'HARDWARE_VisionUnit_Base_C_OnVisionUnitActivated::Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnVisionUnitActivated, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'HARDWARE_VisionUnit_Base_C_OnVisionUnitActivated::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnVisionUnitActivated, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000018, "Member 'HARDWARE_VisionUnit_Base_C_OnVisionUnitActivated::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");

// Function HARDWARE_VisionUnit_Base.HARDWARE_VisionUnit_Base_C.OnVisionUnitDeactivated
// 0x0030 (0x0030 - 0x0000)
struct HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        EnergyAttribInstance;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated) == 0x000008, "Wrong alignment on HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated");
static_assert(sizeof(HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated) == 0x000030, "Wrong size on HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated, Character) == 0x000000, "Member 'HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated::Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated, EnergyAttribInstance) == 0x000008, "Member 'HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated::EnergyAttribInstance' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated, CallFunc_GetAttribInstance_ReturnValue) == 0x000020, "Member 'HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'HARDWARE_VisionUnit_Base_C_OnVisionUnitDeactivated::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function HARDWARE_VisionUnit_Base.HARDWARE_VisionUnit_Base_C.GetHardwareFeatures
// 0x0060 (0x0060 - 0x0000)
struct HARDWARE_VisionUnit_Base_C_GetHardwareFeatures final
{
public:
	TArray<struct FSTRUCT_HardwareFeature>        Result;                                            // 0x0000(0x0010)(Parm, OutParm)
	class FText                                   CallFunc_ReplaceHardwareInputActionStringInText_Result; // 0x0010(0x0018)()
	int32                                         CallFunc_ComputeJpmFromTickRate_Result;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HardwareFeature                K2Node_MakeStruct_STRUCT_HardwareFeature;          // 0x0030(0x0020)(HasGetValueTypeHash)
	TArray<struct FSTRUCT_HardwareFeature>        K2Node_MakeArray_Array;                            // 0x0050(0x0010)(ReferenceParm)
};
static_assert(alignof(HARDWARE_VisionUnit_Base_C_GetHardwareFeatures) == 0x000008, "Wrong alignment on HARDWARE_VisionUnit_Base_C_GetHardwareFeatures");
static_assert(sizeof(HARDWARE_VisionUnit_Base_C_GetHardwareFeatures) == 0x000060, "Wrong size on HARDWARE_VisionUnit_Base_C_GetHardwareFeatures");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_GetHardwareFeatures, Result) == 0x000000, "Member 'HARDWARE_VisionUnit_Base_C_GetHardwareFeatures::Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_GetHardwareFeatures, CallFunc_ReplaceHardwareInputActionStringInText_Result) == 0x000010, "Member 'HARDWARE_VisionUnit_Base_C_GetHardwareFeatures::CallFunc_ReplaceHardwareInputActionStringInText_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_GetHardwareFeatures, CallFunc_ComputeJpmFromTickRate_Result) == 0x000028, "Member 'HARDWARE_VisionUnit_Base_C_GetHardwareFeatures::CallFunc_ComputeJpmFromTickRate_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_GetHardwareFeatures, K2Node_MakeStruct_STRUCT_HardwareFeature) == 0x000030, "Member 'HARDWARE_VisionUnit_Base_C_GetHardwareFeatures::K2Node_MakeStruct_STRUCT_HardwareFeature' has a wrong offset!");
static_assert(offsetof(HARDWARE_VisionUnit_Base_C_GetHardwareFeatures, K2Node_MakeArray_Array) == 0x000050, "Member 'HARDWARE_VisionUnit_Base_C_GetHardwareFeatures::K2Node_MakeArray_Array' has a wrong offset!");

}


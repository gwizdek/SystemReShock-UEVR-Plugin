#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_PlayerHUD

#include "Basic.hpp"

#include "Slate_structs.hpp"
#include "ENUM_MenuNavigationInput_structs.hpp"
#include "ENUM_MFDTabCategory_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_CursorMode_structs.hpp"
#include "ENUM_CardinalDirection_structs.hpp"
#include "ENUM_HotbarStyle_structs.hpp"
#include "Engine_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "STRUCT_QueuedNotification_structs.hpp"
#include "ENUM_UpgradeResult_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "ENUM_InteractResultType_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HoverItemChanged__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_PlayerHUD_C_HoverItemChanged__DelegateSignature final
{
public:
	class UITEM_Base_C*                           NewItem;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_HoverItemChanged__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_HoverItemChanged__DelegateSignature");
static_assert(sizeof(WIDGET_PlayerHUD_C_HoverItemChanged__DelegateSignature) == 0x000008, "Wrong size on WIDGET_PlayerHUD_C_HoverItemChanged__DelegateSignature");
static_assert(offsetof(WIDGET_PlayerHUD_C_HoverItemChanged__DelegateSignature, NewItem) == 0x000000, "Member 'WIDGET_PlayerHUD_C_HoverItemChanged__DelegateSignature::NewItem' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ExecuteUbergraph_WIDGET_PlayerHUD
// 0x01B0 (0x01B0 - 0x0000)
struct WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Interactable, class UPrimitiveComponent* Primitive, class FText Description)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextTyper_C*                           CallFunc_SpawnObject_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ENUM_InteractResultType FeedbackType, class FText FeedbackMessage)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	class UElectrocardiogram*                     CallFunc_SpawnObject_ReturnValue_1;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x00A8(0x0018)()
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextTyper_C*                           CallFunc_SpawnObject_ReturnValue_2;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 NewSecurityLevel)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWIDGET_HardwareButton_C*>       K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWIDGET_HardwareButton_C*               CallFunc_Array_Get_Item;                           // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue_1;               // 0x0110(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0138(0x0010)(ZeroConstructor, NoDestructor)
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InitializeSettingsForPlayerHUD_PlayerHUD_CastInput; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InitilalizeSubtitleWidget_Player_HUD_CastInput; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsUsingGamepad)>          K2Node_CreateDelegate_OutputDelegate_6;            // 0x0178(0x0010)(ZeroConstructor, NoDestructor)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD");
static_assert(sizeof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD) == 0x0001B0, "Wrong size on WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, EntryPoint) == 0x000000, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_Event_MyGeometry) == 0x000020, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_Event_InDeltaTime) == 0x000058, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000060, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000068, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_CreateDelegate_OutputDelegate_1) == 0x000074, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_SpawnObject_ReturnValue) == 0x000088, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_CreateDelegate_OutputDelegate_2) == 0x000090, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_SpawnObject_ReturnValue_1) == 0x0000A0, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_GetEmptyText_ReturnValue) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_GetGameInstance_ReturnValue) == 0x0000C0, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_SpawnObject_ReturnValue_2) == 0x0000C8, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_SpawnObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000D0, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_DynamicCast_bSuccess_1) == 0x0000D8, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000DC, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_MakeArray_Array) == 0x0000F0, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_Array_Get_Item) == 0x000100, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_Less_IntInt_ReturnValue) == 0x00010C, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_GetEmptyText_ReturnValue_1) == 0x000110, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_GetEmptyText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_CreateDelegate_OutputDelegate_4) == 0x000128, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_CreateDelegate_OutputDelegate_5) == 0x000138, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000148, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_InitializeSettingsForPlayerHUD_PlayerHUD_CastInput) == 0x000150, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_InitializeSettingsForPlayerHUD_PlayerHUD_CastInput' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_InitilalizeSubtitleWidget_Player_HUD_CastInput) == 0x000160, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_InitilalizeSubtitleWidget_Player_HUD_CastInput' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_GetPlayerController_ReturnValue) == 0x000170, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_CreateDelegate_OutputDelegate_6) == 0x000178, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_DynamicCast_AsCON_Hacker) == 0x000188, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_DynamicCast_bSuccess_2) == 0x000190, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, CallFunc_GetGameInstance_ReturnValue_1) == 0x000198, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x0001A0, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD, K2Node_DynamicCast_bSuccess_3) == 0x0001A8, "Member 'WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.Tick
// 0x003C (0x003C - 0x0000)
struct WIDGET_PlayerHUD_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_Tick) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_Tick");
static_assert(sizeof(WIDGET_PlayerHUD_C_Tick) == 0x00003C, "Wrong size on WIDGET_PlayerHUD_C_Tick");
static_assert(offsetof(WIDGET_PlayerHUD_C_Tick, MyGeometry) == 0x000000, "Member 'WIDGET_PlayerHUD_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Tick, InDeltaTime) == 0x000038, "Member 'WIDGET_PlayerHUD_C_Tick::InDeltaTime' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnScanDataChanged
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged final
{
public:
	class UObject*                                Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Primitive;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Description;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0030(0x0018)()
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ResetMessage_Result;                      // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged) == 0x000050, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged, Interactable) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged::Interactable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged, Primitive) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged::Primitive' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged, Description) == 0x000010, "Member 'WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged::Description' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged, CallFunc_TextIsEmpty_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged, CallFunc_GetEmptyText_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged, CallFunc_NotEqual_TextText_ReturnValue) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged, CallFunc_ResetMessage_Result) == 0x00004D, "Member 'WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged::CallFunc_ResetMessage_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.CanDisplayDescription
// 0x0006 (0x0006 - 0x0000)
struct WIDGET_PlayerHUD_C_CanDisplayDescription final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_CanDisplayDescription) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_CanDisplayDescription");
static_assert(sizeof(WIDGET_PlayerHUD_C_CanDisplayDescription) == 0x000006, "Wrong size on WIDGET_PlayerHUD_C_CanDisplayDescription");
static_assert(offsetof(WIDGET_PlayerHUD_C_CanDisplayDescription, Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_CanDisplayDescription::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CanDisplayDescription, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'WIDGET_PlayerHUD_C_CanDisplayDescription::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CanDisplayDescription, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WIDGET_PlayerHUD_C_CanDisplayDescription::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CanDisplayDescription, CallFunc_IsFalling_ReturnValue) == 0x000003, "Member 'WIDGET_PlayerHUD_C_CanDisplayDescription::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CanDisplayDescription, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'WIDGET_PlayerHUD_C_CanDisplayDescription::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CanDisplayDescription, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'WIDGET_PlayerHUD_C_CanDisplayDescription::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnHealthChanged
// 0x001C (0x001C - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnHealthChanged final
{
public:
	float                                         Curr_Value;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Prev_Value;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Value;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EModApplyType                                 Apply_Type;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnHealthChanged) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnHealthChanged");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnHealthChanged) == 0x00001C, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnHealthChanged");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHealthChanged, Curr_Value) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHealthChanged::Curr_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHealthChanged, Prev_Value) == 0x000004, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHealthChanged::Prev_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHealthChanged, Max_Value) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHealthChanged::Max_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHealthChanged, Apply_Type) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHealthChanged::Apply_Type' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHealthChanged, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHealthChanged::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHealthChanged, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHealthChanged::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHealthChanged, CallFunc_FTrunc_ReturnValue_1) == 0x000018, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHealthChanged::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnEnergyChanged
// 0x001C (0x001C - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged final
{
public:
	float                                         Curr_Value;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Prev_Value;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Value;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EModApplyType                                 Apply_Type;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged) == 0x00001C, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged, Curr_Value) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged::Curr_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged, Prev_Value) == 0x000004, "Member 'WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged::Prev_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged, Max_Value) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged::Max_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged, Apply_Type) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged::Apply_Type' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged, CallFunc_FTrunc_ReturnValue_1) == 0x000018, "Member 'WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnStaminaChanged
// 0x001C (0x001C - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged final
{
public:
	float                                         Curr_Value;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Prev_Value;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Max_Value;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EModApplyType                                 Apply_Type;                                        // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged) == 0x00001C, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged, Curr_Value) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged::Curr_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged, Prev_Value) == 0x000004, "Member 'WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged::Prev_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged, Max_Value) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged::Max_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged, Apply_Type) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged::Apply_Type' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000016, "Member 'WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnFeedbackDataChanged
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged final
{
public:
	ENUM_InteractResultType                       Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Message;                                           // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector2D                              CallFunc_GetDimensionsForNewText_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0028(0x0018)()
	float                                         CallFunc_BreakVector2D_X;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTextMessage_Result;                    // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged) == 0x000050, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged, Type) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged::Type' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged, Message) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged::Message' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged, CallFunc_GetDimensionsForNewText_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged::CallFunc_GetDimensionsForNewText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged, CallFunc_GetEmptyText_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged, CallFunc_BreakVector2D_X) == 0x000040, "Member 'WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged, CallFunc_BreakVector2D_Y) == 0x000044, "Member 'WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged, CallFunc_NotEqual_TextText_ReturnValue) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged, CallFunc_TextIsEmpty_ReturnValue) == 0x00004D, "Member 'WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged, CallFunc_Not_PreBool_ReturnValue) == 0x00004E, "Member 'WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged, CallFunc_SetTextMessage_Result) == 0x00004F, "Member 'WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged::CallFunc_SetTextMessage_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateScannerMessage
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateScannerMessage final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetCurrentMessage_Message;                // 0x0008(0x0018)()
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateScannerMessage) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateScannerMessage");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateScannerMessage) == 0x000020, "Wrong size on WIDGET_PlayerHUD_C_UpdateScannerMessage");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScannerMessage, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateScannerMessage::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScannerMessage, CallFunc_GetCurrentMessage_Message) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateScannerMessage::CallFunc_GetCurrentMessage_Message' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetAdjacentMultiFunctionDisplayTab
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab final
{
public:
	ENUM_MFDTabCategory                           Tab;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Previous;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MFDTabCategory                           AdjacentTab;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntLowerbound_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntUpperbound_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab) == 0x000028, "Wrong size on WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, Tab) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::Tab' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, Previous) == 0x000001, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::Previous' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, AdjacentTab) == 0x000002, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::AdjacentTab' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, Temp_bool_Variable) == 0x000003, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, Temp_int_Variable) == 0x000008, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, Temp_int_Variable_1) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, CallFunc_MakeLiteralInt_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, K2Node_Select_Default) == 0x000014, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, CallFunc_WrapIntLowerbound_ReturnValue) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::CallFunc_WrapIntLowerbound_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, CallFunc_WrapIntUpperbound_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::CallFunc_WrapIntUpperbound_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, CallFunc_Conv_IntToByte_ReturnValue) == 0x000024, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab, CallFunc_GetValidValue_ReturnValue) == 0x000025, "Member 'WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ShowMultiFunctionDisplayTab
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab final
{
public:
	ENUM_MFDTabCategory                           Tab;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Visible;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBagUI_C*                      BagUI;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible; // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab");
static_assert(sizeof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab) == 0x000018, "Wrong size on WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab, Tab) == 0x000000, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab::Tab' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab, Visible) == 0x000001, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab::Visible' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab, BagUI) == 0x000008, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab::BagUI' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab, CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible) == 0x000011, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab::CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateInputMode
// 0x00E8 (0x00E8 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateInputMode final
{
public:
	bool                                          IsMenu_Active;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          EnableCursorTransition;                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     EquippedWeapon;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Deactivate_Result;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     CallFunc_GetEquippedWeapon_Weapon;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x006C(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateInputMode) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateInputMode");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateInputMode) == 0x0000E8, "Wrong size on WIDGET_PlayerHUD_C_UpdateInputMode");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, IsMenu_Active) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::IsMenu_Active' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, EnableCursorTransition) == 0x000001, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::EnableCursorTransition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, EquippedWeapon) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::EquippedWeapon' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_Deactivate_Result) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_Deactivate_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetEquippedWeapon_Weapon) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetEquippedWeapon_Weapon' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetPlayerController_ReturnValue_1) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetViewportSize_SizeX) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetViewportSize_SizeY) == 0x000034, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetMainMenuWidget_Result) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_Divide_IntInt_ReturnValue) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000044, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetPlayerController_ReturnValue_2) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetPlayerController_ReturnValue_3) == 0x000050, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetPlayerController_ReturnValue_4) == 0x000058, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, K2Node_DynamicCast_AsCON_Hacker) == 0x000060, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_IsUsingGamepad_Result) == 0x000069, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_IsUsingGamepad_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetCachedGeometry_ReturnValue) == 0x00006C, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetLocalSize_ReturnValue) == 0x0000A4, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0000B8, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetPosition_ReturnValue) == 0x0000C0, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000C8, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000CC, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetPlayerController_ReturnValue_5) == 0x0000D8, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateInputMode, CallFunc_GetPlayerController_ReturnValue_6) == 0x0000E0, "Member 'WIDGET_PlayerHUD_C_UpdateInputMode::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeInventoryHUD
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_PlayerHUD_C_InitializeInventoryHUD final
{
public:
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UInventoryBag_C* Bag, int32 SlotIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UInventoryBag_C*                        CallFunc_GetBagByName_Bag;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByName_Bag_1;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_InitializeInventoryHUD) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_InitializeInventoryHUD");
static_assert(sizeof(WIDGET_PlayerHUD_C_InitializeInventoryHUD) == 0x000028, "Wrong size on WIDGET_PlayerHUD_C_InitializeInventoryHUD");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeInventoryHUD, K2Node_MakeStruct_IntPoint) == 0x000000, "Member 'WIDGET_PlayerHUD_C_InitializeInventoryHUD::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeInventoryHUD, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WIDGET_PlayerHUD_C_InitializeInventoryHUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeInventoryHUD, CallFunc_GetBagByName_Bag) == 0x000018, "Member 'WIDGET_PlayerHUD_C_InitializeInventoryHUD::CallFunc_GetBagByName_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeInventoryHUD, CallFunc_GetBagByName_Bag_1) == 0x000020, "Member 'WIDGET_PlayerHUD_C_InitializeInventoryHUD::CallFunc_GetBagByName_Bag_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetBagUIParamsFromBag
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_PlayerHUD_C_GetBagUIParamsFromBag final
{
public:
	class UInventoryBag_C*                        InventoryBag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBagUI_C*                      BagUI;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        BagMeshWidget;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory_1;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetBagUIParamsFromBag) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GetBagUIParamsFromBag");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetBagUIParamsFromBag) == 0x000038, "Wrong size on WIDGET_PlayerHUD_C_GetBagUIParamsFromBag");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBagUIParamsFromBag, InventoryBag) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetBagUIParamsFromBag::InventoryBag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBagUIParamsFromBag, BagUI) == 0x000008, "Member 'WIDGET_PlayerHUD_C_GetBagUIParamsFromBag::BagUI' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBagUIParamsFromBag, BagMeshWidget) == 0x000010, "Member 'WIDGET_PlayerHUD_C_GetBagUIParamsFromBag::BagMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBagUIParamsFromBag, CallFunc_GetInventory_Inventory) == 0x000018, "Member 'WIDGET_PlayerHUD_C_GetBagUIParamsFromBag::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBagUIParamsFromBag, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_GetBagUIParamsFromBag::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBagUIParamsFromBag, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'WIDGET_PlayerHUD_C_GetBagUIParamsFromBag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBagUIParamsFromBag, CallFunc_GetInventory_Inventory_1) == 0x000028, "Member 'WIDGET_PlayerHUD_C_GetBagUIParamsFromBag::CallFunc_GetInventory_Inventory_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBagUIParamsFromBag, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000030, "Member 'WIDGET_PlayerHUD_C_GetBagUIParamsFromBag::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TakeAllLoot
// 0x0003 (0x0003 - 0x0000)
struct WIDGET_PlayerHUD_C_TakeAllLoot final
{
public:
	bool                                          CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TakeAllItems_Result;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_TakeAllLoot) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_TakeAllLoot");
static_assert(sizeof(WIDGET_PlayerHUD_C_TakeAllLoot) == 0x000003, "Wrong size on WIDGET_PlayerHUD_C_TakeAllLoot");
static_assert(offsetof(WIDGET_PlayerHUD_C_TakeAllLoot, CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible) == 0x000000, "Member 'WIDGET_PlayerHUD_C_TakeAllLoot::CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TakeAllLoot, CallFunc_TakeAllItems_Result) == 0x000001, "Member 'WIDGET_PlayerHUD_C_TakeAllLoot::CallFunc_TakeAllItems_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TakeAllLoot, CallFunc_IsVisible_ReturnValue) == 0x000002, "Member 'WIDGET_PlayerHUD_C_TakeAllLoot::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ShowLootWindow
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_PlayerHUD_C_ShowLootWindow final
{
public:
	class UCOMP_Inventory_C*                      InLootInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBagByIndex_Bag;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_ShowLootWindow) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_ShowLootWindow");
static_assert(sizeof(WIDGET_PlayerHUD_C_ShowLootWindow) == 0x000020, "Wrong size on WIDGET_PlayerHUD_C_ShowLootWindow");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowLootWindow, InLootInventory) == 0x000000, "Member 'WIDGET_PlayerHUD_C_ShowLootWindow::InLootInventory' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowLootWindow, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_ShowLootWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowLootWindow, CallFunc_GetBagByIndex_Bag) == 0x000010, "Member 'WIDGET_PlayerHUD_C_ShowLootWindow::CallFunc_GetBagByIndex_Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowLootWindow, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_ShowLootWindow::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HideLootWindow
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_PlayerHUD_C_HideLootWindow final
{
public:
	bool                                          ShouldCloseMFD;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_HideLootWindow) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_HideLootWindow");
static_assert(sizeof(WIDGET_PlayerHUD_C_HideLootWindow) == 0x000028, "Wrong size on WIDGET_PlayerHUD_C_HideLootWindow");
static_assert(offsetof(WIDGET_PlayerHUD_C_HideLootWindow, ShouldCloseMFD) == 0x000000, "Member 'WIDGET_PlayerHUD_C_HideLootWindow::ShouldCloseMFD' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HideLootWindow, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'WIDGET_PlayerHUD_C_HideLootWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HideLootWindow, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'WIDGET_PlayerHUD_C_HideLootWindow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HideLootWindow, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_HideLootWindow::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HideLootWindow, K2Node_DynamicCast_AsINTERF_Interactable) == 0x000010, "Member 'WIDGET_PlayerHUD_C_HideLootWindow::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HideLootWindow, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WIDGET_PlayerHUD_C_HideLootWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HideLootWindow, CallFunc_StopChanneling_Result) == 0x000021, "Member 'WIDGET_PlayerHUD_C_HideLootWindow::CallFunc_StopChanneling_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateLootPanelPosition
// 0x0058 (0x0058 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateLootPanelPosition final
{
public:
	float                                         VerticalOffset;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGridHeight_Result;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridHeight_Result_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateLootPanelPosition");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition) == 0x000058, "Wrong size on WIDGET_PlayerHUD_C_UpdateLootPanelPosition");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, VerticalOffset) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::VerticalOffset' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_GetGridHeight_Result) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_GetGridHeight_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000014, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_Multiply_IntInt_ReturnValue) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_GetGridHeight_Result_1) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_GetGridHeight_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_MakeLiteralFloat_ReturnValue) == 0x00002C, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_GetPosition_ReturnValue) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_BreakVector2D_X) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_BreakVector2D_Y) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateLootPanelPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000050, "Member 'WIDGET_PlayerHUD_C_UpdateLootPanelPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.PickupItemAtCurrentGridLocation
// 0x0408 (0x0408 - 0x0000)
struct WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation final
{
public:
	class UInventoryBag_C*                        InventoryBag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        BagWidget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MouseScreenPosition;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            ReturnValue;                                       // 0x0018(0x00B8)(Parm, OutParm, ReturnParm)
	int32                                         SlotIndex;                                         // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              OffsetCursorGridCoords;                            // 0x00D4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CursorGridCoords;                                  // 0x00DC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x00E8(0x00B8)()
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B3[0x5];                                      // 0x01B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_PickupItemAtSlotIndex_ReturnValue;        // 0x01B8(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0270(0x00B8)()
	int32                                         CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex; // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_GetCursorGridCoordinatesForBag_ResultCoords; // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_1;                  // 0x0340(0x00B8)()
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex_1; // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation");
static_assert(sizeof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation) == 0x000408, "Wrong size on WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, InventoryBag) == 0x000000, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::InventoryBag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, BagWidget) == 0x000008, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::BagWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, MouseScreenPosition) == 0x000010, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::MouseScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, SlotIndex) == 0x0000D0, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, OffsetCursorGridCoords) == 0x0000D4, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::OffsetCursorGridCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CursorGridCoords) == 0x0000DC, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CursorGridCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_Unhandled_ReturnValue) == 0x0000E8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_GetCursorItem_Result) == 0x0001A0, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x0001A8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_IsValid_ReturnValue) == 0x0001B0, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_IsValid_ReturnValue_1) == 0x0001B1, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_Not_PreBool_ReturnValue) == 0x0001B2, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_PickupItemAtSlotIndex_ReturnValue) == 0x0001B8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_PickupItemAtSlotIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_Handled_ReturnValue) == 0x000270, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex) == 0x000328, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00032C, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_GetCursorGridCoordinatesForBag_ResultCoords) == 0x000330, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_GetCursorGridCoordinatesForBag_ResultCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000338, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_Add_IntInt_ReturnValue_1) == 0x00033C, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_Unhandled_ReturnValue_1) == 0x000340, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_Unhandled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, K2Node_MakeStruct_IntPoint) == 0x0003F8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000400, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation, CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex_1) == 0x000404, "Member 'WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation::CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnCameraPanelMouseDown
// 0x0578 (0x0578 - 0x0000)
struct WIDGET_PlayerHUD_C_OnCameraPanelMouseDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          DoubleClick;                                       // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	class UITEM_Base_C*                           LastCursorItem;                                    // 0x0168(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0184(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UndoCursorItemMove_Result;                // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_1;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0198(0x00B8)()
	bool                                          CallFunc_HandleItemWorldInteraction_Success;       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_2;                   // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0268(0x00B8)()
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_1; // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInventoryContextMenuEnabled_Result;    // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1; // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A[0x6];                                      // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0338(0x00B8)()
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_3;                   // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_1;                  // 0x0400(0x00B8)()
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_2;                  // 0x04C0(0x00B8)()
};
static_assert(alignof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_OnCameraPanelMouseDown");
static_assert(sizeof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown) == 0x000578, "Wrong size on WIDGET_PlayerHUD_C_OnCameraPanelMouseDown");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, MyGeometry) == 0x000000, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, MouseEvent) == 0x000038, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, DoubleClick) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::DoubleClick' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, ReturnValue) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, LastCursorItem) == 0x000168, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::LastCursorItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000170, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_GetCursorItem_Result) == 0x000178, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000184, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_UndoCursorItemMove_Result) == 0x00018C, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_UndoCursorItemMove_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_GetCursorItem_Result_1) == 0x000190, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_GetCursorItem_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_Handled_ReturnValue) == 0x000198, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_HandleItemWorldInteraction_Success) == 0x000250, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_HandleItemWorldInteraction_Success' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_GetCursorItem_Result_2) == 0x000258, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_GetCursorItem_Result_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_IsValid_ReturnValue_1) == 0x000260, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_Handled_ReturnValue_1) == 0x000268, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_1) == 0x000320, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_SetInventoryContextMenuEnabled_Result) == 0x000328, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_SetInventoryContextMenuEnabled_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1) == 0x000329, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000330, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_Unhandled_ReturnValue) == 0x000338, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_IsValid_ReturnValue_2) == 0x0003F0, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_GetCursorItem_Result_3) == 0x0003F8, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_GetCursorItem_Result_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_Unhandled_ReturnValue_1) == 0x000400, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_Unhandled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_IsValid_ReturnValue_3) == 0x0004B8, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCameraPanelMouseDown, CallFunc_Unhandled_ReturnValue_2) == 0x0004C0, "Member 'WIDGET_PlayerHUD_C_OnCameraPanelMouseDown::CallFunc_Unhandled_ReturnValue_2' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateTargetBracketsOrDeactivate
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate final
{
public:
	struct FVector2D                              CursorScreenPosition;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        TargetShapeComponent;                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      PlayerController;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateInteractionBrackets_Result;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate) == 0x000020, "Wrong size on WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate, CursorScreenPosition) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate::CursorScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate, TargetShapeComponent) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate::TargetShapeComponent' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate, PlayerController) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate::PlayerController' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate, CallFunc_UpdateInteractionBrackets_Result) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate::CallFunc_UpdateInteractionBrackets_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.PickupItemAtSlotIndex
// 0x0330 (0x0330 - 0x0000)
struct WIDGET_PlayerHUD_C_PickupItemAtSlotIndex final
{
public:
	class UInventoryBag_C*                        InventoryBag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        BagWidget;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MouseScreenPosition;                               // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            ReturnValue;                                       // 0x0020(0x00B8)(Parm, OutParm, ReturnParm)
	class UITEM_Base_C*                           AmmoItem;                                          // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        PreviousAmmoBag;                                   // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      SourceInventory;                                   // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      TargetInventory;                                   // 0x00F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_HackerInventory_C*                PlayerInventory;                                   // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ModeIndex;                                         // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     WeaponItem;                                        // 0x0108(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              OffsetCursorGridCoords;                            // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CursorGridCoords;                                  // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           SlotItemAtCursor;                                  // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_1;                   // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_Result;                           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_2;                   // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character_1;            // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UndoCursorItemMove_Result;                // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanAddItem_Result;                        // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RemoveItem_Result;                        // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddItem_Result_1;                         // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddItem_Result_2;                         // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_177[0x1];                                      // 0x0177(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory_1;                 // 0x0178(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInputKeyDown_ReturnValue;               // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_3;                   // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemRotated_Result;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCurrentMode_Result;                    // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryBeginReloading_Result;                 // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AB[0x5];                                      // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponModeIndexForAmmo_ModeIndex;      // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_4;                   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponModKit_Base_C*              K2Node_DynamicCast_AsITEM_Weapon_Mod_Kit_Base;     // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     K2Node_DynamicCast_AsITEM_Weapon_Base;             // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_5;                   // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_6;                   // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetRotatedGridSize_Result;                // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_7;                   // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveItem_Result;                          // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20A[0x2];                                      // 0x020A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetWindowPointFromScreenPoint_ReturnValue; // 0x020C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateCursorGridCoordinatesForBag_Result; // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_Result;                      // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryInstallOnSpecificWeapon_Result;        // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MoveItem_Result_1;                        // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21F[0x1];                                      // 0x021F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSlotItemClass_Result;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSlotIndicesForItemWithSize_SlotIndices; // 0x0230(0x0010)(ReferenceParm)
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITEM_Base_C*>                   CallFunc_GetItemsInSlots_Items;                    // 0x0248(0x0010)(ReferenceParm)
	class UITEM_Base_C*                           CallFunc_Array_Get_Item;                           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0265(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryPlayPickupAnimFromMFD_Result;          // 0x0266(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0267(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_RemoveItem_RemovedItem;                   // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0278(0x00B8)()
};
static_assert(alignof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_PickupItemAtSlotIndex");
static_assert(sizeof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex) == 0x000330, "Wrong size on WIDGET_PlayerHUD_C_PickupItemAtSlotIndex");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, InventoryBag) == 0x000000, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::InventoryBag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, BagWidget) == 0x000008, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::BagWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, SlotIndex) == 0x000010, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, MouseScreenPosition) == 0x000014, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::MouseScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, AmmoItem) == 0x0000D8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::AmmoItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, PreviousAmmoBag) == 0x0000E0, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::PreviousAmmoBag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, SourceInventory) == 0x0000E8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::SourceInventory' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, TargetInventory) == 0x0000F0, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::TargetInventory' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, PlayerInventory) == 0x0000F8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::PlayerInventory' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, ModeIndex) == 0x000100, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::ModeIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, WeaponItem) == 0x000108, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::WeaponItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, OffsetCursorGridCoords) == 0x000110, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::OffsetCursorGridCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CursorGridCoords) == 0x000118, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CursorGridCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, SlotItemAtCursor) == 0x000120, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::SlotItemAtCursor' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetCursorItem_Result) == 0x000128, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000130, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetOwnerCharacter_Character) == 0x000138, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetInventory_Inventory) == 0x000140, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetCursorItem_Result_1) == 0x000148, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetCursorItem_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_AddItem_Result) == 0x000150, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_AddItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetBag_Result) == 0x000158, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetCursorItem_Result_2) == 0x000160, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetCursorItem_Result_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetOwnerCharacter_Character_1) == 0x000168, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetOwnerCharacter_Character_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_UndoCursorItemMove_Result) == 0x000170, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_UndoCursorItemMove_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000171, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_CanAddItem_Result) == 0x000172, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_CanAddItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_RemoveItem_Result) == 0x000173, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_RemoveItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_AddItem_Result_1) == 0x000174, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_AddItem_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_AddItem_Result_2) == 0x000175, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_AddItem_Result_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_IsValid_ReturnValue) == 0x000176, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetInventory_Inventory_1) == 0x000178, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetInventory_Inventory_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000180, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetPlayerController_ReturnValue) == 0x000188, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_IsInputKeyDown_ReturnValue) == 0x000190, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_IsInputKeyDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetCursorItem_Result_3) == 0x000198, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetCursorItem_Result_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetObjectClass_ReturnValue) == 0x0001A0, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_IsItemRotated_Result) == 0x0001A8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_IsItemRotated_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_SetCurrentMode_Result) == 0x0001A9, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_SetCurrentMode_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_TryBeginReloading_Result) == 0x0001AA, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_TryBeginReloading_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetObjectClass_ReturnValue_1) == 0x0001B0, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001B8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetWeaponModeIndexForAmmo_ModeIndex) == 0x0001BC, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetWeaponModeIndexForAmmo_ModeIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetCursorItem_Result_4) == 0x0001C0, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetCursorItem_Result_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, K2Node_DynamicCast_AsITEM_Weapon_Mod_Kit_Base) == 0x0001C8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::K2Node_DynamicCast_AsITEM_Weapon_Mod_Kit_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, K2Node_DynamicCast_bSuccess) == 0x0001D0, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, K2Node_DynamicCast_AsITEM_Weapon_Base) == 0x0001D8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::K2Node_DynamicCast_AsITEM_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, K2Node_DynamicCast_bSuccess_1) == 0x0001E0, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetCursorItem_Result_5) == 0x0001E8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetCursorItem_Result_5' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetCursorItem_Result_6) == 0x0001F0, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetCursorItem_Result_6' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetRotatedGridSize_Result) == 0x0001F8, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetRotatedGridSize_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetCursorItem_Result_7) == 0x000200, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetCursorItem_Result_7' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_MoveItem_Result) == 0x000208, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_MoveItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_IsValid_ReturnValue_1) == 0x000209, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetWindowPointFromScreenPoint_ReturnValue) == 0x00020C, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetWindowPointFromScreenPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_UpdateCursorGridCoordinatesForBag_Result) == 0x000214, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_UpdateCursorGridCoordinatesForBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetSlotIndex_Result) == 0x000218, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00021C, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_TryInstallOnSpecificWeapon_Result) == 0x00021D, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_TryInstallOnSpecificWeapon_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_MoveItem_Result_1) == 0x00021E, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_MoveItem_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetObjectClass_ReturnValue_2) == 0x000220, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_CanSlotItemClass_Result) == 0x000228, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_CanSlotItemClass_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetSlotIndicesForItemWithSize_SlotIndices) == 0x000230, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetSlotIndicesForItemWithSize_SlotIndices' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetSlotItem_Item) == 0x000240, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_GetItemsInSlots_Items) == 0x000248, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_GetItemsInSlots_Items' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_Array_Get_Item) == 0x000258, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_Array_Length_ReturnValue) == 0x000260, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000264, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000265, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_TryPlayPickupAnimFromMFD_Result) == 0x000266, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_TryPlayPickupAnimFromMFD_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_IsValid_ReturnValue_2) == 0x000267, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_IsValid_ReturnValue_3) == 0x000268, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_RemoveItem_RemovedItem) == 0x000270, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_RemoveItem_RemovedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_PickupItemAtSlotIndex, CallFunc_Handled_ReturnValue) == 0x000278, "Member 'WIDGET_PlayerHUD_C_PickupItemAtSlotIndex::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateCursorItem
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateCursorItem final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_CursorMode                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CursorMode                               Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemRotated_Result;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_1;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetRotatedGridSize_Result;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_2;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetRotatedGridSize_Result_1;              // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_3;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_GetItemGridRenderTarget_Result;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_3;                   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_CursorMode                               K2Node_Select_Default;                             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateCursorItem) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateCursorItem");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateCursorItem) == 0x0000A8, "Wrong size on WIDGET_PlayerHUD_C_UpdateCursorItem");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, Temp_bool_Variable) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, Temp_byte_Variable) == 0x000001, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, Temp_byte_Variable_1) == 0x000002, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_GetCursorItem_Result) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_IsItemRotated_Result) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_IsItemRotated_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_GetCursorItem_Result_1) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_GetCursorItem_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_GetRotatedGridSize_Result) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_GetRotatedGridSize_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000044, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_FTrunc_ReturnValue) == 0x000050, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000054, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_GetCursorItem_Result_2) == 0x000058, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_GetCursorItem_Result_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000060, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_GetRotatedGridSize_Result_1) == 0x000064, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_GetRotatedGridSize_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_FTrunc_ReturnValue_1) == 0x00006C, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, K2Node_MakeStruct_IntPoint) == 0x000070, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x000078, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_Multiply_IntFloat_ReturnValue_3) == 0x00007C, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_Multiply_IntFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_GetItemGridRenderTarget_Result) == 0x000080, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_GetItemGridRenderTarget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_MakeVector2D_ReturnValue) == 0x000088, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_GetCursorItem_Result_3) == 0x000090, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_GetCursorItem_Result_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000098, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_Not_PreBool_ReturnValue) == 0x0000A1, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, K2Node_Select_Default) == 0x0000A2, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorItem, CallFunc_IsValid_ReturnValue_1) == 0x0000A3, "Member 'WIDGET_PlayerHUD_C_UpdateCursorItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TryRotateCursorItem
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_PlayerHUD_C_TryRotateCursorItem final
{
public:
	class UITEM_Base_C*                           CursorItem;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRotateItem_Result;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryRotateItem_RequiresUnslot;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_TryRotateCursorItem) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_TryRotateCursorItem");
static_assert(sizeof(WIDGET_PlayerHUD_C_TryRotateCursorItem) == 0x000018, "Wrong size on WIDGET_PlayerHUD_C_TryRotateCursorItem");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryRotateCursorItem, CursorItem) == 0x000000, "Member 'WIDGET_PlayerHUD_C_TryRotateCursorItem::CursorItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryRotateCursorItem, CallFunc_GetCursorItem_Result) == 0x000008, "Member 'WIDGET_PlayerHUD_C_TryRotateCursorItem::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryRotateCursorItem, CallFunc_TryRotateItem_Result) == 0x000010, "Member 'WIDGET_PlayerHUD_C_TryRotateCursorItem::CallFunc_TryRotateItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryRotateCursorItem, CallFunc_TryRotateItem_RequiresUnslot) == 0x000011, "Member 'WIDGET_PlayerHUD_C_TryRotateCursorItem::CallFunc_TryRotateItem_RequiresUnslot' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryRotateCursorItem, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'WIDGET_PlayerHUD_C_TryRotateCursorItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetCursorGridCoordinatesForBag
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag final
{
public:
	class UInventoryBag_C*                        Bag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              ResultCoords;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Map_Find_Value;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag) == 0x000028, "Wrong size on WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag, Bag) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag::Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag, ResultCoords) == 0x000008, "Member 'WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag::ResultCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag, K2Node_MakeStruct_IntPoint) == 0x000010, "Member 'WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag, CallFunc_Map_Find_Value) == 0x000018, "Member 'WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ShowCrosshairs
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_PlayerHUD_C_ShowCrosshairs final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_ShowCrosshairs) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_ShowCrosshairs");
static_assert(sizeof(WIDGET_PlayerHUD_C_ShowCrosshairs) == 0x000002, "Wrong size on WIDGET_PlayerHUD_C_ShowCrosshairs");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowCrosshairs, Visible) == 0x000000, "Member 'WIDGET_PlayerHUD_C_ShowCrosshairs::Visible' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowCrosshairs, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WIDGET_PlayerHUD_C_ShowCrosshairs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.IsInventoryVisible
// 0x0003 (0x0003 - 0x0000)
struct WIDGET_PlayerHUD_C_IsInventoryVisible final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_IsInventoryVisible) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_IsInventoryVisible");
static_assert(sizeof(WIDGET_PlayerHUD_C_IsInventoryVisible) == 0x000003, "Wrong size on WIDGET_PlayerHUD_C_IsInventoryVisible");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsInventoryVisible, Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_IsInventoryVisible::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsInventoryVisible, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WIDGET_PlayerHUD_C_IsInventoryVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsInventoryVisible, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WIDGET_PlayerHUD_C_IsInventoryVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TryPlayPickupAnimFromMFD
// 0x00F0 (0x00F0 - 0x0000)
struct WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        PreferredBag;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreferredSlotIndex;                                // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            MontageToPlay;                                     // 0x0018(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UCOMP_HackerInventory_C*                PlayerInventory;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PickupClass;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UAnimMontage>>    Temp_softobject_Variable;                          // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanAddItem_Result;                        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UAnimMontage>>    Temp_softobject_Variable_1;                        // 0x0070(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_2; // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            CallFunc_Array_Get_Item;                           // 0x0098(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanAddItemToSlot_Result;                  // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsPICKUP_Base;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPlayHeroicAction_Result;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasDiscoveredHeroicItem_Result;           // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD");
static_assert(sizeof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD) == 0x0000F0, "Wrong size on WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, Item) == 0x000000, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, PreferredBag) == 0x000008, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::PreferredBag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, PreferredSlotIndex) == 0x000010, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::PreferredSlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, Result) == 0x000014, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, MontageToPlay) == 0x000018, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::MontageToPlay' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, PlayerInventory) == 0x000040, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::PlayerInventory' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, PickupClass) == 0x000048, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::PickupClass' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000050, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, Temp_softobject_Variable) == 0x000058, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000068, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_CanAddItem_Result) == 0x000069, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_CanAddItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, Temp_softobject_Variable_1) == 0x000070, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_Greater_IntInt_ReturnValue) == 0x000088, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_RandomInteger_ReturnValue) == 0x00008C, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_IsValidSoftObjectReference_ReturnValue_2) == 0x000090, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_IsValidSoftObjectReference_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_Array_Get_Item) == 0x000098, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_BooleanOR_ReturnValue) == 0x0000C0, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C1, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_CanAddItemToSlot_Result) == 0x0000C2, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_CanAddItemToSlot_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0000C8, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, K2Node_ClassDynamicCast_AsPICKUP_Base) == 0x0000D0, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::K2Node_ClassDynamicCast_AsPICKUP_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, K2Node_ClassDynamicCast_bSuccess) == 0x0000D8, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_CanPlayHeroicAction_Result) == 0x0000D9, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_CanPlayHeroicAction_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_GetObjectClass_ReturnValue) == 0x0000E0, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_HasDiscoveredHeroicItem_Result) == 0x0000E8, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_HasDiscoveredHeroicItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD, CallFunc_Not_PreBool_ReturnValue) == 0x0000E9, "Member 'WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TryPickupItemFromGround
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_PlayerHUD_C_TryPickupItemFromGround final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddItem_Result;                           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsItemRotated_Result;                     // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanAddItem_Result;                        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_RemoveItem_RemovedItem;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_Result_1;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_PackageBase_C*                    K2Node_DynamicCast_AsITEM_Package_Base;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenPackageIntoBag_Result;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_TryPickupItemFromGround) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_TryPickupItemFromGround");
static_assert(sizeof(WIDGET_PlayerHUD_C_TryPickupItemFromGround) == 0x000050, "Wrong size on WIDGET_PlayerHUD_C_TryPickupItemFromGround");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, Item) == 0x000000, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, Result) == 0x000008, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, CallFunc_AddItem_Result) == 0x00000A, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::CallFunc_AddItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, CallFunc_IsItemRotated_Result) == 0x00000B, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::CallFunc_IsItemRotated_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, CallFunc_GetBag_Result) == 0x000010, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, CallFunc_CanAddItem_Result) == 0x000019, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::CallFunc_CanAddItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, CallFunc_RemoveItem_RemovedItem) == 0x000020, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::CallFunc_RemoveItem_RemovedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, CallFunc_AddItem_Result_1) == 0x000028, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::CallFunc_AddItem_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, K2Node_DynamicCast_AsITEM_Package_Base) == 0x000030, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::K2Node_DynamicCast_AsITEM_Package_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, CallFunc_OpenPackageIntoBag_Result) == 0x000039, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::CallFunc_OpenPackageIntoBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, CallFunc_GetCursorItem_Result) == 0x000040, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryPickupItemFromGround, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'WIDGET_PlayerHUD_C_TryPickupItemFromGround::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TryCompleteItemPickupQuest
// 0x0088 (0x0088 - 0x0000)
struct WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest final
{
public:
	class UClass*                                 PickupClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FDataTableRowHandle>            Temp_struct_Variable;                              // 0x0010(0x0010)(ReferenceParm)
	TArray<struct FDataTableRowHandle>            Temp_struct_Variable_1;                            // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0048(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SetCompletedStoryQuest_LogString;         // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest");
static_assert(sizeof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest) == 0x000088, "Wrong size on WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, PickupClass) == 0x000000, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::PickupClass' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, GameInstance) == 0x000008, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::GameInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, Temp_struct_Variable) == 0x000010, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, Temp_struct_Variable_1) == 0x000020, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, Temp_int_Array_Index_Variable) == 0x000034, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, CallFunc_Array_Get_Item) == 0x000048, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, CallFunc_Array_Length_ReturnValue_1) == 0x000058, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00005D, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, CallFunc_GetGameInstance_ReturnValue) == 0x000060, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, CallFunc_SetCompletedStoryQuest_LogString) == 0x000068, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::CallFunc_SetCompletedStoryQuest_LogString' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, K2Node_DynamicCast_AsGI_Single_Player) == 0x000078, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.AutoEquipItem
// 0x00B8 (0x00B8 - 0x0000)
struct WIDGET_PlayerHUD_C_AutoEquipItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           RemovedItem;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   EquipMessage;                                      // 0x0010(0x0018)(Edit, BlueprintVisible)
	class UITEM_PackageBase_C*                    PackageItem;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 PickupClass;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetBestPickupClass_Result;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GenerateEquipMessageForItem_Text;         // 0x0040(0x0018)()
	class FText                                   CallFunc_GenerateEquipMessageForItem_Text_1;       // 0x0058(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0070(0x0020)(HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_RemoveItem_RemovedItem;                   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_Result;                           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_PackageBase_C*                    K2Node_DynamicCast_AsITEM_Package_Base;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OpenPackageIntoInventory_Result;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryPlayPickupAnimFromMFD_Result;          // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_AutoEquipItem) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_AutoEquipItem");
static_assert(sizeof(WIDGET_PlayerHUD_C_AutoEquipItem) == 0x0000B8, "Wrong size on WIDGET_PlayerHUD_C_AutoEquipItem");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, Item) == 0x000000, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, RemovedItem) == 0x000008, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::RemovedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, EquipMessage) == 0x000010, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::EquipMessage' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, PackageItem) == 0x000028, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::PackageItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, PickupClass) == 0x000030, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::PickupClass' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, CallFunc_GetBestPickupClass_Result) == 0x000038, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::CallFunc_GetBestPickupClass_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, CallFunc_GenerateEquipMessageForItem_Text) == 0x000040, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::CallFunc_GenerateEquipMessageForItem_Text' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, CallFunc_GenerateEquipMessageForItem_Text_1) == 0x000058, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::CallFunc_GenerateEquipMessageForItem_Text_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000070, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, CallFunc_GetBag_Result) == 0x000090, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, CallFunc_RemoveItem_RemovedItem) == 0x000098, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::CallFunc_RemoveItem_RemovedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, CallFunc_AddItem_Result) == 0x0000A0, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::CallFunc_AddItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, K2Node_DynamicCast_AsITEM_Package_Base) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::K2Node_DynamicCast_AsITEM_Package_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, CallFunc_OpenPackageIntoInventory_Result) == 0x0000B1, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::CallFunc_OpenPackageIntoInventory_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_AutoEquipItem, CallFunc_TryPlayPickupAnimFromMFD_Result) == 0x0000B2, "Member 'WIDGET_PlayerHUD_C_AutoEquipItem::CallFunc_TryPlayPickupAnimFromMFD_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GenerateEquipMessageForItem
// 0x0068 (0x0068 - 0x0000)
struct WIDGET_PlayerHUD_C_GenerateEquipMessageForItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetUpgradeMessageFromResult_Result;       // 0x0030(0x0018)()
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetPickupMessageForItemClass_Result;      // 0x0050(0x0018)()
};
static_assert(alignof(WIDGET_PlayerHUD_C_GenerateEquipMessageForItem) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GenerateEquipMessageForItem");
static_assert(sizeof(WIDGET_PlayerHUD_C_GenerateEquipMessageForItem) == 0x000068, "Wrong size on WIDGET_PlayerHUD_C_GenerateEquipMessageForItem");
static_assert(offsetof(WIDGET_PlayerHUD_C_GenerateEquipMessageForItem, Item) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GenerateEquipMessageForItem::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GenerateEquipMessageForItem, Text) == 0x000008, "Member 'WIDGET_PlayerHUD_C_GenerateEquipMessageForItem::Text' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GenerateEquipMessageForItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_GenerateEquipMessageForItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GenerateEquipMessageForItem, CallFunc_GetObjectClass_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_GenerateEquipMessageForItem::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GenerateEquipMessageForItem, CallFunc_GetUpgradeMessageFromResult_Result) == 0x000030, "Member 'WIDGET_PlayerHUD_C_GenerateEquipMessageForItem::CallFunc_GetUpgradeMessageFromResult_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GenerateEquipMessageForItem, CallFunc_GetObjectClass_ReturnValue_1) == 0x000048, "Member 'WIDGET_PlayerHUD_C_GenerateEquipMessageForItem::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GenerateEquipMessageForItem, CallFunc_GetPickupMessageForItemClass_Result) == 0x000050, "Member 'WIDGET_PlayerHUD_C_GenerateEquipMessageForItem::CallFunc_GetPickupMessageForItemClass_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.BindUpgradeEvent
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_PlayerHUD_C_BindUpgradeEvent final
{
public:
	TDelegate<void(class UClass* UpgradeClass, class UClass* DowngradeClass, ENUM_UpgradeResult Result)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_BindUpgradeEvent) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_BindUpgradeEvent");
static_assert(sizeof(WIDGET_PlayerHUD_C_BindUpgradeEvent) == 0x000010, "Wrong size on WIDGET_PlayerHUD_C_BindUpgradeEvent");
static_assert(offsetof(WIDGET_PlayerHUD_C_BindUpgradeEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WIDGET_PlayerHUD_C_BindUpgradeEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UnbindUpgradeEvent
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_PlayerHUD_C_UnbindUpgradeEvent final
{
public:
	TDelegate<void(class UClass* UpgradeClass, class UClass* DowngradeClass, ENUM_UpgradeResult Result)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UnbindUpgradeEvent) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_UnbindUpgradeEvent");
static_assert(sizeof(WIDGET_PlayerHUD_C_UnbindUpgradeEvent) == 0x000010, "Wrong size on WIDGET_PlayerHUD_C_UnbindUpgradeEvent");
static_assert(offsetof(WIDGET_PlayerHUD_C_UnbindUpgradeEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UnbindUpgradeEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnPlayerBagChanged
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged final
{
public:
	class UInventoryBag_C*                        Bag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CursorItem;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged) == 0x000028, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged, Bag) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged::Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged, SlotIndex) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged, CursorItem) == 0x000010, "Member 'WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged::CursorItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00001B, "Member 'WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged, CallFunc_GetCursorItem_Result) == 0x000020, "Member 'WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged::CallFunc_GetCursorItem_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnItemUpgraded
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnItemUpgraded final
{
public:
	class UClass*                                 UpgradeClass;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 DowngradeClass;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpgradeResult                            UpgradeResult_0;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnItemUpgraded) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnItemUpgraded");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnItemUpgraded) == 0x000018, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnItemUpgraded");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnItemUpgraded, UpgradeClass) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnItemUpgraded::UpgradeClass' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnItemUpgraded, DowngradeClass) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnItemUpgraded::DowngradeClass' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnItemUpgraded, UpgradeResult_0) == 0x000010, "Member 'WIDGET_PlayerHUD_C_EVENT_OnItemUpgraded::UpgradeResult_0' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ShowHardwareIcons
// 0x0003 (0x0003 - 0x0000)
struct WIDGET_PlayerHUD_C_ShowHardwareIcons final
{
public:
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_ShowHardwareIcons) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_ShowHardwareIcons");
static_assert(sizeof(WIDGET_PlayerHUD_C_ShowHardwareIcons) == 0x000003, "Wrong size on WIDGET_PlayerHUD_C_ShowHardwareIcons");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowHardwareIcons, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000000, "Member 'WIDGET_PlayerHUD_C_ShowHardwareIcons::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowHardwareIcons, CallFunc_Less_FloatFloat_ReturnValue) == 0x000001, "Member 'WIDGET_PlayerHUD_C_ShowHardwareIcons::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowHardwareIcons, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WIDGET_PlayerHUD_C_ShowHardwareIcons::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HideHardwareIcons
// 0x0003 (0x0003 - 0x0000)
struct WIDGET_PlayerHUD_C_HideHardwareIcons final
{
public:
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_HideHardwareIcons) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_HideHardwareIcons");
static_assert(sizeof(WIDGET_PlayerHUD_C_HideHardwareIcons) == 0x000003, "Wrong size on WIDGET_PlayerHUD_C_HideHardwareIcons");
static_assert(offsetof(WIDGET_PlayerHUD_C_HideHardwareIcons, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000000, "Member 'WIDGET_PlayerHUD_C_HideHardwareIcons::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HideHardwareIcons, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000001, "Member 'WIDGET_PlayerHUD_C_HideHardwareIcons::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HideHardwareIcons, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'WIDGET_PlayerHUD_C_HideHardwareIcons::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHardwareIcons
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateHardwareIcons final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HardwareMoveOffsetScale;                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x1];                                       // 0x005B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateHardwareIcons) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateHardwareIcons");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateHardwareIcons) == 0x000070, "Wrong size on WIDGET_PlayerHUD_C_UpdateHardwareIcons");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, DeltaTime) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::DeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, HardwareMoveOffsetScale) == 0x000004, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::HardwareMoveOffsetScale' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_GetPosition_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_BreakVector2D_X) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_BreakVector2D_Y) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_Ease_ReturnValue) == 0x000024, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_MakeVector2D_ReturnValue) == 0x00002C, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000034, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_GetPosition_ReturnValue_1) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_BreakVector2D_X_1) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_BreakVector2D_Y_1) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_MakeVector2D_ReturnValue_1) == 0x000050, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000059, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_Greater_IntInt_ReturnValue) == 0x00005A, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00005C, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000060, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000064, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHardwareIcons, CallFunc_FClamp_ReturnValue) == 0x00006C, "Member 'WIDGET_PlayerHUD_C_UpdateHardwareIcons::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHUD
// 0x005C (0x005C - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateHUD final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetViewportWidgetGeometry_ReturnValue;    // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateHUD) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateHUD");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateHUD) == 0x00005C, "Wrong size on WIDGET_PlayerHUD_C_UpdateHUD");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHUD, DeltaTime) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateHUD::DeltaTime' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHUD, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'WIDGET_PlayerHUD_C_UpdateHUD::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHUD, CallFunc_GetViewportWidgetGeometry_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateHUD::CallFunc_GetViewportWidgetGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHUD, CallFunc_GetLocalSize_ReturnValue) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UpdateHUD::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHUD, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateHUD::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHUD, CallFunc_LocalToAbsolute_ReturnValue) == 0x000050, "Member 'WIDGET_PlayerHUD_C_UpdateHUD::CallFunc_LocalToAbsolute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHUD, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000058, "Member 'WIDGET_PlayerHUD_C_UpdateHUD::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateNotification
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateNotification final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ResetMessage_Result;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0018(0x0018)()
	class FText                                   CallFunc_GetCurrentMessage_Message;                // 0x0030(0x0018)()
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateNotification) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateNotification");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateNotification) == 0x000050, "Wrong size on WIDGET_PlayerHUD_C_UpdateNotification");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, Temp_byte_Variable) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, Temp_byte_Variable_1) == 0x000001, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, CallFunc_TextIsEmpty_ReturnValue) == 0x000002, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, Temp_bool_Variable) == 0x000003, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, K2Node_Select_Default) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000009, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, CallFunc_ResetMessage_Result) == 0x00000A, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::CallFunc_ResetMessage_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, CallFunc_GetEmptyText_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, CallFunc_GetCurrentMessage_Message) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::CallFunc_GetCurrentMessage_Message' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, CallFunc_TextIsEmpty_ReturnValue_1) == 0x00004D, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateNotification, CallFunc_Not_PreBool_ReturnValue) == 0x00004E, "Member 'WIDGET_PlayerHUD_C_UpdateNotification::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateScanner
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateScanner final
{
public:
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0000(0x0018)()
	struct FVector2D                              CallFunc_GetDimensionsForNewText_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetEmptyText_ReturnValue_1;               // 0x0020(0x0018)()
	float                                         CallFunc_BreakVector2D_X;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ResetMessage_Result;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanDisplayDescription_Result;             // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTextMessage_Result;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57[0x1];                                       // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMessage_Result;                        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_3;       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ResetMessage_Result_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateScanner) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateScanner");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateScanner) == 0x000070, "Wrong size on WIDGET_PlayerHUD_C_UpdateScanner");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_GetEmptyText_ReturnValue) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_GetDimensionsForNewText_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_GetDimensionsForNewText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_GetEmptyText_ReturnValue_1) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_GetEmptyText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_BreakVector2D_X) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_BreakVector2D_Y) == 0x00003C, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_ResetMessage_Result) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_ResetMessage_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000044, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_TextIsEmpty_ReturnValue) == 0x00004D, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_CanDisplayDescription_Result) == 0x00004E, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_CanDisplayDescription_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_Not_PreBool_ReturnValue) == 0x00004F, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000050, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_TextIsEmpty_ReturnValue_1) == 0x000054, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_TextIsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_SetTextMessage_Result) == 0x000055, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_SetTextMessage_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_Not_PreBool_ReturnValue_1) == 0x000056, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x000058, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00005C, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000060, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_HasMessage_Result) == 0x000061, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_HasMessage_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_GetGameTimeInSeconds_ReturnValue_3) == 0x000064, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_GetGameTimeInSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateScanner, CallFunc_ResetMessage_Result_1) == 0x000068, "Member 'WIDGET_PlayerHUD_C_UpdateScanner::CallFunc_ResetMessage_Result_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.QueueNotification
// 0x00A0 (0x00A0 - 0x0000)
struct WIDGET_PlayerHUD_C_QueueNotification final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsWarning;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MessageInQueue;                                    // 0x0019(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0030(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_1;        // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_QueuedNotification             CallFunc_Array_Get_Item;                           // 0x0050(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_2;        // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_77[0x1];                                       // 0x0077(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_QueuedNotification             K2Node_MakeStruct_STRUCT_QueuedNotification;       // 0x0078(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_QueueNotification) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_QueueNotification");
static_assert(sizeof(WIDGET_PlayerHUD_C_QueueNotification) == 0x0000A0, "Wrong size on WIDGET_PlayerHUD_C_QueueNotification");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, Message) == 0x000000, "Member 'WIDGET_PlayerHUD_C_QueueNotification::Message' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, IsWarning) == 0x000018, "Member 'WIDGET_PlayerHUD_C_QueueNotification::IsWarning' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, MessageInQueue) == 0x000019, "Member 'WIDGET_PlayerHUD_C_QueueNotification::MessageInQueue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, Temp_bool_True_if_break_was_hit_Variable) == 0x00001A, "Member 'WIDGET_PlayerHUD_C_QueueNotification::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_QueueNotification::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_QueueNotification::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WIDGET_PlayerHUD_C_QueueNotification::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_QueueNotification::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, CallFunc_GetEmptyText_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_QueueNotification::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_QueueNotification::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, CallFunc_EqualEqual_TextText_ReturnValue_1) == 0x000049, "Member 'WIDGET_PlayerHUD_C_QueueNotification::CallFunc_EqualEqual_TextText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, CallFunc_Array_Get_Item) == 0x000050, "Member 'WIDGET_PlayerHUD_C_QueueNotification::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'WIDGET_PlayerHUD_C_QueueNotification::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'WIDGET_PlayerHUD_C_QueueNotification::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, CallFunc_EqualEqual_TextText_ReturnValue_2) == 0x000075, "Member 'WIDGET_PlayerHUD_C_QueueNotification::CallFunc_EqualEqual_TextText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, CallFunc_BooleanAND_ReturnValue) == 0x000076, "Member 'WIDGET_PlayerHUD_C_QueueNotification::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, K2Node_MakeStruct_STRUCT_QueuedNotification) == 0x000078, "Member 'WIDGET_PlayerHUD_C_QueueNotification::K2Node_MakeStruct_STRUCT_QueuedNotification' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, CallFunc_Array_Add_ReturnValue) == 0x000098, "Member 'WIDGET_PlayerHUD_C_QueueNotification::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_QueueNotification, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00009C, "Member 'WIDGET_PlayerHUD_C_QueueNotification::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.IssueSecurityNotification
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_PlayerHUD_C_IssueSecurityNotification final
{
public:
	int32                                         SecurityLevel;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0008(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0058(0x0018)()
};
static_assert(alignof(WIDGET_PlayerHUD_C_IssueSecurityNotification) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_IssueSecurityNotification");
static_assert(sizeof(WIDGET_PlayerHUD_C_IssueSecurityNotification) == 0x000070, "Wrong size on WIDGET_PlayerHUD_C_IssueSecurityNotification");
static_assert(offsetof(WIDGET_PlayerHUD_C_IssueSecurityNotification, SecurityLevel) == 0x000000, "Member 'WIDGET_PlayerHUD_C_IssueSecurityNotification::SecurityLevel' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IssueSecurityNotification, K2Node_MakeStruct_FormatArgumentData) == 0x000008, "Member 'WIDGET_PlayerHUD_C_IssueSecurityNotification::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IssueSecurityNotification, K2Node_MakeArray_Array) == 0x000048, "Member 'WIDGET_PlayerHUD_C_IssueSecurityNotification::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IssueSecurityNotification, CallFunc_Format_ReturnValue) == 0x000058, "Member 'WIDGET_PlayerHUD_C_IssueSecurityNotification::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetForceHideCrosshairs
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_PlayerHUD_C_SetForceHideCrosshairs final
{
public:
	bool                                          HideState;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_SetForceHideCrosshairs) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_SetForceHideCrosshairs");
static_assert(sizeof(WIDGET_PlayerHUD_C_SetForceHideCrosshairs) == 0x000001, "Wrong size on WIDGET_PlayerHUD_C_SetForceHideCrosshairs");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetForceHideCrosshairs, HideState) == 0x000000, "Member 'WIDGET_PlayerHUD_C_SetForceHideCrosshairs::HideState' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnCrosshairVisibilityChanged
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged final
{
public:
	bool                                          ShouldEnableCrosshairs;                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_CursorMode                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_CursorMode                               Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CursorMode                               Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0008(0x0010)(NoDestructor)
	struct FAnchors                               K2Node_MakeStruct_Anchors_1;                       // 0x0018(0x0010)(NoDestructor)
	ENUM_CursorMode                               Temp_byte_Variable_3;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_CursorMode                               K2Node_Select_Default;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CursorMode                               K2Node_Select_Default_1;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged");
static_assert(sizeof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged) == 0x000050, "Wrong size on WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, ShouldEnableCrosshairs) == 0x000000, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::ShouldEnableCrosshairs' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, Temp_byte_Variable) == 0x000001, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, Temp_bool_Variable) == 0x000002, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, Temp_byte_Variable_1) == 0x000003, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, Temp_byte_Variable_2) == 0x000004, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, K2Node_MakeStruct_Anchors) == 0x000008, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, K2Node_MakeStruct_Anchors_1) == 0x000018, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::K2Node_MakeStruct_Anchors_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, Temp_byte_Variable_3) == 0x000028, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, CallFunc_IsVisible_ReturnValue) == 0x000029, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, K2Node_Select_Default) == 0x00002A, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, Temp_bool_Variable_1) == 0x00002B, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, K2Node_Select_Default_1) == 0x000038, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000040, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, CallFunc_BooleanOR_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'WIDGET_PlayerHUD_C_OnCrosshairVisibilityChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.IsCursorOverMeshWidget
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_PlayerHUD_C_IsCursorOverMeshWidget final
{
public:
	class UGridMeshWidget*                        MeshWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MouseWindowPosition;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox2D                                 CallFunc_GetProjectedWindowBounds_ReturnValue;     // 0x0014(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsPointInBox2D_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_IsCursorOverMeshWidget) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_IsCursorOverMeshWidget");
static_assert(sizeof(WIDGET_PlayerHUD_C_IsCursorOverMeshWidget) == 0x000030, "Wrong size on WIDGET_PlayerHUD_C_IsCursorOverMeshWidget");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverMeshWidget, MeshWidget) == 0x000000, "Member 'WIDGET_PlayerHUD_C_IsCursorOverMeshWidget::MeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverMeshWidget, MouseWindowPosition) == 0x000008, "Member 'WIDGET_PlayerHUD_C_IsCursorOverMeshWidget::MouseWindowPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverMeshWidget, Result) == 0x000010, "Member 'WIDGET_PlayerHUD_C_IsCursorOverMeshWidget::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverMeshWidget, CallFunc_GetProjectedWindowBounds_ReturnValue) == 0x000014, "Member 'WIDGET_PlayerHUD_C_IsCursorOverMeshWidget::CallFunc_GetProjectedWindowBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverMeshWidget, CallFunc_IsPointInBox2D_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_IsCursorOverMeshWidget::CallFunc_IsPointInBox2D_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetBestBagUnderCursor
// 0x0078 (0x0078 - 0x0000)
struct WIDGET_PlayerHUD_C_GetBestBagUnderCursor final
{
public:
	struct FVector2D                              MouseScreenPosition;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        ResultBag;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentDistance;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CurrentBag;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BestDistance;                                      // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        BestBag;                                           // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UInventoryBag_C*>                BagsUnderCursor;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInventoryBag_C*>                CallFunc_Map_Keys_Keys;                            // 0x0050(0x0010)(ReferenceParm)
	class UInventoryBag_C*                        CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCursorSeparationFromBag_ResultDistance; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GetBestBagUnderCursor");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor) == 0x000078, "Wrong size on WIDGET_PlayerHUD_C_GetBestBagUnderCursor");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, MouseScreenPosition) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::MouseScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, ResultBag) == 0x000008, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::ResultBag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, CurrentDistance) == 0x000010, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::CurrentDistance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, CurrentBag) == 0x000018, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::CurrentBag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, BestDistance) == 0x000020, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::BestDistance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, BestBag) == 0x000028, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::BestBag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, BagsUnderCursor) == 0x000030, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::BagsUnderCursor' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, Temp_int_Array_Index_Variable) == 0x000040, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, CallFunc_Map_Keys_Keys) == 0x000050, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, CallFunc_Array_Get_Item) == 0x000060, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, CallFunc_GetCursorSeparationFromBag_ResultDistance) == 0x000068, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::CallFunc_GetCursorSeparationFromBag_ResultDistance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetBestBagUnderCursor, CallFunc_Less_FloatFloat_ReturnValue) == 0x000071, "Member 'WIDGET_PlayerHUD_C_GetBestBagUnderCursor::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetCursorSeparationFromBag
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_PlayerHUD_C_GetCursorSeparationFromBag final
{
public:
	class UInventoryBag_C*                        Bag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MouseScreenPosition;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ResultDistance;                                    // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBagUI_C*                      CallFunc_GetBagUIParamsFromBag_BagUI;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCursorSeparationFromMeshWidget_ResultDistance; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetCursorSeparationFromBag) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GetCursorSeparationFromBag");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetCursorSeparationFromBag) == 0x000028, "Wrong size on WIDGET_PlayerHUD_C_GetCursorSeparationFromBag");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorSeparationFromBag, Bag) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetCursorSeparationFromBag::Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorSeparationFromBag, MouseScreenPosition) == 0x000008, "Member 'WIDGET_PlayerHUD_C_GetCursorSeparationFromBag::MouseScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorSeparationFromBag, ResultDistance) == 0x000010, "Member 'WIDGET_PlayerHUD_C_GetCursorSeparationFromBag::ResultDistance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorSeparationFromBag, CallFunc_GetBagUIParamsFromBag_BagUI) == 0x000018, "Member 'WIDGET_PlayerHUD_C_GetCursorSeparationFromBag::CallFunc_GetBagUIParamsFromBag_BagUI' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorSeparationFromBag, CallFunc_GetCursorSeparationFromMeshWidget_ResultDistance) == 0x000020, "Member 'WIDGET_PlayerHUD_C_GetCursorSeparationFromBag::CallFunc_GetCursorSeparationFromMeshWidget_ResultDistance' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetCursorSeparationFromMeshWidget
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget final
{
public:
	class UGridMeshWidget*                        MeshWidget;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MouseScreenPosition;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ResultDistance;                                    // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetWindowPointFromScreenPoint_ReturnValue; // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 CallFunc_GetProjectedWindowBounds_ReturnValue;     // 0x001C(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	float                                         CallFunc_PointBox2DSeparation_ReturnValue;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget) == 0x000038, "Wrong size on WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget, MeshWidget) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget::MeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget, MouseScreenPosition) == 0x000008, "Member 'WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget::MouseScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget, ResultDistance) == 0x000010, "Member 'WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget::ResultDistance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget, CallFunc_GetWindowPointFromScreenPoint_ReturnValue) == 0x000014, "Member 'WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget::CallFunc_GetWindowPointFromScreenPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget, CallFunc_GetProjectedWindowBounds_ReturnValue) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget::CallFunc_GetProjectedWindowBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget, CallFunc_PointBox2DSeparation_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget::CallFunc_PointBox2DSeparation_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SelectWindowTab
// 0x0006 (0x0006 - 0x0000)
struct WIDGET_PlayerHUD_C_SelectWindowTab final
{
public:
	ENUM_MFDTabCategory                           NewTabCategory;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceHideOtherTabs;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_SelectWindowTab) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_SelectWindowTab");
static_assert(sizeof(WIDGET_PlayerHUD_C_SelectWindowTab) == 0x000006, "Wrong size on WIDGET_PlayerHUD_C_SelectWindowTab");
static_assert(offsetof(WIDGET_PlayerHUD_C_SelectWindowTab, NewTabCategory) == 0x000000, "Member 'WIDGET_PlayerHUD_C_SelectWindowTab::NewTabCategory' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SelectWindowTab, ForceHideOtherTabs) == 0x000001, "Member 'WIDGET_PlayerHUD_C_SelectWindowTab::ForceHideOtherTabs' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SelectWindowTab, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'WIDGET_PlayerHUD_C_SelectWindowTab::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SelectWindowTab, K2Node_SwitchEnum_CmpSuccess_1) == 0x000003, "Member 'WIDGET_PlayerHUD_C_SelectWindowTab::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SelectWindowTab, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000004, "Member 'WIDGET_PlayerHUD_C_SelectWindowTab::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SelectWindowTab, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'WIDGET_PlayerHUD_C_SelectWindowTab::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeHotbar
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_PlayerHUD_C_InitializeHotbar final
{
public:
	bool                                          OnBeginPlay;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_HotbarStyle                              HotbarStyle;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CategoryVisibilityType;                            // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_HotbarStyle                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_HotbarStyle                              Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_HotbarStyle                              CallFunc_GetHotbarStyle_Result;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingHotbarCategories_Result;           // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default_2;                           // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_12;                             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_13;                             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_HotbarStyle                              Temp_byte_Variable_8;                              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_4;                           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_InitializeHotbar) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_InitializeHotbar");
static_assert(sizeof(WIDGET_PlayerHUD_C_InitializeHotbar) == 0x000038, "Wrong size on WIDGET_PlayerHUD_C_InitializeHotbar");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, OnBeginPlay) == 0x000000, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::OnBeginPlay' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, HotbarStyle) == 0x000001, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::HotbarStyle' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, CategoryVisibilityType) == 0x000002, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::CategoryVisibilityType' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable) == 0x000003, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_byte_Variable) == 0x000004, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_1) == 0x000005, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_2) == 0x000006, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_3) == 0x000007, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_4) == 0x000008, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_byte_Variable_1) == 0x000009, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_5) == 0x00000A, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_6) == 0x00000B, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_7) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_8) == 0x00000D, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_byte_Variable_2) == 0x00000E, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_byte_Variable_3) == 0x00000F, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_9) == 0x000010, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_byte_Variable_4) == 0x000011, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_byte_Variable_5) == 0x000012, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_10) == 0x000013, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_byte_Variable_6) == 0x000014, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_byte_Variable_7) == 0x000015, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000016, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, K2Node_Select_Default) == 0x000017, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, K2Node_Select_Default_1) == 0x000018, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000020, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, CallFunc_GetHotbarStyle_Result) == 0x000028, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::CallFunc_GetHotbarStyle_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_11) == 0x000029, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, CallFunc_IsUsingHotbarCategories_Result) == 0x00002A, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::CallFunc_IsUsingHotbarCategories_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, K2Node_Select_Default_2) == 0x00002B, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_12) == 0x00002C, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_bool_Variable_13) == 0x00002D, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, CallFunc_Not_PreBool_ReturnValue) == 0x00002E, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, K2Node_Select_Default_3) == 0x00002F, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, Temp_byte_Variable_8) == 0x000030, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, K2Node_Select_Default_4) == 0x000031, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbar, K2Node_Select_Default_5) == 0x000032, "Member 'WIDGET_PlayerHUD_C_InitializeHotbar::K2Node_Select_Default_5' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnAddedToHotbar
// 0x00D8 (0x00D8 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar final
{
public:
	class UCOMP_Hotbar_C*                         HotbarComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         SlotIndex;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  ItemMeshWidget;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           ReferencedItem;                                    // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           SlottedItem;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   HotbarSlotWidget;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotNumberFromIndex_Number;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_Result;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBag_Result_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBag_Result_2;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBagUI_C*                      CallFunc_GetBagUIParamsFromBag_BagUI;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  CallFunc_GetWidgetForItemAtSlot_ItemWidget;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UITEM_ConsumableBase_C*>         CallFunc_GetConsumableItems_ConsumableItems;       // 0x0090(0x0010)(ReferenceParm)
	class UITEM_ConsumableBase_C*                 CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           K2Node_DynamicCast_AsITEM_Base;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_HotbarSlot_C*                   CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar) == 0x0000D8, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, HotbarComponent) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::HotbarComponent' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, SlottableObject) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::SlottableObject' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, SlotIndex) == 0x000018, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, ItemMeshWidget) == 0x000020, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::ItemMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, ReferencedItem) == 0x000028, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::ReferencedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, SlottedItem) == 0x000030, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::SlottedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, HotbarSlotWidget) == 0x000038, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::HotbarSlotWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, Temp_int_Array_Index_Variable) == 0x000040, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_GetSlotNumberFromIndex_Number) == 0x000048, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_GetSlotNumberFromIndex_Number' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_GetSlotIndex_Result) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_GetSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_GetBag_Result) == 0x000050, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_GetBag_Result_1) == 0x000058, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_GetBag_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_GetBag_Result_2) == 0x000060, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_GetBag_Result_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_GetBagUIParamsFromBag_BagUI) == 0x000068, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_GetBagUIParamsFromBag_BagUI' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_GetWidgetForItemAtSlot_ItemWidget) == 0x000078, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_GetWidgetForItemAtSlot_ItemWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base) == 0x000080, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_GetConsumableItems_ConsumableItems) == 0x000090, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_GetConsumableItems_ConsumableItems' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x0000B8, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, K2Node_DynamicCast_AsITEM_Base) == 0x0000C0, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::K2Node_DynamicCast_AsITEM_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnRemovedFromHotbar
// 0x00D8 (0x00D8 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar final
{
public:
	class UCOMP_Hotbar_C*                         HotbarComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         SlotIndex;                                         // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  ItemMeshWidget;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBagUI_C*                      ReferencedBagUI;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        ReferencedBag;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           ReferencedItem;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           UnslottedItem;                                     // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   HotbarSlotWidget;                                  // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBagUI_C*                      CallFunc_GetBagUIParamsFromBag_BagUI;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotNumberFromIndex_Number;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_Result;                      // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SlottedItem_C*                  CallFunc_GetWidgetForItemAtSlot_ItemWidget;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_HandheldConsumable_Base_C*        K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UITEM_ConsumableBase_C*>         CallFunc_GetConsumableItems_ConsumableItems;       // 0x0098(0x0010)(ReferenceParm)
	class UITEM_ConsumableBase_C*                 CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           K2Node_DynamicCast_AsITEM_Base;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_HotbarSlot_C*                   CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar) == 0x0000D8, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, HotbarComponent) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::HotbarComponent' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, SlottableObject) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::SlottableObject' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, SlotIndex) == 0x000018, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, ItemMeshWidget) == 0x000020, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::ItemMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, ReferencedBagUI) == 0x000028, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::ReferencedBagUI' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, ReferencedBag) == 0x000030, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::ReferencedBag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, ReferencedItem) == 0x000038, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::ReferencedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, UnslottedItem) == 0x000040, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::UnslottedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, HotbarSlotWidget) == 0x000048, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::HotbarSlotWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_IsValid_ReturnValue_1) == 0x000055, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_GetBagUIParamsFromBag_BagUI) == 0x000060, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_GetBagUIParamsFromBag_BagUI' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_IsValid_ReturnValue_2) == 0x000068, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_GetSlotNumberFromIndex_Number) == 0x00006C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_GetSlotNumberFromIndex_Number' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_GetSlotIndex_Result) == 0x000070, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_GetSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_GetBag_Result) == 0x000078, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_GetWidgetForItemAtSlot_ItemWidget) == 0x000080, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_GetWidgetForItemAtSlot_ItemWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base) == 0x000088, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::K2Node_DynamicCast_AsITEM_Handheld_Consumable_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_GetConsumableItems_ConsumableItems) == 0x000098, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_GetConsumableItems_ConsumableItems' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_Less_IntInt_ReturnValue) == 0x0000B4, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x0000B8, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, K2Node_DynamicCast_AsITEM_Base) == 0x0000C0, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::K2Node_DynamicCast_AsITEM_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.Create Slottable Mesh Widget
// 0x00E0 (0x00E0 - 0x0000)
struct WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget final
{
public:
	class UGridMeshWidget*                        ContainerMeshWidget;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               IconTexture;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           Item;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SlottedItem_C*                  MeshWidget;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynamicMat;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SlottedItem_C*                  CurrentItemWidget;                                 // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetRotatedGridSize_Result;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetRotatedGridSize_Result_1;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemRotated_Result;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SlottedItem_C*                  CallFunc_Create_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               CallFunc_GetAnchors_ReturnValue;                   // 0x0080(0x0010)(NoDestructor)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_4;           // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget");
static_assert(sizeof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget) == 0x0000E0, "Wrong size on WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, ContainerMeshWidget) == 0x000000, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::ContainerMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, IconTexture) == 0x000008, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::IconTexture' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, Item) == 0x000010, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, MeshWidget) == 0x000018, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::MeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, DynamicMat) == 0x000020, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::DynamicMat' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CurrentItemWidget) == 0x000028, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CurrentItemWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_GetRotatedGridSize_Result) == 0x000030, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_GetRotatedGridSize_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_GetRotatedGridSize_Result_1) == 0x000038, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_GetRotatedGridSize_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000044, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_MakeVector2D_ReturnValue) == 0x000050, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_IsItemRotated_Result) == 0x000058, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_IsItemRotated_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x00005C, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_Create_ReturnValue) == 0x000060, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_GetParent_ReturnValue) == 0x000068, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_BreakVector2D_X) == 0x000070, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_BreakVector2D_Y) == 0x000074, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000078, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_GetAnchors_ReturnValue) == 0x000080, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_GetAnchors_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_Multiply_IntInt_ReturnValue) == 0x000090, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000094, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000098, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00009C, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x0000A0, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x0000A4, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x0000B8, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0000C0, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x0000C8, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_AddChild_ReturnValue) == 0x0000D0, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget, CallFunc_SlotAsCanvasSlot_ReturnValue_4) == 0x0000D8, "Member 'WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget::CallFunc_SlotAsCanvasSlot_ReturnValue_4' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.CreateSlottableMeshWidgetAtCoords
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords final
{
public:
	class UGridMeshWidget*                        ContainerMeshWidget;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              GridCoords;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             IconTexture;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           Item;                                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SlottedItem_C*                  MeshWidget;                                        // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SlottedItem_C*                  SlottableMeshWidget;                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SlottedItem_C*                  CallFunc_Create_Slottable_Mesh_Widget_MeshWidget;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetItemWidgetPositionFromCoords_ResultPosition; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords");
static_assert(sizeof(WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords) == 0x000048, "Wrong size on WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords");
static_assert(offsetof(WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords, ContainerMeshWidget) == 0x000000, "Member 'WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords::ContainerMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords, GridCoords) == 0x000008, "Member 'WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords::GridCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords, IconTexture) == 0x000010, "Member 'WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords::IconTexture' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords, Item) == 0x000018, "Member 'WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords, MeshWidget) == 0x000020, "Member 'WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords::MeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords, SlottableMeshWidget) == 0x000028, "Member 'WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords::SlottableMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords, CallFunc_Create_Slottable_Mesh_Widget_MeshWidget) == 0x000030, "Member 'WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords::CallFunc_Create_Slottable_Mesh_Widget_MeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords, CallFunc_GetItemWidgetPositionFromCoords_ResultPosition) == 0x000038, "Member 'WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords::CallFunc_GetItemWidgetPositionFromCoords_ResultPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000040, "Member 'WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeHotbarEvents
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_PlayerHUD_C_InitializeHotbarEvents final
{
public:
	TDelegate<void(class UCOMP_Hotbar_C* HotbarComponent, int32 NewSlotIndex, int32 OldSlotIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UCOMP_Hotbar_C* HotbarComponent, TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, int32 SlotIndex)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UCOMP_Hotbar_C* HotbarComponent, TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, int32 SlotIndex)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_InitializeHotbarEvents) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_InitializeHotbarEvents");
static_assert(sizeof(WIDGET_PlayerHUD_C_InitializeHotbarEvents) == 0x000030, "Wrong size on WIDGET_PlayerHUD_C_InitializeHotbarEvents");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarEvents, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarEvents::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarEvents, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarEvents::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ResetHotbarQuickslots
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_PlayerHUD_C_ResetHotbarQuickslots final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_ResetHotbarQuickslots) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_ResetHotbarQuickslots");
static_assert(sizeof(WIDGET_PlayerHUD_C_ResetHotbarQuickslots) == 0x000020, "Wrong size on WIDGET_PlayerHUD_C_ResetHotbarQuickslots");
static_assert(offsetof(WIDGET_PlayerHUD_C_ResetHotbarQuickslots, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WIDGET_PlayerHUD_C_ResetHotbarQuickslots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ResetHotbarQuickslots, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WIDGET_PlayerHUD_C_ResetHotbarQuickslots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ResetHotbarQuickslots, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_ResetHotbarQuickslots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ResetHotbarQuickslots, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_ResetHotbarQuickslots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ResetHotbarQuickslots, CallFunc_Array_Get_Item) == 0x000010, "Member 'WIDGET_PlayerHUD_C_ResetHotbarQuickslots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ResetHotbarQuickslots, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_ResetHotbarQuickslots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ToggleMultiFunctionDisplay
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay final
{
public:
	bool                                          MainDisplayVisible;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay");
static_assert(sizeof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay) == 0x000004, "Wrong size on WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay, MainDisplayVisible) == 0x000000, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay::MainDisplayVisible' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay, CallFunc_Not_PreBool_ReturnValue_1) == 0x000002, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay, CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible) == 0x000003, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay::CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeHotbarCategories
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_PlayerHUD_C_InitializeHotbarCategories final
{
public:
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_HotbarStyle                              CallFunc_GetHotbarStyle_Result;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_2; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_3; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_4; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_5; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_InitializeHotbarCategories) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_InitializeHotbarCategories");
static_assert(sizeof(WIDGET_PlayerHUD_C_InitializeHotbarCategories) == 0x000048, "Wrong size on WIDGET_PlayerHUD_C_InitializeHotbarCategories");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarCategories, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000000, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarCategories::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarCategories, CallFunc_GetHotbarStyle_Result) == 0x000008, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarCategories::CallFunc_GetHotbarStyle_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarCategories, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarCategories::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarCategories, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarCategories::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarCategories, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1) == 0x000020, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarCategories::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarCategories, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_2) == 0x000028, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarCategories::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarCategories, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_3) == 0x000030, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarCategories::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarCategories, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_4) == 0x000038, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarCategories::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarCategories, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_5) == 0x000040, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarCategories::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ItemSelectionRegionMouseMove
// 0x00D0 (0x00D0 - 0x0000)
struct WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove final
{
public:
	struct FVector2D                              CursorScreenPosition;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceUpdate;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UpdatePosition;                                    // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CursorGridCoords;                                  // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBagUI_C*                      BagUIParamsUnderCursor;                            // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CursorItemGridCoords;                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           ItemUnderCursor;                                   // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        BagMeshWidget;                                     // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x1];                                       // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_1;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_2;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_3;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_97[0x1];                                       // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_2;                      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetCursorGridCoordinatesForBag_ResultCoords; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateMouseHoverItem_Result;              // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateMouseHoverItem_Result_1;            // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3[0x5];                                       // 0x00B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBagUI_C*                      CallFunc_GetBagUIParamsFromBag_BagUI;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove");
static_assert(sizeof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove) == 0x0000D0, "Wrong size on WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CursorScreenPosition) == 0x000000, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CursorScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, ForceUpdate) == 0x000008, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::ForceUpdate' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, UpdatePosition) == 0x000009, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::UpdatePosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CursorGridCoords) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CursorGridCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, BagUIParamsUnderCursor) == 0x000018, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::BagUIParamsUnderCursor' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CursorItemGridCoords) == 0x000020, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CursorItemGridCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, ItemUnderCursor) == 0x000028, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::ItemUnderCursor' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, BagMeshWidget) == 0x000030, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::BagMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000038, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000039, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_GetCursorItem_Result) == 0x000040, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_IsVisible_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, K2Node_MakeStruct_IntPoint) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000058, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_GetCursorItem_Result_1) == 0x000068, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_GetCursorItem_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_Not_PreBool_ReturnValue_1) == 0x000070, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_GetCursorItem_Result_2) == 0x000078, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_GetCursorItem_Result_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_GetCursorItem_Result_3) == 0x000080, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_GetCursorItem_Result_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_IsValid_ReturnValue_3) == 0x000088, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_IsValid_ReturnValue_4) == 0x000089, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, K2Node_MakeStruct_IntPoint_1) == 0x00008C, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_Greater_IntInt_ReturnValue) == 0x000094, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000095, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_BooleanAND_ReturnValue) == 0x000096, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, K2Node_MakeStruct_IntPoint_2) == 0x0000A0, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::K2Node_MakeStruct_IntPoint_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_GetCursorGridCoordinatesForBag_ResultCoords) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_GetCursorGridCoordinatesForBag_ResultCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_UpdateMouseHoverItem_Result) == 0x0000B1, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_UpdateMouseHoverItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_UpdateMouseHoverItem_Result_1) == 0x0000B2, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_UpdateMouseHoverItem_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_GetSlotItem_Item) == 0x0000B8, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000C0, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_IsValid_ReturnValue_5) == 0x0000C1, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove, CallFunc_GetBagUIParamsFromBag_BagUI) == 0x0000C8, "Member 'WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove::CallFunc_GetBagUIParamsFromBag_BagUI' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeHotbarSlots
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_PlayerHUD_C_InitializeHotbarSlots final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWIDGET_HotbarSlot_C*>           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWIDGET_HotbarSlot_C*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_InitializeHotbarSlots) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_InitializeHotbarSlots");
static_assert(sizeof(WIDGET_PlayerHUD_C_InitializeHotbarSlots) == 0x000030, "Wrong size on WIDGET_PlayerHUD_C_InitializeHotbarSlots");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarSlots, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarSlots, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarSlots, K2Node_MakeArray_Array) == 0x000010, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarSlots::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarSlots, CallFunc_Array_Get_Item) == 0x000020, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarSlots, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeHotbarSlots, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'WIDGET_PlayerHUD_C_InitializeHotbarSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetVerticalBoxGridMeshUnderCursor
// 0x0088 (0x0088 - 0x0000)
struct WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor final
{
public:
	class UVerticalBox*                           VerticalBox;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MouseScreenPosition;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        GridMeshWidget;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                ChildWidget;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ResultChildIndex;                                  // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CurrentChildWidget;                                // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ChildIndex;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridMeshWidget*                        CurrentGridMeshWidget;                             // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetWindowPointFromScreenPoint_ReturnValue; // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCursorOverMeshWidget_Result;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_MeshWidget_C>  K2Node_DynamicCast_AsINTERF_Mesh_Widget;           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridMeshWidget*                        CallFunc_GetMeshWidget_Result;                     // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor) == 0x000088, "Wrong size on WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, VerticalBox) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::VerticalBox' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, MouseScreenPosition) == 0x000008, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::MouseScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, GridMeshWidget) == 0x000010, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::GridMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, ChildWidget) == 0x000018, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::ChildWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, ResultChildIndex) == 0x000020, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::ResultChildIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, CurrentChildWidget) == 0x000028, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::CurrentChildWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, ChildIndex) == 0x000030, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::ChildIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, CurrentGridMeshWidget) == 0x000038, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::CurrentGridMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, Temp_int_Variable) == 0x000040, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, CallFunc_GetChildrenCount_ReturnValue) == 0x000044, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, CallFunc_GetWindowPointFromScreenPoint_ReturnValue) == 0x000054, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::CallFunc_GetWindowPointFromScreenPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, CallFunc_IsCursorOverMeshWidget_Result) == 0x00005C, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::CallFunc_IsCursorOverMeshWidget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, CallFunc_GetChildAt_ReturnValue) == 0x000060, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, K2Node_DynamicCast_AsINTERF_Mesh_Widget) == 0x000068, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::K2Node_DynamicCast_AsINTERF_Mesh_Widget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor, CallFunc_GetMeshWidget_Result) == 0x000080, "Member 'WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor::CallFunc_GetMeshWidget_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnHotbarQuickSlotChanged
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged final
{
public:
	class UCOMP_Hotbar_C*                         HotbarComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewSlotIndex;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OldSlotIndex;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   HotbarSlotWidget;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotNumberFromIndex_Number;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotNumberFromIndex_Number_1;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_HotbarSlot_C*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_HotbarSlot_C*                   CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged) == 0x000040, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged, HotbarComponent) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged::HotbarComponent' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged, NewSlotIndex) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged::NewSlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged, OldSlotIndex) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged::OldSlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged, HotbarSlotWidget) == 0x000010, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged::HotbarSlotWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged, CallFunc_GetSlotNumberFromIndex_Number) == 0x000018, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged::CallFunc_GetSlotNumberFromIndex_Number' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged, CallFunc_GetSlotNumberFromIndex_Number_1) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged::CallFunc_GetSlotNumberFromIndex_Number_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged, CallFunc_Array_Get_Item) == 0x000028, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000031, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged, CallFunc_IsValid_ReturnValue_1) == 0x000032, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnCameraPanelDoubleClick
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnCameraPanelMouseDown_ReturnValue;       // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick) == 0x000218, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick, MyGeometry) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick, MouseEvent) == 0x000038, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick, ReturnValue) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick, CallFunc_OnCameraPanelMouseDown_ReturnValue) == 0x000160, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick::CallFunc_OnCameraPanelMouseDown_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnCameraPanelMouseDown
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnCameraPanelMouseDown_ReturnValue;       // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown) == 0x000218, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown, MyGeometry) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown, MouseEvent) == 0x000038, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown, ReturnValue) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown, CallFunc_OnCameraPanelMouseDown_ReturnValue) == 0x000160, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown::CallFunc_OnCameraPanelMouseDown_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TryToggleContextMenu
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_PlayerHUD_C_TryToggleContextMenu final
{
public:
	class UWIDGET_InventoryPanel_C*               InventoryPanel;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              MouseScreenPosition;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           ItemUnderCursor;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToggleContextMenu;                                 // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBagUI_C*                      CallFunc_GetBagUIParamsFromBag_BagUI;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInventoryContextMenuEnabled_Result;    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInventoryContextMenuEnabled_Result_1;  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_TryToggleContextMenu) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_TryToggleContextMenu");
static_assert(sizeof(WIDGET_PlayerHUD_C_TryToggleContextMenu) == 0x000040, "Wrong size on WIDGET_PlayerHUD_C_TryToggleContextMenu");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryToggleContextMenu, InventoryPanel) == 0x000000, "Member 'WIDGET_PlayerHUD_C_TryToggleContextMenu::InventoryPanel' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryToggleContextMenu, MouseScreenPosition) == 0x000008, "Member 'WIDGET_PlayerHUD_C_TryToggleContextMenu::MouseScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryToggleContextMenu, ItemUnderCursor) == 0x000010, "Member 'WIDGET_PlayerHUD_C_TryToggleContextMenu::ItemUnderCursor' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryToggleContextMenu, ToggleContextMenu) == 0x000018, "Member 'WIDGET_PlayerHUD_C_TryToggleContextMenu::ToggleContextMenu' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryToggleContextMenu, CallFunc_GetBagUIParamsFromBag_BagUI) == 0x000020, "Member 'WIDGET_PlayerHUD_C_TryToggleContextMenu::CallFunc_GetBagUIParamsFromBag_BagUI' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryToggleContextMenu, CallFunc_SetInventoryContextMenuEnabled_Result) == 0x000028, "Member 'WIDGET_PlayerHUD_C_TryToggleContextMenu::CallFunc_SetInventoryContextMenuEnabled_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryToggleContextMenu, CallFunc_SetInventoryContextMenuEnabled_Result_1) == 0x000029, "Member 'WIDGET_PlayerHUD_C_TryToggleContextMenu::CallFunc_SetInventoryContextMenuEnabled_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryToggleContextMenu, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'WIDGET_PlayerHUD_C_TryToggleContextMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryToggleContextMenu, CallFunc_GetSlotItem_Item) == 0x000030, "Member 'WIDGET_PlayerHUD_C_TryToggleContextMenu::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryToggleContextMenu, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'WIDGET_PlayerHUD_C_TryToggleContextMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateMouseHoverItem
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateMouseHoverItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBagUI_C*                      BagUI;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  ItemWidget;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateMouseHoverItem) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateMouseHoverItem");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateMouseHoverItem) == 0x000028, "Wrong size on WIDGET_PlayerHUD_C_UpdateMouseHoverItem");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseHoverItem, Item) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateMouseHoverItem::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseHoverItem, BagUI) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateMouseHoverItem::BagUI' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseHoverItem, Result) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateMouseHoverItem::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseHoverItem, ItemWidget) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateMouseHoverItem::ItemWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseHoverItem, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateMouseHoverItem::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseHoverItem, CallFunc_IsVisible_ReturnValue) == 0x000021, "Member 'WIDGET_PlayerHUD_C_UpdateMouseHoverItem::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseHoverItem, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'WIDGET_PlayerHUD_C_UpdateMouseHoverItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseHoverItem, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000023, "Member 'WIDGET_PlayerHUD_C_UpdateMouseHoverItem::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseHoverItem, CallFunc_BooleanOR_ReturnValue) == 0x000024, "Member 'WIDGET_PlayerHUD_C_UpdateMouseHoverItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.IsMediaDisplayVisible
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_PlayerHUD_C_IsMediaDisplayVisible final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_IsMediaDisplayVisible) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_IsMediaDisplayVisible");
static_assert(sizeof(WIDGET_PlayerHUD_C_IsMediaDisplayVisible) == 0x000002, "Wrong size on WIDGET_PlayerHUD_C_IsMediaDisplayVisible");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsMediaDisplayVisible, Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_IsMediaDisplayVisible::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsMediaDisplayVisible, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'WIDGET_PlayerHUD_C_IsMediaDisplayVisible::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHoverItemOutline
// 0x0058 (0x0058 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateHoverItemOutline final
{
public:
	bool                                          EnableHighlight;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  ItemWidget;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_Result;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  CallFunc_GetWidgetForItemAtSlot_ItemWidget;        // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateHoverItemOutline");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline) == 0x000058, "Wrong size on WIDGET_PlayerHUD_C_UpdateHoverItemOutline");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, EnableHighlight) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::EnableHighlight' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, ItemWidget) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::ItemWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, Temp_float_Variable) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, Temp_float_Variable_1) == 0x000014, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, Temp_bool_Variable) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, K2Node_Select_Default) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, CallFunc_GetSlotIndex_Result) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::CallFunc_GetSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, CallFunc_GetBag_Result) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, CallFunc_GetMaterial_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHoverItemOutline, CallFunc_GetWidgetForItemAtSlot_ItemWidget) == 0x000050, "Member 'WIDGET_PlayerHUD_C_UpdateHoverItemOutline::CallFunc_GetWidgetForItemAtSlot_ItemWidget' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UndoCursorItemMove
// 0x0098 (0x0098 - 0x0000)
struct WIDGET_PlayerHUD_C_UndoCursorItemMove final
{
public:
	bool                                          UpdateItemSelection;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MouseScreenPosition;                               // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_1;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItem_Result;                        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_GetGridSizeForDesiredRotation_Result;     // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasSlotSpaceForItemWithSize_Result;       // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverflowBag_Result;                     // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_2;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_3;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetIsRotated_Success;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_RemoveItem_RemovedItem;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_4;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DropAndPushItemFromCursorPosition_Result; // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddItem_Result;                           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_5;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_6;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MoveItem_Result;                          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UndoCursorItemMove) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UndoCursorItemMove");
static_assert(sizeof(WIDGET_PlayerHUD_C_UndoCursorItemMove) == 0x000098, "Wrong size on WIDGET_PlayerHUD_C_UndoCursorItemMove");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, UpdateItemSelection) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::UpdateItemSelection' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, MouseScreenPosition) == 0x000004, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::MouseScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, Result) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_GetCursorItem_Result) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_GetCursorItem_Result_1) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_GetCursorItem_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_CanAddItem_Result) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_CanAddItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_GetGridSizeForDesiredRotation_Result) == 0x000024, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_GetGridSizeForDesiredRotation_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_HasSlotSpaceForItemWithSize_Result) == 0x00002C, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_HasSlotSpaceForItemWithSize_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_IsOverflowBag_Result) == 0x00002D, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_IsOverflowBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_Not_PreBool_ReturnValue) == 0x00002E, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_GetCursorItem_Result_2) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_GetCursorItem_Result_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_GetCursorItem_Result_3) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_GetCursorItem_Result_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_SetIsRotated_Success) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_SetIsRotated_Success' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_GetBag_Result) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_RemoveItem_RemovedItem) == 0x000050, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_RemoveItem_RemovedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000058, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_GetCursorItem_Result_4) == 0x000068, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_GetCursorItem_Result_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_DropAndPushItemFromCursorPosition_Result) == 0x000070, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_DropAndPushItemFromCursorPosition_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_AddItem_Result) == 0x000071, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_AddItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_GetCursorItem_Result_5) == 0x000078, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_GetCursorItem_Result_5' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_IsValid_ReturnValue_1) == 0x000080, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_GetCursorItem_Result_6) == 0x000088, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_GetCursorItem_Result_6' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_IsValid_ReturnValue_2) == 0x000090, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UndoCursorItemMove, CallFunc_MoveItem_Result) == 0x000091, "Member 'WIDGET_PlayerHUD_C_UndoCursorItemMove::CallFunc_MoveItem_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HideContextMenu
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_PlayerHUD_C_HideContextMenu final
{
public:
	bool                                          CallFunc_SetInventoryContextMenuEnabled_Result;    // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_HideContextMenu) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_HideContextMenu");
static_assert(sizeof(WIDGET_PlayerHUD_C_HideContextMenu) == 0x000001, "Wrong size on WIDGET_PlayerHUD_C_HideContextMenu");
static_assert(offsetof(WIDGET_PlayerHUD_C_HideContextMenu, CallFunc_SetInventoryContextMenuEnabled_Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_HideContextMenu::CallFunc_SetInventoryContextMenuEnabled_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HandleItemWorldInteraction
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_PlayerHUD_C_HandleItemWorldInteraction final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CurrentCursorItem;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasWorldInteraction_Result;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Activate_Result;                          // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_HandleItemWorldInteraction) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_HandleItemWorldInteraction");
static_assert(sizeof(WIDGET_PlayerHUD_C_HandleItemWorldInteraction) == 0x000020, "Wrong size on WIDGET_PlayerHUD_C_HandleItemWorldInteraction");
static_assert(offsetof(WIDGET_PlayerHUD_C_HandleItemWorldInteraction, Item) == 0x000000, "Member 'WIDGET_PlayerHUD_C_HandleItemWorldInteraction::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HandleItemWorldInteraction, Success) == 0x000008, "Member 'WIDGET_PlayerHUD_C_HandleItemWorldInteraction::Success' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HandleItemWorldInteraction, CurrentCursorItem) == 0x000010, "Member 'WIDGET_PlayerHUD_C_HandleItemWorldInteraction::CurrentCursorItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HandleItemWorldInteraction, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_HandleItemWorldInteraction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HandleItemWorldInteraction, CallFunc_HasWorldInteraction_Result) == 0x000019, "Member 'WIDGET_PlayerHUD_C_HandleItemWorldInteraction::CallFunc_HasWorldInteraction_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HandleItemWorldInteraction, CallFunc_Activate_Result) == 0x00001A, "Member 'WIDGET_PlayerHUD_C_HandleItemWorldInteraction::CallFunc_Activate_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HandleVaporizeInventoryInput
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_PlayerHUD_C_HandleVaporizeInventoryInput final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_HandleVaporizeInventoryInput) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_HandleVaporizeInventoryInput");
static_assert(sizeof(WIDGET_PlayerHUD_C_HandleVaporizeInventoryInput) == 0x000002, "Wrong size on WIDGET_PlayerHUD_C_HandleVaporizeInventoryInput");
static_assert(offsetof(WIDGET_PlayerHUD_C_HandleVaporizeInventoryInput, State) == 0x000000, "Member 'WIDGET_PlayerHUD_C_HandleVaporizeInventoryInput::State' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_HandleVaporizeInventoryInput, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WIDGET_PlayerHUD_C_HandleVaporizeInventoryInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.DropAndPushItemFromCursorPosition
// 0x00A0 (0x00A0 - 0x0000)
struct WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition final
{
public:
	class UITEM_Base_C*                           ItemToDrop;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ScreenPosition;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RelativeWorldLocation;                             // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DropAndPushItemFromCameraRelativePosition_Result; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_DeprojectScreenToWorld_WorldPosition;     // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenToWorld_WorldDirection;    // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenToWorld_ReturnValue;       // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition");
static_assert(sizeof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition) == 0x0000A0, "Wrong size on WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, ItemToDrop) == 0x000000, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::ItemToDrop' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, ScreenPosition) == 0x000008, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, Result) == 0x000010, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, RelativeWorldLocation) == 0x000014, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::RelativeWorldLocation' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, WorldLocation) == 0x000020, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::WorldLocation' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, CallFunc_GetUpVector_ReturnValue) == 0x00002C, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, CallFunc_GetRightVector_ReturnValue) == 0x000038, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, CallFunc_Dot_VectorVector_ReturnValue) == 0x000044, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000048, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, CallFunc_MakeVector2D_ReturnValue) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000054, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, CallFunc_DropAndPushItemFromCameraRelativePosition_Result) == 0x000060, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::CallFunc_DropAndPushItemFromCameraRelativePosition_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000064, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, CallFunc_GetController_ReturnValue) == 0x000070, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, K2Node_DynamicCast_AsPlayer_Controller) == 0x000078, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, CallFunc_DeprojectScreenToWorld_WorldPosition) == 0x000084, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::CallFunc_DeprojectScreenToWorld_WorldPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, CallFunc_DeprojectScreenToWorld_WorldDirection) == 0x000090, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::CallFunc_DeprojectScreenToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition, CallFunc_DeprojectScreenToWorld_ReturnValue) == 0x00009C, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition::CallFunc_DeprojectScreenToWorld_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.DropAndPushItemFromCameraRelativePosition
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition final
{
public:
	class UITEM_Base_C*                           ItemToDrop;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              RelativePosition;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryDropAndPushItem_Result;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition");
static_assert(sizeof(WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition) == 0x000018, "Wrong size on WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition, ItemToDrop) == 0x000000, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition::ItemToDrop' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition, RelativePosition) == 0x000008, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition::RelativePosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition, Result) == 0x000010, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition, CallFunc_TryDropAndPushItem_Result) == 0x000011, "Member 'WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition::CallFunc_TryDropAndPushItem_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.DropAndPushCursorItem
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_PlayerHUD_C_DropAndPushCursorItem final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           ItemToDrop;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DropAndPushItemFromCursorPosition_Result; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_DropAndPushCursorItem) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_DropAndPushCursorItem");
static_assert(sizeof(WIDGET_PlayerHUD_C_DropAndPushCursorItem) == 0x000020, "Wrong size on WIDGET_PlayerHUD_C_DropAndPushCursorItem");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushCursorItem, ScreenPosition) == 0x000000, "Member 'WIDGET_PlayerHUD_C_DropAndPushCursorItem::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushCursorItem, ItemToDrop) == 0x000008, "Member 'WIDGET_PlayerHUD_C_DropAndPushCursorItem::ItemToDrop' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushCursorItem, CallFunc_DropAndPushItemFromCursorPosition_Result) == 0x000010, "Member 'WIDGET_PlayerHUD_C_DropAndPushCursorItem::CallFunc_DropAndPushItemFromCursorPosition_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushCursorItem, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WIDGET_PlayerHUD_C_DropAndPushCursorItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DropAndPushCursorItem, CallFunc_GetCursorItem_Result) == 0x000018, "Member 'WIDGET_PlayerHUD_C_DropAndPushCursorItem::CallFunc_GetCursorItem_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.IsCursorOverInventoryBag
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_PlayerHUD_C_IsCursorOverInventoryBag final
{
public:
	class UInventoryBag_C*                        Bag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_1;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_IsCursorOverInventoryBag");
static_assert(sizeof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag) == 0x000030, "Wrong size on WIDGET_PlayerHUD_C_IsCursorOverInventoryBag");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, Bag) == 0x000000, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, Result) == 0x000008, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_GetCursorItem_Result) == 0x000010, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_GetCursorItem_Result_1) == 0x000018, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_GetCursorItem_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000023, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_BooleanAND_ReturnValue) == 0x000025, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000026, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_BooleanAND_ReturnValue_1) == 0x000027, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_BooleanAND_ReturnValue_2) == 0x000029, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_IsCursorOverInventoryBag, CallFunc_BooleanAND_ReturnValue_3) == 0x00002B, "Member 'WIDGET_PlayerHUD_C_IsCursorOverInventoryBag::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnCameraPanelMouseMove
// 0x0250 (0x0250 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          EventHandledByChild;                               // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBestBagUnderCursor_ResultBag;          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0180(0x00B8)()
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex; // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Map_Find_Value;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove) == 0x000250, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, MyGeometry) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, MouseEvent) == 0x000038, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, EventHandledByChild) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::EventHandledByChild' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, ReturnValue) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000168, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, CallFunc_GetBestBagUnderCursor_ResultBag) == 0x000170, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::CallFunc_GetBestBagUnderCursor_ResultBag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, CallFunc_Not_PreBool_ReturnValue) == 0x000178, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, CallFunc_Unhandled_ReturnValue) == 0x000180, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, CallFunc_IsVisible_ReturnValue) == 0x000238, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex) == 0x00023C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, CallFunc_Map_Find_Value) == 0x000240, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, CallFunc_Map_Find_ReturnValue) == 0x000248, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove, CallFunc_IsValid_ReturnValue) == 0x000249, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeAttributes
// 0x00E8 (0x00E8 - 0x0000)
struct WIDGET_PlayerHUD_C_InitializeAttributes final
{
public:
	class UAttribInstance*                        LTEAttribInstance;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        LBPAttribInstance;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        StaminaAttribInstance;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        EnergyAttribInstance;                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        HealthAttribInstance;                              // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_GetActiveModWithCategory_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_GetActiveModWithCategory_ReturnValue_1;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_2;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValue_ReturnValue_3;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue_1;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxValue_ReturnValue;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_4;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAttribMod* AttribMod)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetMaxValue_ReturnValue_1;                // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_5;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAttribMod* AttribMod)>  K2Node_CreateDelegate_OutputDelegate_1;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetMaxValue_ReturnValue_2;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue_6;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor)
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float CurrValue, float LastValue, float MaxValue, EModApplyType ApplyType)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue_1;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue_2;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_InitializeAttributes) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_InitializeAttributes");
static_assert(sizeof(WIDGET_PlayerHUD_C_InitializeAttributes) == 0x0000E8, "Wrong size on WIDGET_PlayerHUD_C_InitializeAttributes");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, LTEAttribInstance) == 0x000000, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::LTEAttribInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, LBPAttribInstance) == 0x000008, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::LBPAttribInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, StaminaAttribInstance) == 0x000010, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::StaminaAttribInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, EnergyAttribInstance) == 0x000018, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::EnergyAttribInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, HealthAttribInstance) == 0x000020, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::HealthAttribInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetActiveModWithCategory_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetActiveModWithCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetActiveModWithCategory_ReturnValue_1) == 0x000030, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetActiveModWithCategory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetValue_ReturnValue) == 0x000038, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetValue_ReturnValue_1) == 0x00003C, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_FTrunc_ReturnValue) == 0x000040, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetValue_ReturnValue_2) == 0x000044, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetValue_ReturnValue_3) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_FTrunc_ReturnValue_1) == 0x000050, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000058, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetOrCreateAttribInstance_ReturnValue_1) == 0x000060, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetOrCreateAttribInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetMaxValue_ReturnValue) == 0x000068, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetMaxValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetValue_ReturnValue_4) == 0x00006C, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetMaxValue_ReturnValue_1) == 0x000080, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetMaxValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetValue_ReturnValue_5) == 0x000084, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate_1) == 0x000088, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetMaxValue_ReturnValue_2) == 0x000098, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetMaxValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetValue_ReturnValue_6) == 0x00009C, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A0, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetAttribInstance_ReturnValue) == 0x0000C0, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000C8, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetAttribInstance_ReturnValue_1) == 0x0000D8, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetAttribInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeAttributes, CallFunc_GetAttribInstance_ReturnValue_2) == 0x0000E0, "Member 'WIDGET_PlayerHUD_C_InitializeAttributes::CallFunc_GetAttribInstance_ReturnValue_2' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHealSFX
// 0x0020 (0x0020 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateHealSFX final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         AttribRatio;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateHealSFX) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateHealSFX");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateHealSFX) == 0x000020, "Wrong size on WIDGET_PlayerHUD_C_UpdateHealSFX");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHealSFX, State) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateHealSFX::State' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHealSFX, AttribRatio) == 0x000004, "Member 'WIDGET_PlayerHUD_C_UpdateHealSFX::AttribRatio' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHealSFX, CallFunc_SpawnSound2D_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateHealSFX::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHealSFX, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateHealSFX::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHealSFX, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000014, "Member 'WIDGET_PlayerHUD_C_UpdateHealSFX::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHealSFX, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateHealSFX::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHealthSoundParameters
// 0x000C (0x000C - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateHealthSoundParameters final
{
public:
	float                                         AttribRatio;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateHealthSoundParameters) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateHealthSoundParameters");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateHealthSoundParameters) == 0x00000C, "Wrong size on WIDGET_PlayerHUD_C_UpdateHealthSoundParameters");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHealthSoundParameters, AttribRatio) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateHealthSoundParameters::AttribRatio' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHealthSoundParameters, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WIDGET_PlayerHUD_C_UpdateHealthSoundParameters::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHealthSoundParameters, CallFunc_FMax_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateHealthSoundParameters::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnHealthModApplied
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnHealthModApplied final
{
public:
	class UAttribMod*                             AppliedMod;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnHealthModApplied) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnHealthModApplied");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnHealthModApplied) == 0x000010, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnHealthModApplied");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHealthModApplied, AppliedMod) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHealthModApplied::AppliedMod' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnHealthModApplied, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnHealthModApplied::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnEnergyModApplied
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnEnergyModApplied final
{
public:
	class UAttribMod*                             AppliedMod;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnEnergyModApplied) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnEnergyModApplied");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnEnergyModApplied) == 0x000010, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnEnergyModApplied");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnEnergyModApplied, AppliedMod) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnEnergyModApplied::AppliedMod' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnEnergyModApplied, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnEnergyModApplied::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TryStopHealSFX
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_PlayerHUD_C_TryStopHealSFX final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue_1;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasActiveModWithCategory_ReturnValue;     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasActiveModWithCategory_ReturnValue_1;   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_TryStopHealSFX) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_TryStopHealSFX");
static_assert(sizeof(WIDGET_PlayerHUD_C_TryStopHealSFX) == 0x000028, "Wrong size on WIDGET_PlayerHUD_C_TryStopHealSFX");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryStopHealSFX, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'WIDGET_PlayerHUD_C_TryStopHealSFX::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryStopHealSFX, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000004, "Member 'WIDGET_PlayerHUD_C_TryStopHealSFX::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryStopHealSFX, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_TryStopHealSFX::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryStopHealSFX, CallFunc_GetAttribInstance_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_TryStopHealSFX::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryStopHealSFX, CallFunc_GetAttribInstance_ReturnValue_1) == 0x000018, "Member 'WIDGET_PlayerHUD_C_TryStopHealSFX::CallFunc_GetAttribInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryStopHealSFX, CallFunc_HasActiveModWithCategory_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_TryStopHealSFX::CallFunc_HasActiveModWithCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryStopHealSFX, CallFunc_HasActiveModWithCategory_ReturnValue_1) == 0x000021, "Member 'WIDGET_PlayerHUD_C_TryStopHealSFX::CallFunc_HasActiveModWithCategory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryStopHealSFX, CallFunc_Not_PreBool_ReturnValue) == 0x000022, "Member 'WIDGET_PlayerHUD_C_TryStopHealSFX::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryStopHealSFX, CallFunc_Not_PreBool_ReturnValue_1) == 0x000023, "Member 'WIDGET_PlayerHUD_C_TryStopHealSFX::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_TryStopHealSFX, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'WIDGET_PlayerHUD_C_TryStopHealSFX::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateMouseCursor
// 0x0060 (0x0060 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateMouseCursor final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsViewportInForeground_ReturnValue;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVirtualMouseViewportLocation_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateMouseCursor) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateMouseCursor");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateMouseCursor) == 0x000060, "Wrong size on WIDGET_PlayerHUD_C_UpdateMouseCursor");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, PlayerController) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::PlayerController' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_IsViewportInForeground_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_IsViewportInForeground_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_GetViewportSize_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_GetVirtualMouseViewportLocation_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_GetVirtualMouseViewportLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_BreakVector2D_X) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_BreakVector2D_Y) == 0x000034, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_Round_ReturnValue) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_Round_ReturnValue_1) == 0x00003C, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000050, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseCursor, CallFunc_BooleanOR_ReturnValue) == 0x000058, "Member 'WIDGET_PlayerHUD_C_UpdateMouseCursor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateCursorTransition
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateCursorTransition final
{
public:
	float                                         TransitionProgress;                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VEase_ReturnValue;                        // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateCursorTransition) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateCursorTransition");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateCursorTransition) == 0x000040, "Wrong size on WIDGET_PlayerHUD_C_UpdateCursorTransition");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorTransition, TransitionProgress) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateCursorTransition::TransitionProgress' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorTransition, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'WIDGET_PlayerHUD_C_UpdateCursorTransition::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorTransition, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateCursorTransition::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorTransition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_UpdateCursorTransition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorTransition, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateCursorTransition::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorTransition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_UpdateCursorTransition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorTransition, CallFunc_VEase_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateCursorTransition::CallFunc_VEase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorTransition, CallFunc_FMin_ReturnValue) == 0x00002C, "Member 'WIDGET_PlayerHUD_C_UpdateCursorTransition::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorTransition, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UpdateCursorTransition::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorTransition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UpdateCursorTransition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeScreenEffects
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_PlayerHUD_C_InitializeScreenEffects final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_InitializeScreenEffects) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_InitializeScreenEffects");
static_assert(sizeof(WIDGET_PlayerHUD_C_InitializeScreenEffects) == 0x000008, "Wrong size on WIDGET_PlayerHUD_C_InitializeScreenEffects");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeScreenEffects, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'WIDGET_PlayerHUD_C_InitializeScreenEffects::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeMultiFunctionDisplay
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_PlayerHUD_C_InitializeMultiFunctionDisplay final
{
public:
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_InitializeMultiFunctionDisplay) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_InitializeMultiFunctionDisplay");
static_assert(sizeof(WIDGET_PlayerHUD_C_InitializeMultiFunctionDisplay) == 0x000010, "Wrong size on WIDGET_PlayerHUD_C_InitializeMultiFunctionDisplay");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeMultiFunctionDisplay, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000000, "Member 'WIDGET_PlayerHUD_C_InitializeMultiFunctionDisplay::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InitializeMultiFunctionDisplay, CallFunc_GetSize_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_InitializeMultiFunctionDisplay::CallFunc_GetSize_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetMouseCursorVisibility
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_PlayerHUD_C_SetMouseCursorVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraPanelWidget*                     CallFunc_GetCameraPanelWidget_Result;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_SetMouseCursorVisibility) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_SetMouseCursorVisibility");
static_assert(sizeof(WIDGET_PlayerHUD_C_SetMouseCursorVisibility) == 0x000018, "Wrong size on WIDGET_PlayerHUD_C_SetMouseCursorVisibility");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetMouseCursorVisibility, Visible) == 0x000000, "Member 'WIDGET_PlayerHUD_C_SetMouseCursorVisibility::Visible' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetMouseCursorVisibility, Temp_bool_Variable) == 0x000001, "Member 'WIDGET_PlayerHUD_C_SetMouseCursorVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetMouseCursorVisibility, Temp_byte_Variable) == 0x000002, "Member 'WIDGET_PlayerHUD_C_SetMouseCursorVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetMouseCursorVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WIDGET_PlayerHUD_C_SetMouseCursorVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetMouseCursorVisibility, CallFunc_GetCameraPanelWidget_Result) == 0x000008, "Member 'WIDGET_PlayerHUD_C_SetMouseCursorVisibility::CallFunc_GetCameraPanelWidget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetMouseCursorVisibility, K2Node_Select_Default) == 0x000010, "Member 'WIDGET_PlayerHUD_C_SetMouseCursorVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetMouseCursorVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'WIDGET_PlayerHUD_C_SetMouseCursorVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ShowTargetBrackets
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_PlayerHUD_C_ShowTargetBrackets final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_ShowTargetBrackets) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_ShowTargetBrackets");
static_assert(sizeof(WIDGET_PlayerHUD_C_ShowTargetBrackets) == 0x000001, "Wrong size on WIDGET_PlayerHUD_C_ShowTargetBrackets");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowTargetBrackets, Visible) == 0x000000, "Member 'WIDGET_PlayerHUD_C_ShowTargetBrackets::Visible' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ShowMultiFunctionDisplay
// 0x0060 (0x0060 - 0x0000)
struct WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          MainDisplayVisible;                                // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryCompleteTutorial_Result;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStopFocusingOnInteract_Result;         // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UndoCursorItemMove_Result;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetInventoryContextMenuEnabled_Result;    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay");
static_assert(sizeof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay) == 0x000060, "Wrong size on WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, Visible) == 0x000000, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::Visible' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, MainDisplayVisible) == 0x000001, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::MainDisplayVisible' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, K2Node_DynamicCast_AsGI_Single_Player) == 0x000010, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_TryCompleteTutorial_Result) == 0x000019, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_TryCompleteTutorial_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_TryStopFocusingOnInteract_Result) == 0x00001A, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_TryStopFocusingOnInteract_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_Array_Get_Item) == 0x000028, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_Not_PreBool_ReturnValue) == 0x000035, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_Not_PreBool_ReturnValue_1) == 0x000036, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_BooleanOR_ReturnValue) == 0x000037, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000038, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_UndoCursorItemMove_Result) == 0x000039, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_UndoCursorItemMove_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000040, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_IsVisible_ReturnValue) == 0x000049, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_SetInventoryContextMenuEnabled_Result) == 0x00004A, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_SetInventoryContextMenuEnabled_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, CallFunc_PlayAnimationForward_ReturnValue) == 0x000050, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay, K2Node_SwitchEnum_CmpSuccess_1) == 0x000058, "Member 'WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.DisableMultiFunctionDisplay
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_PlayerHUD_C_DisableMultiFunctionDisplay final
{
public:
	bool                                          Disable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_DisableMultiFunctionDisplay) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_DisableMultiFunctionDisplay");
static_assert(sizeof(WIDGET_PlayerHUD_C_DisableMultiFunctionDisplay) == 0x000002, "Wrong size on WIDGET_PlayerHUD_C_DisableMultiFunctionDisplay");
static_assert(offsetof(WIDGET_PlayerHUD_C_DisableMultiFunctionDisplay, Disable) == 0x000000, "Member 'WIDGET_PlayerHUD_C_DisableMultiFunctionDisplay::Disable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DisableMultiFunctionDisplay, CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible) == 0x000001, "Member 'WIDGET_PlayerHUD_C_DisableMultiFunctionDisplay::CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateCursorGridCoordinatesForBag
// 0x0098 (0x0098 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag final
{
public:
	struct FVector2D                              MouseWindowPosition;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        InventoryBag;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        BagWidget;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CursorGridOffset;                                  // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_1;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetRotatedGridSize_Result;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue_1;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_1;             // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_3;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetGridCoordinatesFromWindowPoint_GridCoords; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGridCoordinatesFromWindowPoint_ReturnValue; // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_Select_Default_2;                           // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag) == 0x000098, "Wrong size on WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, MouseWindowPosition) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::MouseWindowPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, InventoryBag) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::InventoryBag' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, BagWidget) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::BagWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, Result) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, CursorGridOffset) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::CursorGridOffset' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, Temp_float_Variable) == 0x000024, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, Temp_bool_Variable) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, Temp_float_Variable_1) == 0x00002C, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, Temp_float_Variable_2) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, Temp_bool_Variable_1) == 0x000034, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, CallFunc_GetCursorItem_Result) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, CallFunc_GetCursorItem_Result_1) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::CallFunc_GetCursorItem_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, CallFunc_GetRotatedGridSize_Result) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::CallFunc_GetRotatedGridSize_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, CallFunc_And_IntInt_ReturnValue) == 0x000054, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, CallFunc_And_IntInt_ReturnValue_1) == 0x000058, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::CallFunc_And_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, CallFunc_Conv_IntToBool_ReturnValue) == 0x00005C, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, CallFunc_Conv_IntToBool_ReturnValue_1) == 0x00005D, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::CallFunc_Conv_IntToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, Temp_float_Variable_3) == 0x000060, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, K2Node_Select_Default) == 0x000064, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, Temp_bool_Variable_2) == 0x000068, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, K2Node_Select_Default_1) == 0x00006C, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, K2Node_MakeStruct_IntPoint) == 0x000078, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, CallFunc_GetGridCoordinatesFromWindowPoint_GridCoords) == 0x000080, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::CallFunc_GetGridCoordinatesFromWindowPoint_GridCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, CallFunc_GetGridCoordinatesFromWindowPoint_ReturnValue) == 0x000088, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::CallFunc_GetGridCoordinatesFromWindowPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag, K2Node_Select_Default_2) == 0x00008C, "Member 'WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag::K2Node_Select_Default_2' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.MoveCursorToItemAtSlotIndex
// 0x00C0 (0x00C0 - 0x0000)
struct WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex final
{
public:
	class UWIDGET_InventoryPanel_C*               InventoryPanel;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  ItemWidget;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SlottedItem_C*                  CallFunc_GetWidgetForItemAtSlot_ItemWidget;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0020(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x0058(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalTopLeft_ReturnValue;              // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue;              // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex");
static_assert(sizeof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex) == 0x0000C0, "Wrong size on WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex, InventoryPanel) == 0x000000, "Member 'WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex::InventoryPanel' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex, SlotIndex) == 0x000008, "Member 'WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex, ItemWidget) == 0x000010, "Member 'WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex::ItemWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex, CallFunc_GetWidgetForItemAtSlot_ItemWidget) == 0x000018, "Member 'WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex::CallFunc_GetWidgetForItemAtSlot_ItemWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex, CallFunc_GetCachedGeometry_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x000058, "Member 'WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex, CallFunc_GetLocalSize_ReturnValue) == 0x000094, "Member 'WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00009C, "Member 'WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex, CallFunc_GetLocalTopLeft_ReturnValue) == 0x0000A4, "Member 'WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex::CallFunc_GetLocalTopLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000AC, "Member 'WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex, CallFunc_LocalToAbsolute_ReturnValue) == 0x0000B4, "Member 'WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex::CallFunc_LocalToAbsolute_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.MoveCursorToInventoryGridLocationAtSlotIndex
// 0x00E0 (0x00E0 - 0x0000)
struct WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex final
{
public:
	class UWIDGET_InventoryPanel_C*               InventoryPanel;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              NormalizedCellOffset;                              // 0x000C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              RotatedItemSize;                                   // 0x0014(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              GridLocation;                                      // 0x001C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_3;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridHeight_Result;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSlotIndex_Result;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue_1;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetRotatedGridSize_Result;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetProjectedCellLocationFromGridCoordinates_OutProjectedLocation; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetProjectedCellLocationFromGridCoordinates_ReturnValue; // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex");
static_assert(sizeof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex) == 0x0000E0, "Wrong size on WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, InventoryPanel) == 0x000000, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::InventoryPanel' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, SlotIndex) == 0x000008, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, NormalizedCellOffset) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::NormalizedCellOffset' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, RotatedItemSize) == 0x000014, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::RotatedItemSize' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, GridLocation) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::GridLocation' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, Temp_float_Variable) == 0x000024, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords) == 0x000028, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, Temp_bool_Variable) == 0x000030, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, Temp_float_Variable_1) == 0x000034, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, Temp_float_Variable_2) == 0x000038, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, Temp_bool_Variable_1) == 0x00003C, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, Temp_float_Variable_3) == 0x000040, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, Temp_float_Variable_4) == 0x000044, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_GetGridHeight_Result) == 0x000048, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_GetGridHeight_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, K2Node_MakeStruct_IntPoint) == 0x000050, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_IsValidSlotIndex_Result) == 0x000058, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_IsValidSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, K2Node_MakeStruct_IntPoint_1) == 0x00005C, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, Temp_bool_Variable_2) == 0x000064, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_BreakVector2D_X) == 0x000068, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_BreakVector2D_Y) == 0x00006C, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000070, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000071, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_And_IntInt_ReturnValue) == 0x000074, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_BooleanOR_ReturnValue) == 0x000078, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_Conv_IntToBool_ReturnValue) == 0x000079, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, K2Node_Select_Default) == 0x00007C, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, K2Node_Select_Default_1) == 0x000080, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_MakeVector2D_ReturnValue) == 0x000084, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_And_IntInt_ReturnValue_1) == 0x00008C, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_And_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_Conv_IntToBool_ReturnValue_1) == 0x000090, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_Conv_IntToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_GetCursorItem_Result) == 0x000098, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, K2Node_Select_Default_2) == 0x0000A4, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_GetRotatedGridSize_Result) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_GetRotatedGridSize_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_GetProjectedCellLocationFromGridCoordinates_OutProjectedLocation) == 0x0000B8, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_GetProjectedCellLocationFromGridCoordinates_OutProjectedLocation' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_GetProjectedCellLocationFromGridCoordinates_ReturnValue) == 0x0000C0, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_GetProjectedCellLocationFromGridCoordinates_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x0000C4, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000CC, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000D4, "Member 'WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.MoveCursorOverFirstInventoryItem
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem final
{
public:
	class UWIDGET_InventoryPanel_C*               InventoryPanel;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBagEmpty_Result;                        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFirstOccupiedSlotIndex_Result;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem");
static_assert(sizeof(WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem) == 0x000018, "Wrong size on WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem, InventoryPanel) == 0x000000, "Member 'WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem::InventoryPanel' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem, CallFunc_IsBagEmpty_Result) == 0x000009, "Member 'WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem::CallFunc_IsBagEmpty_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem, CallFunc_GetFirstOccupiedSlotIndex_Result) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem::CallFunc_GetFirstOccupiedSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem, CallFunc_IsVisible_ReturnValue) == 0x000011, "Member 'WIDGET_PlayerHUD_C_MoveCursorOverFirstInventoryItem::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnInventoryBecameVisible
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_PlayerHUD_C_OnInventoryBecameVisible final
{
public:
	class UWIDGET_InventoryPanel_C*               InventoryPanel;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_OnInventoryBecameVisible) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_OnInventoryBecameVisible");
static_assert(sizeof(WIDGET_PlayerHUD_C_OnInventoryBecameVisible) == 0x000038, "Wrong size on WIDGET_PlayerHUD_C_OnInventoryBecameVisible");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnInventoryBecameVisible, InventoryPanel) == 0x000000, "Member 'WIDGET_PlayerHUD_C_OnInventoryBecameVisible::InventoryPanel' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnInventoryBecameVisible, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WIDGET_PlayerHUD_C_OnInventoryBecameVisible::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnInventoryBecameVisible, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_OnInventoryBecameVisible::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnInventoryBecameVisible, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_OnInventoryBecameVisible::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnInventoryBecameVisible, K2Node_DynamicCast_AsCON_Hacker) == 0x000028, "Member 'WIDGET_PlayerHUD_C_OnInventoryBecameVisible::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnInventoryBecameVisible, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WIDGET_PlayerHUD_C_OnInventoryBecameVisible::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnInventoryBecameVisible, CallFunc_IsUsingGamepad_Result) == 0x000031, "Member 'WIDGET_PlayerHUD_C_OnInventoryBecameVisible::CallFunc_IsUsingGamepad_Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetHotbarSlotWidgetForObject
// 0x0058 (0x0058 - 0x0000)
struct WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject final
{
public:
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWIDGET_HotbarSlot_C*                   Result;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   CurrentWidget;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue_1;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject) == 0x000058, "Wrong size on WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject, SlottableObject) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject::SlottableObject' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject, Result) == 0x000010, "Member 'WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject, CurrentWidget) == 0x000018, "Member 'WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject::CurrentWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject, Temp_int_Array_Index_Variable) == 0x000020, "Member 'WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject, CallFunc_Conv_InterfaceToObject_ReturnValue_1) == 0x000038, "Member 'WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject::CallFunc_Conv_InterfaceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject, CallFunc_Array_Get_Item) == 0x000040, "Member 'WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetCursorItem
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_PlayerHUD_C_GetCursorItem final
{
public:
	class UITEM_Base_C*                           Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetCursorItem) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GetCursorItem");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetCursorItem) == 0x000018, "Wrong size on WIDGET_PlayerHUD_C_GetCursorItem");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorItem, Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetCursorItem::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorItem, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_GetCursorItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCursorItem, CallFunc_GetSlotItem_Item) == 0x000010, "Member 'WIDGET_PlayerHUD_C_GetCursorItem::CallFunc_GetSlotItem_Item' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHotbarSlottableCursor
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor final
{
public:
	ENUM_CursorMode                               Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CursorMode                               Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               CallFunc_GetHotbarIcon_ResultIcon;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_CursorMode                               K2Node_Select_Default;                             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor) == 0x000038, "Wrong size on WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor, Temp_byte_Variable) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor, Temp_byte_Variable_1) == 0x000001, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor, Temp_bool_Variable) == 0x000002, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor, CallFunc_GetHotbarIcon_ResultIcon) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor::CallFunc_GetHotbarIcon_ResultIcon' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000014, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor, CallFunc_MakeVector2D_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor, K2Node_Select_Default) == 0x000032, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlottableCursor::K2Node_Select_Default' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetHardwareHoverDetails
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_PlayerHUD_C_SetHardwareHoverDetails final
{
public:
	class UWIDGET_HardwareButton_C*               HardwareButton;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_SetHardwareHoverDetails) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_SetHardwareHoverDetails");
static_assert(sizeof(WIDGET_PlayerHUD_C_SetHardwareHoverDetails) == 0x000008, "Wrong size on WIDGET_PlayerHUD_C_SetHardwareHoverDetails");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetHardwareHoverDetails, HardwareButton) == 0x000000, "Member 'WIDGET_PlayerHUD_C_SetHardwareHoverDetails::HardwareButton' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateMultiFunctionDisplaySize
// 0x00C0 (0x00C0 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize final
{
public:
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridHeight_Result;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_4;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue_1;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_5;           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize) == 0x0000C0, "Wrong size on WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_GetGridHeight_Result) == 0x000004, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_GetGridHeight_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_GetPosition_ReturnValue) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_BreakVector2D_X) == 0x000024, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_BreakVector2D_X_1) == 0x00002C, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_BreakVector2D_Y_1) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_GetSize_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, Temp_bool_Variable) == 0x000050, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_BreakVector2D_X_2) == 0x000054, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_BreakVector2D_Y_2) == 0x000058, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_Add_FloatFloat_ReturnValue) == 0x00005C, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, K2Node_Select_Default) == 0x000060, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_MakeVector2D_ReturnValue) == 0x000064, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_MakeVector2D_ReturnValue_1) == 0x00006C, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x000078, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_SlotAsCanvasSlot_ReturnValue_4) == 0x000088, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_SlotAsCanvasSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_BreakVector2D_X_3) == 0x000090, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_BreakVector2D_Y_3) == 0x000094, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_GetSize_ReturnValue_1) == 0x000098, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_GetSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_BreakVector2D_X_4) == 0x0000A0, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_BreakVector2D_Y_4) == 0x0000A4, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_SlotAsCanvasSlot_ReturnValue_5) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_SlotAsCanvasSlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000B8, "Member 'WIDGET_PlayerHUD_C_UpdateMultiFunctionDisplaySize::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHotbarDisplayStyle
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateHotbarDisplayStyle final
{
public:
	TArray<TScriptInterface<class IINTERF_HotbarSlottable_C>> PreviousSlottedObjects;                            // 0x0000(0x0010)(Edit, BlueprintVisible)
	TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWIDGET_HotbarSlot_C*                   HotbarSlot;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateHotbarDisplayStyle) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateHotbarDisplayStyle");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateHotbarDisplayStyle) == 0x000028, "Wrong size on WIDGET_PlayerHUD_C_UpdateHotbarDisplayStyle");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarDisplayStyle, PreviousSlottedObjects) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarDisplayStyle::PreviousSlottedObjects' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarDisplayStyle, SlottableObject) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarDisplayStyle::SlottableObject' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarDisplayStyle, HotbarSlot) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarDisplayStyle::HotbarSlot' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetDeprojectedScreenPoint
// 0x00F8 (0x00F8 - 0x0000)
struct WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint final
{
public:
	struct FVector2D                              ScreenPosition;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseViewportSpace;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              DeprojectedScreenPosition;                         // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0014(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x004C(0x0038)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_PixelPosition;            // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToViewport_ViewportPosition;         // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_LocalToAbsolute_ReturnValue;              // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Select_Default;                             // 0x00B0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetWindowPointFromScreenPoint_ReturnValue; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTriangleIndexAtWindowPoint_OutBarycentricCoords; // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTriangleIndexAtWindowPoint_ReturnValue; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetUnprojectedTrianglePoint_ReturnValue;  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint) == 0x0000F8, "Wrong size on WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, ScreenPosition) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::ScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, UseViewportSpace) == 0x000008, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::UseViewportSpace' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, DeprojectedScreenPosition) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::DeprojectedScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_GetCachedGeometry_ReturnValue) == 0x000014, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_GetLocalSize_ReturnValue) == 0x000084, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_LocalToViewport_PixelPosition) == 0x00008C, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_LocalToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_LocalToViewport_ViewportPosition) == 0x000094, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_LocalToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x00009C, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_LocalToAbsolute_ReturnValue) == 0x0000A4, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_LocalToAbsolute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, Temp_bool_Variable) == 0x0000AC, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, K2Node_Select_Default) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_GetWindowPointFromScreenPoint_ReturnValue) == 0x0000B8, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_GetWindowPointFromScreenPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_GetTriangleIndexAtWindowPoint_OutBarycentricCoords) == 0x0000C0, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_GetTriangleIndexAtWindowPoint_OutBarycentricCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_GetTriangleIndexAtWindowPoint_ReturnValue) == 0x0000CC, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_GetTriangleIndexAtWindowPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_GetUnprojectedTrianglePoint_ReturnValue) == 0x0000D0, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_GetUnprojectedTrianglePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_BreakVector2D_X) == 0x0000DC, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_BreakVector2D_Y) == 0x0000E0, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E4, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_MakeVector2D_ReturnValue) == 0x0000E8, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x0000F0, "Member 'WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetToolTipWidget
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_PlayerHUD_C_SetToolTipWidget final
{
public:
	class UUserWidget*                            MouseOverWidget;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MouseOver;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_SetToolTipWidget) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_SetToolTipWidget");
static_assert(sizeof(WIDGET_PlayerHUD_C_SetToolTipWidget) == 0x000030, "Wrong size on WIDGET_PlayerHUD_C_SetToolTipWidget");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetToolTipWidget, MouseOverWidget) == 0x000000, "Member 'WIDGET_PlayerHUD_C_SetToolTipWidget::MouseOverWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetToolTipWidget, MouseOver) == 0x000008, "Member 'WIDGET_PlayerHUD_C_SetToolTipWidget::MouseOver' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetToolTipWidget, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_SetToolTipWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetToolTipWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_SetToolTipWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetToolTipWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_SetToolTipWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_ShowToolTip
// 0x0038 (0x0038 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_ShowToolTip final
{
public:
	TScriptInterface<class IINTERF_MouseOverToolTip_C> K2Node_DynamicCast_AsINTERF_Mouse_Over_Tool_Tip;   // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetToolTipText_ToolTip;                   // 0x0018(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_ShowToolTip) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_ShowToolTip");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_ShowToolTip) == 0x000038, "Wrong size on WIDGET_PlayerHUD_C_EVENT_ShowToolTip");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_ShowToolTip, K2Node_DynamicCast_AsINTERF_Mouse_Over_Tool_Tip) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_ShowToolTip::K2Node_DynamicCast_AsINTERF_Mouse_Over_Tool_Tip' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_ShowToolTip, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WIDGET_PlayerHUD_C_EVENT_ShowToolTip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_ShowToolTip, CallFunc_GetToolTipText_ToolTip) == 0x000018, "Member 'WIDGET_PlayerHUD_C_EVENT_ShowToolTip::CallFunc_GetToolTipText_ToolTip' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_ShowToolTip, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_EVENT_ShowToolTip::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHotbarVisibility
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateHotbarVisibility final
{
public:
	ENUM_HotbarStyle                              HotbarStyle;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_HotbarStyle                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_HotbarStyle                              CallFunc_GetHotbarStyle_Result;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_HotbarStyle                              Temp_byte_Variable_3;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateHotbarVisibility");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility) == 0x000050, "Wrong size on WIDGET_PlayerHUD_C_UpdateHotbarVisibility");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, HotbarStyle) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::HotbarStyle' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_bool_Variable) == 0x000001, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_byte_Variable) == 0x000002, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_bool_Variable_1) == 0x000003, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_bool_Variable_2) == 0x000004, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_bool_Variable_3) == 0x000005, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_bool_Variable_4) == 0x000006, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_bool_Variable_5) == 0x000007, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_float_Variable) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_bool_Variable_6) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_byte_Variable_1) == 0x00000D, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_byte_Variable_2) == 0x00000E, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000F, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, CallFunc_GetHotbarStyle_Result) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::CallFunc_GetHotbarStyle_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, K2Node_Select_Default) == 0x000021, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_bool_Variable_7) == 0x000022, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, CallFunc_Less_FloatFloat_ReturnValue) == 0x000023, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_bool_Variable_8) == 0x000024, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, K2Node_Select_Default_1) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_bool_Variable_9) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, CallFunc_PlayAnimationForward_ReturnValue) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, Temp_byte_Variable_3) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, K2Node_Select_Default_2) == 0x000049, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, K2Node_Select_Default_3) == 0x00004A, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x00004B, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.RequestToolTipUpdate
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_PlayerHUD_C_RequestToolTipUpdate final
{
public:
	class UUserWidget*                            ToolTipWidget_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_MouseOverToolTip_C> K2Node_DynamicCast_AsINTERF_Mouse_Over_Tool_Tip;   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetToolTipText_ToolTip;                   // 0x0020(0x0018)()
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_RequestToolTipUpdate) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_RequestToolTipUpdate");
static_assert(sizeof(WIDGET_PlayerHUD_C_RequestToolTipUpdate) == 0x000040, "Wrong size on WIDGET_PlayerHUD_C_RequestToolTipUpdate");
static_assert(offsetof(WIDGET_PlayerHUD_C_RequestToolTipUpdate, ToolTipWidget_0) == 0x000000, "Member 'WIDGET_PlayerHUD_C_RequestToolTipUpdate::ToolTipWidget_0' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_RequestToolTipUpdate, K2Node_DynamicCast_AsINTERF_Mouse_Over_Tool_Tip) == 0x000008, "Member 'WIDGET_PlayerHUD_C_RequestToolTipUpdate::K2Node_DynamicCast_AsINTERF_Mouse_Over_Tool_Tip' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_RequestToolTipUpdate, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WIDGET_PlayerHUD_C_RequestToolTipUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_RequestToolTipUpdate, CallFunc_IsVisible_ReturnValue) == 0x000019, "Member 'WIDGET_PlayerHUD_C_RequestToolTipUpdate::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_RequestToolTipUpdate, CallFunc_GetToolTipText_ToolTip) == 0x000020, "Member 'WIDGET_PlayerHUD_C_RequestToolTipUpdate::CallFunc_GetToolTipText_ToolTip' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_RequestToolTipUpdate, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'WIDGET_PlayerHUD_C_RequestToolTipUpdate::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateMouseOverTooltipPosition
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateMouseOverTooltipPosition final
{
public:
	struct FVector2D                              CallFunc_GetDeprojectedScreenPoint_DeprojectedScreenPosition; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateMouseOverTooltipPosition) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateMouseOverTooltipPosition");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateMouseOverTooltipPosition) == 0x000010, "Wrong size on WIDGET_PlayerHUD_C_UpdateMouseOverTooltipPosition");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseOverTooltipPosition, CallFunc_GetDeprojectedScreenPoint_DeprojectedScreenPosition) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateMouseOverTooltipPosition::CallFunc_GetDeprojectedScreenPoint_DeprojectedScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateMouseOverTooltipPosition, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateMouseOverTooltipPosition::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ToggleMultiFunctionDisplayTab
// 0x000A (0x000A - 0x0000)
struct WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab final
{
public:
	ENUM_MFDTabCategory                           Tab;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTabEnabled_Result;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible_1; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab");
static_assert(sizeof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab) == 0x00000A, "Wrong size on WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab, Tab) == 0x000000, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab::Tab' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab, CallFunc_IsTabEnabled_Result) == 0x000001, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab::CallFunc_IsTabEnabled_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000003, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab, CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible) == 0x000004, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab::CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab, CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible_1) == 0x000005, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab::CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab, CallFunc_Not_PreBool_ReturnValue_1) == 0x000006, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000007, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab, CallFunc_Not_PreBool_ReturnValue_2) == 0x000008, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetPrimaryFrameOpacity
// 0x0040 (0x0040 - 0x0000)
struct WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity final
{
public:
	float                                         NewOpacity;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_2; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_3; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_4; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity");
static_assert(sizeof(WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity) == 0x000040, "Wrong size on WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity, NewOpacity) == 0x000000, "Member 'WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity::NewOpacity' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity, Temp_bool_Variable) == 0x000004, "Member 'WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity, Temp_float_Variable) == 0x000008, "Member 'WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity, K2Node_Select_Default) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1) == 0x000018, "Member 'WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_2) == 0x000020, "Member 'WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_3) == 0x000028, "Member 'WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_4) == 0x000030, "Member 'WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetPrimaryFrameOpacity
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_PlayerHUD_C_GetPrimaryFrameOpacity final
{
public:
	float                                         Opacity;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetPrimaryFrameOpacity) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_GetPrimaryFrameOpacity");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetPrimaryFrameOpacity) == 0x000004, "Wrong size on WIDGET_PlayerHUD_C_GetPrimaryFrameOpacity");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetPrimaryFrameOpacity, Opacity) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetPrimaryFrameOpacity::Opacity' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHotbarSlotFrameOpacity
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_HotbarSlot_C*                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity) == 0x000030, "Wrong size on WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity, Temp_bool_Variable) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity, Temp_float_Variable) == 0x000004, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity, CallFunc_Array_Get_Item) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity, K2Node_Select_Default) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateHotbarSlotFrameOpacity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetCurrentNotification
// 0x0060 (0x0060 - 0x0000)
struct WIDGET_PlayerHUD_C_SetCurrentNotification final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsWarning;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0020(0x0018)()
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_Select_Default;                             // 0x0040(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetDimensionsForNewText_ReturnValue;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetTextMessage_Result;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_SetCurrentNotification) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_SetCurrentNotification");
static_assert(sizeof(WIDGET_PlayerHUD_C_SetCurrentNotification) == 0x000060, "Wrong size on WIDGET_PlayerHUD_C_SetCurrentNotification");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, Message) == 0x000000, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::Message' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, IsWarning) == 0x000018, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::IsWarning' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, Temp_bool_Variable) == 0x000019, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, CallFunc_GetEmptyText_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, CallFunc_GetMeshUIColor_Color) == 0x000038, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, CallFunc_GetMeshUIColor_Color_1) == 0x00003C, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::CallFunc_GetMeshUIColor_Color_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, K2Node_Select_Default) == 0x000040, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000044, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, CallFunc_GetDimensionsForNewText_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::CallFunc_GetDimensionsForNewText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, CallFunc_BreakVector2D_X) == 0x000050, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, CallFunc_BreakVector2D_Y) == 0x000054, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, CallFunc_SetTextMessage_Result) == 0x000058, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::CallFunc_SetTextMessage_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetCurrentNotification, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x00005C, "Member 'WIDGET_PlayerHUD_C_SetCurrentNotification::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetHUDScale
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_PlayerHUD_C_SetHUDScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_SetHUDScale) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_SetHUDScale");
static_assert(sizeof(WIDGET_PlayerHUD_C_SetHUDScale) == 0x000004, "Wrong size on WIDGET_PlayerHUD_C_SetHUDScale");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetHUDScale, Scale) == 0x000000, "Member 'WIDGET_PlayerHUD_C_SetHUDScale::Scale' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetHUDScale
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_PlayerHUD_C_GetHUDScale final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetHUDScale) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_GetHUDScale");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetHUDScale) == 0x000004, "Wrong size on WIDGET_PlayerHUD_C_GetHUDScale");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetHUDScale, Scale) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetHUDScale::Scale' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetSlotNumberFromIndex
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_PlayerHUD_C_GetSlotNumberFromIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Number;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntUpperbound_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetSlotNumberFromIndex) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_GetSlotNumberFromIndex");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetSlotNumberFromIndex) == 0x000010, "Wrong size on WIDGET_PlayerHUD_C_GetSlotNumberFromIndex");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetSlotNumberFromIndex, SlotIndex) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetSlotNumberFromIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetSlotNumberFromIndex, Number) == 0x000004, "Member 'WIDGET_PlayerHUD_C_GetSlotNumberFromIndex::Number' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetSlotNumberFromIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_GetSlotNumberFromIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetSlotNumberFromIndex, CallFunc_WrapIntUpperbound_ReturnValue) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_GetSlotNumberFromIndex::CallFunc_WrapIntUpperbound_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetSlotIndexFromNumber
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_PlayerHUD_C_GetSlotIndexFromNumber final
{
public:
	int32                                         SlotNumber;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntLowerbound_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetSlotIndexFromNumber) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_GetSlotIndexFromNumber");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetSlotIndexFromNumber) == 0x000010, "Wrong size on WIDGET_PlayerHUD_C_GetSlotIndexFromNumber");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetSlotIndexFromNumber, SlotNumber) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetSlotIndexFromNumber::SlotNumber' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetSlotIndexFromNumber, Index_0) == 0x000004, "Member 'WIDGET_PlayerHUD_C_GetSlotIndexFromNumber::Index_0' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetSlotIndexFromNumber, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_GetSlotIndexFromNumber::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetSlotIndexFromNumber, CallFunc_WrapIntLowerbound_ReturnValue) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_GetSlotIndexFromNumber::CallFunc_WrapIntLowerbound_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.CycleMultiFunctionDisplayTab
// 0x0007 (0x0007 - 0x0000)
struct WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab final
{
public:
	bool                                          Previous;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MFDTabCategory                           NewTab;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MFDTabCategory                           CallFunc_GetAdjacentMultiFunctionDisplayTab_AdjacentTab; // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_MFDTabCategory                           CallFunc_GetAdjacentMultiFunctionDisplayTab_AdjacentTab_1; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTabEnabled_Result;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab");
static_assert(sizeof(WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab) == 0x000007, "Wrong size on WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab");
static_assert(offsetof(WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab, Previous) == 0x000000, "Member 'WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab::Previous' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab, NewTab) == 0x000001, "Member 'WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab::NewTab' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab, CallFunc_GetAdjacentMultiFunctionDisplayTab_AdjacentTab) == 0x000003, "Member 'WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab::CallFunc_GetAdjacentMultiFunctionDisplayTab_AdjacentTab' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab, CallFunc_GetAdjacentMultiFunctionDisplayTab_AdjacentTab_1) == 0x000004, "Member 'WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab::CallFunc_GetAdjacentMultiFunctionDisplayTab_AdjacentTab_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab, CallFunc_IsTabEnabled_Result) == 0x000005, "Member 'WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab::CallFunc_IsTabEnabled_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab, CallFunc_Not_PreBool_ReturnValue_1) == 0x000006, "Member 'WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHazardLevel
// 0x0118 (0x0118 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateHazardLevel final
{
public:
	class UAttribMod*                             HazardMod;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HazardLevel;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBioPoisoning;                                    // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HazardIndex;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0040)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
	int32                                         K2Node_Select_Default;                             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00A0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x00E0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x00F0(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateHazardLevel) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateHazardLevel");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateHazardLevel) == 0x000118, "Wrong size on WIDGET_PlayerHUD_C_UpdateHazardLevel");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, HazardMod) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::HazardMod' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, HazardLevel) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::HazardLevel' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, IsBioPoisoning) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::IsBioPoisoning' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, HazardIndex) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::HazardIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, Temp_int_Variable) == 0x000014, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, Temp_int_Variable_1) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, CallFunc_Greater_IntInt_ReturnValue) == 0x00001D, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00001E, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00001F, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, Temp_bool_Variable) == 0x000068, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, K2Node_MakeArray_Array) == 0x000070, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, CallFunc_Format_ReturnValue) == 0x000080, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, K2Node_Select_Default) == 0x000098, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000A0, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, K2Node_MakeArray_Array_1) == 0x0000E0, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, CallFunc_Format_ReturnValue_1) == 0x0000F0, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000108, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateHazardLevel, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000110, "Member 'WIDGET_PlayerHUD_C_UpdateHazardLevel::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_BeginCrashSequence
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_BeginCrashSequence final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_BeginCrashSequence) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_BeginCrashSequence");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_BeginCrashSequence) == 0x000010, "Wrong size on WIDGET_PlayerHUD_C_EVENT_BeginCrashSequence");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_BeginCrashSequence, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_BeginCrashSequence::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnCrashSequenceFinished
// 0x0014 (0x0014 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnCrashSequenceFinished final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnCrashSequenceFinished) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnCrashSequenceFinished");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnCrashSequenceFinished) == 0x000014, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnCrashSequenceFinished");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCrashSequenceFinished, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCrashSequenceFinished::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnCrashSequenceFinished, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_EVENT_OnCrashSequenceFinished::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnUsingGamepadChanged
// 0x0058 (0x0058 - 0x0000)
struct WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged final
{
public:
	bool                                          IsUsingGamepad;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0038(0x0010)(NoDestructor)
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged");
static_assert(sizeof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged) == 0x000058, "Wrong size on WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged, IsUsingGamepad) == 0x000000, "Member 'WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged::IsUsingGamepad' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_GetViewportSize_SizeX) == 0x000018, "Member 'WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_GetViewportSize_SizeY) == 0x00001C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_GetPlayerController_ReturnValue_1) == 0x000020, "Member 'WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_Divide_IntInt_ReturnValue) == 0x000028, "Member 'WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_Divide_IntInt_ReturnValue_1) == 0x00002C, "Member 'WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_GetPlayerController_ReturnValue_2) == 0x000030, "Member 'WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged, K2Node_MakeStruct_Anchors) == 0x000038, "Member 'WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_GetMainMenuWidget_Result) == 0x000048, "Member 'WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateCountdownTimeRemaining
// 0x0180 (0x0180 - 0x0000)
struct WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CountdownTimeRemaining;                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameCountdownSecondsRemaining_Result;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_FromSeconds_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Days;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Hours;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Minutes;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Seconds;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakTimespan_Milliseconds;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0050(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0068(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x00A8(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x00C0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00D8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0118(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0168(0x0018)()
};
static_assert(alignof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining");
static_assert(sizeof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining) == 0x000180, "Wrong size on WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, GameInstance) == 0x000000, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::GameInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CountdownTimeRemaining) == 0x000008, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CountdownTimeRemaining' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_IsVisible_ReturnValue) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_GetGameCountdownSecondsRemaining_Result) == 0x000010, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_GetGameCountdownSecondsRemaining_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_FromSeconds_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_FromSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_BreakTimespan_Days) == 0x000028, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_BreakTimespan_Days' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_BreakTimespan_Hours) == 0x00002C, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_BreakTimespan_Hours' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_BreakTimespan_Minutes) == 0x000030, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_BreakTimespan_Minutes' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_BreakTimespan_Seconds) == 0x000034, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_BreakTimespan_Seconds' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_BreakTimespan_Milliseconds) == 0x000038, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_BreakTimespan_Milliseconds' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_Conv_IntToText_ReturnValue) == 0x000050, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, K2Node_MakeStruct_FormatArgumentData) == 0x000068, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_Conv_IntToText_ReturnValue_2) == 0x0000C0, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000D8, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, K2Node_MakeStruct_FormatArgumentData_2) == 0x000118, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, K2Node_MakeArray_Array) == 0x000158, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining, CallFunc_Format_ReturnValue) == 0x000168, "Member 'WIDGET_PlayerHUD_C_UpdateCountdownTimeRemaining::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.DisplayCountdownTimerShort
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_PlayerHUD_C_DisplayCountdownTimerShort final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGameCountdownCritical_Result;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_DisplayCountdownTimerShort) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_DisplayCountdownTimerShort");
static_assert(sizeof(WIDGET_PlayerHUD_C_DisplayCountdownTimerShort) == 0x000028, "Wrong size on WIDGET_PlayerHUD_C_DisplayCountdownTimerShort");
static_assert(offsetof(WIDGET_PlayerHUD_C_DisplayCountdownTimerShort, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'WIDGET_PlayerHUD_C_DisplayCountdownTimerShort::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DisplayCountdownTimerShort, K2Node_DynamicCast_AsGI_Single_Player) == 0x000008, "Member 'WIDGET_PlayerHUD_C_DisplayCountdownTimerShort::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DisplayCountdownTimerShort, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WIDGET_PlayerHUD_C_DisplayCountdownTimerShort::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DisplayCountdownTimerShort, CallFunc_IsGameCountdownCritical_Result) == 0x000011, "Member 'WIDGET_PlayerHUD_C_DisplayCountdownTimerShort::CallFunc_IsGameCountdownCritical_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DisplayCountdownTimerShort, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'WIDGET_PlayerHUD_C_DisplayCountdownTimerShort::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_DisplayCountdownTimerShort, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'WIDGET_PlayerHUD_C_DisplayCountdownTimerShort::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.MoveCursorToHotbarSlotIndex
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex final
{
public:
	int32                                         NewSlotIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetProjectedCellLocationFromGridCoordinates_OutProjectedLocation; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetProjectedCellLocationFromGridCoordinates_ReturnValue; // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex");
static_assert(sizeof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex) == 0x000050, "Wrong size on WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex, NewSlotIndex) == 0x000000, "Member 'WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex::NewSlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00000C, "Member 'WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex, CallFunc_MakeVector2D_ReturnValue_1) == 0x000010, "Member 'WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex, K2Node_MakeStruct_IntPoint) == 0x000018, "Member 'WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex, CallFunc_Array_Get_Item) == 0x000020, "Member 'WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex, CallFunc_GetProjectedCellLocationFromGridCoordinates_OutProjectedLocation) == 0x000028, "Member 'WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex::CallFunc_GetProjectedCellLocationFromGridCoordinates_OutProjectedLocation' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex, CallFunc_GetProjectedCellLocationFromGridCoordinates_ReturnValue) == 0x000030, "Member 'WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex::CallFunc_GetProjectedCellLocationFromGridCoordinates_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x000034, "Member 'WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x00003C, "Member 'WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000044, "Member 'WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetGameLockedForMenus
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_PlayerHUD_C_SetGameLockedForMenus final
{
public:
	bool                                          LockGame;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetGamePaused_ReturnValue;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetGamePaused_ReturnValue_1;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_SetGameLockedForMenus) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_SetGameLockedForMenus");
static_assert(sizeof(WIDGET_PlayerHUD_C_SetGameLockedForMenus) == 0x000004, "Wrong size on WIDGET_PlayerHUD_C_SetGameLockedForMenus");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetGameLockedForMenus, LockGame) == 0x000000, "Member 'WIDGET_PlayerHUD_C_SetGameLockedForMenus::LockGame' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetGameLockedForMenus, Result) == 0x000001, "Member 'WIDGET_PlayerHUD_C_SetGameLockedForMenus::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetGameLockedForMenus, CallFunc_SetGamePaused_ReturnValue) == 0x000002, "Member 'WIDGET_PlayerHUD_C_SetGameLockedForMenus::CallFunc_SetGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetGameLockedForMenus, CallFunc_SetGamePaused_ReturnValue_1) == 0x000003, "Member 'WIDGET_PlayerHUD_C_SetGameLockedForMenus::CallFunc_SetGamePaused_ReturnValue_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnCharacterDied
// 0x0080 (0x0080 - 0x0000)
struct WIDGET_PlayerHUD_C_OnCharacterDied final
{
public:
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Result;                                            // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLoadingScreenVisible_Result;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStreamingLevels_Result;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible; // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_OnCharacterDied) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_OnCharacterDied");
static_assert(sizeof(WIDGET_PlayerHUD_C_OnCharacterDied) == 0x000080, "Wrong size on WIDGET_PlayerHUD_C_OnCharacterDied");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCharacterDied, DamageInstance) == 0x000000, "Member 'WIDGET_PlayerHUD_C_OnCharacterDied::DamageInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCharacterDied, Result) == 0x000028, "Member 'WIDGET_PlayerHUD_C_OnCharacterDied::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCharacterDied, GameInstance) == 0x000030, "Member 'WIDGET_PlayerHUD_C_OnCharacterDied::GameInstance' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCharacterDied, CallFunc_IsLoadingScreenVisible_Result) == 0x000038, "Member 'WIDGET_PlayerHUD_C_OnCharacterDied::CallFunc_IsLoadingScreenVisible_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCharacterDied, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'WIDGET_PlayerHUD_C_OnCharacterDied::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCharacterDied, CallFunc_IsStreamingLevels_Result) == 0x000048, "Member 'WIDGET_PlayerHUD_C_OnCharacterDied::CallFunc_IsStreamingLevels_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCharacterDied, K2Node_DynamicCast_AsGI_Single_Player) == 0x000050, "Member 'WIDGET_PlayerHUD_C_OnCharacterDied::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCharacterDied, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'WIDGET_PlayerHUD_C_OnCharacterDied::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCharacterDied, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'WIDGET_PlayerHUD_C_OnCharacterDied::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCharacterDied, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000070, "Member 'WIDGET_PlayerHUD_C_OnCharacterDied::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCharacterDied, CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible) == 0x000078, "Member 'WIDGET_PlayerHUD_C_OnCharacterDied::CallFunc_ShowMultiFunctionDisplay_MainDisplayVisible' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnCharacterRespawned
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_PlayerHUD_C_OnCharacterRespawned final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_OnCharacterRespawned) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_OnCharacterRespawned");
static_assert(sizeof(WIDGET_PlayerHUD_C_OnCharacterRespawned) == 0x000001, "Wrong size on WIDGET_PlayerHUD_C_OnCharacterRespawned");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnCharacterRespawned, Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_OnCharacterRespawned::Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetTutorialWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_PlayerHUD_C_GetTutorialWidget final
{
public:
	class UWIDGET_TutorialMessage_C*              Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetTutorialWidget) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GetTutorialWidget");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetTutorialWidget) == 0x000008, "Wrong size on WIDGET_PlayerHUD_C_GetTutorialWidget");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetTutorialWidget, Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetTutorialWidget::Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetMainMenuWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_PlayerHUD_C_GetMainMenuWidget final
{
public:
	class UWIDGET_MainMenu_InGame_C*              Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetMainMenuWidget) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GetMainMenuWidget");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetMainMenuWidget) == 0x000008, "Wrong size on WIDGET_PlayerHUD_C_GetMainMenuWidget");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetMainMenuWidget, Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetMainMenuWidget::Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetCameraPanelWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_PlayerHUD_C_GetCameraPanelWidget final
{
public:
	class UCameraPanelWidget*                     Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetCameraPanelWidget) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GetCameraPanelWidget");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetCameraPanelWidget) == 0x000008, "Wrong size on WIDGET_PlayerHUD_C_GetCameraPanelWidget");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetCameraPanelWidget, Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetCameraPanelWidget::Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InvokeNavManager
// 0x01E0 (0x01E0 - 0x0000)
struct WIDGET_PlayerHUD_C_InvokeNavManager final
{
public:
	bool                                          InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MenuNavigationInput                      InputType;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewStartSlotX;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewStartSlotIndex;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_InventoryPanel_C*               AdjacentInventoryPanel;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              NewGridCoords;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              NavDirection;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        CardinalDirection;                                 // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           NewItem;                                           // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CursorItem;                                        // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_InventoryPanel_C*               InventoryPanel;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords; // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntUpperbound_ReturnValue;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntLowerbound_ReturnValue;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntUpperbound_ReturnValue_1;          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntLowerbound_ReturnValue_1;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridHeightAtHorizontalSlotIndex_Result; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSlotIndex_Result;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInventoryContextEnabled_Result;         // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_GetRotatedGridSize_Result;                // 0x00DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x00E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridHeight_Result;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue_1;    // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridWidth_Result;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_2;                      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue_2;    // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DotProduct2D_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_Add_IntPointIntPoint_ReturnValue;         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex_1; // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSlotIndicesForItemWithSize_SlotIndices; // 0x0138(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x014D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14E[0x2];                                      // 0x014E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_Result;                      // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item_1;                       // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBestSlotInCardinalDirection_Result;    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSlotIndex_Result_1;                // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex_2; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetIntPointFromCardinalDirection_Point;   // 0x016C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Multiply_IntPointIntPoint_ReturnValue;    // 0x0174(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords_1; // 0x017C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Add_IntPointIntPoint_ReturnValue_1;       // 0x0184(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result_1;                   // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridHeight_Result_1;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridWidth_Result_1;                    // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords_2; // 0x01AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_Result_1;                    // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_3;                      // 0x01BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex_3; // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x01CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x01D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible; // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_2;                  // 0x01D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_3;                  // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNOR_ReturnValue;                   // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible_1; // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_InvokeNavManager) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_InvokeNavManager");
static_assert(sizeof(WIDGET_PlayerHUD_C_InvokeNavManager) == 0x0001E0, "Wrong size on WIDGET_PlayerHUD_C_InvokeNavManager");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, InputState) == 0x000000, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::InputState' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, InputType) == 0x000001, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::InputType' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, Result) == 0x000002, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, NewStartSlotX) == 0x000004, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::NewStartSlotX' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, NewStartSlotIndex) == 0x000008, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::NewStartSlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, AdjacentInventoryPanel) == 0x000010, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::AdjacentInventoryPanel' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, NewGridCoords) == 0x000018, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::NewGridCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, NavDirection) == 0x000020, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::NavDirection' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CardinalDirection) == 0x000028, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CardinalDirection' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, NewItem) == 0x000030, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::NewItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CursorItem) == 0x000038, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CursorItem' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, InventoryPanel) == 0x000040, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::InventoryPanel' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords) == 0x00004C, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000054, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000058, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00005C, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000060, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Round_ReturnValue) == 0x000064, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_WrapIntUpperbound_ReturnValue) == 0x00006C, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_WrapIntUpperbound_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Subtract_IntInt_ReturnValue) == 0x000070, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_WrapIntLowerbound_ReturnValue) == 0x000074, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_WrapIntLowerbound_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_WrapIntUpperbound_ReturnValue_1) == 0x00007C, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_WrapIntUpperbound_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Array_Find_ReturnValue) == 0x000080, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000084, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_WrapIntLowerbound_ReturnValue_1) == 0x000088, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_WrapIntLowerbound_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00008C, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000090, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, K2Node_SwitchEnum_CmpSuccess) == 0x000094, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Round_ReturnValue_1) == 0x000098, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetGridHeightAtHorizontalSlotIndex_Result) == 0x00009C, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetGridHeightAtHorizontalSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000A4, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, K2Node_MakeStruct_IntPoint) == 0x0000A8, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsVisible_ReturnValue) == 0x0000B0, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Not_PreBool_ReturnValue) == 0x0000B1, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex) == 0x0000B4, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetSlotItem_Item) == 0x0000B8, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000C0, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsValidSlotIndex_Result) == 0x0000C1, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsValidSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C2, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, K2Node_SwitchEnum_CmpSuccess_2) == 0x0000C3, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetCursorItem_Result) == 0x0000C8, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, K2Node_MakeStruct_IntPoint_1) == 0x0000D0, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsValid_ReturnValue_1) == 0x0000D8, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsValid_ReturnValue_2) == 0x0000D9, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsInventoryContextEnabled_Result) == 0x0000DA, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsInventoryContextEnabled_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetRotatedGridSize_Result) == 0x0000DC, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetRotatedGridSize_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x0000E4, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Multiply_IntInt_ReturnValue) == 0x0000EC, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetGridHeight_Result) == 0x0000F0, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetGridHeight_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Conv_IntPointToVector2D_ReturnValue_1) == 0x0000F4, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Conv_IntPointToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetGridWidth_Result) == 0x0000FC, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetGridWidth_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, K2Node_MakeStruct_IntPoint_2) == 0x000100, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::K2Node_MakeStruct_IntPoint_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Conv_IntPointToVector2D_ReturnValue_2) == 0x000108, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Conv_IntPointToVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000110, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000118, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_DotProduct2D_ReturnValue) == 0x000120, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000124, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Add_IntPointIntPoint_ReturnValue) == 0x000128, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Add_IntPointIntPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex_1) == 0x000130, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetSlotIndicesForItemWithSize_SlotIndices) == 0x000138, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetSlotIndicesForItemWithSize_SlotIndices' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00014C, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsValid_ReturnValue_3) == 0x00014D, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetSlotIndex_Result) == 0x000150, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetSlotItem_Item_1) == 0x000158, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetSlotItem_Item_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetBestSlotInCardinalDirection_Result) == 0x000160, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetBestSlotInCardinalDirection_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsValid_ReturnValue_4) == 0x000164, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsValidSlotIndex_Result_1) == 0x000165, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsValidSlotIndex_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex_2) == 0x000168, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetIntPointFromCardinalDirection_Point) == 0x00016C, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetIntPointFromCardinalDirection_Point' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Multiply_IntPointIntPoint_ReturnValue) == 0x000174, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Multiply_IntPointIntPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords_1) == 0x00017C, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Add_IntPointIntPoint_ReturnValue_1) == 0x000184, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Add_IntPointIntPoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetCursorItem_Result_1) == 0x000190, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetCursorItem_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetGridHeight_Result_1) == 0x000198, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetGridHeight_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetGridWidth_Result_1) == 0x00019C, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetGridWidth_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0001A0, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x0001A4, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsVisible_ReturnValue_1) == 0x0001A8, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords_2) == 0x0001AC, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetGridCoordinatesFromSlotIndex_GridCoords_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetSlotIndex_Result_1) == 0x0001B4, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetSlotIndex_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_Min_ReturnValue) == 0x0001B8, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, K2Node_MakeStruct_IntPoint_3) == 0x0001BC, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::K2Node_MakeStruct_IntPoint_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0001C4, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex_3) == 0x0001C8, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_GetSlotIndexFromGridCoordinates_SlotIndex_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0001CC, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001CD, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0001CE, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0001CF, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0001D0, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsValid_ReturnValue_5) == 0x0001D1, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, K2Node_SwitchEnum_CmpSuccess_3) == 0x0001D2, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0001D3, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible) == 0x0001D4, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsValid_ReturnValue_6) == 0x0001D5, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0001D6, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsVisible_ReturnValue_2) == 0x0001D7, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsVisible_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_IsVisible_ReturnValue_3) == 0x0001D8, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_IsVisible_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_BooleanNOR_ReturnValue) == 0x0001D9, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_BooleanNOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_InvokeNavManager, CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible_1) == 0x0001DA, "Member 'WIDGET_PlayerHUD_C_InvokeNavManager::CallFunc_ToggleMultiFunctionDisplay_MainDisplayVisible_1' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetSubtitleWidget
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_PlayerHUD_C_GetSubtitleWidget final
{
public:
	class UWIDGET_Subtitles_C*                    Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetSubtitleWidget) == 0x000008, "Wrong alignment on WIDGET_PlayerHUD_C_GetSubtitleWidget");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetSubtitleWidget) == 0x000008, "Wrong size on WIDGET_PlayerHUD_C_GetSubtitleWidget");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetSubtitleWidget, Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetSubtitleWidget::Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnStartedLoadingGame
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_PlayerHUD_C_OnStartedLoadingGame final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_OnStartedLoadingGame) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_OnStartedLoadingGame");
static_assert(sizeof(WIDGET_PlayerHUD_C_OnStartedLoadingGame) == 0x000001, "Wrong size on WIDGET_PlayerHUD_C_OnStartedLoadingGame");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnStartedLoadingGame, Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_OnStartedLoadingGame::Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetMFDState
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_PlayerHUD_C_GetMFDState final
{
public:
	bool                                          IsMFDOpen;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MFDTabCategory                           CurrentMFDTab_0;                                   // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_GetMFDState) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_GetMFDState");
static_assert(sizeof(WIDGET_PlayerHUD_C_GetMFDState) == 0x000002, "Wrong size on WIDGET_PlayerHUD_C_GetMFDState");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetMFDState, IsMFDOpen) == 0x000000, "Member 'WIDGET_PlayerHUD_C_GetMFDState::IsMFDOpen' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_GetMFDState, CurrentMFDTab_0) == 0x000001, "Member 'WIDGET_PlayerHUD_C_GetMFDState::CurrentMFDTab_0' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnPersistentMapMove
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_PlayerHUD_C_OnPersistentMapMove final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_OnPersistentMapMove) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_OnPersistentMapMove");
static_assert(sizeof(WIDGET_PlayerHUD_C_OnPersistentMapMove) == 0x000001, "Wrong size on WIDGET_PlayerHUD_C_OnPersistentMapMove");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnPersistentMapMove, Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_OnPersistentMapMove::Result' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnFinishedLoadingGame
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_PlayerHUD_C_OnFinishedLoadingGame final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_PlayerHUD_C_OnFinishedLoadingGame) == 0x000001, "Wrong alignment on WIDGET_PlayerHUD_C_OnFinishedLoadingGame");
static_assert(sizeof(WIDGET_PlayerHUD_C_OnFinishedLoadingGame) == 0x000002, "Wrong size on WIDGET_PlayerHUD_C_OnFinishedLoadingGame");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnFinishedLoadingGame, Result) == 0x000000, "Member 'WIDGET_PlayerHUD_C_OnFinishedLoadingGame::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_OnFinishedLoadingGame, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000001, "Member 'WIDGET_PlayerHUD_C_OnFinishedLoadingGame::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetHoldInteractionProgress
// 0x000C (0x000C - 0x0000)
struct WIDGET_PlayerHUD_C_SetHoldInteractionProgress final
{
public:
	float                                         Progress;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_PlayerHUD_C_SetHoldInteractionProgress) == 0x000004, "Wrong alignment on WIDGET_PlayerHUD_C_SetHoldInteractionProgress");
static_assert(sizeof(WIDGET_PlayerHUD_C_SetHoldInteractionProgress) == 0x00000C, "Wrong size on WIDGET_PlayerHUD_C_SetHoldInteractionProgress");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetHoldInteractionProgress, Progress) == 0x000000, "Member 'WIDGET_PlayerHUD_C_SetHoldInteractionProgress::Progress' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetHoldInteractionProgress, Result) == 0x000004, "Member 'WIDGET_PlayerHUD_C_SetHoldInteractionProgress::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_PlayerHUD_C_SetHoldInteractionProgress, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'WIDGET_PlayerHUD_C_SetHoldInteractionProgress::CallFunc_FClamp_ReturnValue' has a wrong offset!");

}


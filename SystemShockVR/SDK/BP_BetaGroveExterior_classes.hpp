#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BetaGroveExterior

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BetaGroveExterior.BP_BetaGroveExterior_C
// 0x0048 (0x0268 - 0x0220)
class ABP_BetaGroveExterior_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_ExteriorCullable_C*               COMP_ExteriorCullable;                             // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_BetaGroveStripLights;                           // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Grove_Armature;                                 // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         GroveJettisonDelay;                                // 0x0240(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    GroveJettisonStoryQuest;                           // 0x0248(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	struct FTimerHandle                           GroveJettisonTimerHandle;                          // 0x0258(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           JettisonGroveMontage;                              // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BetaGroveExterior(int32 EntryPoint);
	void ReceiveBeginPlay();
	void InitializeBetaGroveExterior();
	void EVENT_OnStoryQuestChanged(class FName StoryQuestName, bool Value);
	void TryResumeJettisonMontage(float StartTime);
	void TryStartGroveJettisonTimer(float Delay, bool* Result);
	void OnGroveJettisonDelayStarted();
	void UpdateAnimInstanceState();
	void EVENT_OnJettisonGrove();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BetaGroveExterior_C">();
	}
	static class ABP_BetaGroveExterior_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BetaGroveExterior_C>();
	}
};
static_assert(alignof(ABP_BetaGroveExterior_C) == 0x000008, "Wrong alignment on ABP_BetaGroveExterior_C");
static_assert(sizeof(ABP_BetaGroveExterior_C) == 0x000268, "Wrong size on ABP_BetaGroveExterior_C");
static_assert(offsetof(ABP_BetaGroveExterior_C, UberGraphFrame) == 0x000220, "Member 'ABP_BetaGroveExterior_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BetaGroveExterior_C, COMP_ExteriorCullable) == 0x000228, "Member 'ABP_BetaGroveExterior_C::COMP_ExteriorCullable' has a wrong offset!");
static_assert(offsetof(ABP_BetaGroveExterior_C, NS_BetaGroveStripLights) == 0x000230, "Member 'ABP_BetaGroveExterior_C::NS_BetaGroveStripLights' has a wrong offset!");
static_assert(offsetof(ABP_BetaGroveExterior_C, SK_Grove_Armature) == 0x000238, "Member 'ABP_BetaGroveExterior_C::SK_Grove_Armature' has a wrong offset!");
static_assert(offsetof(ABP_BetaGroveExterior_C, GroveJettisonDelay) == 0x000240, "Member 'ABP_BetaGroveExterior_C::GroveJettisonDelay' has a wrong offset!");
static_assert(offsetof(ABP_BetaGroveExterior_C, GroveJettisonStoryQuest) == 0x000248, "Member 'ABP_BetaGroveExterior_C::GroveJettisonStoryQuest' has a wrong offset!");
static_assert(offsetof(ABP_BetaGroveExterior_C, GroveJettisonTimerHandle) == 0x000258, "Member 'ABP_BetaGroveExterior_C::GroveJettisonTimerHandle' has a wrong offset!");
static_assert(offsetof(ABP_BetaGroveExterior_C, JettisonGroveMontage) == 0x000260, "Member 'ABP_BetaGroveExterior_C::JettisonGroveMontage' has a wrong offset!");

}


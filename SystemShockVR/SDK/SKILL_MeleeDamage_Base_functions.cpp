#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SKILL_MeleeDamage_Base

#include "Basic.hpp"

#include "SKILL_MeleeDamage_Base_classes.hpp"
#include "SKILL_MeleeDamage_Base_parameters.hpp"


namespace SDK
{

// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.EVENT_ColliderBeginOverlap
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlapActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OverlapComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             HitboxTag_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DamageScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBoxComponent*                    HitboxComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_MeleeDamage_Base_C::EVENT_ColliderBeginOverlap(class AActor* OverlapActor, class UPrimitiveComponent* OverlapComponent, class FName HitboxTag_0, float DamageScale, class UBoxComponent* HitboxComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_MeleeDamage_Base_C", "EVENT_ColliderBeginOverlap");

	Params::SKILL_MeleeDamage_Base_C_EVENT_ColliderBeginOverlap Parms{};

	Parms.OverlapActor = OverlapActor;
	Parms.OverlapComponent = OverlapComponent;
	Parms.HitboxTag_0 = HitboxTag_0;
	Parms.DamageScale = DamageScale;
	Parms.HitboxComponent = HitboxComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.InitializeSkill
// (Public, BlueprintCallable, BlueprintEvent)

void USKILL_MeleeDamage_Base_C::InitializeSkill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_MeleeDamage_Base_C", "InitializeSkill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.TryUseSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCharacterAction_C*               Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_MeleeDamage_Base_C::TryUseSkill(class UCharacterAction_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_MeleeDamage_Base_C", "TryUseSkill");

	Params::SKILL_MeleeDamage_Base_C_TryUseSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.GetKnockbackDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              OverlapComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBoxComponent*                    HitboxComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_MeleeDamage_Base_C::GetKnockbackDirection(class UPrimitiveComponent* OverlapComponent, class UBoxComponent* HitboxComponent, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_MeleeDamage_Base_C", "GetKnockbackDirection");

	Params::SKILL_MeleeDamage_Base_C_GetKnockbackDirection Parms{};

	Parms.OverlapComponent = OverlapComponent;
	Parms.HitboxComponent = HitboxComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.CanUseSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_MeleeDamage_Base_C::CanUseSkill(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_MeleeDamage_Base_C", "CanUseSkill");

	Params::SKILL_MeleeDamage_Base_C_CanUseSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.GetMeleeDamageValue
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_MeleeDamage_Base_C::GetMeleeDamageValue(float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_MeleeDamage_Base_C", "GetMeleeDamageValue");

	Params::SKILL_MeleeDamage_Base_C_GetMeleeDamageValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.PostApplyDamage
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAttribManagerComponent*          HitAttributeManager                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_MeleeDamage_Base_C::PostApplyDamage(class UAttribManagerComponent* HitAttributeManager, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_MeleeDamage_Base_C", "PostApplyDamage");

	Params::SKILL_MeleeDamage_Base_C_PostApplyDamage Parms{};

	Parms.HitAttributeManager = HitAttributeManager;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.ReceiveAnimationMessage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_MeleeDamage_Base_C::ReceiveAnimationMessage(const class FString& Message, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_MeleeDamage_Base_C", "ReceiveAnimationMessage");

	Params::SKILL_MeleeDamage_Base_C_ReceiveAnimationMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.IsSkillActivated
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_MeleeDamage_Base_C::IsSkillActivated(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_MeleeDamage_Base_C", "IsSkillActivated");

	Params::SKILL_MeleeDamage_Base_C_IsSkillActivated Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.OnDeactivateSkill
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_MeleeDamage_Base_C::OnDeactivateSkill(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_MeleeDamage_Base_C", "OnDeactivateSkill");

	Params::SKILL_MeleeDamage_Base_C_OnDeactivateSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_MeleeDamage_Base.SKILL_MeleeDamage_Base_C.OnHitboxEnabled
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_MeleeDamage_Base_C::OnHitboxEnabled(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_MeleeDamage_Base_C", "OnHitboxEnabled");

	Params::SKILL_MeleeDamage_Base_C_OnHitboxEnabled Parms{};

	Parms.Tag = Tag;

	UObject::ProcessEvent(Func, &Parms);
}

}


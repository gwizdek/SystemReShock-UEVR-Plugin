#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_JunctionBox

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_JunctionBox.AnimBP_JunctionBox_C.ExecuteUbergraph_AnimBP_JunctionBox
// 0x0038 (0x0038 - 0x0000)
struct AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APUZZLE_Base_C*                         K2Node_DynamicCast_AsPUZZLE_Base;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue_1;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APUZZLE_Base_C*                         K2Node_DynamicCast_AsPUZZLE_Base_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox) == 0x000008, "Wrong alignment on AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox");
static_assert(sizeof(AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox) == 0x000038, "Wrong size on AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox");
static_assert(offsetof(AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox, EntryPoint) == 0x000000, "Member 'AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox, CallFunc_GetOwningActor_ReturnValue) == 0x000008, "Member 'AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox, K2Node_DynamicCast_AsPUZZLE_Base) == 0x000010, "Member 'AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox::K2Node_DynamicCast_AsPUZZLE_Base' has a wrong offset!");
static_assert(offsetof(AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox, CallFunc_GetOwningActor_ReturnValue_1) == 0x000020, "Member 'AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox::CallFunc_GetOwningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox, K2Node_DynamicCast_AsPUZZLE_Base_1) == 0x000028, "Member 'AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox::K2Node_DynamicCast_AsPUZZLE_Base_1' has a wrong offset!");
static_assert(offsetof(AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'AnimBP_JunctionBox_C_ExecuteUbergraph_AnimBP_JunctionBox::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function AnimBP_JunctionBox.AnimBP_JunctionBox_C.SetIsOpen
// 0x0001 (0x0001 - 0x0000)
struct AnimBP_JunctionBox_C_SetIsOpen final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AnimBP_JunctionBox_C_SetIsOpen) == 0x000001, "Wrong alignment on AnimBP_JunctionBox_C_SetIsOpen");
static_assert(sizeof(AnimBP_JunctionBox_C_SetIsOpen) == 0x000001, "Wrong size on AnimBP_JunctionBox_C_SetIsOpen");
static_assert(offsetof(AnimBP_JunctionBox_C_SetIsOpen, State) == 0x000000, "Member 'AnimBP_JunctionBox_C_SetIsOpen::State' has a wrong offset!");

// Function AnimBP_JunctionBox.AnimBP_JunctionBox_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_JunctionBox_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBP_JunctionBox_C_AnimGraph) == 0x000008, "Wrong alignment on AnimBP_JunctionBox_C_AnimGraph");
static_assert(sizeof(AnimBP_JunctionBox_C_AnimGraph) == 0x000010, "Wrong size on AnimBP_JunctionBox_C_AnimGraph");
static_assert(offsetof(AnimBP_JunctionBox_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'AnimBP_JunctionBox_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}


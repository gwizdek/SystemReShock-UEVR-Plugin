#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_InventoryPanel

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_ItemUI_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.InitializeInventoryPanel
// 0x0100 (0x0100 - 0x0000)
struct WIDGET_InventoryPanel_C_InitializeInventoryPanel final
{
public:
	class UWIDGET_PlayerHUD_C*                    HUD;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        Bag;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemIndexUI;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  ItemMeshWidget;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CurrentItem;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetSlotIndicesForItemInstance_Slot_Indices; // 0x0048(0x0010)(ReferenceParm)
	struct FIntPoint                              CallFunc_GetRotatedGridSize_Result;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 SlotIndex)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_GetSlotIndex_Result;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_ItemUI                         K2Node_MakeStruct_STRUCT_ItemUI;                   // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridHeight_Result;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  CallFunc_CreateItemMeshWidgetFromItem_MeshWidget;  // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridWidth_Result;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITEM_Base_C*>                   CallFunc_GetItemArray_Items;                       // 0x00B8(0x0010)(ReferenceParm)
	class UITEM_Base_C*                           CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxSlots_Count;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E6[0x2];                                       // 0x00E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00EC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBagUI_C*                      CallFunc_SpawnObject_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_InventoryPanel_C_InitializeInventoryPanel) == 0x000008, "Wrong alignment on WIDGET_InventoryPanel_C_InitializeInventoryPanel");
static_assert(sizeof(WIDGET_InventoryPanel_C_InitializeInventoryPanel) == 0x000100, "Wrong size on WIDGET_InventoryPanel_C_InitializeInventoryPanel");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, HUD) == 0x000000, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::HUD' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, Bag) == 0x000008, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::Bag' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, ItemIndexUI) == 0x000010, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::ItemIndexUI' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, ItemMeshWidget) == 0x000018, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::ItemMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CurrentItem) == 0x000020, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CurrentItem' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, Temp_int_Variable) == 0x000038, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_GetBag_Result) == 0x000040, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_GetSlotIndicesForItemInstance_Slot_Indices) == 0x000048, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_GetSlotIndicesForItemInstance_Slot_Indices' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_GetRotatedGridSize_Result) == 0x000058, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_GetRotatedGridSize_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_Array_Get_Item) == 0x000060, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, K2Node_CreateDelegate_OutputDelegate) == 0x000068, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_GetSlotIndex_Result) == 0x000078, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_GetSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, K2Node_MakeStruct_STRUCT_ItemUI) == 0x000080, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::K2Node_MakeStruct_STRUCT_ItemUI' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_GetGridHeight_Result) == 0x000098, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_GetGridHeight_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_CreateItemMeshWidgetFromItem_MeshWidget) == 0x0000A0, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_CreateItemMeshWidgetFromItem_MeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_GetGridWidth_Result) == 0x0000A8, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_GetGridWidth_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, K2Node_MakeStruct_IntPoint) == 0x0000AC, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_GetItemArray_Items) == 0x0000B8, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_GetItemArray_Items' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_Array_Length_ReturnValue_1) == 0x0000D0, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_Less_IntInt_ReturnValue) == 0x0000D4, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_GetMaxSlots_Count) == 0x0000D8, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_GetMaxSlots_Count' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, Temp_int_Loop_Counter_Variable_1) == 0x0000DC, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000E0, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E4, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E5, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E8, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, Temp_int_Variable_1) == 0x0000EC, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_SpawnObject_ReturnValue) == 0x0000F0, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_InitializeInventoryPanel, CallFunc_Array_Add_ReturnValue_1) == 0x0000F8, "Member 'WIDGET_InventoryPanel_C_InitializeInventoryPanel::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.EVENT_OnInventoryMouseMove
// 0x0220 (0x0220 - 0x0000)
struct WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_OnInventoryMouseMove_ReturnValue;         // 0x0168(0x00B8)()
};
static_assert(alignof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove) == 0x000008, "Wrong alignment on WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove");
static_assert(sizeof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove) == 0x000220, "Wrong size on WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove, MyGeometry) == 0x000000, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove, MouseEvent) == 0x000038, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove, ReturnValue) == 0x0000A8, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x000160, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove, CallFunc_OnInventoryMouseMove_ReturnValue) == 0x000168, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseMove::CallFunc_OnInventoryMouseMove_ReturnValue' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.EVENT_OnInventoryMouseDoubleClick
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnInventoryMouseDown_ReturnValue;         // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick) == 0x000008, "Wrong alignment on WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick");
static_assert(sizeof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick) == 0x000218, "Wrong size on WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick, MyGeometry) == 0x000000, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick, MouseEvent) == 0x000038, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick, ReturnValue) == 0x0000A8, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick, CallFunc_OnInventoryMouseDown_ReturnValue) == 0x000160, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseDoubleClick::CallFunc_OnInventoryMouseDown_ReturnValue' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.EVENT_OnInventoryMouseButtonDown
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_OnInventoryMouseDown_ReturnValue;         // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown) == 0x000008, "Wrong alignment on WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown");
static_assert(sizeof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown) == 0x000218, "Wrong size on WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown, MyGeometry) == 0x000000, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown, MouseEvent) == 0x000038, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown, CallFunc_OnInventoryMouseDown_ReturnValue) == 0x000160, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseButtonDown::CallFunc_OnInventoryMouseDown_ReturnValue' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.CreateItemMeshWidget
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_InventoryPanel_C_CreateItemMeshWidget final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        BagMeshWidget;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemCount;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  MeshWidget;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 IconTexture;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetItemGridRenderTarget_Result;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SlottedItem_C*                  CallFunc_Create_Slottable_Mesh_Widget_MeshWidget;  // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_InventoryPanel_C_CreateItemMeshWidget) == 0x000008, "Wrong alignment on WIDGET_InventoryPanel_C_CreateItemMeshWidget");
static_assert(sizeof(WIDGET_InventoryPanel_C_CreateItemMeshWidget) == 0x000050, "Wrong size on WIDGET_InventoryPanel_C_CreateItemMeshWidget");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidget, Item) == 0x000000, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidget::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidget, BagMeshWidget) == 0x000008, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidget::BagMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidget, ItemCount) == 0x000010, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidget::ItemCount' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidget, MeshWidget) == 0x000018, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidget::MeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidget, IconTexture) == 0x000020, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidget::IconTexture' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidget, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidget::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidget, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidget::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidget, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidget, CallFunc_GetItemGridRenderTarget_Result) == 0x000040, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidget::CallFunc_GetItemGridRenderTarget_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidget, CallFunc_Create_Slottable_Mesh_Widget_MeshWidget) == 0x000048, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidget::CallFunc_Create_Slottable_Mesh_Widget_MeshWidget' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.CreateItemMeshWidgetFromItem
// 0x0068 (0x0068 - 0x0000)
struct WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem final
{
public:
	class UITEM_Base_C*                           Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridMeshWidget*                        BagMeshWidget;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SlottedItem_C*                  MeshWidget;                                        // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_HotbarSlot_C*                   HotbarSlotWidget;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_SlottedItem_C*                  ItemMeshWidget;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHotbarSlottableObject_Valid;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HotbarSlottable_C> CallFunc_GetHotbarSlottableObject_SlottableObject; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWIDGET_HotbarSlot_C*                   CallFunc_GetHotbarSlotWidgetForObject_Result;      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_Result;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_Result;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  CallFunc_CreateItemMeshWidget_MeshWidget;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem) == 0x000008, "Wrong alignment on WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem");
static_assert(sizeof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem) == 0x000068, "Wrong size on WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, Item) == 0x000000, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::Item' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, BagMeshWidget) == 0x000008, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::BagMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, MeshWidget) == 0x000010, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::MeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, HotbarSlotWidget) == 0x000018, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::HotbarSlotWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, ItemMeshWidget) == 0x000020, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::ItemMeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, CallFunc_GetHotbarSlottableObject_Valid) == 0x000029, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::CallFunc_GetHotbarSlottableObject_Valid' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, CallFunc_GetHotbarSlottableObject_SlottableObject) == 0x000030, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::CallFunc_GetHotbarSlottableObject_SlottableObject' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, CallFunc_GetHotbarSlotWidgetForObject_Result) == 0x000040, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::CallFunc_GetHotbarSlotWidgetForObject_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, CallFunc_GetBag_Result) == 0x000048, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, CallFunc_GetSlotIndex_Result) == 0x000050, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::CallFunc_GetSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000054, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, CallFunc_GetCount_Result) == 0x000058, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::CallFunc_GetCount_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem, CallFunc_CreateItemMeshWidget_MeshWidget) == 0x000060, "Member 'WIDGET_InventoryPanel_C_CreateItemMeshWidgetFromItem::CallFunc_CreateItemMeshWidget_MeshWidget' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.OnInventoryMouseMove
// 0x0390 (0x0390 - 0x0000)
struct WIDGET_InventoryPanel_C_OnInventoryMouseMove final
{
public:
	struct FVector2D                              MouseScreenPosition;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            ReturnValue;                                       // 0x0008(0x00B8)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CursorGridOffset;                                  // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CursorIsOverBag;                                   // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MouseWindowPosition;                               // 0x00CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateCursorGridCoordinatesForBag_Result; // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox2D                                 CallFunc_GetProjectedWindowBounds_ReturnValue;     // 0x00D8(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsPointInBox2D_ReturnValue;               // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x00F0(0x00B8)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01D8(0x00B8)()
	struct FBox2D                                 CallFunc_GetProjectedWindowBounds_ReturnValue_1;   // 0x0290(0x0014)(ConstParm, ZeroConstructor, NoDestructor)
	uint8                                         Pad_2A4[0x4];                                      // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue_1;                  // 0x02A8(0x00B8)()
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox2D                                 CallFunc_MakeBox2D_ReturnValue;                    // 0x0370(0x0014)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IntersectBoxes2D_ReturnValue;             // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x0385(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0386(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_387[0x1];                                      // 0x0387(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetWindowPointFromScreenPoint_ReturnValue; // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_InventoryPanel_C_OnInventoryMouseMove) == 0x000008, "Wrong alignment on WIDGET_InventoryPanel_C_OnInventoryMouseMove");
static_assert(sizeof(WIDGET_InventoryPanel_C_OnInventoryMouseMove) == 0x000390, "Wrong size on WIDGET_InventoryPanel_C_OnInventoryMouseMove");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, MouseScreenPosition) == 0x000000, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::MouseScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, ReturnValue) == 0x000008, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CursorGridOffset) == 0x0000C0, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CursorGridOffset' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CursorIsOverBag) == 0x0000C8, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CursorIsOverBag' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, MouseWindowPosition) == 0x0000CC, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::MouseWindowPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_UpdateCursorGridCoordinatesForBag_Result) == 0x0000D4, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_UpdateCursorGridCoordinatesForBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_GetProjectedWindowBounds_ReturnValue) == 0x0000D8, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_GetProjectedWindowBounds_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_IsPointInBox2D_ReturnValue) == 0x0000EC, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_IsPointInBox2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_Unhandled_ReturnValue) == 0x0000F0, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_Array_Add_ReturnValue) == 0x0001A8, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_GetCursorItem_Result) == 0x0001B0, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_IsValid_ReturnValue) == 0x0001B8, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x0001C0, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_GetSize_ReturnValue) == 0x0001C8, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_GetPosition_ReturnValue) == 0x0001D0, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_Handled_ReturnValue) == 0x0001D8, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_GetProjectedWindowBounds_ReturnValue_1) == 0x000290, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_GetProjectedWindowBounds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_Unhandled_ReturnValue_1) == 0x0002A8, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_Unhandled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000360, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000368, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_MakeBox2D_ReturnValue) == 0x000370, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_MakeBox2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_IntersectBoxes2D_ReturnValue) == 0x000384, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_IntersectBoxes2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_Map_Contains_ReturnValue) == 0x000385, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_Not_PreBool_ReturnValue) == 0x000386, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseMove, CallFunc_GetWindowPointFromScreenPoint_ReturnValue) == 0x000388, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseMove::CallFunc_GetWindowPointFromScreenPoint_ReturnValue' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.OnInventoryMouseDown
// 0x0488 (0x0488 - 0x0000)
struct WIDGET_InventoryPanel_C_OnInventoryMouseDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          DoubleClick;                                       // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0170(0x00B8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue_1;                    // 0x0228(0x00B8)()
	bool                                          CallFunc_IsCursorOverInventoryBag_Result;          // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x02E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x02F0(0x00B8)()
	struct FEventReply                            CallFunc_PickupItemAtCurrentGridLocation_ReturnValue; // 0x03A8(0x00B8)()
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_1; // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_2; // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UndoCursorItemMove_Result;                // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1; // 0x0481(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_InventoryPanel_C_OnInventoryMouseDown) == 0x000008, "Wrong alignment on WIDGET_InventoryPanel_C_OnInventoryMouseDown");
static_assert(sizeof(WIDGET_InventoryPanel_C_OnInventoryMouseDown) == 0x000488, "Wrong size on WIDGET_InventoryPanel_C_OnInventoryMouseDown");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, MyGeometry) == 0x000000, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, MouseEvent) == 0x000038, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, DoubleClick) == 0x0000A8, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::DoubleClick' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, ReturnValue) == 0x0000B0, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000168, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_Handled_ReturnValue) == 0x000170, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_Handled_ReturnValue_1) == 0x000228, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_Handled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_IsCursorOverInventoryBag_Result) == 0x0002E0, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_IsCursorOverInventoryBag_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x0002E4, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_Unhandled_ReturnValue) == 0x0002F0, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_PickupItemAtCurrentGridLocation_ReturnValue) == 0x0003A8, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_PickupItemAtCurrentGridLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_1) == 0x000460, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_2) == 0x000468, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_UndoCursorItemMove_Result) == 0x000470, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_UndoCursorItemMove_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_GetCursorItem_Result) == 0x000478, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_IsValid_ReturnValue) == 0x000480, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryMouseDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1) == 0x000481, "Member 'WIDGET_InventoryPanel_C_OnInventoryMouseDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue_1' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.EVENT_OnBagChanged
// 0x00E0 (0x00E0 - 0x0000)
struct WIDGET_InventoryPanel_C_EVENT_OnBagChanged final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  MeshWidget;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           SlotItem;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemIndexUI;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_ItemUI                         K2Node_MakeStruct_STRUCT_ItemUI;                   // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_GetFirstFreeItemIndex_ItemIndexUI;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_SlottedItem_C*                  CallFunc_CreateItemMeshWidgetFromItem_MeshWidget;  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_GetRotatedGridSize_Result;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_ItemUI                         K2Node_MakeStruct_STRUCT_ItemUI_1;                 // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0088(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSlotIndicesForItemWithSize_SlotIndices; // 0x0098(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_GetSlotIndicesForItemInstance_Slot_Indices; // 0x00B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged) == 0x000008, "Wrong alignment on WIDGET_InventoryPanel_C_EVENT_OnBagChanged");
static_assert(sizeof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged) == 0x0000E0, "Wrong size on WIDGET_InventoryPanel_C_EVENT_OnBagChanged");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, SlotIndex) == 0x000000, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::SlotIndex' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, MeshWidget) == 0x000008, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::MeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, SlotItem) == 0x000010, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::SlotItem' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, ItemIndexUI) == 0x000018, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::ItemIndexUI' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, Temp_int_Array_Index_Variable) == 0x000028, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, K2Node_MakeStruct_STRUCT_ItemUI) == 0x000030, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::K2Node_MakeStruct_STRUCT_ItemUI' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_GetFirstFreeItemIndex_ItemIndexUI) == 0x000048, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_GetFirstFreeItemIndex_ItemIndexUI' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_Array_Get_Item) == 0x00004C, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_CreateItemMeshWidgetFromItem_MeshWidget) == 0x000058, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_CreateItemMeshWidgetFromItem_MeshWidget' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_GetRotatedGridSize_Result) == 0x000060, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_GetRotatedGridSize_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000068, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, K2Node_MakeStruct_STRUCT_ItemUI_1) == 0x000070, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::K2Node_MakeStruct_STRUCT_ItemUI_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, Temp_int_Variable) == 0x000088, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_GetSlotIndicesForItemWithSize_SlotIndices) == 0x000098, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_GetSlotIndicesForItemWithSize_SlotIndices' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_Array_Get_Item_1) == 0x0000A8, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_GetSlotIndicesForItemInstance_Slot_Indices) == 0x0000B0, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_GetSlotIndicesForItemInstance_Slot_Indices' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D0, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnBagChanged, CallFunc_GetSlotItem_Item) == 0x0000D8, "Member 'WIDGET_InventoryPanel_C_EVENT_OnBagChanged::CallFunc_GetSlotItem_Item' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.OnInventoryBagResized
// 0x0068 (0x0068 - 0x0000)
struct WIDGET_InventoryPanel_C_OnInventoryBagResized final
{
public:
	int32                                         OldSlotCount;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_ItemUI                         CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaxSlots_Count;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridHeight_Result;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetGridWidth_Result;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_InventoryPanel_C_OnInventoryBagResized) == 0x000008, "Wrong alignment on WIDGET_InventoryPanel_C_OnInventoryBagResized");
static_assert(sizeof(WIDGET_InventoryPanel_C_OnInventoryBagResized) == 0x000068, "Wrong size on WIDGET_InventoryPanel_C_OnInventoryBagResized");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, OldSlotCount) == 0x000000, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::OldSlotCount' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, Temp_int_Variable) == 0x000008, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, Temp_int_Variable_1) == 0x00000C, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, CallFunc_Array_Get_Item) == 0x000020, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, CallFunc_GetMaxSlots_Count) == 0x000048, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::CallFunc_GetMaxSlots_Count' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, CallFunc_GetGridHeight_Result) == 0x000050, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::CallFunc_GetGridHeight_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000054, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, CallFunc_GetGridWidth_Result) == 0x000058, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::CallFunc_GetGridWidth_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_OnInventoryBagResized, K2Node_MakeStruct_IntPoint) == 0x00005C, "Member 'WIDGET_InventoryPanel_C_OnInventoryBagResized::K2Node_MakeStruct_IntPoint' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.UpdateInventoryPanelSize
// 0x0068 (0x0068 - 0x0000)
struct WIDGET_InventoryPanel_C_UpdateInventoryPanelSize final
{
public:
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaxSlots_Count;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridWidth_Result;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridWidth_Result_1;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGridHeight_Result;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize) == 0x000008, "Wrong alignment on WIDGET_InventoryPanel_C_UpdateInventoryPanelSize");
static_assert(sizeof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize) == 0x000068, "Wrong size on WIDGET_InventoryPanel_C_UpdateInventoryPanelSize");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, DynamicMaterial) == 0x000000, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::DynamicMaterial' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, Temp_bool_Variable) == 0x000008, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, Temp_int_Variable) == 0x00000C, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_GetMaxSlots_Count) == 0x000014, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_GetMaxSlots_Count' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, K2Node_Select_Default) == 0x00001C, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_GetGridWidth_Result) == 0x000020, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_GetGridWidth_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000028, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_GetGridWidth_Result_1) == 0x000038, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_GetGridWidth_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_GetGridHeight_Result) == 0x00003C, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_GetGridHeight_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_Multiply_IntInt_ReturnValue) == 0x000040, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000050, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000054, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000058, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_UpdateInventoryPanelSize, CallFunc_MakeVector2D_ReturnValue) == 0x00005C, "Member 'WIDGET_InventoryPanel_C_UpdateInventoryPanelSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.DestroyBagUI
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_InventoryPanel_C_DestroyBagUI final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 SlotIndex)>              K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_InventoryPanel_C_DestroyBagUI) == 0x000004, "Wrong alignment on WIDGET_InventoryPanel_C_DestroyBagUI");
static_assert(sizeof(WIDGET_InventoryPanel_C_DestroyBagUI) == 0x000018, "Wrong size on WIDGET_InventoryPanel_C_DestroyBagUI");
static_assert(offsetof(WIDGET_InventoryPanel_C_DestroyBagUI, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WIDGET_InventoryPanel_C_DestroyBagUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_DestroyBagUI, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WIDGET_InventoryPanel_C_DestroyBagUI::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_DestroyBagUI, CallFunc_Map_Remove_ReturnValue) == 0x000014, "Member 'WIDGET_InventoryPanel_C_DestroyBagUI::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.HandleCursorLeave
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_InventoryPanel_C_HandleCursorLeave final
{
public:
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_InventoryPanel_C_HandleCursorLeave) == 0x000001, "Wrong alignment on WIDGET_InventoryPanel_C_HandleCursorLeave");
static_assert(sizeof(WIDGET_InventoryPanel_C_HandleCursorLeave) == 0x000002, "Wrong size on WIDGET_InventoryPanel_C_HandleCursorLeave");
static_assert(offsetof(WIDGET_InventoryPanel_C_HandleCursorLeave, CallFunc_Array_RemoveItem_ReturnValue) == 0x000000, "Member 'WIDGET_InventoryPanel_C_HandleCursorLeave::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_InventoryPanel_C_HandleCursorLeave, CallFunc_Map_Remove_ReturnValue) == 0x000001, "Member 'WIDGET_InventoryPanel_C_HandleCursorLeave::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function WIDGET_InventoryPanel.WIDGET_InventoryPanel_C.EVENT_OnInventoryMouseLeave
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseLeave) == 0x000008, "Wrong alignment on WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseLeave");
static_assert(sizeof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseLeave) == 0x000070, "Wrong size on WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseLeave");
static_assert(offsetof(WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseLeave, MouseEvent) == 0x000000, "Member 'WIDGET_InventoryPanel_C_EVENT_OnInventoryMouseLeave::MouseEvent' has a wrong offset!");

}


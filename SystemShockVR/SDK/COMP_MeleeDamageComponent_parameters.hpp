#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_MeleeDamageComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "StreamingSaveGameSystem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_MeleeHitboxOverlapData_structs.hpp"


namespace SDK::Params
{

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.OnHitboxBeginOverlap__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature final
{
public:
	class AActor*                                 OverlapActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OverlapComponent;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitboxTag;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageScale;                                       // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          HitboxComponent;                                   // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature) == 0x000008, "Wrong alignment on COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature");
static_assert(sizeof(COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature) == 0x000028, "Wrong size on COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature");
static_assert(offsetof(COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature, OverlapActor) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature::OverlapActor' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature, OverlapComponent) == 0x000008, "Member 'COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature::OverlapComponent' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature, HitboxTag) == 0x000010, "Member 'COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature::HitboxTag' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature, DamageScale) == 0x000018, "Member 'COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature::DamageScale' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature, HitboxComponent) == 0x000020, "Member 'COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature::HitboxComponent' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.OnHitboxEndOverlap__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct COMP_MeleeDamageComponent_C_OnHitboxEndOverlap__DelegateSignature final
{
public:
	class AActor*                                 OverlapActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitboxTag;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_OnHitboxEndOverlap__DelegateSignature) == 0x000008, "Wrong alignment on COMP_MeleeDamageComponent_C_OnHitboxEndOverlap__DelegateSignature");
static_assert(sizeof(COMP_MeleeDamageComponent_C_OnHitboxEndOverlap__DelegateSignature) == 0x000010, "Wrong size on COMP_MeleeDamageComponent_C_OnHitboxEndOverlap__DelegateSignature");
static_assert(offsetof(COMP_MeleeDamageComponent_C_OnHitboxEndOverlap__DelegateSignature, OverlapActor) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_OnHitboxEndOverlap__DelegateSignature::OverlapActor' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_OnHitboxEndOverlap__DelegateSignature, HitboxTag) == 0x000008, "Member 'COMP_MeleeDamageComponent_C_OnHitboxEndOverlap__DelegateSignature::HitboxTag' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.ExecuteUbergraph_COMP_MeleeDamageComponent
// 0x0008 (0x0008 - 0x0000)
struct COMP_MeleeDamageComponent_C_ExecuteUbergraph_COMP_MeleeDamageComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_ExecuteUbergraph_COMP_MeleeDamageComponent) == 0x000004, "Wrong alignment on COMP_MeleeDamageComponent_C_ExecuteUbergraph_COMP_MeleeDamageComponent");
static_assert(sizeof(COMP_MeleeDamageComponent_C_ExecuteUbergraph_COMP_MeleeDamageComponent) == 0x000008, "Wrong size on COMP_MeleeDamageComponent_C_ExecuteUbergraph_COMP_MeleeDamageComponent");
static_assert(offsetof(COMP_MeleeDamageComponent_C_ExecuteUbergraph_COMP_MeleeDamageComponent, EntryPoint) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_ExecuteUbergraph_COMP_MeleeDamageComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_ExecuteUbergraph_COMP_MeleeDamageComponent, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'COMP_MeleeDamageComponent_C_ExecuteUbergraph_COMP_MeleeDamageComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct COMP_MeleeDamageComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on COMP_MeleeDamageComponent_C_ReceiveTick");
static_assert(sizeof(COMP_MeleeDamageComponent_C_ReceiveTick) == 0x000004, "Wrong size on COMP_MeleeDamageComponent_C_ReceiveTick");
static_assert(offsetof(COMP_MeleeDamageComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.InitializeHitboxes
// 0x0008 (0x0008 - 0x0000)
struct COMP_MeleeDamageComponent_C_InitializeHitboxes final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_InitializeHitboxes) == 0x000004, "Wrong alignment on COMP_MeleeDamageComponent_C_InitializeHitboxes");
static_assert(sizeof(COMP_MeleeDamageComponent_C_InitializeHitboxes) == 0x000008, "Wrong size on COMP_MeleeDamageComponent_C_InitializeHitboxes");
static_assert(offsetof(COMP_MeleeDamageComponent_C_InitializeHitboxes, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_InitializeHitboxes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_InitializeHitboxes, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'COMP_MeleeDamageComponent_C_InitializeHitboxes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.EnableHitboxesByTag
// 0x0228 (0x0228 - 0x0000)
struct COMP_MeleeDamageComponent_C_EnableHitboxesByTag final
{
public:
	class FName                                   HitboxTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class AActor*>                           HitActors;                                         // 0x0018(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class UBoxComponent*                          HitboxComponent;                                   // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UBoxComponent*, struct FVector>    HitBoxLocations;                                   // 0x0070(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UBoxComponent*>                  HitBoxesToEnable;                                  // 0x00C0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         OverlapIndex;                                      // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGenerateOverlapEvents_ReturnValue;     // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x00F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_ComponentOverlapComponents_OutComponents; // 0x0128(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_ComponentOverlapComponents_ReturnValue;   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  CallFunc_GetPrioritizedHitboxesByTag_Result;       // 0x0160(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FSTRUCT_MeleeHitboxOverlapData         K2Node_MakeStruct_STRUCT_MeleeHitboxOverlapData;   // 0x0170(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHitboxOverlapIndexByTag_Index;         // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag) == 0x000008, "Wrong alignment on COMP_MeleeDamageComponent_C_EnableHitboxesByTag");
static_assert(sizeof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag) == 0x000228, "Wrong size on COMP_MeleeDamageComponent_C_EnableHitboxesByTag");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, HitboxTag) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::HitboxTag' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, HitActor) == 0x000008, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::HitActor' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, HitComponent) == 0x000010, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::HitComponent' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, HitActors) == 0x000018, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::HitActors' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, HitboxComponent) == 0x000068, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::HitboxComponent' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, HitBoxLocations) == 0x000070, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::HitBoxLocations' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, HitBoxesToEnable) == 0x0000C0, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::HitBoxesToEnable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, OverlapIndex) == 0x0000D0, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::OverlapIndex' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_Add_IntInt_ReturnValue) == 0x0000D8, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, Temp_int_Array_Index_Variable) == 0x0000DC, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, Temp_int_Array_Index_Variable_1) == 0x0000E0, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_GetGenerateOverlapEvents_ReturnValue) == 0x0000F5, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_GetGenerateOverlapEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x0000F6, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000F7, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_GetOwner_ReturnValue) == 0x0000F8, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_Set_Contains_ReturnValue) == 0x000100, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_Not_PreBool_ReturnValue) == 0x000101, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, Temp_int_Loop_Counter_Variable_1) == 0x000104, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_GetOwner_ReturnValue_1) == 0x000108, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, K2Node_MakeArray_Array) == 0x000110, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_Add_IntInt_ReturnValue_1) == 0x000120, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_ComponentOverlapComponents_OutComponents) == 0x000128, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_ComponentOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_ComponentOverlapComponents_ReturnValue) == 0x000138, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_ComponentOverlapComponents_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_Array_Length_ReturnValue_1) == 0x000148, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_Less_IntInt_ReturnValue_1) == 0x00014C, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000150, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_GetPrioritizedHitboxesByTag_Result) == 0x000160, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_GetPrioritizedHitboxesByTag_Result' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, K2Node_MakeStruct_STRUCT_MeleeHitboxOverlapData) == 0x000170, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::K2Node_MakeStruct_STRUCT_MeleeHitboxOverlapData' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_Array_Add_ReturnValue) == 0x000218, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_Less_IntInt_ReturnValue_2) == 0x00021C, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_EnableHitboxesByTag, CallFunc_GetHitboxOverlapIndexByTag_Index) == 0x000220, "Member 'COMP_MeleeDamageComponent_C_EnableHitboxesByTag::CallFunc_GetHitboxOverlapIndexByTag_Index' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.GetPrioritizedHitboxesByTag
// 0x0060 (0x0060 - 0x0000)
struct COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag final
{
public:
	class FName                                   HitboxesTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBoxComponent*>                  Result;                                            // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UBoxComponent*>                  HitboxComponents;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TDelegate<void(class UObject* ObjectA, class UObject* ObjectB)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  CallFunc_GetComponentsByTag_ReturnValue;           // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag) == 0x000008, "Wrong alignment on COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag");
static_assert(sizeof(COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag) == 0x000060, "Wrong size on COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag, HitboxesTag) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag::HitboxesTag' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag, Result) == 0x000008, "Member 'COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag::Result' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag, HitboxComponents) == 0x000018, "Member 'COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag::HitboxComponents' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag, CallFunc_Map_Length_ReturnValue) == 0x000038, "Member 'COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag, CallFunc_Greater_IntInt_ReturnValue) == 0x000048, "Member 'COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag, CallFunc_GetComponentsByTag_ReturnValue) == 0x000050, "Member 'COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.DisableHitboxesByTag
// 0x00C8 (0x00C8 - 0x0000)
struct COMP_MeleeDamageComponent_C_DisableHitboxesByTag final
{
public:
	class FName                                   HitboxTag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MeleeHitboxOverlapData         CurrentHitboxOverlap;                              // 0x0008(0x00A8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         OverlapIndex;                                      // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHitboxOverlapIndexByTag_Index;         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_DisableHitboxesByTag) == 0x000008, "Wrong alignment on COMP_MeleeDamageComponent_C_DisableHitboxesByTag");
static_assert(sizeof(COMP_MeleeDamageComponent_C_DisableHitboxesByTag) == 0x0000C8, "Wrong size on COMP_MeleeDamageComponent_C_DisableHitboxesByTag");
static_assert(offsetof(COMP_MeleeDamageComponent_C_DisableHitboxesByTag, HitboxTag) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_DisableHitboxesByTag::HitboxTag' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_DisableHitboxesByTag, CurrentHitboxOverlap) == 0x000008, "Member 'COMP_MeleeDamageComponent_C_DisableHitboxesByTag::CurrentHitboxOverlap' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_DisableHitboxesByTag, OverlapIndex) == 0x0000B0, "Member 'COMP_MeleeDamageComponent_C_DisableHitboxesByTag::OverlapIndex' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_DisableHitboxesByTag, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000B4, "Member 'COMP_MeleeDamageComponent_C_DisableHitboxesByTag::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_DisableHitboxesByTag, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'COMP_MeleeDamageComponent_C_DisableHitboxesByTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_DisableHitboxesByTag, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'COMP_MeleeDamageComponent_C_DisableHitboxesByTag::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_DisableHitboxesByTag, CallFunc_GetHitboxOverlapIndexByTag_Index) == 0x0000C0, "Member 'COMP_MeleeDamageComponent_C_DisableHitboxesByTag::CallFunc_GetHitboxOverlapIndexByTag_Index' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.CompareHitboxComponentDamage
// 0x0040 (0x0040 - 0x0000)
struct COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage final
{
public:
	const class UObject*                          ObjectA;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UObject*                          ObjectB;                                           // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          K2Node_DynamicCast_AsBox_Collision_1;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHitboxDamageScale_Result;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHitboxDamageScale_Result_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage) == 0x000008, "Wrong alignment on COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage");
static_assert(sizeof(COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage) == 0x000040, "Wrong size on COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage");
static_assert(offsetof(COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage, ObjectA) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage::ObjectA' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage, ObjectB) == 0x000008, "Member 'COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage::ObjectB' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage, ReturnValue) == 0x000010, "Member 'COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage, K2Node_DynamicCast_AsBox_Collision) == 0x000018, "Member 'COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage::K2Node_DynamicCast_AsBox_Collision' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage, K2Node_DynamicCast_AsBox_Collision_1) == 0x000028, "Member 'COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage::K2Node_DynamicCast_AsBox_Collision_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage, CallFunc_GetHitboxDamageScale_Result) == 0x000034, "Member 'COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage::CallFunc_GetHitboxDamageScale_Result' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage, CallFunc_GetHitboxDamageScale_Result_1) == 0x000038, "Member 'COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage::CallFunc_GetHitboxDamageScale_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.HasAnyHitboxOverlaps
// 0x000C (0x000C - 0x0000)
struct COMP_MeleeDamageComponent_C_HasAnyHitboxOverlaps final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_HasAnyHitboxOverlaps) == 0x000004, "Wrong alignment on COMP_MeleeDamageComponent_C_HasAnyHitboxOverlaps");
static_assert(sizeof(COMP_MeleeDamageComponent_C_HasAnyHitboxOverlaps) == 0x00000C, "Wrong size on COMP_MeleeDamageComponent_C_HasAnyHitboxOverlaps");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HasAnyHitboxOverlaps, Result) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_HasAnyHitboxOverlaps::Result' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HasAnyHitboxOverlaps, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'COMP_MeleeDamageComponent_C_HasAnyHitboxOverlaps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HasAnyHitboxOverlaps, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'COMP_MeleeDamageComponent_C_HasAnyHitboxOverlaps::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.GetHitboxOverlapIndexByTag
// 0x00D0 (0x00D0 - 0x0000)
struct COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeleeHitboxOverlapData         CallFunc_Array_Get_Item;                           // 0x0020(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag) == 0x000008, "Wrong alignment on COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag");
static_assert(sizeof(COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag) == 0x0000D0, "Wrong size on COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag, Tag) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag::Tag' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag, Index_0) == 0x000008, "Member 'COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag::Index_0' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag, CallFunc_Array_Get_Item) == 0x000020, "Member 'COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000C9, "Member 'COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.UpdateHitboxOverlaps
// 0x03A0 (0x03A0 - 0x0000)
struct COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitboxTag;                                         // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    NewHitComponent;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewHitActor;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class AActor*>                           NewHitActors;                                      // 0x0020(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                PrevHitboxLocation;                                // 0x0070(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBoxComponent*                          HitboxComponent;                                   // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBoxComponent*>                  CallFunc_GetPrioritizedHitboxesByTag_Result;       // 0x00B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBoxComponent*                          CallFunc_Array_Get_Item;                           // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CallFunc_GetCollisionResponseToChannel_ReturnValue; // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetGenerateOverlapEvents_ReturnValue;     // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0120(0x0010)(ConstParm, ReferenceParm)
	struct FSTRUCT_MeleeHitboxOverlapData         CallFunc_Array_Get_Item_1;                         // 0x0130(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiByProfile_OutHits;           // 0x01D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiByProfile_ReturnValue;       // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_Array_Get_Item_2;                         // 0x01EC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Map_Find_Value;                           // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_283[0x1];                                      // 0x0283(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x028C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default_1;                           // 0x0304(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class AActor*>                           CallFunc_Set_Difference_Result;                    // 0x0318(0x0050)()
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_Set_ToArray_Result;                       // 0x0370(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Remove_ReturnValue;                   // 0x038D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38E[0x2];                                      // 0x038E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps) == 0x000008, "Wrong alignment on COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps");
static_assert(sizeof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps) == 0x0003A0, "Wrong size on COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, DeltaTime) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::DeltaTime' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, HitboxTag) == 0x000004, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::HitboxTag' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, NewHitComponent) == 0x000010, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::NewHitComponent' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, NewHitActor) == 0x000018, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::NewHitActor' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, NewHitActors) == 0x000020, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::NewHitActors' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, PrevHitboxLocation) == 0x000070, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::PrevHitboxLocation' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, HitboxComponent) == 0x000080, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::HitboxComponent' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, Temp_int_Array_Index_Variable) == 0x000088, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, Temp_int_Loop_Counter_Variable_1) == 0x000090, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Add_IntInt_ReturnValue_1) == 0x000098, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, Temp_int_Loop_Counter_Variable_2) == 0x00009C, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A0, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, Temp_int_Array_Index_Variable_1) == 0x0000A4, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, Temp_int_Array_Index_Variable_2) == 0x0000A8, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_GetPrioritizedHitboxesByTag_Result) == 0x0000B0, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_GetPrioritizedHitboxesByTag_Result' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Array_Get_Item) == 0x0000C0, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, Temp_int_Loop_Counter_Variable_3) == 0x0000D0, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000D4, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, Temp_int_Array_Index_Variable_3) == 0x0000D8, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000DC, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, Temp_byte_Variable) == 0x0000E8, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_GetCollisionResponseToChannel_ReturnValue) == 0x0000E9, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_GetCollisionResponseToChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000EA, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_GetGenerateOverlapEvents_ReturnValue) == 0x0000EB, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_GetGenerateOverlapEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, Temp_byte_Variable_1) == 0x0000EC, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, Temp_bool_Variable) == 0x0000ED, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, K2Node_Select_Default) == 0x0000EE, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, Temp_bool_Variable_1) == 0x0000EF, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x0000F0, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000FC, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000108, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_GetOwner_ReturnValue) == 0x000118, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, K2Node_MakeArray_Array) == 0x000120, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Array_Get_Item_1) == 0x000130, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BoxTraceMultiByProfile_OutHits) == 0x0001D8, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BoxTraceMultiByProfile_OutHits' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BoxTraceMultiByProfile_ReturnValue) == 0x0001E8, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BoxTraceMultiByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Array_Get_Item_2) == 0x0001EC, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Map_Find_Value) == 0x000274, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Map_Find_ReturnValue) == 0x000280, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_bBlockingHit) == 0x000281, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_bInitialOverlap) == 0x000282, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_Time) == 0x000284, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_Distance) == 0x000288, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_Location) == 0x00028C, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_ImpactPoint) == 0x000298, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_Normal) == 0x0002A4, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_ImpactNormal) == 0x0002B0, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_PhysMat) == 0x0002C0, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_HitActor) == 0x0002C8, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_HitComponent) == 0x0002D0, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_HitBoneName) == 0x0002D8, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_HitItem) == 0x0002E0, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_ElementIndex) == 0x0002E4, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_FaceIndex) == 0x0002E8, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_TraceStart) == 0x0002EC, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_BreakHitResult_TraceEnd) == 0x0002F8, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, K2Node_Select_Default_1) == 0x000304, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Set_Contains_ReturnValue) == 0x000310, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Set_Difference_Result) == 0x000318, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Set_Difference_Result' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Not_PreBool_ReturnValue) == 0x000368, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Set_ToArray_Result) == 0x000370, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Array_Get_Item_3) == 0x000380, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Array_Length_ReturnValue_1) == 0x000388, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Less_IntInt_ReturnValue_1) == 0x00038C, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Set_Remove_ReturnValue) == 0x00038D, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Set_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Array_Length_ReturnValue_2) == 0x000390, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Array_Length_ReturnValue_3) == 0x000394, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Less_IntInt_ReturnValue_2) == 0x000398, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps, CallFunc_Less_IntInt_ReturnValue_3) == 0x000399, "Member 'COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.HandleHitboxOverlap
// 0x0278 (0x0278 - 0x0000)
struct COMP_MeleeDamageComponent_C_HandleHitboxOverlap final
{
public:
	class UBoxComponent*                          OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComponent;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitboxTag;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DuringUpdate;                                      // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetLocation;                                    // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class AActor*>                           OverlappingActors;                                 // 0x0038(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FSTRUCT_MeleeHitboxOverlapData         CurrentHitboxOverlap;                              // 0x0088(0x00A8)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class UBoxComponent*                          BoxComponent;                                      // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHitboxDamageScale_Result;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasUnobstructedPropagationPathBetweenPoints_ReturnValue; // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x019A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19B[0x5];                                      // 0x019B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AB[0x5];                                      // 0x01AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeleeHitboxOverlapData         CallFunc_Array_Get_Item;                           // 0x01B0(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetHitboxDamageScale_Result_1;            // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap) == 0x000008, "Wrong alignment on COMP_MeleeDamageComponent_C_HandleHitboxOverlap");
static_assert(sizeof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap) == 0x000278, "Wrong size on COMP_MeleeDamageComponent_C_HandleHitboxOverlap");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, OverlappedComponent) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, OtherActor) == 0x000008, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, OtherComponent) == 0x000010, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::OtherComponent' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, HitboxTag) == 0x000018, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::HitboxTag' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, DuringUpdate) == 0x000020, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::DuringUpdate' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, TargetLocation) == 0x000024, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::TargetLocation' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CurrentIndex) == 0x000030, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CurrentIndex' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, OverlappingActors) == 0x000038, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::OverlappingActors' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CurrentHitboxOverlap) == 0x000088, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CurrentHitboxOverlap' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, BoxComponent) == 0x000130, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::BoxComponent' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, Temp_int_Array_Index_Variable) == 0x000138, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_GetHitboxDamageScale_Result) == 0x000144, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_GetHitboxDamageScale_Result' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000148, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000154, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000160, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_IsValid_ReturnValue) == 0x00016C, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_IsValid_ReturnValue_1) == 0x00016D, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_GetOwner_ReturnValue) == 0x000170, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_GetGameInstance_ReturnValue) == 0x000178, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000180, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, K2Node_DynamicCast_AsGI_Single_Player) == 0x000190, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, K2Node_DynamicCast_bSuccess) == 0x000198, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_HasUnobstructedPropagationPathBetweenPoints_ReturnValue) == 0x000199, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_HasUnobstructedPropagationPathBetweenPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00019A, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_GetOwner_ReturnValue_1) == 0x0001A0, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x0001A8, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_Set_Contains_ReturnValue) == 0x0001A9, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_Not_PreBool_ReturnValue) == 0x0001AA, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_BooleanAND_ReturnValue) == 0x000258, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_Array_Length_ReturnValue) == 0x00025C, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_Less_IntInt_ReturnValue) == 0x000260, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_GetHitboxDamageScale_Result_1) == 0x000264, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_GetHitboxDamageScale_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000268, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, K2Node_DynamicCast_bSuccess_1) == 0x000270, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_Not_PreBool_ReturnValue_1) == 0x000271, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_BooleanOR_ReturnValue) == 0x000272, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_HandleHitboxOverlap, CallFunc_BooleanAND_ReturnValue_1) == 0x000273, "Member 'COMP_MeleeDamageComponent_C_HandleHitboxOverlap::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.GetCurrentHitboxDirection
// 0x0060 (0x0060 - 0x0000)
struct COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection final
{
public:
	class UBoxComponent*                          HitboxComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vector;                                            // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PreviousHitboxLocation;                            // 0x0014(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitboxIndex;                                       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHitboxOverlapIndexByTag_Index;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Map_Find_Value;                           // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection) == 0x000008, "Wrong alignment on COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection");
static_assert(sizeof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection) == 0x000060, "Wrong size on COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection, HitboxComponent) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection::HitboxComponent' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection, Vector) == 0x000008, "Member 'COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection::Vector' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection, PreviousHitboxLocation) == 0x000014, "Member 'COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection::PreviousHitboxLocation' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection, HitboxIndex) == 0x000020, "Member 'COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection::HitboxIndex' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection, CallFunc_Array_Get_Item) == 0x000028, "Member 'COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection, CallFunc_GetHitboxOverlapIndexByTag_Index) == 0x000030, "Member 'COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection::CallFunc_GetHitboxOverlapIndexByTag_Index' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000034, "Member 'COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000040, "Member 'COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection, CallFunc_Map_Find_Value) == 0x00004C, "Member 'COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.GetHitboxDamageScale
// 0x0040 (0x0040 - 0x0000)
struct COMP_MeleeDamageComponent_C_GetHitboxDamageScale final
{
public:
	class UBoxComponent*                          HitboxComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DamageScale;                                       // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale) == 0x000008, "Wrong alignment on COMP_MeleeDamageComponent_C_GetHitboxDamageScale");
static_assert(sizeof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale) == 0x000040, "Wrong size on COMP_MeleeDamageComponent_C_GetHitboxDamageScale");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, HitboxComponent) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::HitboxComponent' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, Result) == 0x000008, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::Result' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, DamageScale) == 0x00000C, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::DamageScale' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, Temp_int_Array_Index_Variable) == 0x000010, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, CallFunc_Array_Get_Item) == 0x000020, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, CallFunc_Map_Find_Value) == 0x00002C, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, CallFunc_Map_Length_ReturnValue) == 0x000034, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_GetHitboxDamageScale, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'COMP_MeleeDamageComponent_C_GetHitboxDamageScale::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.ShouldSaveComponent
// 0x000C (0x000C - 0x0000)
struct COMP_MeleeDamageComponent_C_ShouldSaveComponent final
{
public:
	struct FStreamingSaveGameComponentParams      Params_0;                                          // 0x0000(0x0004)(Parm, OutParm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameComponentParams      K2Node_MakeStruct_StreamingSaveGameComponentParams; // 0x0008(0x0004)(NoDestructor)
};
static_assert(alignof(COMP_MeleeDamageComponent_C_ShouldSaveComponent) == 0x000004, "Wrong alignment on COMP_MeleeDamageComponent_C_ShouldSaveComponent");
static_assert(sizeof(COMP_MeleeDamageComponent_C_ShouldSaveComponent) == 0x00000C, "Wrong size on COMP_MeleeDamageComponent_C_ShouldSaveComponent");
static_assert(offsetof(COMP_MeleeDamageComponent_C_ShouldSaveComponent, Params_0) == 0x000000, "Member 'COMP_MeleeDamageComponent_C_ShouldSaveComponent::Params_0' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_ShouldSaveComponent, ReturnValue) == 0x000004, "Member 'COMP_MeleeDamageComponent_C_ShouldSaveComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_MeleeDamageComponent_C_ShouldSaveComponent, K2Node_MakeStruct_StreamingSaveGameComponentParams) == 0x000008, "Member 'COMP_MeleeDamageComponent_C_ShouldSaveComponent::K2Node_MakeStruct_StreamingSaveGameComponentParams' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionWaypoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "STRUCT_MissionWaypointData_structs.hpp"
#include "ENUM_GameDifficulty_structs.hpp"


namespace SDK::Params
{

// Function MissionWaypoint.MissionWaypoint_C.ExecuteUbergraph_MissionWaypoint
// 0x0004 (0x0004 - 0x0000)
struct MissionWaypoint_C_ExecuteUbergraph_MissionWaypoint final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionWaypoint_C_ExecuteUbergraph_MissionWaypoint) == 0x000004, "Wrong alignment on MissionWaypoint_C_ExecuteUbergraph_MissionWaypoint");
static_assert(sizeof(MissionWaypoint_C_ExecuteUbergraph_MissionWaypoint) == 0x000004, "Wrong size on MissionWaypoint_C_ExecuteUbergraph_MissionWaypoint");
static_assert(offsetof(MissionWaypoint_C_ExecuteUbergraph_MissionWaypoint, EntryPoint) == 0x000000, "Member 'MissionWaypoint_C_ExecuteUbergraph_MissionWaypoint::EntryPoint' has a wrong offset!");

// Function MissionWaypoint.MissionWaypoint_C.InitializeMissionWaypoint
// 0x00B8 (0x00B8 - 0x0000)
struct MissionWaypoint_C_InitializeMissionWaypoint final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MissionWaypointData            WaypointData;                                      // 0x0008(0x0030)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	ENUM_GameDifficulty                           CallFunc_GetDifficultyByType_Difficulty;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsStreamingLevels_Result;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName StoryQuestName, bool Value)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasCompletedStoryQuest_Completed_1;       // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MissionWaypointData            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionWaypoint_C_InitializeMissionWaypoint) == 0x000008, "Wrong alignment on MissionWaypoint_C_InitializeMissionWaypoint");
static_assert(sizeof(MissionWaypoint_C_InitializeMissionWaypoint) == 0x0000B8, "Wrong size on MissionWaypoint_C_InitializeMissionWaypoint");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, GameInstance) == 0x000000, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::GameInstance' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, WaypointData) == 0x000008, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::WaypointData' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, CallFunc_GetDifficultyByType_Difficulty) == 0x000038, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::CallFunc_GetDifficultyByType_Difficulty' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000039, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, CallFunc_NotEqual_NameName_ReturnValue) == 0x00003A, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, K2Node_CreateDelegate_OutputDelegate) == 0x00003C, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, CallFunc_IsStreamingLevels_Result) == 0x00004C, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::CallFunc_IsStreamingLevels_Result' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, K2Node_CreateDelegate_OutputDelegate_1) == 0x000050, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, CallFunc_HasCompletedStoryQuest_Completed) == 0x000060, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::CallFunc_HasCompletedStoryQuest_Completed' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, CallFunc_HasCompletedStoryQuest_Completed_1) == 0x000061, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::CallFunc_HasCompletedStoryQuest_Completed_1' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, CallFunc_Not_PreBool_ReturnValue) == 0x000062, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000098, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000099, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, CallFunc_GetGameInstance_ReturnValue) == 0x0000A0, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000A8, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_InitializeMissionWaypoint, K2Node_DynamicCast_bSuccess) == 0x0000B0, "Member 'MissionWaypoint_C_InitializeMissionWaypoint::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function MissionWaypoint.MissionWaypoint_C.SetWaypointVisible
// 0x0001 (0x0001 - 0x0000)
struct MissionWaypoint_C_SetWaypointVisible final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionWaypoint_C_SetWaypointVisible) == 0x000001, "Wrong alignment on MissionWaypoint_C_SetWaypointVisible");
static_assert(sizeof(MissionWaypoint_C_SetWaypointVisible) == 0x000001, "Wrong size on MissionWaypoint_C_SetWaypointVisible");
static_assert(offsetof(MissionWaypoint_C_SetWaypointVisible, State) == 0x000000, "Member 'MissionWaypoint_C_SetWaypointVisible::State' has a wrong offset!");

// Function MissionWaypoint.MissionWaypoint_C.EVENT_OnStoryQuestChanged
// 0x00A0 (0x00A0 - 0x0000)
struct MissionWaypoint_C_EVENT_OnStoryQuestChanged final
{
public:
	class FName                                   StoryQuestName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MissionWaypointData            WaypointData;                                      // 0x0010(0x0030)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName StoryQuestName, bool Value)> K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MissionWaypointData            CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MissionWaypoint_C_EVENT_OnStoryQuestChanged) == 0x000008, "Wrong alignment on MissionWaypoint_C_EVENT_OnStoryQuestChanged");
static_assert(sizeof(MissionWaypoint_C_EVENT_OnStoryQuestChanged) == 0x0000A0, "Wrong size on MissionWaypoint_C_EVENT_OnStoryQuestChanged");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnStoryQuestChanged, StoryQuestName) == 0x000000, "Member 'MissionWaypoint_C_EVENT_OnStoryQuestChanged::StoryQuestName' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnStoryQuestChanged, Value) == 0x000008, "Member 'MissionWaypoint_C_EVENT_OnStoryQuestChanged::Value' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnStoryQuestChanged, WaypointData) == 0x000010, "Member 'MissionWaypoint_C_EVENT_OnStoryQuestChanged::WaypointData' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnStoryQuestChanged, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'MissionWaypoint_C_EVENT_OnStoryQuestChanged::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnStoryQuestChanged, K2Node_DynamicCast_AsGI_Single_Player) == 0x000048, "Member 'MissionWaypoint_C_EVENT_OnStoryQuestChanged::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnStoryQuestChanged, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'MissionWaypoint_C_EVENT_OnStoryQuestChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnStoryQuestChanged, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000051, "Member 'MissionWaypoint_C_EVENT_OnStoryQuestChanged::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnStoryQuestChanged, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'MissionWaypoint_C_EVENT_OnStoryQuestChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnStoryQuestChanged, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'MissionWaypoint_C_EVENT_OnStoryQuestChanged::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnStoryQuestChanged, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000098, "Member 'MissionWaypoint_C_EVENT_OnStoryQuestChanged::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnStoryQuestChanged, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000099, "Member 'MissionWaypoint_C_EVENT_OnStoryQuestChanged::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function MissionWaypoint.MissionWaypoint_C.EVENT_OnFinishedLoadingLevelCollection
// 0x0040 (0x0040 - 0x0000)
struct MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection) == 0x000008, "Wrong alignment on MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection");
static_assert(sizeof(MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection) == 0x000040, "Wrong size on MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000038, "Member 'MissionWaypoint_C_EVENT_OnFinishedLoadingLevelCollection::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

}


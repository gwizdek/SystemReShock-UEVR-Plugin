#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_RepairBot

#include "Basic.hpp"

#include "PAWN_Enemy_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PAWN_RepairBot.PAWN_RepairBot_C
// 0x0090 (0x0AA0 - 0x0A10)
class APAWN_RepairBot_C final : public APAWN_Enemy_C
{
public:
	uint8                                         Pad_A01[0x7];                                      // 0x0A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_VoxelAudio_C*                     FootAudioBR;                                       // 0x0A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     FootAudioBL;                                       // 0x0A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     FootAudioML;                                       // 0x0A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     FootAudioMR;                                       // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     FootAudioFL;                                       // 0x0A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     FootAudioFR;                                       // 0x0A30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     MouthAudio;                                        // 0x0A38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ZapBox;                                            // 0x0A40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ScanBox;                                           // 0x0A48(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_MeleeDamageComponent_C*           COMP_MeleeDamageComponent;                         // 0x0A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         HoverRaycastOffset;                                // 0x0A58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoverRaycastHeight;                                // 0x0A5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoverRaycastDistance;                              // 0x0A60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoverNormalAdjustRatio;                            // 0x0A64(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlickerLightsStartTimestamp;                       // 0x0A68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlickerLightsDuration;                             // 0x0A6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetHoverNormal;                                 // 0x0A70(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A7C[0x4];                                      // 0x0A7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeightedAverageVec3*                   SmoothNormalHistory;                               // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        HoverRaycastOffsets;                               // 0x0A88(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void OnDynaDamage(class FName DynaElement, bool OnBeginPlay);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PAWN_RepairBot_C">();
	}
	static class APAWN_RepairBot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APAWN_RepairBot_C>();
	}
};
static_assert(alignof(APAWN_RepairBot_C) == 0x000010, "Wrong alignment on APAWN_RepairBot_C");
static_assert(sizeof(APAWN_RepairBot_C) == 0x000AA0, "Wrong size on APAWN_RepairBot_C");
static_assert(offsetof(APAWN_RepairBot_C, FootAudioBR) == 0x000A08, "Member 'APAWN_RepairBot_C::FootAudioBR' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, FootAudioBL) == 0x000A10, "Member 'APAWN_RepairBot_C::FootAudioBL' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, FootAudioML) == 0x000A18, "Member 'APAWN_RepairBot_C::FootAudioML' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, FootAudioMR) == 0x000A20, "Member 'APAWN_RepairBot_C::FootAudioMR' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, FootAudioFL) == 0x000A28, "Member 'APAWN_RepairBot_C::FootAudioFL' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, FootAudioFR) == 0x000A30, "Member 'APAWN_RepairBot_C::FootAudioFR' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, MouthAudio) == 0x000A38, "Member 'APAWN_RepairBot_C::MouthAudio' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, ZapBox) == 0x000A40, "Member 'APAWN_RepairBot_C::ZapBox' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, ScanBox) == 0x000A48, "Member 'APAWN_RepairBot_C::ScanBox' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, COMP_MeleeDamageComponent) == 0x000A50, "Member 'APAWN_RepairBot_C::COMP_MeleeDamageComponent' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, HoverRaycastOffset) == 0x000A58, "Member 'APAWN_RepairBot_C::HoverRaycastOffset' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, HoverRaycastHeight) == 0x000A5C, "Member 'APAWN_RepairBot_C::HoverRaycastHeight' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, HoverRaycastDistance) == 0x000A60, "Member 'APAWN_RepairBot_C::HoverRaycastDistance' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, HoverNormalAdjustRatio) == 0x000A64, "Member 'APAWN_RepairBot_C::HoverNormalAdjustRatio' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, FlickerLightsStartTimestamp) == 0x000A68, "Member 'APAWN_RepairBot_C::FlickerLightsStartTimestamp' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, FlickerLightsDuration) == 0x000A6C, "Member 'APAWN_RepairBot_C::FlickerLightsDuration' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, TargetHoverNormal) == 0x000A70, "Member 'APAWN_RepairBot_C::TargetHoverNormal' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, SmoothNormalHistory) == 0x000A80, "Member 'APAWN_RepairBot_C::SmoothNormalHistory' has a wrong offset!");
static_assert(offsetof(APAWN_RepairBot_C, HoverRaycastOffsets) == 0x000A88, "Member 'APAWN_RepairBot_C::HoverRaycastOffsets' has a wrong offset!");

}


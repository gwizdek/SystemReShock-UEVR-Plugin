#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_PerformActionBase

#include "Basic.hpp"


namespace SDK::Params
{

// Function TASK_PerformActionBase.TASK_PerformActionBase_C.ExecuteUbergraph_TASK_PerformActionBase
// 0x0098 (0x0098 - 0x0000)
struct TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OwnerActor;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeginAction_Result;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Character_C> K2Node_DynamicCast_AsINTERF_ANIM_Character;        // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetIdleOverrideSequence_Result;           // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartAction_Success;                      // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_83[0x5];                                       // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_StartAction_Result;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActionProgress_Result;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase) == 0x000008, "Wrong alignment on TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase");
static_assert(sizeof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase) == 0x000098, "Wrong size on TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, EntryPoint) == 0x000000, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, K2Node_Event_OwnerController) == 0x000008, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, K2Node_Event_ControlledPawn) == 0x000010, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000018, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, K2Node_Event_OwnerActor) == 0x000038, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::K2Node_Event_OwnerActor' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, K2Node_Event_DeltaSeconds) == 0x000040, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_CanBeginAction_Result) == 0x000044, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_CanBeginAction_Result' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_Not_PreBool_ReturnValue) == 0x000045, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_GetAnimInstance_ReturnValue) == 0x000048, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, K2Node_DynamicCast_AsINTERF_ANIM_Character) == 0x000050, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::K2Node_DynamicCast_AsINTERF_ANIM_Character' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_SetIdleOverrideSequence_Result) == 0x000061, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_SetIdleOverrideSequence_Result' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_IsValid_ReturnValue_1) == 0x000062, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, K2Node_CreateDelegate_OutputDelegate_1) == 0x000064, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_IsValid_ReturnValue_2) == 0x000074, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_GetCurrentAction_CurrentAction) == 0x000078, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000080, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_StartAction_Success) == 0x000082, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_StartAction_Success' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_StartAction_Result) == 0x000088, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_StartAction_Result' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_GetActionProgress_Result) == 0x000090, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_GetActionProgress_Result' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000094, "Member 'TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function TASK_PerformActionBase.TASK_PerformActionBase_C.ReceiveTick
// 0x0010 (0x0010 - 0x0000)
struct TASK_PerformActionBase_C_ReceiveTick final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TASK_PerformActionBase_C_ReceiveTick) == 0x000008, "Wrong alignment on TASK_PerformActionBase_C_ReceiveTick");
static_assert(sizeof(TASK_PerformActionBase_C_ReceiveTick) == 0x000010, "Wrong size on TASK_PerformActionBase_C_ReceiveTick");
static_assert(offsetof(TASK_PerformActionBase_C_ReceiveTick, OwnerActor) == 0x000000, "Member 'TASK_PerformActionBase_C_ReceiveTick::OwnerActor' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ReceiveTick, DeltaSeconds) == 0x000008, "Member 'TASK_PerformActionBase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function TASK_PerformActionBase.TASK_PerformActionBase_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct TASK_PerformActionBase_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TASK_PerformActionBase_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on TASK_PerformActionBase_C_ReceiveExecuteAI");
static_assert(sizeof(TASK_PerformActionBase_C_ReceiveExecuteAI) == 0x000010, "Wrong size on TASK_PerformActionBase_C_ReceiveExecuteAI");
static_assert(offsetof(TASK_PerformActionBase_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'TASK_PerformActionBase_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'TASK_PerformActionBase_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function TASK_PerformActionBase.TASK_PerformActionBase_C.ChooseActionMontage
// 0x0008 (0x0008 - 0x0000)
struct TASK_PerformActionBase_C_ChooseActionMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TASK_PerformActionBase_C_ChooseActionMontage) == 0x000008, "Wrong alignment on TASK_PerformActionBase_C_ChooseActionMontage");
static_assert(sizeof(TASK_PerformActionBase_C_ChooseActionMontage) == 0x000008, "Wrong size on TASK_PerformActionBase_C_ChooseActionMontage");
static_assert(offsetof(TASK_PerformActionBase_C_ChooseActionMontage, Montage) == 0x000000, "Member 'TASK_PerformActionBase_C_ChooseActionMontage::Montage' has a wrong offset!");

// Function TASK_PerformActionBase.TASK_PerformActionBase_C.StartAction
// 0x0040 (0x0040 - 0x0000)
struct TASK_PerformActionBase_C_StartAction final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Montage;                                           // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_ChooseActionMontage_Montage;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterAction_C*                     CallFunc_TryBeginAction_Action;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TASK_PerformActionBase_C_StartAction) == 0x000008, "Wrong alignment on TASK_PerformActionBase_C_StartAction");
static_assert(sizeof(TASK_PerformActionBase_C_StartAction) == 0x000040, "Wrong size on TASK_PerformActionBase_C_StartAction");
static_assert(offsetof(TASK_PerformActionBase_C_StartAction, Success) == 0x000000, "Member 'TASK_PerformActionBase_C_StartAction::Success' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_StartAction, Result) == 0x000008, "Member 'TASK_PerformActionBase_C_StartAction::Result' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_StartAction, Montage) == 0x000010, "Member 'TASK_PerformActionBase_C_StartAction::Montage' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_StartAction, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'TASK_PerformActionBase_C_StartAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_StartAction, CallFunc_ChooseActionMontage_Montage) == 0x000020, "Member 'TASK_PerformActionBase_C_StartAction::CallFunc_ChooseActionMontage_Montage' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_StartAction, CallFunc_ForceBeginAction_Action) == 0x000028, "Member 'TASK_PerformActionBase_C_StartAction::CallFunc_ForceBeginAction_Action' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_StartAction, CallFunc_TryBeginAction_Action) == 0x000030, "Member 'TASK_PerformActionBase_C_StartAction::CallFunc_TryBeginAction_Action' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_StartAction, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'TASK_PerformActionBase_C_StartAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TASK_PerformActionBase_C_StartAction, CallFunc_IsValid_ReturnValue_2) == 0x000039, "Member 'TASK_PerformActionBase_C_StartAction::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FUNCLIB_Debug

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function FUNCLIB_Debug.FUNCLIB_Debug_C.MapMoveOrTeleportToElevator
// 0x00E8 (0x00E8 - 0x0000)
struct FUNCLIB_Debug_C_MapMoveOrTeleportToElevator final
{
public:
	struct FDataTableRowHandle                    TargetLevel;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClosestElevatorDistance;                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ClosestElevatorIndex;                              // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentElevatorDistance;                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentElevatorIndex;                              // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AINTERACT_ElevatorDoors_Base_C*> ElevatorActors;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class ACON_Hacker_C*                          HackerController;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCurrentLevelName_Result;               // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_WrapIntUpperbound_ReturnValue;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_ElevatorDoors_Base_C*         CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AINTERACT_ElevatorDoors_Base_C*> CallFunc_GetAllActorsOfClass_OutActors;            // 0x00A8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator) == 0x000008, "Wrong alignment on FUNCLIB_Debug_C_MapMoveOrTeleportToElevator");
static_assert(sizeof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator) == 0x0000E8, "Wrong size on FUNCLIB_Debug_C_MapMoveOrTeleportToElevator");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, TargetLevel) == 0x000000, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::TargetLevel' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, __WorldContext) == 0x000010, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, ClosestElevatorDistance) == 0x000018, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::ClosestElevatorDistance' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, ClosestElevatorIndex) == 0x00001C, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::ClosestElevatorIndex' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CurrentElevatorDistance) == 0x000020, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CurrentElevatorDistance' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CurrentElevatorIndex) == 0x000024, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CurrentElevatorIndex' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, ElevatorActors) == 0x000028, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::ElevatorActors' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, HackerController) == 0x000038, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::HackerController' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, Temp_int_Array_Index_Variable) == 0x000040, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_GetGameInstance_ReturnValue) == 0x000050, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, K2Node_DynamicCast_AsGI_Single_Player) == 0x000060, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_Greater_IntInt_ReturnValue) == 0x000069, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_GetCurrentLevelName_Result) == 0x00006C, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_GetCurrentLevelName_Result' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_Add_IntInt_ReturnValue_1) == 0x000078, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_WrapIntUpperbound_ReturnValue) == 0x00007C, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_WrapIntUpperbound_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_Less_FloatFloat_ReturnValue) == 0x000080, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_K2_GetPawn_ReturnValue) == 0x000088, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000A8, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000B8, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_Vector_Distance_ReturnValue) == 0x0000C4, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_Array_Length_ReturnValue_2) == 0x0000C8, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000CD, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, CallFunc_GetPlayerController_ReturnValue) == 0x0000D0, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, K2Node_DynamicCast_AsCON_Hacker) == 0x0000D8, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_MapMoveOrTeleportToElevator, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'FUNCLIB_Debug_C_MapMoveOrTeleportToElevator::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function FUNCLIB_Debug.FUNCLIB_Debug_C.SetGodMode
// 0x0028 (0x0028 - 0x0000)
struct FUNCLIB_Debug_C_SetGodMode final
{
public:
	bool                                          Active;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_SinglePlayer_C*                     K2Node_DynamicCast_AsGM_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_Debug_C_SetGodMode) == 0x000008, "Wrong alignment on FUNCLIB_Debug_C_SetGodMode");
static_assert(sizeof(FUNCLIB_Debug_C_SetGodMode) == 0x000028, "Wrong size on FUNCLIB_Debug_C_SetGodMode");
static_assert(offsetof(FUNCLIB_Debug_C_SetGodMode, Active) == 0x000000, "Member 'FUNCLIB_Debug_C_SetGodMode::Active' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_SetGodMode, __WorldContext) == 0x000008, "Member 'FUNCLIB_Debug_C_SetGodMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_SetGodMode, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'FUNCLIB_Debug_C_SetGodMode::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_SetGodMode, K2Node_DynamicCast_AsGM_Single_Player) == 0x000018, "Member 'FUNCLIB_Debug_C_SetGodMode::K2Node_DynamicCast_AsGM_Single_Player' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_SetGodMode, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'FUNCLIB_Debug_C_SetGodMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FUNCLIB_Debug.FUNCLIB_Debug_C.DestroyCameras
// 0x0020 (0x0020 - 0x0000)
struct FUNCLIB_Debug_C_DestroyCameras final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_SinglePlayer_C*                     K2Node_DynamicCast_AsGM_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_Debug_C_DestroyCameras) == 0x000008, "Wrong alignment on FUNCLIB_Debug_C_DestroyCameras");
static_assert(sizeof(FUNCLIB_Debug_C_DestroyCameras) == 0x000020, "Wrong size on FUNCLIB_Debug_C_DestroyCameras");
static_assert(offsetof(FUNCLIB_Debug_C_DestroyCameras, __WorldContext) == 0x000000, "Member 'FUNCLIB_Debug_C_DestroyCameras::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_DestroyCameras, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'FUNCLIB_Debug_C_DestroyCameras::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_DestroyCameras, K2Node_DynamicCast_AsGM_Single_Player) == 0x000010, "Member 'FUNCLIB_Debug_C_DestroyCameras::K2Node_DynamicCast_AsGM_Single_Player' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_DestroyCameras, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FUNCLIB_Debug_C_DestroyCameras::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FUNCLIB_Debug.FUNCLIB_Debug_C.DestroyCPUNodes
// 0x0020 (0x0020 - 0x0000)
struct FUNCLIB_Debug_C_DestroyCPUNodes final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_SinglePlayer_C*                     K2Node_DynamicCast_AsGM_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_Debug_C_DestroyCPUNodes) == 0x000008, "Wrong alignment on FUNCLIB_Debug_C_DestroyCPUNodes");
static_assert(sizeof(FUNCLIB_Debug_C_DestroyCPUNodes) == 0x000020, "Wrong size on FUNCLIB_Debug_C_DestroyCPUNodes");
static_assert(offsetof(FUNCLIB_Debug_C_DestroyCPUNodes, __WorldContext) == 0x000000, "Member 'FUNCLIB_Debug_C_DestroyCPUNodes::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_DestroyCPUNodes, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'FUNCLIB_Debug_C_DestroyCPUNodes::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_DestroyCPUNodes, K2Node_DynamicCast_AsGM_Single_Player) == 0x000010, "Member 'FUNCLIB_Debug_C_DestroyCPUNodes::K2Node_DynamicCast_AsGM_Single_Player' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_DestroyCPUNodes, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FUNCLIB_Debug_C_DestroyCPUNodes::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FUNCLIB_Debug.FUNCLIB_Debug_C.DestroyEnemies
// 0x0020 (0x0020 - 0x0000)
struct FUNCLIB_Debug_C_DestroyEnemies final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_SinglePlayer_C*                     K2Node_DynamicCast_AsGM_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_Debug_C_DestroyEnemies) == 0x000008, "Wrong alignment on FUNCLIB_Debug_C_DestroyEnemies");
static_assert(sizeof(FUNCLIB_Debug_C_DestroyEnemies) == 0x000020, "Wrong size on FUNCLIB_Debug_C_DestroyEnemies");
static_assert(offsetof(FUNCLIB_Debug_C_DestroyEnemies, __WorldContext) == 0x000000, "Member 'FUNCLIB_Debug_C_DestroyEnemies::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_DestroyEnemies, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'FUNCLIB_Debug_C_DestroyEnemies::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_DestroyEnemies, K2Node_DynamicCast_AsGM_Single_Player) == 0x000010, "Member 'FUNCLIB_Debug_C_DestroyEnemies::K2Node_DynamicCast_AsGM_Single_Player' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_DestroyEnemies, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FUNCLIB_Debug_C_DestroyEnemies::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FUNCLIB_Debug.FUNCLIB_Debug_C.RefillVitals
// 0x0020 (0x0020 - 0x0000)
struct FUNCLIB_Debug_C_RefillVitals final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_SinglePlayer_C*                     K2Node_DynamicCast_AsGM_Single_Player;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_Debug_C_RefillVitals) == 0x000008, "Wrong alignment on FUNCLIB_Debug_C_RefillVitals");
static_assert(sizeof(FUNCLIB_Debug_C_RefillVitals) == 0x000020, "Wrong size on FUNCLIB_Debug_C_RefillVitals");
static_assert(offsetof(FUNCLIB_Debug_C_RefillVitals, __WorldContext) == 0x000000, "Member 'FUNCLIB_Debug_C_RefillVitals::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_RefillVitals, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'FUNCLIB_Debug_C_RefillVitals::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_RefillVitals, K2Node_DynamicCast_AsGM_Single_Player) == 0x000010, "Member 'FUNCLIB_Debug_C_RefillVitals::K2Node_DynamicCast_AsGM_Single_Player' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_RefillVitals, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FUNCLIB_Debug_C_RefillVitals::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FUNCLIB_Debug.FUNCLIB_Debug_C.GrantLoadout
// 0x0048 (0x0048 - 0x0000)
struct FUNCLIB_Debug_C_GrantLoadout final
{
public:
	struct FDataTableRowHandle                    Loadout;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_SinglePlayer_C*                     GameInstance;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_SinglePlayer_C*                     K2Node_DynamicCast_AsGM_Single_Player;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_Debug_C_GrantLoadout) == 0x000008, "Wrong alignment on FUNCLIB_Debug_C_GrantLoadout");
static_assert(sizeof(FUNCLIB_Debug_C_GrantLoadout) == 0x000048, "Wrong size on FUNCLIB_Debug_C_GrantLoadout");
static_assert(offsetof(FUNCLIB_Debug_C_GrantLoadout, Loadout) == 0x000000, "Member 'FUNCLIB_Debug_C_GrantLoadout::Loadout' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_GrantLoadout, __WorldContext) == 0x000010, "Member 'FUNCLIB_Debug_C_GrantLoadout::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_GrantLoadout, GameInstance) == 0x000018, "Member 'FUNCLIB_Debug_C_GrantLoadout::GameInstance' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_GrantLoadout, CallFunc_Conv_NameToString_ReturnValue) == 0x000020, "Member 'FUNCLIB_Debug_C_GrantLoadout::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_GrantLoadout, CallFunc_GetGameMode_ReturnValue) == 0x000030, "Member 'FUNCLIB_Debug_C_GrantLoadout::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_GrantLoadout, K2Node_DynamicCast_AsGM_Single_Player) == 0x000038, "Member 'FUNCLIB_Debug_C_GrantLoadout::K2Node_DynamicCast_AsGM_Single_Player' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_GrantLoadout, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'FUNCLIB_Debug_C_GrantLoadout::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FUNCLIB_Debug.FUNCLIB_Debug_C.RevealMap
// 0x0020 (0x0020 - 0x0000)
struct FUNCLIB_Debug_C_RevealMap final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FUNCLIB_Debug_C_RevealMap) == 0x000008, "Wrong alignment on FUNCLIB_Debug_C_RevealMap");
static_assert(sizeof(FUNCLIB_Debug_C_RevealMap) == 0x000020, "Wrong size on FUNCLIB_Debug_C_RevealMap");
static_assert(offsetof(FUNCLIB_Debug_C_RevealMap, __WorldContext) == 0x000000, "Member 'FUNCLIB_Debug_C_RevealMap::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_RevealMap, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'FUNCLIB_Debug_C_RevealMap::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_RevealMap, K2Node_DynamicCast_AsCON_Hacker) == 0x000010, "Member 'FUNCLIB_Debug_C_RevealMap::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_RevealMap, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FUNCLIB_Debug_C_RevealMap::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function FUNCLIB_Debug.FUNCLIB_Debug_C.ToggleHUD
// 0x0050 (0x0050 - 0x0000)
struct FUNCLIB_Debug_C_ToggleHUD final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FUNCLIB_Debug_C_ToggleHUD) == 0x000008, "Wrong alignment on FUNCLIB_Debug_C_ToggleHUD");
static_assert(sizeof(FUNCLIB_Debug_C_ToggleHUD) == 0x000050, "Wrong size on FUNCLIB_Debug_C_ToggleHUD");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, __WorldContext) == 0x000000, "Member 'FUNCLIB_Debug_C_ToggleHUD::__WorldContext' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, Temp_bool_Variable) == 0x000008, "Member 'FUNCLIB_Debug_C_ToggleHUD::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, Temp_byte_Variable) == 0x000009, "Member 'FUNCLIB_Debug_C_ToggleHUD::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, Temp_byte_Variable_1) == 0x00000A, "Member 'FUNCLIB_Debug_C_ToggleHUD::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, Temp_bool_Variable_1) == 0x00000B, "Member 'FUNCLIB_Debug_C_ToggleHUD::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, Temp_byte_Variable_2) == 0x00000C, "Member 'FUNCLIB_Debug_C_ToggleHUD::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, Temp_byte_Variable_3) == 0x00000D, "Member 'FUNCLIB_Debug_C_ToggleHUD::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'FUNCLIB_Debug_C_ToggleHUD::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, K2Node_DynamicCast_AsCON_Hacker) == 0x000018, "Member 'FUNCLIB_Debug_C_ToggleHUD::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'FUNCLIB_Debug_C_ToggleHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, CallFunc_K2_GetPawn_ReturnValue) == 0x000028, "Member 'FUNCLIB_Debug_C_ToggleHUD::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000030, "Member 'FUNCLIB_Debug_C_ToggleHUD::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'FUNCLIB_Debug_C_ToggleHUD::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000040, "Member 'FUNCLIB_Debug_C_ToggleHUD::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'FUNCLIB_Debug_C_ToggleHUD::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, CallFunc_IsVisible_ReturnValue) == 0x000049, "Member 'FUNCLIB_Debug_C_ToggleHUD::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, CallFunc_IsVisible_ReturnValue_1) == 0x00004A, "Member 'FUNCLIB_Debug_C_ToggleHUD::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, K2Node_Select_Default) == 0x00004B, "Member 'FUNCLIB_Debug_C_ToggleHUD::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FUNCLIB_Debug_C_ToggleHUD, K2Node_Select_Default_1) == 0x00004C, "Member 'FUNCLIB_Debug_C_ToggleHUD::K2Node_Select_Default_1' has a wrong offset!");

}


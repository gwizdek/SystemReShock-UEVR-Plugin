#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANIMBP_Decoy

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ANIMBP_Decoy.ANIMBP_Decoy_C.ExecuteUbergraph_ANIMBP_Decoy
// 0x007C (0x007C - 0x0000)
struct ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RandomRotator_ReturnValue;                // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue_1;      // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy) == 0x000004, "Wrong alignment on ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy");
static_assert(sizeof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy) == 0x00007C, "Wrong size on ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, EntryPoint) == 0x000000, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::EntryPoint' has a wrong offset!");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, CallFunc_GetUpVector_ReturnValue) == 0x000004, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, CallFunc_RandomUnitVector_ReturnValue) == 0x000010, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00001C, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, K2Node_Event_DeltaTimeX) == 0x00002C, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000030, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x00003C, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, CallFunc_ComposeRotators_ReturnValue) == 0x000054, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, CallFunc_RandomRotator_ReturnValue) == 0x000060, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::CallFunc_RandomRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00006C, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy, CallFunc_Multiply_RotatorFloat_ReturnValue_1) == 0x000070, "Member 'ANIMBP_Decoy_C_ExecuteUbergraph_ANIMBP_Decoy::CallFunc_Multiply_RotatorFloat_ReturnValue_1' has a wrong offset!");

// Function ANIMBP_Decoy.ANIMBP_Decoy_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ANIMBP_Decoy_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ANIMBP_Decoy_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ANIMBP_Decoy_C_BlueprintUpdateAnimation");
static_assert(sizeof(ANIMBP_Decoy_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ANIMBP_Decoy_C_BlueprintUpdateAnimation");
static_assert(offsetof(ANIMBP_Decoy_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ANIMBP_Decoy_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ANIMBP_Decoy.ANIMBP_Decoy_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ANIMBP_Decoy_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ANIMBP_Decoy_C_AnimGraph) == 0x000008, "Wrong alignment on ANIMBP_Decoy_C_AnimGraph");
static_assert(sizeof(ANIMBP_Decoy_C_AnimGraph) == 0x000010, "Wrong size on ANIMBP_Decoy_C_AnimGraph");
static_assert(offsetof(ANIMBP_Decoy_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ANIMBP_Decoy_C_AnimGraph::AnimGraph_0' has a wrong offset!");

}


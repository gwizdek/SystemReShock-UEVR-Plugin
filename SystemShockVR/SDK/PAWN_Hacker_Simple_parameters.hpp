#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_Hacker_Simple

#include "Basic.hpp"

#include "StreamingSaveGameSystem_structs.hpp"
#include "Engine_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_CombatDifficultySettings_structs.hpp"
#include "STRUCT_TutorialData_structs.hpp"
#include "AttributeSystem_structs.hpp"
#include "ENUM_HackerGender_structs.hpp"
#include "ENUM_HazardType_structs.hpp"
#include "STRUCT_LevelInfo_structs.hpp"
#include "STRUCT_CharacterLoadoutSettings_structs.hpp"
#include "ENUM_MFDTabCategory_structs.hpp"
#include "STRUCT_MoveInputAction_structs.hpp"
#include "ENUM_HotbarStyle_structs.hpp"
#include "UMG_structs.hpp"
#include "ENUM_CardinalDirection_structs.hpp"
#include "ENUM_PostProcessingOptions_structs.hpp"
#include "STRUCT_TutorialInstance_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "STRUCT_TutorialVolumeData_structs.hpp"
#include "ENUM_DetectionState_structs.hpp"
#include "SystemReShock_structs.hpp"


namespace SDK::Params
{

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ExecuteUbergraph_PAWN_Hacker_Simple
// 0x1510 (0x1510 - 0x0000)
struct PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_19;                       // 0x0008(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasInitializedAttributes_ReturnValue;     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_18;                       // 0x0028(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_17;                       // 0x0040(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_16;                       // 0x0058(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_82;                    // 0x0078(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_81;                    // 0x0090(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x00A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_80;                    // 0x00C0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_79;                    // 0x00D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x00F0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_78;                    // 0x0108(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_77;                    // 0x0120(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_76;                    // 0x0138(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_75;                    // 0x0150(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_2;                            // 0x0168(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_74;                    // 0x0180(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_73;                    // 0x0198(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_3;                            // 0x01B0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_72;                    // 0x01C8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_71;                    // 0x01E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_4;                            // 0x01F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_70;                    // 0x0210(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_69;                    // 0x0228(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_5;                            // 0x0240(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_68;                    // 0x0258(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_67;                    // 0x0270(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_6;                            // 0x0288(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_66;                    // 0x02A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_65;                    // 0x02B8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_7;                            // 0x02D0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_64;                    // 0x02E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_63;                    // 0x0300(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_8;                            // 0x0318(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_62;                    // 0x0330(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_61;                    // 0x0348(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_9;                            // 0x0360(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_60;                    // 0x0378(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_59;                    // 0x0390(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_10;                           // 0x03A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_58;                    // 0x03C0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_57;                    // 0x03D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_11;                           // 0x03F0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_56;                    // 0x0408(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_55;                    // 0x0420(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_12;                           // 0x0438(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_54;                    // 0x0450(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_53;                    // 0x0468(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_13;                           // 0x0480(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_52;                    // 0x0498(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_51;                    // 0x04B0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_14;                           // 0x04C8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_50;                    // 0x04E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_49;                    // 0x04F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_15;                           // 0x0510(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_48;                    // 0x0528(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_47;                    // 0x0540(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_16;                           // 0x0558(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_46;                    // 0x0570(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_45;                    // 0x0588(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_17;                           // 0x05A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_44;                    // 0x05B8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_43;                    // 0x05D0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_42;                    // 0x05E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_41;                    // 0x0600(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_40;                    // 0x0618(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_39;                    // 0x0630(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_38;                    // 0x0648(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_18;                           // 0x0660(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_37;                    // 0x0678(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_36;                    // 0x0690(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_19;                           // 0x06A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_35;                    // 0x06C0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_34;                    // 0x06D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_20;                           // 0x06F0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_33;                    // 0x0708(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_32;                    // 0x0720(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_21;                           // 0x0738(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_31;                    // 0x0750(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_30;                    // 0x0768(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_29;                    // 0x0780(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_22;                           // 0x0798(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_28;                    // 0x07B0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_27;                    // 0x07C8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_23;                           // 0x07E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_26;                    // 0x07F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_25;                    // 0x0810(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_24;                    // 0x0828(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_23;                    // 0x0840(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_24;                           // 0x0858(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_22;                    // 0x0870(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_21;                    // 0x0888(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_25;                           // 0x08A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_20;                    // 0x08B8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_19;                    // 0x08D0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_26;                           // 0x08E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_18;                    // 0x0900(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_17;                    // 0x0918(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_27;                           // 0x0930(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_16;                    // 0x0948(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_15;                    // 0x0960(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_14;                    // 0x0978(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_28;                           // 0x0990(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_13;                    // 0x09A8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_12;                    // 0x09C0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_29;                           // 0x09D8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_11;                    // 0x09F0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_10;                    // 0x0A08(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_30;                           // 0x0A20(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_9;                     // 0x0A38(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x0A50(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_31;                           // 0x0A68(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x0A80(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x0A98(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_32;                           // 0x0AB0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x0AC8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0AE0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_33;                           // 0x0AF8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0B10(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0B28(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_34;                           // 0x0B40(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0B58(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0B70(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_35;                           // 0x0B88(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_15;                       // 0x0BA0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_14;                       // 0x0BB8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_36;                           // 0x0BD0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_13;                       // 0x0BE8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_12;                       // 0x0C00(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_37;                           // 0x0C18(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_11;                       // 0x0C30(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_10;                       // 0x0C48(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_38;                           // 0x0C60(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_9;                        // 0x0C78(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_8;                        // 0x0C90(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_39;                           // 0x0CA8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_7;                        // 0x0CC0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_6;                        // 0x0CD8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_40;                           // 0x0CF0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x0D08(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0D20(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_41;                           // 0x0D38(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0D50(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0D68(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_42;                           // 0x0D80(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0D98(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0DB0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_43;                           // 0x0DC8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_20;                       // 0x0DE0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_21;                       // 0x0DF8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_22;                       // 0x0E10(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_23;                       // 0x0E28(0x0018)(HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0E40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E44[0x4];                                      // 0x0E44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_24;                       // 0x0E48(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0E60(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1; // 0x0E70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2; // 0x0E80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_3; // 0x0E90(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_4; // 0x0EA0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_5; // 0x0EB0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_6; // 0x0EC0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_7; // 0x0ED0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_8; // 0x0EE0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_9; // 0x0EF0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue_1; // 0x0F00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F04[0x4];                                      // 0x0F04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_10; // 0x0F08(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_11; // 0x0F18(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_12; // 0x0F28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	float                                         CallFunc_BreakVector4_X;                           // 0x0F38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Y;                           // 0x0F3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_Z;                           // 0x0F40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector4_W;                           // 0x0F44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_13; // 0x0F48(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_RemoveBlendable_InBlendableObject_CastInput; // 0x0F58(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_14; // 0x0F68(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_15; // 0x0F78(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TSoftObjectPtr<class UNiagaraSystem>          K2Node_CustomEvent_System;                         // 0x0F88(0x0028)(HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0FB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_25;                       // 0x0FB8(0x0018)(HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0FD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_26;                       // 0x0FD8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0FF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasActiveMods_ReturnValue;                // 0x0FF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FF2[0x2];                                      // 0x0FF2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Value;                          // 0x0FF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0FF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0FFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FFB[0x5];                                      // 0x0FFB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_16; // 0x1000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	struct FKey                                   K2Node_InputKeyEvent_Key_27;                       // 0x1010(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_17; // 0x1028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          K2Node_CustomEvent_IsRadiationDamage;              // 0x1038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1039[0x7];                                     // 0x1039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_18; // 0x1040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_19; // 0x1050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_20; // 0x1060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x1070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1078[0x8];                                     // 0x1078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_GetDefaultGammaFromCurrentBrightness_Result; // 0x1080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               K2Node_MakeStruct_Vector4;                         // 0x1090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector4                               K2Node_MakeStruct_Vector4_1;                       // 0x10A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x10B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B1[0x3];                                     // 0x10B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x10B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x10B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10B9[0x7];                                     // 0x10B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_MakeVector4_ReturnValue;                  // 0x10C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x10D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_2;                       // 0x10D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_1;  // 0x10D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue_2;  // 0x10D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x10DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x10DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x10DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x10E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x10E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x10E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x10EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x10F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x10F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x10F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x10FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x1100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x1104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x1108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x110C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_21; // 0x1110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x1120(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x1130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x1140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1141[0x7];                                     // 0x1141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x1148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x1150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1151[0x7];                                     // 0x1151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x1158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x1160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1161[0x7];                                     // 0x1161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x1168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x1170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker_1;                 // 0x1178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x1180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1181[0x7];                                     // 0x1181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x1188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x1190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1191[0x7];                                     // 0x1191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x1198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller_1;          // 0x11A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x11A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A9[0x3];                                     // 0x11A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x11AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x11B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState_1;        // 0x11B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B2[0x6];                                     // 0x11B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue_1;            // 0x11B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess_1;                  // 0x11C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSaveGames_Result;                      // 0x11C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11CA[0x2];                                     // 0x11CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_8;                 // 0x11CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_7;                 // 0x11D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x11D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x11D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x11D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x11D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FKey                                   K2Node_InputKeyEvent_Key_28;                       // 0x11D8(0x0018)(HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_6;                 // 0x11F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction;          // 0x11F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x11FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveActionChanged_Result;                 // 0x1200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1201[0x3];                                     // 0x1201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue_5;                 // 0x1204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x1208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x120C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_4;                 // 0x1210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x1214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x1218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x121C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x1220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x1221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x1222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1223[0x1];                                     // 0x1223(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x1224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_44;                           // 0x1228(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x1240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x1250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1251[0x7];                                     // 0x1251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_29;                       // 0x1258(0x0018)(HasGetValueTypeHash)
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x1270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_30;                       // 0x1278(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x1290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x12A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12A1[0x7];                                     // 0x12A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x12A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x12B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x12B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x12B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x12B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x12B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12B5[0x3];                                     // 0x12B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x12B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x12C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12C9[0x7];                                     // 0x12C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_2;               // 0x12D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x12D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x12D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12DA[0x6];                                     // 0x12DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_31;                       // 0x12E0(0x0018)(HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_3;                 // 0x12F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x1308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1309[0x3];                                     // 0x1309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction_1;        // 0x130C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1314[0x4];                                     // 0x1314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_3;               // 0x1318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveActionChanged_Result_1;               // 0x1320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1321[0x3];                                     // 0x1321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction_2;        // 0x1324(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveActionChanged_Result_2;               // 0x132C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132D[0x3];                                     // 0x132D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x1330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit_1;                                // 0x1334(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_13BC[0x4];                                     // 0x13BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x13C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x13C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13C9[0x7];                                     // 0x13C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_OldController;                        // 0x13D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x13D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x13E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x13E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13E9[0x7];                                     // 0x13E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x13F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x13F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x1400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x1408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1409[0x7];                                     // 0x1409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x1410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x1418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1419[0x7];                                     // 0x1419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x1420(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x1428(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x1430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x1438(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x1440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1441[0x3];                                     // 0x1441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x1444(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x1450(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x145C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x1468(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AACTOR_Saturn_C*                        CallFunc_GetActorOfClassInSubLevelByName_ReturnValue; // 0x14F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x14F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopTrackingLocation_ReturnValue;         // 0x14F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14FA[0x6];                                     // 0x14FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MusicCue_C*                         CallFunc_SetMusicState_MusicCue;                   // 0x1500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StartTrackingLocation_ReturnValue;        // 0x1508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple) == 0x000010, "Wrong alignment on PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple");
static_assert(sizeof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple) == 0x001510, "Wrong size on PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, EntryPoint) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::EntryPoint' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_19) == 0x000008, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_19' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_HasInitializedAttributes_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_HasInitializedAttributes_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_18) == 0x000028, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_18' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_17) == 0x000040, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_17' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_16) == 0x000058, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_16' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_bool_Variable) == 0x000070, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_float_Variable) == 0x000074, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_82) == 0x000078, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_82' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_81) == 0x000090, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_81' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_80) == 0x0000C0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_80' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_79) == 0x0000D8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_79' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_1) == 0x0000F0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_78) == 0x000108, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_78' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_77) == 0x000120, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_77' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_76) == 0x000138, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_76' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_75) == 0x000150, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_75' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_2) == 0x000168, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_74) == 0x000180, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_74' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_73) == 0x000198, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_73' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_3) == 0x0001B0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_72) == 0x0001C8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_72' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_71) == 0x0001E0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_71' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_4) == 0x0001F8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_70) == 0x000210, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_70' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_69) == 0x000228, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_69' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_5) == 0x000240, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_68) == 0x000258, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_68' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_67) == 0x000270, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_67' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_6) == 0x000288, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_66) == 0x0002A0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_66' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_65) == 0x0002B8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_65' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_7) == 0x0002D0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_64) == 0x0002E8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_64' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_63) == 0x000300, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_63' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_8) == 0x000318, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_62) == 0x000330, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_62' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_61) == 0x000348, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_61' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_9) == 0x000360, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_60) == 0x000378, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_60' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_59) == 0x000390, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_59' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_10) == 0x0003A8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_58) == 0x0003C0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_58' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_57) == 0x0003D8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_57' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_11) == 0x0003F0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_56) == 0x000408, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_56' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_55) == 0x000420, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_55' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_12) == 0x000438, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_54) == 0x000450, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_54' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_53) == 0x000468, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_53' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_13) == 0x000480, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_13' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_52) == 0x000498, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_52' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_51) == 0x0004B0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_51' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_14) == 0x0004C8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_14' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_50) == 0x0004E0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_50' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_49) == 0x0004F8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_49' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_15) == 0x000510, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_15' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_48) == 0x000528, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_48' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_47) == 0x000540, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_47' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_16) == 0x000558, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_16' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_46) == 0x000570, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_46' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_45) == 0x000588, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_45' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_17) == 0x0005A0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_17' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_44) == 0x0005B8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_44' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_43) == 0x0005D0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_43' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_42) == 0x0005E8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_42' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_41) == 0x000600, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_41' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_40) == 0x000618, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_40' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_39) == 0x000630, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_39' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_38) == 0x000648, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_38' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_18) == 0x000660, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_18' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_37) == 0x000678, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_37' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_36) == 0x000690, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_36' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_19) == 0x0006A8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_19' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_35) == 0x0006C0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_35' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_34) == 0x0006D8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_34' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_20) == 0x0006F0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_20' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_33) == 0x000708, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_33' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_32) == 0x000720, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_32' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_21) == 0x000738, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_21' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_31) == 0x000750, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_31' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_30) == 0x000768, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_30' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_29) == 0x000780, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_29' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_22) == 0x000798, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_22' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_28) == 0x0007B0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_28' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_27) == 0x0007C8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_27' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_23) == 0x0007E0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_23' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_26) == 0x0007F8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_26' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_25) == 0x000810, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_25' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_24) == 0x000828, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_24' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_23) == 0x000840, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_23' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_24) == 0x000858, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_24' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_22) == 0x000870, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_22' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_21) == 0x000888, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_21' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_25) == 0x0008A0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_25' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_20) == 0x0008B8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_20' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_19) == 0x0008D0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_19' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_26) == 0x0008E8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_26' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_18) == 0x000900, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_18' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_17) == 0x000918, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_17' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_27) == 0x000930, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_27' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_16) == 0x000948, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_16' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_15) == 0x000960, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_15' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_14) == 0x000978, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_14' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_28) == 0x000990, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_28' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_13) == 0x0009A8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_13' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_12) == 0x0009C0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_12' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_29) == 0x0009D8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_29' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_11) == 0x0009F0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_11' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_10) == 0x000A08, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_10' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_30) == 0x000A20, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_30' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_9) == 0x000A38, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_9' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_8) == 0x000A50, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_31) == 0x000A68, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_31' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_7) == 0x000A80, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_6) == 0x000A98, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_32) == 0x000AB0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_32' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_5) == 0x000AC8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_4) == 0x000AE0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_33) == 0x000AF8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_33' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_3) == 0x000B10, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_2) == 0x000B28, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_34) == 0x000B40, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_34' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key_1) == 0x000B58, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputActionEvent_Key) == 0x000B70, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_35) == 0x000B88, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_35' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_15) == 0x000BA0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_15' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_14) == 0x000BB8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_14' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_36) == 0x000BD0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_36' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_13) == 0x000BE8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_13' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_12) == 0x000C00, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_12' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_37) == 0x000C18, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_37' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_11) == 0x000C30, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_11' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_10) == 0x000C48, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_10' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_38) == 0x000C60, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_38' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_9) == 0x000C78, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_9' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_8) == 0x000C90, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_8' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_39) == 0x000CA8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_39' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_7) == 0x000CC0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_7' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_6) == 0x000CD8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_6' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_40) == 0x000CF0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_40' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_5) == 0x000D08, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_4) == 0x000D20, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_41) == 0x000D38, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_41' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_3) == 0x000D50, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_2) == 0x000D68, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_42) == 0x000D80, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_42' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_1) == 0x000D98, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key) == 0x000DB0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_43) == 0x000DC8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_43' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_20) == 0x000DE0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_20' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_21) == 0x000DF8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_21' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_22) == 0x000E10, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_22' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_23) == 0x000E28, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_23' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000E40, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_24) == 0x000E48, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_24' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000E60, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1) == 0x000E70, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2) == 0x000E80, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_3) == 0x000E90, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_4) == 0x000EA0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_5) == 0x000EB0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_6) == 0x000EC0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_6' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_7) == 0x000ED0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_7' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_8) == 0x000EE0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_8' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_9) == 0x000EF0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_9' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_K2_GetScalarParameterValue_ReturnValue_1) == 0x000F00, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_K2_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_10) == 0x000F08, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_10' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_11) == 0x000F18, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_11' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_12) == 0x000F28, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_12' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_BreakVector4_X) == 0x000F38, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_BreakVector4_X' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_BreakVector4_Y) == 0x000F3C, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_BreakVector4_Y' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_BreakVector4_Z) == 0x000F40, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_BreakVector4_Z' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_BreakVector4_W) == 0x000F44, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_BreakVector4_W' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_13) == 0x000F48, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_13' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_RemoveBlendable_InBlendableObject_CastInput) == 0x000F58, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_RemoveBlendable_InBlendableObject_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_14) == 0x000F68, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_14' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_15) == 0x000F78, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_15' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_CustomEvent_System) == 0x000F88, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_CustomEvent_System' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_CustomEvent_Loaded) == 0x000FB0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_25) == 0x000FB8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_25' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetAttribInstance_ReturnValue) == 0x000FD0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_26) == 0x000FD8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_26' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_IsValid_ReturnValue) == 0x000FF0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_HasActiveMods_ReturnValue) == 0x000FF1, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_HasActiveMods_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_CustomEvent_Value) == 0x000FF4, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_IsValid_ReturnValue_1) == 0x000FF8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_IsValid_ReturnValue_2) == 0x000FF9, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_BooleanAND_ReturnValue) == 0x000FFA, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_16) == 0x001000, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_16' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_27) == 0x001010, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_27' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_17) == 0x001028, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_17' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_CustomEvent_IsRadiationDamage) == 0x001038, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_CustomEvent_IsRadiationDamage' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_18) == 0x001040, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_18' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_19) == 0x001050, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_19' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_20) == 0x001060, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_20' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x001070, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetDefaultGammaFromCurrentBrightness_Result) == 0x001080, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetDefaultGammaFromCurrentBrightness_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_MakeStruct_Vector4) == 0x001090, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_MakeStruct_Vector4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_MakeStruct_Vector4_1) == 0x0010A0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_MakeStruct_Vector4_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0010B0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Lerp_ReturnValue) == 0x0010B4, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Not_PreBool_ReturnValue) == 0x0010B8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_MakeVector4_ReturnValue) == 0x0010C0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_MakeVector4_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Lerp_ReturnValue_1) == 0x0010D0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Lerp_ReturnValue_2) == 0x0010D4, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_IsPackagedForDistribution_ReturnValue_1) == 0x0010D8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_IsPackagedForDistribution_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_IsPackagedForDistribution_ReturnValue_2) == 0x0010D9, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_IsPackagedForDistribution_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Not_PreBool_ReturnValue_1) == 0x0010DA, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Not_PreBool_ReturnValue_2) == 0x0010DB, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0010DC, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0010E0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0010E4, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x0010E8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0010EC, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0010F0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x0010F4, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0010F8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x0010FC, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x001100, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x001104, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x001108, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x00110C, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_21) == 0x001110, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput_21' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_CreateDelegate_OutputDelegate) == 0x001120, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetPlatformName_ReturnValue) == 0x001130, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_SwitchString_CmpSuccess) == 0x001140, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetController_ReturnValue) == 0x001148, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Not_PreBool_ReturnValue_3) == 0x001150, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_AsCON_Hacker) == 0x001158, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_bSuccess) == 0x001160, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetController_ReturnValue_1) == 0x001168, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetController_ReturnValue_2) == 0x001170, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_AsCON_Hacker_1) == 0x001178, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_AsCON_Hacker_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_bSuccess_1) == 0x001180, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_AsPlayer_Controller) == 0x001188, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_bSuccess_2) == 0x001190, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetController_ReturnValue_3) == 0x001198, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_AsPlayer_Controller_1) == 0x0011A0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_AsPlayer_Controller_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_bSuccess_3) == 0x0011A8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x0011AC, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0011B0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_ComponentBoundEvent_bVisibleState_1) == 0x0011B1, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_ComponentBoundEvent_bVisibleState_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetPlatformName_ReturnValue_1) == 0x0011B8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetPlatformName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_SwitchString_CmpSuccess_1) == 0x0011C8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_SwitchString_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_CanSaveGames_Result) == 0x0011C9, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_CanSaveGames_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputAxisEvent_AxisValue_8) == 0x0011CC, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputAxisEvent_AxisValue_8' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputAxisEvent_AxisValue_7) == 0x0011D0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputAxisEvent_AxisValue_7' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Less_FloatFloat_ReturnValue) == 0x0011D4, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x0011D5, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0011D6, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0011D7, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_28) == 0x0011D8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_28' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputAxisEvent_AxisValue_6) == 0x0011F0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputAxisEvent_AxisValue_6' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_MakeStruct_STRUCT_MoveInputAction) == 0x0011F4, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_MakeStruct_STRUCT_MoveInputAction' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Add_FloatFloat_ReturnValue) == 0x0011FC, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_MoveActionChanged_Result) == 0x001200, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_MoveActionChanged_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputAxisEvent_AxisValue_5) == 0x001204, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputAxisEvent_AxisValue_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Select_Default) == 0x001208, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00120C, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputAxisEvent_AxisValue_4) == 0x001210, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputAxisEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputAxisEvent_AxisValue_3) == 0x001214, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputAxisEvent_AxisValue_2) == 0x001218, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputAxisEvent_AxisValue_1) == 0x00121C, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Not_PreBool_ReturnValue_4) == 0x001220, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Not_PreBool_ReturnValue_5) == 0x001221, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Not_PreBool_ReturnValue_6) == 0x001222, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputAxisEvent_AxisValue) == 0x001224, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_struct_Variable_44) == 0x001228, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_struct_Variable_44' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_AsINTERF_HUD) == 0x001240, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_bSuccess_4) == 0x001250, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_29) == 0x001258, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_29' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetMainMenuWidget_Result) == 0x001270, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_30) == 0x001278, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_30' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x001290, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_bSuccess_5) == 0x0012A0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetMainMenuWidget_Result_1) == 0x0012A8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_BooleanAND_ReturnValue_1) == 0x0012B0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_BooleanAND_ReturnValue_2) == 0x0012B1, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_BooleanAND_ReturnValue_3) == 0x0012B2, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_BooleanAND_ReturnValue_4) == 0x0012B3, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_BooleanAND_ReturnValue_5) == 0x0012B4, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x0012B8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_bSuccess_6) == 0x0012C8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetMainMenuWidget_Result_2) == 0x0012D0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetMainMenuWidget_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_Not_PreBool_ReturnValue_7) == 0x0012D8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_BooleanAND_ReturnValue_6) == 0x0012D9, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_InputKeyEvent_Key_31) == 0x0012E0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_InputKeyEvent_Key_31' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_AsINTERF_HUD_3) == 0x0012F8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_AsINTERF_HUD_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_bSuccess_7) == 0x001308, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_MakeStruct_STRUCT_MoveInputAction_1) == 0x00130C, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_MakeStruct_STRUCT_MoveInputAction_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetMainMenuWidget_Result_3) == 0x001318, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetMainMenuWidget_Result_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_MoveActionChanged_Result_1) == 0x001320, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_MoveActionChanged_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_MakeStruct_STRUCT_MoveInputAction_2) == 0x001324, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_MakeStruct_STRUCT_MoveInputAction_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_MoveActionChanged_Result_2) == 0x00132C, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_MoveActionChanged_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Event_DeltaSeconds) == 0x001330, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Event_Hit_1) == 0x001334, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Event_Hit_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Event_NewController) == 0x0013C0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_ComponentBoundEvent_bVisibleState) == 0x0013C8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Event_OldController) == 0x0013D0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetGameInstance_ReturnValue) == 0x0013D8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_AsGI_Single_Player) == 0x0013E0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_bSuccess_8) == 0x0013E8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetGameInstance_ReturnValue_1) == 0x0013F0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, Temp_object_Variable) == 0x0013F8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x001400, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_bSuccess_9) == 0x001408, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_AsNiagara_System) == 0x001410, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_DynamicCast_bSuccess_10) == 0x001418, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_SpawnSystemAttached_ReturnValue) == 0x001420, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Event_MyComp) == 0x001428, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Event_Other) == 0x001430, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Event_OtherComp) == 0x001438, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Event_bSelfMoved) == 0x001440, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Event_HitLocation) == 0x001444, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Event_HitNormal) == 0x001450, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Event_NormalImpulse) == 0x00145C, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, K2Node_Event_Hit) == 0x001468, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_GetActorOfClassInSubLevelByName_ReturnValue) == 0x0014F0, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_GetActorOfClassInSubLevelByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_IsValid_ReturnValue_3) == 0x0014F8, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_StopTrackingLocation_ReturnValue) == 0x0014F9, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_StopTrackingLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_SetMusicState_MusicCue) == 0x001500, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_SetMusicState_MusicCue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple, CallFunc_StartTrackingLocation_ReturnValue) == 0x001508, "Member 'PAWN_Hacker_Simple_C_ExecuteUbergraph_PAWN_Hacker_Simple::CallFunc_StartTrackingLocation_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ReceiveHit
// 0x00C8 (0x00C8 - 0x0000)
struct PAWN_Hacker_Simple_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ReceiveHit) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_ReceiveHit");
static_assert(sizeof(PAWN_Hacker_Simple_C_ReceiveHit) == 0x0000C8, "Wrong size on PAWN_Hacker_Simple_C_ReceiveHit");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveHit, MyComp) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveHit, Other) == 0x000008, "Member 'PAWN_Hacker_Simple_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveHit, OtherComp) == 0x000010, "Member 'PAWN_Hacker_Simple_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'PAWN_Hacker_Simple_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveHit, HitNormal) == 0x000028, "Member 'PAWN_Hacker_Simple_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'PAWN_Hacker_Simple_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveHit, Hit) == 0x000040, "Member 'PAWN_Hacker_Simple_C_ReceiveHit::Hit' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Hacker_Simple_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_ReceiveUnpossessed");
static_assert(sizeof(PAWN_Hacker_Simple_C_ReceiveUnpossessed) == 0x000008, "Wrong size on PAWN_Hacker_Simple_C_ReceiveUnpossessed");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.BndEvt__COMP_VoxelCuller_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCuller_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCuller_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCuller_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCuller_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCuller_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCuller_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCuller_K2Node_ComponentBoundEvent_3_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Hacker_Simple_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ReceivePossessed) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_ReceivePossessed");
static_assert(sizeof(PAWN_Hacker_Simple_C_ReceivePossessed) == 0x000008, "Wrong size on PAWN_Hacker_Simple_C_ReceivePossessed");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceivePossessed, NewController) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ReceivePossessed::NewController' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnLanded
// 0x0088 (0x0088 - 0x0000)
struct PAWN_Hacker_Simple_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnLanded) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_OnLanded");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnLanded) == 0x000088, "Wrong size on PAWN_Hacker_Simple_C_OnLanded");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnLanded, Hit) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnLanded::Hit' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ReceiveTick) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_ReceiveTick");
static_assert(sizeof(PAWN_Hacker_Simple_C_ReceiveTick) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_ReceiveTick");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpAxisEvt_Locked_ZoomAxis_K2Node_InputAxisEvent_19
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_InpAxisEvt_Locked_ZoomAxis_K2Node_InputAxisEvent_19 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpAxisEvt_Locked_ZoomAxis_K2Node_InputAxisEvent_19) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_InpAxisEvt_Locked_ZoomAxis_K2Node_InputAxisEvent_19");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpAxisEvt_Locked_ZoomAxis_K2Node_InputAxisEvent_19) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_InpAxisEvt_Locked_ZoomAxis_K2Node_InputAxisEvent_19");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpAxisEvt_Locked_ZoomAxis_K2Node_InputAxisEvent_19, AxisValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpAxisEvt_Locked_ZoomAxis_K2Node_InputAxisEvent_19::AxisValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpAxisEvt_Gamepad_LookYaw_K2Node_InputAxisEvent_18
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookYaw_K2Node_InputAxisEvent_18 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookYaw_K2Node_InputAxisEvent_18) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookYaw_K2Node_InputAxisEvent_18");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookYaw_K2Node_InputAxisEvent_18) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookYaw_K2Node_InputAxisEvent_18");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookYaw_K2Node_InputAxisEvent_18, AxisValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookYaw_K2Node_InputAxisEvent_18::AxisValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpAxisEvt_Gamepad_LookPitch_K2Node_InputAxisEvent_15
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookPitch_K2Node_InputAxisEvent_15 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookPitch_K2Node_InputAxisEvent_15) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookPitch_K2Node_InputAxisEvent_15");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookPitch_K2Node_InputAxisEvent_15) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookPitch_K2Node_InputAxisEvent_15");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookPitch_K2Node_InputAxisEvent_15, AxisValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_LookPitch_K2Node_InputAxisEvent_15::AxisValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpAxisEvt_Locked_LookYaw_K2Node_InputAxisEvent_13
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookYaw_K2Node_InputAxisEvent_13 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookYaw_K2Node_InputAxisEvent_13) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookYaw_K2Node_InputAxisEvent_13");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookYaw_K2Node_InputAxisEvent_13) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookYaw_K2Node_InputAxisEvent_13");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookYaw_K2Node_InputAxisEvent_13, AxisValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookYaw_K2Node_InputAxisEvent_13::AxisValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpAxisEvt_Locked_LookPitch_K2Node_InputAxisEvent_12
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookPitch_K2Node_InputAxisEvent_12 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookPitch_K2Node_InputAxisEvent_12) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookPitch_K2Node_InputAxisEvent_12");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookPitch_K2Node_InputAxisEvent_12) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookPitch_K2Node_InputAxisEvent_12");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookPitch_K2Node_InputAxisEvent_12, AxisValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpAxisEvt_Locked_LookPitch_K2Node_InputAxisEvent_12::AxisValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpAxisEvt_Gamepad_Real_MoveAxis_Y_K2Node_InputAxisEvent_4
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_Y_K2Node_InputAxisEvent_4 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_Y_K2Node_InputAxisEvent_4) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_Y_K2Node_InputAxisEvent_4");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_Y_K2Node_InputAxisEvent_4) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_Y_K2Node_InputAxisEvent_4");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_Y_K2Node_InputAxisEvent_4, AxisValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_Y_K2Node_InputAxisEvent_4::AxisValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpAxisEvt_Gamepad_Real_MoveAxis_X_K2Node_InputAxisEvent_3
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_X_K2Node_InputAxisEvent_3 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_X_K2Node_InputAxisEvent_3) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_X_K2Node_InputAxisEvent_3");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_X_K2Node_InputAxisEvent_3) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_X_K2Node_InputAxisEvent_3");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_X_K2Node_InputAxisEvent_3, AxisValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpAxisEvt_Gamepad_Real_MoveAxis_X_K2Node_InputAxisEvent_3::AxisValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17, AxisValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_Y_K2Node_InputAxisEvent_17::AxisValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16, AxisValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpAxisEvt_MenuNavAxis_X_K2Node_InputAxisEvent_16::AxisValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.BndEvt__COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'PAWN_Hacker_Simple_C_BndEvt__COMP_VoxelCullableNavAgent_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.BioPoisoningStart
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Hacker_Simple_C_BioPoisoningStart final
{
public:
	bool                                          IsRadiationDamage;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_BioPoisoningStart) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_BioPoisoningStart");
static_assert(sizeof(PAWN_Hacker_Simple_C_BioPoisoningStart) == 0x000001, "Wrong size on PAWN_Hacker_Simple_C_BioPoisoningStart");
static_assert(offsetof(PAWN_Hacker_Simple_C_BioPoisoningStart, IsRadiationDamage) == 0x000000, "Member 'PAWN_Hacker_Simple_C_BioPoisoningStart::IsRadiationDamage' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.SetWarpEffect_Beserk
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_SetWarpEffect_Beserk final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_SetWarpEffect_Beserk) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_SetWarpEffect_Beserk");
static_assert(sizeof(PAWN_Hacker_Simple_C_SetWarpEffect_Beserk) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_SetWarpEffect_Beserk");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetWarpEffect_Beserk, Value) == 0x000000, "Member 'PAWN_Hacker_Simple_C_SetWarpEffect_Beserk::Value' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.AsyncPlayPsychosisSystem
// 0x0028 (0x0028 - 0x0000)
struct PAWN_Hacker_Simple_C_AsyncPlayPsychosisSystem final
{
public:
	TSoftObjectPtr<class UNiagaraSystem>          System;                                            // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_AsyncPlayPsychosisSystem) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_AsyncPlayPsychosisSystem");
static_assert(sizeof(PAWN_Hacker_Simple_C_AsyncPlayPsychosisSystem) == 0x000028, "Wrong size on PAWN_Hacker_Simple_C_AsyncPlayPsychosisSystem");
static_assert(offsetof(PAWN_Hacker_Simple_C_AsyncPlayPsychosisSystem, System) == 0x000000, "Member 'PAWN_Hacker_Simple_C_AsyncPlayPsychosisSystem::System' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_0");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_0");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_1");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_1");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_2");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_2");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_3");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_3");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightThumbstick_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_4");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_4");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Special_Left_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_6
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_6) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_6");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_6) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_6");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_6, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_6::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_7
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_7) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_7");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_7) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_7");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_7, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_7::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_8
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_8) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_8");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_8) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_8");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_8, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_8::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_9
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_9) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_9");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_9) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_9");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_9, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_RightShoulder_K2Node_InputKeyEvent_9::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_10
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_10) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_10");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_10) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_10");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_10, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_10::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_11
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_11) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_11");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_11) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_11");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_11, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_LeftShoulder_K2Node_InputKeyEvent_11::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_LeftControl_K2Node_InputKeyEvent_12
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_12) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_12");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_12) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_12");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_12, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_12::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_LeftControl_K2Node_InputKeyEvent_13
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_13) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_13");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_13) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_13");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_13, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_LeftControl_K2Node_InputKeyEvent_13::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Tab_K2Node_InputKeyEvent_14
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_14) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_14");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_14) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_14");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_14, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_14::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Tab_K2Node_InputKeyEvent_15
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_15) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_15");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_15) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_15");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_15, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Tab_K2Node_InputKeyEvent_15::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Down_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Up_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Right_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Left_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_8");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_8");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_9
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_9) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_9");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_9) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_9");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_9, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt4_K2Node_InputActionEvent_9::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_10
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_10) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_10");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_10) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_10");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_10, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_10::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_11
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_11) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_11");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_11) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_11");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_11, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt4_K2Node_InputActionEvent_11::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_12
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_12) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_12");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_12) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_12");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_12, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_12::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_13
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_13) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_13");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_13) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_13");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_13, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt3_K2Node_InputActionEvent_13::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_14
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_14) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_14");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_14) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_14");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_14, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_14::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_15
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_15) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_15");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_15) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_15");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_15, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt3_K2Node_InputActionEvent_15::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_ToggleEquip_K2Node_InputActionEvent_16
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_ToggleEquip_K2Node_InputActionEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_ToggleEquip_K2Node_InputActionEvent_16) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_ToggleEquip_K2Node_InputActionEvent_16");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_ToggleEquip_K2Node_InputActionEvent_16) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_ToggleEquip_K2Node_InputActionEvent_16");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_ToggleEquip_K2Node_InputActionEvent_16, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_ToggleEquip_K2Node_InputActionEvent_16::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_17
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_17 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_17) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_17");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_17) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_17");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_17, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_17::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_18
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_18 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_18) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_18");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_18) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_18");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_18, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt1_K2Node_InputActionEvent_18::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_19
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_19 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_19) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_19");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_19) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_19");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_19, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_19::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_20
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_20 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_20) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_20");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_20) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_20");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_20, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Alt2_K2Node_InputActionEvent_20::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_21
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_21 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_21) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_21");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_21) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_21");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_21, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_21::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_22
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_22 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_22) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_22");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_22) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_22");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_22, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Back_K2Node_InputActionEvent_22::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_23
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_23 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_23) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_23");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_23) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_23");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_23, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_23::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_24
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_24 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_24) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_24");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_24) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_24");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_24, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Accept_K2Node_InputActionEvent_24::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_QuickSave_K2Node_InputActionEvent_25
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_QuickSave_K2Node_InputActionEvent_25 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_QuickSave_K2Node_InputActionEvent_25) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_QuickSave_K2Node_InputActionEvent_25");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_QuickSave_K2Node_InputActionEvent_25) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_QuickSave_K2Node_InputActionEvent_25");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_QuickSave_K2Node_InputActionEvent_25, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_QuickSave_K2Node_InputActionEvent_25::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_QuickLoad_K2Node_InputActionEvent_26
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_QuickLoad_K2Node_InputActionEvent_26 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_QuickLoad_K2Node_InputActionEvent_26) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_QuickLoad_K2Node_InputActionEvent_26");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_QuickLoad_K2Node_InputActionEvent_26) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_QuickLoad_K2Node_InputActionEvent_26");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_QuickLoad_K2Node_InputActionEvent_26, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_QuickLoad_K2Node_InputActionEvent_26::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_LeanRight_K2Node_InputActionEvent_27
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_27 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_27) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_27");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_27) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_27");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_27, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_27::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_LeanRight_K2Node_InputActionEvent_28
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_28 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_28) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_28");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_28) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_28");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_28, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_LeanRight_K2Node_InputActionEvent_28::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_29
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_29 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_29) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_29");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_29) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_29");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_29, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_29::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_30
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_30 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_30) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_30");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_30) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_30");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_30, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_LeanLeft_K2Node_InputActionEvent_30::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_Lean_K2Node_InputActionEvent_31
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Lean_K2Node_InputActionEvent_31 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Lean_K2Node_InputActionEvent_31) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Lean_K2Node_InputActionEvent_31");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Lean_K2Node_InputActionEvent_31) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Lean_K2Node_InputActionEvent_31");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Lean_K2Node_InputActionEvent_31, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Lean_K2Node_InputActionEvent_31::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_32
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_32 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_32) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_32");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_32) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_32");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_32, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_32::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_33
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_33 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_33) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_33");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_33) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_33");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_33, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt2_K2Node_InputActionEvent_33::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_34
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_34 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_34) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_34");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_34) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_34");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_34, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_34::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_35
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_35 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_35) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_35");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_35) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_35");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_35, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_Alt1_K2Node_InputActionEvent_35::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_36
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_36 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_36) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_36");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_36) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_36");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_36, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_36::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_37
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_37 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_37) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_37");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_37) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_37");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_37, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabLeft_K2Node_InputActionEvent_37::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_38
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_38 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_38) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_38");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_38) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_38");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_38, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_38::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_39
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_39 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_39) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_39");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_39) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_39");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_39, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_MenuNav_TabRight_K2Node_InputActionEvent_39::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_HotbarCycleNext_K2Node_InputActionEvent_40
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCycleNext_K2Node_InputActionEvent_40 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCycleNext_K2Node_InputActionEvent_40) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCycleNext_K2Node_InputActionEvent_40");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCycleNext_K2Node_InputActionEvent_40) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCycleNext_K2Node_InputActionEvent_40");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCycleNext_K2Node_InputActionEvent_40, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCycleNext_K2Node_InputActionEvent_40::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_HotbarCyclePrevious_K2Node_InputActionEvent_41
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCyclePrevious_K2Node_InputActionEvent_41 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCyclePrevious_K2Node_InputActionEvent_41) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCyclePrevious_K2Node_InputActionEvent_41");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCyclePrevious_K2Node_InputActionEvent_41) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCyclePrevious_K2Node_InputActionEvent_41");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCyclePrevious_K2Node_InputActionEvent_41, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_HotbarCyclePrevious_K2Node_InputActionEvent_41::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_ModeNext_K2Node_InputActionEvent_42
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_ModeNext_K2Node_InputActionEvent_42 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_ModeNext_K2Node_InputActionEvent_42) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_ModeNext_K2Node_InputActionEvent_42");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_ModeNext_K2Node_InputActionEvent_42) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_ModeNext_K2Node_InputActionEvent_42");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_ModeNext_K2Node_InputActionEvent_42, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_ModeNext_K2Node_InputActionEvent_42::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_ModeNext_K2Node_InputActionEvent_43
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_ModeNext_K2Node_InputActionEvent_43 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_ModeNext_K2Node_InputActionEvent_43) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_ModeNext_K2Node_InputActionEvent_43");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_ModeNext_K2Node_InputActionEvent_43) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_ModeNext_K2Node_InputActionEvent_43");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_ModeNext_K2Node_InputActionEvent_43, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_ModeNext_K2Node_InputActionEvent_43::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_Reload_K2Node_InputActionEvent_44
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_Reload_K2Node_InputActionEvent_44 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_Reload_K2Node_InputActionEvent_44) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_Reload_K2Node_InputActionEvent_44");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_Reload_K2Node_InputActionEvent_44) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_Reload_K2Node_InputActionEvent_44");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_Reload_K2Node_InputActionEvent_44, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_Reload_K2Node_InputActionEvent_44::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_45
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_45 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_45) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_45");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_45) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_45");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_45, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_45::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_46
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_46 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_46) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_46");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_46) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_46");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_46, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_PrimaryAttack_K2Node_InputActionEvent_46::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_47
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_47 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_47) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_47");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_47) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_47");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_47, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_47::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_48
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_48 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_48) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_48");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_48) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_48");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_48, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_PrimaryAttack_K2Node_InputActionEvent_48::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_Interact_K2Node_InputActionEvent_49
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_49 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_49) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_49");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_49) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_49");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_49, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_49::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_Interact_K2Node_InputActionEvent_50
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_50 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_50) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_50");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_50) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_50");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_50, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_Interact_K2Node_InputActionEvent_50::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_51
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_51 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_51) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_51");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_51) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_51");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_51, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_51::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_52
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_52 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_52) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_52");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_52) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_52");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_52, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Interact_K2Node_InputActionEvent_52::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_53
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_53 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_53) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_53");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_53) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_53");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_53, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_53::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_54
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_54 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_54) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_54");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_54) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_54");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_54, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_MoveBackward_K2Node_InputActionEvent_54::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_MoveForward_K2Node_InputActionEvent_55
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_55 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_55) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_55");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_55) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_55");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_55, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_55::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_MoveForward_K2Node_InputActionEvent_56
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_56 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_56) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_56");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_56) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_56");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_56, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_MoveForward_K2Node_InputActionEvent_56::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_MoveRight_K2Node_InputActionEvent_57
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_57 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_57) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_57");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_57) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_57");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_57, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_57::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_MoveRight_K2Node_InputActionEvent_58
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_58 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_58) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_58");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_58) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_58");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_58, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_MoveRight_K2Node_InputActionEvent_58::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_59
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_59 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_59) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_59");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_59) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_59");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_59, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_59::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_60
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_60 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_60) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_60");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_60) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_60");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_60, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_MoveLeft_K2Node_InputActionEvent_60::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_61
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_61 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_61) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_61");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_61) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_61");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_61, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_61::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_62
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_62 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_62) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_62");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_62) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_62");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_62, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Jump_K2Node_InputActionEvent_62::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_Jump_K2Node_InputActionEvent_63
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_63 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_63) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_63");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_63) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_63");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_63, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_63::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_Jump_K2Node_InputActionEvent_64
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_64 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_64) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_64");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_64) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_64");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_64, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_Jump_K2Node_InputActionEvent_64::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_Sprint_K2Node_InputActionEvent_65
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_65 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_65) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_65");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_65) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_65");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_65, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_65::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_Sprint_K2Node_InputActionEvent_66
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_66 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_66) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_66");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_66) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_66");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_66, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_Sprint_K2Node_InputActionEvent_66::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_67
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_67 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_67) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_67");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_67) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_67");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_67, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_67::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_68
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_68 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_68) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_68");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_68) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_68");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_68, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Sprint_K2Node_InputActionEvent_68::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_69
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_69 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_69) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_69");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_69) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_69");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_69, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_69::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_70
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_70 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_70) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_70");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_70) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_70");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_70, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Crouch_K2Node_InputActionEvent_70::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_Crouch_K2Node_InputActionEvent_71
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_71 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_71) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_71");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_71) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_71");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_71, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_71::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_Crouch_K2Node_InputActionEvent_72
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_72 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_72) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_72");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_72) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_72");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_72, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_Crouch_K2Node_InputActionEvent_72::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_Aim_K2Node_InputActionEvent_73
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_73 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_73) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_73");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_73) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_73");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_73, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_73::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Real_Aim_K2Node_InputActionEvent_74
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_74 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_74) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_74");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_74) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_74");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_74, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Real_Aim_K2Node_InputActionEvent_74::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_75
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_75 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_75) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_75");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_75) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_75");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_75, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_75::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_76
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_76 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_76) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_76");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_76) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_76");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_76, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Real_Aim_K2Node_InputActionEvent_76::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Locked_Escape_K2Node_InputActionEvent_77
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_77 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_77) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_77");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_77) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_77");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_77, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Locked_Escape_K2Node_InputActionEvent_77::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_78
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_78 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_78) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_78");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_78) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_78");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_78, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Gamepad_Escape_K2Node_InputActionEvent_78::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Back_K2Node_InputActionEvent_79
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_79 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_79) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_79");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_79) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_79");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_79, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_79::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Back_K2Node_InputActionEvent_80
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_80 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_80) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_80");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_80) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_80");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_80, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Back_K2Node_InputActionEvent_80::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_81
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_81 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_81) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_81");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_81) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_81");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_81, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_81::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_82
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_82 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_82) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_82");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_82) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_82");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_82, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_MenuNav_Accept_K2Node_InputActionEvent_82::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Decimal_K2Node_InputKeyEvent_16
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Decimal_K2Node_InputKeyEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Decimal_K2Node_InputKeyEvent_16) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Decimal_K2Node_InputKeyEvent_16");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Decimal_K2Node_InputKeyEvent_16) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Decimal_K2Node_InputKeyEvent_16");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Decimal_K2Node_InputKeyEvent_16, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Decimal_K2Node_InputKeyEvent_16::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Subtract_K2Node_InputKeyEvent_17
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Subtract_K2Node_InputKeyEvent_17 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Subtract_K2Node_InputKeyEvent_17) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Subtract_K2Node_InputKeyEvent_17");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Subtract_K2Node_InputKeyEvent_17) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Subtract_K2Node_InputKeyEvent_17");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Subtract_K2Node_InputKeyEvent_17, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Subtract_K2Node_InputKeyEvent_17::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_NumPadNine_K2Node_InputKeyEvent_18
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_18 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_18) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_18");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_18) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_18");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_18, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_NumPadNine_K2Node_InputKeyEvent_18::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_NumPadEight_K2Node_InputKeyEvent_19
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_19 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_19) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_19");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_19) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_19");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_19, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_NumPadEight_K2Node_InputKeyEvent_19::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_NumPadSeven_K2Node_InputKeyEvent_20
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_20 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_20) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_20");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_20) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_20");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_20, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_NumPadSeven_K2Node_InputKeyEvent_20::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_NumPadSix_K2Node_InputKeyEvent_21
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_NumPadSix_K2Node_InputKeyEvent_21 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_NumPadSix_K2Node_InputKeyEvent_21) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_NumPadSix_K2Node_InputKeyEvent_21");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_NumPadSix_K2Node_InputKeyEvent_21) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_NumPadSix_K2Node_InputKeyEvent_21");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_NumPadSix_K2Node_InputKeyEvent_21, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_NumPadSix_K2Node_InputKeyEvent_21::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_NumPadFive_K2Node_InputKeyEvent_22
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_22 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_22) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_22");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_22) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_22");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_22, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_22::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_NumPadFour_K2Node_InputKeyEvent_23
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_NumPadFour_K2Node_InputKeyEvent_23 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_NumPadFour_K2Node_InputKeyEvent_23) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_NumPadFour_K2Node_InputKeyEvent_23");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_NumPadFour_K2Node_InputKeyEvent_23) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_NumPadFour_K2Node_InputKeyEvent_23");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_NumPadFour_K2Node_InputKeyEvent_23, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_NumPadFour_K2Node_InputKeyEvent_23::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_NumPadThree_K2Node_InputKeyEvent_24
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_NumPadThree_K2Node_InputKeyEvent_24 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_NumPadThree_K2Node_InputKeyEvent_24) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_NumPadThree_K2Node_InputKeyEvent_24");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_NumPadThree_K2Node_InputKeyEvent_24) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_NumPadThree_K2Node_InputKeyEvent_24");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_NumPadThree_K2Node_InputKeyEvent_24, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_NumPadThree_K2Node_InputKeyEvent_24::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_NumPadTwo_K2Node_InputKeyEvent_25
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_25 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_25) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_25");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_25) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_25");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_25, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_NumPadTwo_K2Node_InputKeyEvent_25::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_NumPadOne_K2Node_InputKeyEvent_26
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_26 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_26) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_26");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_26) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_26");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_26, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_NumPadOne_K2Node_InputKeyEvent_26::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_NumPadZero_K2Node_InputKeyEvent_27
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_27 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_27) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_27");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_27) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_27");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_27, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_NumPadZero_K2Node_InputKeyEvent_27::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_28
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_28 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_28) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_28");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_28) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_28");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_28, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_28::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_X_K2Node_InputKeyEvent_29
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_29 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_29) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_29");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_29) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_29");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_29, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_29::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_X_K2Node_InputKeyEvent_30
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_30 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_30) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_30");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_30) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_30");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_30, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_X_K2Node_InputKeyEvent_30::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InpActEvt_Z_K2Node_InputKeyEvent_31
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InpActEvt_Z_K2Node_InputKeyEvent_31 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InpActEvt_Z_K2Node_InputKeyEvent_31) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InpActEvt_Z_K2Node_InputKeyEvent_31");
static_assert(sizeof(PAWN_Hacker_Simple_C_InpActEvt_Z_K2Node_InputKeyEvent_31) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InpActEvt_Z_K2Node_InputKeyEvent_31");
static_assert(offsetof(PAWN_Hacker_Simple_C_InpActEvt_Z_K2Node_InputKeyEvent_31, Key) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InpActEvt_Z_K2Node_InputKeyEvent_31::Key' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnLoaded_9A78B542483B7F7CB2D9279EC6F3C245
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Hacker_Simple_C_OnLoaded_9A78B542483B7F7CB2D9279EC6F3C245 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnLoaded_9A78B542483B7F7CB2D9279EC6F3C245) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_OnLoaded_9A78B542483B7F7CB2D9279EC6F3C245");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnLoaded_9A78B542483B7F7CB2D9279EC6F3C245) == 0x000008, "Wrong size on PAWN_Hacker_Simple_C_OnLoaded_9A78B542483B7F7CB2D9279EC6F3C245");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnLoaded_9A78B542483B7F7CB2D9279EC6F3C245, Loaded) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnLoaded_9A78B542483B7F7CB2D9279EC6F3C245::Loaded' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.UserConstructionScript
// 0x0068 (0x0068 - 0x0000)
struct PAWN_Hacker_Simple_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_6; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_7; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_8; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_9; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_10; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_11; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_12; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_UserConstructionScript) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_UserConstructionScript");
static_assert(sizeof(PAWN_Hacker_Simple_C_UserConstructionScript) == 0x000068, "Wrong size on PAWN_Hacker_Simple_C_UserConstructionScript");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000008, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x000010, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x000018, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x000020, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x000028, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_6) == 0x000030, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_7) == 0x000038, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_8) == 0x000040, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_9) == 0x000048, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_10) == 0x000050, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_11) == 0x000058, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_12) == 0x000060, "Member 'PAWN_Hacker_Simple_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_12' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InitializeChannelingInteract
// 0x00D0 (0x00D0 - 0x0000)
struct PAWN_Hacker_Simple_C_InitializeChannelingInteract final
{
public:
	class AINTERACT_Channeling_Base_C*            ChannelingInteract;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelStreaming*                        PrimaryStreamingLevel;                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	class ULevelStreaming*                        CallFunc_GetPrimaryStreamingLevel_Level;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_GetActorComponentByName_ReturnValue;      // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_DynamicCast_AsPrimitive_Component;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevel*                                 CallFunc_GetActorLevel_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetActorByNameInSubLevel_ReturnValue;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevel*                                 CallFunc_GetLoadedLevel_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetActorByNameInSubLevel_ReturnValue_1;   // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResumeChannelingInteraction_Result;    // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasInitializedChannelingInteract_Result;  // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_Channeling_Base_C*            K2Node_DynamicCast_AsINTERACT_Channeling_Base;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InitializeChannelingInteract) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InitializeChannelingInteract");
static_assert(sizeof(PAWN_Hacker_Simple_C_InitializeChannelingInteract) == 0x0000D0, "Wrong size on PAWN_Hacker_Simple_C_InitializeChannelingInteract");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, ChannelingInteract) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::ChannelingInteract' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, PrimaryStreamingLevel) == 0x000008, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::PrimaryStreamingLevel' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, GameInstance) == 0x000010, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::GameInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, K2Node_CreateDelegate_OutputDelegate_2) == 0x000038, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_GetPrimaryStreamingLevel_Level) == 0x000048, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_GetPrimaryStreamingLevel_Level' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_GetActorComponentByName_ReturnValue) == 0x000050, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_GetActorComponentByName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, K2Node_DynamicCast_AsPrimitive_Component) == 0x000060, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::K2Node_DynamicCast_AsPrimitive_Component' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_IsValid_ReturnValue_1) == 0x000069, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_GetActorLevel_ReturnValue) == 0x000070, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_GetActorLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_GetActorByNameInSubLevel_ReturnValue) == 0x000078, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_GetActorByNameInSubLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_GetLoadedLevel_ReturnValue) == 0x000080, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_GetLoadedLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_IsValid_ReturnValue_2) == 0x000088, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_GetActorByNameInSubLevel_ReturnValue_1) == 0x000090, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_GetActorByNameInSubLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_GetGameInstance_ReturnValue) == 0x000098, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_NotEqual_NameName_ReturnValue) == 0x0000A9, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_CanResumeChannelingInteraction_Result) == 0x0000AA, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_CanResumeChannelingInteraction_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, CallFunc_HasInitializedChannelingInteract_Result) == 0x0000AB, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::CallFunc_HasInitializedChannelingInteract_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000AC, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, K2Node_DynamicCast_AsINTERACT_Channeling_Base) == 0x0000C0, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::K2Node_DynamicCast_AsINTERACT_Channeling_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeChannelingInteract, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'PAWN_Hacker_Simple_C_InitializeChannelingInteract::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryInteract
// 0x00E8 (0x00E8 - 0x0000)
struct PAWN_Hacker_Simple_C_TryInteract final
{
public:
	bool                                          ValidInteract;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IgnoreInteractRange;                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        TargetShape;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ShouldIgnoreInteractRange_Result;         // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable_1;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPrimitiveInInteractRange_Result;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHiddenInteractablePrimitive_Result;     // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0040(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsPrimitiveInInteractRange_Result_1;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0068(0x0020)(HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable_2;        // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        CallFunc_GetTargetShape_ShapeComponent;            // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable_3;        // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x00C0(0x0020)(HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryInteract) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_TryInteract");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryInteract) == 0x0000E8, "Wrong size on PAWN_Hacker_Simple_C_TryInteract");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, ValidInteract) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryInteract::ValidInteract' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, IgnoreInteractRange) == 0x000001, "Member 'PAWN_Hacker_Simple_C_TryInteract::IgnoreInteractRange' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, TargetShape) == 0x000008, "Member 'PAWN_Hacker_Simple_C_TryInteract::TargetShape' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, K2Node_DynamicCast_AsINTERF_Interactable) == 0x000010, "Member 'PAWN_Hacker_Simple_C_TryInteract::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PAWN_Hacker_Simple_C_TryInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, CallFunc_ShouldIgnoreInteractRange_Result) == 0x000021, "Member 'PAWN_Hacker_Simple_C_TryInteract::CallFunc_ShouldIgnoreInteractRange_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, K2Node_DynamicCast_AsINTERF_Interactable_1) == 0x000028, "Member 'PAWN_Hacker_Simple_C_TryInteract::K2Node_DynamicCast_AsINTERF_Interactable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'PAWN_Hacker_Simple_C_TryInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, CallFunc_IsPrimitiveInInteractRange_Result) == 0x000039, "Member 'PAWN_Hacker_Simple_C_TryInteract::CallFunc_IsPrimitiveInInteractRange_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, CallFunc_IsHiddenInteractablePrimitive_Result) == 0x00003A, "Member 'PAWN_Hacker_Simple_C_TryInteract::CallFunc_IsHiddenInteractablePrimitive_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, CallFunc_IsValid_ReturnValue) == 0x00003B, "Member 'PAWN_Hacker_Simple_C_TryInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000040, "Member 'PAWN_Hacker_Simple_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, CallFunc_IsPrimitiveInInteractRange_Result_1) == 0x000060, "Member 'PAWN_Hacker_Simple_C_TryInteract::CallFunc_IsPrimitiveInInteractRange_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000068, "Member 'PAWN_Hacker_Simple_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, K2Node_DynamicCast_AsINTERF_Interactable_2) == 0x000088, "Member 'PAWN_Hacker_Simple_C_TryInteract::K2Node_DynamicCast_AsINTERF_Interactable_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, K2Node_DynamicCast_bSuccess_2) == 0x000098, "Member 'PAWN_Hacker_Simple_C_TryInteract::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, CallFunc_GetTargetShape_ShapeComponent) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_TryInteract::CallFunc_GetTargetShape_ShapeComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, K2Node_DynamicCast_AsINTERF_Interactable_3) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_TryInteract::K2Node_DynamicCast_AsINTERF_Interactable_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'PAWN_Hacker_Simple_C_TryInteract::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, CallFunc_TryInteract_InteractResults) == 0x0000C0, "Member 'PAWN_Hacker_Simple_C_TryInteract::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryInteract, K2Node_SwitchEnum_CmpSuccess) == 0x0000E0, "Member 'PAWN_Hacker_Simple_C_TryInteract::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.IsPrimitiveInInteractRange
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange final
{
public:
	class UPrimitiveComponent*                    Primitive;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetClosestPointOnCollision_OutPointOnBody; // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClosestPointOnCollision_ReturnValue;   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange");
static_assert(sizeof(PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange) == 0x000030, "Wrong size on PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange, Primitive) == 0x000000, "Member 'PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange::Primitive' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange, Result) == 0x000008, "Member 'PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00000A, "Member 'PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange, CallFunc_GetClosestPointOnCollision_OutPointOnBody) == 0x000018, "Member 'PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange::CallFunc_GetClosestPointOnCollision_OutPointOnBody' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange, CallFunc_GetClosestPointOnCollision_ReturnValue) == 0x000024, "Member 'PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange::CallFunc_GetClosestPointOnCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000028, "Member 'PAWN_Hacker_Simple_C_IsPrimitiveInInteractRange::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.IsSafeToInteract
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Hacker_Simple_C_IsSafeToInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsThreatenedByAnyExplosive_Result;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsAgentOverlappingSpecificHazards_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsIndirectlyThreatenedByAnyEnemy_Result;  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_IsSafeToInteract) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_IsSafeToInteract");
static_assert(sizeof(PAWN_Hacker_Simple_C_IsSafeToInteract) == 0x000020, "Wrong size on PAWN_Hacker_Simple_C_IsSafeToInteract");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsSafeToInteract, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_IsSafeToInteract::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsSafeToInteract, CallFunc_MakeLiteralByte_ReturnValue) == 0x000001, "Member 'PAWN_Hacker_Simple_C_IsSafeToInteract::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsSafeToInteract, CallFunc_IsThreatenedByAnyExplosive_Result) == 0x000002, "Member 'PAWN_Hacker_Simple_C_IsSafeToInteract::CallFunc_IsThreatenedByAnyExplosive_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsSafeToInteract, K2Node_MakeArray_Array) == 0x000008, "Member 'PAWN_Hacker_Simple_C_IsSafeToInteract::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsSafeToInteract, CallFunc_IsAgentOverlappingSpecificHazards_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_IsSafeToInteract::CallFunc_IsAgentOverlappingSpecificHazards_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsSafeToInteract, CallFunc_IsIndirectlyThreatenedByAnyEnemy_Result) == 0x000019, "Member 'PAWN_Hacker_Simple_C_IsSafeToInteract::CallFunc_IsIndirectlyThreatenedByAnyEnemy_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.DoesMovementAllowInteraction
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_DoesMovementAllowInteraction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingTurboBoots_Result;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_DoesMovementAllowInteraction) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_DoesMovementAllowInteraction");
static_assert(sizeof(PAWN_Hacker_Simple_C_DoesMovementAllowInteraction) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_DoesMovementAllowInteraction");
static_assert(offsetof(PAWN_Hacker_Simple_C_DoesMovementAllowInteraction, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_DoesMovementAllowInteraction::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DoesMovementAllowInteraction, CallFunc_IsUsingTurboBoots_Result) == 0x000001, "Member 'PAWN_Hacker_Simple_C_DoesMovementAllowInteraction::CallFunc_IsUsingTurboBoots_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DoesMovementAllowInteraction, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PAWN_Hacker_Simple_C_DoesMovementAllowInteraction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DoesMovementAllowInteraction, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000003, "Member 'PAWN_Hacker_Simple_C_DoesMovementAllowInteraction::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.UpdateInteraction
// 0x00F8 (0x00F8 - 0x0000)
struct PAWN_Hacker_Simple_C_UpdateInteraction final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChannelingHoldDuration;                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PrimitiveForRangeCheck;                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        TargetShape;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHoldInteractionProgress_Result;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHoldInteractionProgress_Result_1;      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHoldInteractionProgress_Result_2;      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FinishedChannelingHoldInteraction_Result; // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable_1;        // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetChannelingHoldDuration_Result;         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPrimitiveInInteractRange_Result;        // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable_2;        // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UShapeComponent*                        CallFunc_GetTargetShape_ShapeComponent;            // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Base_C*                       K2Node_DynamicCast_AsINTERACT_Base;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable_3;        // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryInteract_ValidInteract;                // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_UpdateInteraction) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_UpdateInteraction");
static_assert(sizeof(PAWN_Hacker_Simple_C_UpdateInteraction) == 0x0000F8, "Wrong size on PAWN_Hacker_Simple_C_UpdateInteraction");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, DeltaTime) == 0x000000, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::DeltaTime' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, ChannelingHoldDuration) == 0x000004, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::ChannelingHoldDuration' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, PrimitiveForRangeCheck) == 0x000008, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::PrimitiveForRangeCheck' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, TargetShape) == 0x000010, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::TargetShape' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_GetAttribValue_ReturnValue) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_AsINTERF_HUD) == 0x000028, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_SetHoldInteractionProgress_Result) == 0x000039, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_SetHoldInteractionProgress_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x000058, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_SetHoldInteractionProgress_Result_1) == 0x000069, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_SetHoldInteractionProgress_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_SetHoldInteractionProgress_Result_2) == 0x00006A, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_SetHoldInteractionProgress_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00006B, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_AsINTERF_Interactable) == 0x000070, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_FinishedChannelingHoldInteraction_Result) == 0x000081, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_FinishedChannelingHoldInteraction_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000084, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00008D, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_AsINTERF_Interactable_1) == 0x000090, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_AsINTERF_Interactable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_GetChannelingHoldDuration_Result) == 0x0000A4, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_GetChannelingHoldDuration_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_IsPrimitiveInInteractRange_Result) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_IsPrimitiveInInteractRange_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_AsINTERF_Interactable_2) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_AsINTERF_Interactable_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_bSuccess_5) == 0x0000C0, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_GetTargetShape_ShapeComponent) == 0x0000C8, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_GetTargetShape_ShapeComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_AsINTERACT_Base) == 0x0000D0, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_AsINTERACT_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_bSuccess_6) == 0x0000D8, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_AsINTERF_Interactable_3) == 0x0000E0, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_AsINTERF_Interactable_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, K2Node_DynamicCast_bSuccess_7) == 0x0000F0, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_IsValid_ReturnValue_1) == 0x0000F1, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_StopChanneling_Result) == 0x0000F2, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_StopChanneling_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_TryInteract_ValidInteract) == 0x0000F3, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_TryInteract_ValidInteract' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateInteraction, CallFunc_Not_PreBool_ReturnValue) == 0x0000F4, "Member 'PAWN_Hacker_Simple_C_UpdateInteraction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetGazeLocations
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Hacker_Simple_C_GetGazeLocations final
{
public:
	TArray<struct FVector>                        GazeLocations;                                     // 0x0000(0x0010)(Parm, OutParm)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetGazeLocations) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GetGazeLocations");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetGazeLocations) == 0x000030, "Wrong size on PAWN_Hacker_Simple_C_GetGazeLocations");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetGazeLocations, GazeLocations) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetGazeLocations::GazeLocations' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetGazeLocations, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_GetGazeLocations::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetGazeLocations, K2Node_MakeArray_Array) == 0x000020, "Member 'PAWN_Hacker_Simple_C_GetGazeLocations::K2Node_MakeArray_Array' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetActionMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Hacker_Simple_C_GetActionMeshComponent final
{
public:
	class USkeletalMeshComponent*                 SkeletalMeshComponent;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetActionMeshComponent) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GetActionMeshComponent");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetActionMeshComponent) == 0x000008, "Wrong size on PAWN_Hacker_Simple_C_GetActionMeshComponent");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetActionMeshComponent, SkeletalMeshComponent) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetActionMeshComponent::SkeletalMeshComponent' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.SetDisplayMesh
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Hacker_Simple_C_SetDisplayMesh final
{
public:
	class USkeletalMesh*                          DisplayMesh;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AnimBP;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_SetDisplayMesh) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_SetDisplayMesh");
static_assert(sizeof(PAWN_Hacker_Simple_C_SetDisplayMesh) == 0x000030, "Wrong size on PAWN_Hacker_Simple_C_SetDisplayMesh");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetDisplayMesh, DisplayMesh) == 0x000000, "Member 'PAWN_Hacker_Simple_C_SetDisplayMesh::DisplayMesh' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetDisplayMesh, AnimBP) == 0x000008, "Member 'PAWN_Hacker_Simple_C_SetDisplayMesh::AnimBP' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetDisplayMesh, OverrideMaterial) == 0x000010, "Member 'PAWN_Hacker_Simple_C_SetDisplayMesh::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetDisplayMesh, Result) == 0x000018, "Member 'PAWN_Hacker_Simple_C_SetDisplayMesh::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetDisplayMesh, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'PAWN_Hacker_Simple_C_SetDisplayMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetDisplayMesh, Temp_int_Variable) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_SetDisplayMesh::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetDisplayMesh, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_SetDisplayMesh::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetDisplayMesh, CallFunc_GetNumMaterials_ReturnValue) == 0x000024, "Member 'PAWN_Hacker_Simple_C_SetDisplayMesh::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetDisplayMesh, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'PAWN_Hacker_Simple_C_SetDisplayMesh::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetDisplayMesh, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'PAWN_Hacker_Simple_C_SetDisplayMesh::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.IsDirectlyThreatenedByAnyEnemy
// 0x0108 (0x0108 - 0x0000)
struct PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastSeenTimestamp;                                 // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_DetectionEvent_C*                  DetectionEvent;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_SentryTurret_HostileBase_C*   CurrentSentryTurret;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          CurrentEnemy;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentActor;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasUnobstructedPropagationPathBetweenPoints_ReturnValue; // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLastSeenTimestamp_LastSeenTimestamp;   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLastSeenTimestamp_LastSeenTimestamp_1; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetSquaredDistanceTo_ReturnValue;         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxAttackComboRange_MaxRange;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Square_ReturnValue;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DetectionState                           CallFunc_GetDetectionState_Result;                 // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_2;       // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF[0x1];                                       // 0x00BF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_SentryTurret_HostileBase_C*   K2Node_DynamicCast_AsINTERACT_Sentry_Turret_Hostile_Base; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_EnemyDetection_C*                 CallFunc_GetDetectionComponent_Result;             // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOBJ_DetectionEvent_C*                  CallFunc_GetDetectionEvent_DetectionEvent;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DetectionState                           CallFunc_GetDetectionState_Result_1;               // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_DetectionEvent_C*                  CallFunc_GetDetectionEvent_DetectionEvent_1;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy");
static_assert(sizeof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy) == 0x000108, "Wrong size on PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, GameInstance) == 0x000008, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::GameInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, LastSeenTimestamp) == 0x000010, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::LastSeenTimestamp' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, DetectionEvent) == 0x000018, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::DetectionEvent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CurrentSentryTurret) == 0x000020, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CurrentSentryTurret' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CurrentEnemy) == 0x000028, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CurrentEnemy' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CurrentActor) == 0x000030, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CurrentActor' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000040, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, Temp_int_Array_Index_Variable) == 0x000054, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000068, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_GetGameInstance_ReturnValue) == 0x000078, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, K2Node_DynamicCast_AsGI_Single_Player) == 0x000080, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_HasUnobstructedPropagationPathBetweenPoints_ReturnValue) == 0x000089, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_HasUnobstructedPropagationPathBetweenPoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00008A, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00008C, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000090, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_GetLastSeenTimestamp_LastSeenTimestamp) == 0x000094, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_GetLastSeenTimestamp_LastSeenTimestamp' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x00009C, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_GetLastSeenTimestamp_LastSeenTimestamp_1) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_GetLastSeenTimestamp_LastSeenTimestamp_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0000A4, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_GetSquaredDistanceTo_ReturnValue) == 0x0000AC, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_GetSquaredDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_GetMaxAttackComboRange_MaxRange) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_GetMaxAttackComboRange_MaxRange' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B4, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_Square_ReturnValue) == 0x0000B8, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_Square_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_GetDetectionState_Result) == 0x0000BC, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_GetDetectionState_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_LessEqual_FloatFloat_ReturnValue_2) == 0x0000BD, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_LessEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BE, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, K2Node_DynamicCast_AsINTERACT_Sentry_Turret_Hostile_Base) == 0x0000C0, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::K2Node_DynamicCast_AsINTERACT_Sentry_Turret_Hostile_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_GetDetectionComponent_Result) == 0x0000D0, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_GetDetectionComponent_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_GetDetectionEvent_DetectionEvent) == 0x0000D8, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_GetDetectionEvent_DetectionEvent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_GetDetectionState_Result_1) == 0x0000E0, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_GetDetectionState_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000E1, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_GetDetectionEvent_DetectionEvent_1) == 0x0000E8, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_GetDetectionEvent_DetectionEvent_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'PAWN_Hacker_Simple_C_IsDirectlyThreatenedByAnyEnemy::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.IsIndirectlyThreatenedByAnyEnemy
// 0x000C (0x000C - 0x0000)
struct PAWN_Hacker_Simple_C_IsIndirectlyThreatenedByAnyEnemy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetThreatenedLevel_Result;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_IsIndirectlyThreatenedByAnyEnemy) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_IsIndirectlyThreatenedByAnyEnemy");
static_assert(sizeof(PAWN_Hacker_Simple_C_IsIndirectlyThreatenedByAnyEnemy) == 0x00000C, "Wrong size on PAWN_Hacker_Simple_C_IsIndirectlyThreatenedByAnyEnemy");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsIndirectlyThreatenedByAnyEnemy, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_IsIndirectlyThreatenedByAnyEnemy::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsIndirectlyThreatenedByAnyEnemy, CallFunc_GetThreatenedLevel_Result) == 0x000004, "Member 'PAWN_Hacker_Simple_C_IsIndirectlyThreatenedByAnyEnemy::CallFunc_GetThreatenedLevel_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsIndirectlyThreatenedByAnyEnemy, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_IsIndirectlyThreatenedByAnyEnemy::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.IsThreatenedByAnyExplosive
// 0x0088 (0x0088 - 0x0000)
struct PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_MakeLiteralFloat_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_BoxOverlapActors_OutActors;               // 0x0050(0x0010)(ReferenceParm)
	bool                                          CallFunc_BoxOverlapActors_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AProximityMineProjectile_C*             K2Node_DynamicCast_AsProximity_Mine_Projectile;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsProxyMineDetonating_Result;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive");
static_assert(sizeof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive) == 0x000088, "Wrong size on PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, Temp_int_Array_Index_Variable) == 0x000004, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, Temp_object_Variable) == 0x000010, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, K2Node_MakeArray_Array) == 0x000020, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, CallFunc_MakeLiteralFloat_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::CallFunc_MakeLiteralFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, CallFunc_BoxOverlapActors_OutActors) == 0x000050, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::CallFunc_BoxOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, CallFunc_BoxOverlapActors_ReturnValue) == 0x000060, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::CallFunc_BoxOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, CallFunc_Array_Get_Item) == 0x000068, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, K2Node_DynamicCast_AsProximity_Mine_Projectile) == 0x000078, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::K2Node_DynamicCast_AsProximity_Mine_Projectile' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive, CallFunc_IsProxyMineDetonating_Result) == 0x000081, "Member 'PAWN_Hacker_Simple_C_IsThreatenedByAnyExplosive::CallFunc_IsProxyMineDetonating_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetThreatenedLevel
// 0x0090 (0x0090 - 0x0000)
struct PAWN_Hacker_Simple_C_GetThreatenedLevel final
{
public:
	int32                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_DetectionEvent_C*                  DetectionEvent;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_EnemyDetection_C*                 DetectionComponent;                                // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CurrentActor;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ActorThreatLevel;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ThreatenedLevel;                                   // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_DestructibleBase_C*           K2Node_DynamicCast_AsINTERACT_Destructible_Base;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_EnemyDetection_C*                 CallFunc_GetDetectionComponent_Result;             // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_DetectionState                           CallFunc_GetDetectionState_Result;                 // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UOBJ_DetectionEvent_C*                  CallFunc_GetDetectionEvent_DetectionEvent;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetThreatLevel_Result;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetThreatenedLevel) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GetThreatenedLevel");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetThreatenedLevel) == 0x000090, "Wrong size on PAWN_Hacker_Simple_C_GetThreatenedLevel");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, DetectionEvent) == 0x000008, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::DetectionEvent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, DetectionComponent) == 0x000010, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::DetectionComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CurrentActor) == 0x000018, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CurrentActor' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, ActorThreatLevel) == 0x000020, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::ActorThreatLevel' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, ThreatenedLevel) == 0x000024, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::ThreatenedLevel' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, Temp_int_Array_Index_Variable) == 0x000028, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_IsValid_ReturnValue_1) == 0x00002D, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_IsValid_ReturnValue_2) == 0x00002E, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, K2Node_DynamicCast_AsINTERACT_Destructible_Base) == 0x000030, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::K2Node_DynamicCast_AsINTERACT_Destructible_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_GetDetectionComponent_Result) == 0x000040, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_GetDetectionComponent_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000054, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_GetDetectionState_Result) == 0x000055, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_GetDetectionState_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_GetDetectionEvent_DetectionEvent) == 0x000058, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_GetDetectionEvent_DetectionEvent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, K2Node_SwitchEnum_CmpSuccess) == 0x000060, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000068, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_GetThreatLevel_Result) == 0x000074, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_GetThreatLevel_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_Array_Get_Item) == 0x000078, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000084, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetThreatenedLevel, CallFunc_Max_ReturnValue) == 0x000088, "Member 'PAWN_Hacker_Simple_C_GetThreatenedLevel::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetCurrentSpreadAngle
// 0x0014 (0x0014 - 0x0000)
struct PAWN_Hacker_Simple_C_GetCurrentSpreadAngle final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue_1;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetCurrentSpreadAngle) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_GetCurrentSpreadAngle");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetCurrentSpreadAngle) == 0x000014, "Wrong size on PAWN_Hacker_Simple_C_GetCurrentSpreadAngle");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetCurrentSpreadAngle, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetCurrentSpreadAngle::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetCurrentSpreadAngle, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'PAWN_Hacker_Simple_C_GetCurrentSpreadAngle::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetCurrentSpreadAngle, CallFunc_GetAttribValue_ReturnValue_1) == 0x000008, "Member 'PAWN_Hacker_Simple_C_GetCurrentSpreadAngle::CallFunc_GetAttribValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetCurrentSpreadAngle, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_GetCurrentSpreadAngle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetCurrentSpreadAngle, CallFunc_FMin_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_GetCurrentSpreadAngle::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.IncreaseRecoilSpreadAngle
// 0x0180 (0x0180 - 0x0000)
struct PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle final
{
public:
	float                                         AddAngle;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxAngle;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CorrectionDelay;                                   // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttribModApplyData                    RecoilSpreadCorrectionMod;                         // 0x0010(0x00A0)(Edit, BlueprintVisible)
	struct FAttribModApplyData                    SpreadIncreaseApplyData;                           // 0x00B0(0x00A0)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue_1;                   // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle");
static_assert(sizeof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle) == 0x000180, "Wrong size on PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, AddAngle) == 0x000000, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::AddAngle' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, MaxAngle) == 0x000004, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::MaxAngle' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, CorrectionDelay) == 0x000008, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::CorrectionDelay' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, RecoilSpreadCorrectionMod) == 0x000010, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::RecoilSpreadCorrectionMod' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, SpreadIncreaseApplyData) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::SpreadIncreaseApplyData' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, Temp_bool_Variable) == 0x000150, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, Temp_float_Variable) == 0x000154, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, CallFunc_GetAttribValue_ReturnValue) == 0x000158, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00015C, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, K2Node_Select_Default) == 0x000160, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, CallFunc_ApplyMod_ReturnValue) == 0x000168, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, CallFunc_ApplyMod_ReturnValue_1) == 0x000170, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::CallFunc_ApplyMod_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000178, "Member 'PAWN_Hacker_Simple_C_IncreaseRecoilSpreadAngle::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.SetSpreadCorrectionSpeed
// 0x000C (0x000C - 0x0000)
struct PAWN_Hacker_Simple_C_SetSpreadCorrectionSpeed final
{
public:
	int32                                         CorrectionSpeed;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_SetSpreadCorrectionSpeed) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_SetSpreadCorrectionSpeed");
static_assert(sizeof(PAWN_Hacker_Simple_C_SetSpreadCorrectionSpeed) == 0x00000C, "Wrong size on PAWN_Hacker_Simple_C_SetSpreadCorrectionSpeed");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetSpreadCorrectionSpeed, CorrectionSpeed) == 0x000000, "Member 'PAWN_Hacker_Simple_C_SetSpreadCorrectionSpeed::CorrectionSpeed' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetSpreadCorrectionSpeed, CallFunc_Multiply_IntInt_ReturnValue) == 0x000004, "Member 'PAWN_Hacker_Simple_C_SetSpreadCorrectionSpeed::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetSpreadCorrectionSpeed, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_SetSpreadCorrectionSpeed::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ApplyMoveSpreadIncreaseMod
// 0x0158 (0x0158 - 0x0000)
struct PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod final
{
public:
	struct FAttribModApplyData                    SpreadIncreaseMod;                                 // 0x0000(0x00A0)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FAttribModApplyData                    MoveSpreadCorrectionMod;                           // 0x00A0(0x00A0)(Edit, BlueprintVisible)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyCompoundMod_ReturnValue;             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod");
static_assert(sizeof(PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod) == 0x000158, "Wrong size on PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod, SpreadIncreaseMod) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod::SpreadIncreaseMod' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod, MoveSpreadCorrectionMod) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod::MoveSpreadCorrectionMod' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000140, "Member 'PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod, CallFunc_GetAttribValue_ReturnValue) == 0x000144, "Member 'PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod, CallFunc_Less_FloatFloat_ReturnValue) == 0x000148, "Member 'PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod, CallFunc_ApplyCompoundMod_ReturnValue) == 0x000150, "Member 'PAWN_Hacker_Simple_C_ApplyMoveSpreadIncreaseMod::CallFunc_ApplyCompoundMod_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ApplyMoveSpreadCorrection
// 0x00A8 (0x00A8 - 0x0000)
struct PAWN_Hacker_Simple_C_ApplyMoveSpreadCorrection final
{
public:
	struct FAttribModApplyData                    MoveSpreadCorrectionMod;                           // 0x0000(0x00A0)(Edit, BlueprintVisible)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ApplyMoveSpreadCorrection) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_ApplyMoveSpreadCorrection");
static_assert(sizeof(PAWN_Hacker_Simple_C_ApplyMoveSpreadCorrection) == 0x0000A8, "Wrong size on PAWN_Hacker_Simple_C_ApplyMoveSpreadCorrection");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyMoveSpreadCorrection, MoveSpreadCorrectionMod) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ApplyMoveSpreadCorrection::MoveSpreadCorrectionMod' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyMoveSpreadCorrection, CallFunc_ApplyMod_ReturnValue) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_ApplyMoveSpreadCorrection::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnEnemyThreatLevelChanged
// 0x0048 (0x0048 - 0x0000)
struct PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsThreatening;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TotalThreatLevel;                                  // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetThreatenedLevel_Result;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetProgressRatioThroughGame_Result;       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged) == 0x000048, "Wrong size on PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, Actor) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::Actor' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, IsThreatening) == 0x000008, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::IsThreatening' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, TotalThreatLevel) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::TotalThreatLevel' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, CallFunc_GetThreatenedLevel_Result) == 0x000014, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::CallFunc_GetThreatenedLevel_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, CallFunc_Array_RemoveItem_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, CallFunc_Array_AddUnique_ReturnValue) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, CallFunc_GetProgressRatioThroughGame_Result) == 0x00003C, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::CallFunc_GetProgressRatioThroughGame_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, CallFunc_GetFloatValue_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'PAWN_Hacker_Simple_C_OnEnemyThreatLevelChanged::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HasDisplayMesh
// 0x0002 (0x0002 - 0x0000)
struct PAWN_Hacker_Simple_C_HasDisplayMesh final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HasDisplayMesh) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_HasDisplayMesh");
static_assert(sizeof(PAWN_Hacker_Simple_C_HasDisplayMesh) == 0x000002, "Wrong size on PAWN_Hacker_Simple_C_HasDisplayMesh");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasDisplayMesh, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HasDisplayMesh::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasDisplayMesh, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PAWN_Hacker_Simple_C_HasDisplayMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HasGamepadMovedCursorRecently
// 0x0014 (0x0014 - 0x0000)
struct PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently final
{
public:
	float                                         TimeThreshold;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently");
static_assert(sizeof(PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently) == 0x000014, "Wrong size on PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently, TimeThreshold) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently::TimeThreshold' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently, Result) == 0x000004, "Member 'PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HasGamepadMovedCursorRecently::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleEscape
// 0x0098 (0x0098 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleEscape final
{
public:
	bool                                          WasCrouchingWithToggle;                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMoveActionInputValue_Value;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCrouchToggle_Result;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStopFocusingOnInteract_Result;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction;          // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InvokeNavManager_Result;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MoveActionChanged_Result;                 // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_GamePig_C*                    K2Node_DynamicCast_AsINTERACT_Game_Pig;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleEscape) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleEscape");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleEscape) == 0x000098, "Wrong size on PAWN_Hacker_Simple_C_HandleEscape");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, WasCrouchingWithToggle) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleEscape::WasCrouchingWithToggle' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleEscape::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, CallFunc_GetMoveActionInputValue_Value) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HandleEscape::CallFunc_GetMoveActionInputValue_Value' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, CallFunc_GetCrouchToggle_Result) == 0x000014, "Member 'PAWN_Hacker_Simple_C_HandleEscape::CallFunc_GetCrouchToggle_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, CallFunc_Round_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleEscape::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_HandleEscape::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'PAWN_Hacker_Simple_C_HandleEscape::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, K2Node_DynamicCast_AsINTERF_HUD) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HandleEscape::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PAWN_Hacker_Simple_C_HandleEscape::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, CallFunc_GetMainMenuWidget_Result) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleEscape::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, CallFunc_TryStopFocusingOnInteract_Result) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleEscape::CallFunc_TryStopFocusingOnInteract_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000048, "Member 'PAWN_Hacker_Simple_C_HandleEscape::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'PAWN_Hacker_Simple_C_HandleEscape::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, K2Node_MakeStruct_STRUCT_MoveInputAction) == 0x00005C, "Member 'PAWN_Hacker_Simple_C_HandleEscape::K2Node_MakeStruct_STRUCT_MoveInputAction' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, CallFunc_InvokeNavManager_Result) == 0x000064, "Member 'PAWN_Hacker_Simple_C_HandleEscape::CallFunc_InvokeNavManager_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, CallFunc_MoveActionChanged_Result) == 0x000065, "Member 'PAWN_Hacker_Simple_C_HandleEscape::CallFunc_MoveActionChanged_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x000068, "Member 'PAWN_Hacker_Simple_C_HandleEscape::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, K2Node_DynamicCast_bSuccess_2) == 0x000078, "Member 'PAWN_Hacker_Simple_C_HandleEscape::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, CallFunc_GetMainMenuWidget_Result_1) == 0x000080, "Member 'PAWN_Hacker_Simple_C_HandleEscape::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, K2Node_DynamicCast_AsINTERACT_Game_Pig) == 0x000088, "Member 'PAWN_Hacker_Simple_C_HandleEscape::K2Node_DynamicCast_AsINTERACT_Game_Pig' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleEscape, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'PAWN_Hacker_Simple_C_HandleEscape::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnInteractionFailed
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_OnInteractionFailed final
{
public:
	class FText                                   FailedText;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnInteractionFailed) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_OnInteractionFailed");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnInteractionFailed) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_OnInteractionFailed");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnInteractionFailed, FailedText) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnInteractionFailed::FailedText' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.BeginChannelingInteraction
// 0x0090 (0x0090 - 0x0000)
struct PAWN_Hacker_Simple_C_BeginChannelingInteraction final
{
public:
	class AActor*                                 Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    PrimitiveComponent;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetHoldInteractionProgress_Result;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_BeginChannelingInteraction) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_BeginChannelingInteraction");
static_assert(sizeof(PAWN_Hacker_Simple_C_BeginChannelingInteraction) == 0x000090, "Wrong size on PAWN_Hacker_Simple_C_BeginChannelingInteraction");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, Interactable) == 0x000000, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::Interactable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, PrimitiveComponent) == 0x000008, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::PrimitiveComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, K2Node_DynamicCast_AsINTERF_HUD) == 0x000028, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, CallFunc_SetHoldInteractionProgress_Result) == 0x000039, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::CallFunc_SetHoldInteractionProgress_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, CallFunc_GetObjectName_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, CallFunc_GetObjectName_ReturnValue_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::CallFunc_GetObjectName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, CallFunc_Conv_StringToName_ReturnValue) == 0x000060, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000068, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, K2Node_DynamicCast_AsINTERF_Interactable) == 0x000078, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, CallFunc_StopChanneling_Result) == 0x000089, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::CallFunc_StopChanneling_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, CallFunc_IsValid_ReturnValue_1) == 0x00008A, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, CallFunc_IsValid_ReturnValue_2) == 0x00008B, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BeginChannelingInteraction, CallFunc_IsValid_ReturnValue_3) == 0x00008C, "Member 'PAWN_Hacker_Simple_C_BeginChannelingInteraction::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.FinishChannelingInteraction
// 0x0014 (0x0014 - 0x0000)
struct PAWN_Hacker_Simple_C_FinishChannelingInteraction final
{
public:
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_FinishChannelingInteraction) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_FinishChannelingInteraction");
static_assert(sizeof(PAWN_Hacker_Simple_C_FinishChannelingInteraction) == 0x000014, "Wrong size on PAWN_Hacker_Simple_C_FinishChannelingInteraction");
static_assert(offsetof(PAWN_Hacker_Simple_C_FinishChannelingInteraction, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'PAWN_Hacker_Simple_C_FinishChannelingInteraction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_FinishChannelingInteraction, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_FinishChannelingInteraction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryStopChannelingInteraction
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Hacker_Simple_C_TryStopChannelingInteraction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryStopChannelingInteraction) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_TryStopChannelingInteraction");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryStopChannelingInteraction) == 0x000020, "Wrong size on PAWN_Hacker_Simple_C_TryStopChannelingInteraction");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopChannelingInteraction, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryStopChannelingInteraction::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopChannelingInteraction, K2Node_DynamicCast_AsINTERF_Interactable) == 0x000008, "Member 'PAWN_Hacker_Simple_C_TryStopChannelingInteraction::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopChannelingInteraction, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_TryStopChannelingInteraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopChannelingInteraction, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'PAWN_Hacker_Simple_C_TryStopChannelingInteraction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopChannelingInteraction, CallFunc_StopChanneling_Result) == 0x00001A, "Member 'PAWN_Hacker_Simple_C_TryStopChannelingInteraction::CallFunc_StopChanneling_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryStopFocusingOnInteract
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Hacker_Simple_C_TryStopFocusingOnInteract final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_Focusable_Base_C*             K2Node_DynamicCast_AsINTERACT_Focusable_Base;      // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_StopChanneling_self_CastInput;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryStopFocusingOnInteract) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_TryStopFocusingOnInteract");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryStopFocusingOnInteract) == 0x000030, "Wrong size on PAWN_Hacker_Simple_C_TryStopFocusingOnInteract");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopFocusingOnInteract, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryStopFocusingOnInteract::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopFocusingOnInteract, K2Node_DynamicCast_AsINTERACT_Focusable_Base) == 0x000008, "Member 'PAWN_Hacker_Simple_C_TryStopFocusingOnInteract::K2Node_DynamicCast_AsINTERACT_Focusable_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopFocusingOnInteract, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PAWN_Hacker_Simple_C_TryStopFocusingOnInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopFocusingOnInteract, CallFunc_StopChanneling_self_CastInput) == 0x000018, "Member 'PAWN_Hacker_Simple_C_TryStopFocusingOnInteract::CallFunc_StopChanneling_self_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopFocusingOnInteract, CallFunc_StopChanneling_Result) == 0x000028, "Member 'PAWN_Hacker_Simple_C_TryStopFocusingOnInteract::CallFunc_StopChanneling_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.IsChannelingWithInteractable
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Hacker_Simple_C_IsChannelingWithInteractable final
{
public:
	class AActor*                                 Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_IsChannelingWithInteractable) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_IsChannelingWithInteractable");
static_assert(sizeof(PAWN_Hacker_Simple_C_IsChannelingWithInteractable) == 0x000030, "Wrong size on PAWN_Hacker_Simple_C_IsChannelingWithInteractable");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsChannelingWithInteractable, Interactable) == 0x000000, "Member 'PAWN_Hacker_Simple_C_IsChannelingWithInteractable::Interactable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsChannelingWithInteractable, Result) == 0x000008, "Member 'PAWN_Hacker_Simple_C_IsChannelingWithInteractable::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsChannelingWithInteractable, CallFunc_NotEqual_NameName_ReturnValue) == 0x000009, "Member 'PAWN_Hacker_Simple_C_IsChannelingWithInteractable::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsChannelingWithInteractable, CallFunc_GetObjectName_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_IsChannelingWithInteractable::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsChannelingWithInteractable, CallFunc_Conv_StringToName_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_IsChannelingWithInteractable::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsChannelingWithInteractable, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'PAWN_Hacker_Simple_C_IsChannelingWithInteractable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsChannelingWithInteractable, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000029, "Member 'PAWN_Hacker_Simple_C_IsChannelingWithInteractable::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsChannelingWithInteractable, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00002A, "Member 'PAWN_Hacker_Simple_C_IsChannelingWithInteractable::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.IsChannelingWithAnyInteractable
// 0x0003 (0x0003 - 0x0000)
struct PAWN_Hacker_Simple_C_IsChannelingWithAnyInteractable final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_IsChannelingWithAnyInteractable) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_IsChannelingWithAnyInteractable");
static_assert(sizeof(PAWN_Hacker_Simple_C_IsChannelingWithAnyInteractable) == 0x000003, "Wrong size on PAWN_Hacker_Simple_C_IsChannelingWithAnyInteractable");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsChannelingWithAnyInteractable, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_IsChannelingWithAnyInteractable::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsChannelingWithAnyInteractable, CallFunc_NotEqual_NameName_ReturnValue) == 0x000001, "Member 'PAWN_Hacker_Simple_C_IsChannelingWithAnyInteractable::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsChannelingWithAnyInteractable, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'PAWN_Hacker_Simple_C_IsChannelingWithAnyInteractable::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetChannelingInteractable
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Hacker_Simple_C_GetChannelingInteractable final
{
public:
	class AActor*                                 Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetChannelingInteractable) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GetChannelingInteractable");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetChannelingInteractable) == 0x000008, "Wrong size on PAWN_Hacker_Simple_C_GetChannelingInteractable");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetChannelingInteractable, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetChannelingInteractable::Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InitializeTutorials
// 0x0058 (0x0058 - 0x0000)
struct PAWN_Hacker_Simple_C_InitializeTutorials final
{
public:
	class FName                                   CurrentKey;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName TutorialName)>     K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_TutorialMessage_C*              CallFunc_GetTutorialWidget_Result;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InitializeTutorials) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InitializeTutorials");
static_assert(sizeof(PAWN_Hacker_Simple_C_InitializeTutorials) == 0x000058, "Wrong size on PAWN_Hacker_Simple_C_InitializeTutorials");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeTutorials, CurrentKey) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InitializeTutorials::CurrentKey' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeTutorials, GameInstance) == 0x000008, "Member 'PAWN_Hacker_Simple_C_InitializeTutorials::GameInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeTutorials, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'PAWN_Hacker_Simple_C_InitializeTutorials::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeTutorials, K2Node_DynamicCast_AsINTERF_HUD) == 0x000020, "Member 'PAWN_Hacker_Simple_C_InitializeTutorials::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeTutorials, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PAWN_Hacker_Simple_C_InitializeTutorials::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeTutorials, CallFunc_GetTutorialWidget_Result) == 0x000038, "Member 'PAWN_Hacker_Simple_C_InitializeTutorials::CallFunc_GetTutorialWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeTutorials, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_InitializeTutorials::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeTutorials, K2Node_DynamicCast_AsGI_Single_Player) == 0x000048, "Member 'PAWN_Hacker_Simple_C_InitializeTutorials::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeTutorials, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_InitializeTutorials::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.EVENT_OnTutorialCompleted
// 0x0040 (0x0040 - 0x0000)
struct PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted final
{
public:
	class FName                                   TutorialName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Tutorials;                                         // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_TryRemoveTutorials_Result;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_TutorialMessage_C*              CallFunc_GetTutorialWidget_Result;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted");
static_assert(sizeof(PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted) == 0x000040, "Wrong size on PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted, TutorialName) == 0x000000, "Member 'PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted::TutorialName' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted, Tutorials) == 0x000008, "Member 'PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted::Tutorials' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted, CallFunc_TryRemoveTutorials_Result) == 0x000018, "Member 'PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted::CallFunc_TryRemoveTutorials_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted, K2Node_DynamicCast_AsINTERF_HUD) == 0x000020, "Member 'PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted, CallFunc_GetTutorialWidget_Result) == 0x000038, "Member 'PAWN_Hacker_Simple_C_EVENT_OnTutorialCompleted::CallFunc_GetTutorialWidget_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetHighestPriorityTutorial
// 0x00D0 (0x00D0 - 0x0000)
struct PAWN_Hacker_Simple_C_GetHighestPriorityTutorial final
{
public:
	struct FSTRUCT_TutorialInstance               Result;                                            // 0x0000(0x0028)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TutorialAngleDelta;                                // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmallestAngleDelta;                                // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_TutorialInstance               HighestPriorityTutorial;                           // 0x0030(0x0028)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_TutorialInstance               CurrentTutorial;                                   // 0x0058(0x0028)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleToTutorialActor_Result;           // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TutorialInstance               CallFunc_Array_Get_Item;                           // 0x00A0(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GetHighestPriorityTutorial");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial) == 0x0000D0, "Wrong size on PAWN_Hacker_Simple_C_GetHighestPriorityTutorial");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, TutorialAngleDelta) == 0x000028, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::TutorialAngleDelta' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, SmallestAngleDelta) == 0x00002C, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::SmallestAngleDelta' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, HighestPriorityTutorial) == 0x000030, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::HighestPriorityTutorial' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, CurrentTutorial) == 0x000058, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::CurrentTutorial' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, Temp_int_Array_Index_Variable) == 0x000080, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, CallFunc_GetAngleToTutorialActor_Result) == 0x00008C, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::CallFunc_GetAngleToTutorialActor_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, CallFunc_Less_FloatFloat_ReturnValue) == 0x000090, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000091, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, CallFunc_BooleanAND_ReturnValue) == 0x000092, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000093, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, CallFunc_BooleanOR_ReturnValue) == 0x000094, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHighestPriorityTutorial, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'PAWN_Hacker_Simple_C_GetHighestPriorityTutorial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.SetTutorialsEnabled
// 0x0028 (0x0028 - 0x0000)
struct PAWN_Hacker_Simple_C_SetTutorialsEnabled final
{
public:
	bool                                          TutorialsEnabled;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_TutorialMessage_C*              CallFunc_GetTutorialWidget_Result;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_SetTutorialsEnabled) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_SetTutorialsEnabled");
static_assert(sizeof(PAWN_Hacker_Simple_C_SetTutorialsEnabled) == 0x000028, "Wrong size on PAWN_Hacker_Simple_C_SetTutorialsEnabled");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTutorialsEnabled, TutorialsEnabled) == 0x000000, "Member 'PAWN_Hacker_Simple_C_SetTutorialsEnabled::TutorialsEnabled' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTutorialsEnabled, K2Node_DynamicCast_AsINTERF_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_SetTutorialsEnabled::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTutorialsEnabled, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_SetTutorialsEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTutorialsEnabled, CallFunc_GetTutorialWidget_Result) == 0x000020, "Member 'PAWN_Hacker_Simple_C_SetTutorialsEnabled::CallFunc_GetTutorialWidget_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.AreTutorialsEnabled
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Hacker_Simple_C_AreTutorialsEnabled final
{
public:
	bool                                          TutorialsEnabled;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_AreTutorialsEnabled) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_AreTutorialsEnabled");
static_assert(sizeof(PAWN_Hacker_Simple_C_AreTutorialsEnabled) == 0x000001, "Wrong size on PAWN_Hacker_Simple_C_AreTutorialsEnabled");
static_assert(offsetof(PAWN_Hacker_Simple_C_AreTutorialsEnabled, TutorialsEnabled) == 0x000000, "Member 'PAWN_Hacker_Simple_C_AreTutorialsEnabled::TutorialsEnabled' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ActivateTimedTutorial
// 0x0090 (0x0090 - 0x0000)
struct PAWN_Hacker_Simple_C_ActivateTimedTutorial final
{
public:
	class FName                                   Tutorial;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasActiveTutorialByName_Result;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_TutorialMessage_C*              CallFunc_GetTutorialWidget_Result;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedTutorial_Result;              // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_TutorialInstance               K2Node_MakeStruct_STRUCT_TutorialInstance;         // 0x0048(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ActivateTimedTutorial) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_ActivateTimedTutorial");
static_assert(sizeof(PAWN_Hacker_Simple_C_ActivateTimedTutorial) == 0x000090, "Wrong size on PAWN_Hacker_Simple_C_ActivateTimedTutorial");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, Tutorial) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::Tutorial' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, Duration) == 0x000008, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::Duration' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, GameInstance) == 0x000010, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::GameInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, CallFunc_NotEqual_NameName_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, CallFunc_HasActiveTutorialByName_Result) == 0x000019, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::CallFunc_HasActiveTutorialByName_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, K2Node_DynamicCast_AsINTERF_HUD) == 0x000020, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, CallFunc_GetTutorialWidget_Result) == 0x000038, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::CallFunc_GetTutorialWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, CallFunc_HasCompletedTutorial_Result) == 0x000040, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::CallFunc_HasCompletedTutorial_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, CallFunc_Not_PreBool_ReturnValue_1) == 0x000041, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000044, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, K2Node_MakeStruct_STRUCT_TutorialInstance) == 0x000048, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::K2Node_MakeStruct_STRUCT_TutorialInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, CallFunc_GetGameInstance_ReturnValue) == 0x000078, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, K2Node_DynamicCast_AsGI_Single_Player) == 0x000080, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateTimedTutorial, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'PAWN_Hacker_Simple_C_ActivateTimedTutorial::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.DeactivateTutorial
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Hacker_Simple_C_DeactivateTutorial final
{
public:
	class FName                                   Tutorial;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryRemoveTutorials_Result;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_TutorialMessage_C*              CallFunc_GetTutorialWidget_Result;                 // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_DeactivateTutorial) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_DeactivateTutorial");
static_assert(sizeof(PAWN_Hacker_Simple_C_DeactivateTutorial) == 0x000038, "Wrong size on PAWN_Hacker_Simple_C_DeactivateTutorial");
static_assert(offsetof(PAWN_Hacker_Simple_C_DeactivateTutorial, Tutorial) == 0x000000, "Member 'PAWN_Hacker_Simple_C_DeactivateTutorial::Tutorial' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DeactivateTutorial, CallFunc_TryRemoveTutorials_Result) == 0x000008, "Member 'PAWN_Hacker_Simple_C_DeactivateTutorial::CallFunc_TryRemoveTutorials_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DeactivateTutorial, K2Node_DynamicCast_AsINTERF_HUD) == 0x000010, "Member 'PAWN_Hacker_Simple_C_DeactivateTutorial::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DeactivateTutorial, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PAWN_Hacker_Simple_C_DeactivateTutorial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DeactivateTutorial, CallFunc_GetTutorialWidget_Result) == 0x000028, "Member 'PAWN_Hacker_Simple_C_DeactivateTutorial::CallFunc_GetTutorialWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DeactivateTutorial, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_DeactivateTutorial::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetTutorialMessage
// 0x0040 (0x0040 - 0x0000)
struct PAWN_Hacker_Simple_C_GetTutorialMessage final
{
public:
	class FName                                   Tutorial;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Result;                                            // 0x0008(0x0018)(Parm, OutParm)
	struct FSTRUCT_TutorialData                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetTutorialMessage) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GetTutorialMessage");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetTutorialMessage) == 0x000040, "Wrong size on PAWN_Hacker_Simple_C_GetTutorialMessage");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetTutorialMessage, Tutorial) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetTutorialMessage::Tutorial' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetTutorialMessage, Result) == 0x000008, "Member 'PAWN_Hacker_Simple_C_GetTutorialMessage::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetTutorialMessage, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'PAWN_Hacker_Simple_C_GetTutorialMessage::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetTutorialMessage, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000038, "Member 'PAWN_Hacker_Simple_C_GetTutorialMessage::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ActivateVolumeTutorials
// 0x00D0 (0x00D0 - 0x0000)
struct PAWN_Hacker_Simple_C_ActivateVolumeTutorials final
{
public:
	TArray<struct FSTRUCT_TutorialVolumeData>     Tutorials;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                TargetOffset;                                      // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Tutorial;                                          // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentTimestamp;                                  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_TutorialMessage_C*              CallFunc_GetTutorialWidget_Result;                 // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TutorialVolumeData             CallFunc_Array_Get_Item;                           // 0x0078(0x0028)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasCompletedTutorial_Result;              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_ActivateVolumeTutorials");
static_assert(sizeof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials) == 0x0000D0, "Wrong size on PAWN_Hacker_Simple_C_ActivateVolumeTutorials");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, Tutorials) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::Tutorials' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, TargetOffset) == 0x000010, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::TargetOffset' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, TargetActor) == 0x000020, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::TargetActor' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, Tutorial) == 0x000028, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::Tutorial' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, CurrentTimestamp) == 0x000030, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::CurrentTimestamp' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, GameInstance) == 0x000038, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::GameInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, Temp_int_Array_Index_Variable) == 0x000040, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, K2Node_DynamicCast_AsINTERF_HUD) == 0x000050, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, CallFunc_GetTutorialWidget_Result) == 0x000068, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::CallFunc_GetTutorialWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, CallFunc_Array_Get_Item) == 0x000078, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, CallFunc_GetGameInstance_ReturnValue) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, CallFunc_HasCompletedTutorial_Result) == 0x0000B8, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::CallFunc_HasCompletedTutorial_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, K2Node_DynamicCast_AsGI_Single_Player) == 0x0000C0, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ActivateVolumeTutorials, CallFunc_Not_PreBool_ReturnValue) == 0x0000C9, "Member 'PAWN_Hacker_Simple_C_ActivateVolumeTutorials::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.AddVolumeTutorial
// 0x00C0 (0x00C0 - 0x0000)
struct PAWN_Hacker_Simple_C_AddVolumeTutorial final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timestamp;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 TargetActor;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetOffset;                                      // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_TutorialInstance               K2Node_MakeStruct_STRUCT_TutorialInstance;         // 0x0030(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TutorialInstance               K2Node_MakeStruct_STRUCT_TutorialInstance_1;       // 0x0060(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TutorialInstance               CallFunc_Array_Get_Item;                           // 0x0090(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_AddVolumeTutorial) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_AddVolumeTutorial");
static_assert(sizeof(PAWN_Hacker_Simple_C_AddVolumeTutorial) == 0x0000C0, "Wrong size on PAWN_Hacker_Simple_C_AddVolumeTutorial");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, Name_0) == 0x000000, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::Name_0' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, Timestamp) == 0x000008, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::Timestamp' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, TargetActor) == 0x000010, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::TargetActor' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, TargetOffset) == 0x000018, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::TargetOffset' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, Temp_int_Array_Index_Variable) == 0x000024, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, K2Node_MakeStruct_STRUCT_TutorialInstance) == 0x000030, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::K2Node_MakeStruct_STRUCT_TutorialInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, K2Node_MakeStruct_STRUCT_TutorialInstance_1) == 0x000060, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::K2Node_MakeStruct_STRUCT_TutorialInstance_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, CallFunc_Array_Get_Item) == 0x000090, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000B9, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000BA, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddVolumeTutorial, CallFunc_BooleanAND_ReturnValue) == 0x0000BB, "Member 'PAWN_Hacker_Simple_C_AddVolumeTutorial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryRemoveTutorials
// 0x0088 (0x0088 - 0x0000)
struct PAWN_Hacker_Simple_C_TryRemoveTutorials final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          RemovedAnyTutorials;                               // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TutorialInstance               CurrentTutorial;                                   // 0x0010(0x0028)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TutorialInstance               CallFunc_Array_Get_Item;                           // 0x0050(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryRemoveTutorials) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_TryRemoveTutorials");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryRemoveTutorials) == 0x000088, "Wrong size on PAWN_Hacker_Simple_C_TryRemoveTutorials");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, Name_0) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::Name_0' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, Result) == 0x000008, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, RemovedAnyTutorials) == 0x000009, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::RemovedAnyTutorials' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, CurrentTutorial) == 0x000010, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::CurrentTutorial' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, Temp_int_Array_Index_Variable) == 0x000038, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003C, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000049, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, CallFunc_Array_Get_Item) == 0x000050, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00007C, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryRemoveTutorials, CallFunc_Max_ReturnValue) == 0x000080, "Member 'PAWN_Hacker_Simple_C_TryRemoveTutorials::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.PlayDamageVocalization
// 0x0078 (0x0078 - 0x0000)
struct PAWN_Hacker_Simple_C_PlayDamageVocalization final
{
public:
	class UAttribDamageType*                      DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_HackerGender                             HackerGender;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldGasp;                                        // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_HackerGender                             Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_2;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_HackerGender                             Temp_byte_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_HackerGender                             CallFunc_GetHackerGender_Result;                   // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSoundPlaying_ReturnValue;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USoundBase*                             K2Node_Select_Default_2;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_PlayDamageVocalization) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_PlayDamageVocalization");
static_assert(sizeof(PAWN_Hacker_Simple_C_PlayDamageVocalization) == 0x000078, "Wrong size on PAWN_Hacker_Simple_C_PlayDamageVocalization");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, DamageType) == 0x000000, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::DamageType' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, HackerGender) == 0x000008, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::HackerGender' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, ShouldGasp) == 0x000009, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::ShouldGasp' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, Temp_object_Variable) == 0x000010, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, Temp_object_Variable_1) == 0x000018, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, Temp_byte_Variable) == 0x000020, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, Temp_object_Variable_2) == 0x000028, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, Temp_object_Variable_3) == 0x000030, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, Temp_bool_Variable) == 0x000038, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, Temp_byte_Variable_1) == 0x000039, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, K2Node_Select_Default) == 0x000040, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, K2Node_Select_Default_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, K2Node_DynamicCast_AsGI_Single_Player) == 0x000058, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_GetHackerGender_Result) == 0x000061, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_GetHackerGender_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_IsSoundPlaying_ReturnValue) == 0x000062, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_IsSoundPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_Not_PreBool_ReturnValue) == 0x000063, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000064, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000065, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_Not_PreBool_ReturnValue_1) == 0x000066, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_BooleanOR_ReturnValue) == 0x000067, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, K2Node_Select_Default_2) == 0x000068, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000070, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000071, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000072, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_BooleanOR_ReturnValue_1) == 0x000073, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_BooleanOR_ReturnValue_2) == 0x000074, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_BooleanOR_ReturnValue_3) == 0x000075, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageVocalization, CallFunc_BooleanOR_ReturnValue_4) == 0x000076, "Member 'PAWN_Hacker_Simple_C_PlayDamageVocalization::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnCharacterDied
// 0x01F8 (0x01F8 - 0x0000)
struct PAWN_Hacker_Simple_C_OnCharacterDied final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 OtherActor;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TotalDamage;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribDamageType*                      DamageType;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    DeathLookMod;                                      // 0x0048(0x00A0)(Edit, BlueprintVisible)
	struct FAttribModApplyData                    DeathMoveMod;                                      // 0x00E8(0x00A0)(Edit, BlueprintVisible)
	bool                                          CallFunc_OnCharacterDied_Result;                   // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnCharacterDied_Result_1;                 // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryApplyKnockbackFromDamage_Result;       // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A3[0x1];                                      // 0x01A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStopChannelingInteraction_Result;      // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAttribModApplyData>            K2Node_MakeArray_Array;                            // 0x01D0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_SetUseIK_Result;                          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAttribMod*>                     CallFunc_ApplyMods_ReturnValue;                    // 0x01E8(0x0010)(ReferenceParm)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnCharacterDied) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_OnCharacterDied");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnCharacterDied) == 0x0001F8, "Wrong size on PAWN_Hacker_Simple_C_OnCharacterDied");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, ImpactData) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::ImpactData' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, DamageInstance) == 0x000008, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::DamageInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, OtherActor) == 0x000030, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::OtherActor' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, Result) == 0x000038, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, TotalDamage) == 0x00003C, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::TotalDamage' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, DamageType) == 0x000040, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::DamageType' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, DeathLookMod) == 0x000048, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::DeathLookMod' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, DeathMoveMod) == 0x0000E8, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::DeathMoveMod' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, CallFunc_OnCharacterDied_Result) == 0x000188, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::CallFunc_OnCharacterDied_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, K2Node_DynamicCast_AsINTERF_HUD) == 0x000190, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, CallFunc_OnCharacterDied_Result_1) == 0x0001A1, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::CallFunc_OnCharacterDied_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, CallFunc_TryApplyKnockbackFromDamage_Result) == 0x0001A2, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::CallFunc_TryApplyKnockbackFromDamage_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, CallFunc_Add_FloatFloat_ReturnValue) == 0x0001A4, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, CallFunc_IsValid_ReturnValue) == 0x0001A8, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, CallFunc_TryStopChannelingInteraction_Result) == 0x0001A9, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::CallFunc_TryStopChannelingInteraction_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, CallFunc_GetAnimInstance_ReturnValue) == 0x0001B0, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x0001B8, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, K2Node_DynamicCast_bSuccess_1) == 0x0001C8, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, K2Node_MakeArray_Array) == 0x0001D0, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, CallFunc_SetUseIK_Result) == 0x0001E0, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::CallFunc_SetUseIK_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterDied, CallFunc_ApplyMods_ReturnValue) == 0x0001E8, "Member 'PAWN_Hacker_Simple_C_OnCharacterDied::CallFunc_ApplyMods_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.PlayDamageFoley
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_PlayDamageFoley final
{
public:
	class UAttribDamageType*                      DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_3;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_4;      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_PlayDamageFoley) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_PlayDamageFoley");
static_assert(sizeof(PAWN_Hacker_Simple_C_PlayDamageFoley) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_PlayDamageFoley");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageFoley, DamageType) == 0x000000, "Member 'PAWN_Hacker_Simple_C_PlayDamageFoley::DamageType' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageFoley, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_PlayDamageFoley::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageFoley, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000009, "Member 'PAWN_Hacker_Simple_C_PlayDamageFoley::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageFoley, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x00000A, "Member 'PAWN_Hacker_Simple_C_PlayDamageFoley::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageFoley, CallFunc_NotEqual_ObjectObject_ReturnValue_3) == 0x00000B, "Member 'PAWN_Hacker_Simple_C_PlayDamageFoley::CallFunc_NotEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageFoley, CallFunc_NotEqual_ObjectObject_ReturnValue_4) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_PlayDamageFoley::CallFunc_NotEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageFoley, CallFunc_BooleanAND_ReturnValue) == 0x00000D, "Member 'PAWN_Hacker_Simple_C_PlayDamageFoley::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageFoley, CallFunc_BooleanAND_ReturnValue_1) == 0x00000E, "Member 'PAWN_Hacker_Simple_C_PlayDamageFoley::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageFoley, CallFunc_BooleanAND_ReturnValue_2) == 0x00000F, "Member 'PAWN_Hacker_Simple_C_PlayDamageFoley::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PlayDamageFoley, CallFunc_BooleanAND_ReturnValue_3) == 0x000010, "Member 'PAWN_Hacker_Simple_C_PlayDamageFoley::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.EVENT_OnDOFChanged
// 0x0014 (0x0014 - 0x0000)
struct PAWN_Hacker_Simple_C_EVENT_OnDOFChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PrevValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue_1;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_EVENT_OnDOFChanged) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_EVENT_OnDOFChanged");
static_assert(sizeof(PAWN_Hacker_Simple_C_EVENT_OnDOFChanged) == 0x000014, "Wrong size on PAWN_Hacker_Simple_C_EVENT_OnDOFChanged");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDOFChanged, CurrValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDOFChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDOFChanged, PrevValue) == 0x000004, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDOFChanged::PrevValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDOFChanged, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDOFChanged::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDOFChanged, CallFunc_Lerp_ReturnValue) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDOFChanged::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDOFChanged, CallFunc_Lerp_ReturnValue_1) == 0x000010, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDOFChanged::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InitializeCameraSettings
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_InitializeCameraSettings final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBlendableInterface>   CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InitializeCameraSettings) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InitializeCameraSettings");
static_assert(sizeof(PAWN_Hacker_Simple_C_InitializeCameraSettings) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_InitializeCameraSettings");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCameraSettings, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InitializeCameraSettings::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCameraSettings, CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput) == 0x000008, "Member 'PAWN_Hacker_Simple_C_InitializeCameraSettings::CallFunc_AddOrUpdateBlendable_InBlendableObject_CastInput' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HasAnyActiveTutorials
// 0x000C (0x000C - 0x0000)
struct PAWN_Hacker_Simple_C_HasAnyActiveTutorials final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HasAnyActiveTutorials) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_HasAnyActiveTutorials");
static_assert(sizeof(PAWN_Hacker_Simple_C_HasAnyActiveTutorials) == 0x00000C, "Wrong size on PAWN_Hacker_Simple_C_HasAnyActiveTutorials");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasAnyActiveTutorials, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HasAnyActiveTutorials::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasAnyActiveTutorials, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'PAWN_Hacker_Simple_C_HasAnyActiveTutorials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasAnyActiveTutorials, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HasAnyActiveTutorials::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HasAnyActiveTimedTutorials
// 0x0040 (0x0040 - 0x0000)
struct PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_TutorialInstance               CallFunc_Array_Get_Item;                           // 0x0010(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials");
static_assert(sizeof(PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials) == 0x000040, "Wrong size on PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials, Temp_int_Array_Index_Variable) == 0x000004, "Member 'PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials, CallFunc_Array_Get_Item) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003D, "Member 'PAWN_Hacker_Simple_C_HasAnyActiveTimedTutorials::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HasActiveTutorialByName
// 0x0048 (0x0048 - 0x0000)
struct PAWN_Hacker_Simple_C_HasActiveTutorialByName final
{
public:
	class FName                                   TutorialName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_TutorialInstance               CallFunc_Array_Get_Item;                           // 0x0018(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HasActiveTutorialByName) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HasActiveTutorialByName");
static_assert(sizeof(PAWN_Hacker_Simple_C_HasActiveTutorialByName) == 0x000048, "Wrong size on PAWN_Hacker_Simple_C_HasActiveTutorialByName");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasActiveTutorialByName, TutorialName) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HasActiveTutorialByName::TutorialName' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasActiveTutorialByName, Result) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HasActiveTutorialByName::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasActiveTutorialByName, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_HasActiveTutorialByName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasActiveTutorialByName, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HasActiveTutorialByName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasActiveTutorialByName, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'PAWN_Hacker_Simple_C_HasActiveTutorialByName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasActiveTutorialByName, CallFunc_Array_Get_Item) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HasActiveTutorialByName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasActiveTutorialByName, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HasActiveTutorialByName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasActiveTutorialByName, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'PAWN_Hacker_Simple_C_HasActiveTutorialByName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasActiveTutorialByName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000045, "Member 'PAWN_Hacker_Simple_C_HasActiveTutorialByName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetAngleToTutorialActor
// 0x0068 (0x0068 - 0x0000)
struct PAWN_Hacker_Simple_C_GetAngleToTutorialActor final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetOffset;                                      // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AngleBetweenNormals_ReturnValue;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GetAngleToTutorialActor");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor) == 0x000068, "Wrong size on PAWN_Hacker_Simple_C_GetAngleToTutorialActor");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor, TargetActor) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetAngleToTutorialActor::TargetActor' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor, TargetOffset) == 0x000008, "Member 'PAWN_Hacker_Simple_C_GetAngleToTutorialActor::TargetOffset' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor, Result) == 0x000014, "Member 'PAWN_Hacker_Simple_C_GetAngleToTutorialActor::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_GetAngleToTutorialActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor, CallFunc_GetForwardVector_ReturnValue) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_GetAngleToTutorialActor::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'PAWN_Hacker_Simple_C_GetAngleToTutorialActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000034, "Member 'PAWN_Hacker_Simple_C_GetAngleToTutorialActor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_GetAngleToTutorialActor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_GetAngleToTutorialActor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'PAWN_Hacker_Simple_C_GetAngleToTutorialActor::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetAngleToTutorialActor, CallFunc_AngleBetweenNormals_ReturnValue) == 0x000064, "Member 'PAWN_Hacker_Simple_C_GetAngleToTutorialActor::CallFunc_AngleBetweenNormals_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetPitchYawToTutorialActor
// 0x00A0 (0x00A0 - 0x0000)
struct PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetOffset;                                      // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              PitchYawDegrees;                                   // 0x0014(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CameraDirection;                                   // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DirectionToTarget;                                 // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPitchRotationTowards_ReturnValue;      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotationTowardsXY_ReturnValue;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor) == 0x0000A0, "Wrong size on PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, TargetActor) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::TargetActor' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, TargetOffset) == 0x000008, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::TargetOffset' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, PitchYawDegrees) == 0x000014, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::PitchYawDegrees' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, CameraDirection) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::CameraDirection' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, DirectionToTarget) == 0x000028, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::DirectionToTarget' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, CallFunc_GetRightVector_ReturnValue) == 0x000038, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, CallFunc_GetPitchRotationTowards_ReturnValue) == 0x000044, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::CallFunc_GetPitchRotationTowards_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, CallFunc_GetRotationTowardsXY_ReturnValue) == 0x000048, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::CallFunc_GetRotationTowardsXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, CallFunc_MakeVector2D_ReturnValue) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000054, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, CallFunc_GetForwardVector_ReturnValue) == 0x00006C, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000078, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000084, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor, CallFunc_Normal_ReturnValue) == 0x000090, "Member 'PAWN_Hacker_Simple_C_GetPitchYawToTutorialActor::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.IsTutorialActorVisible
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Hacker_Simple_C_IsTutorialActorVisible final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetOffset;                                      // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPitchYawToTutorialActor_PitchYawDegrees; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue_1;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_IsTutorialActorVisible) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_IsTutorialActorVisible");
static_assert(sizeof(PAWN_Hacker_Simple_C_IsTutorialActorVisible) == 0x000038, "Wrong size on PAWN_Hacker_Simple_C_IsTutorialActorVisible");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsTutorialActorVisible, TargetActor) == 0x000000, "Member 'PAWN_Hacker_Simple_C_IsTutorialActorVisible::TargetActor' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsTutorialActorVisible, TargetOffset) == 0x000008, "Member 'PAWN_Hacker_Simple_C_IsTutorialActorVisible::TargetOffset' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsTutorialActorVisible, Result) == 0x000014, "Member 'PAWN_Hacker_Simple_C_IsTutorialActorVisible::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsTutorialActorVisible, CallFunc_GetPitchYawToTutorialActor_PitchYawDegrees) == 0x000018, "Member 'PAWN_Hacker_Simple_C_IsTutorialActorVisible::CallFunc_GetPitchYawToTutorialActor_PitchYawDegrees' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsTutorialActorVisible, CallFunc_BreakVector2D_X) == 0x000020, "Member 'PAWN_Hacker_Simple_C_IsTutorialActorVisible::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsTutorialActorVisible, CallFunc_BreakVector2D_Y) == 0x000024, "Member 'PAWN_Hacker_Simple_C_IsTutorialActorVisible::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsTutorialActorVisible, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'PAWN_Hacker_Simple_C_IsTutorialActorVisible::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsTutorialActorVisible, CallFunc_Abs_ReturnValue_1) == 0x00002C, "Member 'PAWN_Hacker_Simple_C_IsTutorialActorVisible::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsTutorialActorVisible, CallFunc_Less_FloatFloat_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_IsTutorialActorVisible::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsTutorialActorVisible, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000031, "Member 'PAWN_Hacker_Simple_C_IsTutorialActorVisible::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsTutorialActorVisible, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'PAWN_Hacker_Simple_C_IsTutorialActorVisible::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryEnterKeypadDigit
// 0x0060 (0x0060 - 0x0000)
struct PAWN_Hacker_Simple_C_TryEnterKeypadDigit final
{
public:
	int32                                         Digit;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_Keypad_C*                     KeypadInteract;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_GetBoxComponentFromKey_BoxComponent;      // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_TryInteract_self_CastInput;               // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSTRUCT_InteractResults                CallFunc_TryInteract_InteractResults;              // 0x0028(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_IsPrimitiveInInteractRange_Result;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_Keypad_C*                     K2Node_DynamicCast_AsINTERACT_Keypad;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryEnterKeypadDigit) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_TryEnterKeypadDigit");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryEnterKeypadDigit) == 0x000060, "Wrong size on PAWN_Hacker_Simple_C_TryEnterKeypadDigit");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryEnterKeypadDigit, Digit) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryEnterKeypadDigit::Digit' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryEnterKeypadDigit, KeypadInteract) == 0x000008, "Member 'PAWN_Hacker_Simple_C_TryEnterKeypadDigit::KeypadInteract' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryEnterKeypadDigit, CallFunc_GetBoxComponentFromKey_BoxComponent) == 0x000010, "Member 'PAWN_Hacker_Simple_C_TryEnterKeypadDigit::CallFunc_GetBoxComponentFromKey_BoxComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryEnterKeypadDigit, CallFunc_TryInteract_self_CastInput) == 0x000018, "Member 'PAWN_Hacker_Simple_C_TryEnterKeypadDigit::CallFunc_TryInteract_self_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryEnterKeypadDigit, CallFunc_TryInteract_InteractResults) == 0x000028, "Member 'PAWN_Hacker_Simple_C_TryEnterKeypadDigit::CallFunc_TryInteract_InteractResults' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryEnterKeypadDigit, CallFunc_IsPrimitiveInInteractRange_Result) == 0x000048, "Member 'PAWN_Hacker_Simple_C_TryEnterKeypadDigit::CallFunc_IsPrimitiveInInteractRange_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryEnterKeypadDigit, K2Node_DynamicCast_AsINTERACT_Keypad) == 0x000050, "Member 'PAWN_Hacker_Simple_C_TryEnterKeypadDigit::K2Node_DynamicCast_AsINTERACT_Keypad' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryEnterKeypadDigit, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'PAWN_Hacker_Simple_C_TryEnterKeypadDigit::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryCompleteTimedTutorials
// 0x00A0 (0x00A0 - 0x0000)
struct PAWN_Hacker_Simple_C_TryCompleteTimedTutorials final
{
public:
	int32                                         TutorialIndex;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentDuration;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_TutorialInstance               CurrentTutorial;                                   // 0x0018(0x0028)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_TutorialInstance               CallFunc_Array_Get_Item;                           // 0x0050(0x0028)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryCompleteTutorial_Result;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_TryCompleteTimedTutorials");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials) == 0x0000A0, "Wrong size on PAWN_Hacker_Simple_C_TryCompleteTimedTutorials");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, TutorialIndex) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::TutorialIndex' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, GameInstance) == 0x000008, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::GameInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, CurrentDuration) == 0x000010, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::CurrentDuration' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, CurrentTutorial) == 0x000018, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::CurrentTutorial' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, Temp_int_Variable) == 0x000040, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000049, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, CallFunc_Array_Get_Item) == 0x000050, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, CallFunc_TryCompleteTutorial_Result) == 0x000078, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::CallFunc_TryCompleteTutorial_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, CallFunc_Array_LastIndex_ReturnValue) == 0x00007C, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, CallFunc_GetGameInstance_ReturnValue) == 0x000080, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, K2Node_DynamicCast_AsGI_Single_Player) == 0x000088, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000094, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryCompleteTimedTutorials, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000098, "Member 'PAWN_Hacker_Simple_C_TryCompleteTimedTutorials::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryStartPeriodicTutorialTick
// 0x0028 (0x0028 - 0x0000)
struct PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick final
{
public:
	bool                                          CallFunc_HasAnyActiveTimedTutorials_Result;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick) == 0x000028, "Wrong size on PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick, CallFunc_HasAnyActiveTimedTutorials_Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick::CallFunc_HasAnyActiveTimedTutorials_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'PAWN_Hacker_Simple_C_TryStartPeriodicTutorialTick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryStopPeriodicTutorialTick
// 0x0003 (0x0003 - 0x0000)
struct PAWN_Hacker_Simple_C_TryStopPeriodicTutorialTick final
{
public:
	bool                                          CallFunc_HasAnyActiveTimedTutorials_Result;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryStopPeriodicTutorialTick) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_TryStopPeriodicTutorialTick");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryStopPeriodicTutorialTick) == 0x000003, "Wrong size on PAWN_Hacker_Simple_C_TryStopPeriodicTutorialTick");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopPeriodicTutorialTick, CallFunc_HasAnyActiveTimedTutorials_Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryStopPeriodicTutorialTick::CallFunc_HasAnyActiveTimedTutorials_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopPeriodicTutorialTick, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'PAWN_Hacker_Simple_C_TryStopPeriodicTutorialTick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryStopPeriodicTutorialTick, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000002, "Member 'PAWN_Hacker_Simple_C_TryStopPeriodicTutorialTick::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryPressKeypadClear
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Hacker_Simple_C_TryPressKeypadClear final
{
public:
	class AINTERACT_Keypad_C*                     K2Node_DynamicCast_AsINTERACT_Keypad;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPrimitiveInInteractRange_Result;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryPressKeypadClear_Result;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryPressKeypadClear) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_TryPressKeypadClear");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryPressKeypadClear) == 0x000010, "Wrong size on PAWN_Hacker_Simple_C_TryPressKeypadClear");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryPressKeypadClear, K2Node_DynamicCast_AsINTERACT_Keypad) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryPressKeypadClear::K2Node_DynamicCast_AsINTERACT_Keypad' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryPressKeypadClear, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'PAWN_Hacker_Simple_C_TryPressKeypadClear::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryPressKeypadClear, CallFunc_IsPrimitiveInInteractRange_Result) == 0x000009, "Member 'PAWN_Hacker_Simple_C_TryPressKeypadClear::CallFunc_IsPrimitiveInInteractRange_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryPressKeypadClear, CallFunc_TryPressKeypadClear_Result) == 0x00000A, "Member 'PAWN_Hacker_Simple_C_TryPressKeypadClear::CallFunc_TryPressKeypadClear_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryPressKeypadEraseLast
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Hacker_Simple_C_TryPressKeypadEraseLast final
{
public:
	class AINTERACT_Keypad_C*                     K2Node_DynamicCast_AsINTERACT_Keypad;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPrimitiveInInteractRange_Result;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryPressKeypadEraseLast_Result;           // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryPressKeypadEraseLast) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_TryPressKeypadEraseLast");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryPressKeypadEraseLast) == 0x000010, "Wrong size on PAWN_Hacker_Simple_C_TryPressKeypadEraseLast");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryPressKeypadEraseLast, K2Node_DynamicCast_AsINTERACT_Keypad) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryPressKeypadEraseLast::K2Node_DynamicCast_AsINTERACT_Keypad' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryPressKeypadEraseLast, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'PAWN_Hacker_Simple_C_TryPressKeypadEraseLast::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryPressKeypadEraseLast, CallFunc_IsPrimitiveInInteractRange_Result) == 0x000009, "Member 'PAWN_Hacker_Simple_C_TryPressKeypadEraseLast::CallFunc_IsPrimitiveInInteractRange_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryPressKeypadEraseLast, CallFunc_TryPressKeypadEraseLast_Result) == 0x00000A, "Member 'PAWN_Hacker_Simple_C_TryPressKeypadEraseLast::CallFunc_TryPressKeypadEraseLast_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMousePitch
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMousePitch final
{
public:
	float                                         NewPitch;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMousePitch) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMousePitch");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMousePitch) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_HandleMousePitch");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMousePitch, NewPitch) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMousePitch::NewPitch' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMouseYaw
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMouseYaw final
{
public:
	float                                         NewYaw;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMouseYaw) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMouseYaw");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMouseYaw) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_HandleMouseYaw");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMouseYaw, NewYaw) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMouseYaw::NewYaw' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleZoom
// 0x0050 (0x0050 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleZoom final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    NeuralHUD;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_HotbarStyle                              CallFunc_GetHotbarStyle_Result;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CycleEquippedWeapon_Success;              // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CycleEquippedWeapon_Success_1;            // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleZoom) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleZoom");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleZoom) == 0x000050, "Wrong size on PAWN_Hacker_Simple_C_HandleZoom");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, AxisValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleZoom::AxisValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, NeuralHUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleZoom::NeuralHUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HandleZoom::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleZoom::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, CallFunc_IsVisible_ReturnValue) == 0x000019, "Member 'PAWN_Hacker_Simple_C_HandleZoom::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, K2Node_DynamicCast_AsINTERF_HUD) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HandleZoom::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'PAWN_Hacker_Simple_C_HandleZoom::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, CallFunc_GetMainMenuWidget_Result) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleZoom::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleZoom::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, CallFunc_GetHotbarStyle_Result) == 0x000048, "Member 'PAWN_Hacker_Simple_C_HandleZoom::CallFunc_GetHotbarStyle_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'PAWN_Hacker_Simple_C_HandleZoom::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, CallFunc_Not_PreBool_ReturnValue) == 0x00004A, "Member 'PAWN_Hacker_Simple_C_HandleZoom::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x00004B, "Member 'PAWN_Hacker_Simple_C_HandleZoom::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_HandleZoom::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, CallFunc_CycleEquippedWeapon_Success) == 0x00004D, "Member 'PAWN_Hacker_Simple_C_HandleZoom::CallFunc_CycleEquippedWeapon_Success' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00004E, "Member 'PAWN_Hacker_Simple_C_HandleZoom::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleZoom, CallFunc_CycleEquippedWeapon_Success_1) == 0x00004F, "Member 'PAWN_Hacker_Simple_C_HandleZoom::CallFunc_CycleEquippedWeapon_Success_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetDisplayMeshComponent
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Hacker_Simple_C_GetDisplayMeshComponent final
{
public:
	class USkeletalMeshComponent*                 MeshComponent;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetDisplayMeshComponent) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GetDisplayMeshComponent");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetDisplayMeshComponent) == 0x000008, "Wrong size on PAWN_Hacker_Simple_C_GetDisplayMeshComponent");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetDisplayMeshComponent, MeshComponent) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetDisplayMeshComponent::MeshComponent' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryAddDisplayMeshAttachment
// 0x0120 (0x0120 - 0x0000)
struct PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment final
{
public:
	class UStaticMesh*                            Mesh_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             AttachTransform;                                   // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	class FName                                   SocketName;                                        // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable;                              // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCustomPrimitiveDataFloat_ReturnValue;  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0094(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment) == 0x000010, "Wrong alignment on PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment) == 0x000120, "Wrong size on PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment, Mesh_0) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment::Mesh_0' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment, AttachTransform) == 0x000010, "Member 'PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment::AttachTransform' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment, SocketName) == 0x000040, "Member 'PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment::SocketName' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment, StaticMeshComponent) == 0x000048, "Member 'PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment::StaticMeshComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment, Temp_struct_Variable) == 0x000050, "Member 'PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment, CallFunc_AddComponent_ReturnValue) == 0x000088, "Member 'PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment, CallFunc_GetCustomPrimitiveDataFloat_ReturnValue) == 0x000090, "Member 'PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment::CallFunc_GetCustomPrimitiveDataFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000094, "Member 'PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment, CallFunc_SetStaticMesh_ReturnValue) == 0x00011C, "Member 'PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00011D, "Member 'PAWN_Hacker_Simple_C_TryAddDisplayMeshAttachment::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.DestroyDisplayMeshAttachments
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetChildComponentsByClass_ReturnValue;    // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments");
static_assert(sizeof(PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments) == 0x000038, "Wrong size on PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments");
static_assert(offsetof(PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments, Temp_int_Array_Index_Variable) == 0x000000, "Member 'PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments, CallFunc_GetChildComponentsByClass_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments::CallFunc_GetChildComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments, CallFunc_Array_Get_Item) == 0x000028, "Member 'PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_DestroyDisplayMeshAttachments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InitializeGender
// 0x0040 (0x0040 - 0x0000)
struct PAWN_Hacker_Simple_C_InitializeGender final
{
public:
	bool                                          UseCleanMaterial;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_2;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_HackerGender                             CallFunc_GetHackerGender_Result;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InitializeGender) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InitializeGender");
static_assert(sizeof(PAWN_Hacker_Simple_C_InitializeGender) == 0x000040, "Wrong size on PAWN_Hacker_Simple_C_InitializeGender");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeGender, UseCleanMaterial) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InitializeGender::UseCleanMaterial' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeGender, CallFunc_GetMaterial_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_InitializeGender::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeGender, CallFunc_GetMaterial_ReturnValue_1) == 0x000010, "Member 'PAWN_Hacker_Simple_C_InitializeGender::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeGender, CallFunc_GetMaterial_ReturnValue_2) == 0x000018, "Member 'PAWN_Hacker_Simple_C_InitializeGender::CallFunc_GetMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeGender, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_InitializeGender::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeGender, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'PAWN_Hacker_Simple_C_InitializeGender::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeGender, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'PAWN_Hacker_Simple_C_InitializeGender::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeGender, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'PAWN_Hacker_Simple_C_InitializeGender::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeGender, CallFunc_GetHackerGender_Result) == 0x000039, "Member 'PAWN_Hacker_Simple_C_InitializeGender::CallFunc_GetHackerGender_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeGender, K2Node_SwitchEnum_CmpSuccess) == 0x00003A, "Member 'PAWN_Hacker_Simple_C_InitializeGender::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InitializeAttributes
// 0x0058 (0x0058 - 0x0000)
struct PAWN_Hacker_Simple_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue_1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue_2;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue_3;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InitializeAttributes) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InitializeAttributes");
static_assert(sizeof(PAWN_Hacker_Simple_C_InitializeAttributes) == 0x000058, "Wrong size on PAWN_Hacker_Simple_C_InitializeAttributes");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'PAWN_Hacker_Simple_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'PAWN_Hacker_Simple_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate_3) == 0x000030, "Member 'PAWN_Hacker_Simple_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue_1) == 0x000044, "Member 'PAWN_Hacker_Simple_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue_2) == 0x000048, "Member 'PAWN_Hacker_Simple_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue_3) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeAttributes, CallFunc_ApplyMod_ReturnValue) == 0x000050, "Member 'PAWN_Hacker_Simple_C_InitializeAttributes::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InitializeSavedOptions
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Hacker_Simple_C_InitializeSavedOptions final
{
public:
	class USAVE_Settings_C*                       SaveObject;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InitializeSavedOptions) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InitializeSavedOptions");
static_assert(sizeof(PAWN_Hacker_Simple_C_InitializeSavedOptions) == 0x000010, "Wrong size on PAWN_Hacker_Simple_C_InitializeSavedOptions");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeSavedOptions, SaveObject) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InitializeSavedOptions::SaveObject' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeSavedOptions, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000008, "Member 'PAWN_Hacker_Simple_C_InitializeSavedOptions::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.SetPostProccessEnabled
// 0x000C (0x000C - 0x0000)
struct PAWN_Hacker_Simple_C_SetPostProccessEnabled final
{
public:
	ENUM_PostProcessingOptions                    Option;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPostProccessEnabled;                             // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_SetPostProccessEnabled) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_SetPostProccessEnabled");
static_assert(sizeof(PAWN_Hacker_Simple_C_SetPostProccessEnabled) == 0x00000C, "Wrong size on PAWN_Hacker_Simple_C_SetPostProccessEnabled");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetPostProccessEnabled, Option) == 0x000000, "Member 'PAWN_Hacker_Simple_C_SetPostProccessEnabled::Option' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetPostProccessEnabled, IsPostProccessEnabled) == 0x000001, "Member 'PAWN_Hacker_Simple_C_SetPostProccessEnabled::IsPostProccessEnabled' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetPostProccessEnabled, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'PAWN_Hacker_Simple_C_SetPostProccessEnabled::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetPostProccessEnabled, CallFunc_SelectFloat_ReturnValue) == 0x000004, "Member 'PAWN_Hacker_Simple_C_SetPostProccessEnabled::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetPostProccessEnabled, CallFunc_SelectFloat_ReturnValue_1) == 0x000008, "Member 'PAWN_Hacker_Simple_C_SetPostProccessEnabled::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetPostProccessEnabled
// 0x0005 (0x0005 - 0x0000)
struct PAWN_Hacker_Simple_C_GetPostProccessEnabled final
{
public:
	ENUM_PostProcessingOptions                    Option;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Value;                                             // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetPostProccessEnabled) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_GetPostProccessEnabled");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetPostProccessEnabled) == 0x000005, "Wrong size on PAWN_Hacker_Simple_C_GetPostProccessEnabled");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPostProccessEnabled, Option) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetPostProccessEnabled::Option' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPostProccessEnabled, Value) == 0x000001, "Member 'PAWN_Hacker_Simple_C_GetPostProccessEnabled::Value' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPostProccessEnabled, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'PAWN_Hacker_Simple_C_GetPostProccessEnabled::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPostProccessEnabled, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000003, "Member 'PAWN_Hacker_Simple_C_GetPostProccessEnabled::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetPostProccessEnabled, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000004, "Member 'PAWN_Hacker_Simple_C_GetPostProccessEnabled::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.EVENT_OnLBPChanged
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Hacker_Simple_C_EVENT_OnLBPChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             HazardMod;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_GetActiveModWithCategory_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_EVENT_OnLBPChanged) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_EVENT_OnLBPChanged");
static_assert(sizeof(PAWN_Hacker_Simple_C_EVENT_OnLBPChanged) == 0x000020, "Wrong size on PAWN_Hacker_Simple_C_EVENT_OnLBPChanged");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnLBPChanged, CurrValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_EVENT_OnLBPChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnLBPChanged, LastValue) == 0x000004, "Member 'PAWN_Hacker_Simple_C_EVENT_OnLBPChanged::LastValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnLBPChanged, HazardMod) == 0x000008, "Member 'PAWN_Hacker_Simple_C_EVENT_OnLBPChanged::HazardMod' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnLBPChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_EVENT_OnLBPChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnLBPChanged, CallFunc_GetActiveModWithCategory_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_EVENT_OnLBPChanged::CallFunc_GetActiveModWithCategory_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleKeyboardMove
// 0x0048 (0x0048 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleKeyboardMove final
{
public:
	ENUM_CardinalDirection                        Direction;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDown;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DeltaValue;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_CardinalDirection                        Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_3;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleKeyboardMove) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_HandleKeyboardMove");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleKeyboardMove) == 0x000048, "Wrong size on PAWN_Hacker_Simple_C_HandleKeyboardMove");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, Direction) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::Direction' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, IsDown) == 0x000001, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::IsDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, DeltaValue) == 0x000004, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::DeltaValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, Temp_int_Variable) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, Temp_float_Variable) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, Temp_float_Variable_1) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, Temp_float_Variable_2) == 0x000014, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, Temp_byte_Variable) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, Temp_int_Variable_1) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, Temp_float_Variable_3) == 0x00002C, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, Temp_float_Variable_4) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00003C, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardMove, K2Node_Select_Default) == 0x000044, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardMove::K2Node_Select_Default' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleKeyboardLean
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleKeyboardLean final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDown;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction;          // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction_1;        // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveActionChanged_Result;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveActionChanged_Result_1;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleKeyboardLean) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_HandleKeyboardLean");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleKeyboardLean) == 0x000038, "Wrong size on PAWN_Hacker_Simple_C_HandleKeyboardLean");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardLean, Value) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardLean::Value' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardLean, IsDown) == 0x000004, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardLean::IsDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardLean, Temp_int_Variable) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardLean::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardLean, Temp_int_Variable_1) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardLean::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardLean, CallFunc_Greater_IntInt_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardLean::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardLean, K2Node_MakeStruct_STRUCT_MoveInputAction) == 0x000014, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardLean::K2Node_MakeStruct_STRUCT_MoveInputAction' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardLean, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardLean::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardLean, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardLean::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardLean, K2Node_MakeStruct_STRUCT_MoveInputAction_1) == 0x000024, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardLean::K2Node_MakeStruct_STRUCT_MoveInputAction_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardLean, CallFunc_MoveActionChanged_Result) == 0x00002C, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardLean::CallFunc_MoveActionChanged_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardLean, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardLean::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardLean, CallFunc_MoveActionChanged_Result_1) == 0x000034, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardLean::CallFunc_MoveActionChanged_Result_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleKeyboardInteract
// 0x0058 (0x0058 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleKeyboardInteract final
{
public:
	bool                                          IsDown;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable_1;        // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetChannelingHoldDuration_Result;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleKeyboardInteract) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleKeyboardInteract");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleKeyboardInteract) == 0x000058, "Wrong size on PAWN_Hacker_Simple_C_HandleKeyboardInteract");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, IsDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::IsDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, K2Node_DynamicCast_AsINTERF_Interactable) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, CallFunc_StopChanneling_Result) == 0x000019, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::CallFunc_StopChanneling_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, K2Node_DynamicCast_AsINTERF_Interactable_1) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::K2Node_DynamicCast_AsINTERF_Interactable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, CallFunc_GetChannelingHoldDuration_Result) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::CallFunc_GetChannelingHoldDuration_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, K2Node_DynamicCast_AsCON_Hacker) == 0x000048, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, CallFunc_IsUsingGamepad_Result) == 0x000051, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::CallFunc_IsUsingGamepad_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000052, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, CallFunc_Not_PreBool_ReturnValue) == 0x000053, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleKeyboardInteract, CallFunc_IsValid_ReturnValue) == 0x000054, "Member 'PAWN_Hacker_Simple_C_HandleKeyboardInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GamepadInteract
// 0x0070 (0x0070 - 0x0000)
struct PAWN_Hacker_Simple_C_GamepadInteract final
{
public:
	bool                                          IsDown;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable_1;        // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetChannelingHoldDuration_Result;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUsingGamepad_Result;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsScannerDisabled_Result;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GamepadInteract) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GamepadInteract");
static_assert(sizeof(PAWN_Hacker_Simple_C_GamepadInteract) == 0x000070, "Wrong size on PAWN_Hacker_Simple_C_GamepadInteract");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, IsDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::IsDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, K2Node_DynamicCast_AsINTERF_Interactable) == 0x000008, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, CallFunc_StopChanneling_Result) == 0x000019, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::CallFunc_StopChanneling_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, K2Node_DynamicCast_AsINTERF_Interactable_1) == 0x000020, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::K2Node_DynamicCast_AsINTERF_Interactable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, CallFunc_GetChannelingHoldDuration_Result) == 0x000040, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::CallFunc_GetChannelingHoldDuration_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, K2Node_DynamicCast_AsCON_Hacker) == 0x000048, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, CallFunc_IsUsingGamepad_Result) == 0x000051, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::CallFunc_IsUsingGamepad_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000052, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, CallFunc_IsValid_ReturnValue) == 0x000053, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, CallFunc_IsScannerDisabled_Result) == 0x000054, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::CallFunc_IsScannerDisabled_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, CallFunc_GetController_ReturnValue_1) == 0x000058, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, K2Node_DynamicCast_AsPlayer_Controller) == 0x000060, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadInteract, CallFunc_BooleanNAND_ReturnValue) == 0x000069, "Member 'PAWN_Hacker_Simple_C_GamepadInteract::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.UpdateGamepadLook
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Hacker_Simple_C_UpdateGamepadLook final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAcceleratedGamepadInputRotation_Result; // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_UpdateGamepadLook) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_UpdateGamepadLook");
static_assert(sizeof(PAWN_Hacker_Simple_C_UpdateGamepadLook) == 0x000038, "Wrong size on PAWN_Hacker_Simple_C_UpdateGamepadLook");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadLook, DeltaTime) == 0x000000, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadLook::DeltaTime' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadLook, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadLook::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadLook, K2Node_DynamicCast_AsPlayer_Controller) == 0x000010, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadLook::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadLook, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadLook::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadLook, CallFunc_MakeVector2D_ReturnValue) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadLook::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadLook, CallFunc_GetAcceleratedGamepadInputRotation_Result) == 0x000024, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadLook::CallFunc_GetAcceleratedGamepadInputRotation_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadLook, CallFunc_BreakVector2D_X) == 0x00002C, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadLook::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadLook, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadLook::CallFunc_BreakVector2D_Y' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.UpdateGamepadCursor
// 0x0060 (0x0060 - 0x0000)
struct PAWN_Hacker_Simple_C_UpdateGamepadCursor final
{
public:
	float                                         CallFunc_GetRealTimeSeconds_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraPanelWidget*                     CallFunc_GetCameraPanelWidget_Result;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetVirtualMouseScreenLocation_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_UpdateGamepadCursor) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_UpdateGamepadCursor");
static_assert(sizeof(PAWN_Hacker_Simple_C_UpdateGamepadCursor) == 0x000060, "Wrong size on PAWN_Hacker_Simple_C_UpdateGamepadCursor");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, CallFunc_GetRealTimeSeconds_ReturnValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::CallFunc_GetRealTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000010, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, K2Node_DynamicCast_AsPlayer_Controller) == 0x000018, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, K2Node_DynamicCast_AsINTERF_HUD) == 0x000028, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, CallFunc_GetCameraPanelWidget_Result) == 0x000040, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::CallFunc_GetCameraPanelWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, CallFunc_GetVirtualMouseScreenLocation_ReturnValue) == 0x000050, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::CallFunc_GetVirtualMouseScreenLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateGamepadCursor, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'PAWN_Hacker_Simple_C_UpdateGamepadCursor::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.UpdateMoveControls
// 0x0028 (0x0028 - 0x0000)
struct PAWN_Hacker_Simple_C_UpdateMoveControls final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LookYaw;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_UpdateMoveControls) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_UpdateMoveControls");
static_assert(sizeof(PAWN_Hacker_Simple_C_UpdateMoveControls) == 0x000028, "Wrong size on PAWN_Hacker_Simple_C_UpdateMoveControls");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateMoveControls, DeltaTime) == 0x000000, "Member 'PAWN_Hacker_Simple_C_UpdateMoveControls::DeltaTime' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateMoveControls, LookYaw) == 0x000004, "Member 'PAWN_Hacker_Simple_C_UpdateMoveControls::LookYaw' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateMoveControls, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_UpdateMoveControls::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateMoveControls, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_UpdateMoveControls::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateMoveControls, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_UpdateMoveControls::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateMoveControls, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000018, "Member 'PAWN_Hacker_Simple_C_UpdateMoveControls::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateMoveControls, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_UpdateMoveControls::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateMoveControls, CallFunc_MakeVector2D_ReturnValue_1) == 0x000020, "Member 'PAWN_Hacker_Simple_C_UpdateMoveControls::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ClearMovementValues
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Hacker_Simple_C_ClearMovementValues final
{
public:
	bool                                          ClearMoveActions;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ClearMovementValues) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_ClearMovementValues");
static_assert(sizeof(PAWN_Hacker_Simple_C_ClearMovementValues) == 0x000001, "Wrong size on PAWN_Hacker_Simple_C_ClearMovementValues");
static_assert(offsetof(PAWN_Hacker_Simple_C_ClearMovementValues, ClearMoveActions) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ClearMovementValues::ClearMoveActions' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.SetJumpInputState
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_SetJumpInputState final
{
public:
	bool                                          InputState;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction;          // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction_1;        // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveActionChanged_Result;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MoveActionChanged_Result_1;               // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_SetJumpInputState) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_SetJumpInputState");
static_assert(sizeof(PAWN_Hacker_Simple_C_SetJumpInputState) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_SetJumpInputState");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetJumpInputState, InputState) == 0x000000, "Member 'PAWN_Hacker_Simple_C_SetJumpInputState::InputState' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetJumpInputState, K2Node_MakeStruct_STRUCT_MoveInputAction) == 0x000004, "Member 'PAWN_Hacker_Simple_C_SetJumpInputState::K2Node_MakeStruct_STRUCT_MoveInputAction' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetJumpInputState, K2Node_MakeStruct_STRUCT_MoveInputAction_1) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_SetJumpInputState::K2Node_MakeStruct_STRUCT_MoveInputAction_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetJumpInputState, CallFunc_MoveActionChanged_Result) == 0x000014, "Member 'PAWN_Hacker_Simple_C_SetJumpInputState::CallFunc_MoveActionChanged_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetJumpInputState, CallFunc_MoveActionChanged_Result_1) == 0x000015, "Member 'PAWN_Hacker_Simple_C_SetJumpInputState::CallFunc_MoveActionChanged_Result_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GamepadJump
// 0x0040 (0x0040 - 0x0000)
struct PAWN_Hacker_Simple_C_GamepadJump final
{
public:
	bool                                          IsDown;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GamepadJump) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GamepadJump");
static_assert(sizeof(PAWN_Hacker_Simple_C_GamepadJump) == 0x000040, "Wrong size on PAWN_Hacker_Simple_C_GamepadJump");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadJump, IsDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GamepadJump::IsDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadJump, K2Node_DynamicCast_AsINTERF_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_GamepadJump::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadJump, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_GamepadJump::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadJump, CallFunc_GetMainMenuWidget_Result) == 0x000020, "Member 'PAWN_Hacker_Simple_C_GamepadJump::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadJump, CallFunc_GetController_ReturnValue) == 0x000028, "Member 'PAWN_Hacker_Simple_C_GamepadJump::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadJump, K2Node_DynamicCast_AsPlayer_Controller) == 0x000030, "Member 'PAWN_Hacker_Simple_C_GamepadJump::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadJump, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'PAWN_Hacker_Simple_C_GamepadJump::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadJump, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'PAWN_Hacker_Simple_C_GamepadJump::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadJump, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003A, "Member 'PAWN_Hacker_Simple_C_GamepadJump::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.SetTryCrouch
// 0x0078 (0x0078 - 0x0000)
struct PAWN_Hacker_Simple_C_SetTryCrouch final
{
public:
	bool                                          IsTryingToCrouch;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCrouchToggle_Result;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings_1; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCrouchToggle_Result_1;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryCompleteTutorial_Result;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction;          // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction_1;        // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveActionChanged_Result;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MoveActionChanged_Result_1;               // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMoveActionInputValue_Value;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction_2;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveActionChanged_Result_2;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_SetTryCrouch) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_SetTryCrouch");
static_assert(sizeof(PAWN_Hacker_Simple_C_SetTryCrouch) == 0x000078, "Wrong size on PAWN_Hacker_Simple_C_SetTryCrouch");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, IsTryingToCrouch) == 0x000000, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::IsTryingToCrouch' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, Temp_float_Variable) == 0x000004, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, Temp_float_Variable_1) == 0x000008, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000010, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_GetCrouchToggle_Result) == 0x000018, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_GetCrouchToggle_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_GetShockSettingsForCurrentUser_Settings_1) == 0x000020, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_GetShockSettingsForCurrentUser_Settings_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_GetCrouchToggle_Result_1) == 0x000028, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_GetCrouchToggle_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, Temp_bool_Variable) == 0x000029, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_Not_PreBool_ReturnValue) == 0x00002A, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_GetGameInstance_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, K2Node_DynamicCast_AsGI_Single_Player) == 0x000038, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_TryCompleteTutorial_Result) == 0x000041, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_TryCompleteTutorial_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, K2Node_MakeStruct_STRUCT_MoveInputAction) == 0x000044, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::K2Node_MakeStruct_STRUCT_MoveInputAction' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, K2Node_MakeStruct_STRUCT_MoveInputAction_1) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::K2Node_MakeStruct_STRUCT_MoveInputAction_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_MoveActionChanged_Result) == 0x000054, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_MoveActionChanged_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_MoveActionChanged_Result_1) == 0x000055, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_MoveActionChanged_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_GetMoveActionInputValue_Value) == 0x000058, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_GetMoveActionInputValue_Value' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_Round_ReturnValue) == 0x00005C, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_Conv_IntToBool_ReturnValue) == 0x000060, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, K2Node_Select_Default) == 0x000064, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, K2Node_MakeStruct_STRUCT_MoveInputAction_2) == 0x000068, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::K2Node_MakeStruct_STRUCT_MoveInputAction_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryCrouch, CallFunc_MoveActionChanged_Result_2) == 0x000070, "Member 'PAWN_Hacker_Simple_C_SetTryCrouch::CallFunc_MoveActionChanged_Result_2' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.SetTryAimDownSights
// 0x0050 (0x0050 - 0x0000)
struct PAWN_Hacker_Simple_C_SetTryAimDownSights final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsGamepad;                                         // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShouldAim;                                         // 0x0002(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    NeuralHUD;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction;          // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMoveActionInputValue_Value;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_IntToBool_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFocusAimToggle_Result;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction_1;        // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveActionChanged_Result;                 // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MoveActionChanged_Result_1;               // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_SetTryAimDownSights) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_SetTryAimDownSights");
static_assert(sizeof(PAWN_Hacker_Simple_C_SetTryAimDownSights) == 0x000050, "Wrong size on PAWN_Hacker_Simple_C_SetTryAimDownSights");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, State) == 0x000000, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::State' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, IsGamepad) == 0x000001, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::IsGamepad' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, ShouldAim) == 0x000002, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::ShouldAim' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, NeuralHUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::NeuralHUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, K2Node_MakeStruct_STRUCT_MoveInputAction) == 0x000014, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::K2Node_MakeStruct_STRUCT_MoveInputAction' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, CallFunc_IsValid_ReturnValue_1) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000020, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, CallFunc_GetMoveActionInputValue_Value) == 0x00002C, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::CallFunc_GetMoveActionInputValue_Value' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, CallFunc_Round_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, CallFunc_Conv_IntToBool_ReturnValue) == 0x000034, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::CallFunc_Conv_IntToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, CallFunc_Not_PreBool_ReturnValue) == 0x000035, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, CallFunc_Not_PreBool_ReturnValue_1) == 0x000036, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000038, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, CallFunc_GetFocusAimToggle_Result) == 0x000040, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::CallFunc_GetFocusAimToggle_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, K2Node_MakeStruct_STRUCT_MoveInputAction_1) == 0x000044, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::K2Node_MakeStruct_STRUCT_MoveInputAction_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, CallFunc_MoveActionChanged_Result) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::CallFunc_MoveActionChanged_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetTryAimDownSights, CallFunc_MoveActionChanged_Result_1) == 0x00004D, "Member 'PAWN_Hacker_Simple_C_SetTryAimDownSights::CallFunc_MoveActionChanged_Result_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GamepadTryLeanToggle
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Hacker_Simple_C_GamepadTryLeanToggle final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MoveInputAction                K2Node_MakeStruct_STRUCT_MoveInputAction;          // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MoveActionChanged_Result;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GamepadTryLeanToggle) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_GamepadTryLeanToggle");
static_assert(sizeof(PAWN_Hacker_Simple_C_GamepadTryLeanToggle) == 0x000010, "Wrong size on PAWN_Hacker_Simple_C_GamepadTryLeanToggle");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryLeanToggle, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GamepadTryLeanToggle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryLeanToggle, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PAWN_Hacker_Simple_C_GamepadTryLeanToggle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryLeanToggle, K2Node_MakeStruct_STRUCT_MoveInputAction) == 0x000004, "Member 'PAWN_Hacker_Simple_C_GamepadTryLeanToggle::K2Node_MakeStruct_STRUCT_MoveInputAction' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryLeanToggle, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_GamepadTryLeanToggle::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryLeanToggle, CallFunc_MoveActionChanged_Result) == 0x00000D, "Member 'PAWN_Hacker_Simple_C_GamepadTryLeanToggle::CallFunc_MoveActionChanged_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryLeanToggle, CallFunc_BooleanAND_ReturnValue) == 0x00000E, "Member 'PAWN_Hacker_Simple_C_GamepadTryLeanToggle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GamepadTryCrouch
// 0x0060 (0x0060 - 0x0000)
struct PAWN_Hacker_Simple_C_GamepadTryCrouch final
{
public:
	bool                                          IsTryingToCrouch;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GamepadTryCrouch) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GamepadTryCrouch");
static_assert(sizeof(PAWN_Hacker_Simple_C_GamepadTryCrouch) == 0x000060, "Wrong size on PAWN_Hacker_Simple_C_GamepadTryCrouch");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, IsTryingToCrouch) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::IsTryingToCrouch' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, K2Node_DynamicCast_AsINTERF_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000020, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, CallFunc_GetMainMenuWidget_Result) == 0x000030, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, CallFunc_Not_PreBool_ReturnValue_1) == 0x000039, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, CallFunc_Not_PreBool_ReturnValue_2) == 0x00003A, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, CallFunc_GetController_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, CallFunc_Not_PreBool_ReturnValue_3) == 0x000048, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, K2Node_DynamicCast_AsPlayer_Controller) == 0x000050, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, CallFunc_BooleanAND_ReturnValue_1) == 0x00005A, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadTryCrouch, CallFunc_Not_PreBool_ReturnValue_4) == 0x00005B, "Member 'PAWN_Hacker_Simple_C_GamepadTryCrouch::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.PreAnimationTick
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Hacker_Simple_C_PreAnimationTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePaused_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_PreAnimationTick) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_PreAnimationTick");
static_assert(sizeof(PAWN_Hacker_Simple_C_PreAnimationTick) == 0x000008, "Wrong size on PAWN_Hacker_Simple_C_PreAnimationTick");
static_assert(offsetof(PAWN_Hacker_Simple_C_PreAnimationTick, DeltaTime) == 0x000000, "Member 'PAWN_Hacker_Simple_C_PreAnimationTick::DeltaTime' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PreAnimationTick, CallFunc_IsGamePaused_ReturnValue) == 0x000004, "Member 'PAWN_Hacker_Simple_C_PreAnimationTick::CallFunc_IsGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_PreAnimationTick, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'PAWN_Hacker_Simple_C_PreAnimationTick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.UpdateBodyRig
// 0x0130 (0x0130 - 0x0000)
struct PAWN_Hacker_Simple_C_UpdateBodyRig final
{
public:
	struct FVector                                HeadLocation;                                      // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker_1;         // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetWeaponOffset_Result;                   // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetCameraTarget_Result;                   // 0x012A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_UpdateBodyRig) == 0x000010, "Wrong alignment on PAWN_Hacker_Simple_C_UpdateBodyRig");
static_assert(sizeof(PAWN_Hacker_Simple_C_UpdateBodyRig) == 0x000130, "Wrong size on PAWN_Hacker_Simple_C_UpdateBodyRig");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, HeadLocation) == 0x000000, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::HeadLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_BreakTransform_Location) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_BreakTransform_Rotation) == 0x000058, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_BreakTransform_Scale) == 0x000064, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000070, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_BreakTransform_Location_1) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_BreakTransform_Rotation_1) == 0x0000AC, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_BreakTransform_Scale_1) == 0x0000B8, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C4, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000C8, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_MakeVector_ReturnValue) == 0x0000D4, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_Add_VectorVector_ReturnValue) == 0x0000E0, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_GetAnimInstance_ReturnValue) == 0x0000F0, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0000F8, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000100, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, K2Node_DynamicCast_AsINTERF_ANIM_Hacker_1) == 0x000118, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::K2Node_DynamicCast_AsINTERF_ANIM_Hacker_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_SetWeaponOffset_Result) == 0x000129, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_SetWeaponOffset_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateBodyRig, CallFunc_SetCameraTarget_Result) == 0x00012A, "Member 'PAWN_Hacker_Simple_C_UpdateBodyRig::CallFunc_SetCameraTarget_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.PostAnimationTick
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_PostAnimationTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_PostAnimationTick) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_PostAnimationTick");
static_assert(sizeof(PAWN_Hacker_Simple_C_PostAnimationTick) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_PostAnimationTick");
static_assert(offsetof(PAWN_Hacker_Simple_C_PostAnimationTick, DeltaTime) == 0x000000, "Member 'PAWN_Hacker_Simple_C_PostAnimationTick::DeltaTime' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.UpdateCameraAnimationOffset
// 0x01A0 (0x01A0 - 0x0000)
struct PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset final
{
public:
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NegateRotator_ReturnValue;                // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0084(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddWorldRotation_SweepHitResult;       // 0x0118(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset) == 0x000010, "Wrong alignment on PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset");
static_assert(sizeof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset) == 0x0001A0, "Wrong size on PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset, CallFunc_GetAttachParent_ReturnValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000014, "Member 'PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset, CallFunc_NegateRotator_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset::CallFunc_NegateRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset, CallFunc_BreakTransform_Location) == 0x000060, "Member 'PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000084, "Member 'PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset, CallFunc_ComposeRotators_ReturnValue) == 0x00010C, "Member 'PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset, CallFunc_K2_AddWorldRotation_SweepHitResult) == 0x000118, "Member 'PAWN_Hacker_Simple_C_UpdateCameraAnimationOffset::CallFunc_K2_AddWorldRotation_SweepHitResult' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.AddRecoil
// 0x0100 (0x0100 - 0x0000)
struct PAWN_Hacker_Simple_C_AddRecoil final
{
public:
	float                                         MaxPitch;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Magnitude;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RecenterDelay;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasKickback;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RecoilScale;                                       // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentPitch;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Ease_ReturnValue;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x006C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_AddRecoil) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_AddRecoil");
static_assert(sizeof(PAWN_Hacker_Simple_C_AddRecoil) == 0x000100, "Wrong size on PAWN_Hacker_Simple_C_AddRecoil");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, MaxPitch) == 0x000000, "Member 'PAWN_Hacker_Simple_C_AddRecoil::MaxPitch' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, Magnitude) == 0x000004, "Member 'PAWN_Hacker_Simple_C_AddRecoil::Magnitude' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, RecenterDelay) == 0x000008, "Member 'PAWN_Hacker_Simple_C_AddRecoil::RecenterDelay' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, HasKickback) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_AddRecoil::HasKickback' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, RecoilScale) == 0x000010, "Member 'PAWN_Hacker_Simple_C_AddRecoil::RecoilScale' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CurrentPitch) == 0x000014, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CurrentPitch' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00002C, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_BreakRotator_Roll_1) == 0x000034, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_BreakRotator_Pitch_1) == 0x000038, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_BreakRotator_Yaw_1) == 0x00003C, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_Ease_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000044, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000048, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_FInterpTo_ReturnValue) == 0x000050, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_RandomFloatInRange_ReturnValue) == 0x000054, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_MakeRotator_ReturnValue) == 0x00005C, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_Less_FloatFloat_ReturnValue) == 0x000068, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00006C, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_BreakRotator_Roll_2) == 0x0000F4, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_BreakRotator_Pitch_2) == 0x0000F8, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_AddRecoil, CallFunc_BreakRotator_Yaw_2) == 0x0000FC, "Member 'PAWN_Hacker_Simple_C_AddRecoil::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.UpdateRecoilRecentering
// 0x0154 (0x0154 - 0x0000)
struct PAWN_Hacker_Simple_C_UpdateRecoilRecentering final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeed;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedRecenterTime;                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TimeSinceLastRecoil;                               // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3[0x1];                                       // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_UpdateRecoilRecentering");
static_assert(sizeof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering) == 0x000154, "Wrong size on PAWN_Hacker_Simple_C_UpdateRecoilRecentering");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, DeltaTime) == 0x000000, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::DeltaTime' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, InterpSpeed) == 0x000004, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::InterpSpeed' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, ElapsedRecenterTime) == 0x000008, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::ElapsedRecenterTime' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, TimeSinceLastRecoil) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::TimeSinceLastRecoil' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_FMin_ReturnValue) == 0x000014, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_FInterpTo_ReturnValue) == 0x000024, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000028, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B1, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_BooleanAND_ReturnValue) == 0x0000B2, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B4, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_RInterpTo_ReturnValue) == 0x0000B8, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000C4, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000C8, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateRecoilRecentering, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000150, "Member 'PAWN_Hacker_Simple_C_UpdateRecoilRecentering::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.EVENT_OnGlobalTimeScaleChanged
// 0x0010 (0x0010 - 0x0000)
struct PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged");
static_assert(sizeof(PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged) == 0x000010, "Wrong size on PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged, CurrValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged, LastValue) == 0x000004, "Member 'PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged::LastValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_EVENT_OnGlobalTimeScaleChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.EVENT_OnDetoxRateChanged
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged");
static_assert(sizeof(PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged) == 0x000030, "Wrong size on PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged, CurrValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged, LastValue) == 0x000004, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged::LastValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000009, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxRateChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.EVENT_OnDetoxTick
// 0x0080 (0x0080 - 0x0000)
struct PAWN_Hacker_Simple_C_EVENT_OnDetoxTick final
{
public:
	class UAttribInstance*                        DrunkAttribInstance;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, class UAttributeDef*>       AttribCategoryMap;                                 // 0x0008(0x0050)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0068(0x0010)(ReferenceParm)
	int32                                         CallFunc_ExpireModsWithCategories_ReturnValue;     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_EVENT_OnDetoxTick) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_EVENT_OnDetoxTick");
static_assert(sizeof(PAWN_Hacker_Simple_C_EVENT_OnDetoxTick) == 0x000080, "Wrong size on PAWN_Hacker_Simple_C_EVENT_OnDetoxTick");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxTick, DrunkAttribInstance) == 0x000000, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxTick::DrunkAttribInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxTick, AttribCategoryMap) == 0x000008, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxTick::AttribCategoryMap' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxTick, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxTick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxTick, CallFunc_GetAttribInstance_ReturnValue) == 0x000060, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxTick::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxTick, CallFunc_Map_Keys_Keys) == 0x000068, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxTick::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxTick, CallFunc_ExpireModsWithCategories_ReturnValue) == 0x000078, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxTick::CallFunc_ExpireModsWithCategories_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnDetoxTick, CallFunc_Map_Remove_ReturnValue) == 0x00007C, "Member 'PAWN_Hacker_Simple_C_EVENT_OnDetoxTick::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnCharacterHurt
// 0x0078 (0x0078 - 0x0000)
struct PAWN_Hacker_Simple_C_OnCharacterHurt final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TotalDamage;                                       // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribDamageType*                      DamageType;                                        // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnCharacterHurt_Result;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_Focusable_Base_C*             K2Node_DynamicCast_AsINTERACT_Focusable_Base;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_StopChanneling_self_CastInput;            // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryApplyKnockbackFromDamage_Result;       // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnCharacterHurt) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_OnCharacterHurt");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnCharacterHurt) == 0x000078, "Wrong size on PAWN_Hacker_Simple_C_OnCharacterHurt");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, OtherActor) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::OtherActor' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, DamageInstance) == 0x000008, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::DamageInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, ImpactData) == 0x000030, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::ImpactData' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, Result) == 0x000038, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, TotalDamage) == 0x00003C, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::TotalDamage' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, DamageType) == 0x000040, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::DamageType' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, CallFunc_OnCharacterHurt_Result) == 0x000048, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::CallFunc_OnCharacterHurt_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, CallFunc_IsValid_ReturnValue) == 0x000049, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, K2Node_DynamicCast_AsINTERACT_Focusable_Base) == 0x000050, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::K2Node_DynamicCast_AsINTERACT_Focusable_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, CallFunc_StopChanneling_self_CastInput) == 0x000060, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::CallFunc_StopChanneling_self_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, CallFunc_StopChanneling_Result) == 0x000070, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::CallFunc_StopChanneling_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, CallFunc_TryApplyKnockbackFromDamage_Result) == 0x000071, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::CallFunc_TryApplyKnockbackFromDamage_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnCharacterHurt, CallFunc_Add_FloatFloat_ReturnValue) == 0x000074, "Member 'PAWN_Hacker_Simple_C_OnCharacterHurt::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.UpdateWeaponHeightOffset
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset final
{
public:
	float                                         VerticalFOV;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrHorizontalFOV;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CurrViewportSize;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ComputeVerticalFOV_ReturnValue;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqualExactly_Vector2DVector2D_ReturnValue; // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset");
static_assert(sizeof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset) == 0x000038, "Wrong size on PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset, VerticalFOV) == 0x000000, "Member 'PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset::VerticalFOV' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset, CurrHorizontalFOV) == 0x000004, "Member 'PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset::CurrHorizontalFOV' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset, CurrViewportSize) == 0x000008, "Member 'PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset::CurrViewportSize' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000014, "Member 'PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset, CallFunc_ComputeVerticalFOV_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset::CallFunc_ComputeVerticalFOV_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset, CallFunc_GetViewportSize_ReturnValue) == 0x00002C, "Member 'PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset, CallFunc_NotEqualExactly_Vector2DVector2D_ReturnValue) == 0x000034, "Member 'PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset::CallFunc_NotEqualExactly_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset, CallFunc_BooleanOR_ReturnValue) == 0x000035, "Member 'PAWN_Hacker_Simple_C_UpdateWeaponHeightOffset::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InitializePlayerAudio
// 0x0040 (0x0040 - 0x0000)
struct PAWN_Hacker_Simple_C_InitializePlayerAudio final
{
public:
	ENUM_HackerGender                             HackerGender;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_HackerGender                             Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_HackerGender                             CallFunc_GetHackerGender_Result;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InitializePlayerAudio) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InitializePlayerAudio");
static_assert(sizeof(PAWN_Hacker_Simple_C_InitializePlayerAudio) == 0x000040, "Wrong size on PAWN_Hacker_Simple_C_InitializePlayerAudio");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializePlayerAudio, HackerGender) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InitializePlayerAudio::HackerGender' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializePlayerAudio, Temp_object_Variable) == 0x000008, "Member 'PAWN_Hacker_Simple_C_InitializePlayerAudio::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializePlayerAudio, Temp_object_Variable_1) == 0x000010, "Member 'PAWN_Hacker_Simple_C_InitializePlayerAudio::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializePlayerAudio, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_InitializePlayerAudio::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializePlayerAudio, Temp_byte_Variable) == 0x000020, "Member 'PAWN_Hacker_Simple_C_InitializePlayerAudio::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializePlayerAudio, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'PAWN_Hacker_Simple_C_InitializePlayerAudio::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializePlayerAudio, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PAWN_Hacker_Simple_C_InitializePlayerAudio::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializePlayerAudio, CallFunc_GetHackerGender_Result) == 0x000031, "Member 'PAWN_Hacker_Simple_C_InitializePlayerAudio::CallFunc_GetHackerGender_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializePlayerAudio, K2Node_Select_Default) == 0x000038, "Member 'PAWN_Hacker_Simple_C_InitializePlayerAudio::K2Node_Select_Default' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnPossessedStateChange
// 0x0028 (0x0028 - 0x0000)
struct PAWN_Hacker_Simple_C_OnPossessedStateChange final
{
public:
	bool                                          IsPossessed;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnPossessedStateChange) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_OnPossessedStateChange");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnPossessedStateChange) == 0x000028, "Wrong size on PAWN_Hacker_Simple_C_OnPossessedStateChange");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnPossessedStateChange, IsPossessed) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnPossessedStateChange::IsPossessed' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnPossessedStateChange, Temp_byte_Variable) == 0x000001, "Member 'PAWN_Hacker_Simple_C_OnPossessedStateChange::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnPossessedStateChange, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000008, "Member 'PAWN_Hacker_Simple_C_OnPossessedStateChange::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnPossessedStateChange, Temp_byte_Variable_1) == 0x000010, "Member 'PAWN_Hacker_Simple_C_OnPossessedStateChange::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnPossessedStateChange, Temp_bool_Variable) == 0x000011, "Member 'PAWN_Hacker_Simple_C_OnPossessedStateChange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnPossessedStateChange, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'PAWN_Hacker_Simple_C_OnPossessedStateChange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnPossessedStateChange, K2Node_Select_Default) == 0x000013, "Member 'PAWN_Hacker_Simple_C_OnPossessedStateChange::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnPossessedStateChange, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000014, "Member 'PAWN_Hacker_Simple_C_OnPossessedStateChange::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnPossessedStateChange, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_OnPossessedStateChange::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.CaptureSceneFromPlayerCamera
// 0x00E0 (0x00E0 - 0x0000)
struct PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera final
{
public:
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               CaptureComponent;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48[0x8];                                       // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               CallFunc_AddComponent_ReturnValue;                 // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera) == 0x000010, "Wrong alignment on PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera");
static_assert(sizeof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera) == 0x0000E0, "Wrong size on PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, RenderTarget) == 0x000000, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::RenderTarget' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, CaptureComponent) == 0x000008, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::CaptureComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, CallFunc_GetController_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, K2Node_DynamicCast_AsPlayer_Controller) == 0x000080, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000090, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, CallFunc_GetViewportSize_SizeX) == 0x0000C0, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, CallFunc_GetViewportSize_SizeY) == 0x0000C4, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, CallFunc_AddComponent_ReturnValue) == 0x0000C8, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000D0, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000D1, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera, CallFunc_BooleanAND_ReturnValue) == 0x0000D2, "Member 'PAWN_Hacker_Simple_C_CaptureSceneFromPlayerCamera::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetInventoryComponent
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Hacker_Simple_C_GetInventoryComponent final
{
public:
	class UCOMP_Inventory_C*                      Inventory;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetInventoryComponent) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GetInventoryComponent");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetInventoryComponent) == 0x000008, "Wrong size on PAWN_Hacker_Simple_C_GetInventoryComponent");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetInventoryComponent, Inventory) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetInventoryComponent::Inventory' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.QuitGame
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_QuitGame final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_QuitGame) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_QuitGame");
static_assert(sizeof(PAWN_Hacker_Simple_C_QuitGame) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_QuitGame");
static_assert(offsetof(PAWN_Hacker_Simple_C_QuitGame, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_QuitGame::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_QuitGame, K2Node_DynamicCast_AsPlayer_Controller) == 0x000008, "Member 'PAWN_Hacker_Simple_C_QuitGame::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_QuitGame, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PAWN_Hacker_Simple_C_QuitGame::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GamepadCycleHotbarSlot
// 0x0060 (0x0060 - 0x0000)
struct PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot final
{
public:
	bool                                          Previous;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMFDState_IsMFDOpen;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_MFDTabCategory                           CallFunc_GetMFDState_CurrentMFDTab;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Focusable_Base_C*             K2Node_DynamicCast_AsINTERACT_Focusable_Base;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_HotbarStyle                              CallFunc_GetHotbarStyle_Result;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CycleEquippedWeapon_Success;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot");
static_assert(sizeof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot) == 0x000060, "Wrong size on PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, Previous) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::Previous' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, K2Node_DynamicCast_AsINTERF_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000020, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, CallFunc_GetMFDState_IsMFDOpen) == 0x000031, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::CallFunc_GetMFDState_IsMFDOpen' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, CallFunc_GetMFDState_CurrentMFDTab) == 0x000032, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::CallFunc_GetMFDState_CurrentMFDTab' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, CallFunc_GetMainMenuWidget_Result) == 0x000038, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x000041, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000048, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, K2Node_DynamicCast_AsINTERACT_Focusable_Base) == 0x000050, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::K2Node_DynamicCast_AsINTERACT_Focusable_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, CallFunc_GetHotbarStyle_Result) == 0x000059, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::CallFunc_GetHotbarStyle_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, CallFunc_Not_PreBool_ReturnValue_2) == 0x00005A, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00005B, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot, CallFunc_CycleEquippedWeapon_Success) == 0x00005C, "Member 'PAWN_Hacker_Simple_C_GamepadCycleHotbarSlot::CallFunc_CycleEquippedWeapon_Success' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.CanSaveGames
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Hacker_Simple_C_CanSaveGames final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_CanSaveGames) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_CanSaveGames");
static_assert(sizeof(PAWN_Hacker_Simple_C_CanSaveGames) == 0x000001, "Wrong size on PAWN_Hacker_Simple_C_CanSaveGames");
static_assert(offsetof(PAWN_Hacker_Simple_C_CanSaveGames, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_CanSaveGames::Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.CacheDermalPatchAttribCategories
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories final
{
public:
	const class UClass*                           Temp_class_Variable;                               // 0x0000(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UClass*                           Temp_class_Variable_1;                             // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UClass*                           Temp_class_Variable_2;                             // 0x0010(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UClass*                           Temp_class_Variable_3;                             // 0x0018(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UClass*                           Temp_class_Variable_4;                             // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UClass*                           Temp_class_Variable_5;                             // 0x0028(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories");
static_assert(sizeof(PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories) == 0x000030, "Wrong size on PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories");
static_assert(offsetof(PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories, Temp_class_Variable) == 0x000000, "Member 'PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories, Temp_class_Variable_1) == 0x000008, "Member 'PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories, Temp_class_Variable_2) == 0x000010, "Member 'PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories, Temp_class_Variable_3) == 0x000018, "Member 'PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories, Temp_class_Variable_4) == 0x000020, "Member 'PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories, Temp_class_Variable_5) == 0x000028, "Member 'PAWN_Hacker_Simple_C_CacheDermalPatchAttribCategories::Temp_class_Variable_5' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ApplyForceFeedback
// 0x0048 (0x0048 - 0x0000)
struct PAWN_Hacker_Simple_C_ApplyForceFeedback final
{
public:
	class UAttribDamageType*                      DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDamage;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackEffect*                   ForceFeedbackEffect;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_2;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_3;      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ApplyForceFeedback) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_ApplyForceFeedback");
static_assert(sizeof(PAWN_Hacker_Simple_C_ApplyForceFeedback) == 0x000048, "Wrong size on PAWN_Hacker_Simple_C_ApplyForceFeedback");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, DamageType) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::DamageType' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, TotalDamage) == 0x000008, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::TotalDamage' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, ForceFeedbackEffect) == 0x000010, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::ForceFeedbackEffect' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x00001A, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, CallFunc_NotEqual_ObjectObject_ReturnValue_2) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::CallFunc_NotEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, CallFunc_NotEqual_ObjectObject_ReturnValue_3) == 0x00001D, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::CallFunc_NotEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, CallFunc_BooleanAND_ReturnValue) == 0x00001E, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, CallFunc_BooleanAND_ReturnValue_1) == 0x00001F, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, CallFunc_BooleanAND_ReturnValue_2) == 0x000021, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, CallFunc_GetController_ReturnValue) == 0x000028, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000030, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, K2Node_DynamicCast_AsPlayer_Controller) == 0x000038, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyForceFeedback, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'PAWN_Hacker_Simple_C_ApplyForceFeedback::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GrantSpecificCharacterLoadout
// 0x0048 (0x0048 - 0x0000)
struct PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout final
{
public:
	struct FSTRUCT_CharacterLoadoutSettings       Loadout;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          K2Node_DynamicCast_AsCON_Hacker;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout");
static_assert(sizeof(PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout) == 0x000048, "Wrong size on PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout");
static_assert(offsetof(PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout, Loadout) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout::Loadout' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout, CallFunc_GetController_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout, K2Node_DynamicCast_AsCON_Hacker) == 0x000038, "Member 'PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout::K2Node_DynamicCast_AsCON_Hacker' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout, CallFunc_NotEqual_NameName_ReturnValue) == 0x000041, "Member 'PAWN_Hacker_Simple_C_GrantSpecificCharacterLoadout::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ApplyInstantHazardLevel
// 0x00B8 (0x00B8 - 0x0000)
struct PAWN_Hacker_Simple_C_ApplyInstantHazardLevel final
{
public:
	ENUM_HazardType                               HazardType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         HazardLevel;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAttribModApplyData                    BioPoisonMod;                                      // 0x0008(0x00A0)(Edit, BlueprintVisible)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_ByteToFloat_ReturnValue;             // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ApplyInstantHazardLevel) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_ApplyInstantHazardLevel");
static_assert(sizeof(PAWN_Hacker_Simple_C_ApplyInstantHazardLevel) == 0x0000B8, "Wrong size on PAWN_Hacker_Simple_C_ApplyInstantHazardLevel");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyInstantHazardLevel, HazardType) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ApplyInstantHazardLevel::HazardType' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyInstantHazardLevel, HazardLevel) == 0x000001, "Member 'PAWN_Hacker_Simple_C_ApplyInstantHazardLevel::HazardLevel' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyInstantHazardLevel, BioPoisonMod) == 0x000008, "Member 'PAWN_Hacker_Simple_C_ApplyInstantHazardLevel::BioPoisonMod' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyInstantHazardLevel, CallFunc_Greater_ByteByte_ReturnValue) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_ApplyInstantHazardLevel::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyInstantHazardLevel, CallFunc_Conv_ByteToFloat_ReturnValue) == 0x0000AC, "Member 'PAWN_Hacker_Simple_C_ApplyInstantHazardLevel::CallFunc_Conv_ByteToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyInstantHazardLevel, CallFunc_ApplyMod_ReturnValue) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_ApplyInstantHazardLevel::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnApplyHazardMods
// 0x0118 (0x0118 - 0x0000)
struct PAWN_Hacker_Simple_C_OnApplyHazardMods final
{
public:
	ENUM_HazardType                               HazardType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         HazardLevel;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HazardProtectionPercent;                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ScaledHazardLevel;                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             DamageMod;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHARDWARE_EnviroPack_Base_C*            EnviropackItem;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        HardwareBag;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribDamageType*                      BioDamageType;                                     // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribDamageType*                      Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribDamageType*                      Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribDamageType*                      Temp_object_Variable_2;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribDamageType*                      Temp_object_Variable_3;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribDamageType*                      Temp_object_Variable_4;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue_1;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_HazardType                               Temp_byte_Variable;                                // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHARDWARE_EnviroPack_Base_C*            K2Node_DynamicCast_AsHARDWARE_Enviro_Pack_Base;    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCurrentProtectionFromDamageType_ProtectPercent; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribDamageType*                      K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBagByType_Bag;                         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue_1;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue_2;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnApplyHazardMods) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_OnApplyHazardMods");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnApplyHazardMods) == 0x000118, "Wrong size on PAWN_Hacker_Simple_C_OnApplyHazardMods");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, HazardType) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::HazardType' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, HazardLevel) == 0x000001, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::HazardLevel' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, Result) == 0x000002, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, HazardProtectionPercent) == 0x000004, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::HazardProtectionPercent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, ScaledHazardLevel) == 0x000008, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::ScaledHazardLevel' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, DamageMod) == 0x000010, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::DamageMod' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, EnviropackItem) == 0x000018, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::EnviropackItem' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, HardwareBag) == 0x000020, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::HardwareBag' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, BioDamageType) == 0x000028, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::BioDamageType' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, Temp_object_Variable) == 0x000030, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Greater_ByteByte_ReturnValue) == 0x000038, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, Temp_object_Variable_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, Temp_int_Variable) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, Temp_object_Variable_2) == 0x000050, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, Temp_object_Variable_3) == 0x000058, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, Temp_bool_Variable) == 0x000060, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, Temp_object_Variable_4) == 0x000068, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Subtract_IntInt_ReturnValue) == 0x000070, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000074, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000078, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Greater_IntInt_ReturnValue) == 0x00007C, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_GetAttribValue_ReturnValue) == 0x000080, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000084, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_GetAttribValue_ReturnValue_1) == 0x000088, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_GetAttribValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, Temp_byte_Variable) == 0x00008C, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_FindItem_FoundItem) == 0x000090, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_FindItem_FoundItem' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000098, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, K2Node_DynamicCast_AsHARDWARE_Enviro_Pack_Base) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::K2Node_DynamicCast_AsHARDWARE_Enviro_Pack_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_GetCurrentProtectionFromDamageType_ProtectPercent) == 0x0000AC, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_GetCurrentProtectionFromDamageType_ProtectPercent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, K2Node_Select_Default) == 0x0000B8, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Min_ReturnValue) == 0x0000C0, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0000C4, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x0000C8, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0000CC, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_GetBagByType_Bag) == 0x0000D0, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_GetBagByType_Bag' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000D8, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Round_ReturnValue) == 0x0000DC, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Max_ReturnValue) == 0x0000E0, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_ApplyMod_ReturnValue) == 0x0000E8, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_IsValid_ReturnValue_2) == 0x0000F0, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, Temp_int_Variable_1) == 0x0000F4, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, K2Node_Select_Default_1) == 0x0000F8, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_ApplyMod_ReturnValue_1) == 0x000100, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_ApplyMod_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_ApplyMod_ReturnValue_2) == 0x000108, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_ApplyMod_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_IsActive_ReturnValue) == 0x000110, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_Not_PreBool_ReturnValue) == 0x000111, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnApplyHazardMods, CallFunc_IsValid_ReturnValue_3) == 0x000112, "Member 'PAWN_Hacker_Simple_C_OnApplyHazardMods::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnBioPoisoningChanged
// 0x00B0 (0x00B0 - 0x0000)
struct PAWN_Hacker_Simple_C_OnBioPoisoningChanged final
{
public:
	class UAttribMod*                             HazardMod;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrValue;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              MaintainCueToPlay;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRadiationDamage;                                 // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              Temp_object_Variable_2;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAudioComponentPlayState                      CallFunc_GetPlayState_ReturnValue;                 // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Temp_object_Variable_3;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Temp_object_Variable_4;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAgentOverlappingSpecificHazards_ReturnValue; // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAudioComponentPlayState                      CallFunc_GetPlayState_ReturnValue_1;               // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              Temp_object_Variable_5;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              K2Node_Select_Default_1;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAudioComponentPlayState                      CallFunc_GetPlayState_ReturnValue_2;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default_2;                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_OnBioPoisoningChanged");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged) == 0x0000B0, "Wrong size on PAWN_Hacker_Simple_C_OnBioPoisoningChanged");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, HazardMod) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::HazardMod' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CurrValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, LastValue) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::LastValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, MaintainCueToPlay) == 0x000010, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::MaintainCueToPlay' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, IsRadiationDamage) == 0x000018, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::IsRadiationDamage' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, Temp_object_Variable) == 0x000020, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_Less_FloatFloat_ReturnValue) == 0x000028, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000029, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_BooleanAND_ReturnValue) == 0x00002A, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, Temp_object_Variable_1) == 0x000030, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000038, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_FMin_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000045, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, Temp_object_Variable_2) == 0x000048, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, Temp_bool_Variable) == 0x000051, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, Temp_bool_Variable_1) == 0x000052, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_GetPlayState_ReturnValue) == 0x000053, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_GetPlayState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, K2Node_Select_Default) == 0x000058, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000060, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, Temp_object_Variable_3) == 0x000068, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, Temp_object_Variable_4) == 0x000070, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_SpawnSound2D_ReturnValue) == 0x000078, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000080, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_IsValid_ReturnValue_2) == 0x000081, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, Temp_bool_Variable_2) == 0x000082, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_IsAgentOverlappingSpecificHazards_ReturnValue) == 0x000083, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_IsAgentOverlappingSpecificHazards_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_GetPlayState_ReturnValue_1) == 0x000084, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_GetPlayState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, Temp_object_Variable_5) == 0x000088, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000090, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, K2Node_Select_Default_1) == 0x000098, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_GetPlayState_ReturnValue_2) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_GetPlayState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000A1, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0000A2, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, CallFunc_IsValid_ReturnValue_3) == 0x0000A3, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnBioPoisoningChanged, K2Node_Select_Default_2) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_OnBioPoisoningChanged::K2Node_Select_Default_2' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.IsOnFlatGroundForDeathAnimation
// 0x0210 (0x0210 - 0x0000)
struct PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        TraceLocations;                                    // 0x0008(0x0010)(Edit, BlueprintVisible)
	struct FVector                                SourceLocation;                                    // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVoxelLevelManager*                     LevelManager;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Zero_ReturnValue;                  // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetVoxelMeshSurfaceTransform_OutSurfaceTransform; // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetVoxelMeshSurfaceTransform_ReturnValue; // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AngleBetweenVectors_ReturnValue;          // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_156[0x2];                                      // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_Up_ReturnValue_1;                  // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AngleBetweenVectors_ReturnValue_1;        // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation) == 0x000010, "Wrong alignment on PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation");
static_assert(sizeof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation) == 0x000210, "Wrong size on PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, TraceLocations) == 0x000008, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::TraceLocations' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, SourceLocation) == 0x000018, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::SourceLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, LevelManager) == 0x000028, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::LevelManager' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, GameInstance) == 0x000030, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::GameInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_GetActorRightVector_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_Multiply_VectorInt_ReturnValue) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_Add_VectorVector_ReturnValue) == 0x000064, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, K2Node_MakeArray_Array) == 0x000070, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_Vector_Up_ReturnValue) == 0x000080, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_Vector_Zero_ReturnValue) == 0x00008C, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_Vector_Zero_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, Temp_int_Array_Index_Variable) == 0x000098, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_Array_Get_Item) == 0x00009C, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_GetVoxelMeshSurfaceTransform_OutSurfaceTransform) == 0x0000E0, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_GetVoxelMeshSurfaceTransform_OutSurfaceTransform' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_GetVoxelMeshSurfaceTransform_ReturnValue) == 0x000110, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_GetVoxelMeshSurfaceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, Temp_int_Loop_Counter_Variable) == 0x000114, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_Add_IntInt_ReturnValue) == 0x00011C, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakTransform_Location) == 0x000120, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakTransform_Rotation) == 0x00012C, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakTransform_Scale) == 0x000138, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_GetUpVector_ReturnValue) == 0x000144, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_AngleBetweenVectors_ReturnValue) == 0x000150, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_AngleBetweenVectors_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_IsValid_ReturnValue_1) == 0x000154, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000155, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_Vector_Up_ReturnValue_1) == 0x000158, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_Vector_Up_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_bBlockingHit) == 0x000164, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_bInitialOverlap) == 0x000165, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_Time) == 0x000168, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_Distance) == 0x00016C, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_ImpactPoint) == 0x00017C, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_Normal) == 0x000188, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_ImpactNormal) == 0x000194, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_PhysMat) == 0x0001A0, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_HitActor) == 0x0001A8, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_HitComponent) == 0x0001B0, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_HitBoneName) == 0x0001B8, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_HitItem) == 0x0001C0, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_ElementIndex) == 0x0001C4, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_FaceIndex) == 0x0001C8, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_TraceStart) == 0x0001CC, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_BreakHitResult_TraceEnd) == 0x0001D8, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_AngleBetweenVectors_ReturnValue_1) == 0x0001E4, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_AngleBetweenVectors_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_GetGameInstance_ReturnValue) == 0x0001E8, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001F0, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, K2Node_DynamicCast_AsGI_Single_Player) == 0x0001F8, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'PAWN_Hacker_Simple_C_IsOnFlatGroundForDeathAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleDeathPhysicsOrAnimation
// 0x0018 (0x0018 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation final
{
public:
	class UAttribDamageType*                      DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOnFlatGroundForDeathAnimation_Result;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCrouchingOrTransitioning_Result;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_ForceBeginAction_Action;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation) == 0x000018, "Wrong size on PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation, DamageType) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation::DamageType' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation, CallFunc_IsOnFlatGroundForDeathAnimation_Result) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation::CallFunc_IsOnFlatGroundForDeathAnimation_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation, CallFunc_IsCrouchingOrTransitioning_Result) == 0x00000A, "Member 'PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation::CallFunc_IsCrouchingOrTransitioning_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation, CallFunc_ForceBeginAction_Action) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HandleDeathPhysicsOrAnimation::CallFunc_ForceBeginAction_Action' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.EVENT_OnWalkableFloorAngleChanged
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Hacker_Simple_C_EVENT_OnWalkableFloorAngleChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_EVENT_OnWalkableFloorAngleChanged) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_EVENT_OnWalkableFloorAngleChanged");
static_assert(sizeof(PAWN_Hacker_Simple_C_EVENT_OnWalkableFloorAngleChanged) == 0x000008, "Wrong size on PAWN_Hacker_Simple_C_EVENT_OnWalkableFloorAngleChanged");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnWalkableFloorAngleChanged, CurrValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_EVENT_OnWalkableFloorAngleChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnWalkableFloorAngleChanged, LastValue) == 0x000004, "Member 'PAWN_Hacker_Simple_C_EVENT_OnWalkableFloorAngleChanged::LastValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMenuNavUp
// 0x00C8 (0x00C8 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMenuNavUp final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_2;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Focusable_Base_C*             K2Node_DynamicCast_AsINTERACT_Focusable_Base;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD_1;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput;          // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput_1;        // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMenuNavUp) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMenuNavUp");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMenuNavUp) == 0x0000C8, "Wrong size on PAWN_Hacker_Simple_C_HandleMenuNavUp");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, ButtonDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, K2Node_DynamicCast_AsINTERF_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, CallFunc_GetMainMenuWidget_Result) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, CallFunc_GetMainMenuWidget_Result_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x000048, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, CallFunc_GetMainMenuWidget_Result_2) == 0x000060, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::CallFunc_GetMainMenuWidget_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, K2Node_DynamicCast_AsINTERACT_Focusable_Base) == 0x000068, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::K2Node_DynamicCast_AsINTERACT_Focusable_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000078, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, K2Node_DynamicCast_bSuccess_4) == 0x000080, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, K2Node_DynamicCast_AsWIDGET_Player_HUD_1) == 0x000088, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::K2Node_DynamicCast_AsWIDGET_Player_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, K2Node_DynamicCast_bSuccess_5) == 0x000090, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, CallFunc_InvokeNavManager_self_CastInput) == 0x000098, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::CallFunc_InvokeNavManager_self_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, CallFunc_InvokeNavManager_Result) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::CallFunc_InvokeNavManager_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, CallFunc_InvokeNavManager_self_CastInput_1) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::CallFunc_InvokeNavManager_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, CallFunc_InvokeNavManager_Result_1) == 0x0000C0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::CallFunc_InvokeNavManager_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavUp, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavUp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMenuNavDown
// 0x00C8 (0x00C8 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMenuNavDown final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_2;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Focusable_Base_C*             K2Node_DynamicCast_AsINTERACT_Focusable_Base;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD_1;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput;          // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput_1;        // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMenuNavDown) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMenuNavDown");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMenuNavDown) == 0x0000C8, "Wrong size on PAWN_Hacker_Simple_C_HandleMenuNavDown");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, ButtonDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, K2Node_DynamicCast_AsINTERF_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, CallFunc_GetMainMenuWidget_Result) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, CallFunc_GetMainMenuWidget_Result_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x000048, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, CallFunc_GetMainMenuWidget_Result_2) == 0x000060, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::CallFunc_GetMainMenuWidget_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, K2Node_DynamicCast_AsINTERACT_Focusable_Base) == 0x000068, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::K2Node_DynamicCast_AsINTERACT_Focusable_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000078, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, K2Node_DynamicCast_bSuccess_4) == 0x000080, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, K2Node_DynamicCast_AsWIDGET_Player_HUD_1) == 0x000088, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::K2Node_DynamicCast_AsWIDGET_Player_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, K2Node_DynamicCast_bSuccess_5) == 0x000090, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, CallFunc_InvokeNavManager_self_CastInput) == 0x000098, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::CallFunc_InvokeNavManager_self_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, CallFunc_InvokeNavManager_Result) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::CallFunc_InvokeNavManager_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, CallFunc_InvokeNavManager_self_CastInput_1) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::CallFunc_InvokeNavManager_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, CallFunc_InvokeNavManager_Result_1) == 0x0000C0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::CallFunc_InvokeNavManager_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavDown, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavDown::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMenuNavLeft
// 0x00C8 (0x00C8 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMenuNavLeft final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput;          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD_1;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput_1;        // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_2;               // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Focusable_Base_C*             K2Node_DynamicCast_AsINTERACT_Focusable_Base;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMenuNavLeft) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMenuNavLeft");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMenuNavLeft) == 0x0000C8, "Wrong size on PAWN_Hacker_Simple_C_HandleMenuNavLeft");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, ButtonDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, CallFunc_InvokeNavManager_self_CastInput) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::CallFunc_InvokeNavManager_self_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, CallFunc_InvokeNavManager_Result) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::CallFunc_InvokeNavManager_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, K2Node_DynamicCast_AsWIDGET_Player_HUD_1) == 0x000030, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::K2Node_DynamicCast_AsWIDGET_Player_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, CallFunc_InvokeNavManager_self_CastInput_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::CallFunc_InvokeNavManager_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, CallFunc_InvokeNavManager_Result_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::CallFunc_InvokeNavManager_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, K2Node_DynamicCast_AsINTERF_HUD) == 0x000058, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, CallFunc_GetMainMenuWidget_Result) == 0x000070, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000078, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x000090, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, CallFunc_GetMainMenuWidget_Result_1) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, CallFunc_GetMainMenuWidget_Result_2) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::CallFunc_GetMainMenuWidget_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, K2Node_DynamicCast_AsINTERACT_Focusable_Base) == 0x0000B8, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::K2Node_DynamicCast_AsINTERACT_Focusable_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, K2Node_DynamicCast_bSuccess_5) == 0x0000C0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavLeft, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavLeft::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMenuNavRight
// 0x00C8 (0x00C8 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMenuNavRight final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput;          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD_1;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput_1;        // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_2;               // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Focusable_Base_C*             K2Node_DynamicCast_AsINTERACT_Focusable_Base;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMenuNavRight) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMenuNavRight");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMenuNavRight) == 0x0000C8, "Wrong size on PAWN_Hacker_Simple_C_HandleMenuNavRight");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, ButtonDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, CallFunc_InvokeNavManager_self_CastInput) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::CallFunc_InvokeNavManager_self_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, CallFunc_InvokeNavManager_Result) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::CallFunc_InvokeNavManager_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, K2Node_DynamicCast_AsWIDGET_Player_HUD_1) == 0x000030, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::K2Node_DynamicCast_AsWIDGET_Player_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, CallFunc_InvokeNavManager_self_CastInput_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::CallFunc_InvokeNavManager_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, CallFunc_InvokeNavManager_Result_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::CallFunc_InvokeNavManager_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, K2Node_DynamicCast_AsINTERF_HUD) == 0x000058, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, CallFunc_GetMainMenuWidget_Result) == 0x000070, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000078, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, K2Node_DynamicCast_bSuccess_3) == 0x000088, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x000090, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, K2Node_DynamicCast_bSuccess_4) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, CallFunc_GetMainMenuWidget_Result_1) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, CallFunc_GetMainMenuWidget_Result_2) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::CallFunc_GetMainMenuWidget_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, K2Node_DynamicCast_AsINTERACT_Focusable_Base) == 0x0000B8, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::K2Node_DynamicCast_AsINTERACT_Focusable_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, K2Node_DynamicCast_bSuccess_5) == 0x0000C0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavRight, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavRight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMenuNavAccept
// 0x00B8 (0x00B8 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMenuNavAccept final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput;          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD_1;          // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_2;               // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput_1;        // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result_1;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMenuNavAccept) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMenuNavAccept");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMenuNavAccept) == 0x0000B8, "Wrong size on PAWN_Hacker_Simple_C_HandleMenuNavAccept");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, ButtonDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, CallFunc_InvokeNavManager_self_CastInput) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::CallFunc_InvokeNavManager_self_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, CallFunc_InvokeNavManager_Result) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::CallFunc_InvokeNavManager_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, K2Node_DynamicCast_AsINTERF_HUD) == 0x000030, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, CallFunc_GetMainMenuWidget_Result) == 0x000048, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, CallFunc_GetMainMenuWidget_Result_1) == 0x000068, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x000070, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, K2Node_DynamicCast_AsWIDGET_Player_HUD_1) == 0x000088, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::K2Node_DynamicCast_AsWIDGET_Player_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, K2Node_DynamicCast_bSuccess_4) == 0x000090, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, CallFunc_GetMainMenuWidget_Result_2) == 0x000098, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::CallFunc_GetMainMenuWidget_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, CallFunc_InvokeNavManager_self_CastInput_1) == 0x0000A0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::CallFunc_InvokeNavManager_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, CallFunc_InvokeNavManager_Result_1) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::CallFunc_InvokeNavManager_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAccept, CallFunc_Not_PreBool_ReturnValue) == 0x0000B1, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAccept::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMenuNavBack
// 0x0090 (0x0090 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMenuNavBack final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStopFocusingOnInteract_Result;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_2;               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_3;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMenuNavBack) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMenuNavBack");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMenuNavBack) == 0x000090, "Wrong size on PAWN_Hacker_Simple_C_HandleMenuNavBack");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, ButtonDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, CallFunc_TryStopFocusingOnInteract_Result) == 0x000001, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::CallFunc_TryStopFocusingOnInteract_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, K2Node_DynamicCast_AsINTERF_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, CallFunc_GetMainMenuWidget_Result) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, CallFunc_GetMainMenuWidget_Result_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x000048, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000060, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, CallFunc_GetMainMenuWidget_Result_2) == 0x000070, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::CallFunc_GetMainMenuWidget_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, K2Node_DynamicCast_AsINTERF_HUD_3) == 0x000078, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::K2Node_DynamicCast_AsINTERF_HUD_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, K2Node_DynamicCast_bSuccess_4) == 0x000088, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, CallFunc_InvokeNavManager_Result) == 0x000089, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::CallFunc_InvokeNavManager_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavBack, CallFunc_Not_PreBool_ReturnValue) == 0x00008A, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavBack::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.BindCharacterEvents
// 0x0014 (0x0014 - 0x0000)
struct PAWN_Hacker_Simple_C_BindCharacterEvents final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_BindCharacterEvents) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_BindCharacterEvents");
static_assert(sizeof(PAWN_Hacker_Simple_C_BindCharacterEvents) == 0x000014, "Wrong size on PAWN_Hacker_Simple_C_BindCharacterEvents");
static_assert(offsetof(PAWN_Hacker_Simple_C_BindCharacterEvents, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'PAWN_Hacker_Simple_C_BindCharacterEvents::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_BindCharacterEvents, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_BindCharacterEvents::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMenuNavAlt1
// 0x0098 (0x0098 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMenuNavAlt1 final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput;          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_2;               // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMenuNavAlt1");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1) == 0x000098, "Wrong size on PAWN_Hacker_Simple_C_HandleMenuNavAlt1");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, ButtonDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, CallFunc_InvokeNavManager_self_CastInput) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::CallFunc_InvokeNavManager_self_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, CallFunc_InvokeNavManager_Result) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::CallFunc_InvokeNavManager_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, K2Node_DynamicCast_AsINTERF_HUD) == 0x000030, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, CallFunc_GetMainMenuWidget_Result) == 0x000048, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x000068, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, CallFunc_GetMainMenuWidget_Result_1) == 0x000080, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, CallFunc_GetMainMenuWidget_Result_2) == 0x000088, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::CallFunc_GetMainMenuWidget_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt1, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt1::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMenuNavAlt2
// 0x0098 (0x0098 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMenuNavAlt2 final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput;          // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_2;               // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMenuNavAlt2");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2) == 0x000098, "Wrong size on PAWN_Hacker_Simple_C_HandleMenuNavAlt2");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, ButtonDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, CallFunc_InvokeNavManager_self_CastInput) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::CallFunc_InvokeNavManager_self_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, CallFunc_InvokeNavManager_Result) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::CallFunc_InvokeNavManager_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, K2Node_DynamicCast_AsINTERF_HUD) == 0x000030, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, CallFunc_GetMainMenuWidget_Result) == 0x000048, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x000068, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, K2Node_DynamicCast_bSuccess_3) == 0x000078, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, CallFunc_GetMainMenuWidget_Result_1) == 0x000080, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, CallFunc_GetMainMenuWidget_Result_2) == 0x000088, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::CallFunc_GetMainMenuWidget_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt2, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt2::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMenuNavAlt3
// 0x00C0 (0x00C0 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMenuNavAlt3 final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD_1;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput;          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput_1;        // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_2;               // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMenuNavAlt3");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3) == 0x0000C0, "Wrong size on PAWN_Hacker_Simple_C_HandleMenuNavAlt3");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, ButtonDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, K2Node_DynamicCast_AsWIDGET_Player_HUD_1) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::K2Node_DynamicCast_AsWIDGET_Player_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, CallFunc_InvokeNavManager_self_CastInput) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::CallFunc_InvokeNavManager_self_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, CallFunc_InvokeNavManager_Result) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::CallFunc_InvokeNavManager_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, CallFunc_InvokeNavManager_self_CastInput_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::CallFunc_InvokeNavManager_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, CallFunc_InvokeNavManager_Result_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::CallFunc_InvokeNavManager_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, K2Node_DynamicCast_AsINTERF_HUD) == 0x000058, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000070, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, CallFunc_GetMainMenuWidget_Result) == 0x000088, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, CallFunc_GetMainMenuWidget_Result_1) == 0x000090, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x000098, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, CallFunc_GetMainMenuWidget_Result_2) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::CallFunc_GetMainMenuWidget_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt3, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt3::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMenuNavAlt4
// 0x00C0 (0x00C0 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMenuNavAlt4 final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD;            // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    K2Node_DynamicCast_AsWIDGET_Player_HUD_1;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput;          // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         CallFunc_InvokeNavManager_self_CastInput_1;        // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InvokeNavManager_Result_1;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_2;                 // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_2;               // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMenuNavAlt4");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4) == 0x0000C0, "Wrong size on PAWN_Hacker_Simple_C_HandleMenuNavAlt4");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, ButtonDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, K2Node_DynamicCast_AsWIDGET_Player_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::K2Node_DynamicCast_AsWIDGET_Player_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, K2Node_DynamicCast_AsWIDGET_Player_HUD_1) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::K2Node_DynamicCast_AsWIDGET_Player_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, CallFunc_InvokeNavManager_self_CastInput) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::CallFunc_InvokeNavManager_self_CastInput' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, CallFunc_InvokeNavManager_Result) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::CallFunc_InvokeNavManager_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, CallFunc_InvokeNavManager_self_CastInput_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::CallFunc_InvokeNavManager_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, CallFunc_InvokeNavManager_Result_1) == 0x000050, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::CallFunc_InvokeNavManager_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, K2Node_DynamicCast_AsINTERF_HUD) == 0x000058, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, K2Node_DynamicCast_bSuccess_2) == 0x000068, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000070, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, K2Node_DynamicCast_bSuccess_3) == 0x000080, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, CallFunc_GetMainMenuWidget_Result) == 0x000088, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, CallFunc_GetMainMenuWidget_Result_1) == 0x000090, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, K2Node_DynamicCast_AsINTERF_HUD_2) == 0x000098, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::K2Node_DynamicCast_AsINTERF_HUD_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, K2Node_DynamicCast_bSuccess_4) == 0x0000A8, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, CallFunc_GetMainMenuWidget_Result_2) == 0x0000B0, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::CallFunc_GetMainMenuWidget_Result_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavAlt4, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavAlt4::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMenuNavTabLeft
// 0x0050 (0x0050 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMenuNavTabLeft final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMenuNavTabLeft) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMenuNavTabLeft");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMenuNavTabLeft) == 0x000050, "Wrong size on PAWN_Hacker_Simple_C_HandleMenuNavTabLeft");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabLeft, ButtonDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabLeft::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabLeft, K2Node_DynamicCast_AsINTERF_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabLeft::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabLeft, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabLeft::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabLeft, CallFunc_GetMainMenuWidget_Result) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabLeft::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabLeft, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabLeft::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabLeft, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabLeft::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabLeft, CallFunc_GetMainMenuWidget_Result_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabLeft::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabLeft, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabLeft::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HandleMenuNavTabRight
// 0x0050 (0x0050 - 0x0000)
struct PAWN_Hacker_Simple_C_HandleMenuNavTabRight final
{
public:
	bool                                          ButtonDown;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD_1;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result_1;               // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HandleMenuNavTabRight) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HandleMenuNavTabRight");
static_assert(sizeof(PAWN_Hacker_Simple_C_HandleMenuNavTabRight) == 0x000050, "Wrong size on PAWN_Hacker_Simple_C_HandleMenuNavTabRight");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabRight, ButtonDown) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabRight::ButtonDown' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabRight, K2Node_DynamicCast_AsINTERF_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabRight::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabRight, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabRight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabRight, CallFunc_GetMainMenuWidget_Result) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabRight::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabRight, K2Node_DynamicCast_AsINTERF_HUD_1) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabRight::K2Node_DynamicCast_AsINTERF_HUD_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabRight, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabRight::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabRight, CallFunc_GetMainMenuWidget_Result_1) == 0x000040, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabRight::CallFunc_GetMainMenuWidget_Result_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HandleMenuNavTabRight, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'PAWN_Hacker_Simple_C_HandleMenuNavTabRight::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.UpdatePsychosisEffect
// 0x0128 (0x0128 - 0x0000)
struct PAWN_Hacker_Simple_C_UpdatePsychosisEffect final
{
public:
	bool                                          Activate;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UNiagaraSystem>          PsychosisEffect;                                   // 0x0008(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCurrentLevelName_Result;               // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_LevelInfo                      CallFunc_GetLevelInfo_LevelInfo;                   // 0x0058(0x00C8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetLevelInfo_Found;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_UpdatePsychosisEffect) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_UpdatePsychosisEffect");
static_assert(sizeof(PAWN_Hacker_Simple_C_UpdatePsychosisEffect) == 0x000128, "Wrong size on PAWN_Hacker_Simple_C_UpdatePsychosisEffect");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdatePsychosisEffect, Activate) == 0x000000, "Member 'PAWN_Hacker_Simple_C_UpdatePsychosisEffect::Activate' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdatePsychosisEffect, PsychosisEffect) == 0x000008, "Member 'PAWN_Hacker_Simple_C_UpdatePsychosisEffect::PsychosisEffect' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdatePsychosisEffect, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_UpdatePsychosisEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdatePsychosisEffect, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'PAWN_Hacker_Simple_C_UpdatePsychosisEffect::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdatePsychosisEffect, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'PAWN_Hacker_Simple_C_UpdatePsychosisEffect::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdatePsychosisEffect, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'PAWN_Hacker_Simple_C_UpdatePsychosisEffect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdatePsychosisEffect, CallFunc_GetCurrentLevelName_Result) == 0x00004C, "Member 'PAWN_Hacker_Simple_C_UpdatePsychosisEffect::CallFunc_GetCurrentLevelName_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdatePsychosisEffect, CallFunc_GetLevelInfo_LevelInfo) == 0x000058, "Member 'PAWN_Hacker_Simple_C_UpdatePsychosisEffect::CallFunc_GetLevelInfo_LevelInfo' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdatePsychosisEffect, CallFunc_GetLevelInfo_Found) == 0x000120, "Member 'PAWN_Hacker_Simple_C_UpdatePsychosisEffect::CallFunc_GetLevelInfo_Found' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.CreatePlayerHUD
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Hacker_Simple_C_CreatePlayerHUD final
{
public:
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_CreatePlayerHUD) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_CreatePlayerHUD");
static_assert(sizeof(PAWN_Hacker_Simple_C_CreatePlayerHUD) == 0x000020, "Wrong size on PAWN_Hacker_Simple_C_CreatePlayerHUD");
static_assert(offsetof(PAWN_Hacker_Simple_C_CreatePlayerHUD, CallFunc_GetController_ReturnValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_CreatePlayerHUD::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CreatePlayerHUD, K2Node_DynamicCast_AsPlayer_Controller) == 0x000008, "Member 'PAWN_Hacker_Simple_C_CreatePlayerHUD::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CreatePlayerHUD, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PAWN_Hacker_Simple_C_CreatePlayerHUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_CreatePlayerHUD, CallFunc_Create_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_CreatePlayerHUD::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.RestoreDefaultMeshTransform
// 0x0088 (0x0088 - 0x0000)
struct PAWN_Hacker_Simple_C_RestoreDefaultMeshTransform final
{
public:
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PAWN_Hacker_Simple_C_RestoreDefaultMeshTransform) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_RestoreDefaultMeshTransform");
static_assert(sizeof(PAWN_Hacker_Simple_C_RestoreDefaultMeshTransform) == 0x000088, "Wrong size on PAWN_Hacker_Simple_C_RestoreDefaultMeshTransform");
static_assert(offsetof(PAWN_Hacker_Simple_C_RestoreDefaultMeshTransform, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000000, "Member 'PAWN_Hacker_Simple_C_RestoreDefaultMeshTransform::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.SyncGlobalTimeDilation
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_SyncGlobalTimeDilation final
{
public:
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_SyncGlobalTimeDilation) == 0x000004, "Wrong alignment on PAWN_Hacker_Simple_C_SyncGlobalTimeDilation");
static_assert(sizeof(PAWN_Hacker_Simple_C_SyncGlobalTimeDilation) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_SyncGlobalTimeDilation");
static_assert(offsetof(PAWN_Hacker_Simple_C_SyncGlobalTimeDilation, CallFunc_GetAttribValue_ReturnValue) == 0x000000, "Member 'PAWN_Hacker_Simple_C_SyncGlobalTimeDilation::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnRespawnHacker
// 0x0290 (0x0290 - 0x0000)
struct PAWN_Hacker_Simple_C_OnRespawnHacker final
{
public:
	struct FVector                                SpawnLocation;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SpawnRotation;                                     // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         RespawnHealthPercent;                              // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxHealth;                                         // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WalkSpeed;                                         // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviousEnergy;                                    // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UAttributeDef*>                  Temp_object_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0054(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnCharacterRespawned_Result;              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartTrackingLocation_ReturnValue;        // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBaseValue_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue_1;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetBaseValue_ReturnValue_1;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player_1;           // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultAttribute                      K2Node_MakeStruct_DefaultAttribute;                // 0x0140(0x0048)(HasGetValueTypeHash)
	struct FSTRUCT_CombatDifficultySettings       CallFunc_GetCombatDifficultySettings_Settings;     // 0x0188(0x0034)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultAttribute                      K2Node_MakeStruct_DefaultAttribute_1;              // 0x01C0(0x0048)(HasGetValueTypeHash)
	TArray<struct FEnumHandle>                    K2Node_MakeArray_Array;                            // 0x0208(0x0010)(ConstParm, ReferenceParm)
	struct FDefaultAttribute                      K2Node_MakeStruct_DefaultAttribute_2;              // 0x0218(0x0048)(HasGetValueTypeHash)
	TArray<struct FDefaultAttribute>              K2Node_MakeArray_Array_1;                          // 0x0260(0x0010)(ConstParm, ReferenceParm)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Hacker_C> K2Node_DynamicCast_AsINTERF_ANIM_Hacker;           // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetUseIK_Result;                          // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnRespawnHacker) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_OnRespawnHacker");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnRespawnHacker) == 0x000290, "Wrong size on PAWN_Hacker_Simple_C_OnRespawnHacker");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, SpawnLocation) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::SpawnLocation' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, SpawnRotation) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::SpawnRotation' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, RespawnHealthPercent) == 0x000018, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::RespawnHealthPercent' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, MaxHealth) == 0x00001C, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::MaxHealth' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, WalkSpeed) == 0x000020, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::WalkSpeed' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, PreviousEnergy) == 0x000024, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::PreviousEnergy' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, Temp_object_Variable) == 0x000028, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_GetGameInstance_ReturnValue) == 0x000040, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_DynamicCast_AsGI_Single_Player) == 0x000048, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000054, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000DC, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_DynamicCast_AsINTERF_HUD) == 0x0000E0, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_OnCharacterRespawned_Result) == 0x0000F1, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_OnCharacterRespawned_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_StartTrackingLocation_ReturnValue) == 0x0000F2, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_StartTrackingLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_GetAttribInstance_ReturnValue) == 0x0000F8, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_GetBaseValue_ReturnValue) == 0x000100, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_GetBaseValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_GetAttribInstance_ReturnValue_1) == 0x000108, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_GetAttribInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_Round_ReturnValue) == 0x000110, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_GetBaseValue_ReturnValue_1) == 0x000114, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_GetBaseValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_GetAttribValue_ReturnValue) == 0x000118, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00011C, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_GetGameInstance_ReturnValue_1) == 0x000120, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000128, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_DynamicCast_AsGI_Single_Player_1) == 0x000130, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_DynamicCast_AsGI_Single_Player_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_DynamicCast_bSuccess_2) == 0x000138, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_MakeStruct_DefaultAttribute) == 0x000140, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_MakeStruct_DefaultAttribute' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_GetCombatDifficultySettings_Settings) == 0x000188, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_GetCombatDifficultySettings_Settings' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_MakeStruct_DefaultAttribute_1) == 0x0001C0, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_MakeStruct_DefaultAttribute_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_MakeArray_Array) == 0x000208, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_MakeStruct_DefaultAttribute_2) == 0x000218, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_MakeStruct_DefaultAttribute_2' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_MakeArray_Array_1) == 0x000260, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_GetAnimInstance_ReturnValue) == 0x000270, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_DynamicCast_AsINTERF_ANIM_Hacker) == 0x000278, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_DynamicCast_AsINTERF_ANIM_Hacker' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, K2Node_DynamicCast_bSuccess_3) == 0x000288, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000289, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnRespawnHacker, CallFunc_SetUseIK_Result) == 0x00028A, "Member 'PAWN_Hacker_Simple_C_OnRespawnHacker::CallFunc_SetUseIK_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.HasQueuedOrActiveCinematicAction
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CurrentAction;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMontage_Result;                        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCinematicMontage_Result;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterAction_C*                     CallFunc_GetCurrentAction_CurrentAction;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasQueuedCinematicHeroicAction_Result;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction");
static_assert(sizeof(PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction) == 0x000038, "Wrong size on PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction, CurrentAction) == 0x000008, "Member 'PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction::CurrentAction' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction, HackerPawn) == 0x000010, "Member 'PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction::HackerPawn' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction, CallFunc_GetMontage_Result) == 0x000018, "Member 'PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction::CallFunc_GetMontage_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction, CallFunc_IsCinematicMontage_Result) == 0x000021, "Member 'PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction::CallFunc_IsCinematicMontage_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction, CallFunc_GetCurrentAction_CurrentAction) == 0x000028, "Member 'PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction::CallFunc_GetCurrentAction_CurrentAction' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction, CallFunc_HasQueuedCinematicHeroicAction_Result) == 0x000030, "Member 'PAWN_Hacker_Simple_C_HasQueuedOrActiveCinematicAction::CallFunc_HasQueuedCinematicHeroicAction_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InitializeEmissiveStrength
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Hacker_Simple_C_InitializeEmissiveStrength final
{
public:
	bool                                          BeginPlay;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InitializeEmissiveStrength) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_InitializeEmissiveStrength");
static_assert(sizeof(PAWN_Hacker_Simple_C_InitializeEmissiveStrength) == 0x000001, "Wrong size on PAWN_Hacker_Simple_C_InitializeEmissiveStrength");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeEmissiveStrength, BeginPlay) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InitializeEmissiveStrength::BeginPlay' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.SetEmissiveStrength
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Hacker_Simple_C_SetEmissiveStrength final
{
public:
	float                                         Strength;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_GetChildComponentsByClass_ReturnValue;    // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_SetEmissiveStrength) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_SetEmissiveStrength");
static_assert(sizeof(PAWN_Hacker_Simple_C_SetEmissiveStrength) == 0x000038, "Wrong size on PAWN_Hacker_Simple_C_SetEmissiveStrength");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetEmissiveStrength, Strength) == 0x000000, "Member 'PAWN_Hacker_Simple_C_SetEmissiveStrength::Strength' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetEmissiveStrength, Temp_int_Array_Index_Variable) == 0x000004, "Member 'PAWN_Hacker_Simple_C_SetEmissiveStrength::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetEmissiveStrength, CallFunc_MakeVector2D_ReturnValue) == 0x000008, "Member 'PAWN_Hacker_Simple_C_SetEmissiveStrength::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetEmissiveStrength, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PAWN_Hacker_Simple_C_SetEmissiveStrength::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetEmissiveStrength, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'PAWN_Hacker_Simple_C_SetEmissiveStrength::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetEmissiveStrength, CallFunc_GetChildComponentsByClass_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_SetEmissiveStrength::CallFunc_GetChildComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetEmissiveStrength, CallFunc_Array_Get_Item) == 0x000028, "Member 'PAWN_Hacker_Simple_C_SetEmissiveStrength::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetEmissiveStrength, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_SetEmissiveStrength::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_SetEmissiveStrength, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'PAWN_Hacker_Simple_C_SetEmissiveStrength::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.EVENT_OnChannelingInteractEndPlay
// 0x0028 (0x0028 - 0x0000)
struct PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                Reason;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StopChanneling_Result;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay");
static_assert(sizeof(PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay) == 0x000028, "Wrong size on PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay, Actor) == 0x000000, "Member 'PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay::Actor' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay, Reason) == 0x000008, "Member 'PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay::Reason' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay, K2Node_DynamicCast_AsINTERF_Interactable) == 0x000010, "Member 'PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay, CallFunc_StopChanneling_Result) == 0x000022, "Member 'PAWN_Hacker_Simple_C_EVENT_OnChannelingInteractEndPlay::CallFunc_StopChanneling_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryLeaveCurrentLevel
// 0x0001 (0x0001 - 0x0000)
struct PAWN_Hacker_Simple_C_TryLeaveCurrentLevel final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryLeaveCurrentLevel) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_TryLeaveCurrentLevel");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryLeaveCurrentLevel) == 0x000001, "Wrong size on PAWN_Hacker_Simple_C_TryLeaveCurrentLevel");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryLeaveCurrentLevel, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryLeaveCurrentLevel::Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InitializeControllerConnection
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Hacker_Simple_C_InitializeControllerConnection final
{
public:
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool ControllerConnectedState)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InitializeControllerConnection) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_InitializeControllerConnection");
static_assert(sizeof(PAWN_Hacker_Simple_C_InitializeControllerConnection) == 0x000030, "Wrong size on PAWN_Hacker_Simple_C_InitializeControllerConnection");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeControllerConnection, GameInstance) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InitializeControllerConnection::GameInstance' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeControllerConnection, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'PAWN_Hacker_Simple_C_InitializeControllerConnection::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeControllerConnection, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_InitializeControllerConnection::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeControllerConnection, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'PAWN_Hacker_Simple_C_InitializeControllerConnection::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeControllerConnection, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PAWN_Hacker_Simple_C_InitializeControllerConnection::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnControllerConnectionStateChange
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Hacker_Simple_C_OnControllerConnectionStateChange final
{
public:
	bool                                          ControllerConnectedState;                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              MainMenuWidget;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_MainMenu_InGame_C*              CallFunc_GetMainMenuWidget_Result;                 // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnControllerConnectionStateChange) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_OnControllerConnectionStateChange");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnControllerConnectionStateChange) == 0x000038, "Wrong size on PAWN_Hacker_Simple_C_OnControllerConnectionStateChange");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnControllerConnectionStateChange, ControllerConnectedState) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnControllerConnectionStateChange::ControllerConnectedState' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnControllerConnectionStateChange, MainMenuWidget) == 0x000008, "Member 'PAWN_Hacker_Simple_C_OnControllerConnectionStateChange::MainMenuWidget' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnControllerConnectionStateChange, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_OnControllerConnectionStateChange::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnControllerConnectionStateChange, K2Node_DynamicCast_AsINTERF_HUD) == 0x000018, "Member 'PAWN_Hacker_Simple_C_OnControllerConnectionStateChange::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnControllerConnectionStateChange, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PAWN_Hacker_Simple_C_OnControllerConnectionStateChange::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnControllerConnectionStateChange, CallFunc_GetMainMenuWidget_Result) == 0x000030, "Member 'PAWN_Hacker_Simple_C_OnControllerConnectionStateChange::CallFunc_GetMainMenuWidget_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ReceiveAnimationMessage
// 0x0030 (0x0030 - 0x0000)
struct PAWN_Hacker_Simple_C_ReceiveAnimationMessage final
{
public:
	EActorMessagePriority                         Priority;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_Result;           // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_Channeling_Base_C*            K2Node_DynamicCast_AsINTERACT_Channeling_Base;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveAnimationMessage_Result_1;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_ReceiveAnimationMessage");
static_assert(sizeof(PAWN_Hacker_Simple_C_ReceiveAnimationMessage) == 0x000030, "Wrong size on PAWN_Hacker_Simple_C_ReceiveAnimationMessage");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveAnimationMessage, Priority) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ReceiveAnimationMessage::Priority' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveAnimationMessage, Message) == 0x000008, "Member 'PAWN_Hacker_Simple_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveAnimationMessage, ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_ReceiveAnimationMessage::ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_ReturnValue) == 0x000019, "Member 'PAWN_Hacker_Simple_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result) == 0x00001A, "Member 'PAWN_Hacker_Simple_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveAnimationMessage, K2Node_DynamicCast_AsINTERACT_Channeling_Base) == 0x000020, "Member 'PAWN_Hacker_Simple_C_ReceiveAnimationMessage::K2Node_DynamicCast_AsINTERACT_Channeling_Base' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveAnimationMessage, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PAWN_Hacker_Simple_C_ReceiveAnimationMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ReceiveAnimationMessage, CallFunc_ReceiveAnimationMessage_Result_1) == 0x000029, "Member 'PAWN_Hacker_Simple_C_ReceiveAnimationMessage::CallFunc_ReceiveAnimationMessage_Result_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ShouldSaveActor
// 0x0038 (0x0038 - 0x0000)
struct PAWN_Hacker_Simple_C_ShouldSaveActor final
{
public:
	struct FStreamingSaveGameActorParams          Params_0;                                          // 0x0000(0x0018)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FStreamingSaveGameActorParams          K2Node_MakeStruct_StreamingSaveGameActorParams;    // 0x0020(0x0018)()
};
static_assert(alignof(PAWN_Hacker_Simple_C_ShouldSaveActor) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_ShouldSaveActor");
static_assert(sizeof(PAWN_Hacker_Simple_C_ShouldSaveActor) == 0x000038, "Wrong size on PAWN_Hacker_Simple_C_ShouldSaveActor");
static_assert(offsetof(PAWN_Hacker_Simple_C_ShouldSaveActor, Params_0) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ShouldSaveActor::Params_0' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ShouldSaveActor, ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_ShouldSaveActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ShouldSaveActor, K2Node_MakeStruct_StreamingSaveGameActorParams) == 0x000020, "Member 'PAWN_Hacker_Simple_C_ShouldSaveActor::K2Node_MakeStruct_StreamingSaveGameActorParams' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.InitializeCharacter
// 0x0090 (0x0090 - 0x0000)
struct PAWN_Hacker_Simple_C_InitializeCharacter final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_StartTrackingLocation_ReturnValue;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_HUD_C>         K2Node_DynamicCast_AsINTERF_HUD;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraPanelWidget*                     CallFunc_GetCameraPanelWidget_Result;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	class UMOVECONTROL_FreeMove_C*                CallFunc_SpawnObject_ReturnValue;                  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RegisterMoveControl_Result;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeCharacter_Result;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_InitializeCharacter) == 0x000010, "Wrong alignment on PAWN_Hacker_Simple_C_InitializeCharacter");
static_assert(sizeof(PAWN_Hacker_Simple_C_InitializeCharacter) == 0x000090, "Wrong size on PAWN_Hacker_Simple_C_InitializeCharacter");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCharacter, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_InitializeCharacter::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCharacter, CallFunc_StartTrackingLocation_ReturnValue) == 0x000001, "Member 'PAWN_Hacker_Simple_C_InitializeCharacter::CallFunc_StartTrackingLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCharacter, K2Node_DynamicCast_AsINTERF_HUD) == 0x000008, "Member 'PAWN_Hacker_Simple_C_InitializeCharacter::K2Node_DynamicCast_AsINTERF_HUD' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCharacter, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PAWN_Hacker_Simple_C_InitializeCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCharacter, CallFunc_GetCameraPanelWidget_Result) == 0x000020, "Member 'PAWN_Hacker_Simple_C_InitializeCharacter::CallFunc_GetCameraPanelWidget_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCharacter, CallFunc_GetRelativeTransform_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_InitializeCharacter::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCharacter, CallFunc_SpawnObject_ReturnValue) == 0x000060, "Member 'PAWN_Hacker_Simple_C_InitializeCharacter::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCharacter, CallFunc_GetController_ReturnValue) == 0x000068, "Member 'PAWN_Hacker_Simple_C_InitializeCharacter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCharacter, CallFunc_RegisterMoveControl_Result) == 0x000070, "Member 'PAWN_Hacker_Simple_C_InitializeCharacter::CallFunc_RegisterMoveControl_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCharacter, K2Node_DynamicCast_AsPlayer_Controller) == 0x000078, "Member 'PAWN_Hacker_Simple_C_InitializeCharacter::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'PAWN_Hacker_Simple_C_InitializeCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_InitializeCharacter, CallFunc_InitializeCharacter_Result) == 0x000081, "Member 'PAWN_Hacker_Simple_C_InitializeCharacter::CallFunc_InitializeCharacter_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetHeadTransform
// 0x0060 (0x0060 - 0x0000)
struct PAWN_Hacker_Simple_C_GetHeadTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetHeadTransform) == 0x000010, "Wrong alignment on PAWN_Hacker_Simple_C_GetHeadTransform");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetHeadTransform) == 0x000060, "Wrong size on PAWN_Hacker_Simple_C_GetHeadTransform");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHeadTransform, Transform) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetHeadTransform::Transform' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetHeadTransform, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'PAWN_Hacker_Simple_C_GetHeadTransform::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnHazardLevelChanged
// 0x0020 (0x0020 - 0x0000)
struct PAWN_Hacker_Simple_C_OnHazardLevelChanged final
{
public:
	ENUM_HazardType                               HazardType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         HazardLevel;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetMaxOverlapHazardLevelAndType_OutHazardType; // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetMaxOverlapHazardLevelAndType_ReturnValue; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetMaxOverlapHazardLevelAndType_OutHazardType_1; // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetMaxOverlapHazardLevelAndType_ReturnValue_1; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnApplyHazardMods_Result;                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAgentOverlappingAnyHazards_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnApplyHazardMods_Result_1;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnHazardLevelChanged) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_OnHazardLevelChanged");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnHazardLevelChanged) == 0x000020, "Wrong size on PAWN_Hacker_Simple_C_OnHazardLevelChanged");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, HazardType) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::HazardType' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, HazardLevel) == 0x000001, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::HazardLevel' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, CallFunc_Greater_ByteByte_ReturnValue) == 0x000002, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, CallFunc_Array_Contains_ReturnValue) == 0x000003, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, CallFunc_GetMaxOverlapHazardLevelAndType_OutHazardType) == 0x000004, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::CallFunc_GetMaxOverlapHazardLevelAndType_OutHazardType' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, CallFunc_GetMaxOverlapHazardLevelAndType_ReturnValue) == 0x000005, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::CallFunc_GetMaxOverlapHazardLevelAndType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, CallFunc_GetValidValue_ReturnValue) == 0x000006, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, CallFunc_GetMaxOverlapHazardLevelAndType_OutHazardType_1) == 0x000007, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::CallFunc_GetMaxOverlapHazardLevelAndType_OutHazardType_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, CallFunc_GetMaxOverlapHazardLevelAndType_ReturnValue_1) == 0x000008, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::CallFunc_GetMaxOverlapHazardLevelAndType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, CallFunc_OnApplyHazardMods_Result) == 0x00000A, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::CallFunc_OnApplyHazardMods_Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, CallFunc_ApplyMod_ReturnValue) == 0x000010, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, CallFunc_IsAgentOverlappingAnyHazards_ReturnValue) == 0x000018, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::CallFunc_IsAgentOverlappingAnyHazards_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardLevelChanged, CallFunc_OnApplyHazardMods_Result_1) == 0x000019, "Member 'PAWN_Hacker_Simple_C_OnHazardLevelChanged::CallFunc_OnApplyHazardMods_Result_1' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.OnHazardProtectionChanged
// 0x0005 (0x0005 - 0x0000)
struct PAWN_Hacker_Simple_C_OnHazardProtectionChanged final
{
public:
	uint8                                         CallFunc_GetMaxOverlapHazardLevelAndType_OutHazardType; // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetMaxOverlapHazardLevelAndType_ReturnValue; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAgentOverlappingAnyHazards_ReturnValue; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnApplyHazardMods_Result;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_OnHazardProtectionChanged) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_OnHazardProtectionChanged");
static_assert(sizeof(PAWN_Hacker_Simple_C_OnHazardProtectionChanged) == 0x000005, "Wrong size on PAWN_Hacker_Simple_C_OnHazardProtectionChanged");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardProtectionChanged, CallFunc_GetMaxOverlapHazardLevelAndType_OutHazardType) == 0x000000, "Member 'PAWN_Hacker_Simple_C_OnHazardProtectionChanged::CallFunc_GetMaxOverlapHazardLevelAndType_OutHazardType' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardProtectionChanged, CallFunc_GetMaxOverlapHazardLevelAndType_ReturnValue) == 0x000001, "Member 'PAWN_Hacker_Simple_C_OnHazardProtectionChanged::CallFunc_GetMaxOverlapHazardLevelAndType_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardProtectionChanged, CallFunc_IsAgentOverlappingAnyHazards_ReturnValue) == 0x000002, "Member 'PAWN_Hacker_Simple_C_OnHazardProtectionChanged::CallFunc_IsAgentOverlappingAnyHazards_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardProtectionChanged, CallFunc_GetValidValue_ReturnValue) == 0x000003, "Member 'PAWN_Hacker_Simple_C_OnHazardProtectionChanged::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_OnHazardProtectionChanged, CallFunc_OnApplyHazardMods_Result) == 0x000004, "Member 'PAWN_Hacker_Simple_C_OnHazardProtectionChanged::CallFunc_OnApplyHazardMods_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.GetLocationalAudioSceneComponent
// 0x0008 (0x0008 - 0x0000)
struct PAWN_Hacker_Simple_C_GetLocationalAudioSceneComponent final
{
public:
	class USceneComponent*                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_Hacker_Simple_C_GetLocationalAudioSceneComponent) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_GetLocationalAudioSceneComponent");
static_assert(sizeof(PAWN_Hacker_Simple_C_GetLocationalAudioSceneComponent) == 0x000008, "Wrong size on PAWN_Hacker_Simple_C_GetLocationalAudioSceneComponent");
static_assert(offsetof(PAWN_Hacker_Simple_C_GetLocationalAudioSceneComponent, Result) == 0x000000, "Member 'PAWN_Hacker_Simple_C_GetLocationalAudioSceneComponent::Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.TryTeleportCharacter
// 0x0050 (0x0050 - 0x0000)
struct PAWN_Hacker_Simple_C_TryTeleportCharacter final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MaterializeDuration;                               // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              SoundCue;                                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         BoundsFX;                                          // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         MeshFX;                                            // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      SpawnedTeleportFX;                                 // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryTeleportCharacter_Result;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_TryTeleportCharacter) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_TryTeleportCharacter");
static_assert(sizeof(PAWN_Hacker_Simple_C_TryTeleportCharacter) == 0x000050, "Wrong size on PAWN_Hacker_Simple_C_TryTeleportCharacter");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryTeleportCharacter, Location) == 0x000000, "Member 'PAWN_Hacker_Simple_C_TryTeleportCharacter::Location' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryTeleportCharacter, Rotation) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_TryTeleportCharacter::Rotation' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryTeleportCharacter, MaterializeDuration) == 0x000018, "Member 'PAWN_Hacker_Simple_C_TryTeleportCharacter::MaterializeDuration' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryTeleportCharacter, SoundCue) == 0x000020, "Member 'PAWN_Hacker_Simple_C_TryTeleportCharacter::SoundCue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryTeleportCharacter, BoundsFX) == 0x000028, "Member 'PAWN_Hacker_Simple_C_TryTeleportCharacter::BoundsFX' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryTeleportCharacter, MeshFX) == 0x000030, "Member 'PAWN_Hacker_Simple_C_TryTeleportCharacter::MeshFX' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryTeleportCharacter, Result) == 0x000038, "Member 'PAWN_Hacker_Simple_C_TryTeleportCharacter::Result' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryTeleportCharacter, SpawnedTeleportFX) == 0x000040, "Member 'PAWN_Hacker_Simple_C_TryTeleportCharacter::SpawnedTeleportFX' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_TryTeleportCharacter, CallFunc_TryTeleportCharacter_Result) == 0x000048, "Member 'PAWN_Hacker_Simple_C_TryTeleportCharacter::CallFunc_TryTeleportCharacter_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.UpdateCharacterStateForTeleport
// 0x0004 (0x0004 - 0x0000)
struct PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport final
{
public:
	bool                                          ShouldUpdateVisibility;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsCurrentlyTeleporting;                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTeleporting_Result;                     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport) == 0x000001, "Wrong alignment on PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport");
static_assert(sizeof(PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport) == 0x000004, "Wrong size on PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport, ShouldUpdateVisibility) == 0x000000, "Member 'PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport::ShouldUpdateVisibility' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport, IsCurrentlyTeleporting) == 0x000001, "Member 'PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport::IsCurrentlyTeleporting' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport, CallFunc_IsTeleporting_Result) == 0x000003, "Member 'PAWN_Hacker_Simple_C_UpdateCharacterStateForTeleport::CallFunc_IsTeleporting_Result' has a wrong offset!");

// Function PAWN_Hacker_Simple.PAWN_Hacker_Simple_C.ApplyKnockback
// 0x00B8 (0x00B8 - 0x0000)
struct PAWN_Hacker_Simple_C_ApplyKnockback final
{
public:
	struct FVector                                LinearImpulse;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribModApplyData                    KnockbackSpreadIncreaseMod;                        // 0x0018(0x00A0)(Edit, BlueprintVisible, DisableEditOnInstance)
};
static_assert(alignof(PAWN_Hacker_Simple_C_ApplyKnockback) == 0x000008, "Wrong alignment on PAWN_Hacker_Simple_C_ApplyKnockback");
static_assert(sizeof(PAWN_Hacker_Simple_C_ApplyKnockback) == 0x0000B8, "Wrong size on PAWN_Hacker_Simple_C_ApplyKnockback");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyKnockback, LinearImpulse) == 0x000000, "Member 'PAWN_Hacker_Simple_C_ApplyKnockback::LinearImpulse' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyKnockback, ImpactPoint) == 0x00000C, "Member 'PAWN_Hacker_Simple_C_ApplyKnockback::ImpactPoint' has a wrong offset!");
static_assert(offsetof(PAWN_Hacker_Simple_C_ApplyKnockback, KnockbackSpreadIncreaseMod) == 0x000018, "Member 'PAWN_Hacker_Simple_C_ApplyKnockback::KnockbackSpreadIncreaseMod' has a wrong offset!");

}


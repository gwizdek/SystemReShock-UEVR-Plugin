#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HARDWARE_TargetIdentifier_Base

#include "Basic.hpp"

#include "HARDWARE_TargetIdentifier_Base_classes.hpp"
#include "HARDWARE_TargetIdentifier_Base_parameters.hpp"


namespace SDK
{

// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.OnAcquiredTargetChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TargetIdentifier_Base_C::OnAcquiredTargetChanged__DelegateSignature(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "OnAcquiredTargetChanged__DelegateSignature");

	Params::HARDWARE_TargetIdentifier_Base_C_OnAcquiredTargetChanged__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.OnCandidateTargetChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TargetIdentifier_Base_C::OnCandidateTargetChanged__DelegateSignature(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "OnCandidateTargetChanged__DelegateSignature");

	Params::HARDWARE_TargetIdentifier_Base_C_OnCandidateTargetChanged__DelegateSignature Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.OnHackingProgressChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TargetIdentifier_Base_C::OnHackingProgressChanged__DelegateSignature(float Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "OnHackingProgressChanged__DelegateSignature");

	Params::HARDWARE_TargetIdentifier_Base_C_OnHackingProgressChanged__DelegateSignature Parms{};

	Parms.Progress = Progress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.HasEnergyForHack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TargetIdentifier_Base_C::HasEnergyForHack(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "HasEnergyForHack");

	Params::HARDWARE_TargetIdentifier_Base_C_HasEnergyForHack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.IsHackingSupported
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TargetIdentifier_Base_C::IsHackingSupported(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "IsHackingSupported");

	Params::HARDWARE_TargetIdentifier_Base_C_IsHackingSupported Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.CanHackAcquiredTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TargetIdentifier_Base_C::CanHackAcquiredTarget(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "CanHackAcquiredTarget");

	Params::HARDWARE_TargetIdentifier_Base_C_CanHackAcquiredTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.IsActorInTargetingRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TargetIdentifier_Base_C::IsActorInTargetingRange(class AActor* TargetActor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "IsActorInTargetingRange");

	Params::HARDWARE_TargetIdentifier_Base_C_IsActorInTargetingRange Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.IsActorInTargetingCone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TargetIdentifier_Base_C::IsActorInTargetingCone(class AActor* TargetActor, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "IsActorInTargetingCone");

	Params::HARDWARE_TargetIdentifier_Base_C_IsActorInTargetingCone Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.GetTargetIdentifierRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Range                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TargetIdentifier_Base_C::GetTargetIdentifierRange(float* Range)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "GetTargetIdentifierRange");

	Params::HARDWARE_TargetIdentifier_Base_C_GetTargetIdentifierRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Range != nullptr)
		*Range = Parms.Range;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.GetAcquiredTargetActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TargetIdentifier_Base_C::GetAcquiredTargetActor(class AActor** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "GetAcquiredTargetActor");

	Params::HARDWARE_TargetIdentifier_Base_C_GetAcquiredTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.GetCandidateTargetActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TargetIdentifier_Base_C::GetCandidateTargetActor(class AActor** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "GetCandidateTargetActor");

	Params::HARDWARE_TargetIdentifier_Base_C_GetCandidateTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.GetTargetAcquireHoldDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TargetIdentifier_Base_C::GetTargetAcquireHoldDuration(float* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "GetTargetAcquireHoldDuration");

	Params::HARDWARE_TargetIdentifier_Base_C_GetTargetAcquireHoldDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.GetTargetHackHoldDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Duration                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TargetIdentifier_Base_C::GetTargetHackHoldDuration(float* Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "GetTargetHackHoldDuration");

	Params::HARDWARE_TargetIdentifier_Base_C_GetTargetHackHoldDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Duration != nullptr)
		*Duration = Parms.Duration;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.TryAcquireCandidateActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TargetIdentifier_Base_C::TryAcquireCandidateActor(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "TryAcquireCandidateActor");

	Params::HARDWARE_TargetIdentifier_Base_C_TryAcquireCandidateActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.TryUnacquireTargetActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TargetIdentifier_Base_C::TryUnacquireTargetActor(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "TryUnacquireTargetActor");

	Params::HARDWARE_TargetIdentifier_Base_C_TryUnacquireTargetActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.TryStartUploadingHackToAcquiredTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TargetIdentifier_Base_C::TryStartUploadingHackToAcquiredTarget(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "TryStartUploadingHackToAcquiredTarget");

	Params::HARDWARE_TargetIdentifier_Base_C_TryStartUploadingHackToAcquiredTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.TryStopUploadingHackToCurrentTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TargetIdentifier_Base_C::TryStopUploadingHackToCurrentTarget(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "TryStopUploadingHackToCurrentTarget");

	Params::HARDWARE_TargetIdentifier_Base_C_TryStopUploadingHackToCurrentTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.ApplyHackToAcquiredTarget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UHARDWARE_TargetIdentifier_Base_C::ApplyHackToAcquiredTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "ApplyHackToAcquiredTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.PerformTargetTrace
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ResultActor                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TargetIdentifier_Base_C::PerformTargetTrace(class AActor** ResultActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "PerformTargetTrace");

	Params::HARDWARE_TargetIdentifier_Base_C_PerformTargetTrace Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ResultActor != nullptr)
		*ResultActor = Parms.ResultActor;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.SetTargetHackProgress
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TargetIdentifier_Base_C::SetTargetHackProgress(float Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "SetTargetHackProgress");

	Params::HARDWARE_TargetIdentifier_Base_C_SetTargetHackProgress Parms{};

	Parms.Progress = Progress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.ForceStartNextTargetTick
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UHARDWARE_TargetIdentifier_Base_C::ForceStartNextTargetTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "ForceStartNextTargetTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.TryStartTargetTicks
// (Protected, BlueprintCallable, BlueprintEvent)

void UHARDWARE_TargetIdentifier_Base_C::TryStartTargetTicks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "TryStartTargetTicks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.TryStopTargetTicks
// (Protected, BlueprintCallable, BlueprintEvent)

void UHARDWARE_TargetIdentifier_Base_C::TryStopTargetTicks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "TryStopTargetTicks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.OnUpgradedItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_UpgradeBase_C*              PreviousItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TargetIdentifier_Base_C::OnUpgradedItem(class UITEM_UpgradeBase_C* PreviousItem, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "OnUpgradedItem");

	Params::HARDWARE_TargetIdentifier_Base_C_OnUpgradedItem Parms{};

	Parms.PreviousItem = PreviousItem;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.EVENT_OnTargetTick
// (Private, BlueprintCallable, BlueprintEvent)

void UHARDWARE_TargetIdentifier_Base_C::EVENT_OnTargetTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "EVENT_OnTargetTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.UpdateHardwareState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEnabled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UHARDWARE_TargetIdentifier_Base_C::UpdateHardwareState(bool IsEnabled, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "UpdateHardwareState");

	Params::HARDWARE_TargetIdentifier_Base_C_UpdateHardwareState Parms{};

	Parms.IsEnabled = IsEnabled;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.EVENT_OnHackQueryFinished
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bResult                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FVector4>                 WeightedWorldLocations                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UHARDWARE_TargetIdentifier_Base_C::EVENT_OnHackQueryFinished(bool bResult, const TArray<struct FVector4>& WeightedWorldLocations)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "EVENT_OnHackQueryFinished");

	Params::HARDWARE_TargetIdentifier_Base_C_EVENT_OnHackQueryFinished Parms{};

	Parms.bResult = bResult;
	Parms.WeightedWorldLocations = std::move(WeightedWorldLocations);

	UObject::ProcessEvent(Func, &Parms);
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.GetHackModCategoryName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UHARDWARE_TargetIdentifier_Base_C::GetHackModCategoryName(class FName* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "GetHackModCategoryName");

	Params::HARDWARE_TargetIdentifier_Base_C_GetHackModCategoryName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.GetHardwareFeatures
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTRUCT_HardwareFeature>  Result                                                 (Parm, OutParm)

void UHARDWARE_TargetIdentifier_Base_C::GetHardwareFeatures(TArray<struct FSTRUCT_HardwareFeature>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "GetHardwareFeatures");

	Params::HARDWARE_TargetIdentifier_Base_C_GetHardwareFeatures Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function HARDWARE_TargetIdentifier_Base.HARDWARE_TargetIdentifier_Base_C.OnBeginPlay
// (Public, BlueprintCallable, BlueprintEvent)

void UHARDWARE_TargetIdentifier_Base_C::OnBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("HARDWARE_TargetIdentifier_Base_C", "OnBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}

}


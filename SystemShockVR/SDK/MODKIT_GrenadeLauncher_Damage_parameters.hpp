#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MODKIT_GrenadeLauncher_Damage

#include "Basic.hpp"


namespace SDK::Params
{

// Function MODKIT_GrenadeLauncher_Damage.MODKIT_GrenadeLauncher_Damage_C.TryApplyWeaponModifications
// 0x0020 (0x0020 - 0x0000)
struct MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications final
{
public:
	class UITEM_WeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DuringInitialization;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryApplyWeaponModifications_Result;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWEAPON_GrenadeLauncher_C*              K2Node_DynamicCast_AsWEAPON_Grenade_Launcher;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications) == 0x000008, "Wrong alignment on MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications");
static_assert(sizeof(MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications) == 0x000020, "Wrong size on MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications");
static_assert(offsetof(MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications, Weapon) == 0x000000, "Member 'MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications::Weapon' has a wrong offset!");
static_assert(offsetof(MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications, DuringInitialization) == 0x000008, "Member 'MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications::DuringInitialization' has a wrong offset!");
static_assert(offsetof(MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications, Result) == 0x000009, "Member 'MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications::Result' has a wrong offset!");
static_assert(offsetof(MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications, CallFunc_TryApplyWeaponModifications_Result) == 0x00000A, "Member 'MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications::CallFunc_TryApplyWeaponModifications_Result' has a wrong offset!");
static_assert(offsetof(MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications, K2Node_DynamicCast_AsWEAPON_Grenade_Launcher) == 0x000010, "Member 'MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications::K2Node_DynamicCast_AsWEAPON_Grenade_Launcher' has a wrong offset!");
static_assert(offsetof(MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'MODKIT_GrenadeLauncher_Damage_C_TryApplyWeaponModifications::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


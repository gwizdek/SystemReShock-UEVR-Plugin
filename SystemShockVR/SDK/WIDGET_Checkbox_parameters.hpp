#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_Checkbox

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_Checkbox.WIDGET_Checkbox_C.OnCheckboxStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_Checkbox_C_OnCheckboxStateChanged__DelegateSignature final
{
public:
	bool                                          IsBoxChecked;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Checkbox_C_OnCheckboxStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on WIDGET_Checkbox_C_OnCheckboxStateChanged__DelegateSignature");
static_assert(sizeof(WIDGET_Checkbox_C_OnCheckboxStateChanged__DelegateSignature) == 0x000001, "Wrong size on WIDGET_Checkbox_C_OnCheckboxStateChanged__DelegateSignature");
static_assert(offsetof(WIDGET_Checkbox_C_OnCheckboxStateChanged__DelegateSignature, IsBoxChecked) == 0x000000, "Member 'WIDGET_Checkbox_C_OnCheckboxStateChanged__DelegateSignature::IsBoxChecked' has a wrong offset!");

// Function WIDGET_Checkbox.WIDGET_Checkbox_C.ExecuteUbergraph_WIDGET_Checkbox
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox) == 0x000004, "Wrong alignment on WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox");
static_assert(sizeof(WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox) == 0x000010, "Wrong size on WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox");
static_assert(offsetof(WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox, EntryPoint) == 0x000000, "Member 'WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox, CallFunc_GetMeshUIColor_Color) == 0x000008, "Member 'WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox, K2Node_MakeStruct_Color) == 0x00000C, "Member 'WIDGET_Checkbox_C_ExecuteUbergraph_WIDGET_Checkbox::K2Node_MakeStruct_Color' has a wrong offset!");

// Function WIDGET_Checkbox.WIDGET_Checkbox_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_Checkbox_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Checkbox_C_PreConstruct) == 0x000001, "Wrong alignment on WIDGET_Checkbox_C_PreConstruct");
static_assert(sizeof(WIDGET_Checkbox_C_PreConstruct) == 0x000001, "Wrong size on WIDGET_Checkbox_C_PreConstruct");
static_assert(offsetof(WIDGET_Checkbox_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WIDGET_Checkbox_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WIDGET_Checkbox.WIDGET_Checkbox_C.SetCheckboxState
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_Checkbox_C_SetCheckboxState final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Checkbox_C_SetCheckboxState) == 0x000001, "Wrong alignment on WIDGET_Checkbox_C_SetCheckboxState");
static_assert(sizeof(WIDGET_Checkbox_C_SetCheckboxState) == 0x000002, "Wrong size on WIDGET_Checkbox_C_SetCheckboxState");
static_assert(offsetof(WIDGET_Checkbox_C_SetCheckboxState, State) == 0x000000, "Member 'WIDGET_Checkbox_C_SetCheckboxState::State' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_SetCheckboxState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000001, "Member 'WIDGET_Checkbox_C_SetCheckboxState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WIDGET_Checkbox.WIDGET_Checkbox_C.ToggleCheckbox
// 0x0002 (0x0002 - 0x0000)
struct WIDGET_Checkbox_C_ToggleCheckbox final
{
public:
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Checkbox_C_ToggleCheckbox) == 0x000001, "Wrong alignment on WIDGET_Checkbox_C_ToggleCheckbox");
static_assert(sizeof(WIDGET_Checkbox_C_ToggleCheckbox) == 0x000002, "Wrong size on WIDGET_Checkbox_C_ToggleCheckbox");
static_assert(offsetof(WIDGET_Checkbox_C_ToggleCheckbox, CallFunc_GetIsEnabled_ReturnValue) == 0x000000, "Member 'WIDGET_Checkbox_C_ToggleCheckbox::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_ToggleCheckbox, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WIDGET_Checkbox_C_ToggleCheckbox::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function WIDGET_Checkbox.WIDGET_Checkbox_C.UpdateCheckedState
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_Checkbox_C_UpdateCheckedState final
{
public:
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_ConvertToDynamicMaterialInstance_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_Checkbox_C_UpdateCheckedState) == 0x000008, "Wrong alignment on WIDGET_Checkbox_C_UpdateCheckedState");
static_assert(sizeof(WIDGET_Checkbox_C_UpdateCheckedState) == 0x000018, "Wrong size on WIDGET_Checkbox_C_UpdateCheckedState");
static_assert(offsetof(WIDGET_Checkbox_C_UpdateCheckedState, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000000, "Member 'WIDGET_Checkbox_C_UpdateCheckedState::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_UpdateCheckedState, CallFunc_ConvertToDynamicMaterialInstance_ReturnValue) == 0x000008, "Member 'WIDGET_Checkbox_C_UpdateCheckedState::CallFunc_ConvertToDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_UpdateCheckedState, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WIDGET_Checkbox_C_UpdateCheckedState::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_Checkbox.WIDGET_Checkbox_C.EVENT_OnMouseButtonDown
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_Checkbox_C_EVENT_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_Checkbox_C_EVENT_OnMouseButtonDown) == 0x000008, "Wrong alignment on WIDGET_Checkbox_C_EVENT_OnMouseButtonDown");
static_assert(sizeof(WIDGET_Checkbox_C_EVENT_OnMouseButtonDown) == 0x000218, "Wrong size on WIDGET_Checkbox_C_EVENT_OnMouseButtonDown");
static_assert(offsetof(WIDGET_Checkbox_C_EVENT_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WIDGET_Checkbox_C_EVENT_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_EVENT_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WIDGET_Checkbox_C_EVENT_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_EVENT_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'WIDGET_Checkbox_C_EVENT_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_EVENT_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'WIDGET_Checkbox_C_EVENT_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WIDGET_Checkbox.WIDGET_Checkbox_C.EVENT_OnMouseEnter
// 0x00B8 (0x00B8 - 0x0000)
struct WIDGET_Checkbox_C_EVENT_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Checkbox_C_EVENT_OnMouseEnter) == 0x000008, "Wrong alignment on WIDGET_Checkbox_C_EVENT_OnMouseEnter");
static_assert(sizeof(WIDGET_Checkbox_C_EVENT_OnMouseEnter) == 0x0000B8, "Wrong size on WIDGET_Checkbox_C_EVENT_OnMouseEnter");
static_assert(offsetof(WIDGET_Checkbox_C_EVENT_OnMouseEnter, MyGeometry) == 0x000000, "Member 'WIDGET_Checkbox_C_EVENT_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_EVENT_OnMouseEnter, MouseEvent) == 0x000038, "Member 'WIDGET_Checkbox_C_EVENT_OnMouseEnter::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_EVENT_OnMouseEnter, CallFunc_GetIsEnabled_ReturnValue) == 0x0000A8, "Member 'WIDGET_Checkbox_C_EVENT_OnMouseEnter::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_EVENT_OnMouseEnter, CallFunc_PlayAnimation_ReturnValue) == 0x0000B0, "Member 'WIDGET_Checkbox_C_EVENT_OnMouseEnter::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WIDGET_Checkbox.WIDGET_Checkbox_C.EVENT_OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct WIDGET_Checkbox_C_EVENT_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_Checkbox_C_EVENT_OnMouseLeave) == 0x000008, "Wrong alignment on WIDGET_Checkbox_C_EVENT_OnMouseLeave");
static_assert(sizeof(WIDGET_Checkbox_C_EVENT_OnMouseLeave) == 0x000078, "Wrong size on WIDGET_Checkbox_C_EVENT_OnMouseLeave");
static_assert(offsetof(WIDGET_Checkbox_C_EVENT_OnMouseLeave, MouseEvent) == 0x000000, "Member 'WIDGET_Checkbox_C_EVENT_OnMouseLeave::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_EVENT_OnMouseLeave, CallFunc_GetMeshUIColor_Color) == 0x000070, "Member 'WIDGET_Checkbox_C_EVENT_OnMouseLeave::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_Checkbox_C_EVENT_OnMouseLeave, K2Node_MakeStruct_Color) == 0x000074, "Member 'WIDGET_Checkbox_C_EVENT_OnMouseLeave::K2Node_MakeStruct_Color' has a wrong offset!");

}


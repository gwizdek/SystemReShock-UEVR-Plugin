#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Lift_Base

#include "Basic.hpp"

#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.ExecuteUbergraph_INTERACT_Lift_Base
// 0x000C (0x000C - 0x0000)
struct INTERACT_Lift_Base_C_ExecuteUbergraph_INTERACT_Lift_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryUpdateLiftMovement_Result;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_ExecuteUbergraph_INTERACT_Lift_Base) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_ExecuteUbergraph_INTERACT_Lift_Base");
static_assert(sizeof(INTERACT_Lift_Base_C_ExecuteUbergraph_INTERACT_Lift_Base) == 0x00000C, "Wrong size on INTERACT_Lift_Base_C_ExecuteUbergraph_INTERACT_Lift_Base");
static_assert(offsetof(INTERACT_Lift_Base_C_ExecuteUbergraph_INTERACT_Lift_Base, EntryPoint) == 0x000000, "Member 'INTERACT_Lift_Base_C_ExecuteUbergraph_INTERACT_Lift_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_ExecuteUbergraph_INTERACT_Lift_Base, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'INTERACT_Lift_Base_C_ExecuteUbergraph_INTERACT_Lift_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_ExecuteUbergraph_INTERACT_Lift_Base, CallFunc_TryUpdateLiftMovement_Result) == 0x000008, "Member 'INTERACT_Lift_Base_C_ExecuteUbergraph_INTERACT_Lift_Base::CallFunc_TryUpdateLiftMovement_Result' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_Lift_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lift_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_ReceiveTick");
static_assert(sizeof(INTERACT_Lift_Base_C_ReceiveTick) == 0x000004, "Wrong size on INTERACT_Lift_Base_C_ReceiveTick");
static_assert(offsetof(INTERACT_Lift_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'INTERACT_Lift_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.GetTargetShape
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Lift_Base_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lift_Base_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_Lift_Base_C_GetTargetShape");
static_assert(sizeof(INTERACT_Lift_Base_C_GetTargetShape) == 0x000010, "Wrong size on INTERACT_Lift_Base_C_GetTargetShape");
static_assert(offsetof(INTERACT_Lift_Base_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_Lift_Base_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_Lift_Base_C_GetTargetShape::ShapeComponent' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.TryInteract
// 0x00D8 (0x00D8 - 0x0000)
struct INTERACT_Lift_Base_C_TryInteract final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_InteractionType                          InteractionType;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0018(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_GetInteractBusy_Result;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInteractBusy_BusyMessage;              // 0x0040(0x0018)()
	bool                                          CallFunc_GetInteractLocked_Result;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInteractLocked_LockMessage;            // 0x0060(0x0018)()
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults;          // 0x0078(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_1;        // 0x0098(0x0020)(HasGetValueTypeHash)
	struct FSTRUCT_InteractResults                K2Node_MakeStruct_STRUCT_InteractResults_2;        // 0x00B8(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lift_Base_C_TryInteract) == 0x000008, "Wrong alignment on INTERACT_Lift_Base_C_TryInteract");
static_assert(sizeof(INTERACT_Lift_Base_C_TryInteract) == 0x0000D8, "Wrong size on INTERACT_Lift_Base_C_TryInteract");
static_assert(offsetof(INTERACT_Lift_Base_C_TryInteract, SourceActor) == 0x000000, "Member 'INTERACT_Lift_Base_C_TryInteract::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryInteract, CursorPrimitive) == 0x000008, "Member 'INTERACT_Lift_Base_C_TryInteract::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryInteract, InteractionType) == 0x000010, "Member 'INTERACT_Lift_Base_C_TryInteract::InteractionType' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryInteract, InteractResults) == 0x000018, "Member 'INTERACT_Lift_Base_C_TryInteract::InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryInteract, CallFunc_GetInteractBusy_Result) == 0x000038, "Member 'INTERACT_Lift_Base_C_TryInteract::CallFunc_GetInteractBusy_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryInteract, CallFunc_GetInteractBusy_BusyMessage) == 0x000040, "Member 'INTERACT_Lift_Base_C_TryInteract::CallFunc_GetInteractBusy_BusyMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryInteract, CallFunc_GetInteractLocked_Result) == 0x000058, "Member 'INTERACT_Lift_Base_C_TryInteract::CallFunc_GetInteractLocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryInteract, CallFunc_GetInteractLocked_LockMessage) == 0x000060, "Member 'INTERACT_Lift_Base_C_TryInteract::CallFunc_GetInteractLocked_LockMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults) == 0x000078, "Member 'INTERACT_Lift_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_1) == 0x000098, "Member 'INTERACT_Lift_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryInteract, K2Node_MakeStruct_STRUCT_InteractResults_2) == 0x0000B8, "Member 'INTERACT_Lift_Base_C_TryInteract::K2Node_MakeStruct_STRUCT_InteractResults_2' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.InitializeLift
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Lift_Base_C_InitializeLift final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_InitializeLift) == 0x000001, "Wrong alignment on INTERACT_Lift_Base_C_InitializeLift");
static_assert(sizeof(INTERACT_Lift_Base_C_InitializeLift) == 0x000001, "Wrong size on INTERACT_Lift_Base_C_InitializeLift");
static_assert(offsetof(INTERACT_Lift_Base_C_InitializeLift, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'INTERACT_Lift_Base_C_InitializeLift::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.InitializeAttributes
// 0x0014 (0x0014 - 0x0000)
struct INTERACT_Lift_Base_C_InitializeAttributes final
{
public:
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lift_Base_C_InitializeAttributes) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_InitializeAttributes");
static_assert(sizeof(INTERACT_Lift_Base_C_InitializeAttributes) == 0x000014, "Wrong size on INTERACT_Lift_Base_C_InitializeAttributes");
static_assert(offsetof(INTERACT_Lift_Base_C_InitializeAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'INTERACT_Lift_Base_C_InitializeAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_InitializeAttributes, CallFunc_GetAttribValue_ReturnValue) == 0x000010, "Member 'INTERACT_Lift_Base_C_InitializeAttributes::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.UpdateEmissiveStrength
// 0x000C (0x000C - 0x0000)
struct INTERACT_Lift_Base_C_UpdateEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lift_Base_C_UpdateEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_UpdateEmissiveStrength");
static_assert(sizeof(INTERACT_Lift_Base_C_UpdateEmissiveStrength) == 0x00000C, "Wrong size on INTERACT_Lift_Base_C_UpdateEmissiveStrength");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_Lift_Base_C_UpdateEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateEmissiveStrength, CallFunc_MakeVector2D_ReturnValue) == 0x000004, "Member 'INTERACT_Lift_Base_C_UpdateEmissiveStrength::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.ComputeLiftMoveParameters
// 0x0034 (0x0034 - 0x0000)
struct INTERACT_Lift_Base_C_ComputeLiftMoveParameters final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorNormalAndLength_OutLength;       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorNormalAndLength_ReturnValue;     // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lift_Base_C_ComputeLiftMoveParameters) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_ComputeLiftMoveParameters");
static_assert(sizeof(INTERACT_Lift_Base_C_ComputeLiftMoveParameters) == 0x000034, "Wrong size on INTERACT_Lift_Base_C_ComputeLiftMoveParameters");
static_assert(offsetof(INTERACT_Lift_Base_C_ComputeLiftMoveParameters, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'INTERACT_Lift_Base_C_ComputeLiftMoveParameters::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_ComputeLiftMoveParameters, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00000C, "Member 'INTERACT_Lift_Base_C_ComputeLiftMoveParameters::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_ComputeLiftMoveParameters, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000018, "Member 'INTERACT_Lift_Base_C_ComputeLiftMoveParameters::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_ComputeLiftMoveParameters, CallFunc_GetVectorNormalAndLength_OutLength) == 0x000024, "Member 'INTERACT_Lift_Base_C_ComputeLiftMoveParameters::CallFunc_GetVectorNormalAndLength_OutLength' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_ComputeLiftMoveParameters, CallFunc_GetVectorNormalAndLength_ReturnValue) == 0x000028, "Member 'INTERACT_Lift_Base_C_ComputeLiftMoveParameters::CallFunc_GetVectorNormalAndLength_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.BeginLiftMovement
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Lift_Base_C_BeginLiftMovement final
{
public:
	bool                                          CallFunc_IsLiftFunctional_Result;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_BeginLiftMovement) == 0x000001, "Wrong alignment on INTERACT_Lift_Base_C_BeginLiftMovement");
static_assert(sizeof(INTERACT_Lift_Base_C_BeginLiftMovement) == 0x000001, "Wrong size on INTERACT_Lift_Base_C_BeginLiftMovement");
static_assert(offsetof(INTERACT_Lift_Base_C_BeginLiftMovement, CallFunc_IsLiftFunctional_Result) == 0x000000, "Member 'INTERACT_Lift_Base_C_BeginLiftMovement::CallFunc_IsLiftFunctional_Result' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.TryUpdateLiftMovement
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Lift_Base_C_TryUpdateLiftMovement final
{
public:
	float                                         Elapsed_Time;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CurrentMovementDistance;                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLiftFunctional_Result;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_TryUpdateLiftMovement) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_TryUpdateLiftMovement");
static_assert(sizeof(INTERACT_Lift_Base_C_TryUpdateLiftMovement) == 0x000010, "Wrong size on INTERACT_Lift_Base_C_TryUpdateLiftMovement");
static_assert(offsetof(INTERACT_Lift_Base_C_TryUpdateLiftMovement, Elapsed_Time) == 0x000000, "Member 'INTERACT_Lift_Base_C_TryUpdateLiftMovement::Elapsed_Time' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryUpdateLiftMovement, Result) == 0x000004, "Member 'INTERACT_Lift_Base_C_TryUpdateLiftMovement::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryUpdateLiftMovement, CurrentMovementDistance) == 0x000008, "Member 'INTERACT_Lift_Base_C_TryUpdateLiftMovement::CurrentMovementDistance' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_TryUpdateLiftMovement, CallFunc_IsLiftFunctional_Result) == 0x00000C, "Member 'INTERACT_Lift_Base_C_TryUpdateLiftMovement::CallFunc_IsLiftFunctional_Result' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.UpdateLiftMovement
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_Lift_Base_C_UpdateLiftMovement final
{
public:
	float                                         Elapsed_Time;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMovementDistance;                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSmoothMovementParameters_OutAcceleration; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSmoothMovementParameters_OutConstantSpeedDuration; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSmoothMovementParameters_OutConstantSpeedDistance; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSmoothMovementParameters_OutActualAccelerationTime; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSmoothMovementParameters_OutActualAccelerationDistance; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSmoothMovementParameters_ReturnValue;  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceAlongPathAtElapsedTime_ReturnValue; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSafeToMove_Result;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lift_Base_C_UpdateLiftMovement) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_UpdateLiftMovement");
static_assert(sizeof(INTERACT_Lift_Base_C_UpdateLiftMovement) == 0x000058, "Wrong size on INTERACT_Lift_Base_C_UpdateLiftMovement");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, Elapsed_Time) == 0x000000, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::Elapsed_Time' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CurrentMovementDistance) == 0x000004, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CurrentMovementDistance' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_GetSmoothMovementParameters_OutAcceleration) == 0x000008, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_GetSmoothMovementParameters_OutAcceleration' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_GetSmoothMovementParameters_OutConstantSpeedDuration) == 0x00000C, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_GetSmoothMovementParameters_OutConstantSpeedDuration' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_GetSmoothMovementParameters_OutConstantSpeedDistance) == 0x000010, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_GetSmoothMovementParameters_OutConstantSpeedDistance' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_GetSmoothMovementParameters_OutActualAccelerationTime) == 0x000014, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_GetSmoothMovementParameters_OutActualAccelerationTime' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_GetSmoothMovementParameters_OutActualAccelerationDistance) == 0x000018, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_GetSmoothMovementParameters_OutActualAccelerationDistance' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_GetSmoothMovementParameters_ReturnValue) == 0x00001C, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_GetSmoothMovementParameters_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_Add_FloatFloat_ReturnValue) == 0x000024, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_GetDistanceAlongPathAtElapsedTime_ReturnValue) == 0x00002C, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_GetDistanceAlongPathAtElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000030, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000034, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_IsSafeToMove_Result) == 0x000040, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_IsSafeToMove_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_BreakVector_X) == 0x000044, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_BreakVector_Y) == 0x000048, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_BreakVector_Z) == 0x00004C, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000050, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_BooleanOR_ReturnValue) == 0x000051, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftMovement, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000054, "Member 'INTERACT_Lift_Base_C_UpdateLiftMovement::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.UpdateLiftLocation
// 0x00B4 (0x00B4 - 0x0000)
struct INTERACT_Lift_Base_C_UpdateLiftLocation final
{
public:
	float                                         Displacement;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_UpdateLiftLocation) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_UpdateLiftLocation");
static_assert(sizeof(INTERACT_Lift_Base_C_UpdateLiftLocation) == 0x0000B4, "Wrong size on INTERACT_Lift_Base_C_UpdateLiftLocation");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftLocation, Displacement) == 0x000000, "Member 'INTERACT_Lift_Base_C_UpdateLiftLocation::Displacement' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'INTERACT_Lift_Base_C_UpdateLiftLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000010, "Member 'INTERACT_Lift_Base_C_UpdateLiftLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00001C, "Member 'INTERACT_Lift_Base_C_UpdateLiftLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftLocation, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000028, "Member 'INTERACT_Lift_Base_C_UpdateLiftLocation::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_UpdateLiftLocation, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000B0, "Member 'INTERACT_Lift_Base_C_UpdateLiftLocation::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.FinishLiftMovement
// 0x0098 (0x0098 - 0x0000)
struct INTERACT_Lift_Base_C_FinishLiftMovement final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x000C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_FinishLiftMovement) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_FinishLiftMovement");
static_assert(sizeof(INTERACT_Lift_Base_C_FinishLiftMovement) == 0x000098, "Wrong size on INTERACT_Lift_Base_C_FinishLiftMovement");
static_assert(offsetof(INTERACT_Lift_Base_C_FinishLiftMovement, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'INTERACT_Lift_Base_C_FinishLiftMovement::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_FinishLiftMovement, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x00000C, "Member 'INTERACT_Lift_Base_C_FinishLiftMovement::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_FinishLiftMovement, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000094, "Member 'INTERACT_Lift_Base_C_FinishLiftMovement::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.IsLiftFunctional
// 0x000C (0x000C - 0x0000)
struct INTERACT_Lift_Base_C_IsLiftFunctional final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_IsLiftFunctional) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_IsLiftFunctional");
static_assert(sizeof(INTERACT_Lift_Base_C_IsLiftFunctional) == 0x00000C, "Wrong size on INTERACT_Lift_Base_C_IsLiftFunctional");
static_assert(offsetof(INTERACT_Lift_Base_C_IsLiftFunctional, Result) == 0x000000, "Member 'INTERACT_Lift_Base_C_IsLiftFunctional::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_IsLiftFunctional, CallFunc_GetAttribValue_ReturnValue) == 0x000004, "Member 'INTERACT_Lift_Base_C_IsLiftFunctional::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_IsLiftFunctional, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000008, "Member 'INTERACT_Lift_Base_C_IsLiftFunctional::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.IsSafeToMove
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_Lift_Base_C_IsSafeToMove final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_IsSafeToMove) == 0x000008, "Wrong alignment on INTERACT_Lift_Base_C_IsSafeToMove");
static_assert(sizeof(INTERACT_Lift_Base_C_IsSafeToMove) == 0x000020, "Wrong size on INTERACT_Lift_Base_C_IsSafeToMove");
static_assert(offsetof(INTERACT_Lift_Base_C_IsSafeToMove, Result) == 0x000000, "Member 'INTERACT_Lift_Base_C_IsSafeToMove::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_IsSafeToMove, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000008, "Member 'INTERACT_Lift_Base_C_IsSafeToMove::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_IsSafeToMove, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'INTERACT_Lift_Base_C_IsSafeToMove::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_IsSafeToMove, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'INTERACT_Lift_Base_C_IsSafeToMove::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.SetInteractLocked
// 0x0003 (0x0003 - 0x0000)
struct INTERACT_Lift_Base_C_SetInteractLocked final
{
public:
	bool                                          Locked;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_SetInteractLocked) == 0x000001, "Wrong alignment on INTERACT_Lift_Base_C_SetInteractLocked");
static_assert(sizeof(INTERACT_Lift_Base_C_SetInteractLocked) == 0x000003, "Wrong size on INTERACT_Lift_Base_C_SetInteractLocked");
static_assert(offsetof(INTERACT_Lift_Base_C_SetInteractLocked, Locked) == 0x000000, "Member 'INTERACT_Lift_Base_C_SetInteractLocked::Locked' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_SetInteractLocked, Result) == 0x000001, "Member 'INTERACT_Lift_Base_C_SetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_SetInteractLocked, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'INTERACT_Lift_Base_C_SetInteractLocked::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.GetInteractLocked
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_Lift_Base_C_GetInteractLocked final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LockMessage;                                       // 0x0010(0x0018)(Parm, OutParm)
};
static_assert(alignof(INTERACT_Lift_Base_C_GetInteractLocked) == 0x000008, "Wrong alignment on INTERACT_Lift_Base_C_GetInteractLocked");
static_assert(sizeof(INTERACT_Lift_Base_C_GetInteractLocked) == 0x000028, "Wrong size on INTERACT_Lift_Base_C_GetInteractLocked");
static_assert(offsetof(INTERACT_Lift_Base_C_GetInteractLocked, SourceActor) == 0x000000, "Member 'INTERACT_Lift_Base_C_GetInteractLocked::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_GetInteractLocked, Result) == 0x000008, "Member 'INTERACT_Lift_Base_C_GetInteractLocked::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_GetInteractLocked, LockMessage) == 0x000010, "Member 'INTERACT_Lift_Base_C_GetInteractLocked::LockMessage' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.IsLiftEnabled
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_Lift_Base_C_IsLiftEnabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_IsLiftEnabled) == 0x000001, "Wrong alignment on INTERACT_Lift_Base_C_IsLiftEnabled");
static_assert(sizeof(INTERACT_Lift_Base_C_IsLiftEnabled) == 0x000002, "Wrong size on INTERACT_Lift_Base_C_IsLiftEnabled");
static_assert(offsetof(INTERACT_Lift_Base_C_IsLiftEnabled, Result) == 0x000000, "Member 'INTERACT_Lift_Base_C_IsLiftEnabled::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_IsLiftEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'INTERACT_Lift_Base_C_IsLiftEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.GetInteractBusy
// 0x0028 (0x0028 - 0x0000)
struct INTERACT_Lift_Base_C_GetInteractBusy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BusyMessage_0;                                     // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_IsSafeToMove_Result;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_GetInteractBusy) == 0x000008, "Wrong alignment on INTERACT_Lift_Base_C_GetInteractBusy");
static_assert(sizeof(INTERACT_Lift_Base_C_GetInteractBusy) == 0x000028, "Wrong size on INTERACT_Lift_Base_C_GetInteractBusy");
static_assert(offsetof(INTERACT_Lift_Base_C_GetInteractBusy, Result) == 0x000000, "Member 'INTERACT_Lift_Base_C_GetInteractBusy::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_GetInteractBusy, BusyMessage_0) == 0x000008, "Member 'INTERACT_Lift_Base_C_GetInteractBusy::BusyMessage_0' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_GetInteractBusy, CallFunc_IsSafeToMove_Result) == 0x000020, "Member 'INTERACT_Lift_Base_C_GetInteractBusy::CallFunc_IsSafeToMove_Result' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.IsLiftMoving
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Lift_Base_C_IsLiftMoving final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_IsLiftMoving) == 0x000001, "Wrong alignment on INTERACT_Lift_Base_C_IsLiftMoving");
static_assert(sizeof(INTERACT_Lift_Base_C_IsLiftMoving) == 0x000001, "Wrong size on INTERACT_Lift_Base_C_IsLiftMoving");
static_assert(offsetof(INTERACT_Lift_Base_C_IsLiftMoving, Result) == 0x000000, "Member 'INTERACT_Lift_Base_C_IsLiftMoving::Result' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.GetMoveDirection
// 0x000C (0x000C - 0x0000)
struct INTERACT_Lift_Base_C_GetMoveDirection final
{
public:
	struct FVector                                Result;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lift_Base_C_GetMoveDirection) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_GetMoveDirection");
static_assert(sizeof(INTERACT_Lift_Base_C_GetMoveDirection) == 0x00000C, "Wrong size on INTERACT_Lift_Base_C_GetMoveDirection");
static_assert(offsetof(INTERACT_Lift_Base_C_GetMoveDirection, Result) == 0x000000, "Member 'INTERACT_Lift_Base_C_GetMoveDirection::Result' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.GetTargetLocation
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Lift_Base_C_GetTargetLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lift_Base_C_GetTargetLocation) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_GetTargetLocation");
static_assert(sizeof(INTERACT_Lift_Base_C_GetTargetLocation) == 0x000018, "Wrong size on INTERACT_Lift_Base_C_GetTargetLocation");
static_assert(offsetof(INTERACT_Lift_Base_C_GetTargetLocation, Location) == 0x000000, "Member 'INTERACT_Lift_Base_C_GetTargetLocation::Location' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_GetTargetLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'INTERACT_Lift_Base_C_GetTargetLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.GetTargetRotation
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Lift_Base_C_GetTargetRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_GetTargetRotation) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_GetTargetRotation");
static_assert(sizeof(INTERACT_Lift_Base_C_GetTargetRotation) == 0x000018, "Wrong size on INTERACT_Lift_Base_C_GetTargetRotation");
static_assert(offsetof(INTERACT_Lift_Base_C_GetTargetRotation, Rotation) == 0x000000, "Member 'INTERACT_Lift_Base_C_GetTargetRotation::Rotation' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_GetTargetRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00000C, "Member 'INTERACT_Lift_Base_C_GetTargetRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.IsInteractActivated
// 0x0002 (0x0002 - 0x0000)
struct INTERACT_Lift_Base_C_IsInteractActivated final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_IsInteractActivated) == 0x000001, "Wrong alignment on INTERACT_Lift_Base_C_IsInteractActivated");
static_assert(sizeof(INTERACT_Lift_Base_C_IsInteractActivated) == 0x000002, "Wrong size on INTERACT_Lift_Base_C_IsInteractActivated");
static_assert(offsetof(INTERACT_Lift_Base_C_IsInteractActivated, Result) == 0x000000, "Member 'INTERACT_Lift_Base_C_IsInteractActivated::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_IsInteractActivated, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'INTERACT_Lift_Base_C_IsInteractActivated::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.EVENT_OnDisableAttribChanged
// 0x0048 (0x0048 - 0x0000)
struct INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmissiveScale;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UVoxelAudioComponent*>           CallFunc_GetChildComponentsByClass_ReturnValue;    // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVoxelAudioComponent*                   CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged) == 0x000008, "Wrong alignment on INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged");
static_assert(sizeof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged) == 0x000048, "Wrong size on INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, CurrValue) == 0x000000, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, LastValue) == 0x000004, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::LastValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, EmissiveScale) == 0x000008, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::EmissiveScale' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, Temp_int_Array_Index_Variable) == 0x000010, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, CallFunc_GetChildComponentsByClass_ReturnValue) == 0x000018, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::CallFunc_GetChildComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Array_Get_Item) == 0x000030, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00003D, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00003E, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00003F, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000040, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000041, "Member 'INTERACT_Lift_Base_C_EVENT_OnDisableAttribChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function INTERACT_Lift_Base.INTERACT_Lift_Base_C.GetCurrentMovementTime
// 0x0004 (0x0004 - 0x0000)
struct INTERACT_Lift_Base_C_GetCurrentMovementTime final
{
public:
	float                                         Result;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lift_Base_C_GetCurrentMovementTime) == 0x000004, "Wrong alignment on INTERACT_Lift_Base_C_GetCurrentMovementTime");
static_assert(sizeof(INTERACT_Lift_Base_C_GetCurrentMovementTime) == 0x000004, "Wrong size on INTERACT_Lift_Base_C_GetCurrentMovementTime");
static_assert(offsetof(INTERACT_Lift_Base_C_GetCurrentMovementTime, Result) == 0x000000, "Member 'INTERACT_Lift_Base_C_GetCurrentMovementTime::Result' has a wrong offset!");

}


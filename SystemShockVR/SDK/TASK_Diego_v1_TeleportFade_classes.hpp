#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_Diego_v1_TeleportFade

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass TASK_Diego_v1_TeleportFade.TASK_Diego_v1_TeleportFade_C
// 0x0018 (0x00C0 - 0x00A8)
class UTASK_Diego_v1_TeleportFade_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         StartTimestamp;                                    // 0x00B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Progress;                                          // 0x00B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Reverse;                                           // 0x00B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FadeDuration;                                      // 0x00BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_TASK_Diego_v1_TeleportFade(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TASK_Diego_v1_TeleportFade_C">();
	}
	static class UTASK_Diego_v1_TeleportFade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTASK_Diego_v1_TeleportFade_C>();
	}
};
static_assert(alignof(UTASK_Diego_v1_TeleportFade_C) == 0x000008, "Wrong alignment on UTASK_Diego_v1_TeleportFade_C");
static_assert(sizeof(UTASK_Diego_v1_TeleportFade_C) == 0x0000C0, "Wrong size on UTASK_Diego_v1_TeleportFade_C");
static_assert(offsetof(UTASK_Diego_v1_TeleportFade_C, UberGraphFrame) == 0x0000A8, "Member 'UTASK_Diego_v1_TeleportFade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTASK_Diego_v1_TeleportFade_C, StartTimestamp) == 0x0000B0, "Member 'UTASK_Diego_v1_TeleportFade_C::StartTimestamp' has a wrong offset!");
static_assert(offsetof(UTASK_Diego_v1_TeleportFade_C, Progress) == 0x0000B4, "Member 'UTASK_Diego_v1_TeleportFade_C::Progress' has a wrong offset!");
static_assert(offsetof(UTASK_Diego_v1_TeleportFade_C, Reverse) == 0x0000B8, "Member 'UTASK_Diego_v1_TeleportFade_C::Reverse' has a wrong offset!");
static_assert(offsetof(UTASK_Diego_v1_TeleportFade_C, FadeDuration) == 0x0000BC, "Member 'UTASK_Diego_v1_TeleportFade_C::FadeDuration' has a wrong offset!");

}


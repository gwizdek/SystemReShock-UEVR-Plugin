#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_LootPanel

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_LootPanel.WIDGET_LootPanel_C.ExecuteUbergraph_WIDGET_LootPanel
// 0x02C0 (0x02C0 - 0x0000)
struct WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_ComponentBoundEvent_Geometry;               // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_ComponentBoundEvent_InputEvent;             // 0x0040(0x0070)()
	struct FVector2D                              CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TakeAllItems_Result;                      // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_ComponentBoundEvent_MyGeometry_1;           // 0x00C4(0x0038)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_ComponentBoundEvent_MouseEvent_1;           // 0x0100(0x0070)()
	struct FGeometry                              K2Node_ComponentBoundEvent_MyGeometry;             // 0x0170(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_ComponentBoundEvent_MouseEvent;             // 0x01A8(0x0070)()
	struct FGeometry                              K2Node_ComponentBoundEvent_Geometry_1;             // 0x0218(0x0038)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_ComponentBoundEvent_InputEvent_1;           // 0x0250(0x0070)()
};
static_assert(alignof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel) == 0x000008, "Wrong alignment on WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel");
static_assert(sizeof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel) == 0x0002C0, "Wrong size on WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, EntryPoint) == 0x000000, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, K2Node_ComponentBoundEvent_Geometry) == 0x000004, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::K2Node_ComponentBoundEvent_Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, K2Node_ComponentBoundEvent_InputEvent) == 0x000040, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::K2Node_ComponentBoundEvent_InputEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue) == 0x0000B0, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::CallFunc_PointerEvent_GetScreenSpacePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, K2Node_Event_IsDesignTime) == 0x0000B8, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, CallFunc_TakeAllItems_Result) == 0x0000B9, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::CallFunc_TakeAllItems_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, K2Node_MakeStruct_IntPoint) == 0x0000BC, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, K2Node_ComponentBoundEvent_MyGeometry_1) == 0x0000C4, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::K2Node_ComponentBoundEvent_MyGeometry_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, K2Node_ComponentBoundEvent_MouseEvent_1) == 0x000100, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::K2Node_ComponentBoundEvent_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, K2Node_ComponentBoundEvent_MyGeometry) == 0x000170, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::K2Node_ComponentBoundEvent_MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, K2Node_ComponentBoundEvent_MouseEvent) == 0x0001A8, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::K2Node_ComponentBoundEvent_MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, K2Node_ComponentBoundEvent_Geometry_1) == 0x000218, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::K2Node_ComponentBoundEvent_Geometry_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel, K2Node_ComponentBoundEvent_InputEvent_1) == 0x000250, "Member 'WIDGET_LootPanel_C_ExecuteUbergraph_WIDGET_LootPanel::K2Node_ComponentBoundEvent_InputEvent_1' has a wrong offset!");

// Function WIDGET_LootPanel.WIDGET_LootPanel_C.BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_TakeAll_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_TakeAll_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InputEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_TakeAll_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_TakeAll_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(sizeof(WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_TakeAll_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_TakeAll_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature");
static_assert(offsetof(WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_TakeAll_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, Geometry) == 0x000000, "Member 'WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_TakeAll_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_TakeAll_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature, InputEvent) == 0x000038, "Member 'WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_TakeAll_K2Node_ComponentBoundEvent_1_OnClicked__DelegateSignature::InputEvent' has a wrong offset!");

// Function WIDGET_LootPanel.WIDGET_LootPanel_C.BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature final
{
public:
	struct FGeometry                              Geometry;                                          // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InputEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(sizeof(WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature");
static_assert(offsetof(WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, Geometry) == 0x000000, "Member 'WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::Geometry' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature, InputEvent) == 0x000038, "Member 'WIDGET_LootPanel_C_BndEvt__WIDGET_LootPanel_WIDGET_ButtonLegend_Button_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature::InputEvent' has a wrong offset!");

// Function WIDGET_LootPanel.WIDGET_LootPanel_C.BndEvt__WIDGET_CloseButton_K2Node_ComponentBoundEvent_3_OnMouseButtonActivated__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_LootPanel_C_BndEvt__WIDGET_CloseButton_K2Node_ComponentBoundEvent_3_OnMouseButtonActivated__DelegateSignature final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_LootPanel_C_BndEvt__WIDGET_CloseButton_K2Node_ComponentBoundEvent_3_OnMouseButtonActivated__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_LootPanel_C_BndEvt__WIDGET_CloseButton_K2Node_ComponentBoundEvent_3_OnMouseButtonActivated__DelegateSignature");
static_assert(sizeof(WIDGET_LootPanel_C_BndEvt__WIDGET_CloseButton_K2Node_ComponentBoundEvent_3_OnMouseButtonActivated__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_LootPanel_C_BndEvt__WIDGET_CloseButton_K2Node_ComponentBoundEvent_3_OnMouseButtonActivated__DelegateSignature");
static_assert(offsetof(WIDGET_LootPanel_C_BndEvt__WIDGET_CloseButton_K2Node_ComponentBoundEvent_3_OnMouseButtonActivated__DelegateSignature, MyGeometry) == 0x000000, "Member 'WIDGET_LootPanel_C_BndEvt__WIDGET_CloseButton_K2Node_ComponentBoundEvent_3_OnMouseButtonActivated__DelegateSignature::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_BndEvt__WIDGET_CloseButton_K2Node_ComponentBoundEvent_3_OnMouseButtonActivated__DelegateSignature, MouseEvent) == 0x000038, "Member 'WIDGET_LootPanel_C_BndEvt__WIDGET_CloseButton_K2Node_ComponentBoundEvent_3_OnMouseButtonActivated__DelegateSignature::MouseEvent' has a wrong offset!");

// Function WIDGET_LootPanel.WIDGET_LootPanel_C.BndEvt__WIDGET_TakeAllButton_K2Node_ComponentBoundEvent_2_OnMouseButtonActivated__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_LootPanel_C_BndEvt__WIDGET_TakeAllButton_K2Node_ComponentBoundEvent_2_OnMouseButtonActivated__DelegateSignature final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_LootPanel_C_BndEvt__WIDGET_TakeAllButton_K2Node_ComponentBoundEvent_2_OnMouseButtonActivated__DelegateSignature) == 0x000008, "Wrong alignment on WIDGET_LootPanel_C_BndEvt__WIDGET_TakeAllButton_K2Node_ComponentBoundEvent_2_OnMouseButtonActivated__DelegateSignature");
static_assert(sizeof(WIDGET_LootPanel_C_BndEvt__WIDGET_TakeAllButton_K2Node_ComponentBoundEvent_2_OnMouseButtonActivated__DelegateSignature) == 0x0000A8, "Wrong size on WIDGET_LootPanel_C_BndEvt__WIDGET_TakeAllButton_K2Node_ComponentBoundEvent_2_OnMouseButtonActivated__DelegateSignature");
static_assert(offsetof(WIDGET_LootPanel_C_BndEvt__WIDGET_TakeAllButton_K2Node_ComponentBoundEvent_2_OnMouseButtonActivated__DelegateSignature, MyGeometry) == 0x000000, "Member 'WIDGET_LootPanel_C_BndEvt__WIDGET_TakeAllButton_K2Node_ComponentBoundEvent_2_OnMouseButtonActivated__DelegateSignature::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_BndEvt__WIDGET_TakeAllButton_K2Node_ComponentBoundEvent_2_OnMouseButtonActivated__DelegateSignature, MouseEvent) == 0x000038, "Member 'WIDGET_LootPanel_C_BndEvt__WIDGET_TakeAllButton_K2Node_ComponentBoundEvent_2_OnMouseButtonActivated__DelegateSignature::MouseEvent' has a wrong offset!");

// Function WIDGET_LootPanel.WIDGET_LootPanel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_LootPanel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_LootPanel_C_PreConstruct) == 0x000001, "Wrong alignment on WIDGET_LootPanel_C_PreConstruct");
static_assert(sizeof(WIDGET_LootPanel_C_PreConstruct) == 0x000001, "Wrong size on WIDGET_LootPanel_C_PreConstruct");
static_assert(offsetof(WIDGET_LootPanel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WIDGET_LootPanel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WIDGET_LootPanel.WIDGET_LootPanel_C.TakeAllItems
// 0x0160 (0x0160 - 0x0000)
struct WIDGET_LootPanel_C_TakeAllItems final
{
public:
	struct FVector2D                              MouseScreenPosition;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    PlayerHUD;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x0018(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_GetTotalItemCount_Count;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A8(0x0018)()
	bool                                          CallFunc_AddItemsToPlayerInventory_Result;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0108(0x0010)(ReferenceParm)
	bool                                          CallFunc_UndoCursorItemMove_Result;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0120(0x0018)()
	class UITEM_Base_C*                           CallFunc_GetCursorItem_Result;                     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0140(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_LootPanel_C_TakeAllItems) == 0x000008, "Wrong alignment on WIDGET_LootPanel_C_TakeAllItems");
static_assert(sizeof(WIDGET_LootPanel_C_TakeAllItems) == 0x000160, "Wrong size on WIDGET_LootPanel_C_TakeAllItems");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, MouseScreenPosition) == 0x000000, "Member 'WIDGET_LootPanel_C_TakeAllItems::MouseScreenPosition' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, Result) == 0x000008, "Member 'WIDGET_LootPanel_C_TakeAllItems::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, PlayerHUD) == 0x000010, "Member 'WIDGET_LootPanel_C_TakeAllItems::PlayerHUD' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, Temp_text_Variable) == 0x000018, "Member 'WIDGET_LootPanel_C_TakeAllItems::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, Temp_text_Variable_1) == 0x000030, "Member 'WIDGET_LootPanel_C_TakeAllItems::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'WIDGET_LootPanel_C_TakeAllItems::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, CallFunc_GetTotalItemCount_Count) == 0x000088, "Member 'WIDGET_LootPanel_C_TakeAllItems::CallFunc_GetTotalItemCount_Count' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, K2Node_MakeArray_Array) == 0x000090, "Member 'WIDGET_LootPanel_C_TakeAllItems::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'WIDGET_LootPanel_C_TakeAllItems::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, CallFunc_Format_ReturnValue) == 0x0000A8, "Member 'WIDGET_LootPanel_C_TakeAllItems::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, CallFunc_AddItemsToPlayerInventory_Result) == 0x0000C0, "Member 'WIDGET_LootPanel_C_TakeAllItems::CallFunc_AddItemsToPlayerInventory_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'WIDGET_LootPanel_C_TakeAllItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C8, "Member 'WIDGET_LootPanel_C_TakeAllItems::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, K2Node_MakeArray_Array_1) == 0x000108, "Member 'WIDGET_LootPanel_C_TakeAllItems::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, CallFunc_UndoCursorItemMove_Result) == 0x000118, "Member 'WIDGET_LootPanel_C_TakeAllItems::CallFunc_UndoCursorItemMove_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, Temp_bool_Variable) == 0x000119, "Member 'WIDGET_LootPanel_C_TakeAllItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, K2Node_Select_Default) == 0x000120, "Member 'WIDGET_LootPanel_C_TakeAllItems::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, CallFunc_GetCursorItem_Result) == 0x000138, "Member 'WIDGET_LootPanel_C_TakeAllItems::CallFunc_GetCursorItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, CallFunc_Format_ReturnValue_1) == 0x000140, "Member 'WIDGET_LootPanel_C_TakeAllItems::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_TakeAllItems, CallFunc_IsValid_ReturnValue) == 0x000158, "Member 'WIDGET_LootPanel_C_TakeAllItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WIDGET_LootPanel.WIDGET_LootPanel_C.SetLootBag
// 0x0150 (0x0150 - 0x0000)
struct WIDGET_LootPanel_C_SetLootBag final
{
public:
	class UInventoryBag_C*                        InventoryBag;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              InventoryPanelSize;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 LootOwnerActor;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Descriptor_C*                     DescriptorComponent;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_LootableBase_C*               K2Node_DynamicCast_AsINTERACT_Lootable_Base;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector2D_X;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLootableDisplayName_Text;              // 0x0038(0x0018)()
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_2;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_2;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_3;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_3;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_4;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_4;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue_1;                    // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X_5;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_5;                        // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_4;           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_5;           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue_2;                    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDeadDisplayName_Result;                // 0x0108(0x0018)()
	class FText                                   CallFunc_GetEmptyText_ReturnValue;                 // 0x0120(0x0018)()
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_LootPanel_C_SetLootBag) == 0x000008, "Wrong alignment on WIDGET_LootPanel_C_SetLootBag");
static_assert(sizeof(WIDGET_LootPanel_C_SetLootBag) == 0x000150, "Wrong size on WIDGET_LootPanel_C_SetLootBag");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, InventoryBag) == 0x000000, "Member 'WIDGET_LootPanel_C_SetLootBag::InventoryBag' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, InventoryPanelSize) == 0x000008, "Member 'WIDGET_LootPanel_C_SetLootBag::InventoryPanelSize' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, LootOwnerActor) == 0x000010, "Member 'WIDGET_LootPanel_C_SetLootBag::LootOwnerActor' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, DescriptorComponent) == 0x000018, "Member 'WIDGET_LootPanel_C_SetLootBag::DescriptorComponent' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, K2Node_DynamicCast_AsINTERACT_Lootable_Base) == 0x000020, "Member 'WIDGET_LootPanel_C_SetLootBag::K2Node_DynamicCast_AsINTERACT_Lootable_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WIDGET_LootPanel_C_SetLootBag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_BreakVector2D_X) == 0x00002C, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_GetLootableDisplayName_Text) == 0x000038, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_GetLootableDisplayName_Text' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000050, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000058, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_BreakVector2D_X_1) == 0x000060, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_BreakVector2D_Y_1) == 0x000064, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_GetSize_ReturnValue) == 0x000068, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_Add_FloatFloat_ReturnValue) == 0x000070, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_BreakVector2D_X_2) == 0x000074, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_BreakVector2D_Y_2) == 0x000078, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_MakeVector2D_ReturnValue) == 0x00007C, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_MakeVector2D_ReturnValue_1) == 0x000084, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000090, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000098, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_BreakVector2D_X_3) == 0x0000A0, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_BreakVector2D_Y_3) == 0x0000A4, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_BreakVector2D_X_4) == 0x0000A8, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_BreakVector2D_Y_4) == 0x0000AC, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x0000B0, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000B8, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_GetSize_ReturnValue_1) == 0x0000BC, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_GetSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000C4, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_BreakVector2D_X_5) == 0x0000CC, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_BreakVector2D_Y_5) == 0x0000D0, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_MakeVector2D_ReturnValue_3) == 0x0000D4, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_SlotAsCanvasSlot_ReturnValue_4) == 0x0000E0, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_SlotAsCanvasSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_SlotAsCanvasSlot_ReturnValue_5) == 0x0000E8, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_SlotAsCanvasSlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_GetSize_ReturnValue_2) == 0x0000F0, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_GetSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, K2Node_DynamicCast_AsPAWN_Enemy) == 0x0000F8, "Member 'WIDGET_LootPanel_C_SetLootBag::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'WIDGET_LootPanel_C_SetLootBag::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_GetDeadDisplayName_Result) == 0x000108, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_GetDeadDisplayName_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_GetEmptyText_ReturnValue) == 0x000120, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_GetEmptyText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_GetInventory_Inventory) == 0x000138, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_GetOwner_ReturnValue) == 0x000140, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_SetLootBag, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000149, "Member 'WIDGET_LootPanel_C_SetLootBag::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function WIDGET_LootPanel.WIDGET_LootPanel_C.InitializeLootPanel
// 0x0008 (0x0008 - 0x0000)
struct WIDGET_LootPanel_C_InitializeLootPanel final
{
public:
	class UWIDGET_PlayerHUD_C*                    PlayerHUD;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_LootPanel_C_InitializeLootPanel) == 0x000008, "Wrong alignment on WIDGET_LootPanel_C_InitializeLootPanel");
static_assert(sizeof(WIDGET_LootPanel_C_InitializeLootPanel) == 0x000008, "Wrong size on WIDGET_LootPanel_C_InitializeLootPanel");
static_assert(offsetof(WIDGET_LootPanel_C_InitializeLootPanel, PlayerHUD) == 0x000000, "Member 'WIDGET_LootPanel_C_InitializeLootPanel::PlayerHUD' has a wrong offset!");

// Function WIDGET_LootPanel.WIDGET_LootPanel_C.AddItemsToPlayerInventory
// 0x0078 (0x0078 - 0x0000)
struct WIDGET_LootPanel_C_AddItemsToPlayerInventory final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UITEM_Base_C*>                   ItemsInBag;                                        // 0x0008(0x0010)(Edit, BlueprintVisible)
	class UITEM_Base_C*                           CurrentItem;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CurrentBag;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_PlayerHUD_C*                    PlayerHUD;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MergeSuccess;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UITEM_Base_C*>                   CallFunc_GetItemArray_Items;                       // 0x0040(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_GetBestPickupClass_Result;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_RemoveItem_RemovedItem;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_Result;                           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryPlayPickupAnimFromMFD_Result;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanUnslot_Result;                         // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanAddItem_Result;                        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_LootPanel_C_AddItemsToPlayerInventory) == 0x000008, "Wrong alignment on WIDGET_LootPanel_C_AddItemsToPlayerInventory");
static_assert(sizeof(WIDGET_LootPanel_C_AddItemsToPlayerInventory) == 0x000078, "Wrong size on WIDGET_LootPanel_C_AddItemsToPlayerInventory");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, Result) == 0x000000, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, ItemsInBag) == 0x000008, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::ItemsInBag' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CurrentItem) == 0x000018, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CurrentItem' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CurrentBag) == 0x000020, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CurrentBag' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, PlayerHUD) == 0x000028, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::PlayerHUD' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, MergeSuccess) == 0x000030, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::MergeSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, Temp_int_Array_Index_Variable) == 0x000034, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_GetItemArray_Items) == 0x000040, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_GetItemArray_Items' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_GetBestPickupClass_Result) == 0x000050, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_GetBestPickupClass_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_Array_Get_Item) == 0x000058, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_IsValid_ReturnValue) == 0x000065, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_RemoveItem_RemovedItem) == 0x000068, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_RemoveItem_RemovedItem' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_AddItem_Result) == 0x000070, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_AddItem_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_TryPlayPickupAnimFromMFD_Result) == 0x000071, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_TryPlayPickupAnimFromMFD_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_Not_PreBool_ReturnValue) == 0x000072, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_CanUnslot_Result) == 0x000073, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_CanUnslot_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_LootPanel_C_AddItemsToPlayerInventory, CallFunc_CanAddItem_Result) == 0x000074, "Member 'WIDGET_LootPanel_C_AddItemsToPlayerInventory::CallFunc_CanAddItem_Result' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_DifficultyHexagonButton

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.OnSelectNewDifficulty__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_OnSelectNewDifficulty__DelegateSignature final
{
public:
	int32                                         IndexInList_0;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_OnSelectNewDifficulty__DelegateSignature) == 0x000004, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_OnSelectNewDifficulty__DelegateSignature");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_OnSelectNewDifficulty__DelegateSignature) == 0x000004, "Wrong size on WIDGET_DifficultyHexagonButton_C_OnSelectNewDifficulty__DelegateSignature");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_OnSelectNewDifficulty__DelegateSignature, IndexInList_0) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_OnSelectNewDifficulty__DelegateSignature::IndexInList_0' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.ExecuteUbergraph_WIDGET_DifficultyHexagonButton
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton) == 0x000018, "Wrong size on WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton, EntryPoint) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000010, "Member 'WIDGET_DifficultyHexagonButton_C_ExecuteUbergraph_WIDGET_DifficultyHexagonButton::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_PreConstruct) == 0x000001, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_PreConstruct");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_PreConstruct) == 0x000001, "Wrong size on WIDGET_DifficultyHexagonButton_C_PreConstruct");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SelectedHandler
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_SelectedHandler final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_SelectedHandler) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_SelectedHandler");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_SelectedHandler) == 0x000010, "Wrong size on WIDGET_DifficultyHexagonButton_C_SelectedHandler");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_SelectedHandler, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_SelectedHandler::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_SelectedHandler, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000008, "Member 'WIDGET_DifficultyHexagonButton_C_SelectedHandler::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SetSelected
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_SetSelected final
{
public:
	bool                                          Selected_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_SetSelected) == 0x000001, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_SetSelected");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_SetSelected) == 0x000001, "Wrong size on WIDGET_DifficultyHexagonButton_C_SetSelected");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_SetSelected, Selected_0) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_SetSelected::Selected_0' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SetHighlighted
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_SetHighlighted final
{
public:
	bool                                          Highlighted_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_SetHighlighted) == 0x000001, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_SetHighlighted");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_SetHighlighted) == 0x000001, "Wrong size on WIDGET_DifficultyHexagonButton_C_SetHighlighted");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_SetHighlighted, Highlighted_0) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_SetHighlighted::Highlighted_0' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.HighlightedHandler
// 0x0030 (0x0030 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_HighlightedHandler final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_1;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_2;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicFontMaterial_ReturnValue_3;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_HighlightedHandler) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_HighlightedHandler");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_HighlightedHandler) == 0x000030, "Wrong size on WIDGET_DifficultyHexagonButton_C_HighlightedHandler");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_HighlightedHandler, CallFunc_GetDynamicFontMaterial_ReturnValue) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_HighlightedHandler::CallFunc_GetDynamicFontMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_HighlightedHandler, CallFunc_GetDynamicFontMaterial_ReturnValue_1) == 0x000008, "Member 'WIDGET_DifficultyHexagonButton_C_HighlightedHandler::CallFunc_GetDynamicFontMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_HighlightedHandler, CallFunc_GetDynamicFontMaterial_ReturnValue_2) == 0x000010, "Member 'WIDGET_DifficultyHexagonButton_C_HighlightedHandler::CallFunc_GetDynamicFontMaterial_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_HighlightedHandler, CallFunc_GetDynamicFontMaterial_ReturnValue_3) == 0x000018, "Member 'WIDGET_DifficultyHexagonButton_C_HighlightedHandler::CallFunc_GetDynamicFontMaterial_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_HighlightedHandler, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000020, "Member 'WIDGET_DifficultyHexagonButton_C_HighlightedHandler::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_HighlightedHandler, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'WIDGET_DifficultyHexagonButton_C_HighlightedHandler::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.EVENT_MouseDown
// 0x0218 (0x0218 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0160(0x00B8)()
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown) == 0x000218, "Wrong size on WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown, MyGeometry) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown, MouseEvent) == 0x000038, "Member 'WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown, ReturnValue) == 0x0000A8, "Member 'WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown, CallFunc_Handled_ReturnValue) == 0x000160, "Member 'WIDGET_DifficultyHexagonButton_C_EVENT_MouseDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SetDisabled
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_SetDisabled final
{
public:
	bool                                          Disabled_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_SetDisabled) == 0x000001, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_SetDisabled");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_SetDisabled) == 0x000001, "Wrong size on WIDGET_DifficultyHexagonButton_C_SetDisabled");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_SetDisabled, Disabled_0) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_SetDisabled::Disabled_0' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.OnDisabled
// 0x0060 (0x0060 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_OnDisabled final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0028)()
	float                                         CallFunc_Conv_BoolToFloat_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_OnDisabled) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_OnDisabled");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_OnDisabled) == 0x000060, "Wrong size on WIDGET_DifficultyHexagonButton_C_OnDisabled");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_OnDisabled, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_OnDisabled::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_OnDisabled, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'WIDGET_DifficultyHexagonButton_C_OnDisabled::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_OnDisabled, CallFunc_Conv_BoolToFloat_ReturnValue) == 0x000050, "Member 'WIDGET_DifficultyHexagonButton_C_OnDisabled::CallFunc_Conv_BoolToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_OnDisabled, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000058, "Member 'WIDGET_DifficultyHexagonButton_C_OnDisabled::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.EVENT_MouseEnter
// 0x00A8 (0x00A8 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_EVENT_MouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseEnter) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_EVENT_MouseEnter");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseEnter) == 0x0000A8, "Wrong size on WIDGET_DifficultyHexagonButton_C_EVENT_MouseEnter");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseEnter, MyGeometry) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_EVENT_MouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseEnter, MouseEvent) == 0x000038, "Member 'WIDGET_DifficultyHexagonButton_C_EVENT_MouseEnter::MouseEvent' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SetHovered
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_SetHovered final
{
public:
	bool                                          Hovered_0;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_SetHovered) == 0x000001, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_SetHovered");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_SetHovered) == 0x000001, "Wrong size on WIDGET_DifficultyHexagonButton_C_SetHovered");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_SetHovered, Hovered_0) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_SetHovered::Hovered_0' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.HoveredHandler
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_HoveredHandler final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_HoveredHandler) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_HoveredHandler");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_HoveredHandler) == 0x000010, "Wrong size on WIDGET_DifficultyHexagonButton_C_HoveredHandler");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_HoveredHandler, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_HoveredHandler::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_HoveredHandler, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000008, "Member 'WIDGET_DifficultyHexagonButton_C_HoveredHandler::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.EVENT_MouseExit
// 0x0070 (0x0070 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_EVENT_MouseExit final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseExit) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_EVENT_MouseExit");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseExit) == 0x000070, "Wrong size on WIDGET_DifficultyHexagonButton_C_EVENT_MouseExit");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_EVENT_MouseExit, MouseEvent) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_EVENT_MouseExit::MouseEvent' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SetIndexInList
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_SetIndexInList final
{
public:
	int32                                         DifficultyHexIndex;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_SetIndexInList) == 0x000004, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_SetIndexInList");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_SetIndexInList) == 0x000004, "Wrong size on WIDGET_DifficultyHexagonButton_C_SetIndexInList");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_SetIndexInList, DifficultyHexIndex) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_SetIndexInList::DifficultyHexIndex' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.SetVolumeMultiplier
// 0x0004 (0x0004 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_SetVolumeMultiplier final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_SetVolumeMultiplier) == 0x000004, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_SetVolumeMultiplier");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_SetVolumeMultiplier) == 0x000004, "Wrong size on WIDGET_DifficultyHexagonButton_C_SetVolumeMultiplier");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_SetVolumeMultiplier, Value) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_SetVolumeMultiplier::Value' has a wrong offset!");

// Function WIDGET_DifficultyHexagonButton.WIDGET_DifficultyHexagonButton_C.UpdateNumber
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_DifficultyHexagonButton_C_UpdateNumber final
{
public:
	class FText                                   Number;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WIDGET_DifficultyHexagonButton_C_UpdateNumber) == 0x000008, "Wrong alignment on WIDGET_DifficultyHexagonButton_C_UpdateNumber");
static_assert(sizeof(WIDGET_DifficultyHexagonButton_C_UpdateNumber) == 0x000018, "Wrong size on WIDGET_DifficultyHexagonButton_C_UpdateNumber");
static_assert(offsetof(WIDGET_DifficultyHexagonButton_C_UpdateNumber, Number) == 0x000000, "Member 'WIDGET_DifficultyHexagonButton_C_UpdateNumber::Number' has a wrong offset!");

}


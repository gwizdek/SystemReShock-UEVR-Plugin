#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CORPSE_Human

#include "Basic.hpp"

#include "BodyType_structs.hpp"
#include "STRUCT_CorpseDismemberDTs_structs.hpp"
#include "STRUCT_DismemberableLimb_structs.hpp"
#include "ENUM_HumanCorpseLimbType_structs.hpp"
#include "Enum_CorpseOutfits_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function CORPSE_Human.CORPSE_Human_C.GetTargetShape
// 0x0010 (0x0010 - 0x0000)
struct CORPSE_Human_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CORPSE_Human_C_GetTargetShape) == 0x000008, "Wrong alignment on CORPSE_Human_C_GetTargetShape");
static_assert(sizeof(CORPSE_Human_C_GetTargetShape) == 0x000010, "Wrong size on CORPSE_Human_C_GetTargetShape");
static_assert(offsetof(CORPSE_Human_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'CORPSE_Human_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'CORPSE_Human_C_GetTargetShape::ShapeComponent' has a wrong offset!");

// Function CORPSE_Human.CORPSE_Human_C.TryRandomizeBodyType
// 0x0002 (0x0002 - 0x0000)
struct CORPSE_Human_C_TryRandomizeBodyType final
{
public:
	EBodyType                                     CallFunc_GetRandomHumanCorpseBodyType_Result;      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CORPSE_Human_C_TryRandomizeBodyType) == 0x000001, "Wrong alignment on CORPSE_Human_C_TryRandomizeBodyType");
static_assert(sizeof(CORPSE_Human_C_TryRandomizeBodyType) == 0x000002, "Wrong size on CORPSE_Human_C_TryRandomizeBodyType");
static_assert(offsetof(CORPSE_Human_C_TryRandomizeBodyType, CallFunc_GetRandomHumanCorpseBodyType_Result) == 0x000000, "Member 'CORPSE_Human_C_TryRandomizeBodyType::CallFunc_GetRandomHumanCorpseBodyType_Result' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_TryRandomizeBodyType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'CORPSE_Human_C_TryRandomizeBodyType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function CORPSE_Human.CORPSE_Human_C.TryRandomizeOutfit
// 0x0002 (0x0002 - 0x0000)
struct CORPSE_Human_C_TryRandomizeOutfit final
{
public:
	Enum_CorpseOutfits                            CallFunc_GetRandomHumanCorpseOutfit_Result;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CORPSE_Human_C_TryRandomizeOutfit) == 0x000001, "Wrong alignment on CORPSE_Human_C_TryRandomizeOutfit");
static_assert(sizeof(CORPSE_Human_C_TryRandomizeOutfit) == 0x000002, "Wrong size on CORPSE_Human_C_TryRandomizeOutfit");
static_assert(offsetof(CORPSE_Human_C_TryRandomizeOutfit, CallFunc_GetRandomHumanCorpseOutfit_Result) == 0x000000, "Member 'CORPSE_Human_C_TryRandomizeOutfit::CallFunc_GetRandomHumanCorpseOutfit_Result' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_TryRandomizeOutfit, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'CORPSE_Human_C_TryRandomizeOutfit::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function CORPSE_Human.CORPSE_Human_C.RandomizeTextureDetails
// 0x0038 (0x0038 - 0x0000)
struct CORPSE_Human_C_RandomizeTextureDetails final
{
public:
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_1;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_2;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_3;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CORPSE_Human_C_RandomizeTextureDetails) == 0x000004, "Wrong alignment on CORPSE_Human_C_RandomizeTextureDetails");
static_assert(sizeof(CORPSE_Human_C_RandomizeTextureDetails) == 0x000038, "Wrong size on CORPSE_Human_C_RandomizeTextureDetails");
static_assert(offsetof(CORPSE_Human_C_RandomizeTextureDetails, CallFunc_RandomFloat_ReturnValue) == 0x000000, "Member 'CORPSE_Human_C_RandomizeTextureDetails::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_RandomizeTextureDetails, CallFunc_RandomFloat_ReturnValue_1) == 0x000004, "Member 'CORPSE_Human_C_RandomizeTextureDetails::CallFunc_RandomFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_RandomizeTextureDetails, CallFunc_RandomFloat_ReturnValue_2) == 0x000008, "Member 'CORPSE_Human_C_RandomizeTextureDetails::CallFunc_RandomFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_RandomizeTextureDetails, CallFunc_RandomFloat_ReturnValue_3) == 0x00000C, "Member 'CORPSE_Human_C_RandomizeTextureDetails::CallFunc_RandomFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_RandomizeTextureDetails, CallFunc_MakeVector_ReturnValue) == 0x000010, "Member 'CORPSE_Human_C_RandomizeTextureDetails::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_RandomizeTextureDetails, CallFunc_MakeVector_ReturnValue_1) == 0x00001C, "Member 'CORPSE_Human_C_RandomizeTextureDetails::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_RandomizeTextureDetails, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'CORPSE_Human_C_RandomizeTextureDetails::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_RandomizeTextureDetails, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00002C, "Member 'CORPSE_Human_C_RandomizeTextureDetails::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_RandomizeTextureDetails, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000030, "Member 'CORPSE_Human_C_RandomizeTextureDetails::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_RandomizeTextureDetails, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000034, "Member 'CORPSE_Human_C_RandomizeTextureDetails::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");

// Function CORPSE_Human.CORPSE_Human_C.DefineStartPose
// 0x0020 (0x0020 - 0x0000)
struct CORPSE_Human_C_DefineStartPose final
{
public:
	class UAnimSequence*                          AnimSequence;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSingleAnimationPlayData               K2Node_MakeStruct_SingleAnimationPlayData;         // 0x0008(0x0018)(NoDestructor)
};
static_assert(alignof(CORPSE_Human_C_DefineStartPose) == 0x000008, "Wrong alignment on CORPSE_Human_C_DefineStartPose");
static_assert(sizeof(CORPSE_Human_C_DefineStartPose) == 0x000020, "Wrong size on CORPSE_Human_C_DefineStartPose");
static_assert(offsetof(CORPSE_Human_C_DefineStartPose, AnimSequence) == 0x000000, "Member 'CORPSE_Human_C_DefineStartPose::AnimSequence' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_DefineStartPose, K2Node_MakeStruct_SingleAnimationPlayData) == 0x000008, "Member 'CORPSE_Human_C_DefineStartPose::K2Node_MakeStruct_SingleAnimationPlayData' has a wrong offset!");

// Function CORPSE_Human.CORPSE_Human_C.InitializeDismemberedLimbs
// 0x0048 (0x0048 - 0x0000)
struct CORPSE_Human_C_InitializeDismemberedLimbs final
{
public:
	ENUM_HumanCorpseLimbType                      CurrentLimbType;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BitShiftLeft_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_And_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyDismemberedLimbs_Result;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CORPSE_Human_C_InitializeDismemberedLimbs) == 0x000008, "Wrong alignment on CORPSE_Human_C_InitializeDismemberedLimbs");
static_assert(sizeof(CORPSE_Human_C_InitializeDismemberedLimbs) == 0x000048, "Wrong size on CORPSE_Human_C_InitializeDismemberedLimbs");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CurrentLimbType) == 0x000000, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CurrentLimbType' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_MakeLiteralInt_ReturnValue) == 0x000004, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000008, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_BitShiftLeft_ReturnValue) == 0x00000C, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_BitShiftLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, Temp_int_Variable) == 0x000010, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, Temp_int_Variable_1) == 0x000014, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_Conv_IntToByte_ReturnValue) == 0x000018, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_GetValidValue_ReturnValue) == 0x000020, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000021, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000022, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_Less_IntInt_ReturnValue) == 0x000023, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x000024, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000028, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_And_IntInt_ReturnValue) == 0x000038, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_And_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_Conv_StringToName_ReturnValue) == 0x00003C, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000044, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_HasAnyDismemberedLimbs_Result) == 0x000045, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_HasAnyDismemberedLimbs_Result' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000046, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_InitializeDismemberedLimbs, CallFunc_Not_PreBool_ReturnValue) == 0x000047, "Member 'CORPSE_Human_C_InitializeDismemberedLimbs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function CORPSE_Human.CORPSE_Human_C.ForceUpdate
// 0x0118 (0x0118 - 0x0000)
struct CORPSE_Human_C_ForceUpdate final
{
public:
	class UMaterialInstanceDynamic*               SkinMaterial;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBodyType                                     Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesDataTableRowExist_ReturnValue;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_CorpseDismemberDTs             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_DismemberableLimb              CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0060(0x0098)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CORPSE_Human_C_ForceUpdate) == 0x000008, "Wrong alignment on CORPSE_Human_C_ForceUpdate");
static_assert(sizeof(CORPSE_Human_C_ForceUpdate) == 0x000118, "Wrong size on CORPSE_Human_C_ForceUpdate");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, SkinMaterial) == 0x000000, "Member 'CORPSE_Human_C_ForceUpdate::SkinMaterial' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, Temp_byte_Variable) == 0x000008, "Member 'CORPSE_Human_C_ForceUpdate::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, Temp_bool_Variable) == 0x000009, "Member 'CORPSE_Human_C_ForceUpdate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, Temp_name_Variable) == 0x00000C, "Member 'CORPSE_Human_C_ForceUpdate::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000018, "Member 'CORPSE_Human_C_ForceUpdate::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, CallFunc_Conv_StringToName_ReturnValue) == 0x000028, "Member 'CORPSE_Human_C_ForceUpdate::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, CallFunc_DoesDataTableRowExist_ReturnValue) == 0x000030, "Member 'CORPSE_Human_C_ForceUpdate::CallFunc_DoesDataTableRowExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, K2Node_Select_Default) == 0x000034, "Member 'CORPSE_Human_C_ForceUpdate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'CORPSE_Human_C_ForceUpdate::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'CORPSE_Human_C_ForceUpdate::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, K2Node_Select_Default_1) == 0x000058, "Member 'CORPSE_Human_C_ForceUpdate::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000060, "Member 'CORPSE_Human_C_ForceUpdate::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0000F8, "Member 'CORPSE_Human_C_ForceUpdate::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000100, "Member 'CORPSE_Human_C_ForceUpdate::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000108, "Member 'CORPSE_Human_C_ForceUpdate::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(CORPSE_Human_C_ForceUpdate, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'CORPSE_Human_C_ForceUpdate::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}


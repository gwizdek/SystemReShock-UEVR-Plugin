#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_Scanner

#include "Basic.hpp"

#include "STRUCT_InteractFlavorText_structs.hpp"
#include "STRUCT_InteractResults_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "STRUCT_MeshDescriptor_structs.hpp"
#include "ENUM_InteractResultType_structs.hpp"


namespace SDK::Params
{

// Function COMP_Scanner.COMP_Scanner_C.OnScanDataChanged__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct COMP_Scanner_C_OnScanDataChanged__DelegateSignature final
{
public:
	class UObject*                                Interactable;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Primitive;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   Description;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(COMP_Scanner_C_OnScanDataChanged__DelegateSignature) == 0x000008, "Wrong alignment on COMP_Scanner_C_OnScanDataChanged__DelegateSignature");
static_assert(sizeof(COMP_Scanner_C_OnScanDataChanged__DelegateSignature) == 0x000028, "Wrong size on COMP_Scanner_C_OnScanDataChanged__DelegateSignature");
static_assert(offsetof(COMP_Scanner_C_OnScanDataChanged__DelegateSignature, Interactable) == 0x000000, "Member 'COMP_Scanner_C_OnScanDataChanged__DelegateSignature::Interactable' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_OnScanDataChanged__DelegateSignature, Primitive) == 0x000008, "Member 'COMP_Scanner_C_OnScanDataChanged__DelegateSignature::Primitive' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_OnScanDataChanged__DelegateSignature, Description) == 0x000010, "Member 'COMP_Scanner_C_OnScanDataChanged__DelegateSignature::Description' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.OnFeedbackDataChanged__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct COMP_Scanner_C_OnFeedbackDataChanged__DelegateSignature final
{
public:
	ENUM_InteractResultType                       FeedbackType_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FeedbackMessage_0;                                 // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(COMP_Scanner_C_OnFeedbackDataChanged__DelegateSignature) == 0x000008, "Wrong alignment on COMP_Scanner_C_OnFeedbackDataChanged__DelegateSignature");
static_assert(sizeof(COMP_Scanner_C_OnFeedbackDataChanged__DelegateSignature) == 0x000020, "Wrong size on COMP_Scanner_C_OnFeedbackDataChanged__DelegateSignature");
static_assert(offsetof(COMP_Scanner_C_OnFeedbackDataChanged__DelegateSignature, FeedbackType_0) == 0x000000, "Member 'COMP_Scanner_C_OnFeedbackDataChanged__DelegateSignature::FeedbackType_0' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_OnFeedbackDataChanged__DelegateSignature, FeedbackMessage_0) == 0x000008, "Member 'COMP_Scanner_C_OnFeedbackDataChanged__DelegateSignature::FeedbackMessage_0' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.OnScannerUpdated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct COMP_Scanner_C_OnScannerUpdated__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    ScannedPrimitive;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Scanner_C_OnScannerUpdated__DelegateSignature) == 0x000008, "Wrong alignment on COMP_Scanner_C_OnScannerUpdated__DelegateSignature");
static_assert(sizeof(COMP_Scanner_C_OnScannerUpdated__DelegateSignature) == 0x000010, "Wrong size on COMP_Scanner_C_OnScannerUpdated__DelegateSignature");
static_assert(offsetof(COMP_Scanner_C_OnScannerUpdated__DelegateSignature, ScannedPrimitive) == 0x000000, "Member 'COMP_Scanner_C_OnScannerUpdated__DelegateSignature::ScannedPrimitive' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_OnScannerUpdated__DelegateSignature, Distance) == 0x000008, "Member 'COMP_Scanner_C_OnScannerUpdated__DelegateSignature::Distance' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.ExecuteUbergraph_COMP_Scanner
// 0x0010 (0x0010 - 0x0000)
struct COMP_Scanner_C_ExecuteUbergraph_COMP_Scanner final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShuffler*                              CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Scanner_C_ExecuteUbergraph_COMP_Scanner) == 0x000008, "Wrong alignment on COMP_Scanner_C_ExecuteUbergraph_COMP_Scanner");
static_assert(sizeof(COMP_Scanner_C_ExecuteUbergraph_COMP_Scanner) == 0x000010, "Wrong size on COMP_Scanner_C_ExecuteUbergraph_COMP_Scanner");
static_assert(offsetof(COMP_Scanner_C_ExecuteUbergraph_COMP_Scanner, EntryPoint) == 0x000000, "Member 'COMP_Scanner_C_ExecuteUbergraph_COMP_Scanner::EntryPoint' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_ExecuteUbergraph_COMP_Scanner, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'COMP_Scanner_C_ExecuteUbergraph_COMP_Scanner::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_ExecuteUbergraph_COMP_Scanner, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'COMP_Scanner_C_ExecuteUbergraph_COMP_Scanner::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct COMP_Scanner_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Scanner_C_ReceiveTick) == 0x000004, "Wrong alignment on COMP_Scanner_C_ReceiveTick");
static_assert(sizeof(COMP_Scanner_C_ReceiveTick) == 0x000004, "Wrong size on COMP_Scanner_C_ReceiveTick");
static_assert(offsetof(COMP_Scanner_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'COMP_Scanner_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.HasCursorObjectChanged
// 0x0028 (0x0028 - 0x0000)
struct COMP_Scanner_C_HasCursorObjectChanged final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CursorMaterial;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UModelComponent*                        K2Node_DynamicCast_AsModel_Component;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Scanner_C_HasCursorObjectChanged) == 0x000008, "Wrong alignment on COMP_Scanner_C_HasCursorObjectChanged");
static_assert(sizeof(COMP_Scanner_C_HasCursorObjectChanged) == 0x000028, "Wrong size on COMP_Scanner_C_HasCursorObjectChanged");
static_assert(offsetof(COMP_Scanner_C_HasCursorObjectChanged, CursorPrimitive) == 0x000000, "Member 'COMP_Scanner_C_HasCursorObjectChanged::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_HasCursorObjectChanged, CursorMaterial) == 0x000008, "Member 'COMP_Scanner_C_HasCursorObjectChanged::CursorMaterial' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_HasCursorObjectChanged, Result) == 0x000010, "Member 'COMP_Scanner_C_HasCursorObjectChanged::Result' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_HasCursorObjectChanged, K2Node_DynamicCast_AsModel_Component) == 0x000018, "Member 'COMP_Scanner_C_HasCursorObjectChanged::K2Node_DynamicCast_AsModel_Component' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_HasCursorObjectChanged, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'COMP_Scanner_C_HasCursorObjectChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_HasCursorObjectChanged, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000021, "Member 'COMP_Scanner_C_HasCursorObjectChanged::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_HasCursorObjectChanged, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x000022, "Member 'COMP_Scanner_C_HasCursorObjectChanged::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.GetMaterialFromHitComponent
// 0x0080 (0x0080 - 0x0000)
struct COMP_Scanner_C_GetMaterialFromHitComponent final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FaceIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UModelComponent*                        K2Node_DynamicCast_AsModel_Component;              // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStaticMeshHasMaterialDescriptor_Result; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetMaterialFromCollisionFaceIndex_SectionIndex; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterialFromCollisionFaceIndex_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMaterialFromCollisionFaceIndex_SectionIndex_1; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterialFromCollisionFaceIndex_ReturnValue_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Scanner_C_GetMaterialFromHitComponent) == 0x000008, "Wrong alignment on COMP_Scanner_C_GetMaterialFromHitComponent");
static_assert(sizeof(COMP_Scanner_C_GetMaterialFromHitComponent) == 0x000080, "Wrong size on COMP_Scanner_C_GetMaterialFromHitComponent");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, Object) == 0x000000, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::Object' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, FaceIndex) == 0x000008, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::FaceIndex' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, ReturnValue) == 0x000010, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, StaticMeshComponent) == 0x000018, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::StaticMeshComponent' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000028, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, K2Node_DynamicCast_AsGI_Single_Player) == 0x000038, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, K2Node_DynamicCast_AsModel_Component) == 0x000048, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::K2Node_DynamicCast_AsModel_Component' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, CallFunc_GetMaterial_ReturnValue) == 0x000058, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, CallFunc_GetStaticMeshHasMaterialDescriptor_Result) == 0x000060, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::CallFunc_GetStaticMeshHasMaterialDescriptor_Result' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000061, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, CallFunc_GetMaterialFromCollisionFaceIndex_SectionIndex) == 0x000064, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::CallFunc_GetMaterialFromCollisionFaceIndex_SectionIndex' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, CallFunc_GetMaterialFromCollisionFaceIndex_ReturnValue) == 0x000068, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::CallFunc_GetMaterialFromCollisionFaceIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, CallFunc_GetMaterialFromCollisionFaceIndex_SectionIndex_1) == 0x000070, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::CallFunc_GetMaterialFromCollisionFaceIndex_SectionIndex_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetMaterialFromHitComponent, CallFunc_GetMaterialFromCollisionFaceIndex_ReturnValue_1) == 0x000078, "Member 'COMP_Scanner_C_GetMaterialFromHitComponent::CallFunc_GetMaterialFromCollisionFaceIndex_ReturnValue_1' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.GetLastCursorActor
// 0x0018 (0x0018 - 0x0000)
struct COMP_Scanner_C_GetLastCursorActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Scanner_C_GetLastCursorActor) == 0x000008, "Wrong alignment on COMP_Scanner_C_GetLastCursorActor");
static_assert(sizeof(COMP_Scanner_C_GetLastCursorActor) == 0x000018, "Wrong size on COMP_Scanner_C_GetLastCursorActor");
static_assert(offsetof(COMP_Scanner_C_GetLastCursorActor, Actor) == 0x000000, "Member 'COMP_Scanner_C_GetLastCursorActor::Actor' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetLastCursorActor, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'COMP_Scanner_C_GetLastCursorActor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetLastCursorActor, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'COMP_Scanner_C_GetLastCursorActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.GetDescriptorUnderCursor
// 0x0070 (0x0070 - 0x0000)
struct COMP_Scanner_C_GetDescriptorUnderCursor final
{
public:
	TScriptInterface<class IINTERF_Descriptor_C>  Descriptor;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 OwnerActor;                                        // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsChildActor_ReturnValue;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Descriptor_C*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Descriptor_C>  K2Node_DynamicCast_AsINTERF_Descriptor;            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Descriptor_C>  K2Node_DynamicCast_AsINTERF_Descriptor_1;          // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Scanner_C_GetDescriptorUnderCursor) == 0x000008, "Wrong alignment on COMP_Scanner_C_GetDescriptorUnderCursor");
static_assert(sizeof(COMP_Scanner_C_GetDescriptorUnderCursor) == 0x000070, "Wrong size on COMP_Scanner_C_GetDescriptorUnderCursor");
static_assert(offsetof(COMP_Scanner_C_GetDescriptorUnderCursor, Descriptor) == 0x000000, "Member 'COMP_Scanner_C_GetDescriptorUnderCursor::Descriptor' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetDescriptorUnderCursor, OwnerActor) == 0x000010, "Member 'COMP_Scanner_C_GetDescriptorUnderCursor::OwnerActor' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetDescriptorUnderCursor, CallFunc_GetAttachParentActor_ReturnValue) == 0x000018, "Member 'COMP_Scanner_C_GetDescriptorUnderCursor::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetDescriptorUnderCursor, CallFunc_IsChildActor_ReturnValue) == 0x000020, "Member 'COMP_Scanner_C_GetDescriptorUnderCursor::CallFunc_IsChildActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetDescriptorUnderCursor, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'COMP_Scanner_C_GetDescriptorUnderCursor::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetDescriptorUnderCursor, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'COMP_Scanner_C_GetDescriptorUnderCursor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetDescriptorUnderCursor, K2Node_DynamicCast_AsINTERF_Descriptor) == 0x000038, "Member 'COMP_Scanner_C_GetDescriptorUnderCursor::K2Node_DynamicCast_AsINTERF_Descriptor' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetDescriptorUnderCursor, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'COMP_Scanner_C_GetDescriptorUnderCursor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetDescriptorUnderCursor, CallFunc_GetOwner_ReturnValue) == 0x000050, "Member 'COMP_Scanner_C_GetDescriptorUnderCursor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetDescriptorUnderCursor, K2Node_DynamicCast_AsINTERF_Descriptor_1) == 0x000058, "Member 'COMP_Scanner_C_GetDescriptorUnderCursor::K2Node_DynamicCast_AsINTERF_Descriptor_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetDescriptorUnderCursor, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'COMP_Scanner_C_GetDescriptorUnderCursor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.InitializeScanner
// 0x0010 (0x0010 - 0x0000)
struct COMP_Scanner_C_InitializeScanner final
{
public:
	class UCameraComponent*                       Camera;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraPanelWidget*                     CameraPanel;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Scanner_C_InitializeScanner) == 0x000008, "Wrong alignment on COMP_Scanner_C_InitializeScanner");
static_assert(sizeof(COMP_Scanner_C_InitializeScanner) == 0x000010, "Wrong size on COMP_Scanner_C_InitializeScanner");
static_assert(offsetof(COMP_Scanner_C_InitializeScanner, Camera) == 0x000000, "Member 'COMP_Scanner_C_InitializeScanner::Camera' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_InitializeScanner, CameraPanel) == 0x000008, "Member 'COMP_Scanner_C_InitializeScanner::CameraPanel' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.InitializeScannerAttributes
// 0x0040 (0x0040 - 0x0000)
struct COMP_Scanner_C_InitializeScannerAttributes final
{
public:
	class UAttribInstance*                        ScanRangeInstance;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribManagerComponent*                AttribManager;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float CurrValue, float LastValue)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribManagerComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Scanner_C_InitializeScannerAttributes) == 0x000008, "Wrong alignment on COMP_Scanner_C_InitializeScannerAttributes");
static_assert(sizeof(COMP_Scanner_C_InitializeScannerAttributes) == 0x000040, "Wrong size on COMP_Scanner_C_InitializeScannerAttributes");
static_assert(offsetof(COMP_Scanner_C_InitializeScannerAttributes, ScanRangeInstance) == 0x000000, "Member 'COMP_Scanner_C_InitializeScannerAttributes::ScanRangeInstance' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_InitializeScannerAttributes, AttribManager) == 0x000008, "Member 'COMP_Scanner_C_InitializeScannerAttributes::AttribManager' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_InitializeScannerAttributes, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000010, "Member 'COMP_Scanner_C_InitializeScannerAttributes::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_InitializeScannerAttributes, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'COMP_Scanner_C_InitializeScannerAttributes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_InitializeScannerAttributes, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'COMP_Scanner_C_InitializeScannerAttributes::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_InitializeScannerAttributes, CallFunc_GetValue_ReturnValue) == 0x00002C, "Member 'COMP_Scanner_C_InitializeScannerAttributes::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_InitializeScannerAttributes, CallFunc_GetOwner_ReturnValue) == 0x000030, "Member 'COMP_Scanner_C_InitializeScannerAttributes::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_InitializeScannerAttributes, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'COMP_Scanner_C_InitializeScannerAttributes::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.UpdateCursorInformation
// 0x0168 (0x0168 - 0x0000)
struct COMP_Scanner_C_UpdateCursorInformation final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CursorMaterial;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Distance;                                          // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UModelComponent*                        K2Node_DynamicCast_AsModel_Component;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDescriptionFromMaterial_DescriptionText; // 0x0048(0x0018)()
	bool                                          CallFunc_HasCursorObjectChanged_Result;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Descriptor_C>  CallFunc_GetDescriptorUnderCursor_Descriptor;      // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetDescriptionMessage_Message;            // 0x0078(0x0018)()
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetDescriptionFromStaticMesh_DescriptionText; // 0x00B0(0x0018)()
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable;          // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue_1;     // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshDescriptor                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0100(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Interactable_C> K2Node_DynamicCast_AsINTERF_Interactable_1;        // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Scanner_C_UpdateCursorInformation) == 0x000008, "Wrong alignment on COMP_Scanner_C_UpdateCursorInformation");
static_assert(sizeof(COMP_Scanner_C_UpdateCursorInformation) == 0x000168, "Wrong size on COMP_Scanner_C_UpdateCursorInformation");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CursorPrimitive) == 0x000000, "Member 'COMP_Scanner_C_UpdateCursorInformation::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CursorMaterial) == 0x000008, "Member 'COMP_Scanner_C_UpdateCursorInformation::CursorMaterial' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, Distance) == 0x000010, "Member 'COMP_Scanner_C_UpdateCursorInformation::Distance' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, GameInstance) == 0x000018, "Member 'COMP_Scanner_C_UpdateCursorInformation::GameInstance' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_GetGameInstance_ReturnValue) == 0x000020, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, K2Node_DynamicCast_AsGI_Single_Player) == 0x000028, "Member 'COMP_Scanner_C_UpdateCursorInformation::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'COMP_Scanner_C_UpdateCursorInformation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, K2Node_DynamicCast_AsModel_Component) == 0x000038, "Member 'COMP_Scanner_C_UpdateCursorInformation::K2Node_DynamicCast_AsModel_Component' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'COMP_Scanner_C_UpdateCursorInformation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_GetDescriptionFromMaterial_DescriptionText) == 0x000048, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_GetDescriptionFromMaterial_DescriptionText' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_HasCursorObjectChanged_Result) == 0x000060, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_HasCursorObjectChanged_Result' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_GetDescriptorUnderCursor_Descriptor) == 0x000068, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_GetDescriptorUnderCursor_Descriptor' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_GetDescriptionMessage_Message) == 0x000078, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_GetDescriptionMessage_Message' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000090, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_IsValid_ReturnValue_2) == 0x000099, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x0000A0, "Member 'COMP_Scanner_C_UpdateCursorInformation::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'COMP_Scanner_C_UpdateCursorInformation::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_IsValid_ReturnValue_3) == 0x0000A9, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_GetDescriptionFromStaticMesh_DescriptionText) == 0x0000B0, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_GetDescriptionFromStaticMesh_DescriptionText' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, K2Node_DynamicCast_AsINTERF_Interactable) == 0x0000C8, "Member 'COMP_Scanner_C_UpdateCursorInformation::K2Node_DynamicCast_AsINTERF_Interactable' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, K2Node_DynamicCast_bSuccess_3) == 0x0000D8, "Member 'COMP_Scanner_C_UpdateCursorInformation::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_GetOwner_ReturnValue) == 0x0000E0, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_IsValid_ReturnValue_4) == 0x0000E8, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_GetOwner_ReturnValue_1) == 0x0000F0, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_DoesImplementInterface_ReturnValue) == 0x0000F8, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_DoesImplementInterface_ReturnValue_1) == 0x0000F9, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_DoesImplementInterface_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_GetDataTableRowFromName_OutRow) == 0x000100, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000148, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, K2Node_DynamicCast_AsINTERF_Interactable_1) == 0x000150, "Member 'COMP_Scanner_C_UpdateCursorInformation::K2Node_DynamicCast_AsINTERF_Interactable_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, K2Node_DynamicCast_bSuccess_4) == 0x000160, "Member 'COMP_Scanner_C_UpdateCursorInformation::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateCursorInformation, CallFunc_IsValid_ReturnValue_5) == 0x000161, "Member 'COMP_Scanner_C_UpdateCursorInformation::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.UpdateInteractionFeedback
// 0x0180 (0x0180 - 0x0000)
struct COMP_Scanner_C_UpdateInteractionFeedback final
{
public:
	struct FSTRUCT_InteractResults                InteractResults;                                   // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     GameInstance;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CurrDescriptorRowName;                             // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetStaticMeshHasMaterialDescriptor_Result; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetDescRowNameFromStaticMesh_Found;       // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetDescRowNameFromStaticMesh_RowName;     // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetDescRowNameFromMaterial_Found;         // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetDescRowNameFromMaterial_RowName;       // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IINTERF_Descriptor_C>  CallFunc_GetDescriptorUnderCursor_Descriptor;      // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UModelComponent*                        K2Node_DynamicCast_AsModel_Component;              // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetInteractFlavorMessage_Message;         // 0x00A0(0x0018)()
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNextIndex_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_MeshDescriptor                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x00D0(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractFlavorText             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0120(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_InteractFlavorText             CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0148(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   K2Node_DynamicCast_AsStatic_Mesh_Component;        // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x017A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x017B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Scanner_C_UpdateInteractionFeedback) == 0x000008, "Wrong alignment on COMP_Scanner_C_UpdateInteractionFeedback");
static_assert(sizeof(COMP_Scanner_C_UpdateInteractionFeedback) == 0x000180, "Wrong size on COMP_Scanner_C_UpdateInteractionFeedback");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, InteractResults) == 0x000000, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::InteractResults' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, StaticMeshComponent) == 0x000020, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::StaticMeshComponent' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, GameInstance) == 0x000028, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::GameInstance' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CurrDescriptorRowName) == 0x000030, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CurrDescriptorRowName' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, K2Node_DynamicCast_AsGI_Single_Player) == 0x000040, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetStaticMeshHasMaterialDescriptor_Result) == 0x000050, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetStaticMeshHasMaterialDescriptor_Result' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetDescRowNameFromStaticMesh_Found) == 0x000051, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetDescRowNameFromStaticMesh_Found' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetDescRowNameFromStaticMesh_RowName) == 0x000054, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetDescRowNameFromStaticMesh_RowName' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_Not_PreBool_ReturnValue) == 0x00005C, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000060, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000070, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetDescRowNameFromMaterial_Found) == 0x000071, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetDescRowNameFromMaterial_Found' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetDescRowNameFromMaterial_RowName) == 0x000074, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetDescRowNameFromMaterial_RowName' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetDescriptorUnderCursor_Descriptor) == 0x000080, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetDescriptorUnderCursor_Descriptor' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, K2Node_DynamicCast_AsModel_Component) == 0x000090, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::K2Node_DynamicCast_AsModel_Component' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetInteractFlavorMessage_Message) == 0x0000A0, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetInteractFlavorMessage_Message' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x0000B8, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_IsValid_ReturnValue_1) == 0x0000C0, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_IsValid_ReturnValue_2) == 0x0000C1, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetNextIndex_ReturnValue) == 0x0000C4, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetNextIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_Array_Length_ReturnValue_1) == 0x0000C8, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_Greater_IntInt_ReturnValue) == 0x0000CC, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000D0, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000118, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000120, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000140, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_NotEqual_NameName_ReturnValue) == 0x000141, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000148, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000168, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_IsValid_ReturnValue_3) == 0x000169, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, K2Node_DynamicCast_AsStatic_Mesh_Component) == 0x000170, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::K2Node_DynamicCast_AsStatic_Mesh_Component' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, K2Node_DynamicCast_bSuccess_2) == 0x000178, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000179, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_TextIsEmpty_ReturnValue) == 0x00017A, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_BooleanAND_ReturnValue) == 0x00017B, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateInteractionFeedback, CallFunc_BooleanAND_ReturnValue_1) == 0x00017C, "Member 'COMP_Scanner_C_UpdateInteractionFeedback::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.UpdateScanner
// 0x01C0 (0x01C0 - 0x0000)
struct COMP_Scanner_C_UpdateScanner final
{
public:
	struct FVector                                TraceDirection;                                    // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SourceTraceLocation;                               // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableUpdateScanInfo;                              // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      PlayerController;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetVirtualMouseScreenLocation_ReturnValue; // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToViewport_PixelPosition;         // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_AbsoluteToViewport_ViewportPosition;      // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_DeprojectScreenToWorld_WorldPosition;     // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenToWorld_WorldDirection;    // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenToWorld_ReturnValue;       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetBestTraceResult_HitSomething;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x2];                                       // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_GetBestTraceResult_Hit;                   // 0x007C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_106[0x2];                                      // 0x0106(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterialFromHitComponent_ReturnValue;  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Scanner_C_UpdateScanner) == 0x000008, "Wrong alignment on COMP_Scanner_C_UpdateScanner");
static_assert(sizeof(COMP_Scanner_C_UpdateScanner) == 0x0001C0, "Wrong size on COMP_Scanner_C_UpdateScanner");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, TraceDirection) == 0x000000, "Member 'COMP_Scanner_C_UpdateScanner::TraceDirection' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, SourceTraceLocation) == 0x00000C, "Member 'COMP_Scanner_C_UpdateScanner::SourceTraceLocation' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, EnableUpdateScanInfo) == 0x000018, "Member 'COMP_Scanner_C_UpdateScanner::EnableUpdateScanInfo' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, PlayerController) == 0x000020, "Member 'COMP_Scanner_C_UpdateScanner::PlayerController' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_GetVirtualMouseScreenLocation_ReturnValue) == 0x00002C, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_GetVirtualMouseScreenLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_AbsoluteToViewport_PixelPosition) == 0x000034, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_AbsoluteToViewport_PixelPosition' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_AbsoluteToViewport_ViewportPosition) == 0x00003C, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_AbsoluteToViewport_ViewportPosition' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_GetForwardVector_ReturnValue) == 0x000044, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000050, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_IsValid_ReturnValue_1) == 0x00005C, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_DeprojectScreenToWorld_WorldPosition) == 0x000060, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_DeprojectScreenToWorld_WorldPosition' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_DeprojectScreenToWorld_WorldDirection) == 0x00006C, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_DeprojectScreenToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_DeprojectScreenToWorld_ReturnValue) == 0x000078, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_DeprojectScreenToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_GetBestTraceResult_HitSomething) == 0x000079, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_GetBestTraceResult_HitSomething' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_GetBestTraceResult_Hit) == 0x00007C, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_GetBestTraceResult_Hit' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_bBlockingHit) == 0x000104, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_bInitialOverlap) == 0x000105, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_Time) == 0x000108, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_Distance) == 0x00010C, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_Location) == 0x000110, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_ImpactPoint) == 0x00011C, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_Normal) == 0x000128, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_ImpactNormal) == 0x000134, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_PhysMat) == 0x000140, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_HitActor) == 0x000148, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_HitComponent) == 0x000150, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_HitBoneName) == 0x000158, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_HitItem) == 0x000160, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_ElementIndex) == 0x000164, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_FaceIndex) == 0x000168, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_TraceStart) == 0x00016C, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_BreakHitResult_TraceEnd) == 0x000178, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_GetMaterialFromHitComponent_ReturnValue) == 0x000188, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_GetMaterialFromHitComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_GetOwner_ReturnValue) == 0x000190, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, K2Node_DynamicCast_AsPawn) == 0x000198, "Member 'COMP_Scanner_C_UpdateScanner::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'COMP_Scanner_C_UpdateScanner::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, CallFunc_GetController_ReturnValue) == 0x0001A8, "Member 'COMP_Scanner_C_UpdateScanner::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, K2Node_DynamicCast_AsPlayer_Controller) == 0x0001B0, "Member 'COMP_Scanner_C_UpdateScanner::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateScanner, K2Node_DynamicCast_bSuccess_1) == 0x0001B8, "Member 'COMP_Scanner_C_UpdateScanner::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.UpdateFeedbackHistory
// 0x0008 (0x0008 - 0x0000)
struct COMP_Scanner_C_UpdateFeedbackHistory final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Scanner_C_UpdateFeedbackHistory) == 0x000004, "Wrong alignment on COMP_Scanner_C_UpdateFeedbackHistory");
static_assert(sizeof(COMP_Scanner_C_UpdateFeedbackHistory) == 0x000008, "Wrong size on COMP_Scanner_C_UpdateFeedbackHistory");
static_assert(offsetof(COMP_Scanner_C_UpdateFeedbackHistory, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'COMP_Scanner_C_UpdateFeedbackHistory::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateFeedbackHistory, CallFunc_TextIsEmpty_ReturnValue) == 0x000001, "Member 'COMP_Scanner_C_UpdateFeedbackHistory::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateFeedbackHistory, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'COMP_Scanner_C_UpdateFeedbackHistory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_UpdateFeedbackHistory, CallFunc_Array_Add_ReturnValue) == 0x000004, "Member 'COMP_Scanner_C_UpdateFeedbackHistory::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.GetBestTraceResult
// 0x04C8 (0x04C8 - 0x0000)
struct COMP_Scanner_C_GetBestTraceResult final
{
public:
	struct FVector                                SourceLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceDirection;                                    // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitSomething;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             Hit;                                               // 0x001C(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             RayHitResult;                                      // 0x00A4(0x0088)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    ClosestOverlapComponent;                           // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        CurrentShapeComponent;                             // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClosestSquaredDistanceToCamera;                    // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentClosestSqrDistToCamera;                     // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ClosestDistanceToTraceSegment;                     // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentDistanceToTraceSegment;                     // 0x014C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         LowPriorityActors;                                 // 0x0150(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class UPrimitiveComponent*>            OverlapComponents;                                 // 0x0160(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UPrimitiveComponent*                    CurrentPrimitive;                                  // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AdjustedTargetLocation;                            // 0x0178(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0184(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_DynamicCast_AsSkeletal_Mesh_Component;      // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A3[0x1];                                      // 0x01A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue;       // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_DistanceSquared_ReturnValue_1;     // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FA[0x2];                                      // 0x01FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AINTERACT_Base_C*                       K2Node_DynamicCast_AsINTERACT_Base;                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28A[0x6];                                      // 0x028A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0290(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x02A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCenterOfMass_ReturnValue;              // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorNormalAndLength_OutLength;       // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorNormalAndLength_ReturnValue;     // 0x035C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x036C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F5[0x3];                                      // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x0415(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_416[0x2];                                      // 0x0416(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AINTERACT_Base_C*                       K2Node_DynamicCast_AsINTERACT_Base_1;              // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_431[0x3];                                      // 0x0431(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_Interactable_C> CallFunc_GetTargetShape_self_CastInput;            // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UShapeComponent*                        CallFunc_GetTargetShape_ShapeComponent;            // 0x0448(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasHighPriorityTargetShape_Result;        // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x3];                                      // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceBetweenShapeAndSegment_ReturnValue; // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0460(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46D[0x3];                                      // 0x046D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0488(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_CapsuleOverlapComponents_OutComponents;   // 0x04B0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleOverlapComponents_ReturnValue;     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Scanner_C_GetBestTraceResult) == 0x000008, "Wrong alignment on COMP_Scanner_C_GetBestTraceResult");
static_assert(sizeof(COMP_Scanner_C_GetBestTraceResult) == 0x0004C8, "Wrong size on COMP_Scanner_C_GetBestTraceResult");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, SourceLocation) == 0x000000, "Member 'COMP_Scanner_C_GetBestTraceResult::SourceLocation' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, TraceDirection) == 0x00000C, "Member 'COMP_Scanner_C_GetBestTraceResult::TraceDirection' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, HitSomething) == 0x000018, "Member 'COMP_Scanner_C_GetBestTraceResult::HitSomething' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, Hit) == 0x00001C, "Member 'COMP_Scanner_C_GetBestTraceResult::Hit' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, RayHitResult) == 0x0000A4, "Member 'COMP_Scanner_C_GetBestTraceResult::RayHitResult' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, ClosestOverlapComponent) == 0x000130, "Member 'COMP_Scanner_C_GetBestTraceResult::ClosestOverlapComponent' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CurrentShapeComponent) == 0x000138, "Member 'COMP_Scanner_C_GetBestTraceResult::CurrentShapeComponent' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, ClosestSquaredDistanceToCamera) == 0x000140, "Member 'COMP_Scanner_C_GetBestTraceResult::ClosestSquaredDistanceToCamera' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CurrentClosestSqrDistToCamera) == 0x000144, "Member 'COMP_Scanner_C_GetBestTraceResult::CurrentClosestSqrDistToCamera' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, ClosestDistanceToTraceSegment) == 0x000148, "Member 'COMP_Scanner_C_GetBestTraceResult::ClosestDistanceToTraceSegment' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CurrentDistanceToTraceSegment) == 0x00014C, "Member 'COMP_Scanner_C_GetBestTraceResult::CurrentDistanceToTraceSegment' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, LowPriorityActors) == 0x000150, "Member 'COMP_Scanner_C_GetBestTraceResult::LowPriorityActors' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, OverlapComponents) == 0x000160, "Member 'COMP_Scanner_C_GetBestTraceResult::OverlapComponents' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CurrentPrimitive) == 0x000170, "Member 'COMP_Scanner_C_GetBestTraceResult::CurrentPrimitive' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, AdjustedTargetLocation) == 0x000178, "Member 'COMP_Scanner_C_GetBestTraceResult::AdjustedTargetLocation' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, TargetLocation) == 0x000184, "Member 'COMP_Scanner_C_GetBestTraceResult::TargetLocation' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, Temp_int_Array_Index_Variable) == 0x000190, "Member 'COMP_Scanner_C_GetBestTraceResult::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, K2Node_DynamicCast_AsSkeletal_Mesh_Component) == 0x000198, "Member 'COMP_Scanner_C_GetBestTraceResult::K2Node_DynamicCast_AsSkeletal_Mesh_Component' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, K2Node_DynamicCast_bSuccess) == 0x0001A0, "Member 'COMP_Scanner_C_GetBestTraceResult::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x0001A1, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BooleanAND_ReturnValue) == 0x0001A2, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0001A4, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001A8, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Add_VectorVector_ReturnValue) == 0x0001B4, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Less_FloatFloat_ReturnValue) == 0x0001C0, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001C4, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Vector_DistanceSquared_ReturnValue) == 0x0001D0, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Vector_DistanceSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0001D4, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Vector_DistanceSquared_ReturnValue_1) == 0x0001E0, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Vector_DistanceSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0001E4, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, Temp_int_Loop_Counter_Variable) == 0x0001E8, "Member 'COMP_Scanner_C_GetBestTraceResult::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Array_Length_ReturnValue) == 0x0001EC, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001F0, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Add_IntInt_ReturnValue) == 0x0001F4, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_bBlockingHit) == 0x0001F8, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001F9, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_Time) == 0x0001FC, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_Distance) == 0x000200, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_Location) == 0x000204, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_ImpactPoint) == 0x000210, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_Normal) == 0x00021C, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_ImpactNormal) == 0x000228, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_PhysMat) == 0x000238, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_HitActor) == 0x000240, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_HitComponent) == 0x000248, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_HitBoneName) == 0x000250, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_HitItem) == 0x000258, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_ElementIndex) == 0x00025C, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_FaceIndex) == 0x000260, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_TraceStart) == 0x000264, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BreakHitResult_TraceEnd) == 0x000270, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, K2Node_DynamicCast_AsINTERACT_Base) == 0x000280, "Member 'COMP_Scanner_C_GetBestTraceResult::K2Node_DynamicCast_AsINTERACT_Base' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, K2Node_DynamicCast_bSuccess_1) == 0x000288, "Member 'COMP_Scanner_C_GetBestTraceResult::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_BooleanOR_ReturnValue) == 0x000289, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, Temp_object_Variable) == 0x000290, "Member 'COMP_Scanner_C_GetBestTraceResult::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_LineTraceSingle_OutHit) == 0x0002A0, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_LineTraceSingle_ReturnValue) == 0x000328, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00032C, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Add_FloatFloat_ReturnValue) == 0x000330, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_GetCenterOfMass_ReturnValue) == 0x000334, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_GetCenterOfMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000340, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x00034C, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_GetVectorNormalAndLength_OutLength) == 0x000358, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_GetVectorNormalAndLength_OutLength' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_GetVectorNormalAndLength_ReturnValue) == 0x00035C, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_GetVectorNormalAndLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000368, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_LineTraceSingle_OutHit_1) == 0x00036C, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_LineTraceSingle_ReturnValue_1) == 0x0003F4, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_FMin_ReturnValue) == 0x0003F8, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0003FC, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000408, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_IsValid_ReturnValue) == 0x000414, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x000415, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_GetOwner_ReturnValue) == 0x000418, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_GetOwner_ReturnValue_1) == 0x000420, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, K2Node_DynamicCast_AsINTERACT_Base_1) == 0x000428, "Member 'COMP_Scanner_C_GetBestTraceResult::K2Node_DynamicCast_AsINTERACT_Base_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, K2Node_DynamicCast_bSuccess_2) == 0x000430, "Member 'COMP_Scanner_C_GetBestTraceResult::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Array_AddUnique_ReturnValue) == 0x000434, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_GetTargetShape_self_CastInput) == 0x000438, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_GetTargetShape_self_CastInput' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_GetTargetShape_ShapeComponent) == 0x000448, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_GetTargetShape_ShapeComponent' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_HasHighPriorityTargetShape_Result) == 0x000450, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_HasHighPriorityTargetShape_Result' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_GetDistanceBetweenShapeAndSegment_ReturnValue) == 0x000454, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_GetDistanceBetweenShapeAndSegment_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_IsValid_ReturnValue_1) == 0x000458, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Array_Get_Item) == 0x000460, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Array_Length_ReturnValue_1) == 0x000468, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Less_IntInt_ReturnValue) == 0x00046C, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Array_Length_ReturnValue_2) == 0x000470, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_GetOwner_ReturnValue_2) == 0x000478, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Greater_IntInt_ReturnValue) == 0x000480, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, K2Node_MakeArray_Array) == 0x000488, "Member 'COMP_Scanner_C_GetBestTraceResult::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000498, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_Divide_VectorFloat_ReturnValue) == 0x0004A4, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_CapsuleOverlapComponents_OutComponents) == 0x0004B0, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_CapsuleOverlapComponents_OutComponents' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_GetBestTraceResult, CallFunc_CapsuleOverlapComponents_ReturnValue) == 0x0004C0, "Member 'COMP_Scanner_C_GetBestTraceResult::CallFunc_CapsuleOverlapComponents_ReturnValue' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.EVENT_OnScanRangeChanged
// 0x0008 (0x0008 - 0x0000)
struct COMP_Scanner_C_EVENT_OnScanRangeChanged final
{
public:
	float                                         CurrValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastValue;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_Scanner_C_EVENT_OnScanRangeChanged) == 0x000004, "Wrong alignment on COMP_Scanner_C_EVENT_OnScanRangeChanged");
static_assert(sizeof(COMP_Scanner_C_EVENT_OnScanRangeChanged) == 0x000008, "Wrong size on COMP_Scanner_C_EVENT_OnScanRangeChanged");
static_assert(offsetof(COMP_Scanner_C_EVENT_OnScanRangeChanged, CurrValue) == 0x000000, "Member 'COMP_Scanner_C_EVENT_OnScanRangeChanged::CurrValue' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_EVENT_OnScanRangeChanged, LastValue) == 0x000004, "Member 'COMP_Scanner_C_EVENT_OnScanRangeChanged::LastValue' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.IsScannerDisabled
// 0x0002 (0x0002 - 0x0000)
struct COMP_Scanner_C_IsScannerDisabled final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Scanner_C_IsScannerDisabled) == 0x000001, "Wrong alignment on COMP_Scanner_C_IsScannerDisabled");
static_assert(sizeof(COMP_Scanner_C_IsScannerDisabled) == 0x000002, "Wrong size on COMP_Scanner_C_IsScannerDisabled");
static_assert(offsetof(COMP_Scanner_C_IsScannerDisabled, Result) == 0x000000, "Member 'COMP_Scanner_C_IsScannerDisabled::Result' has a wrong offset!");
static_assert(offsetof(COMP_Scanner_C_IsScannerDisabled, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'COMP_Scanner_C_IsScannerDisabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function COMP_Scanner.COMP_Scanner_C.SetScannerEnabled
// 0x0001 (0x0001 - 0x0000)
struct COMP_Scanner_C_SetScannerEnabled final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_Scanner_C_SetScannerEnabled) == 0x000001, "Wrong alignment on COMP_Scanner_C_SetScannerEnabled");
static_assert(sizeof(COMP_Scanner_C_SetScannerEnabled) == 0x000001, "Wrong size on COMP_Scanner_C_SetScannerEnabled");
static_assert(offsetof(COMP_Scanner_C_SetScannerEnabled, State) == 0x000000, "Member 'COMP_Scanner_C_SetScannerEnabled::State' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_MeleeDamageComponent

#include "Basic.hpp"

#include "COMP_MeleeDamageComponent_classes.hpp"
#include "COMP_MeleeDamageComponent_parameters.hpp"


namespace SDK
{

// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.OnHitboxBeginOverlap__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlapActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OverlapComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             HitboxTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DamageScale                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBoxComponent*                    HitboxComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_MeleeDamageComponent_C::OnHitboxBeginOverlap__DelegateSignature(class AActor* OverlapActor, class UPrimitiveComponent* OverlapComponent, class FName HitboxTag, float DamageScale, class UBoxComponent* HitboxComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "OnHitboxBeginOverlap__DelegateSignature");

	Params::COMP_MeleeDamageComponent_C_OnHitboxBeginOverlap__DelegateSignature Parms{};

	Parms.OverlapActor = OverlapActor;
	Parms.OverlapComponent = OverlapComponent;
	Parms.HitboxTag = HitboxTag;
	Parms.DamageScale = DamageScale;
	Parms.HitboxComponent = HitboxComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.OnHitboxEndOverlap__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OverlapActor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             HitboxTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_MeleeDamageComponent_C::OnHitboxEndOverlap__DelegateSignature(class AActor* OverlapActor, class FName HitboxTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "OnHitboxEndOverlap__DelegateSignature");

	Params::COMP_MeleeDamageComponent_C_OnHitboxEndOverlap__DelegateSignature Parms{};

	Parms.OverlapActor = OverlapActor;
	Parms.HitboxTag = HitboxTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.ExecuteUbergraph_COMP_MeleeDamageComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_MeleeDamageComponent_C::ExecuteUbergraph_COMP_MeleeDamageComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "ExecuteUbergraph_COMP_MeleeDamageComponent");

	Params::COMP_MeleeDamageComponent_C_ExecuteUbergraph_COMP_MeleeDamageComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_MeleeDamageComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "ReceiveTick");

	Params::COMP_MeleeDamageComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UCOMP_MeleeDamageComponent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.InitializeHitboxes
// (Protected, BlueprintCallable, BlueprintEvent)

void UCOMP_MeleeDamageComponent_C::InitializeHitboxes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "InitializeHitboxes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.EnableHitboxesByTag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             HitboxTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_MeleeDamageComponent_C::EnableHitboxesByTag(class FName HitboxTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "EnableHitboxesByTag");

	Params::COMP_MeleeDamageComponent_C_EnableHitboxesByTag Parms{};

	Parms.HitboxTag = HitboxTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.GetPrioritizedHitboxesByTag
// (Private, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             HitboxesTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UBoxComponent*>            Result                                                 (Parm, OutParm, ContainsInstancedReference)

void UCOMP_MeleeDamageComponent_C::GetPrioritizedHitboxesByTag(class FName HitboxesTag, TArray<class UBoxComponent*>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "GetPrioritizedHitboxesByTag");

	Params::COMP_MeleeDamageComponent_C_GetPrioritizedHitboxesByTag Parms{};

	Parms.HitboxesTag = HitboxesTag;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.DisableHitboxesByTag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             HitboxTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_MeleeDamageComponent_C::DisableHitboxesByTag(class FName HitboxTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "DisableHitboxesByTag");

	Params::COMP_MeleeDamageComponent_C_DisableHitboxesByTag Parms{};

	Parms.HitboxTag = HitboxTag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.CompareHitboxComponentDamage
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          ObjectA                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          ObjectB                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UCOMP_MeleeDamageComponent_C::CompareHitboxComponentDamage(const class UObject* ObjectA, const class UObject* ObjectB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "CompareHitboxComponentDamage");

	Params::COMP_MeleeDamageComponent_C_CompareHitboxComponentDamage Parms{};

	Parms.ObjectA = ObjectA;
	Parms.ObjectB = ObjectB;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.HasAnyHitboxOverlaps
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_MeleeDamageComponent_C::HasAnyHitboxOverlaps(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "HasAnyHitboxOverlaps");

	Params::COMP_MeleeDamageComponent_C_HasAnyHitboxOverlaps Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.GetHitboxOverlapIndexByTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_MeleeDamageComponent_C::GetHitboxOverlapIndexByTag(class FName Tag, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "GetHitboxOverlapIndexByTag");

	Params::COMP_MeleeDamageComponent_C_GetHitboxOverlapIndexByTag Parms{};

	Parms.Tag = Tag;

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.DisableAllHitboxes
// (Public, BlueprintCallable, BlueprintEvent)

void UCOMP_MeleeDamageComponent_C::DisableAllHitboxes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "DisableAllHitboxes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.UpdateHitboxOverlaps
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_MeleeDamageComponent_C::UpdateHitboxOverlaps(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "UpdateHitboxOverlaps");

	Params::COMP_MeleeDamageComponent_C_UpdateHitboxOverlaps Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.HandleHitboxOverlap
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBoxComponent*                    OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComponent                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             HitboxTag                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DuringUpdate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCOMP_MeleeDamageComponent_C::HandleHitboxOverlap(class UBoxComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComponent, class FName HitboxTag, bool DuringUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "HandleHitboxOverlap");

	Params::COMP_MeleeDamageComponent_C_HandleHitboxOverlap Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComponent = OtherComponent;
	Parms.HitboxTag = HitboxTag;
	Parms.DuringUpdate = DuringUpdate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.GetCurrentHitboxDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBoxComponent*                    HitboxComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Vector                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_MeleeDamageComponent_C::GetCurrentHitboxDirection(class UBoxComponent* HitboxComponent, struct FVector* Vector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "GetCurrentHitboxDirection");

	Params::COMP_MeleeDamageComponent_C_GetCurrentHitboxDirection Parms{};

	Parms.HitboxComponent = HitboxComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Vector != nullptr)
		*Vector = std::move(Parms.Vector);
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.GetHitboxDamageScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBoxComponent*                    HitboxComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCOMP_MeleeDamageComponent_C::GetHitboxDamageScale(class UBoxComponent* HitboxComponent, float* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "GetHitboxDamageScale");

	Params::COMP_MeleeDamageComponent_C_GetHitboxDamageScale Parms{};

	Parms.HitboxComponent = HitboxComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function COMP_MeleeDamageComponent.COMP_MeleeDamageComponent_C.ShouldSaveComponent
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FStreamingSaveGameComponentParamsParams_0                                               (Parm, OutParm, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UCOMP_MeleeDamageComponent_C::ShouldSaveComponent(struct FStreamingSaveGameComponentParams* Params_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("COMP_MeleeDamageComponent_C", "ShouldSaveComponent");

	Params::COMP_MeleeDamageComponent_C_ShouldSaveComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Params_0 != nullptr)
		*Params_0 = std::move(Parms.Params_0);

	return Parms.ReturnValue;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_Hopper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PAWN_Enemy_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PAWN_Hopper.PAWN_Hopper_C
// 0x00D0 (0x0AE0 - 0x0A10)
class APAWN_Hopper_C final : public APAWN_Enemy_C
{
public:
	uint8                                         Pad_A01[0x7];                                      // 0x0A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    SpotLight;                                         // 0x0A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Hitbox_Melee;                                      // 0x0A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_MeleeDamageComponent_C*           COMP_MeleeDamageComponent;                         // 0x0A18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     MouthAudio;                                        // 0x0A20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          ScanBox;                                           // 0x0A28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         HoverLightFadeDuration;                            // 0x0A30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastHoverLightTimestamp;                           // 0x0A34(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHoverLightIntensity;                            // 0x0A38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3C[0x4];                                      // 0x0A3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           HoverLightTimerHandle;                             // 0x0A40(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           HopperDisableDeathTimerHandle;                     // 0x0A48(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          ExplosionFX;                                       // 0x0A50(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UNiagaraSystem*                         HoverFX;                                           // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              HoverStartSoundCue;                                // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              HoverEndSoundCue;                                  // 0x0A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              HoverLoopSoundCue;                                 // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               DestructSoundCue;                                  // 0x0A98(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UNiagaraComponent*                      HoverEffectComponent;                              // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVoxelAudioComponent*                   HoverAudioComponent;                               // 0x0AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    GoreMeshes;                                        // 0x0AD0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void GetProxyBarrelLocation(struct FVector* Result);
	void EVENT_OnDisableAttribChanged(float CurrValue, float LastValue);
	void EVENT_OnHopperDieFromDisable();
	void OnCharacterDied(class UOBJ_ImpactData_C* ImpactData, const struct FAttribDamageInstance& DamageInstance, class AActor* OtherActor, bool* Result);
	void ShouldHopperExplode(const struct FAttribDamageInstance& DamageInstance, bool* Result);
	void OnHopperExplode(class AActor* SourceActor);
	void OnDeathImpact(const struct FAttribDamageInstance& DamageInstance, class UOBJ_ImpactData_C* ImpactData, bool* Result);
	void TryStartHoverEffects();
	void TryStopHoverEffects();
	void SetCharacterPropertiesToDead(bool* Result);
	void TryStartHoverLightTimer();
	void EVENT_OnHoverLightTick();
	void ForceStartNextHoverLightTick();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PAWN_Hopper_C">();
	}
	static class APAWN_Hopper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APAWN_Hopper_C>();
	}
};
static_assert(alignof(APAWN_Hopper_C) == 0x000010, "Wrong alignment on APAWN_Hopper_C");
static_assert(sizeof(APAWN_Hopper_C) == 0x000AE0, "Wrong size on APAWN_Hopper_C");
static_assert(offsetof(APAWN_Hopper_C, SpotLight) == 0x000A08, "Member 'APAWN_Hopper_C::SpotLight' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, Hitbox_Melee) == 0x000A10, "Member 'APAWN_Hopper_C::Hitbox_Melee' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, COMP_MeleeDamageComponent) == 0x000A18, "Member 'APAWN_Hopper_C::COMP_MeleeDamageComponent' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, MouthAudio) == 0x000A20, "Member 'APAWN_Hopper_C::MouthAudio' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, ScanBox) == 0x000A28, "Member 'APAWN_Hopper_C::ScanBox' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, HoverLightFadeDuration) == 0x000A30, "Member 'APAWN_Hopper_C::HoverLightFadeDuration' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, LastHoverLightTimestamp) == 0x000A34, "Member 'APAWN_Hopper_C::LastHoverLightTimestamp' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, MaxHoverLightIntensity) == 0x000A38, "Member 'APAWN_Hopper_C::MaxHoverLightIntensity' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, HoverLightTimerHandle) == 0x000A40, "Member 'APAWN_Hopper_C::HoverLightTimerHandle' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, HopperDisableDeathTimerHandle) == 0x000A48, "Member 'APAWN_Hopper_C::HopperDisableDeathTimerHandle' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, ExplosionFX) == 0x000A50, "Member 'APAWN_Hopper_C::ExplosionFX' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, HoverFX) == 0x000A78, "Member 'APAWN_Hopper_C::HoverFX' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, HoverStartSoundCue) == 0x000A80, "Member 'APAWN_Hopper_C::HoverStartSoundCue' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, HoverEndSoundCue) == 0x000A88, "Member 'APAWN_Hopper_C::HoverEndSoundCue' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, HoverLoopSoundCue) == 0x000A90, "Member 'APAWN_Hopper_C::HoverLoopSoundCue' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, DestructSoundCue) == 0x000A98, "Member 'APAWN_Hopper_C::DestructSoundCue' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, HoverEffectComponent) == 0x000AC0, "Member 'APAWN_Hopper_C::HoverEffectComponent' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, HoverAudioComponent) == 0x000AC8, "Member 'APAWN_Hopper_C::HoverAudioComponent' has a wrong offset!");
static_assert(offsetof(APAWN_Hopper_C, GoreMeshes) == 0x000AD0, "Member 'APAWN_Hopper_C::GoreMeshes' has a wrong offset!");

}


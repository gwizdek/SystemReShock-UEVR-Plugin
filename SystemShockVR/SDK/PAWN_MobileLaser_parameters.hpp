#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PAWN_MobileLaser

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AttributeSystem_structs.hpp"


namespace SDK::Params
{

// Function PAWN_MobileLaser.PAWN_MobileLaser_C.ExecuteUbergraph_PAWN_MobileLaser
// 0x0060 (0x0060 - 0x0000)
struct PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsTurning)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_IsMoving;                       // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsTurning;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsMoving)>                K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue_1;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_2;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser) == 0x000008, "Wrong alignment on PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser");
static_assert(sizeof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser) == 0x000060, "Wrong size on PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, EntryPoint) == 0x000000, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::EntryPoint' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, K2Node_CustomEvent_IsMoving) == 0x000014, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::K2Node_CustomEvent_IsMoving' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, K2Node_CustomEvent_IsTurning) == 0x000015, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::K2Node_CustomEvent_IsTurning' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, CallFunc_BooleanOR_ReturnValue) == 0x000016, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, Temp_object_Variable) == 0x000018, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, K2Node_DynamicCast_AsSound_Cue) == 0x000020, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, K2Node_CustomEvent_Loaded) == 0x000030, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000038, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, CallFunc_NotEqual_BoolBool_ReturnValue_1) == 0x00004C, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::CallFunc_NotEqual_BoolBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member 'PAWN_MobileLaser_C_ExecuteUbergraph_PAWN_MobileLaser::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function PAWN_MobileLaser.PAWN_MobileLaser_C.EVENT_OnTurningChanged
// 0x0001 (0x0001 - 0x0000)
struct PAWN_MobileLaser_C_EVENT_OnTurningChanged final
{
public:
	bool                                          IsTurning_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_MobileLaser_C_EVENT_OnTurningChanged) == 0x000001, "Wrong alignment on PAWN_MobileLaser_C_EVENT_OnTurningChanged");
static_assert(sizeof(PAWN_MobileLaser_C_EVENT_OnTurningChanged) == 0x000001, "Wrong size on PAWN_MobileLaser_C_EVENT_OnTurningChanged");
static_assert(offsetof(PAWN_MobileLaser_C_EVENT_OnTurningChanged, IsTurning_0) == 0x000000, "Member 'PAWN_MobileLaser_C_EVENT_OnTurningChanged::IsTurning_0' has a wrong offset!");

// Function PAWN_MobileLaser.PAWN_MobileLaser_C.EVENT_OnLocomotionChanged
// 0x0001 (0x0001 - 0x0000)
struct PAWN_MobileLaser_C_EVENT_OnLocomotionChanged final
{
public:
	bool                                          IsMoving_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_MobileLaser_C_EVENT_OnLocomotionChanged) == 0x000001, "Wrong alignment on PAWN_MobileLaser_C_EVENT_OnLocomotionChanged");
static_assert(sizeof(PAWN_MobileLaser_C_EVENT_OnLocomotionChanged) == 0x000001, "Wrong size on PAWN_MobileLaser_C_EVENT_OnLocomotionChanged");
static_assert(offsetof(PAWN_MobileLaser_C_EVENT_OnLocomotionChanged, IsMoving_0) == 0x000000, "Member 'PAWN_MobileLaser_C_EVENT_OnLocomotionChanged::IsMoving_0' has a wrong offset!");

// Function PAWN_MobileLaser.PAWN_MobileLaser_C.OnLoaded_7641D7A14FD0F0721A480E9681E723DF
// 0x0008 (0x0008 - 0x0000)
struct PAWN_MobileLaser_C_OnLoaded_7641D7A14FD0F0721A480E9681E723DF final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_MobileLaser_C_OnLoaded_7641D7A14FD0F0721A480E9681E723DF) == 0x000008, "Wrong alignment on PAWN_MobileLaser_C_OnLoaded_7641D7A14FD0F0721A480E9681E723DF");
static_assert(sizeof(PAWN_MobileLaser_C_OnLoaded_7641D7A14FD0F0721A480E9681E723DF) == 0x000008, "Wrong size on PAWN_MobileLaser_C_OnLoaded_7641D7A14FD0F0721A480E9681E723DF");
static_assert(offsetof(PAWN_MobileLaser_C_OnLoaded_7641D7A14FD0F0721A480E9681E723DF, Loaded) == 0x000000, "Member 'PAWN_MobileLaser_C_OnLoaded_7641D7A14FD0F0721A480E9681E723DF::Loaded' has a wrong offset!");

// Function PAWN_MobileLaser.PAWN_MobileLaser_C.GetProxyBarrelWorldLocation
// 0x003C (0x003C - 0x0000)
struct PAWN_MobileLaser_C_GetProxyBarrelWorldLocation final
{
public:
	struct FVector                                ProxyBarrelLocation;                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PAWN_MobileLaser_C_GetProxyBarrelWorldLocation) == 0x000004, "Wrong alignment on PAWN_MobileLaser_C_GetProxyBarrelWorldLocation");
static_assert(sizeof(PAWN_MobileLaser_C_GetProxyBarrelWorldLocation) == 0x00003C, "Wrong size on PAWN_MobileLaser_C_GetProxyBarrelWorldLocation");
static_assert(offsetof(PAWN_MobileLaser_C_GetProxyBarrelWorldLocation, ProxyBarrelLocation) == 0x000000, "Member 'PAWN_MobileLaser_C_GetProxyBarrelWorldLocation::ProxyBarrelLocation' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_GetProxyBarrelWorldLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00000C, "Member 'PAWN_MobileLaser_C_GetProxyBarrelWorldLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_GetProxyBarrelWorldLocation, CallFunc_GetUpVector_ReturnValue) == 0x000018, "Member 'PAWN_MobileLaser_C_GetProxyBarrelWorldLocation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_GetProxyBarrelWorldLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000024, "Member 'PAWN_MobileLaser_C_GetProxyBarrelWorldLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_GetProxyBarrelWorldLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000030, "Member 'PAWN_MobileLaser_C_GetProxyBarrelWorldLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function PAWN_MobileLaser.PAWN_MobileLaser_C.OnCharacterDied
// 0x0060 (0x0060 - 0x0000)
struct PAWN_MobileLaser_C_OnCharacterDied final
{
public:
	class UOBJ_ImpactData_C*                      ImpactData;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttribDamageInstance                  DamageInstance;                                    // 0x0008(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 OtherActor;                                        // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnCharacterDied_Result;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IINTERF_ANIM_Character_C> K2Node_DynamicCast_AsINTERF_ANIM_Character;        // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStance_Result;                         // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_MobileLaser_C_OnCharacterDied) == 0x000008, "Wrong alignment on PAWN_MobileLaser_C_OnCharacterDied");
static_assert(sizeof(PAWN_MobileLaser_C_OnCharacterDied) == 0x000060, "Wrong size on PAWN_MobileLaser_C_OnCharacterDied");
static_assert(offsetof(PAWN_MobileLaser_C_OnCharacterDied, ImpactData) == 0x000000, "Member 'PAWN_MobileLaser_C_OnCharacterDied::ImpactData' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnCharacterDied, DamageInstance) == 0x000008, "Member 'PAWN_MobileLaser_C_OnCharacterDied::DamageInstance' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnCharacterDied, OtherActor) == 0x000030, "Member 'PAWN_MobileLaser_C_OnCharacterDied::OtherActor' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnCharacterDied, Result) == 0x000038, "Member 'PAWN_MobileLaser_C_OnCharacterDied::Result' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnCharacterDied, CallFunc_OnCharacterDied_Result) == 0x000039, "Member 'PAWN_MobileLaser_C_OnCharacterDied::CallFunc_OnCharacterDied_Result' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnCharacterDied, CallFunc_GetAnimInstance_ReturnValue) == 0x000040, "Member 'PAWN_MobileLaser_C_OnCharacterDied::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnCharacterDied, K2Node_DynamicCast_AsINTERF_ANIM_Character) == 0x000048, "Member 'PAWN_MobileLaser_C_OnCharacterDied::K2Node_DynamicCast_AsINTERF_ANIM_Character' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnCharacterDied, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'PAWN_MobileLaser_C_OnCharacterDied::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnCharacterDied, CallFunc_SetStance_Result) == 0x000059, "Member 'PAWN_MobileLaser_C_OnCharacterDied::CallFunc_SetStance_Result' has a wrong offset!");

// Function PAWN_MobileLaser.PAWN_MobileLaser_C.InitializeCharacterAsDead
// 0x0002 (0x0002 - 0x0000)
struct PAWN_MobileLaser_C_InitializeCharacterAsDead final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InitializeCharacterAsDead_Result;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_MobileLaser_C_InitializeCharacterAsDead) == 0x000001, "Wrong alignment on PAWN_MobileLaser_C_InitializeCharacterAsDead");
static_assert(sizeof(PAWN_MobileLaser_C_InitializeCharacterAsDead) == 0x000002, "Wrong size on PAWN_MobileLaser_C_InitializeCharacterAsDead");
static_assert(offsetof(PAWN_MobileLaser_C_InitializeCharacterAsDead, Result) == 0x000000, "Member 'PAWN_MobileLaser_C_InitializeCharacterAsDead::Result' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_InitializeCharacterAsDead, CallFunc_InitializeCharacterAsDead_Result) == 0x000001, "Member 'PAWN_MobileLaser_C_InitializeCharacterAsDead::CallFunc_InitializeCharacterAsDead_Result' has a wrong offset!");

// Function PAWN_MobileLaser.PAWN_MobileLaser_C.OnDynaDamage
// 0x00F0 (0x00F0 - 0x0000)
struct PAWN_MobileLaser_C_OnDynaDamage final
{
public:
	class FName                                   DynaElement;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnBeginPlay;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UAttribMod*, struct FAttribDamageInstance> CallFunc_ApplyExplosiveDamageAndImpulse_DamageInstances; // 0x0018(0x0050)()
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_MobileLaser_C_OnDynaDamage) == 0x000010, "Wrong alignment on PAWN_MobileLaser_C_OnDynaDamage");
static_assert(sizeof(PAWN_MobileLaser_C_OnDynaDamage) == 0x0000F0, "Wrong size on PAWN_MobileLaser_C_OnDynaDamage");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, DynaElement) == 0x000000, "Member 'PAWN_MobileLaser_C_OnDynaDamage::DynaElement' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, OnBeginPlay) == 0x000008, "Member 'PAWN_MobileLaser_C_OnDynaDamage::OnBeginPlay' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_Not_PreBool_ReturnValue_1) == 0x00000A, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000B, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_GetSocketLocation_ReturnValue) == 0x00000C, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_ApplyExplosiveDamageAndImpulse_DamageInstances) == 0x000018, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_ApplyExplosiveDamageAndImpulse_DamageInstances' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000068, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x0000A0, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x0000D0, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_MakeLiteralName_ReturnValue) == 0x0000D4, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x0000DC, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0000E0, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x0000E8, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PAWN_MobileLaser_C_OnDynaDamage, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x0000E9, "Member 'PAWN_MobileLaser_C_OnDynaDamage::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");

// Function PAWN_MobileLaser.PAWN_MobileLaser_C.OnLowFiBehaviorStateChanged
// 0x0001 (0x0001 - 0x0000)
struct PAWN_MobileLaser_C_OnLowFiBehaviorStateChanged final
{
public:
	bool                                          NewLowFiState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PAWN_MobileLaser_C_OnLowFiBehaviorStateChanged) == 0x000001, "Wrong alignment on PAWN_MobileLaser_C_OnLowFiBehaviorStateChanged");
static_assert(sizeof(PAWN_MobileLaser_C_OnLowFiBehaviorStateChanged) == 0x000001, "Wrong size on PAWN_MobileLaser_C_OnLowFiBehaviorStateChanged");
static_assert(offsetof(PAWN_MobileLaser_C_OnLowFiBehaviorStateChanged, NewLowFiState) == 0x000000, "Member 'PAWN_MobileLaser_C_OnLowFiBehaviorStateChanged::NewLowFiState' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MODKIT_Sparqbeam_Cooling

#include "Basic.hpp"

#include "STRUCT_WeaponMode_structs.hpp"
#include "STRUCT_WeaponPropertyValue_structs.hpp"


namespace SDK::Params
{

// Function MODKIT_Sparqbeam_Cooling.MODKIT_Sparqbeam_Cooling_C.TryApplyWeaponModifications
// 0x0010 (0x0010 - 0x0000)
struct MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications final
{
public:
	class UITEM_WeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DuringInitialization;                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryApplyWeaponModifications_Result;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications) == 0x000008, "Wrong alignment on MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications");
static_assert(sizeof(MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications) == 0x000010, "Wrong size on MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications, Weapon) == 0x000000, "Member 'MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications::Weapon' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications, DuringInitialization) == 0x000008, "Member 'MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications::DuringInitialization' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications, Result) == 0x000009, "Member 'MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications::Result' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications, CallFunc_TryApplyWeaponModifications_Result) == 0x00000A, "Member 'MODKIT_Sparqbeam_Cooling_C_TryApplyWeaponModifications::CallFunc_TryApplyWeaponModifications_Result' has a wrong offset!");

// Function MODKIT_Sparqbeam_Cooling.MODKIT_Sparqbeam_Cooling_C.GetModifiedWeaponMode
// 0x0328 (0x0328 - 0x0000)
struct MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode final
{
public:
	struct FSTRUCT_WeaponMode                     WeaponMode;                                        // 0x0000(0x0100)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     ResultMode;                                        // 0x0100(0x0100)(Parm, OutParm, HasGetValueTypeHash)
	TArray<struct FSTRUCT_WeaponPropertyValue>    WeaponProperties;                                  // 0x0200(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_GetWeaponPropertyIndexByType_ArrayIndex;  // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     K2Node_SetFieldsInStruct_StructOut;                // 0x0220(0x0100)(HasGetValueTypeHash)
	struct FSTRUCT_WeaponPropertyValue            K2Node_MakeStruct_STRUCT_WeaponPropertyValue;      // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode) == 0x000008, "Wrong alignment on MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode");
static_assert(sizeof(MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode) == 0x000328, "Wrong size on MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode, WeaponMode) == 0x000000, "Member 'MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode::WeaponMode' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode, ResultMode) == 0x000100, "Member 'MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode::ResultMode' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode, WeaponProperties) == 0x000200, "Member 'MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode::WeaponProperties' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode, CallFunc_GetWeaponPropertyIndexByType_ArrayIndex) == 0x000210, "Member 'MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode::CallFunc_GetWeaponPropertyIndexByType_ArrayIndex' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode, CallFunc_GetWeaponPropertyValueByType_Value) == 0x000214, "Member 'MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000218, "Member 'MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode, CallFunc_Round_ReturnValue) == 0x00021C, "Member 'MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode, K2Node_SetFieldsInStruct_StructOut) == 0x000220, "Member 'MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode, K2Node_MakeStruct_STRUCT_WeaponPropertyValue) == 0x000320, "Member 'MODKIT_Sparqbeam_Cooling_C_GetModifiedWeaponMode::K2Node_MakeStruct_STRUCT_WeaponPropertyValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_PlayerHUD

#include "Basic.hpp"

#include "WIDGET_PlayerHUD_classes.hpp"
#include "WIDGET_PlayerHUD_parameters.hpp"


namespace SDK
{

// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HoverItemChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_Base_C*                     NewItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::HoverItemChanged__DelegateSignature(class UITEM_Base_C* NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "HoverItemChanged__DelegateSignature");

	Params::WIDGET_PlayerHUD_C_HoverItemChanged__DelegateSignature Parms{};

	Parms.NewItem = NewItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ExecuteUbergraph_WIDGET_PlayerHUD
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::ExecuteUbergraph_WIDGET_PlayerHUD(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "ExecuteUbergraph_WIDGET_PlayerHUD");

	Params::WIDGET_PlayerHUD_C_ExecuteUbergraph_WIDGET_PlayerHUD Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWIDGET_PlayerHUD_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "Tick");

	Params::WIDGET_PlayerHUD_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWIDGET_PlayerHUD_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnScanDataChanged
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Interactable                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              Primitive                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Description                                            (BlueprintVisible, BlueprintReadOnly, Parm)

void UWIDGET_PlayerHUD_C::EVENT_OnScanDataChanged(class UObject* Interactable, class UPrimitiveComponent* Primitive, const class FText& Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnScanDataChanged");

	Params::WIDGET_PlayerHUD_C_EVENT_OnScanDataChanged Parms{};

	Parms.Interactable = Interactable;
	Parms.Primitive = Primitive;
	Parms.Description = std::move(Description);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.CanDisplayDescription
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::CanDisplayDescription(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "CanDisplayDescription");

	Params::WIDGET_PlayerHUD_C_CanDisplayDescription Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnHealthChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Curr_Value                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Prev_Value                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Max_Value                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EModApplyType                           Apply_Type                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::EVENT_OnHealthChanged(float Curr_Value, float Prev_Value, float Max_Value, EModApplyType Apply_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnHealthChanged");

	Params::WIDGET_PlayerHUD_C_EVENT_OnHealthChanged Parms{};

	Parms.Curr_Value = Curr_Value;
	Parms.Prev_Value = Prev_Value;
	Parms.Max_Value = Max_Value;
	Parms.Apply_Type = Apply_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnEnergyChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Curr_Value                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Prev_Value                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Max_Value                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EModApplyType                           Apply_Type                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::EVENT_OnEnergyChanged(float Curr_Value, float Prev_Value, float Max_Value, EModApplyType Apply_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnEnergyChanged");

	Params::WIDGET_PlayerHUD_C_EVENT_OnEnergyChanged Parms{};

	Parms.Curr_Value = Curr_Value;
	Parms.Prev_Value = Prev_Value;
	Parms.Max_Value = Max_Value;
	Parms.Apply_Type = Apply_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnStaminaChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Curr_Value                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Prev_Value                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Max_Value                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EModApplyType                           Apply_Type                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::EVENT_OnStaminaChanged(float Curr_Value, float Prev_Value, float Max_Value, EModApplyType Apply_Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnStaminaChanged");

	Params::WIDGET_PlayerHUD_C_EVENT_OnStaminaChanged Parms{};

	Parms.Curr_Value = Curr_Value;
	Parms.Prev_Value = Prev_Value;
	Parms.Max_Value = Max_Value;
	Parms.Apply_Type = Apply_Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnFeedbackDataChanged
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_InteractResultType                 Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UWIDGET_PlayerHUD_C::EVENT_OnFeedbackDataChanged(ENUM_InteractResultType Type, const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnFeedbackDataChanged");

	Params::WIDGET_PlayerHUD_C_EVENT_OnFeedbackDataChanged Parms{};

	Parms.Type = Type;
	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateCursorState
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateCursorState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateCursorState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateScannerMessage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateScannerMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateScannerMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetAdjacentMultiFunctionDisplayTab
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ENUM_MFDTabCategory                     Tab                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Previous                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ENUM_MFDTabCategory                     AdjacentTab                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetAdjacentMultiFunctionDisplayTab(ENUM_MFDTabCategory Tab, bool Previous, ENUM_MFDTabCategory* AdjacentTab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetAdjacentMultiFunctionDisplayTab");

	Params::WIDGET_PlayerHUD_C_GetAdjacentMultiFunctionDisplayTab Parms{};

	Parms.Tab = Tab;
	Parms.Previous = Previous;

	UObject::ProcessEvent(Func, &Parms);

	if (AdjacentTab != nullptr)
		*AdjacentTab = Parms.AdjacentTab;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ShowMultiFunctionDisplayTab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_MFDTabCategory                     Tab                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::ShowMultiFunctionDisplayTab(ENUM_MFDTabCategory Tab, bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "ShowMultiFunctionDisplayTab");

	Params::WIDGET_PlayerHUD_C_ShowMultiFunctionDisplayTab Parms{};

	Parms.Tab = Tab;
	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HideActiveTab
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::HideActiveTab()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "HideActiveTab");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateInputMode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsMenu_Active                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    EnableCursorTransition                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::UpdateInputMode(bool IsMenu_Active, bool EnableCursorTransition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateInputMode");

	Params::WIDGET_PlayerHUD_C_UpdateInputMode Parms{};

	Parms.IsMenu_Active = IsMenu_Active;
	Parms.EnableCursorTransition = EnableCursorTransition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeInventoryHUD
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::InitializeInventoryHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "InitializeInventoryHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetBagUIParamsFromBag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInventoryBag_C*                  InventoryBag                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInventoryBagUI_C*                BagUI                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetBagUIParamsFromBag(class UInventoryBag_C* InventoryBag, class UInventoryBagUI_C** BagUI)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetBagUIParamsFromBag");

	Params::WIDGET_PlayerHUD_C_GetBagUIParamsFromBag Parms{};

	Parms.InventoryBag = InventoryBag;

	UObject::ProcessEvent(Func, &Parms);

	if (BagUI != nullptr)
		*BagUI = Parms.BagUI;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TakeAllLoot
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::TakeAllLoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "TakeAllLoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ShowLootWindow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_Inventory_C*                InLootInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::ShowLootWindow(class UCOMP_Inventory_C* InLootInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "ShowLootWindow");

	Params::WIDGET_PlayerHUD_C_ShowLootWindow Parms{};

	Parms.InLootInventory = InLootInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HideLootWindow
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldCloseMFD                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::HideLootWindow(bool ShouldCloseMFD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "HideLootWindow");

	Params::WIDGET_PlayerHUD_C_HideLootWindow Parms{};

	Parms.ShouldCloseMFD = ShouldCloseMFD;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateLootPanelPosition
// (Protected, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateLootPanelPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateLootPanelPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.PickupItemAtCurrentGridLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInventoryBag_C*                  InventoryBag                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGridMeshWidget*                  BagWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        MouseScreenPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWIDGET_PlayerHUD_C::PickupItemAtCurrentGridLocation(class UInventoryBag_C* InventoryBag, class UGridMeshWidget* BagWidget, const struct FVector2D& MouseScreenPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "PickupItemAtCurrentGridLocation");

	Params::WIDGET_PlayerHUD_C_PickupItemAtCurrentGridLocation Parms{};

	Parms.InventoryBag = InventoryBag;
	Parms.BagWidget = BagWidget;
	Parms.MouseScreenPosition = std::move(MouseScreenPosition);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnCameraPanelMouseDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    DoubleClick                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWIDGET_PlayerHUD_C::OnCameraPanelMouseDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent, bool DoubleClick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "OnCameraPanelMouseDown");

	Params::WIDGET_PlayerHUD_C_OnCameraPanelMouseDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);
	Parms.DoubleClick = DoubleClick;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateTargetBracketsOrDeactivate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        CursorScreenPosition                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::UpdateTargetBracketsOrDeactivate(const struct FVector2D& CursorScreenPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateTargetBracketsOrDeactivate");

	Params::WIDGET_PlayerHUD_C_UpdateTargetBracketsOrDeactivate Parms{};

	Parms.CursorScreenPosition = std::move(CursorScreenPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.PickupItemAtSlotIndex
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInventoryBag_C*                  InventoryBag                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGridMeshWidget*                  BagWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        MouseScreenPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWIDGET_PlayerHUD_C::PickupItemAtSlotIndex(class UInventoryBag_C* InventoryBag, class UGridMeshWidget* BagWidget, int32 SlotIndex, const struct FVector2D& MouseScreenPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "PickupItemAtSlotIndex");

	Params::WIDGET_PlayerHUD_C_PickupItemAtSlotIndex Parms{};

	Parms.InventoryBag = InventoryBag;
	Parms.BagWidget = BagWidget;
	Parms.SlotIndex = SlotIndex;
	Parms.MouseScreenPosition = std::move(MouseScreenPosition);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateCursorItem
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateCursorItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateCursorItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TryRotateCursorItem
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::TryRotateCursorItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "TryRotateCursorItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetCursorGridCoordinatesForBag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UInventoryBag_C*                  Bag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FIntPoint                        ResultCoords                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetCursorGridCoordinatesForBag(class UInventoryBag_C* Bag, struct FIntPoint* ResultCoords)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetCursorGridCoordinatesForBag");

	Params::WIDGET_PlayerHUD_C_GetCursorGridCoordinatesForBag Parms{};

	Parms.Bag = Bag;

	UObject::ProcessEvent(Func, &Parms);

	if (ResultCoords != nullptr)
		*ResultCoords = std::move(Parms.ResultCoords);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ShowCrosshairs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::ShowCrosshairs(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "ShowCrosshairs");

	Params::WIDGET_PlayerHUD_C_ShowCrosshairs Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.IsInventoryVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::IsInventoryVisible(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "IsInventoryVisible");

	Params::WIDGET_PlayerHUD_C_IsInventoryVisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TryPlayPickupAnimFromMFD
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_Base_C*                     Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInventoryBag_C*                  PreferredBag                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PreferredSlotIndex                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::TryPlayPickupAnimFromMFD(class UITEM_Base_C* Item, class UInventoryBag_C* PreferredBag, int32 PreferredSlotIndex, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "TryPlayPickupAnimFromMFD");

	Params::WIDGET_PlayerHUD_C_TryPlayPickupAnimFromMFD Parms{};

	Parms.Item = Item;
	Parms.PreferredBag = PreferredBag;
	Parms.PreferredSlotIndex = PreferredSlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TryPickupItemFromGround
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_Base_C*                     Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::TryPickupItemFromGround(class UITEM_Base_C* Item, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "TryPickupItemFromGround");

	Params::WIDGET_PlayerHUD_C_TryPickupItemFromGround Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TryCompleteItemPickupQuest
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           PickupClass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::TryCompleteItemPickupQuest(class UClass* PickupClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "TryCompleteItemPickupQuest");

	Params::WIDGET_PlayerHUD_C_TryCompleteItemPickupQuest Parms{};

	Parms.PickupClass = PickupClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.AutoEquipItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_Base_C*                     Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::AutoEquipItem(class UITEM_Base_C* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "AutoEquipItem");

	Params::WIDGET_PlayerHUD_C_AutoEquipItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GenerateEquipMessageForItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UITEM_Base_C*                     Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Text                                                   (Parm, OutParm)

void UWIDGET_PlayerHUD_C::GenerateEquipMessageForItem(class UITEM_Base_C* Item, class FText* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GenerateEquipMessageForItem");

	Params::WIDGET_PlayerHUD_C_GenerateEquipMessageForItem Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.BindUpgradeEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::BindUpgradeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "BindUpgradeEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UnbindUpgradeEvent
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UnbindUpgradeEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UnbindUpgradeEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnPlayerBagChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInventoryBag_C*                  Bag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::EVENT_OnPlayerBagChanged(class UInventoryBag_C* Bag, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnPlayerBagChanged");

	Params::WIDGET_PlayerHUD_C_EVENT_OnPlayerBagChanged Parms{};

	Parms.Bag = Bag;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnItemUpgraded
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           UpgradeClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           DowngradeClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENUM_UpgradeResult                      UpgradeResult_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::EVENT_OnItemUpgraded(class UClass* UpgradeClass, class UClass* DowngradeClass, ENUM_UpgradeResult UpgradeResult_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnItemUpgraded");

	Params::WIDGET_PlayerHUD_C_EVENT_OnItemUpgraded Parms{};

	Parms.UpgradeClass = UpgradeClass;
	Parms.DowngradeClass = DowngradeClass;
	Parms.UpgradeResult_0 = UpgradeResult_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ShowHardwareIcons
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::ShowHardwareIcons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "ShowHardwareIcons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HideHardwareIcons
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::HideHardwareIcons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "HideHardwareIcons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHardwareIcons
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::UpdateHardwareIcons(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateHardwareIcons");

	Params::WIDGET_PlayerHUD_C_UpdateHardwareIcons Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHUD
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::UpdateHUD(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateHUD");

	Params::WIDGET_PlayerHUD_C_UpdateHUD Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateNotification
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateNotification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateNotification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateScanner
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateScanner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateScanner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.QueueNotification
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsWarning                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::QueueNotification(const class FText& Message, bool IsWarning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "QueueNotification");

	Params::WIDGET_PlayerHUD_C_QueueNotification Parms{};

	Parms.Message = std::move(Message);
	Parms.IsWarning = IsWarning;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.IssueSecurityNotification
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SecurityLevel                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::IssueSecurityNotification(int32 SecurityLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "IssueSecurityNotification");

	Params::WIDGET_PlayerHUD_C_IssueSecurityNotification Parms{};

	Parms.SecurityLevel = SecurityLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetForceHideCrosshairs
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HideState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::SetForceHideCrosshairs(bool HideState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "SetForceHideCrosshairs");

	Params::WIDGET_PlayerHUD_C_SetForceHideCrosshairs Parms{};

	Parms.HideState = HideState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnCrosshairVisibilityChanged
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::OnCrosshairVisibilityChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "OnCrosshairVisibilityChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.IsCursorOverMeshWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UGridMeshWidget*                  MeshWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        MouseWindowPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::IsCursorOverMeshWidget(class UGridMeshWidget* MeshWidget, const struct FVector2D& MouseWindowPosition, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "IsCursorOverMeshWidget");

	Params::WIDGET_PlayerHUD_C_IsCursorOverMeshWidget Parms{};

	Parms.MeshWidget = MeshWidget;
	Parms.MouseWindowPosition = std::move(MouseWindowPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetBestBagUnderCursor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        MouseScreenPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInventoryBag_C*                  ResultBag                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetBestBagUnderCursor(const struct FVector2D& MouseScreenPosition, class UInventoryBag_C** ResultBag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetBestBagUnderCursor");

	Params::WIDGET_PlayerHUD_C_GetBestBagUnderCursor Parms{};

	Parms.MouseScreenPosition = std::move(MouseScreenPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (ResultBag != nullptr)
		*ResultBag = Parms.ResultBag;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetCursorSeparationFromBag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UInventoryBag_C*                  Bag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        MouseScreenPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ResultDistance                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetCursorSeparationFromBag(class UInventoryBag_C* Bag, const struct FVector2D& MouseScreenPosition, float* ResultDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetCursorSeparationFromBag");

	Params::WIDGET_PlayerHUD_C_GetCursorSeparationFromBag Parms{};

	Parms.Bag = Bag;
	Parms.MouseScreenPosition = std::move(MouseScreenPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (ResultDistance != nullptr)
		*ResultDistance = Parms.ResultDistance;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetCursorSeparationFromMeshWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UGridMeshWidget*                  MeshWidget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        MouseScreenPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ResultDistance                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetCursorSeparationFromMeshWidget(class UGridMeshWidget* MeshWidget, const struct FVector2D& MouseScreenPosition, float* ResultDistance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetCursorSeparationFromMeshWidget");

	Params::WIDGET_PlayerHUD_C_GetCursorSeparationFromMeshWidget Parms{};

	Parms.MeshWidget = MeshWidget;
	Parms.MouseScreenPosition = std::move(MouseScreenPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (ResultDistance != nullptr)
		*ResultDistance = Parms.ResultDistance;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SelectWindowTab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_MFDTabCategory                     NewTabCategory                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceHideOtherTabs                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::SelectWindowTab(ENUM_MFDTabCategory NewTabCategory, bool ForceHideOtherTabs)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "SelectWindowTab");

	Params::WIDGET_PlayerHUD_C_SelectWindowTab Parms{};

	Parms.NewTabCategory = NewTabCategory;
	Parms.ForceHideOtherTabs = ForceHideOtherTabs;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeHotbar
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OnBeginPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::InitializeHotbar(bool OnBeginPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "InitializeHotbar");

	Params::WIDGET_PlayerHUD_C_InitializeHotbar Parms{};

	Parms.OnBeginPlay = OnBeginPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnAddedToHotbar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_Hotbar_C*                   HotbarComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::EVENT_OnAddedToHotbar(class UCOMP_Hotbar_C* HotbarComponent, TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnAddedToHotbar");

	Params::WIDGET_PlayerHUD_C_EVENT_OnAddedToHotbar Parms{};

	Parms.HotbarComponent = HotbarComponent;
	Parms.SlottableObject = SlottableObject;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnRemovedFromHotbar
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_Hotbar_C*                   HotbarComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::EVENT_OnRemovedFromHotbar(class UCOMP_Hotbar_C* HotbarComponent, TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnRemovedFromHotbar");

	Params::WIDGET_PlayerHUD_C_EVENT_OnRemovedFromHotbar Parms{};

	Parms.HotbarComponent = HotbarComponent;
	Parms.SlottableObject = SlottableObject;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.Create Slottable Mesh Widget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGridMeshWidget*                  ContainerMeshWidget                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         IconTexture                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UITEM_Base_C*                     Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWIDGET_SlottedItem_C*            MeshWidget                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::Create_Slottable_Mesh_Widget(class UGridMeshWidget* ContainerMeshWidget, class UTexture* IconTexture, class UITEM_Base_C* Item, class UWIDGET_SlottedItem_C** MeshWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "Create Slottable Mesh Widget");

	Params::WIDGET_PlayerHUD_C_Create_Slottable_Mesh_Widget Parms{};

	Parms.ContainerMeshWidget = ContainerMeshWidget;
	Parms.IconTexture = IconTexture;
	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (MeshWidget != nullptr)
		*MeshWidget = Parms.MeshWidget;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.CreateSlottableMeshWidgetAtCoords
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UGridMeshWidget*                  ContainerMeshWidget                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FIntPoint                        GridCoords                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       IconTexture                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UITEM_Base_C*                     Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWIDGET_SlottedItem_C*            MeshWidget                                             (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::CreateSlottableMeshWidgetAtCoords(class UGridMeshWidget* ContainerMeshWidget, const struct FIntPoint& GridCoords, class UTexture2D* IconTexture, class UITEM_Base_C* Item, class UWIDGET_SlottedItem_C** MeshWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "CreateSlottableMeshWidgetAtCoords");

	Params::WIDGET_PlayerHUD_C_CreateSlottableMeshWidgetAtCoords Parms{};

	Parms.ContainerMeshWidget = ContainerMeshWidget;
	Parms.GridCoords = std::move(GridCoords);
	Parms.IconTexture = IconTexture;
	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (MeshWidget != nullptr)
		*MeshWidget = Parms.MeshWidget;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeHotbarEvents
// (Private, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::InitializeHotbarEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "InitializeHotbarEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ResetHotbarQuickslots
// (Private, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::ResetHotbarQuickslots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "ResetHotbarQuickslots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ToggleMultiFunctionDisplay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MainDisplayVisible                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::ToggleMultiFunctionDisplay(bool* MainDisplayVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "ToggleMultiFunctionDisplay");

	Params::WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MainDisplayVisible != nullptr)
		*MainDisplayVisible = Parms.MainDisplayVisible;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeHotbarCategories
// (Private, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::InitializeHotbarCategories()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "InitializeHotbarCategories");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ItemSelectionRegionMouseMove
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        CursorScreenPosition                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceUpdate                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::ItemSelectionRegionMouseMove(const struct FVector2D& CursorScreenPosition, bool ForceUpdate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "ItemSelectionRegionMouseMove");

	Params::WIDGET_PlayerHUD_C_ItemSelectionRegionMouseMove Parms{};

	Parms.CursorScreenPosition = std::move(CursorScreenPosition);
	Parms.ForceUpdate = ForceUpdate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeHotbarSlots
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::InitializeHotbarSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "InitializeHotbarSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetVerticalBoxGridMeshUnderCursor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UVerticalBox*                     VerticalBox                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        MouseScreenPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGridMeshWidget*                  GridMeshWidget                                         (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UWidget*                          ChildWidget                                            (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ResultChildIndex                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetVerticalBoxGridMeshUnderCursor(class UVerticalBox* VerticalBox, const struct FVector2D& MouseScreenPosition, class UGridMeshWidget** GridMeshWidget, class UWidget** ChildWidget, int32* ResultChildIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetVerticalBoxGridMeshUnderCursor");

	Params::WIDGET_PlayerHUD_C_GetVerticalBoxGridMeshUnderCursor Parms{};

	Parms.VerticalBox = VerticalBox;
	Parms.MouseScreenPosition = std::move(MouseScreenPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (GridMeshWidget != nullptr)
		*GridMeshWidget = Parms.GridMeshWidget;

	if (ChildWidget != nullptr)
		*ChildWidget = Parms.ChildWidget;

	if (ResultChildIndex != nullptr)
		*ResultChildIndex = Parms.ResultChildIndex;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnHotbarQuickSlotChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCOMP_Hotbar_C*                   HotbarComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewSlotIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OldSlotIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::EVENT_OnHotbarQuickSlotChanged(class UCOMP_Hotbar_C* HotbarComponent, int32 NewSlotIndex, int32 OldSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnHotbarQuickSlotChanged");

	Params::WIDGET_PlayerHUD_C_EVENT_OnHotbarQuickSlotChanged Parms{};

	Parms.HotbarComponent = HotbarComponent;
	Parms.NewSlotIndex = NewSlotIndex;
	Parms.OldSlotIndex = OldSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnCameraPanelDoubleClick
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWIDGET_PlayerHUD_C::EVENT_OnCameraPanelDoubleClick(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnCameraPanelDoubleClick");

	Params::WIDGET_PlayerHUD_C_EVENT_OnCameraPanelDoubleClick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnCameraPanelMouseDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWIDGET_PlayerHUD_C::EVENT_OnCameraPanelMouseDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnCameraPanelMouseDown");

	Params::WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	MouseEvent = std::move(Parms.MouseEvent);

	return Parms.ReturnValue;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TryToggleContextMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWIDGET_InventoryPanel_C*         InventoryPanel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        MouseScreenPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::TryToggleContextMenu(class UWIDGET_InventoryPanel_C* InventoryPanel, const struct FVector2D& MouseScreenPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "TryToggleContextMenu");

	Params::WIDGET_PlayerHUD_C_TryToggleContextMenu Parms{};

	Parms.InventoryPanel = InventoryPanel;
	Parms.MouseScreenPosition = std::move(MouseScreenPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateMouseHoverItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_Base_C*                     Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInventoryBagUI_C*                BagUI                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::UpdateMouseHoverItem(class UITEM_Base_C* Item, class UInventoryBagUI_C* BagUI, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateMouseHoverItem");

	Params::WIDGET_PlayerHUD_C_UpdateMouseHoverItem Parms{};

	Parms.Item = Item;
	Parms.BagUI = BagUI;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.IsMediaDisplayVisible
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::IsMediaDisplayVisible(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "IsMediaDisplayVisible");

	Params::WIDGET_PlayerHUD_C_IsMediaDisplayVisible Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHoverItemOutline
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableHighlight                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::UpdateHoverItemOutline(bool EnableHighlight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateHoverItemOutline");

	Params::WIDGET_PlayerHUD_C_UpdateHoverItemOutline Parms{};

	Parms.EnableHighlight = EnableHighlight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UndoCursorItemMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UpdateItemSelection                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D                        MouseScreenPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::UndoCursorItemMove(bool UpdateItemSelection, const struct FVector2D& MouseScreenPosition, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UndoCursorItemMove");

	Params::WIDGET_PlayerHUD_C_UndoCursorItemMove Parms{};

	Parms.UpdateItemSelection = UpdateItemSelection;
	Parms.MouseScreenPosition = std::move(MouseScreenPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HideContextMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::HideContextMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "HideContextMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HandleItemWorldInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_Base_C*                     Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::HandleItemWorldInteraction(class UITEM_Base_C* Item, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "HandleItemWorldInteraction");

	Params::WIDGET_PlayerHUD_C_HandleItemWorldInteraction Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.HandleVaporizeInventoryInput
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::HandleVaporizeInventoryInput(bool State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "HandleVaporizeInventoryInput");

	Params::WIDGET_PlayerHUD_C_HandleVaporizeInventoryInput Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.DropAndPushItemFromCursorPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_Base_C*                     ItemToDrop                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ScreenPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::DropAndPushItemFromCursorPosition(class UITEM_Base_C* ItemToDrop, const struct FVector2D& ScreenPosition, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "DropAndPushItemFromCursorPosition");

	Params::WIDGET_PlayerHUD_C_DropAndPushItemFromCursorPosition Parms{};

	Parms.ItemToDrop = ItemToDrop;
	Parms.ScreenPosition = std::move(ScreenPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.DropAndPushItemFromCameraRelativePosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UITEM_Base_C*                     ItemToDrop                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        RelativePosition                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::DropAndPushItemFromCameraRelativePosition(class UITEM_Base_C* ItemToDrop, const struct FVector2D& RelativePosition, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "DropAndPushItemFromCameraRelativePosition");

	Params::WIDGET_PlayerHUD_C_DropAndPushItemFromCameraRelativePosition Parms{};

	Parms.ItemToDrop = ItemToDrop;
	Parms.RelativePosition = std::move(RelativePosition);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.DropAndPushCursorItem
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        ScreenPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::DropAndPushCursorItem(const struct FVector2D& ScreenPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "DropAndPushCursorItem");

	Params::WIDGET_PlayerHUD_C_DropAndPushCursorItem Parms{};

	Parms.ScreenPosition = std::move(ScreenPosition);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.IsCursorOverInventoryBag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UInventoryBag_C*                  Bag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::IsCursorOverInventoryBag(class UInventoryBag_C* Bag, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "IsCursorOverInventoryBag");

	Params::WIDGET_PlayerHUD_C_IsCursorOverInventoryBag Parms{};

	Parms.Bag = Bag;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnCameraPanelMouseMove
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    EventHandledByChild                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWIDGET_PlayerHUD_C::EVENT_OnCameraPanelMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent, bool EventHandledByChild)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnCameraPanelMouseMove");

	Params::WIDGET_PlayerHUD_C_EVENT_OnCameraPanelMouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);
	Parms.EventHandledByChild = EventHandledByChild;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeAttributes
// (Protected, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::InitializeAttributes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "InitializeAttributes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHealSFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   AttribRatio                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::UpdateHealSFX(bool State, float AttribRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateHealSFX");

	Params::WIDGET_PlayerHUD_C_UpdateHealSFX Parms{};

	Parms.State = State;
	Parms.AttribRatio = AttribRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHealthSoundParameters
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AttribRatio                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::UpdateHealthSoundParameters(float AttribRatio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateHealthSoundParameters");

	Params::WIDGET_PlayerHUD_C_UpdateHealthSoundParameters Parms{};

	Parms.AttribRatio = AttribRatio;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnHealthModApplied
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAttribMod*                       AppliedMod                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::EVENT_OnHealthModApplied(class UAttribMod* AppliedMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnHealthModApplied");

	Params::WIDGET_PlayerHUD_C_EVENT_OnHealthModApplied Parms{};

	Parms.AppliedMod = AppliedMod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnEnergyModApplied
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAttribMod*                       AppliedMod                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::EVENT_OnEnergyModApplied(class UAttribMod* AppliedMod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnEnergyModApplied");

	Params::WIDGET_PlayerHUD_C_EVENT_OnEnergyModApplied Parms{};

	Parms.AppliedMod = AppliedMod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.TryStopHealSFX
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::TryStopHealSFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "TryStopHealSFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateMouseCursor
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateMouseCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateMouseCursor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateCursorTransition
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateCursorTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateCursorTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeScreenEffects
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::InitializeScreenEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "InitializeScreenEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ToggleMainMenu
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::ToggleMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "ToggleMainMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InitializeMultiFunctionDisplay
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::InitializeMultiFunctionDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "InitializeMultiFunctionDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetMouseCursorVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::SetMouseCursorVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "SetMouseCursorVisibility");

	Params::WIDGET_PlayerHUD_C_SetMouseCursorVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ShowTargetBrackets
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::ShowTargetBrackets(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "ShowTargetBrackets");

	Params::WIDGET_PlayerHUD_C_ShowTargetBrackets Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ShowMultiFunctionDisplay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    MainDisplayVisible                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::ShowMultiFunctionDisplay(bool Visible, bool* MainDisplayVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "ShowMultiFunctionDisplay");

	Params::WIDGET_PlayerHUD_C_ShowMultiFunctionDisplay Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);

	if (MainDisplayVisible != nullptr)
		*MainDisplayVisible = Parms.MainDisplayVisible;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.DisableMultiFunctionDisplay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Disable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::DisableMultiFunctionDisplay(bool Disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "DisableMultiFunctionDisplay");

	Params::WIDGET_PlayerHUD_C_DisableMultiFunctionDisplay Parms{};

	Parms.Disable = Disable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateCursorGridCoordinatesForBag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        MouseWindowPosition                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInventoryBag_C*                  InventoryBag                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UGridMeshWidget*                  BagWidget                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::UpdateCursorGridCoordinatesForBag(const struct FVector2D& MouseWindowPosition, class UInventoryBag_C* InventoryBag, class UGridMeshWidget* BagWidget, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateCursorGridCoordinatesForBag");

	Params::WIDGET_PlayerHUD_C_UpdateCursorGridCoordinatesForBag Parms{};

	Parms.MouseWindowPosition = std::move(MouseWindowPosition);
	Parms.InventoryBag = InventoryBag;
	Parms.BagWidget = BagWidget;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.MoveCursorToItemAtSlotIndex
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWIDGET_InventoryPanel_C*         InventoryPanel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::MoveCursorToItemAtSlotIndex(class UWIDGET_InventoryPanel_C* InventoryPanel, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "MoveCursorToItemAtSlotIndex");

	Params::WIDGET_PlayerHUD_C_MoveCursorToItemAtSlotIndex Parms{};

	Parms.InventoryPanel = InventoryPanel;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.MoveCursorToInventoryGridLocationAtSlotIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWIDGET_InventoryPanel_C*         InventoryPanel                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::MoveCursorToInventoryGridLocationAtSlotIndex(class UWIDGET_InventoryPanel_C* InventoryPanel, int32 SlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "MoveCursorToInventoryGridLocationAtSlotIndex");

	Params::WIDGET_PlayerHUD_C_MoveCursorToInventoryGridLocationAtSlotIndex Parms{};

	Parms.InventoryPanel = InventoryPanel;
	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.MoveCursorOverFirstInventoryItem
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::MoveCursorOverFirstInventoryItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "MoveCursorOverFirstInventoryItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnInventoryBecameVisible
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::OnInventoryBecameVisible()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "OnInventoryBecameVisible");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.DestroyLootBagUI
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::DestroyLootBagUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "DestroyLootBagUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetHotbarSlotWidgetForObject
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class IINTERF_HotbarSlottable_C>SlottableObject                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UWIDGET_HotbarSlot_C*             Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetHotbarSlotWidgetForObject(TScriptInterface<class IINTERF_HotbarSlottable_C> SlottableObject, class UWIDGET_HotbarSlot_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetHotbarSlotWidgetForObject");

	Params::WIDGET_PlayerHUD_C_GetHotbarSlotWidgetForObject Parms{};

	Parms.SlottableObject = SlottableObject;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetCursorItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UITEM_Base_C*                     Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetCursorItem(class UITEM_Base_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetCursorItem");

	Params::WIDGET_PlayerHUD_C_GetCursorItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.DropHotbarSlottableObject
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::DropHotbarSlottableObject()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "DropHotbarSlottableObject");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHotbarSlottableCursor
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateHotbarSlottableCursor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateHotbarSlottableCursor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetHardwareHoverDetails
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWIDGET_HardwareButton_C*         HardwareButton                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::SetHardwareHoverDetails(class UWIDGET_HardwareButton_C* HardwareButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "SetHardwareHoverDetails");

	Params::WIDGET_PlayerHUD_C_SetHardwareHoverDetails Parms{};

	Parms.HardwareButton = HardwareButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateMultiFunctionDisplaySize
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateMultiFunctionDisplaySize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateMultiFunctionDisplaySize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHotbarDisplayStyle
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateHotbarDisplayStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateHotbarDisplayStyle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetDeprojectedScreenPoint
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        ScreenPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UseViewportSpace                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D                        DeprojectedScreenPosition                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetDeprojectedScreenPoint(const struct FVector2D& ScreenPosition, bool UseViewportSpace, struct FVector2D* DeprojectedScreenPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetDeprojectedScreenPoint");

	Params::WIDGET_PlayerHUD_C_GetDeprojectedScreenPoint Parms{};

	Parms.ScreenPosition = std::move(ScreenPosition);
	Parms.UseViewportSpace = UseViewportSpace;

	UObject::ProcessEvent(Func, &Parms);

	if (DeprojectedScreenPosition != nullptr)
		*DeprojectedScreenPosition = std::move(Parms.DeprojectedScreenPosition);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetToolTipWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      MouseOverWidget                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MouseOver                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::SetToolTipWidget(class UUserWidget* MouseOverWidget, bool MouseOver)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "SetToolTipWidget");

	Params::WIDGET_PlayerHUD_C_SetToolTipWidget Parms{};

	Parms.MouseOverWidget = MouseOverWidget;
	Parms.MouseOver = MouseOver;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_ShowToolTip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::EVENT_ShowToolTip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_ShowToolTip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHotbarVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateHotbarVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateHotbarVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.RequestToolTipUpdate
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUserWidget*                      ToolTipWidget_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::RequestToolTipUpdate(class UUserWidget* ToolTipWidget_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "RequestToolTipUpdate");

	Params::WIDGET_PlayerHUD_C_RequestToolTipUpdate Parms{};

	Parms.ToolTipWidget_0 = ToolTipWidget_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateMouseOverTooltipPosition
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateMouseOverTooltipPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateMouseOverTooltipPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.ToggleMultiFunctionDisplayTab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_MFDTabCategory                     Tab                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::ToggleMultiFunctionDisplayTab(ENUM_MFDTabCategory Tab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "ToggleMultiFunctionDisplayTab");

	Params::WIDGET_PlayerHUD_C_ToggleMultiFunctionDisplayTab Parms{};

	Parms.Tab = Tab;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetPrimaryFrameOpacity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewOpacity                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::SetPrimaryFrameOpacity(float NewOpacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "SetPrimaryFrameOpacity");

	Params::WIDGET_PlayerHUD_C_SetPrimaryFrameOpacity Parms{};

	Parms.NewOpacity = NewOpacity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetPrimaryFrameOpacity
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Opacity                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetPrimaryFrameOpacity(float* Opacity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetPrimaryFrameOpacity");

	Params::WIDGET_PlayerHUD_C_GetPrimaryFrameOpacity Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Opacity != nullptr)
		*Opacity = Parms.Opacity;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHotbarSlotFrameOpacity
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateHotbarSlotFrameOpacity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateHotbarSlotFrameOpacity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetCurrentNotification
// (Private, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsWarning                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::SetCurrentNotification(const class FText& Message, bool IsWarning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "SetCurrentNotification");

	Params::WIDGET_PlayerHUD_C_SetCurrentNotification Parms{};

	Parms.Message = std::move(Message);
	Parms.IsWarning = IsWarning;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetHUDScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::SetHUDScale(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "SetHUDScale");

	Params::WIDGET_PlayerHUD_C_SetHUDScale Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetHUDScale
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetHUDScale(float* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetHUDScale");

	Params::WIDGET_PlayerHUD_C_GetHUDScale Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Scale != nullptr)
		*Scale = Parms.Scale;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetSlotNumberFromIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SlotIndex                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Number                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetSlotNumberFromIndex(int32 SlotIndex, int32* Number)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetSlotNumberFromIndex");

	Params::WIDGET_PlayerHUD_C_GetSlotNumberFromIndex Parms{};

	Parms.SlotIndex = SlotIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Number != nullptr)
		*Number = Parms.Number;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetSlotIndexFromNumber
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SlotNumber                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetSlotIndexFromNumber(int32 SlotNumber, int32* Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetSlotIndexFromNumber");

	Params::WIDGET_PlayerHUD_C_GetSlotIndexFromNumber Parms{};

	Parms.SlotNumber = SlotNumber;

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.CycleMultiFunctionDisplayTab
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Previous                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::CycleMultiFunctionDisplayTab(bool Previous)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "CycleMultiFunctionDisplayTab");

	Params::WIDGET_PlayerHUD_C_CycleMultiFunctionDisplayTab Parms{};

	Parms.Previous = Previous;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateHazardLevel
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAttribMod*                       HazardMod                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   HazardLevel                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsBioPoisoning                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::UpdateHazardLevel(class UAttribMod* HazardMod, int32 HazardLevel, bool IsBioPoisoning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateHazardLevel");

	Params::WIDGET_PlayerHUD_C_UpdateHazardLevel Parms{};

	Parms.HazardMod = HazardMod;
	Parms.HazardLevel = HazardLevel;
	Parms.IsBioPoisoning = IsBioPoisoning;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnCrashStart
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::EVENT_OnCrashStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnCrashStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnBootupFinished
// (Public, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::EVENT_OnBootupFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnBootupFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_BeginCrashSequence
// (Private, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::EVENT_BeginCrashSequence()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_BeginCrashSequence");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnCrashSequenceFinished
// (Private, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::EVENT_OnCrashSequenceFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnCrashSequenceFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnUsingGamepadChanged
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsUsingGamepad                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::EVENT_OnUsingGamepadChanged(bool IsUsingGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnUsingGamepadChanged");

	Params::WIDGET_PlayerHUD_C_EVENT_OnUsingGamepadChanged Parms{};

	Parms.IsUsingGamepad = IsUsingGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.UpdateCountdownTimeRemaining
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::UpdateCountdownTimeRemaining()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "UpdateCountdownTimeRemaining");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.DisplayCountdownTimerShort
// (Protected, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::DisplayCountdownTimerShort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "DisplayCountdownTimerShort");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.EVENT_OnPeriodicGameCountdownUpdate
// (Private, BlueprintCallable, BlueprintEvent)

void UWIDGET_PlayerHUD_C::EVENT_OnPeriodicGameCountdownUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "EVENT_OnPeriodicGameCountdownUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.MoveCursorToHotbarSlotIndex
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewSlotIndex                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::MoveCursorToHotbarSlotIndex(int32 NewSlotIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "MoveCursorToHotbarSlotIndex");

	Params::WIDGET_PlayerHUD_C_MoveCursorToHotbarSlotIndex Parms{};

	Parms.NewSlotIndex = NewSlotIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetGameLockedForMenus
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    LockGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::SetGameLockedForMenus(bool LockGame, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "SetGameLockedForMenus");

	Params::WIDGET_PlayerHUD_C_SetGameLockedForMenus Parms{};

	Parms.LockGame = LockGame;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnCharacterDied
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAttribDamageInstance            DamageInstance                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::OnCharacterDied(const struct FAttribDamageInstance& DamageInstance, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "OnCharacterDied");

	Params::WIDGET_PlayerHUD_C_OnCharacterDied Parms{};

	Parms.DamageInstance = std::move(DamageInstance);

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnCharacterRespawned
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::OnCharacterRespawned(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "OnCharacterRespawned");

	Params::WIDGET_PlayerHUD_C_OnCharacterRespawned Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetTutorialWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWIDGET_TutorialMessage_C*        Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetTutorialWidget(class UWIDGET_TutorialMessage_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetTutorialWidget");

	Params::WIDGET_PlayerHUD_C_GetTutorialWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetMainMenuWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWIDGET_MainMenu_InGame_C*        Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetMainMenuWidget(class UWIDGET_MainMenu_InGame_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetMainMenuWidget");

	Params::WIDGET_PlayerHUD_C_GetMainMenuWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetCameraPanelWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraPanelWidget*               Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetCameraPanelWidget(class UCameraPanelWidget** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetCameraPanelWidget");

	Params::WIDGET_PlayerHUD_C_GetCameraPanelWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.InvokeNavManager
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InputState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ENUM_MenuNavigationInput                InputType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::InvokeNavManager(bool InputState, ENUM_MenuNavigationInput InputType, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "InvokeNavManager");

	Params::WIDGET_PlayerHUD_C_InvokeNavManager Parms{};

	Parms.InputState = InputState;
	Parms.InputType = InputType;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetSubtitleWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWIDGET_Subtitles_C*              Result                                                 (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetSubtitleWidget(class UWIDGET_Subtitles_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetSubtitleWidget");

	Params::WIDGET_PlayerHUD_C_GetSubtitleWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnStartedLoadingGame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::OnStartedLoadingGame(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "OnStartedLoadingGame");

	Params::WIDGET_PlayerHUD_C_OnStartedLoadingGame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.GetMFDState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsMFDOpen                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// ENUM_MFDTabCategory                     CurrentMFDTab_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWIDGET_PlayerHUD_C::GetMFDState(bool* IsMFDOpen, ENUM_MFDTabCategory* CurrentMFDTab_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "GetMFDState");

	Params::WIDGET_PlayerHUD_C_GetMFDState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsMFDOpen != nullptr)
		*IsMFDOpen = Parms.IsMFDOpen;

	if (CurrentMFDTab_0 != nullptr)
		*CurrentMFDTab_0 = Parms.CurrentMFDTab_0;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnPersistentMapMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::OnPersistentMapMove(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "OnPersistentMapMove");

	Params::WIDGET_PlayerHUD_C_OnPersistentMapMove Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.OnFinishedLoadingGame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::OnFinishedLoadingGame(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "OnFinishedLoadingGame");

	Params::WIDGET_PlayerHUD_C_OnFinishedLoadingGame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function WIDGET_PlayerHUD.WIDGET_PlayerHUD_C.SetHoldInteractionProgress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Progress                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWIDGET_PlayerHUD_C::SetHoldInteractionProgress(float Progress, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WIDGET_PlayerHUD_C", "SetHoldInteractionProgress");

	Params::WIDGET_PlayerHUD_C_SetHoldInteractionProgress Parms{};

	Parms.Progress = Progress;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


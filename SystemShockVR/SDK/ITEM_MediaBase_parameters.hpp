#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_MediaBase

#include "Basic.hpp"


namespace SDK::Params
{

// Function ITEM_MediaBase.ITEM_MediaBase_C.ExecuteUbergraph_ITEM_MediaBase
// 0x0060 (0x0060 - 0x0000)
struct ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWIDGET_PlayerHUD_C*                    CallFunc_GetNeuralHUD_Result;                      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryIncrementOrderedAchievement_Result;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayMedia_Result;                         // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USAVE_Settings_C*                       CallFunc_GetShockSettingsForCurrentUser_Settings;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAutoPlayMediaLogs_Result;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase) == 0x000008, "Wrong alignment on ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase");
static_assert(sizeof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase) == 0x000060, "Wrong size on ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, EntryPoint) == 0x000000, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_GetInventory_Inventory) == 0x000008, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000030, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_GetNeuralHUD_Result) == 0x000040, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_GetNeuralHUD_Result' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_TryIncrementOrderedAchievement_Result) == 0x000048, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_TryIncrementOrderedAchievement_Result' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000049, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00004A, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_BooleanOR_ReturnValue) == 0x00004B, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_PlayMedia_Result) == 0x00004C, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_PlayMedia_Result' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_GetShockSettingsForCurrentUser_Settings) == 0x000050, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_GetShockSettingsForCurrentUser_Settings' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_GetAutoPlayMediaLogs_Result) == 0x000058, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_GetAutoPlayMediaLogs_Result' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000059, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'ITEM_MediaBase_C_ExecuteUbergraph_ITEM_MediaBase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ITEM_MediaBase.ITEM_MediaBase_C.GetOverrideMaterial
// 0x0008 (0x0008 - 0x0000)
struct ITEM_MediaBase_C_GetOverrideMaterial final
{
public:
	class UMaterialInstanceDynamic*               Material;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_MediaBase_C_GetOverrideMaterial) == 0x000008, "Wrong alignment on ITEM_MediaBase_C_GetOverrideMaterial");
static_assert(sizeof(ITEM_MediaBase_C_GetOverrideMaterial) == 0x000008, "Wrong size on ITEM_MediaBase_C_GetOverrideMaterial");
static_assert(offsetof(ITEM_MediaBase_C_GetOverrideMaterial, Material) == 0x000000, "Member 'ITEM_MediaBase_C_GetOverrideMaterial::Material' has a wrong offset!");

// Function ITEM_MediaBase.ITEM_MediaBase_C.PlayMedia
// 0x0028 (0x0028 - 0x0000)
struct ITEM_MediaBase_C_PlayMedia final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_AudioLogManager_C*                AudioLogManager;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_AudioLogManager_C*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayMediaFromItem_Result;                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_MediaBase_C_PlayMedia) == 0x000008, "Wrong alignment on ITEM_MediaBase_C_PlayMedia");
static_assert(sizeof(ITEM_MediaBase_C_PlayMedia) == 0x000028, "Wrong size on ITEM_MediaBase_C_PlayMedia");
static_assert(offsetof(ITEM_MediaBase_C_PlayMedia, Result) == 0x000000, "Member 'ITEM_MediaBase_C_PlayMedia::Result' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_PlayMedia, AudioLogManager) == 0x000008, "Member 'ITEM_MediaBase_C_PlayMedia::AudioLogManager' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_PlayMedia, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'ITEM_MediaBase_C_PlayMedia::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_PlayMedia, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'ITEM_MediaBase_C_PlayMedia::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_PlayMedia, CallFunc_PlayMediaFromItem_Result) == 0x000020, "Member 'ITEM_MediaBase_C_PlayMedia::CallFunc_PlayMediaFromItem_Result' has a wrong offset!");

// Function ITEM_MediaBase.ITEM_MediaBase_C.ReceiveMediaAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct ITEM_MediaBase_C_ReceiveMediaAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_MediaBase_C_ReceiveMediaAnimationMessage) == 0x000008, "Wrong alignment on ITEM_MediaBase_C_ReceiveMediaAnimationMessage");
static_assert(sizeof(ITEM_MediaBase_C_ReceiveMediaAnimationMessage) == 0x000018, "Wrong size on ITEM_MediaBase_C_ReceiveMediaAnimationMessage");
static_assert(offsetof(ITEM_MediaBase_C_ReceiveMediaAnimationMessage, Message) == 0x000000, "Member 'ITEM_MediaBase_C_ReceiveMediaAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ReceiveMediaAnimationMessage, Result) == 0x000010, "Member 'ITEM_MediaBase_C_ReceiveMediaAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ReceiveMediaAnimationMessage, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000011, "Member 'ITEM_MediaBase_C_ReceiveMediaAnimationMessage::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function ITEM_MediaBase.ITEM_MediaBase_C.OnFinishedDownloadingMedia
// 0x0040 (0x0040 - 0x0000)
struct ITEM_MediaBase_C_OnFinishedDownloadingMedia final
{
public:
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_MediaBase_C_OnFinishedDownloadingMedia) == 0x000008, "Wrong alignment on ITEM_MediaBase_C_OnFinishedDownloadingMedia");
static_assert(sizeof(ITEM_MediaBase_C_OnFinishedDownloadingMedia) == 0x000040, "Wrong size on ITEM_MediaBase_C_OnFinishedDownloadingMedia");
static_assert(offsetof(ITEM_MediaBase_C_OnFinishedDownloadingMedia, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000000, "Member 'ITEM_MediaBase_C_OnFinishedDownloadingMedia::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_OnFinishedDownloadingMedia, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'ITEM_MediaBase_C_OnFinishedDownloadingMedia::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_OnFinishedDownloadingMedia, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000010, "Member 'ITEM_MediaBase_C_OnFinishedDownloadingMedia::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_OnFinishedDownloadingMedia, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ITEM_MediaBase_C_OnFinishedDownloadingMedia::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_OnFinishedDownloadingMedia, CallFunc_GetMaterial_ReturnValue) == 0x000020, "Member 'ITEM_MediaBase_C_OnFinishedDownloadingMedia::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_OnFinishedDownloadingMedia, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'ITEM_MediaBase_C_OnFinishedDownloadingMedia::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_OnFinishedDownloadingMedia, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000030, "Member 'ITEM_MediaBase_C_OnFinishedDownloadingMedia::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_OnFinishedDownloadingMedia, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'ITEM_MediaBase_C_OnFinishedDownloadingMedia::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ITEM_MediaBase.ITEM_MediaBase_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct ITEM_MediaBase_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ReceiveMediaAnimationMessage_Result;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_MediaBase_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on ITEM_MediaBase_C_ReceiveAnimationMessage");
static_assert(sizeof(ITEM_MediaBase_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on ITEM_MediaBase_C_ReceiveAnimationMessage");
static_assert(offsetof(ITEM_MediaBase_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'ITEM_MediaBase_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'ITEM_MediaBase_C_ReceiveAnimationMessage::Result' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_ReceiveAnimationMessage, CallFunc_ReceiveMediaAnimationMessage_Result) == 0x000011, "Member 'ITEM_MediaBase_C_ReceiveAnimationMessage::CallFunc_ReceiveMediaAnimationMessage_Result' has a wrong offset!");

// Function ITEM_MediaBase.ITEM_MediaBase_C.GetDisplayProperties
// 0x0050 (0x0050 - 0x0000)
struct ITEM_MediaBase_C_GetDisplayProperties final
{
public:
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AnimInstanceClass;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsAnim_Instance;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetOverrideMaterial_Material;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_MediaBase_C_GetDisplayProperties) == 0x000008, "Wrong alignment on ITEM_MediaBase_C_GetDisplayProperties");
static_assert(sizeof(ITEM_MediaBase_C_GetDisplayProperties) == 0x000050, "Wrong size on ITEM_MediaBase_C_GetDisplayProperties");
static_assert(offsetof(ITEM_MediaBase_C_GetDisplayProperties, SkeletalMesh) == 0x000000, "Member 'ITEM_MediaBase_C_GetDisplayProperties::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_GetDisplayProperties, AnimInstanceClass) == 0x000008, "Member 'ITEM_MediaBase_C_GetDisplayProperties::AnimInstanceClass' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_GetDisplayProperties, OverrideMaterial) == 0x000010, "Member 'ITEM_MediaBase_C_GetDisplayProperties::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_GetDisplayProperties, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000018, "Member 'ITEM_MediaBase_C_GetDisplayProperties::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_GetDisplayProperties, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000020, "Member 'ITEM_MediaBase_C_GetDisplayProperties::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_GetDisplayProperties, K2Node_ClassDynamicCast_AsAnim_Instance) == 0x000028, "Member 'ITEM_MediaBase_C_GetDisplayProperties::K2Node_ClassDynamicCast_AsAnim_Instance' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_GetDisplayProperties, K2Node_ClassDynamicCast_bSuccess) == 0x000030, "Member 'ITEM_MediaBase_C_GetDisplayProperties::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_GetDisplayProperties, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000038, "Member 'ITEM_MediaBase_C_GetDisplayProperties::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_GetDisplayProperties, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ITEM_MediaBase_C_GetDisplayProperties::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_MediaBase_C_GetDisplayProperties, CallFunc_GetOverrideMaterial_Material) == 0x000048, "Member 'ITEM_MediaBase_C_GetDisplayProperties::CallFunc_GetOverrideMaterial_Material' has a wrong offset!");

}


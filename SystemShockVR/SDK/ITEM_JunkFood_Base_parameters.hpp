#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_JunkFood_Base

#include "Basic.hpp"

#include "STRUCT_HardItemParams_structs.hpp"


namespace SDK::Params
{

// Function ITEM_JunkFood_Base.ITEM_JunkFood_Base_C.ConsumeJunkFood
// 0x00E0 (0x00E0 - 0x0000)
struct ITEM_JunkFood_Base_C_ConsumeJunkFood final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LoadedItemClass;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           SlotItem;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OriginSlotIndex;                                   // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryBag_C*                        OriginBag;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryIncrementOrderedAchievement_Result;    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_FindItem_FoundItem;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams;           // 0x0050(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_HardItemParams                 K2Node_MakeStruct_STRUCT_HardItemParams_1;         // 0x0060(0x0010)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Base;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_Base_C*                           CallFunc_CreateItem_Item;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory_1;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemToSlot_Result;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GrantItem_Result;                         // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_GetSlotItem_Item;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_Result;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInventoryBag_C*                        CallFunc_GetBag_Result;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_Base_C*                           CallFunc_RemoveItemCount_RemovedItem;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_JunkFood_Base_C_ConsumeJunkFood) == 0x000008, "Wrong alignment on ITEM_JunkFood_Base_C_ConsumeJunkFood");
static_assert(sizeof(ITEM_JunkFood_Base_C_ConsumeJunkFood) == 0x0000E0, "Wrong size on ITEM_JunkFood_Base_C_ConsumeJunkFood");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, Character) == 0x000000, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::Character' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, LoadedItemClass) == 0x000008, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::LoadedItemClass' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, SlotItem) == 0x000010, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::SlotItem' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, OriginSlotIndex) == 0x000018, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::OriginSlotIndex' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, OriginBag) == 0x000020, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::OriginBag' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, K2Node_DynamicCast_AsGI_Single_Player) == 0x000030, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_TryIncrementOrderedAchievement_Result) == 0x000039, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_TryIncrementOrderedAchievement_Result' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_FindItem_FoundItem) == 0x000040, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_FindItem_FoundItem' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, K2Node_MakeStruct_STRUCT_HardItemParams) == 0x000050, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::K2Node_MakeStruct_STRUCT_HardItemParams' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, K2Node_MakeStruct_STRUCT_HardItemParams_1) == 0x000060, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::K2Node_MakeStruct_STRUCT_HardItemParams_1' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000070, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, K2Node_ClassDynamicCast_AsITEM_Base) == 0x000078, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::K2Node_ClassDynamicCast_AsITEM_Base' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, K2Node_ClassDynamicCast_bSuccess) == 0x000080, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_GetInventory_Inventory) == 0x000088, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_CreateItem_Item) == 0x000090, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_CreateItem_Item' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_GetInventory_Inventory_1) == 0x000098, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_GetInventory_Inventory_1' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_AddItemToSlot_Result) == 0x0000A0, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_AddItemToSlot_Result' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_GrantItem_Result) == 0x0000A1, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_GrantItem_Result' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_GetSlotItem_Item) == 0x0000A8, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_GetSlotItem_Item' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_GetSlotIndex_Result) == 0x0000B4, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_GetSlotIndex_Result' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_ApplyMod_ReturnValue) == 0x0000B8, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_GetBag_Result) == 0x0000C0, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_GetBag_Result' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_IsValid_ReturnValue_2) == 0x0000C8, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_RemoveItemCount_RemovedItem) == 0x0000D0, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_RemoveItemCount_RemovedItem' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_ConsumeJunkFood, CallFunc_IsValid_ReturnValue_3) == 0x0000D8, "Member 'ITEM_JunkFood_Base_C_ConsumeJunkFood::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function ITEM_JunkFood_Base.ITEM_JunkFood_Base_C.PlayConsumeSFX
// 0x0038 (0x0038 - 0x0000)
struct ITEM_JunkFood_Base_C_PlayConsumeSFX final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_JunkFood_Base_C_PlayConsumeSFX) == 0x000008, "Wrong alignment on ITEM_JunkFood_Base_C_PlayConsumeSFX");
static_assert(sizeof(ITEM_JunkFood_Base_C_PlayConsumeSFX) == 0x000038, "Wrong size on ITEM_JunkFood_Base_C_PlayConsumeSFX");
static_assert(offsetof(ITEM_JunkFood_Base_C_PlayConsumeSFX, Character) == 0x000000, "Member 'ITEM_JunkFood_Base_C_PlayConsumeSFX::Character' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_PlayConsumeSFX, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000008, "Member 'ITEM_JunkFood_Base_C_PlayConsumeSFX::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_PlayConsumeSFX, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000010, "Member 'ITEM_JunkFood_Base_C_PlayConsumeSFX::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_PlayConsumeSFX, K2Node_DynamicCast_AsSound_Cue) == 0x000018, "Member 'ITEM_JunkFood_Base_C_PlayConsumeSFX::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_PlayConsumeSFX, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ITEM_JunkFood_Base_C_PlayConsumeSFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_PlayConsumeSFX, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000028, "Member 'ITEM_JunkFood_Base_C_PlayConsumeSFX::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_PlayConsumeSFX, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'ITEM_JunkFood_Base_C_PlayConsumeSFX::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function ITEM_JunkFood_Base.ITEM_JunkFood_Base_C.Activate
// 0x0010 (0x0010 - 0x0000)
struct ITEM_JunkFood_Base_C_Activate final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Activate_Result;                          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_JunkFood_Base_C_Activate) == 0x000008, "Wrong alignment on ITEM_JunkFood_Base_C_Activate");
static_assert(sizeof(ITEM_JunkFood_Base_C_Activate) == 0x000010, "Wrong size on ITEM_JunkFood_Base_C_Activate");
static_assert(offsetof(ITEM_JunkFood_Base_C_Activate, Character) == 0x000000, "Member 'ITEM_JunkFood_Base_C_Activate::Character' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_Activate, Result) == 0x000008, "Member 'ITEM_JunkFood_Base_C_Activate::Result' has a wrong offset!");
static_assert(offsetof(ITEM_JunkFood_Base_C_Activate, CallFunc_Activate_Result) == 0x000009, "Member 'ITEM_JunkFood_Base_C_Activate::CallFunc_Activate_Result' has a wrong offset!");

// Function ITEM_JunkFood_Base.ITEM_JunkFood_Base_C.GetInventoryItemDetailsClass
// 0x0008 (0x0008 - 0x0000)
struct ITEM_JunkFood_Base_C_GetInventoryItemDetailsClass final
{
public:
	class UClass*                                 InventoryItemDetailsWidget;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_JunkFood_Base_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong alignment on ITEM_JunkFood_Base_C_GetInventoryItemDetailsClass");
static_assert(sizeof(ITEM_JunkFood_Base_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong size on ITEM_JunkFood_Base_C_GetInventoryItemDetailsClass");
static_assert(offsetof(ITEM_JunkFood_Base_C_GetInventoryItemDetailsClass, InventoryItemDetailsWidget) == 0x000000, "Member 'ITEM_JunkFood_Base_C_GetInventoryItemDetailsClass::InventoryItemDetailsWidget' has a wrong offset!");

}


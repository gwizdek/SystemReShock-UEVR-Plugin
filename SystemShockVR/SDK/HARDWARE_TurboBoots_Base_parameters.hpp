#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HARDWARE_TurboBoots_Base

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "STRUCT_HardwareFeature_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.OnTurboMechanismStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_OnTurboMechanismStateChanged__DelegateSignature final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_OnTurboMechanismStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on HARDWARE_TurboBoots_Base_C_OnTurboMechanismStateChanged__DelegateSignature");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_OnTurboMechanismStateChanged__DelegateSignature) == 0x000001, "Wrong size on HARDWARE_TurboBoots_Base_C_OnTurboMechanismStateChanged__DelegateSignature");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_OnTurboMechanismStateChanged__DelegateSignature, State) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_OnTurboMechanismStateChanged__DelegateSignature::State' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.ExecuteUbergraph_HARDWARE_TurboBoots_Base
// 0x0008 (0x0008 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_ExecuteUbergraph_HARDWARE_TurboBoots_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryStartTurboTick_Result;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_ExecuteUbergraph_HARDWARE_TurboBoots_Base) == 0x000004, "Wrong alignment on HARDWARE_TurboBoots_Base_C_ExecuteUbergraph_HARDWARE_TurboBoots_Base");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_ExecuteUbergraph_HARDWARE_TurboBoots_Base) == 0x000008, "Wrong size on HARDWARE_TurboBoots_Base_C_ExecuteUbergraph_HARDWARE_TurboBoots_Base");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ExecuteUbergraph_HARDWARE_TurboBoots_Base, EntryPoint) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_ExecuteUbergraph_HARDWARE_TurboBoots_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ExecuteUbergraph_HARDWARE_TurboBoots_Base, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'HARDWARE_TurboBoots_Base_C_ExecuteUbergraph_HARDWARE_TurboBoots_Base::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ExecuteUbergraph_HARDWARE_TurboBoots_Base, CallFunc_TryStartTurboTick_Result) == 0x000005, "Member 'HARDWARE_TurboBoots_Base_C_ExecuteUbergraph_HARDWARE_TurboBoots_Base::CallFunc_TryStartTurboTick_Result' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.GetActiveVersionNumber
// 0x0004 (0x0004 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_GetActiveVersionNumber final
{
public:
	int32                                         VersionNumber;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_GetActiveVersionNumber) == 0x000004, "Wrong alignment on HARDWARE_TurboBoots_Base_C_GetActiveVersionNumber");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_GetActiveVersionNumber) == 0x000004, "Wrong size on HARDWARE_TurboBoots_Base_C_GetActiveVersionNumber");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetActiveVersionNumber, VersionNumber) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_GetActiveVersionNumber::VersionNumber' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.UpdateHardwareState
// 0x0005 (0x0005 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_UpdateHardwareState final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Result;                                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateHardwareState_Result;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DeactivateTurboMechanism_Result;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_UpdateHardwareState) == 0x000001, "Wrong alignment on HARDWARE_TurboBoots_Base_C_UpdateHardwareState");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_UpdateHardwareState) == 0x000005, "Wrong size on HARDWARE_TurboBoots_Base_C_UpdateHardwareState");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_UpdateHardwareState, IsEnabled) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_UpdateHardwareState::IsEnabled' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_UpdateHardwareState, Result) == 0x000001, "Member 'HARDWARE_TurboBoots_Base_C_UpdateHardwareState::Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_UpdateHardwareState, CallFunc_UpdateHardwareState_Result) == 0x000002, "Member 'HARDWARE_TurboBoots_Base_C_UpdateHardwareState::CallFunc_UpdateHardwareState_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_UpdateHardwareState, CallFunc_DeactivateTurboMechanism_Result) == 0x000003, "Member 'HARDWARE_TurboBoots_Base_C_UpdateHardwareState::CallFunc_DeactivateTurboMechanism_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_UpdateHardwareState, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'HARDWARE_TurboBoots_Base_C_UpdateHardwareState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.CanActivateTurboMechanism
// 0x0030 (0x0030 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHardwareMagneticallyDisabled_Result;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsActivated_Result;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism) == 0x000008, "Wrong alignment on HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism) == 0x000030, "Wrong size on HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism, Result) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism::Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism, OwnerCharacter) == 0x000008, "Member 'HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism, CallFunc_IsHardwareMagneticallyDisabled_Result) == 0x000010, "Member 'HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism::CallFunc_IsHardwareMagneticallyDisabled_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism, CallFunc_GetAttribValue_ReturnValue) == 0x000014, "Member 'HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000019, "Member 'HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism, CallFunc_GetIsActivated_Result) == 0x00001A, "Member 'HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism::CallFunc_GetIsActivated_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism, CallFunc_GetOwnerCharacter_Character) == 0x000020, "Member 'HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'HARDWARE_TurboBoots_Base_C_CanActivateTurboMechanism::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.GetEnergyDrainTickRate
// 0x0008 (0x0008 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_GetEnergyDrainTickRate final
{
public:
	int32                                         VersionNumber;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_GetEnergyDrainTickRate) == 0x000004, "Wrong alignment on HARDWARE_TurboBoots_Base_C_GetEnergyDrainTickRate");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_GetEnergyDrainTickRate) == 0x000008, "Wrong size on HARDWARE_TurboBoots_Base_C_GetEnergyDrainTickRate");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetEnergyDrainTickRate, VersionNumber) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_GetEnergyDrainTickRate::VersionNumber' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetEnergyDrainTickRate, Result) == 0x000004, "Member 'HARDWARE_TurboBoots_Base_C_GetEnergyDrainTickRate::Result' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.AddTurboElapsedTime
// 0x0008 (0x0008 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_AddTurboElapsedTime final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_AddTurboElapsedTime) == 0x000004, "Wrong alignment on HARDWARE_TurboBoots_Base_C_AddTurboElapsedTime");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_AddTurboElapsedTime) == 0x000008, "Wrong size on HARDWARE_TurboBoots_Base_C_AddTurboElapsedTime");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_AddTurboElapsedTime, Time) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_AddTurboElapsedTime::Time' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_AddTurboElapsedTime, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'HARDWARE_TurboBoots_Base_C_AddTurboElapsedTime::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.ActivateTurboMechanism
// 0x0048 (0x0048 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism final
{
public:
	int32                                         Version;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEnergyDrainTickRate_Result;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryStartTurboTick_Result;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanActivateTurboMechanism_Result;         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnTurboMechanismActivated_Handled;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribMod*                             CallFunc_ApplyMod_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeactivateTurboMechanism_Result;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism) == 0x000008, "Wrong alignment on HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism) == 0x000048, "Wrong size on HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, Version) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::Version' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, Result) == 0x000004, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, OwnerCharacter) == 0x000008, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_GetEnergyDrainTickRate_Result) == 0x000010, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_GetEnergyDrainTickRate_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_TryStartTurboTick_Result) == 0x000014, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_TryStartTurboTick_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_CanActivateTurboMechanism_Result) == 0x000015, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_CanActivateTurboMechanism_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_Greater_IntInt_ReturnValue) == 0x000016, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000018, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_ApplyMod_ReturnValue) == 0x000020, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_ApplyMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_OnTurboMechanismActivated_Handled) == 0x000028, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_OnTurboMechanismActivated_Handled' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_ApplyMod_ReturnValue_1) == 0x000030, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_ApplyMod_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_DeactivateTurboMechanism_Result) == 0x000038, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_DeactivateTurboMechanism_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000039, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00003A, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_IsValid_ReturnValue) == 0x00003B, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism, CallFunc_GetOwnerCharacter_Character) == 0x000040, "Member 'HARDWARE_TurboBoots_Base_C_ActivateTurboMechanism::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.EVENT_OnEnergyDepleted
// 0x0001 (0x0001 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_EVENT_OnEnergyDepleted final
{
public:
	bool                                          CallFunc_DeactivateTurboMechanism_Result;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_EVENT_OnEnergyDepleted) == 0x000001, "Wrong alignment on HARDWARE_TurboBoots_Base_C_EVENT_OnEnergyDepleted");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_EVENT_OnEnergyDepleted) == 0x000001, "Wrong size on HARDWARE_TurboBoots_Base_C_EVENT_OnEnergyDepleted");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_EVENT_OnEnergyDepleted, CallFunc_DeactivateTurboMechanism_Result) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_EVENT_OnEnergyDepleted::CallFunc_DeactivateTurboMechanism_Result' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.DeactivateTurboMechanism
// 0x0068 (0x0068 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism final
{
public:
	int32                                         VersionNumber;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PreviousActiveVersionNumber;                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        EnergyAttribInstance;                              // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ExpireModsMatchingCategory_ReturnValue;   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ExpireModsMatchingCategory_ReturnValue_1; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_Actor;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnTurboMechanismDeactivated_Handled;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           K2Node_DynamicCast_AsPAWN_System_Shock_Character;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttribInstance*                        CallFunc_GetAttribInstance_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism) == 0x000008, "Wrong alignment on HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism) == 0x000068, "Wrong size on HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, VersionNumber) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::VersionNumber' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, Result) == 0x000004, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, PreviousActiveVersionNumber) == 0x000008, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::PreviousActiveVersionNumber' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, EnergyAttribInstance) == 0x000010, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::EnergyAttribInstance' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, OwnerCharacter) == 0x000018, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, CallFunc_Greater_IntInt_ReturnValue) == 0x000021, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, CallFunc_ExpireModsMatchingCategory_ReturnValue) == 0x000024, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::CallFunc_ExpireModsMatchingCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, CallFunc_ExpireModsMatchingCategory_ReturnValue_1) == 0x00002C, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::CallFunc_ExpireModsMatchingCategory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, CallFunc_GetOwnerActor_Actor) == 0x000030, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::CallFunc_GetOwnerActor_Actor' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, CallFunc_OnTurboMechanismDeactivated_Handled) == 0x000038, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::CallFunc_OnTurboMechanismDeactivated_Handled' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, K2Node_DynamicCast_AsPAWN_System_Shock_Character) == 0x000040, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::K2Node_DynamicCast_AsPAWN_System_Shock_Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, K2Node_CreateDelegate_OutputDelegate) == 0x00004C, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism, CallFunc_GetAttribInstance_ReturnValue) == 0x000060, "Member 'HARDWARE_TurboBoots_Base_C_DeactivateTurboMechanism::CallFunc_GetAttribInstance_ReturnValue' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.OnTurboMechanismActivated
// 0x0008 (0x0008 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_OnTurboMechanismActivated final
{
public:
	int32                                         VersionNumber;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Handled;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_OnTurboMechanismActivated) == 0x000004, "Wrong alignment on HARDWARE_TurboBoots_Base_C_OnTurboMechanismActivated");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_OnTurboMechanismActivated) == 0x000008, "Wrong size on HARDWARE_TurboBoots_Base_C_OnTurboMechanismActivated");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_OnTurboMechanismActivated, VersionNumber) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_OnTurboMechanismActivated::VersionNumber' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_OnTurboMechanismActivated, Handled) == 0x000004, "Member 'HARDWARE_TurboBoots_Base_C_OnTurboMechanismActivated::Handled' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.OnTurboMechanismDeactivated
// 0x0008 (0x0008 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_OnTurboMechanismDeactivated final
{
public:
	int32                                         VersionNumber;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Handled;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_OnTurboMechanismDeactivated) == 0x000004, "Wrong alignment on HARDWARE_TurboBoots_Base_C_OnTurboMechanismDeactivated");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_OnTurboMechanismDeactivated) == 0x000008, "Wrong size on HARDWARE_TurboBoots_Base_C_OnTurboMechanismDeactivated");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_OnTurboMechanismDeactivated, VersionNumber) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_OnTurboMechanismDeactivated::VersionNumber' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_OnTurboMechanismDeactivated, Handled) == 0x000004, "Member 'HARDWARE_TurboBoots_Base_C_OnTurboMechanismDeactivated::Handled' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.OnTurboBootTick
// 0x0008 (0x0008 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_OnTurboBootTick final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurboElapsedTime_0;                                // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_OnTurboBootTick) == 0x000004, "Wrong alignment on HARDWARE_TurboBoots_Base_C_OnTurboBootTick");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_OnTurboBootTick) == 0x000008, "Wrong size on HARDWARE_TurboBoots_Base_C_OnTurboBootTick");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_OnTurboBootTick, DeltaTime) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_OnTurboBootTick::DeltaTime' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_OnTurboBootTick, TurboElapsedTime_0) == 0x000004, "Member 'HARDWARE_TurboBoots_Base_C_OnTurboBootTick::TurboElapsedTime_0' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.EVENT_OnTurboBootTick
// 0x0018 (0x0018 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick final
{
public:
	float                                         FixedTickRate;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTimeSinceLastTick;                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayTimeInSeconds_ReturnValue_1;       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick) == 0x000004, "Wrong alignment on HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick) == 0x000018, "Wrong size on HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick, FixedTickRate) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick::FixedTickRate' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick, ElapsedTimeSinceLastTick) == 0x000004, "Member 'HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick::ElapsedTimeSinceLastTick' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick, CallFunc_GetPlayTimeInSeconds_ReturnValue) == 0x000008, "Member 'HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick::CallFunc_GetPlayTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick, CallFunc_GetPlayTimeInSeconds_ReturnValue_1) == 0x00000C, "Member 'HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick::CallFunc_GetPlayTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'HARDWARE_TurboBoots_Base_C_EVENT_OnTurboBootTick::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.GetHardwareFeatures
// 0x0090 (0x0090 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_GetHardwareFeatures final
{
public:
	TArray<struct FSTRUCT_HardwareFeature>        Result;                                            // 0x0000(0x0010)(Parm, OutParm)
	int32                                         CurrentVersion;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTRUCT_HardwareFeature>        HardwareFeatures;                                  // 0x0018(0x0010)(Edit, BlueprintVisible)
	float                                         CallFunc_GetEnergyDrainTickRate_Result;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ComputeJpmFromTickRate_Result;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HardwareFeature                K2Node_MakeStruct_STRUCT_HardwareFeature;          // 0x0038(0x0020)(HasGetValueTypeHash)
	float                                         CallFunc_GetEnergyDrainTickRate_Result_1;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ComputeJpmFromTickRate_Result_1;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_HardwareFeature                K2Node_MakeStruct_STRUCT_HardwareFeature_1;        // 0x0068(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_GetVersionNumber_Version;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures) == 0x000008, "Wrong alignment on HARDWARE_TurboBoots_Base_C_GetHardwareFeatures");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures) == 0x000090, "Wrong size on HARDWARE_TurboBoots_Base_C_GetHardwareFeatures");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, Result) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, CurrentVersion) == 0x000010, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::CurrentVersion' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, HardwareFeatures) == 0x000018, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::HardwareFeatures' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, CallFunc_GetEnergyDrainTickRate_Result) == 0x000028, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::CallFunc_GetEnergyDrainTickRate_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, CallFunc_ComputeJpmFromTickRate_Result) == 0x00002C, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::CallFunc_ComputeJpmFromTickRate_Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000030, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, K2Node_MakeStruct_STRUCT_HardwareFeature) == 0x000038, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::K2Node_MakeStruct_STRUCT_HardwareFeature' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, CallFunc_GetEnergyDrainTickRate_Result_1) == 0x000058, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::CallFunc_GetEnergyDrainTickRate_Result_1' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, CallFunc_Array_Add_ReturnValue) == 0x00005C, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, CallFunc_ComputeJpmFromTickRate_Result_1) == 0x000060, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::CallFunc_ComputeJpmFromTickRate_Result_1' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, K2Node_MakeStruct_STRUCT_HardwareFeature_1) == 0x000068, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::K2Node_MakeStruct_STRUCT_HardwareFeature_1' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, CallFunc_GetVersionNumber_Version) == 0x000088, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::CallFunc_GetVersionNumber_Version' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_GetHardwareFeatures, CallFunc_Array_Add_ReturnValue_1) == 0x00008C, "Member 'HARDWARE_TurboBoots_Base_C_GetHardwareFeatures::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.TryStartTurboTick
// 0x0050 (0x0050 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_TryStartTurboTick final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UAttribInstance*                        CallFunc_GetOrCreateAttribInstance_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_TryStartTurboTick) == 0x000008, "Wrong alignment on HARDWARE_TurboBoots_Base_C_TryStartTurboTick");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_TryStartTurboTick) == 0x000050, "Wrong size on HARDWARE_TurboBoots_Base_C_TryStartTurboTick");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryStartTurboTick, Result) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_TryStartTurboTick::Result' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryStartTurboTick, CallFunc_GetOwnerCharacter_Character) == 0x000008, "Member 'HARDWARE_TurboBoots_Base_C_TryStartTurboTick::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryStartTurboTick, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'HARDWARE_TurboBoots_Base_C_TryStartTurboTick::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryStartTurboTick, CallFunc_GetOrCreateAttribInstance_ReturnValue) == 0x000020, "Member 'HARDWARE_TurboBoots_Base_C_TryStartTurboTick::CallFunc_GetOrCreateAttribInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryStartTurboTick, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'HARDWARE_TurboBoots_Base_C_TryStartTurboTick::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryStartTurboTick, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000038, "Member 'HARDWARE_TurboBoots_Base_C_TryStartTurboTick::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryStartTurboTick, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'HARDWARE_TurboBoots_Base_C_TryStartTurboTick::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryStartTurboTick, CallFunc_Not_PreBool_ReturnValue) == 0x000048, "Member 'HARDWARE_TurboBoots_Base_C_TryStartTurboTick::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.TryPlayTurboBootsSound
// 0x0070 (0x0070 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound final
{
public:
	class USoundCue*                              SoundCue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLooping;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        SpawnedAudioComponent;                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CharacterOwner;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Up_ReturnValue;                    // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound) == 0x000008, "Wrong alignment on HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound) == 0x000070, "Wrong size on HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, SoundCue) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::SoundCue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, IsLooping) == 0x000008, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::IsLooping' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, SpawnedAudioComponent) == 0x000010, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::SpawnedAudioComponent' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, CharacterOwner) == 0x000018, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::CharacterOwner' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, CallFunc_GetOwnerCharacter_Character) == 0x000028, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue) == 0x000030, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::CallFunc_GetScaledCapsuleHalfHeight_WithoutHemisphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000040, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, CallFunc_Vector_Up_ReturnValue) == 0x000044, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::CallFunc_Vector_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000050, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00005C, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000068, "Member 'HARDWARE_TurboBoots_Base_C_TryPlayTurboBootsSound::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");

// Function HARDWARE_TurboBoots_Base.HARDWARE_TurboBoots_Base_C.TryStopTurboBootsLoopingSound
// 0x0001 (0x0001 - 0x0000)
struct HARDWARE_TurboBoots_Base_C_TryStopTurboBootsLoopingSound final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_TurboBoots_Base_C_TryStopTurboBootsLoopingSound) == 0x000001, "Wrong alignment on HARDWARE_TurboBoots_Base_C_TryStopTurboBootsLoopingSound");
static_assert(sizeof(HARDWARE_TurboBoots_Base_C_TryStopTurboBootsLoopingSound) == 0x000001, "Wrong size on HARDWARE_TurboBoots_Base_C_TryStopTurboBootsLoopingSound");
static_assert(offsetof(HARDWARE_TurboBoots_Base_C_TryStopTurboBootsLoopingSound, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'HARDWARE_TurboBoots_Base_C_TryStopTurboBootsLoopingSound::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}


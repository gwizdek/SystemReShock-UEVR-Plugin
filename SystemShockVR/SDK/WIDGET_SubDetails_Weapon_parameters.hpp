#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WIDGET_SubDetails_Weapon

#include "Basic.hpp"

#include "ENUM_WeaponDetailsType_structs.hpp"
#include "ENUM_WeaponOperation_structs.hpp"
#include "STRUCT_WeaponMode_structs.hpp"
#include "CoreGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.ExecuteUbergraph_WIDGET_SubDetails_Weapon
// 0x0028 (0x0028 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UITEM_WeaponBase_C* Weapon, int32 OldMode, int32 NewMode)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     K2Node_DynamicCast_AsITEM_Weapon_Base;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon) == 0x000028, "Wrong size on WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon, EntryPoint) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon::EntryPoint' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon, K2Node_DynamicCast_AsITEM_Weapon_Base) == 0x000018, "Member 'WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon::K2Node_DynamicCast_AsITEM_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WIDGET_SubDetails_Weapon_C_ExecuteUbergraph_WIDGET_SubDetails_Weapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.EVENT_OnModeChanged
// 0x0010 (0x0010 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_EVENT_OnModeChanged final
{
public:
	class UITEM_WeaponBase_C*                     Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OldMode;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewMode;                                           // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_EVENT_OnModeChanged) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Weapon_C_EVENT_OnModeChanged");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_EVENT_OnModeChanged) == 0x000010, "Wrong size on WIDGET_SubDetails_Weapon_C_EVENT_OnModeChanged");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_EVENT_OnModeChanged, Weapon) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_EVENT_OnModeChanged::Weapon' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_EVENT_OnModeChanged, OldMode) == 0x000008, "Member 'WIDGET_SubDetails_Weapon_C_EVENT_OnModeChanged::OldMode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_EVENT_OnModeChanged, NewMode) == 0x00000C, "Member 'WIDGET_SubDetails_Weapon_C_EVENT_OnModeChanged::NewMode' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.SetModeDetails
// 0x0A50 (0x0A50 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_SetModeDetails final
{
public:
	class APAWN_SystemShockCharacter_C*           OwnerCharacter;                                    // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponBase_C*                     WeaponItem;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_WeaponDetailsType                        CurrDetailsType;                                   // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         BerserkDamageBonus;                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ArmorPenetration;                                  // 0x0018(0x0018)(Edit, BlueprintVisible)
	class FText                                   DamageValue;                                       // 0x0030(0x0018)(Edit, BlueprintVisible)
	class FText                                   DamageTypeName;                                    // 0x0048(0x0018)(Edit, BlueprintVisible)
	class UAttribDamageType*                      DamageModType;                                     // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   ModeText;                                          // 0x0068(0x0018)(Edit, BlueprintVisible)
	class FText                                   OperationText;                                     // 0x0080(0x0018)(Edit, BlueprintVisible)
	bool                                          IsMaintainMode;                                    // 0x0098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     ModeDefaults;                                      // 0x00A0(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     Mode;                                              // 0x01A0(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value;       // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetWeaponDamageLabel_Result;              // 0x02A8(0x0018)()
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_1;     // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_2;     // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_3;     // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEquipped_Result;                        // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x2];                                      // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttribValue_ReturnValue;               // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E5[0x3];                                      // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetWeaponTextColor_Color;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2ED[0x3];                                      // 0x02ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetWeaponModeArmorPenetrationText_Text;   // 0x02F0(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x2];                                      // 0x030A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetWeaponTextColor_Color_1;               // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312[0x2];                                      // 0x0312(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetWeaponTextColor_Color_2;               // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetWeaponTextColor_Color_3;               // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_322[0x2];                                      // 0x0322(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetWeaponTextColor_Color_4;               // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetWeaponArmorModifierLabel_Result;       // 0x0330(0x0018)()
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_4;     // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetWeaponTextColor_Color_5;               // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_5;     // 0x0354(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetWeaponTextColor_Color_6;               // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetWeaponTextColor_Color_7;               // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponMode_WeaponMode;                 // 0x0368(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetWeaponModeDamageTypeText_Text;         // 0x0470(0x0018)()
	class FText                                   CallFunc_GetWeaponArmorModifierLabel_Result_1;     // 0x0488(0x0018)()
	class FText                                   CallFunc_GetWeaponDamageLabel_Result_1;            // 0x04A0(0x0018)()
	bool                                          CallFunc_GetWeaponAllowsUserModeSelection_Result;  // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x04C0(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0500(0x0010)(ReferenceParm)
	class FText                                   CallFunc_GetWeaponModeDisplayName_Result;          // 0x0510(0x0018)()
	class FText                                   CallFunc_OperationToText_Text;                     // 0x0528(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_8;             // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_542[0x2];                                      // 0x0542(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetWeaponTextColor_Color_8;               // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_6;     // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_9;             // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0558(0x0040)(HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetWeaponTextColor_Color_9;               // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59C[0x4];                                      // 0x059C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x05A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x05B0(0x0018)()
	class FText                                   CallFunc_GetFormattedWeaponDamageText_Result;      // 0x05C8(0x0018)()
	bool                                          CallFunc_IsWeaponModeMaintain_Result;              // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_10;            // 0x05E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E2[0x2];                                      // 0x05E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetModeCount_Count;                       // 0x05E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_11;            // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5EA[0x2];                                      // 0x05EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetModeCount_Count_1;                     // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x05F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x05F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_WeaponDetailsType                        CallFunc_GetModeDetailsType_DetailsType;           // 0x05F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0600(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0640(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0650(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0668(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_12;            // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0681(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_682[0x2];                                      // 0x0682(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_7;     // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0688(0x0018)()
	class UITEM_WeaponBase_C*                     K2Node_DynamicCast_AsITEM_Weapon_Base;             // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponMode_WeaponMode_1;               // 0x06B0(0x0100)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x07B0(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponPropertyValueByType_Value_8;     // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F4[0x4];                                      // 0x07F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_3;                          // 0x07F8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0808(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x0848(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_4;                          // 0x0860(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_3;                     // 0x0870(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0888(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x08C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_5;                          // 0x0908(0x0010)(ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_6;                          // 0x0918(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_4;                     // 0x0928(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_5;                     // 0x0940(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0958(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x0970(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x09B0(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_7;                          // 0x09C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_6;                     // 0x09D8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue_7;                     // 0x09F0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0A08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0A09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A0A[0x6];                                      // 0x0A0A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0A10(0x0018)(ConstParm)
	bool                                          Temp_bool_Variable_1;                              // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A29[0x7];                                      // 0x0A29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0A30(0x0018)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_SetModeDetails) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Weapon_C_SetModeDetails");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_SetModeDetails) == 0x000A50, "Wrong size on WIDGET_SubDetails_Weapon_C_SetModeDetails");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, OwnerCharacter) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, WeaponItem) == 0x000008, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::WeaponItem' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CurrDetailsType) == 0x000010, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CurrDetailsType' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, BerserkDamageBonus) == 0x000014, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::BerserkDamageBonus' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, ArmorPenetration) == 0x000018, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::ArmorPenetration' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, DamageValue) == 0x000030, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::DamageValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, DamageTypeName) == 0x000048, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::DamageTypeName' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, DamageModType) == 0x000060, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::DamageModType' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, ModeText) == 0x000068, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::ModeText' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, OperationText) == 0x000080, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::OperationText' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, IsMaintainMode) == 0x000098, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::IsMaintainMode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, ModeDefaults) == 0x0000A0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::ModeDefaults' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, Mode) == 0x0001A0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::Mode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponPropertyValueByType_Value) == 0x0002A0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponPropertyValueByType_Value' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002A4, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponDamageLabel_Result) == 0x0002A8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponDamageLabel_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponPropertyValueByType_Value_1) == 0x0002C0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponPropertyValueByType_Value_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue) == 0x0002C4, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponPropertyValueByType_Value_2) == 0x0002C8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponPropertyValueByType_Value_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponPropertyValueByType_Value_3) == 0x0002CC, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponPropertyValueByType_Value_3' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_IsEquipped_Result) == 0x0002D0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_IsEquipped_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002D1, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetAttribValue_ReturnValue) == 0x0002D4, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetAttribValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetOwnerCharacter_Character) == 0x0002D8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Round_ReturnValue) == 0x0002E0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0002E4, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponTextColor_Color) == 0x0002E8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponTextColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002EC, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponModeArmorPenetrationText_Text) == 0x0002F0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponModeArmorPenetrationText_Text' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000308, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Less_IntInt_ReturnValue) == 0x000309, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponTextColor_Color_1) == 0x00030C, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponTextColor_Color_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000310, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_BooleanOR_ReturnValue) == 0x000311, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponTextColor_Color_2) == 0x000314, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponTextColor_Color_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000318, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponTextColor_Color_3) == 0x00031C, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponTextColor_Color_3' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue_5) == 0x000320, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_BooleanOR_ReturnValue_1) == 0x000321, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponTextColor_Color_4) == 0x000324, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponTextColor_Color_4' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000328, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponArmorModifierLabel_Result) == 0x000330, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponArmorModifierLabel_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponPropertyValueByType_Value_4) == 0x000348, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponPropertyValueByType_Value_4' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00034C, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponTextColor_Color_5) == 0x000350, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponTextColor_Color_5' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponPropertyValueByType_Value_5) == 0x000354, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponPropertyValueByType_Value_5' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue_6) == 0x000358, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponTextColor_Color_6) == 0x00035C, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponTextColor_Color_6' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000360, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponTextColor_Color_7) == 0x000364, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponTextColor_Color_7' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponMode_WeaponMode) == 0x000368, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponMode_WeaponMode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue_7) == 0x000468, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponModeDamageTypeText_Text) == 0x000470, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponModeDamageTypeText_Text' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponArmorModifierLabel_Result_1) == 0x000488, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponArmorModifierLabel_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponDamageLabel_Result_1) == 0x0004A0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponDamageLabel_Result_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponAllowsUserModeSelection_Result) == 0x0004B8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponAllowsUserModeSelection_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeStruct_FormatArgumentData) == 0x0004C0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeArray_Array) == 0x000500, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponModeDisplayName_Result) == 0x000510, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponModeDisplayName_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_OperationToText_Text) == 0x000528, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_OperationToText_Text' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue_8) == 0x000540, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_BooleanOR_ReturnValue_2) == 0x000541, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponTextColor_Color_8) == 0x000544, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponTextColor_Color_8' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000548, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponPropertyValueByType_Value_6) == 0x00054C, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponPropertyValueByType_Value_6' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue_9) == 0x000550, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeStruct_FormatArgumentData_1) == 0x000558, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponTextColor_Color_9) == 0x000598, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponTextColor_Color_9' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeArray_Array_1) == 0x0005A0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Format_ReturnValue) == 0x0005B0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetFormattedWeaponDamageText_Result) == 0x0005C8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetFormattedWeaponDamageText_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_IsWeaponModeMaintain_Result) == 0x0005E0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_IsWeaponModeMaintain_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue_10) == 0x0005E1, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetModeCount_Count) == 0x0005E4, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetModeCount_Count' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue_11) == 0x0005E8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_BooleanAND_ReturnValue) == 0x0005E9, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetModeCount_Count_1) == 0x0005EC, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetModeCount_Count_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Subtract_IntInt_ReturnValue) == 0x0005F0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Less_IntInt_ReturnValue_1) == 0x0005F4, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x0005F5, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetModeDetailsType_DetailsType) == 0x0005F6, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetModeDetailsType_DetailsType' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_SwitchEnum_CmpSuccess) == 0x0005F7, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_MakeLiteralInt_ReturnValue) == 0x0005F8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeStruct_FormatArgumentData_2) == 0x000600, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeArray_Array_2) == 0x000640, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Format_ReturnValue_1) == 0x000650, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_MakeLiteralText_ReturnValue) == 0x000668, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Greater_IntInt_ReturnValue_12) == 0x000680, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Greater_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000681, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponPropertyValueByType_Value_7) == 0x000684, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponPropertyValueByType_Value_7' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Conv_IntToText_ReturnValue) == 0x000688, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_DynamicCast_AsITEM_Weapon_Base) == 0x0006A0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_DynamicCast_AsITEM_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_DynamicCast_bSuccess) == 0x0006A8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponMode_WeaponMode_1) == 0x0006B0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponMode_WeaponMode_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeStruct_FormatArgumentData_3) == 0x0007B0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_GetWeaponPropertyValueByType_Value_8) == 0x0007F0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_GetWeaponPropertyValueByType_Value_8' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeArray_Array_3) == 0x0007F8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeStruct_FormatArgumentData_4) == 0x000808, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Format_ReturnValue_2) == 0x000848, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeArray_Array_4) == 0x000860, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Format_ReturnValue_3) == 0x000870, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Format_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeStruct_FormatArgumentData_5) == 0x000888, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeStruct_FormatArgumentData_6) == 0x0008C8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeArray_Array_5) == 0x000908, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeArray_Array_5' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeArray_Array_6) == 0x000918, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeArray_Array_6' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Format_ReturnValue_4) == 0x000928, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Format_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Format_ReturnValue_5) == 0x000940, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Format_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000958, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeStruct_FormatArgumentData_7) == 0x000970, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_MakeLiteralText_ReturnValue_2) == 0x0009B0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_MakeArray_Array_7) == 0x0009C8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_MakeArray_Array_7' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Format_ReturnValue_6) == 0x0009D8, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Format_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_Format_ReturnValue_7) == 0x0009F0, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_Format_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_IsValid_ReturnValue) == 0x000A08, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, Temp_bool_Variable) == 0x000A09, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_Select_Default) == 0x000A10, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, Temp_bool_Variable_1) == 0x000A28, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, K2Node_Select_Default_1) == 0x000A30, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_SetModeDetails, CallFunc_IsValid_ReturnValue_1) == 0x000A48, "Member 'WIDGET_SubDetails_Weapon_C_SetModeDetails::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.OnDetailsTypeChanged
// 0x0014 (0x0014 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged) == 0x000001, "Wrong alignment on WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged) == 0x000014, "Wrong size on WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, Temp_byte_Variable) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, Temp_bool_Variable) == 0x000001, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, Temp_byte_Variable_1) == 0x000002, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, Temp_byte_Variable_2) == 0x000003, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, Temp_bool_Variable_1) == 0x000004, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, Temp_byte_Variable_3) == 0x000005, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, Temp_byte_Variable_4) == 0x000006, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, Temp_bool_Variable_2) == 0x000007, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, Temp_byte_Variable_5) == 0x000008, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, Temp_byte_Variable_6) == 0x000009, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000B, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00000C, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, K2Node_Select_Default) == 0x00000D, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, K2Node_Select_Default_1) == 0x00000E, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00000F, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, Temp_byte_Variable_7) == 0x000010, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, K2Node_Select_Default_2) == 0x000011, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, Temp_bool_Variable_3) == 0x000012, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged, K2Node_Select_Default_3) == 0x000013, "Member 'WIDGET_SubDetails_Weapon_C_OnDetailsTypeChanged::K2Node_Select_Default_3' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.OperationToText
// 0x0050 (0x0050 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_OperationToText final
{
public:
	ENUM_WeaponOperation                          Operation;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnumHandle                            K2Node_MakeStruct_EnumHandle;                      // 0x0028(0x0010)(NoDestructor)
	class FText                                   CallFunc_GetEnumeratorTextFromHandle_ReturnValue;  // 0x0038(0x0018)()
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_OperationToText) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Weapon_C_OperationToText");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_OperationToText) == 0x000050, "Wrong size on WIDGET_SubDetails_Weapon_C_OperationToText");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OperationToText, Operation) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_OperationToText::Operation' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OperationToText, Text) == 0x000008, "Member 'WIDGET_SubDetails_Weapon_C_OperationToText::Text' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OperationToText, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'WIDGET_SubDetails_Weapon_C_OperationToText::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OperationToText, K2Node_MakeStruct_EnumHandle) == 0x000028, "Member 'WIDGET_SubDetails_Weapon_C_OperationToText::K2Node_MakeStruct_EnumHandle' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_OperationToText, CallFunc_GetEnumeratorTextFromHandle_ReturnValue) == 0x000038, "Member 'WIDGET_SubDetails_Weapon_C_OperationToText::CallFunc_GetEnumeratorTextFromHandle_ReturnValue' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetItemDetailsType
// 0x0120 (0x0120 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_GetItemDetailsType final
{
public:
	ENUM_WeaponDetailsType                        DetailsType;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     K2Node_DynamicCast_AsITEM_Weapon_Base;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetCurrentMode_Mode;                      // 0x0018(0x0100)(HasGetValueTypeHash)
	ENUM_WeaponDetailsType                        CallFunc_GetModeDetailsType_DetailsType;           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_GetItemDetailsType) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Weapon_C_GetItemDetailsType");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_GetItemDetailsType) == 0x000120, "Wrong size on WIDGET_SubDetails_Weapon_C_GetItemDetailsType");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetItemDetailsType, DetailsType) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_GetItemDetailsType::DetailsType' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetItemDetailsType, K2Node_DynamicCast_AsITEM_Weapon_Base) == 0x000008, "Member 'WIDGET_SubDetails_Weapon_C_GetItemDetailsType::K2Node_DynamicCast_AsITEM_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetItemDetailsType, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'WIDGET_SubDetails_Weapon_C_GetItemDetailsType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetItemDetailsType, CallFunc_GetCurrentMode_Mode) == 0x000018, "Member 'WIDGET_SubDetails_Weapon_C_GetItemDetailsType::CallFunc_GetCurrentMode_Mode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetItemDetailsType, CallFunc_GetModeDetailsType_DetailsType) == 0x000118, "Member 'WIDGET_SubDetails_Weapon_C_GetItemDetailsType::CallFunc_GetModeDetailsType_DetailsType' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetModeDetailsType
// 0x0118 (0x0118 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_GetModeDetailsType final
{
public:
	struct FSTRUCT_WeaponMode                     ModeToUse;                                         // 0x0000(0x0100)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	ENUM_WeaponDetailsType                        DetailsType;                                       // 0x0100(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     K2Node_DynamicCast_AsITEM_Weapon_Base;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_GetModeDetailsType) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Weapon_C_GetModeDetailsType");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_GetModeDetailsType) == 0x000118, "Wrong size on WIDGET_SubDetails_Weapon_C_GetModeDetailsType");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetModeDetailsType, ModeToUse) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_GetModeDetailsType::ModeToUse' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetModeDetailsType, DetailsType) == 0x000100, "Member 'WIDGET_SubDetails_Weapon_C_GetModeDetailsType::DetailsType' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetModeDetailsType, K2Node_DynamicCast_AsITEM_Weapon_Base) == 0x000108, "Member 'WIDGET_SubDetails_Weapon_C_GetModeDetailsType::K2Node_DynamicCast_AsITEM_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetModeDetailsType, K2Node_DynamicCast_bSuccess) == 0x000110, "Member 'WIDGET_SubDetails_Weapon_C_GetModeDetailsType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetModeDetailsType, CallFunc_Greater_IntInt_ReturnValue) == 0x000111, "Member 'WIDGET_SubDetails_Weapon_C_GetModeDetailsType::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetModeDetailsType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000112, "Member 'WIDGET_SubDetails_Weapon_C_GetModeDetailsType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetWeaponMode
// 0x0778 (0x0778 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_GetWeaponMode final
{
public:
	bool                                          DefaultValues;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     WeaponMode;                                        // 0x0008(0x0100)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CurrentMode;                                       // 0x0108(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class UITEM_WeaponBase_C*                     Weapon;                                            // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetWeaponModeNameByIndex_ModeName;        // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetWeaponModeNameByIndex_ModeName_1;      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Explosive_Base;     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_ExplosiveBase_C*                  K2Node_DynamicCast_AsITEM_Explosive_Base;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0250(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0360(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     K2Node_DynamicCast_AsITEM_Weapon_Base;             // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponModeDefaults_Mode;               // 0x0478(0x0100)(HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponMode_Mode;                       // 0x0578(0x0100)(HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     K2Node_Select_Default;                             // 0x0678(0x0100)(HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_GetWeaponMode) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Weapon_C_GetWeaponMode");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_GetWeaponMode) == 0x000778, "Wrong size on WIDGET_SubDetails_Weapon_C_GetWeaponMode");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, DefaultValues) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::DefaultValues' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, WeaponMode) == 0x000008, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::WeaponMode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, CurrentMode) == 0x000108, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::CurrentMode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, Weapon) == 0x000208, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::Weapon' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, CallFunc_GetWeaponModeNameByIndex_ModeName) == 0x000210, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::CallFunc_GetWeaponModeNameByIndex_ModeName' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, CallFunc_GetWeaponModeNameByIndex_ModeName_1) == 0x000218, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::CallFunc_GetWeaponModeNameByIndex_ModeName_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, Temp_bool_Variable) == 0x000220, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000228, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, K2Node_ClassDynamicCast_AsITEM_Explosive_Base) == 0x000230, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::K2Node_ClassDynamicCast_AsITEM_Explosive_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, K2Node_ClassDynamicCast_bSuccess) == 0x000238, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, K2Node_DynamicCast_AsITEM_Explosive_Base) == 0x000240, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::K2Node_DynamicCast_AsITEM_Explosive_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, K2Node_DynamicCast_bSuccess) == 0x000248, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, CallFunc_GetDataTableRowFromName_OutRow) == 0x000250, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000350, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, CallFunc_GetObjectClass_ReturnValue) == 0x000358, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000360, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000460, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, K2Node_DynamicCast_AsITEM_Weapon_Base) == 0x000468, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::K2Node_DynamicCast_AsITEM_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, K2Node_DynamicCast_bSuccess_1) == 0x000470, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, CallFunc_GetWeaponModeDefaults_Mode) == 0x000478, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::CallFunc_GetWeaponModeDefaults_Mode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, CallFunc_GetWeaponMode_Mode) == 0x000578, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::CallFunc_GetWeaponMode_Mode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponMode, K2Node_Select_Default) == 0x000678, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponMode::K2Node_Select_Default' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetWeaponAllowsUserModeSelection
// 0x0250 (0x0250 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     Weapon;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTRUCT_WeaponMode                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0030(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0138(0x0100)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetModeCount_Count;                       // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_WeaponBase_C*                     K2Node_DynamicCast_AsITEM_Weapon_Base;             // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection) == 0x000250, "Wrong size on WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, Result) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, Weapon) == 0x000008, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::Weapon' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, CallFunc_Array_Get_Item) == 0x000020, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, CallFunc_GetDataTableRowFromName_OutRow) == 0x000030, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000130, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000138, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000238, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, CallFunc_GetModeCount_Count) == 0x00023C, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::CallFunc_GetModeCount_Count' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, K2Node_DynamicCast_AsITEM_Weapon_Base) == 0x000240, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::K2Node_DynamicCast_AsITEM_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, K2Node_DynamicCast_bSuccess) == 0x000248, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection, CallFunc_Greater_IntInt_ReturnValue) == 0x000249, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponAllowsUserModeSelection::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetWeaponTextColor
// 0x0018 (0x0018 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_GetWeaponTextColor final
{
public:
	bool                                          IsModified;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 Color;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_GetMeshUIColor_Color;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_GetMeshUIColor_Color_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 K2Node_Select_Default;                             // 0x0014(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_GetWeaponTextColor) == 0x000004, "Wrong alignment on WIDGET_SubDetails_Weapon_C_GetWeaponTextColor");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_GetWeaponTextColor) == 0x000018, "Wrong size on WIDGET_SubDetails_Weapon_C_GetWeaponTextColor");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponTextColor, IsModified) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponTextColor::IsModified' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponTextColor, Color) == 0x000004, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponTextColor::Color' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponTextColor, Temp_bool_Variable) == 0x000008, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponTextColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponTextColor, CallFunc_GetMeshUIColor_Color) == 0x00000C, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponTextColor::CallFunc_GetMeshUIColor_Color' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponTextColor, CallFunc_GetMeshUIColor_Color_1) == 0x000010, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponTextColor::CallFunc_GetMeshUIColor_Color_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponTextColor, K2Node_Select_Default) == 0x000014, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponTextColor::K2Node_Select_Default' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetWeaponDamageLabel
// 0x0080 (0x0080 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel final
{
public:
	class UAttribDamageType*                      DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDetonation;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Result;                                            // 0x0010(0x0018)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0030(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0050(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0018)(ConstParm)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel) == 0x000080, "Wrong size on WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel, DamageType) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel::DamageType' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel, IsDetonation) == 0x000008, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel::IsDetonation' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel, Result) == 0x000010, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel, Temp_bool_Variable) == 0x000028, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000029, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel, CallFunc_MakeLiteralText_ReturnValue) == 0x000030, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000050, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel, K2Node_Select_Default) == 0x000068, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponDamageLabel::K2Node_Select_Default' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetWeaponArmorModifierLabel
// 0x0080 (0x0080 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel final
{
public:
	class UAttribDamageType*                      DamageType;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDetonation;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Result;                                            // 0x0010(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0028(0x0018)()
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x0048(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0068(0x0018)(ConstParm)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel) == 0x000080, "Wrong size on WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel, DamageType) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel::DamageType' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel, IsDetonation) == 0x000008, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel::IsDetonation' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel, Result) == 0x000010, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel, CallFunc_MakeLiteralText_ReturnValue) == 0x000028, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000040, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel, CallFunc_MakeLiteralText_ReturnValue_1) == 0x000048, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel, Temp_bool_Variable) == 0x000061, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel, K2Node_Select_Default) == 0x000068, "Member 'WIDGET_SubDetails_Weapon_C_GetWeaponArmorModifierLabel::K2Node_Select_Default' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.GetAmmoDetails
// 0x0288 (0x0288 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_GetAmmoDetails final
{
public:
	bool                                          ShowAmmo;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CountInClip;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CountInInventory;                                  // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_WeaponDetailsType                        DetailsType;                                       // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     Weapon;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldShowAmmo;                                    // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AmmoInInventory;                                   // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmmoInClip;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     Mode;                                              // 0x0028(0x0100)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory;                   // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_WeaponDetailsType                        CallFunc_GetModeDetailsType_DetailsType;           // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsITEM_Base;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     K2Node_DynamicCast_AsITEM_Weapon_Base;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_WeaponMode                     CallFunc_GetWeaponMode_Mode;                       // 0x0168(0x0100)(HasGetValueTypeHash)
	class UCOMP_Inventory_C*                      CallFunc_GetInventory_Inventory_1;                 // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UITEM_ProjectileWeapon_Base_C*          K2Node_DynamicCast_AsITEM_Projectile_Weapon_Base;  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCount_Result;                      // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAmmoInMagazineAndChamber_Ammo;         // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Weapon_C_GetAmmoDetails");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails) == 0x000288, "Wrong size on WIDGET_SubDetails_Weapon_C_GetAmmoDetails");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, ShowAmmo) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::ShowAmmo' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CountInClip) == 0x000004, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CountInClip' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CountInInventory) == 0x000008, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CountInInventory' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, DetailsType) == 0x00000C, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::DetailsType' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, Weapon) == 0x000010, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::Weapon' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, ShouldShowAmmo) == 0x000018, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::ShouldShowAmmo' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, AmmoInInventory) == 0x00001C, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::AmmoInInventory' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, AmmoInClip) == 0x000020, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::AmmoInClip' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, Mode) == 0x000028, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::Mode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000128, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CallFunc_GetInventory_Inventory) == 0x000130, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000138, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CallFunc_IsValid_ReturnValue) == 0x000139, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CallFunc_BooleanOR_ReturnValue) == 0x00013A, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CallFunc_GetModeDetailsType_DetailsType) == 0x00013B, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CallFunc_GetModeDetailsType_DetailsType' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000140, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, K2Node_ClassDynamicCast_AsITEM_Base) == 0x000148, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::K2Node_ClassDynamicCast_AsITEM_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, K2Node_ClassDynamicCast_bSuccess) == 0x000150, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, K2Node_DynamicCast_AsITEM_Weapon_Base) == 0x000158, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::K2Node_DynamicCast_AsITEM_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, K2Node_DynamicCast_bSuccess) == 0x000160, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CallFunc_GetWeaponMode_Mode) == 0x000168, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CallFunc_GetWeaponMode_Mode' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CallFunc_GetInventory_Inventory_1) == 0x000268, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CallFunc_GetInventory_Inventory_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, K2Node_DynamicCast_AsITEM_Projectile_Weapon_Base) == 0x000270, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::K2Node_DynamicCast_AsITEM_Projectile_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, K2Node_DynamicCast_bSuccess_1) == 0x000278, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CallFunc_GetItemCount_Result) == 0x00027C, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CallFunc_GetItemCount_Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_GetAmmoDetails, CallFunc_GetAmmoInMagazineAndChamber_Ammo) == 0x000280, "Member 'WIDGET_SubDetails_Weapon_C_GetAmmoDetails::CallFunc_GetAmmoInMagazineAndChamber_Ammo' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.InitializeItemDetails
// 0x0048 (0x0048 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_InitializeItemDetails final
{
public:
	class UITEM_Base_C*                           Item_0;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWIDGET_InventoryDetails_C*             InventoryDetails_0;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_WeaponDetailsType                        DetailsType;                                       // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UITEM_WeaponBase_C* Weapon, int32 OldMode, int32 NewMode)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	ENUM_WeaponDetailsType                        CallFunc_GetItemDetailsType_DetailsType;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UITEM_WeaponBase_C*                     K2Node_DynamicCast_AsITEM_Weapon_Base;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UITEM_WeaponBase_C* Weapon, int32 OldMode, int32 NewMode)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_InitializeItemDetails) == 0x000008, "Wrong alignment on WIDGET_SubDetails_Weapon_C_InitializeItemDetails");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_InitializeItemDetails) == 0x000048, "Wrong size on WIDGET_SubDetails_Weapon_C_InitializeItemDetails");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_InitializeItemDetails, Item_0) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_InitializeItemDetails::Item_0' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_InitializeItemDetails, InventoryDetails_0) == 0x000008, "Member 'WIDGET_SubDetails_Weapon_C_InitializeItemDetails::InventoryDetails_0' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_InitializeItemDetails, Result) == 0x000010, "Member 'WIDGET_SubDetails_Weapon_C_InitializeItemDetails::Result' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_InitializeItemDetails, DetailsType) == 0x000011, "Member 'WIDGET_SubDetails_Weapon_C_InitializeItemDetails::DetailsType' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_InitializeItemDetails, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'WIDGET_SubDetails_Weapon_C_InitializeItemDetails::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_InitializeItemDetails, CallFunc_GetItemDetailsType_DetailsType) == 0x000024, "Member 'WIDGET_SubDetails_Weapon_C_InitializeItemDetails::CallFunc_GetItemDetailsType_DetailsType' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_InitializeItemDetails, K2Node_DynamicCast_AsITEM_Weapon_Base) == 0x000028, "Member 'WIDGET_SubDetails_Weapon_C_InitializeItemDetails::K2Node_DynamicCast_AsITEM_Weapon_Base' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_InitializeItemDetails, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WIDGET_SubDetails_Weapon_C_InitializeItemDetails::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_InitializeItemDetails, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'WIDGET_SubDetails_Weapon_C_InitializeItemDetails::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.ShowExtendedDetails
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_ShowExtendedDetails final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_ShowExtendedDetails) == 0x000001, "Wrong alignment on WIDGET_SubDetails_Weapon_C_ShowExtendedDetails");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_ShowExtendedDetails) == 0x000001, "Wrong size on WIDGET_SubDetails_Weapon_C_ShowExtendedDetails");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_ShowExtendedDetails, Show) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_ShowExtendedDetails::Show' has a wrong offset!");

// Function WIDGET_SubDetails_Weapon.WIDGET_SubDetails_Weapon_C.ShowBars
// 0x0001 (0x0001 - 0x0000)
struct WIDGET_SubDetails_Weapon_C_ShowBars final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WIDGET_SubDetails_Weapon_C_ShowBars) == 0x000001, "Wrong alignment on WIDGET_SubDetails_Weapon_C_ShowBars");
static_assert(sizeof(WIDGET_SubDetails_Weapon_C_ShowBars) == 0x000001, "Wrong size on WIDGET_SubDetails_Weapon_C_ShowBars");
static_assert(offsetof(WIDGET_SubDetails_Weapon_C_ShowBars, Show) == 0x000000, "Member 'WIDGET_SubDetails_Weapon_C_ShowBars::Show' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CON_CyberEnemy

#include "Basic.hpp"


namespace SDK::Params
{

// Function CON_CyberEnemy.CON_CyberEnemy_C.ExecuteUbergraph_CON_CyberEnemy
// 0x0028 (0x0028 - 0x0000)
struct CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RunBehaviorTree_ReturnValue_1;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_CyberEnemy_C*                     K2Node_DynamicCast_AsPAWN_Cyber_Enemy;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy) == 0x000008, "Wrong alignment on CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy");
static_assert(sizeof(CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy) == 0x000028, "Wrong size on CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy");
static_assert(offsetof(CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy, EntryPoint) == 0x000000, "Member 'CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy::EntryPoint' has a wrong offset!");
static_assert(offsetof(CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy, CallFunc_RunBehaviorTree_ReturnValue) == 0x000004, "Member 'CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy::CallFunc_RunBehaviorTree_ReturnValue' has a wrong offset!");
static_assert(offsetof(CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy, K2Node_Event_PossessedPawn) == 0x000008, "Member 'CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy, CallFunc_RunBehaviorTree_ReturnValue_1) == 0x000010, "Member 'CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy::CallFunc_RunBehaviorTree_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy, K2Node_DynamicCast_AsPAWN_Cyber_Enemy) == 0x000018, "Member 'CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy::K2Node_DynamicCast_AsPAWN_Cyber_Enemy' has a wrong offset!");
static_assert(offsetof(CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'CON_CyberEnemy_C_ExecuteUbergraph_CON_CyberEnemy::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function CON_CyberEnemy.CON_CyberEnemy_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct CON_CyberEnemy_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CON_CyberEnemy_C_ReceivePossess) == 0x000008, "Wrong alignment on CON_CyberEnemy_C_ReceivePossess");
static_assert(sizeof(CON_CyberEnemy_C_ReceivePossess) == 0x000008, "Wrong size on CON_CyberEnemy_C_ReceivePossess");
static_assert(offsetof(CON_CyberEnemy_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'CON_CyberEnemy_C_ReceivePossess::PossessedPawn' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_Pulser_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ITEM_CyberWeapon_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ITEM_Pulser_Base.ITEM_Pulser_Base_C
// 0x0010 (0x0218 - 0x0208)
class UITEM_Pulser_Base_C final : public UITEM_CyberWeapon_Base_C
{
public:
	bool                                          ProjectileSign;                                    // 0x0204(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ProjectileFireRate;                                // 0x0208(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TIMER_TryRepeatFire;                               // 0x0210(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void EVENT_FireProjectile();
	void Activate(class APAWN_SystemShockCharacter_C* Character, bool* Result);
	void Deactivate(bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ITEM_Pulser_Base_C">();
	}
	static class UITEM_Pulser_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UITEM_Pulser_Base_C>();
	}
};
static_assert(alignof(UITEM_Pulser_Base_C) == 0x000008, "Wrong alignment on UITEM_Pulser_Base_C");
static_assert(sizeof(UITEM_Pulser_Base_C) == 0x000218, "Wrong size on UITEM_Pulser_Base_C");
static_assert(offsetof(UITEM_Pulser_Base_C, ProjectileSign) == 0x000204, "Member 'UITEM_Pulser_Base_C::ProjectileSign' has a wrong offset!");
static_assert(offsetof(UITEM_Pulser_Base_C, ProjectileFireRate) == 0x000208, "Member 'UITEM_Pulser_Base_C::ProjectileFireRate' has a wrong offset!");
static_assert(offsetof(UITEM_Pulser_Base_C, TIMER_TryRepeatFire) == 0x000210, "Member 'UITEM_Pulser_Base_C::TIMER_TryRepeatFire' has a wrong offset!");

}


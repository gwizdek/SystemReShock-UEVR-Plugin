#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PROP_Med_SmallWallLight

#include "Basic.hpp"

#include "PROP_Med_SmallWallLight_classes.hpp"
#include "PROP_Med_SmallWallLight_parameters.hpp"


namespace SDK
{

// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.ExecuteUbergraph_PROP_Med_SmallWallLight
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APROP_Med_SmallWallLight_C::ExecuteUbergraph_PROP_Med_SmallWallLight(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "ExecuteUbergraph_PROP_Med_SmallWallLight");

	Params::PROP_Med_SmallWallLight_C_ExecuteUbergraph_PROP_Med_SmallWallLight Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.StopFlashing
// (BlueprintCallable, BlueprintEvent)

void APROP_Med_SmallWallLight_C::StopFlashing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "StopFlashing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.BndEvt__PROP_Med_SmallWallLight_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    bVisibleState                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APROP_Med_SmallWallLight_C::BndEvt__PROP_Med_SmallWallLight_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature(bool bVisibleState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "BndEvt__PROP_Med_SmallWallLight_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");

	Params::PROP_Med_SmallWallLight_C_BndEvt__PROP_Med_SmallWallLight_COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature Parms{};

	Parms.bVisibleState = bVisibleState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.StartFlashing
// (BlueprintCallable, BlueprintEvent)

void APROP_Med_SmallWallLight_C::StartFlashing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "StartFlashing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void APROP_Med_SmallWallLight_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.LightFlash__UpdateFunc
// (BlueprintEvent)

void APROP_Med_SmallWallLight_C::LightFlash__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "LightFlash__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.LightFlash__FinishedFunc
// (BlueprintEvent)

void APROP_Med_SmallWallLight_C::LightFlash__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "LightFlash__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void APROP_Med_SmallWallLight_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.InitializeWallLight
// (Public, BlueprintCallable, BlueprintEvent)

void APROP_Med_SmallWallLight_C::InitializeWallLight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "InitializeWallLight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.UpdateWallLightVisibility
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    VisibilityState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APROP_Med_SmallWallLight_C::UpdateWallLightVisibility(bool VisibilityState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "UpdateWallLightVisibility");

	Params::PROP_Med_SmallWallLight_C_UpdateWallLightVisibility Parms{};

	Parms.VisibilityState = VisibilityState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.EVENT_OnDisableAttribChanged
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LastValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void APROP_Med_SmallWallLight_C::EVENT_OnDisableAttribChanged(float CurrValue, float LastValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "EVENT_OnDisableAttribChanged");

	Params::PROP_Med_SmallWallLight_C_EVENT_OnDisableAttribChanged Parms{};

	Parms.CurrValue = CurrValue;
	Parms.LastValue = LastValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.UpdateEmissiveStrength
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFunctional                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APROP_Med_SmallWallLight_C::UpdateEmissiveStrength(float Scale, bool IsFunctional)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "UpdateEmissiveStrength");

	Params::PROP_Med_SmallWallLight_C_UpdateEmissiveStrength Parms{};

	Parms.Scale = Scale;
	Parms.IsFunctional = IsFunctional;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.TryStartBlinkTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FromVisStateChange                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APROP_Med_SmallWallLight_C::TryStartBlinkTimer(bool FromVisStateChange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "TryStartBlinkTimer");

	Params::PROP_Med_SmallWallLight_C_TryStartBlinkTimer Parms{};

	Parms.FromVisStateChange = FromVisStateChange;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PROP_Med_SmallWallLight.PROP_Med_SmallWallLight_C.IsWallLightFunctional
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void APROP_Med_SmallWallLight_C::IsWallLightFunctional(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PROP_Med_SmallWallLight_C", "IsWallLightFunctional");

	Params::PROP_Med_SmallWallLight_C_IsWallLightFunctional Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_PerformActionBase

#include "Basic.hpp"

#include "TASK_PerformActionBase_classes.hpp"
#include "TASK_PerformActionBase_parameters.hpp"


namespace SDK
{

// Function TASK_PerformActionBase.TASK_PerformActionBase_C.ExecuteUbergraph_TASK_PerformActionBase
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_PerformActionBase_C::ExecuteUbergraph_TASK_PerformActionBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_PerformActionBase_C", "ExecuteUbergraph_TASK_PerformActionBase");

	Params::TASK_PerformActionBase_C_ExecuteUbergraph_TASK_PerformActionBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_PerformActionBase.TASK_PerformActionBase_C.EVENT_OnActionEnded
// (BlueprintCallable, BlueprintEvent)

void UTASK_PerformActionBase_C::EVENT_OnActionEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_PerformActionBase_C", "EVENT_OnActionEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TASK_PerformActionBase.TASK_PerformActionBase_C.TrySetIdleOverride
// (BlueprintCallable, BlueprintEvent)

void UTASK_PerformActionBase_C::TrySetIdleOverride()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_PerformActionBase_C", "TrySetIdleOverride");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TASK_PerformActionBase.TASK_PerformActionBase_C.ReceiveTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_PerformActionBase_C::ReceiveTick(class AActor* OwnerActor, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_PerformActionBase_C", "ReceiveTick");

	Params::TASK_PerformActionBase_C_ReceiveTick Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_PerformActionBase.TASK_PerformActionBase_C.CleanUpEvents
// (BlueprintCallable, BlueprintEvent)

void UTASK_PerformActionBase_C::CleanUpEvents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_PerformActionBase_C", "CleanUpEvents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TASK_PerformActionBase.TASK_PerformActionBase_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_PerformActionBase_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_PerformActionBase_C", "ReceiveExecuteAI");

	Params::TASK_PerformActionBase_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_PerformActionBase.TASK_PerformActionBase_C.ChooseActionMontage
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimMontage*                     Montage                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_PerformActionBase_C::ChooseActionMontage(class UAnimMontage** Montage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_PerformActionBase_C", "ChooseActionMontage");

	Params::TASK_PerformActionBase_C_ChooseActionMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Montage != nullptr)
		*Montage = Parms.Montage;
}


// Function TASK_PerformActionBase.TASK_PerformActionBase_C.StartAction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UCharacterAction_C*               Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_PerformActionBase_C::StartAction(bool* Success, class UCharacterAction_C** Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_PerformActionBase_C", "StartAction");

	Params::TASK_PerformActionBase_C_StartAction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


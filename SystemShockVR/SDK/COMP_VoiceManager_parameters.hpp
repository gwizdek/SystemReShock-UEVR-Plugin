#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: COMP_VoiceManager

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "ENUM_ActionPriority_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STRUCT_VocalizationTypes_structs.hpp"
#include "ENUM_DetectionState_structs.hpp"
#include "ENUM_EnemyBark_structs.hpp"
#include "ENUM_EnemyChant_structs.hpp"


namespace SDK::Params
{

// Function COMP_VoiceManager.COMP_VoiceManager_C.ExecuteUbergraph_COMP_VoiceManager
// 0x0068 (0x0068 - 0x0000)
struct COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              K2Node_DynamicCast_AsSound_Cue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               K2Node_CustomEvent_SoundCue;                       // 0x0038(0x0028)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_AsChant;                        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager");
static_assert(sizeof(COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager) == 0x000068, "Wrong size on COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager");
static_assert(offsetof(COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager, EntryPoint) == 0x000000, "Member 'COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager, K2Node_CustomEvent_Loaded) == 0x000008, "Member 'COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager, Temp_object_Variable) == 0x000020, "Member 'COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager, K2Node_DynamicCast_AsSound_Cue) == 0x000028, "Member 'COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager::K2Node_DynamicCast_AsSound_Cue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager, K2Node_CustomEvent_SoundCue) == 0x000038, "Member 'COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager::K2Node_CustomEvent_SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager, K2Node_CustomEvent_AsChant) == 0x000060, "Member 'COMP_VoiceManager_C_ExecuteUbergraph_COMP_VoiceManager::K2Node_CustomEvent_AsChant' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.AsyncPlayVocalCue
// 0x0030 (0x0030 - 0x0000)
struct COMP_VoiceManager_C_AsyncPlayVocalCue final
{
public:
	TSoftObjectPtr<class USoundCue>               SoundCue;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          AsChant;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_AsyncPlayVocalCue) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_AsyncPlayVocalCue");
static_assert(sizeof(COMP_VoiceManager_C_AsyncPlayVocalCue) == 0x000030, "Wrong size on COMP_VoiceManager_C_AsyncPlayVocalCue");
static_assert(offsetof(COMP_VoiceManager_C_AsyncPlayVocalCue, SoundCue) == 0x000000, "Member 'COMP_VoiceManager_C_AsyncPlayVocalCue::SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_AsyncPlayVocalCue, AsChant) == 0x000028, "Member 'COMP_VoiceManager_C_AsyncPlayVocalCue::AsChant' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.OnLoaded_9505B12B47A71F6AD1B44B96904D28D3
// 0x0008 (0x0008 - 0x0000)
struct COMP_VoiceManager_C_OnLoaded_9505B12B47A71F6AD1B44B96904D28D3 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_VoiceManager_C_OnLoaded_9505B12B47A71F6AD1B44B96904D28D3) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_OnLoaded_9505B12B47A71F6AD1B44B96904D28D3");
static_assert(sizeof(COMP_VoiceManager_C_OnLoaded_9505B12B47A71F6AD1B44B96904D28D3) == 0x000008, "Wrong size on COMP_VoiceManager_C_OnLoaded_9505B12B47A71F6AD1B44B96904D28D3");
static_assert(offsetof(COMP_VoiceManager_C_OnLoaded_9505B12B47A71F6AD1B44B96904D28D3, Loaded) == 0x000000, "Member 'COMP_VoiceManager_C_OnLoaded_9505B12B47A71F6AD1B44B96904D28D3::Loaded' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.IsBarking
// 0x0004 (0x0004 - 0x0000)
struct COMP_VoiceManager_C_IsBarking final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_IsBarking) == 0x000001, "Wrong alignment on COMP_VoiceManager_C_IsBarking");
static_assert(sizeof(COMP_VoiceManager_C_IsBarking) == 0x000004, "Wrong size on COMP_VoiceManager_C_IsBarking");
static_assert(offsetof(COMP_VoiceManager_C_IsBarking, Result) == 0x000000, "Member 'COMP_VoiceManager_C_IsBarking::Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_IsBarking, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000001, "Member 'COMP_VoiceManager_C_IsBarking::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_IsBarking, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000002, "Member 'COMP_VoiceManager_C_IsBarking::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_IsBarking, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'COMP_VoiceManager_C_IsBarking::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.GetBarkSoundCue
// 0x04F0 (0x04F0 - 0x0000)
struct COMP_VoiceManager_C_GetBarkSoundCue final
{
public:
	ENUM_EnemyBark                                BarkType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               SoundCue;                                          // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_VocalizationTypes              VocalizationData;                                  // 0x0030(0x0258)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_VocalizationTypes              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0290(0x0258)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_GetBarkSoundCue) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_GetBarkSoundCue");
static_assert(sizeof(COMP_VoiceManager_C_GetBarkSoundCue) == 0x0004F0, "Wrong size on COMP_VoiceManager_C_GetBarkSoundCue");
static_assert(offsetof(COMP_VoiceManager_C_GetBarkSoundCue, BarkType) == 0x000000, "Member 'COMP_VoiceManager_C_GetBarkSoundCue::BarkType' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetBarkSoundCue, SoundCue) == 0x000008, "Member 'COMP_VoiceManager_C_GetBarkSoundCue::SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetBarkSoundCue, VocalizationData) == 0x000030, "Member 'COMP_VoiceManager_C_GetBarkSoundCue::VocalizationData' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetBarkSoundCue, K2Node_SwitchEnum_CmpSuccess) == 0x000288, "Member 'COMP_VoiceManager_C_GetBarkSoundCue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetBarkSoundCue, CallFunc_GetDataTableRowFromName_OutRow) == 0x000290, "Member 'COMP_VoiceManager_C_GetBarkSoundCue::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetBarkSoundCue, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0004E8, "Member 'COMP_VoiceManager_C_GetBarkSoundCue::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.CanOverridePriority
// 0x0005 (0x0005 - 0x0000)
struct COMP_VoiceManager_C_CanOverridePriority final
{
public:
	ENUM_ActionPriority                           NewPriority;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ActionPriority                           OldPriority;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_EnemyBark                                HighestPriorityBarkState;                          // 0x0003(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_ByteByte_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_CanOverridePriority) == 0x000001, "Wrong alignment on COMP_VoiceManager_C_CanOverridePriority");
static_assert(sizeof(COMP_VoiceManager_C_CanOverridePriority) == 0x000005, "Wrong size on COMP_VoiceManager_C_CanOverridePriority");
static_assert(offsetof(COMP_VoiceManager_C_CanOverridePriority, NewPriority) == 0x000000, "Member 'COMP_VoiceManager_C_CanOverridePriority::NewPriority' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_CanOverridePriority, OldPriority) == 0x000001, "Member 'COMP_VoiceManager_C_CanOverridePriority::OldPriority' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_CanOverridePriority, Result) == 0x000002, "Member 'COMP_VoiceManager_C_CanOverridePriority::Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_CanOverridePriority, HighestPriorityBarkState) == 0x000003, "Member 'COMP_VoiceManager_C_CanOverridePriority::HighestPriorityBarkState' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_CanOverridePriority, CallFunc_GreaterEqual_ByteByte_ReturnValue) == 0x000004, "Member 'COMP_VoiceManager_C_CanOverridePriority::CallFunc_GreaterEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.TryPlayBarkInternal
// 0x0080 (0x0080 - 0x0000)
struct COMP_VoiceManager_C_TryPlayBarkInternal final
{
public:
	TSoftObjectPtr<class USoundCue>               NewBarkCue;                                        // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	ENUM_ActionPriority                           NewPriority;                                       // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               BarkSoundCue;                                      // 0x0030(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          OwnerPawn;                                         // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanOverridePriority_Result;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanOverridePriority_Result_1;             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_VoxelAudio_C*                     CallFunc_GetAudioComponentByLocationType_Result;   // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChanting_Result;                        // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBarking_Result;                         // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_EnemyPawn;                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_VoiceManager_C_TryPlayBarkInternal) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_TryPlayBarkInternal");
static_assert(sizeof(COMP_VoiceManager_C_TryPlayBarkInternal) == 0x000080, "Wrong size on COMP_VoiceManager_C_TryPlayBarkInternal");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, NewBarkCue) == 0x000000, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::NewBarkCue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, NewPriority) == 0x000028, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::NewPriority' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, BarkSoundCue) == 0x000030, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::BarkSoundCue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, OwnerPawn) == 0x000058, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::OwnerPawn' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000060, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000061, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, CallFunc_CanOverridePriority_Result) == 0x000062, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::CallFunc_CanOverridePriority_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000063, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, CallFunc_CanOverridePriority_Result_1) == 0x000064, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::CallFunc_CanOverridePriority_Result_1' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, CallFunc_GetAudioComponentByLocationType_Result) == 0x000068, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::CallFunc_GetAudioComponentByLocationType_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, CallFunc_BooleanAND_ReturnValue) == 0x000071, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, CallFunc_BooleanOR_ReturnValue) == 0x000072, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, CallFunc_IsChanting_Result) == 0x000073, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::CallFunc_IsChanting_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, CallFunc_IsBarking_Result) == 0x000074, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::CallFunc_IsBarking_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkInternal, CallFunc_GetOwnerPawn_EnemyPawn) == 0x000078, "Member 'COMP_VoiceManager_C_TryPlayBarkInternal::CallFunc_GetOwnerPawn_EnemyPawn' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.IsChanting
// 0x0002 (0x0002 - 0x0000)
struct COMP_VoiceManager_C_IsChanting final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_IsChanting) == 0x000001, "Wrong alignment on COMP_VoiceManager_C_IsChanting");
static_assert(sizeof(COMP_VoiceManager_C_IsChanting) == 0x000002, "Wrong size on COMP_VoiceManager_C_IsChanting");
static_assert(offsetof(COMP_VoiceManager_C_IsChanting, Result) == 0x000000, "Member 'COMP_VoiceManager_C_IsChanting::Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_IsChanting, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'COMP_VoiceManager_C_IsChanting::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.GetChantSoundCue
// 0x04F0 (0x04F0 - 0x0000)
struct COMP_VoiceManager_C_GetChantSoundCue final
{
public:
	ENUM_EnemyChant                               ChantType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               SoundCue;                                          // 0x0008(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	struct FSTRUCT_VocalizationTypes              VocalizationData;                                  // 0x0030(0x0258)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_VocalizationTypes              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0290(0x0258)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_GetChantSoundCue) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_GetChantSoundCue");
static_assert(sizeof(COMP_VoiceManager_C_GetChantSoundCue) == 0x0004F0, "Wrong size on COMP_VoiceManager_C_GetChantSoundCue");
static_assert(offsetof(COMP_VoiceManager_C_GetChantSoundCue, ChantType) == 0x000000, "Member 'COMP_VoiceManager_C_GetChantSoundCue::ChantType' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetChantSoundCue, SoundCue) == 0x000008, "Member 'COMP_VoiceManager_C_GetChantSoundCue::SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetChantSoundCue, VocalizationData) == 0x000030, "Member 'COMP_VoiceManager_C_GetChantSoundCue::VocalizationData' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetChantSoundCue, K2Node_SwitchEnum_CmpSuccess) == 0x000288, "Member 'COMP_VoiceManager_C_GetChantSoundCue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetChantSoundCue, CallFunc_GetDataTableRowFromName_OutRow) == 0x000290, "Member 'COMP_VoiceManager_C_GetChantSoundCue::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetChantSoundCue, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0004E8, "Member 'COMP_VoiceManager_C_GetChantSoundCue::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.TryPlayChant
// 0x00D8 (0x00D8 - 0x0000)
struct COMP_VoiceManager_C_TryPlayChant final
{
public:
	ENUM_EnemyChant                               NewChant;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               NewChantQueue;                                     // 0x0008(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               OldChantQueue;                                     // 0x0030(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          OwnerPawn;                                         // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_SoftObjectReference_ReturnValue; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               CallFunc_GetChantSoundCue_SoundCue;                // 0x0068(0x0028)(HasGetValueTypeHash)
	TSoftObjectPtr<class USoundCue>               CallFunc_GetChantSoundCue_SoundCue_1;              // 0x0090(0x0028)(HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     CallFunc_GetAudioComponentByLocationType_Result;   // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChanting_Result;                        // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBarking_Result;                         // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_EnemyPawn;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_TryPlayChant) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_TryPlayChant");
static_assert(sizeof(COMP_VoiceManager_C_TryPlayChant) == 0x0000D8, "Wrong size on COMP_VoiceManager_C_TryPlayChant");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, NewChant) == 0x000000, "Member 'COMP_VoiceManager_C_TryPlayChant::NewChant' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, NewChantQueue) == 0x000008, "Member 'COMP_VoiceManager_C_TryPlayChant::NewChantQueue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, OldChantQueue) == 0x000030, "Member 'COMP_VoiceManager_C_TryPlayChant::OldChantQueue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, OwnerPawn) == 0x000058, "Member 'COMP_VoiceManager_C_TryPlayChant::OwnerPawn' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, CallFunc_NotEqual_SoftObjectReference_ReturnValue) == 0x000060, "Member 'COMP_VoiceManager_C_TryPlayChant::CallFunc_NotEqual_SoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, CallFunc_GetChantSoundCue_SoundCue) == 0x000068, "Member 'COMP_VoiceManager_C_TryPlayChant::CallFunc_GetChantSoundCue_SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, CallFunc_GetChantSoundCue_SoundCue_1) == 0x000090, "Member 'COMP_VoiceManager_C_TryPlayChant::CallFunc_GetChantSoundCue_SoundCue_1' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, CallFunc_GetAudioComponentByLocationType_Result) == 0x0000B8, "Member 'COMP_VoiceManager_C_TryPlayChant::CallFunc_GetAudioComponentByLocationType_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'COMP_VoiceManager_C_TryPlayChant::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, CallFunc_IsChanting_Result) == 0x0000C1, "Member 'COMP_VoiceManager_C_TryPlayChant::CallFunc_IsChanting_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, CallFunc_BooleanAND_ReturnValue) == 0x0000C2, "Member 'COMP_VoiceManager_C_TryPlayChant::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, CallFunc_IsBarking_Result) == 0x0000C3, "Member 'COMP_VoiceManager_C_TryPlayChant::CallFunc_IsBarking_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, CallFunc_Not_PreBool_ReturnValue) == 0x0000C4, "Member 'COMP_VoiceManager_C_TryPlayChant::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, CallFunc_GetOwnerPawn_EnemyPawn) == 0x0000C8, "Member 'COMP_VoiceManager_C_TryPlayChant::CallFunc_GetOwnerPawn_EnemyPawn' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayChant, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000D0, "Member 'COMP_VoiceManager_C_TryPlayChant::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.TryFadeOutChant
// 0x0030 (0x0030 - 0x0000)
struct COMP_VoiceManager_C_TryFadeOutChant final
{
public:
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_EnemyPawn;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     CallFunc_GetAudioComponentByLocationType_Result;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChanting_Result;                        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_VoiceManager_C_TryFadeOutChant) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_TryFadeOutChant");
static_assert(sizeof(COMP_VoiceManager_C_TryFadeOutChant) == 0x000030, "Wrong size on COMP_VoiceManager_C_TryFadeOutChant");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutChant, CallFunc_GetOwnerPawn_EnemyPawn) == 0x000000, "Member 'COMP_VoiceManager_C_TryFadeOutChant::CallFunc_GetOwnerPawn_EnemyPawn' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutChant, CallFunc_GetAudioComponentByLocationType_Result) == 0x000008, "Member 'COMP_VoiceManager_C_TryFadeOutChant::CallFunc_GetAudioComponentByLocationType_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutChant, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000010, "Member 'COMP_VoiceManager_C_TryFadeOutChant::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutChant, CallFunc_IsChanting_Result) == 0x000011, "Member 'COMP_VoiceManager_C_TryFadeOutChant::CallFunc_IsChanting_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutChant, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'COMP_VoiceManager_C_TryFadeOutChant::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutChant, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'COMP_VoiceManager_C_TryFadeOutChant::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutChant, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'COMP_VoiceManager_C_TryFadeOutChant::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.InitializeVoiceManager
// 0x0050 (0x0050 - 0x0000)
struct COMP_VoiceManager_C_InitializeVoiceManager final
{
public:
	class APAWN_Enemy_C*                          Pawn;                                              // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_EnemyDetection_C*                 DetectionComponent;                                // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APAWN_SystemShockCharacter_C* Character)> K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APAWN_SystemShockCharacter_C* Character, const struct FVector& EventLocation, ENUM_DetectionState NewState, ENUM_DetectionState OldState)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_EnemyPawn;                   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_VoiceManager_C_InitializeVoiceManager) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_InitializeVoiceManager");
static_assert(sizeof(COMP_VoiceManager_C_InitializeVoiceManager) == 0x000050, "Wrong size on COMP_VoiceManager_C_InitializeVoiceManager");
static_assert(offsetof(COMP_VoiceManager_C_InitializeVoiceManager, Pawn) == 0x000000, "Member 'COMP_VoiceManager_C_InitializeVoiceManager::Pawn' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_InitializeVoiceManager, DetectionComponent) == 0x000008, "Member 'COMP_VoiceManager_C_InitializeVoiceManager::DetectionComponent' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_InitializeVoiceManager, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'COMP_VoiceManager_C_InitializeVoiceManager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_InitializeVoiceManager, K2Node_DynamicCast_AsGI_Single_Player) == 0x000018, "Member 'COMP_VoiceManager_C_InitializeVoiceManager::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_InitializeVoiceManager, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'COMP_VoiceManager_C_InitializeVoiceManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_InitializeVoiceManager, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'COMP_VoiceManager_C_InitializeVoiceManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_InitializeVoiceManager, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'COMP_VoiceManager_C_InitializeVoiceManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_InitializeVoiceManager, CallFunc_Not_PreBool_ReturnValue) == 0x000035, "Member 'COMP_VoiceManager_C_InitializeVoiceManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_InitializeVoiceManager, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'COMP_VoiceManager_C_InitializeVoiceManager::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_InitializeVoiceManager, CallFunc_GetOwnerPawn_EnemyPawn) == 0x000048, "Member 'COMP_VoiceManager_C_InitializeVoiceManager::CallFunc_GetOwnerPawn_EnemyPawn' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.OnPlayerDetectionStateChanged
// 0x0020 (0x0020 - 0x0000)
struct COMP_VoiceManager_C_OnPlayerDetectionStateChanged final
{
public:
	ENUM_DetectionState                           NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DetectionState                           OldState;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_VoiceManager_C*                   VoiceManager;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_EnemyPawn;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_VoiceManager_C_OnPlayerDetectionStateChanged) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_OnPlayerDetectionStateChanged");
static_assert(sizeof(COMP_VoiceManager_C_OnPlayerDetectionStateChanged) == 0x000020, "Wrong size on COMP_VoiceManager_C_OnPlayerDetectionStateChanged");
static_assert(offsetof(COMP_VoiceManager_C_OnPlayerDetectionStateChanged, NewState) == 0x000000, "Member 'COMP_VoiceManager_C_OnPlayerDetectionStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_OnPlayerDetectionStateChanged, OldState) == 0x000001, "Member 'COMP_VoiceManager_C_OnPlayerDetectionStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_OnPlayerDetectionStateChanged, VoiceManager) == 0x000008, "Member 'COMP_VoiceManager_C_OnPlayerDetectionStateChanged::VoiceManager' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_OnPlayerDetectionStateChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'COMP_VoiceManager_C_OnPlayerDetectionStateChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_OnPlayerDetectionStateChanged, K2Node_SwitchEnum_CmpSuccess_1) == 0x000011, "Member 'COMP_VoiceManager_C_OnPlayerDetectionStateChanged::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_OnPlayerDetectionStateChanged, K2Node_SwitchEnum_CmpSuccess_2) == 0x000012, "Member 'COMP_VoiceManager_C_OnPlayerDetectionStateChanged::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_OnPlayerDetectionStateChanged, K2Node_SwitchEnum_CmpSuccess_3) == 0x000013, "Member 'COMP_VoiceManager_C_OnPlayerDetectionStateChanged::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_OnPlayerDetectionStateChanged, K2Node_SwitchEnum_CmpSuccess_4) == 0x000014, "Member 'COMP_VoiceManager_C_OnPlayerDetectionStateChanged::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_OnPlayerDetectionStateChanged, CallFunc_GetOwnerPawn_EnemyPawn) == 0x000018, "Member 'COMP_VoiceManager_C_OnPlayerDetectionStateChanged::CallFunc_GetOwnerPawn_EnemyPawn' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.PlayVocalCueImmediately
// 0x0050 (0x0050 - 0x0000)
struct COMP_VoiceManager_C_PlayVocalCueImmediately final
{
public:
	class USoundCue*                              SoundCue;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AsChant;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCOMP_VoxelAudio_C*                     AudioComponent;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          Pawn;                                              // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_EnemyPawn;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     CallFunc_GetAudioComponentByLocationType_Result;   // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_VoiceManager_C_PlayVocalCueImmediately) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_PlayVocalCueImmediately");
static_assert(sizeof(COMP_VoiceManager_C_PlayVocalCueImmediately) == 0x000050, "Wrong size on COMP_VoiceManager_C_PlayVocalCueImmediately");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCueImmediately, SoundCue) == 0x000000, "Member 'COMP_VoiceManager_C_PlayVocalCueImmediately::SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCueImmediately, AsChant) == 0x000008, "Member 'COMP_VoiceManager_C_PlayVocalCueImmediately::AsChant' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCueImmediately, AudioComponent) == 0x000010, "Member 'COMP_VoiceManager_C_PlayVocalCueImmediately::AudioComponent' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCueImmediately, Pawn) == 0x000018, "Member 'COMP_VoiceManager_C_PlayVocalCueImmediately::Pawn' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCueImmediately, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'COMP_VoiceManager_C_PlayVocalCueImmediately::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCueImmediately, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'COMP_VoiceManager_C_PlayVocalCueImmediately::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCueImmediately, CallFunc_IsValid_ReturnValue_1) == 0x000022, "Member 'COMP_VoiceManager_C_PlayVocalCueImmediately::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCueImmediately, CallFunc_GetOwnerPawn_EnemyPawn) == 0x000028, "Member 'COMP_VoiceManager_C_PlayVocalCueImmediately::CallFunc_GetOwnerPawn_EnemyPawn' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCueImmediately, CallFunc_GetAudioComponentByLocationType_Result) == 0x000030, "Member 'COMP_VoiceManager_C_PlayVocalCueImmediately::CallFunc_GetAudioComponentByLocationType_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCueImmediately, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'COMP_VoiceManager_C_PlayVocalCueImmediately::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCueImmediately, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000048, "Member 'COMP_VoiceManager_C_PlayVocalCueImmediately::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.PlayVocalCue
// 0x0050 (0x0050 - 0x0000)
struct COMP_VoiceManager_C_PlayVocalCue final
{
public:
	TSoftObjectPtr<class USoundCue>               SoundCue;                                          // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          AsChant;                                           // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundCue*                              LoadedSoundCue;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          Pawn;                                              // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     AudioComponent;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_PlayVocalCue) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_PlayVocalCue");
static_assert(sizeof(COMP_VoiceManager_C_PlayVocalCue) == 0x000050, "Wrong size on COMP_VoiceManager_C_PlayVocalCue");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCue, SoundCue) == 0x000000, "Member 'COMP_VoiceManager_C_PlayVocalCue::SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCue, AsChant) == 0x000028, "Member 'COMP_VoiceManager_C_PlayVocalCue::AsChant' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCue, LoadedSoundCue) == 0x000030, "Member 'COMP_VoiceManager_C_PlayVocalCue::LoadedSoundCue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCue, Pawn) == 0x000038, "Member 'COMP_VoiceManager_C_PlayVocalCue::Pawn' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCue, AudioComponent) == 0x000040, "Member 'COMP_VoiceManager_C_PlayVocalCue::AudioComponent' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_PlayVocalCue, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000048, "Member 'COMP_VoiceManager_C_PlayVocalCue::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.EVENT_OnPawnDied
// 0x0040 (0x0040 - 0x0000)
struct COMP_VoiceManager_C_EVENT_OnPawnDied final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          Pawn;                                              // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class APAWN_SystemShockCharacter_C* Character, const struct FVector& EventLocation, ENUM_DetectionState NewState, ENUM_DetectionState OldState)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class APAWN_SystemShockCharacter_C* Character)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_EVENT_OnPawnDied) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_EVENT_OnPawnDied");
static_assert(sizeof(COMP_VoiceManager_C_EVENT_OnPawnDied) == 0x000040, "Wrong size on COMP_VoiceManager_C_EVENT_OnPawnDied");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnPawnDied, Character) == 0x000000, "Member 'COMP_VoiceManager_C_EVENT_OnPawnDied::Character' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnPawnDied, Pawn) == 0x000008, "Member 'COMP_VoiceManager_C_EVENT_OnPawnDied::Pawn' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnPawnDied, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'COMP_VoiceManager_C_EVENT_OnPawnDied::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnPawnDied, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000020, "Member 'COMP_VoiceManager_C_EVENT_OnPawnDied::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnPawnDied, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'COMP_VoiceManager_C_EVENT_OnPawnDied::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnPawnDied, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'COMP_VoiceManager_C_EVENT_OnPawnDied::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.EVENT_OnFinishedVocalCue
// 0x0038 (0x0038 - 0x0000)
struct COMP_VoiceManager_C_EVENT_OnFinishedVocalCue final
{
public:
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               CallFunc_GetChantSoundCue_SoundCue;                // 0x0008(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_EVENT_OnFinishedVocalCue) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_EVENT_OnFinishedVocalCue");
static_assert(sizeof(COMP_VoiceManager_C_EVENT_OnFinishedVocalCue) == 0x000038, "Wrong size on COMP_VoiceManager_C_EVENT_OnFinishedVocalCue");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnFinishedVocalCue, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000000, "Member 'COMP_VoiceManager_C_EVENT_OnFinishedVocalCue::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnFinishedVocalCue, CallFunc_GetChantSoundCue_SoundCue) == 0x000008, "Member 'COMP_VoiceManager_C_EVENT_OnFinishedVocalCue::CallFunc_GetChantSoundCue_SoundCue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnFinishedVocalCue, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000030, "Member 'COMP_VoiceManager_C_EVENT_OnFinishedVocalCue::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnFinishedVocalCue, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000031, "Member 'COMP_VoiceManager_C_EVENT_OnFinishedVocalCue::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.SetVoiceEnabled
// 0x0006 (0x0006 - 0x0000)
struct COMP_VoiceManager_C_SetVoiceEnabled final
{
public:
	bool                                          State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChanting_Result;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBarking_Result;                         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_SetVoiceEnabled) == 0x000001, "Wrong alignment on COMP_VoiceManager_C_SetVoiceEnabled");
static_assert(sizeof(COMP_VoiceManager_C_SetVoiceEnabled) == 0x000006, "Wrong size on COMP_VoiceManager_C_SetVoiceEnabled");
static_assert(offsetof(COMP_VoiceManager_C_SetVoiceEnabled, State) == 0x000000, "Member 'COMP_VoiceManager_C_SetVoiceEnabled::State' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_SetVoiceEnabled, CallFunc_IsChanting_Result) == 0x000001, "Member 'COMP_VoiceManager_C_SetVoiceEnabled::CallFunc_IsChanting_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_SetVoiceEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'COMP_VoiceManager_C_SetVoiceEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_SetVoiceEnabled, CallFunc_IsBarking_Result) == 0x000003, "Member 'COMP_VoiceManager_C_SetVoiceEnabled::CallFunc_IsBarking_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_SetVoiceEnabled, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'COMP_VoiceManager_C_SetVoiceEnabled::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_SetVoiceEnabled, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'COMP_VoiceManager_C_SetVoiceEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.GetOwnerPawn
// 0x0020 (0x0020 - 0x0000)
struct COMP_VoiceManager_C_GetOwnerPawn final
{
public:
	class APAWN_Enemy_C*                          EnemyPawn;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_GetOwnerPawn) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_GetOwnerPawn");
static_assert(sizeof(COMP_VoiceManager_C_GetOwnerPawn) == 0x000020, "Wrong size on COMP_VoiceManager_C_GetOwnerPawn");
static_assert(offsetof(COMP_VoiceManager_C_GetOwnerPawn, EnemyPawn) == 0x000000, "Member 'COMP_VoiceManager_C_GetOwnerPawn::EnemyPawn' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetOwnerPawn, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'COMP_VoiceManager_C_GetOwnerPawn::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetOwnerPawn, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000010, "Member 'COMP_VoiceManager_C_GetOwnerPawn::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_GetOwnerPawn, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'COMP_VoiceManager_C_GetOwnerPawn::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.TryFadeOutBark
// 0x0030 (0x0030 - 0x0000)
struct COMP_VoiceManager_C_TryFadeOutBark final
{
public:
	class APAWN_Enemy_C*                          CallFunc_GetOwnerPawn_EnemyPawn;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelAudio_C*                     CallFunc_GetAudioComponentByLocationType_Result;   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBarking_Result;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(COMP_VoiceManager_C_TryFadeOutBark) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_TryFadeOutBark");
static_assert(sizeof(COMP_VoiceManager_C_TryFadeOutBark) == 0x000030, "Wrong size on COMP_VoiceManager_C_TryFadeOutBark");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutBark, CallFunc_GetOwnerPawn_EnemyPawn) == 0x000000, "Member 'COMP_VoiceManager_C_TryFadeOutBark::CallFunc_GetOwnerPawn_EnemyPawn' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutBark, CallFunc_GetAudioComponentByLocationType_Result) == 0x000008, "Member 'COMP_VoiceManager_C_TryFadeOutBark::CallFunc_GetAudioComponentByLocationType_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutBark, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000010, "Member 'COMP_VoiceManager_C_TryFadeOutBark::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutBark, CallFunc_IsBarking_Result) == 0x000011, "Member 'COMP_VoiceManager_C_TryFadeOutBark::CallFunc_IsBarking_Result' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutBark, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'COMP_VoiceManager_C_TryFadeOutBark::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutBark, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'COMP_VoiceManager_C_TryFadeOutBark::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryFadeOutBark, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'COMP_VoiceManager_C_TryFadeOutBark::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.EVENT_OnDetectionStateChanged
// 0x0028 (0x0028 - 0x0000)
struct COMP_VoiceManager_C_EVENT_OnDetectionStateChanged final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EventLocation;                                     // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DetectionState                           NewState;                                          // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_DetectionState                           OldState;                                          // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_EVENT_OnDetectionStateChanged) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_EVENT_OnDetectionStateChanged");
static_assert(sizeof(COMP_VoiceManager_C_EVENT_OnDetectionStateChanged) == 0x000028, "Wrong size on COMP_VoiceManager_C_EVENT_OnDetectionStateChanged");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnDetectionStateChanged, Character) == 0x000000, "Member 'COMP_VoiceManager_C_EVENT_OnDetectionStateChanged::Character' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnDetectionStateChanged, EventLocation) == 0x000008, "Member 'COMP_VoiceManager_C_EVENT_OnDetectionStateChanged::EventLocation' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnDetectionStateChanged, NewState) == 0x000014, "Member 'COMP_VoiceManager_C_EVENT_OnDetectionStateChanged::NewState' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnDetectionStateChanged, OldState) == 0x000015, "Member 'COMP_VoiceManager_C_EVENT_OnDetectionStateChanged::OldState' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnDetectionStateChanged, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x000018, "Member 'COMP_VoiceManager_C_EVENT_OnDetectionStateChanged::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_EVENT_OnDetectionStateChanged, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'COMP_VoiceManager_C_EVENT_OnDetectionStateChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.TryPlayBarkTemplate
// 0x0030 (0x0030 - 0x0000)
struct COMP_VoiceManager_C_TryPlayBarkTemplate final
{
public:
	ENUM_EnemyBark                                NewBark;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ActionPriority                           NewPriority;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               CallFunc_GetBarkSoundCue_SoundCue;                 // 0x0008(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(COMP_VoiceManager_C_TryPlayBarkTemplate) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_TryPlayBarkTemplate");
static_assert(sizeof(COMP_VoiceManager_C_TryPlayBarkTemplate) == 0x000030, "Wrong size on COMP_VoiceManager_C_TryPlayBarkTemplate");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkTemplate, NewBark) == 0x000000, "Member 'COMP_VoiceManager_C_TryPlayBarkTemplate::NewBark' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkTemplate, NewPriority) == 0x000001, "Member 'COMP_VoiceManager_C_TryPlayBarkTemplate::NewPriority' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBarkTemplate, CallFunc_GetBarkSoundCue_SoundCue) == 0x000008, "Member 'COMP_VoiceManager_C_TryPlayBarkTemplate::CallFunc_GetBarkSoundCue_SoundCue' has a wrong offset!");

// Function COMP_VoiceManager.COMP_VoiceManager_C.TryPlayBark
// 0x02A0 (0x02A0 - 0x0000)
struct COMP_VoiceManager_C_TryPlayBark final
{
public:
	struct FGameplayTag                           NewBarkTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	ENUM_ActionPriority                           NewPriority;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTRUCT_VocalizationTypes              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0258)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               CallFunc_Map_Find_Value;                           // 0x0270(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(COMP_VoiceManager_C_TryPlayBark) == 0x000008, "Wrong alignment on COMP_VoiceManager_C_TryPlayBark");
static_assert(sizeof(COMP_VoiceManager_C_TryPlayBark) == 0x0002A0, "Wrong size on COMP_VoiceManager_C_TryPlayBark");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBark, NewBarkTag) == 0x000000, "Member 'COMP_VoiceManager_C_TryPlayBark::NewBarkTag' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBark, NewPriority) == 0x000008, "Member 'COMP_VoiceManager_C_TryPlayBark::NewPriority' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBark, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'COMP_VoiceManager_C_TryPlayBark::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBark, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000268, "Member 'COMP_VoiceManager_C_TryPlayBark::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBark, CallFunc_Map_Find_Value) == 0x000270, "Member 'COMP_VoiceManager_C_TryPlayBark::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(COMP_VoiceManager_C_TryPlayBark, CallFunc_Map_Find_ReturnValue) == 0x000298, "Member 'COMP_VoiceManager_C_TryPlayBark::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

}


#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SKILL_Projectile_Base

#include "Basic.hpp"

#include "SKILL_Projectile_Base_classes.hpp"
#include "SKILL_Projectile_Base_parameters.hpp"


namespace SDK
{

// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.GetAccuracyRatio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Ratio                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_Projectile_Base_C::GetAccuracyRatio(float* Ratio)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_Projectile_Base_C", "GetAccuracyRatio");

	Params::SKILL_Projectile_Base_C_GetAccuracyRatio Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ratio != nullptr)
		*Ratio = Parms.Ratio;
}


// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.GetBarrelLocation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             BarrelName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BarrelLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_Projectile_Base_C::GetBarrelLocation(class FName BarrelName, struct FVector* BarrelLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_Projectile_Base_C", "GetBarrelLocation");

	Params::SKILL_Projectile_Base_C_GetBarrelLocation Parms{};

	Parms.BarrelName = BarrelName;

	UObject::ProcessEvent(Func, &Parms);

	if (BarrelLocation != nullptr)
		*BarrelLocation = std::move(Parms.BarrelLocation);
}


// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.GetBarrelTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             BarrelName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       Transform                                              (Parm, OutParm, IsPlainOldData, NoDestructor)

void USKILL_Projectile_Base_C::GetBarrelTransform(class FName BarrelName, struct FTransform* Transform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_Projectile_Base_C", "GetBarrelTransform");

	Params::SKILL_Projectile_Base_C_GetBarrelTransform Parms{};

	Parms.BarrelName = BarrelName;

	UObject::ProcessEvent(Func, &Parms);

	if (Transform != nullptr)
		*Transform = std::move(Parms.Transform);
}


// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.GetPredictedLocationToShoot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          SourceLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PredictedLocation                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_Projectile_Base_C::GetPredictedLocationToShoot(const struct FVector& SourceLocation, struct FVector* PredictedLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_Projectile_Base_C", "GetPredictedLocationToShoot");

	Params::SKILL_Projectile_Base_C_GetPredictedLocationToShoot Parms{};

	Parms.SourceLocation = std::move(SourceLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (PredictedLocation != nullptr)
		*PredictedLocation = std::move(Parms.PredictedLocation);
}


// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.IsBoneWithinAngle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_Projectile_Base_C::IsBoneWithinAngle(class FName BoneName, bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_Projectile_Base_C", "IsBoneWithinAngle");

	Params::SKILL_Projectile_Base_C_IsBoneWithinAngle Parms{};

	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.GetProjectileSpeed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Speed                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USKILL_Projectile_Base_C::GetProjectileSpeed(float* Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_Projectile_Base_C", "GetProjectileSpeed");

	Params::SKILL_Projectile_Base_C_GetProjectileSpeed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Speed != nullptr)
		*Speed = Parms.Speed;
}


// Function SKILL_Projectile_Base.SKILL_Projectile_Base_C.CanUseSkill
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void USKILL_Projectile_Base_C::CanUseSkill(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SKILL_Projectile_Base_C", "CanUseSkill");

	Params::SKILL_Projectile_Base_C_CanUseSkill Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}

}


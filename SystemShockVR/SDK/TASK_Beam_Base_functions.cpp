#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TASK_Beam_Base

#include "Basic.hpp"

#include "TASK_Beam_Base_classes.hpp"
#include "TASK_Beam_Base_parameters.hpp"


namespace SDK
{

// Function TASK_Beam_Base.TASK_Beam_Base_C.ExecuteUbergraph_TASK_Beam_Base
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::ExecuteUbergraph_TASK_Beam_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "ExecuteUbergraph_TASK_Beam_Base");

	Params::TASK_Beam_Base_C_ExecuteUbergraph_TASK_Beam_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.StopBeamAudio
// (BlueprintCallable, BlueprintEvent)

void UTASK_Beam_Base_C::StopBeamAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "StopBeamAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.StartBeamAudio
// (BlueprintCallable, BlueprintEvent)

void UTASK_Beam_Base_C::StartBeamAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "StartBeamAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.StartBeamEmitters
// (BlueprintCallable, BlueprintEvent)

void UTASK_Beam_Base_C::StartBeamEmitters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "StartBeamEmitters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.ReceiveAbortAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "ReceiveAbortAI");

	Params::TASK_Beam_Base_C_ReceiveAbortAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.ReceiveTickAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "ReceiveTickAI");

	Params::TASK_Beam_Base_C_ReceiveTickAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "ReceiveExecuteAI");

	Params::TASK_Beam_Base_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.OnLoaded_286EF9BC405A135F062C60B5296EA148
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::OnLoaded_286EF9BC405A135F062C60B5296EA148(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "OnLoaded_286EF9BC405A135F062C60B5296EA148");

	Params::TASK_Beam_Base_C_OnLoaded_286EF9BC405A135F062C60B5296EA148 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.OnLoaded_41978D6946D489D9553419BA70B7D4FB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::OnLoaded_41978D6946D489D9553419BA70B7D4FB(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "OnLoaded_41978D6946D489D9553419BA70B7D4FB");

	Params::TASK_Beam_Base_C_OnLoaded_41978D6946D489D9553419BA70B7D4FB Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.OnLoaded_B41A86A2415A41EBF1B52DA7FBFC0F8C
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::OnLoaded_B41A86A2415A41EBF1B52DA7FBFC0F8C(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "OnLoaded_B41A86A2415A41EBF1B52DA7FBFC0F8C");

	Params::TASK_Beam_Base_C_OnLoaded_B41A86A2415A41EBF1B52DA7FBFC0F8C Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.GetDamageValue
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsSecondary                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   DamageValue                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::GetDamageValue(bool IsSecondary, int32* DamageValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "GetDamageValue");

	Params::TASK_Beam_Base_C_GetDamageValue Parms{};

	Parms.IsSecondary = IsSecondary;

	UObject::ProcessEvent(Func, &Parms);

	if (DamageValue != nullptr)
		*DamageValue = Parms.DamageValue;
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.BeamDamageTraceFromSockets
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSecondary                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FHitResult>               HitResults                                             (Parm, OutParm, ContainsInstancedReference)

void UTASK_Beam_Base_C::BeamDamageTraceFromSockets(bool IsSecondary, TArray<struct FHitResult>* HitResults)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "BeamDamageTraceFromSockets");

	Params::TASK_Beam_Base_C_BeamDamageTraceFromSockets Parms{};

	Parms.IsSecondary = IsSecondary;

	UObject::ProcessEvent(Func, &Parms);

	if (HitResults != nullptr)
		*HitResults = std::move(Parms.HitResults);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.BeamDamageTraceSingle
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSecondary                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             BeamSocket                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Result                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void UTASK_Beam_Base_C::BeamDamageTraceSingle(bool IsSecondary, class FName BeamSocket, struct FHitResult* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "BeamDamageTraceSingle");

	Params::TASK_Beam_Base_C_BeamDamageTraceSingle Parms{};

	Parms.IsSecondary = IsSecondary;
	Parms.BeamSocket = BeamSocket;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.BeamLineTrace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BeamSocket                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          Direction                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::BeamLineTrace(class FName BeamSocket, struct FHitResult* OutHit, struct FVector* Direction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "BeamLineTrace");

	Params::TASK_Beam_Base_C_BeamLineTrace Parms{};

	Parms.BeamSocket = BeamSocket;

	UObject::ProcessEvent(Func, &Parms);

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);

	if (Direction != nullptr)
		*Direction = std::move(Parms.Direction);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.StopBeam
// (Protected, BlueprintCallable, BlueprintEvent)

void UTASK_Beam_Base_C::StopBeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "StopBeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.CreateAndSetAimTarget
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_TargetType                         Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::CreateAndSetAimTarget(ENUM_TargetType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "CreateAndSetAimTarget");

	Params::TASK_Beam_Base_C_CreateAndSetAimTarget Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.GetBarrelWorldLocation
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          BarrelLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::GetBarrelWorldLocation(struct FVector* BarrelLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "GetBarrelWorldLocation");

	Params::TASK_Beam_Base_C_GetBarrelWorldLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BarrelLocation != nullptr)
		*BarrelLocation = std::move(Parms.BarrelLocation);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.GetLocalForwardDirection
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ForwardDirection                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::GetLocalForwardDirection(struct FVector* ForwardDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "GetLocalForwardDirection");

	Params::TASK_Beam_Base_C_GetLocalForwardDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ForwardDirection != nullptr)
		*ForwardDirection = std::move(Parms.ForwardDirection);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.GetLocalRightDirection
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          RightDirection                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::GetLocalRightDirection(struct FVector* RightDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "GetLocalRightDirection");

	Params::TASK_Beam_Base_C_GetLocalRightDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RightDirection != nullptr)
		*RightDirection = std::move(Parms.RightDirection);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.GetLocalUpDirection
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          UpDirection                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::GetLocalUpDirection(struct FVector* UpDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "GetLocalUpDirection");

	Params::TASK_Beam_Base_C_GetLocalUpDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UpDirection != nullptr)
		*UpDirection = std::move(Parms.UpDirection);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.DrawDirectionFromBarrel
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     LineColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    LocalSpace                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTASK_Beam_Base_C::DrawDirectionFromBarrel(const struct FVector& Direction, const struct FLinearColor& LineColor, float Duration, bool LocalSpace)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "DrawDirectionFromBarrel");

	Params::TASK_Beam_Base_C_DrawDirectionFromBarrel Parms{};

	Parms.Direction = std::move(Direction);
	Parms.LineColor = std::move(LineColor);
	Parms.Duration = Duration;
	Parms.LocalSpace = LocalSpace;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.LocalDirectionToWorldDirection
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          LocalDirection                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          WorldDirection                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::LocalDirectionToWorldDirection(const struct FVector& LocalDirection, struct FVector* WorldDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "LocalDirectionToWorldDirection");

	Params::TASK_Beam_Base_C_LocalDirectionToWorldDirection Parms{};

	Parms.LocalDirection = std::move(LocalDirection);

	UObject::ProcessEvent(Func, &Parms);

	if (WorldDirection != nullptr)
		*WorldDirection = std::move(Parms.WorldDirection);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.WorldDirectionToLocalDirection
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          WorldDirection                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LocalDirection                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::WorldDirectionToLocalDirection(const struct FVector& WorldDirection, struct FVector* LocalDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "WorldDirectionToLocalDirection");

	Params::TASK_Beam_Base_C_WorldDirectionToLocalDirection Parms{};

	Parms.WorldDirection = std::move(WorldDirection);

	UObject::ProcessEvent(Func, &Parms);

	if (LocalDirection != nullptr)
		*LocalDirection = std::move(Parms.LocalDirection);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.ClampDirection
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          LocalDirection                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ClampedLocalDirection                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::ClampDirection(const struct FVector& LocalDirection, struct FVector* ClampedLocalDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "ClampDirection");

	Params::TASK_Beam_Base_C_ClampDirection Parms{};

	Parms.LocalDirection = std::move(LocalDirection);

	UObject::ProcessEvent(Func, &Parms);

	if (ClampedLocalDirection != nullptr)
		*ClampedLocalDirection = std::move(Parms.ClampedLocalDirection);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.GetCurrentLocalAimDirection
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          LocalDirection                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::GetCurrentLocalAimDirection(struct FVector* LocalDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "GetCurrentLocalAimDirection");

	Params::TASK_Beam_Base_C_GetCurrentLocalAimDirection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LocalDirection != nullptr)
		*LocalDirection = std::move(Parms.LocalDirection);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.SetBeamPower
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NormalizedValue                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::SetBeamPower(float NormalizedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "SetBeamPower");

	Params::TASK_Beam_Base_C_SetBeamPower Parms{};

	Parms.NormalizedValue = NormalizedValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.SetFlairScale
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NormalizedValue                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::SetFlairScale(float NormalizedValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "SetFlairScale");

	Params::TASK_Beam_Base_C_SetFlairScale Parms{};

	Parms.NormalizedValue = NormalizedValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.SetBeamDamageActive
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDamageActive                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UTASK_Beam_Base_C::SetBeamDamageActive(bool IsDamageActive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "SetBeamDamageActive");

	Params::TASK_Beam_Base_C_SetBeamDamageActive Parms{};

	Parms.IsDamageActive = IsDamageActive;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.UpdateBeamTurningOn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::UpdateBeamTurningOn(float DeltaSeconds, float* Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "UpdateBeamTurningOn");

	Params::TASK_Beam_Base_C_UpdateBeamTurningOn Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Progress != nullptr)
		*Progress = Parms.Progress;
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.UpdateBeamOn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::UpdateBeamOn(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "UpdateBeamOn");

	Params::TASK_Beam_Base_C_UpdateBeamOn Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.UpdateBeamTurningOff
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Progress                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::UpdateBeamTurningOff(float DeltaSeconds, float* Progress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "UpdateBeamTurningOff");

	Params::TASK_Beam_Base_C_UpdateBeamTurningOff Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (Progress != nullptr)
		*Progress = Parms.Progress;
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.SetBeamState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ENUM_MobileLaser_BeamState              State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::SetBeamState(ENUM_MobileLaser_BeamState State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "SetBeamState");

	Params::TASK_Beam_Base_C_SetBeamState Parms{};

	Parms.State = State;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.OnBeamSpawned
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UNiagaraComponent*                NiagaraComponent                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::OnBeamSpawned(class UNiagaraComponent* NiagaraComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "OnBeamSpawned");

	Params::TASK_Beam_Base_C_OnBeamSpawned Parms{};

	Parms.NiagaraComponent = NiagaraComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function TASK_Beam_Base.TASK_Beam_Base_C.GetBeamAimDirection
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BeamSocket                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          BeamAimDirection                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UTASK_Beam_Base_C::GetBeamAimDirection(class FName BeamSocket, struct FVector* BeamAimDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("TASK_Beam_Base_C", "GetBeamAimDirection");

	Params::TASK_Beam_Base_C_GetBeamAimDirection Parms{};

	Parms.BeamSocket = BeamSocket;

	UObject::ProcessEvent(Func, &Parms);

	if (BeamAimDirection != nullptr)
		*BeamAimDirection = std::move(Parms.BeamAimDirection);
}

}


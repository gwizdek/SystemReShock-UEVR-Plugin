#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MINILEVEL_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MINILEVEL_Base.MINILEVEL_Base_C
// 0x0030 (0x0250 - 0x0220)
class AMINILEVEL_Base_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsPaused;                                          // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  HackerPawn;                                        // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACON_Hacker_C*                          PlayerController;                                  // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneCaptureComponent2D*               SceneCaptureComponent;                             // 0x0248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MINILEVEL_Base(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void InitializeMinigame(class ACON_Hacker_C* PlayerController_0, class APAWN_Hacker_Simple_C* PlayerPawn, class USceneCaptureComponent2D* SceneCaptureComponent_0, bool* Result);
	void UpdateMinigame(float DeltaTime, bool* Result);
	void UnloadMinigame(bool* Result);
	void PossessMinigamePawn(class APawn* TargetPawn, class APAWN_Hacker_Simple_C* HackerPawn_0, class ACON_Hacker_C* Controller, bool* Result);
	void TogglePause();
	void OnGamePaused(class APlayerController* PlayerController_0);
	void OnGameUnpaused();
	void PlayMinigameSound(class USoundCue* SoundCue, class UAudioComponent** AudioComponent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MINILEVEL_Base_C">();
	}
	static class AMINILEVEL_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMINILEVEL_Base_C>();
	}
};
static_assert(alignof(AMINILEVEL_Base_C) == 0x000008, "Wrong alignment on AMINILEVEL_Base_C");
static_assert(sizeof(AMINILEVEL_Base_C) == 0x000250, "Wrong size on AMINILEVEL_Base_C");
static_assert(offsetof(AMINILEVEL_Base_C, UberGraphFrame) == 0x000220, "Member 'AMINILEVEL_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMINILEVEL_Base_C, DefaultSceneRoot) == 0x000228, "Member 'AMINILEVEL_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AMINILEVEL_Base_C, IsPaused) == 0x000230, "Member 'AMINILEVEL_Base_C::IsPaused' has a wrong offset!");
static_assert(offsetof(AMINILEVEL_Base_C, HackerPawn) == 0x000238, "Member 'AMINILEVEL_Base_C::HackerPawn' has a wrong offset!");
static_assert(offsetof(AMINILEVEL_Base_C, PlayerController) == 0x000240, "Member 'AMINILEVEL_Base_C::PlayerController' has a wrong offset!");
static_assert(offsetof(AMINILEVEL_Base_C, SceneCaptureComponent) == 0x000248, "Member 'AMINILEVEL_Base_C::SceneCaptureComponent' has a wrong offset!");

}


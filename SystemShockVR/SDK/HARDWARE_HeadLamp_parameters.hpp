#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HARDWARE_HeadLamp

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ENUM_GameDifficulty_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function HARDWARE_HeadLamp.HARDWARE_HeadLamp_C.OnVisionUnitActivated
// 0x0048 (0x0048 - 0x0000)
struct HARDWARE_HeadLamp_C_OnVisionUnitActivated final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_GameDifficulty                           CallFunc_GetDifficultyByType_Difficulty;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HARDWARE_HeadLamp_C_OnVisionUnitActivated) == 0x000008, "Wrong alignment on HARDWARE_HeadLamp_C_OnVisionUnitActivated");
static_assert(sizeof(HARDWARE_HeadLamp_C_OnVisionUnitActivated) == 0x000048, "Wrong size on HARDWARE_HeadLamp_C_OnVisionUnitActivated");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitActivated, Character) == 0x000000, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitActivated::Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitActivated, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000008, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitActivated::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitActivated, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitActivated::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitActivated, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitActivated::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitActivated, K2Node_DynamicCast_AsGI_Single_Player) == 0x000020, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitActivated::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitActivated, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitActivated::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitActivated, CallFunc_GetDifficultyByType_Difficulty) == 0x000029, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitActivated::CallFunc_GetDifficultyByType_Difficulty' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitActivated, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitActivated::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitActivated, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00003C, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitActivated::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitActivated, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitActivated::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function HARDWARE_HeadLamp.HARDWARE_HeadLamp_C.OnVisionUnitDeactivated
// 0x0018 (0x0018 - 0x0000)
struct HARDWARE_HeadLamp_C_OnVisionUnitDeactivated final
{
public:
	class APAWN_SystemShockCharacter_C*           Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Implant_C*                 K2Node_DynamicCast_AsPAWN_Hacker_Implant;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_HeadLamp_C_OnVisionUnitDeactivated) == 0x000008, "Wrong alignment on HARDWARE_HeadLamp_C_OnVisionUnitDeactivated");
static_assert(sizeof(HARDWARE_HeadLamp_C_OnVisionUnitDeactivated) == 0x000018, "Wrong size on HARDWARE_HeadLamp_C_OnVisionUnitDeactivated");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitDeactivated, Character) == 0x000000, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitDeactivated::Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitDeactivated, K2Node_DynamicCast_AsPAWN_Hacker_Implant) == 0x000008, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitDeactivated::K2Node_DynamicCast_AsPAWN_Hacker_Implant' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_OnVisionUnitDeactivated, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'HARDWARE_HeadLamp_C_OnVisionUnitDeactivated::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function HARDWARE_HeadLamp.HARDWARE_HeadLamp_C.EVENT_OnHeadLampVisualDetectionTick
// 0x00B8 (0x00B8 - 0x0000)
struct HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick final
{
public:
	float                                         DetectionAmount;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Enemy_C*                          ScannedEnemy;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Hacker_Simple_C*                  HackerOwner;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorInt_ReturnValue;           // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetLastCursorActor_Actor;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APAWN_Enemy_C*                          K2Node_DynamicCast_AsPAWN_Enemy;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_96[0x2];                                       // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_SystemShockCharacter_C*           CallFunc_GetOwnerCharacter_Character;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APAWN_Hacker_Simple_C*                  K2Node_DynamicCast_AsPAWN_Hacker_Simple;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick) == 0x000008, "Wrong alignment on HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick");
static_assert(sizeof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick) == 0x0000B8, "Wrong size on HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, DetectionAmount) == 0x000000, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::DetectionAmount' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, ScannedEnemy) == 0x000008, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::ScannedEnemy' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, HackerOwner) == 0x000010, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::HackerOwner' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_GetActorForwardVector_ReturnValue) == 0x00001C, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_GetForwardVector_ReturnValue) == 0x000028, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_Multiply_VectorInt_ReturnValue) == 0x000034, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_Multiply_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_Dot_VectorVector_ReturnValue) == 0x000040, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_FMax_ReturnValue) == 0x000044, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000048, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_GetLastCursorActor_Actor) == 0x000050, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_GetLastCursorActor_Actor' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, K2Node_DynamicCast_AsPAWN_Enemy) == 0x000058, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::K2Node_DynamicCast_AsPAWN_Enemy' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_GetForwardVector_ReturnValue_1) == 0x000064, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00007C, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000094, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000095, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_GetOwnerCharacter_Character) == 0x000098, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_GetOwnerCharacter_Character' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, CallFunc_BooleanAND_ReturnValue) == 0x0000A0, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, K2Node_DynamicCast_AsPAWN_Hacker_Simple) == 0x0000A8, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::K2Node_DynamicCast_AsPAWN_Hacker_Simple' has a wrong offset!");
static_assert(offsetof(HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'HARDWARE_HeadLamp_C_EVENT_OnHeadLampVisualDetectionTick::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}


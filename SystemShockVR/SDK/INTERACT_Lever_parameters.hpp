#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_Lever

#include "Basic.hpp"

#include "ENUM_UpDown_structs.hpp"
#include "Engine_structs.hpp"
#include "NamedInteger_structs.hpp"
#include "STRUCT_EffectParams_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENUM_ButtonColorType_structs.hpp"


namespace SDK::Params
{

// Function INTERACT_Lever.INTERACT_Lever_C.ExecuteUbergraph_INTERACT_Lever
// 0x0008 (0x0008 - 0x0000)
struct INTERACT_Lever_C_ExecuteUbergraph_INTERACT_Lever final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bVisibleState;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lever_C_ExecuteUbergraph_INTERACT_Lever) == 0x000004, "Wrong alignment on INTERACT_Lever_C_ExecuteUbergraph_INTERACT_Lever");
static_assert(sizeof(INTERACT_Lever_C_ExecuteUbergraph_INTERACT_Lever) == 0x000008, "Wrong size on INTERACT_Lever_C_ExecuteUbergraph_INTERACT_Lever");
static_assert(offsetof(INTERACT_Lever_C_ExecuteUbergraph_INTERACT_Lever, EntryPoint) == 0x000000, "Member 'INTERACT_Lever_C_ExecuteUbergraph_INTERACT_Lever::EntryPoint' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_ExecuteUbergraph_INTERACT_Lever, K2Node_ComponentBoundEvent_bVisibleState) == 0x000004, "Member 'INTERACT_Lever_C_ExecuteUbergraph_INTERACT_Lever::K2Node_ComponentBoundEvent_bVisibleState' has a wrong offset!");

// Function INTERACT_Lever.INTERACT_Lever_C.BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Lever_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature final
{
public:
	bool                                          bVisibleState;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lever_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong alignment on INTERACT_Lever_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(sizeof(INTERACT_Lever_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature) == 0x000001, "Wrong size on INTERACT_Lever_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature");
static_assert(offsetof(INTERACT_Lever_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature, bVisibleState) == 0x000000, "Member 'INTERACT_Lever_C_BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_0_CullableVisibilitySignature__DelegateSignature::bVisibleState' has a wrong offset!");

// Function INTERACT_Lever.INTERACT_Lever_C.UserConstructionScript
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Lever_C_UserConstructionScript final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                Location;                                          // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lever_C_UserConstructionScript) == 0x000004, "Wrong alignment on INTERACT_Lever_C_UserConstructionScript");
static_assert(sizeof(INTERACT_Lever_C_UserConstructionScript) == 0x000018, "Wrong size on INTERACT_Lever_C_UserConstructionScript");
static_assert(offsetof(INTERACT_Lever_C_UserConstructionScript, Rotation) == 0x000000, "Member 'INTERACT_Lever_C_UserConstructionScript::Rotation' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UserConstructionScript, Location) == 0x00000C, "Member 'INTERACT_Lever_C_UserConstructionScript::Location' has a wrong offset!");

// Function INTERACT_Lever.INTERACT_Lever_C.InitializeButtonState
// 0x0020 (0x0020 - 0x0000)
struct INTERACT_Lever_C_InitializeButtonState final
{
public:
	bool                                          CallFunc_HasButtonBeenActivated_Result;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_Lever_C*                        K2Node_DynamicCast_AsAnim_BP_Lever;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lever_C_InitializeButtonState) == 0x000008, "Wrong alignment on INTERACT_Lever_C_InitializeButtonState");
static_assert(sizeof(INTERACT_Lever_C_InitializeButtonState) == 0x000020, "Wrong size on INTERACT_Lever_C_InitializeButtonState");
static_assert(offsetof(INTERACT_Lever_C_InitializeButtonState, CallFunc_HasButtonBeenActivated_Result) == 0x000000, "Member 'INTERACT_Lever_C_InitializeButtonState::CallFunc_HasButtonBeenActivated_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_InitializeButtonState, CallFunc_IsVisible_ReturnValue) == 0x000001, "Member 'INTERACT_Lever_C_InitializeButtonState::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_InitializeButtonState, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'INTERACT_Lever_C_InitializeButtonState::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_InitializeButtonState, K2Node_DynamicCast_AsAnim_BP_Lever) == 0x000010, "Member 'INTERACT_Lever_C_InitializeButtonState::K2Node_DynamicCast_AsAnim_BP_Lever' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_InitializeButtonState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'INTERACT_Lever_C_InitializeButtonState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_Lever.INTERACT_Lever_C.UpdateLockLightColor
// 0x0058 (0x0058 - 0x0000)
struct INTERACT_Lever_C_UpdateLockLightColor final
{
public:
	class UMaterialInstanceDynamic*               DynamicMaterial;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LockLightColor;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_ButtonColorType                          Temp_byte_Variable;                                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ButtonColorType                          Temp_byte_Variable_1;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_ButtonColorType                          Temp_byte_Variable_2;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEveryTargetInteractUnlocked_Result;     // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsButtonFunctional_Result;                // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_ButtonColorType                          K2Node_Select_Default;                             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_ButtonColorType                          K2Node_Select_Default_1;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetButtonColor_ButtonColor;               // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_AsMaterial_Instance_Dynamic;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lever_C_UpdateLockLightColor) == 0x000008, "Wrong alignment on INTERACT_Lever_C_UpdateLockLightColor");
static_assert(sizeof(INTERACT_Lever_C_UpdateLockLightColor) == 0x000058, "Wrong size on INTERACT_Lever_C_UpdateLockLightColor");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, DynamicMaterial) == 0x000000, "Member 'INTERACT_Lever_C_UpdateLockLightColor::DynamicMaterial' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, LockLightColor) == 0x000008, "Member 'INTERACT_Lever_C_UpdateLockLightColor::LockLightColor' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, Temp_bool_Variable) == 0x000018, "Member 'INTERACT_Lever_C_UpdateLockLightColor::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, Temp_byte_Variable) == 0x000019, "Member 'INTERACT_Lever_C_UpdateLockLightColor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, Temp_byte_Variable_1) == 0x00001A, "Member 'INTERACT_Lever_C_UpdateLockLightColor::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, Temp_bool_Variable_1) == 0x00001B, "Member 'INTERACT_Lever_C_UpdateLockLightColor::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, Temp_byte_Variable_2) == 0x00001C, "Member 'INTERACT_Lever_C_UpdateLockLightColor::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, CallFunc_IsEveryTargetInteractUnlocked_Result) == 0x00001D, "Member 'INTERACT_Lever_C_UpdateLockLightColor::CallFunc_IsEveryTargetInteractUnlocked_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, CallFunc_IsButtonFunctional_Result) == 0x00001E, "Member 'INTERACT_Lever_C_UpdateLockLightColor::CallFunc_IsButtonFunctional_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, K2Node_Select_Default) == 0x00001F, "Member 'INTERACT_Lever_C_UpdateLockLightColor::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, K2Node_Select_Default_1) == 0x000020, "Member 'INTERACT_Lever_C_UpdateLockLightColor::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, CallFunc_GetButtonColor_ButtonColor) == 0x000024, "Member 'INTERACT_Lever_C_UpdateLockLightColor::CallFunc_GetButtonColor_ButtonColor' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000038, "Member 'INTERACT_Lever_C_UpdateLockLightColor::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, CallFunc_GetMaterial_ReturnValue) == 0x000040, "Member 'INTERACT_Lever_C_UpdateLockLightColor::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, K2Node_DynamicCast_AsMaterial_Instance_Dynamic) == 0x000048, "Member 'INTERACT_Lever_C_UpdateLockLightColor::K2Node_DynamicCast_AsMaterial_Instance_Dynamic' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateLockLightColor, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'INTERACT_Lever_C_UpdateLockLightColor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_Lever.INTERACT_Lever_C.OnBrokenInteraction
// 0x0070 (0x0070 - 0x0000)
struct INTERACT_Lever_C_OnBrokenInteraction final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array_1;                          // 0x0018(0x0010)(ReferenceParm)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0028(0x0030)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lever_C_OnBrokenInteraction) == 0x000008, "Wrong alignment on INTERACT_Lever_C_OnBrokenInteraction");
static_assert(sizeof(INTERACT_Lever_C_OnBrokenInteraction) == 0x000070, "Wrong size on INTERACT_Lever_C_OnBrokenInteraction");
static_assert(offsetof(INTERACT_Lever_C_OnBrokenInteraction, Result) == 0x000000, "Member 'INTERACT_Lever_C_OnBrokenInteraction::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnBrokenInteraction, K2Node_MakeArray_Array) == 0x000008, "Member 'INTERACT_Lever_C_OnBrokenInteraction::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnBrokenInteraction, K2Node_MakeArray_Array_1) == 0x000018, "Member 'INTERACT_Lever_C_OnBrokenInteraction::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnBrokenInteraction, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000028, "Member 'INTERACT_Lever_C_OnBrokenInteraction::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnBrokenInteraction, CallFunc_GetGameInstance_ReturnValue) == 0x000058, "Member 'INTERACT_Lever_C_OnBrokenInteraction::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnBrokenInteraction, K2Node_DynamicCast_AsGI_Single_Player) == 0x000060, "Member 'INTERACT_Lever_C_OnBrokenInteraction::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnBrokenInteraction, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'INTERACT_Lever_C_OnBrokenInteraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function INTERACT_Lever.INTERACT_Lever_C.GetSuccessMessage
// 0x0040 (0x0040 - 0x0000)
struct INTERACT_Lever_C_GetSuccessMessage final
{
public:
	class FText                                   Result;                                            // 0x0000(0x0018)(Parm, OutParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSuccessMessage_Result;                 // 0x0020(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lever_C_GetSuccessMessage) == 0x000008, "Wrong alignment on INTERACT_Lever_C_GetSuccessMessage");
static_assert(sizeof(INTERACT_Lever_C_GetSuccessMessage) == 0x000040, "Wrong size on INTERACT_Lever_C_GetSuccessMessage");
static_assert(offsetof(INTERACT_Lever_C_GetSuccessMessage, Result) == 0x000000, "Member 'INTERACT_Lever_C_GetSuccessMessage::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_GetSuccessMessage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'INTERACT_Lever_C_GetSuccessMessage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_GetSuccessMessage, CallFunc_GetSuccessMessage_Result) == 0x000020, "Member 'INTERACT_Lever_C_GetSuccessMessage::CallFunc_GetSuccessMessage_Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_GetSuccessMessage, CallFunc_TextIsEmpty_ReturnValue) == 0x000038, "Member 'INTERACT_Lever_C_GetSuccessMessage::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_GetSuccessMessage, CallFunc_BooleanOR_ReturnValue) == 0x000039, "Member 'INTERACT_Lever_C_GetSuccessMessage::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function INTERACT_Lever.INTERACT_Lever_C.UpdateLeverVisibility
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Lever_C_UpdateLeverVisibility final
{
public:
	bool                                          VisibilityState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lever_C_UpdateLeverVisibility) == 0x000001, "Wrong alignment on INTERACT_Lever_C_UpdateLeverVisibility");
static_assert(sizeof(INTERACT_Lever_C_UpdateLeverVisibility) == 0x000001, "Wrong size on INTERACT_Lever_C_UpdateLeverVisibility");
static_assert(offsetof(INTERACT_Lever_C_UpdateLeverVisibility, VisibilityState) == 0x000000, "Member 'INTERACT_Lever_C_UpdateLeverVisibility::VisibilityState' has a wrong offset!");

// Function INTERACT_Lever.INTERACT_Lever_C.OnInteractSuccess
// 0x0120 (0x0120 - 0x0000)
struct INTERACT_Lever_C_OnInteractSuccess final
{
public:
	class AActor*                                 SourceActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   Temp_byte_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FNamedInteger>                  K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	TArray<struct FNamedFloat>                    K2Node_MakeArray_Array_1;                          // 0x0020(0x0010)(ReferenceParm)
	struct FSTRUCT_EffectParams                   K2Node_MakeStruct_STRUCT_EffectParams;             // 0x0030(0x0030)(HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   Temp_byte_Variable_3;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimBP_Lever_C*                        K2Node_DynamicCast_AsAnim_BP_Lever;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGI_SinglePlayer_C*                     K2Node_DynamicCast_AsGI_Single_Player;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_Lever_C*                        K2Node_DynamicCast_AsAnim_BP_Lever_1;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENUM_UpDown                                   Temp_byte_Variable_4;                              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENUM_UpDown                                   K2Node_Select_Default;                             // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB[0x5];                                       // 0x00AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            K2Node_Select_Default_1;                           // 0x00B0(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class USoundCue>               K2Node_Select_Default_2;                           // 0x00F0(0x0028)(HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lever_C_OnInteractSuccess) == 0x000008, "Wrong alignment on INTERACT_Lever_C_OnInteractSuccess");
static_assert(sizeof(INTERACT_Lever_C_OnInteractSuccess) == 0x000120, "Wrong size on INTERACT_Lever_C_OnInteractSuccess");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, SourceActor) == 0x000000, "Member 'INTERACT_Lever_C_OnInteractSuccess::SourceActor' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, Temp_byte_Variable) == 0x000008, "Member 'INTERACT_Lever_C_OnInteractSuccess::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, Temp_byte_Variable_1) == 0x000009, "Member 'INTERACT_Lever_C_OnInteractSuccess::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, Temp_byte_Variable_2) == 0x00000A, "Member 'INTERACT_Lever_C_OnInteractSuccess::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_MakeArray_Array) == 0x000010, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_MakeArray_Array_1) == 0x000020, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_MakeStruct_STRUCT_EffectParams) == 0x000030, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_MakeStruct_STRUCT_EffectParams' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, CallFunc_GetAnimInstance_ReturnValue) == 0x000060, "Member 'INTERACT_Lever_C_OnInteractSuccess::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, Temp_byte_Variable_3) == 0x000068, "Member 'INTERACT_Lever_C_OnInteractSuccess::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_DynamicCast_AsAnim_BP_Lever) == 0x000070, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_DynamicCast_AsAnim_BP_Lever' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, CallFunc_GetGameInstance_ReturnValue) == 0x000080, "Member 'INTERACT_Lever_C_OnInteractSuccess::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_DynamicCast_AsGI_Single_Player) == 0x000088, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_DynamicCast_AsGI_Single_Player' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000098, "Member 'INTERACT_Lever_C_OnInteractSuccess::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_DynamicCast_AsAnim_BP_Lever_1) == 0x0000A0, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_DynamicCast_AsAnim_BP_Lever_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, Temp_byte_Variable_4) == 0x0000A9, "Member 'INTERACT_Lever_C_OnInteractSuccess::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_Select_Default) == 0x0000AA, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_Select_Default_1) == 0x0000B0, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0000D8, "Member 'INTERACT_Lever_C_OnInteractSuccess::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_DynamicCast_AsAnim_Montage) == 0x0000E0, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_DynamicCast_bSuccess_3) == 0x0000E8, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, K2Node_Select_Default_2) == 0x0000F0, "Member 'INTERACT_Lever_C_OnInteractSuccess::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_OnInteractSuccess, CallFunc_Montage_Play_ReturnValue) == 0x000118, "Member 'INTERACT_Lever_C_OnInteractSuccess::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");

// Function INTERACT_Lever.INTERACT_Lever_C.UpdateButtonEmissiveStrength
// 0x0010 (0x0010 - 0x0000)
struct INTERACT_Lever_C_UpdateButtonEmissiveStrength final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Strength;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_UpdateButtonEmissiveStrength_Strength;    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lever_C_UpdateButtonEmissiveStrength) == 0x000004, "Wrong alignment on INTERACT_Lever_C_UpdateButtonEmissiveStrength");
static_assert(sizeof(INTERACT_Lever_C_UpdateButtonEmissiveStrength) == 0x000010, "Wrong size on INTERACT_Lever_C_UpdateButtonEmissiveStrength");
static_assert(offsetof(INTERACT_Lever_C_UpdateButtonEmissiveStrength, Scale) == 0x000000, "Member 'INTERACT_Lever_C_UpdateButtonEmissiveStrength::Scale' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateButtonEmissiveStrength, Strength) == 0x000004, "Member 'INTERACT_Lever_C_UpdateButtonEmissiveStrength::Strength' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateButtonEmissiveStrength, CallFunc_UpdateButtonEmissiveStrength_Strength) == 0x000008, "Member 'INTERACT_Lever_C_UpdateButtonEmissiveStrength::CallFunc_UpdateButtonEmissiveStrength_Strength' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_UpdateButtonEmissiveStrength, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00000C, "Member 'INTERACT_Lever_C_UpdateButtonEmissiveStrength::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function INTERACT_Lever.INTERACT_Lever_C.GetLeverState
// 0x0001 (0x0001 - 0x0000)
struct INTERACT_Lever_C_GetLeverState final
{
public:
	ENUM_UpDown                                   Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(INTERACT_Lever_C_GetLeverState) == 0x000001, "Wrong alignment on INTERACT_Lever_C_GetLeverState");
static_assert(sizeof(INTERACT_Lever_C_GetLeverState) == 0x000001, "Wrong size on INTERACT_Lever_C_GetLeverState");
static_assert(offsetof(INTERACT_Lever_C_GetLeverState, Result) == 0x000000, "Member 'INTERACT_Lever_C_GetLeverState::Result' has a wrong offset!");

// Function INTERACT_Lever.INTERACT_Lever_C.GetInteractBusy
// 0x0038 (0x0038 - 0x0000)
struct INTERACT_Lever_C_GetInteractBusy final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BusyMessage;                                       // 0x0008(0x0018)(Parm, OutParm)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimBP_Lever_C*                        K2Node_DynamicCast_AsAnim_BP_Lever;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lever_C_GetInteractBusy) == 0x000008, "Wrong alignment on INTERACT_Lever_C_GetInteractBusy");
static_assert(sizeof(INTERACT_Lever_C_GetInteractBusy) == 0x000038, "Wrong size on INTERACT_Lever_C_GetInteractBusy");
static_assert(offsetof(INTERACT_Lever_C_GetInteractBusy, Result) == 0x000000, "Member 'INTERACT_Lever_C_GetInteractBusy::Result' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_GetInteractBusy, BusyMessage) == 0x000008, "Member 'INTERACT_Lever_C_GetInteractBusy::BusyMessage' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_GetInteractBusy, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'INTERACT_Lever_C_GetInteractBusy::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_GetInteractBusy, K2Node_DynamicCast_AsAnim_BP_Lever) == 0x000028, "Member 'INTERACT_Lever_C_GetInteractBusy::K2Node_DynamicCast_AsAnim_BP_Lever' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_GetInteractBusy, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'INTERACT_Lever_C_GetInteractBusy::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_GetInteractBusy, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000031, "Member 'INTERACT_Lever_C_GetInteractBusy::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");

// Function INTERACT_Lever.INTERACT_Lever_C.GetTargetShape
// 0x0018 (0x0018 - 0x0000)
struct INTERACT_Lever_C_GetTargetShape final
{
public:
	class UPrimitiveComponent*                    CursorPrimitive;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        ShapeComponent;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(INTERACT_Lever_C_GetTargetShape) == 0x000008, "Wrong alignment on INTERACT_Lever_C_GetTargetShape");
static_assert(sizeof(INTERACT_Lever_C_GetTargetShape) == 0x000018, "Wrong size on INTERACT_Lever_C_GetTargetShape");
static_assert(offsetof(INTERACT_Lever_C_GetTargetShape, CursorPrimitive) == 0x000000, "Member 'INTERACT_Lever_C_GetTargetShape::CursorPrimitive' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_GetTargetShape, ShapeComponent) == 0x000008, "Member 'INTERACT_Lever_C_GetTargetShape::ShapeComponent' has a wrong offset!");
static_assert(offsetof(INTERACT_Lever_C_GetTargetShape, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'INTERACT_Lever_C_GetTargetShape::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

}


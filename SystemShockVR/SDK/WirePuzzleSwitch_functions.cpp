#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WirePuzzleSwitch

#include "Basic.hpp"

#include "WirePuzzleSwitch_classes.hpp"
#include "WirePuzzleSwitch_parameters.hpp"


namespace SDK
{

// Function WirePuzzleSwitch.WirePuzzleSwitch_C.ExecuteUbergraph_WirePuzzleSwitch
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWirePuzzleSwitch_C::ExecuteUbergraph_WirePuzzleSwitch(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WirePuzzleSwitch_C", "ExecuteUbergraph_WirePuzzleSwitch");

	Params::WirePuzzleSwitch_C_ExecuteUbergraph_WirePuzzleSwitch Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WirePuzzleSwitch.WirePuzzleSwitch_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWirePuzzleSwitch_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WirePuzzleSwitch_C", "ReceiveTick");

	Params::WirePuzzleSwitch_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WirePuzzleSwitch.WirePuzzleSwitch_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UWirePuzzleSwitch_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WirePuzzleSwitch_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WirePuzzleSwitch.WirePuzzleSwitch_C.InitializeWireSwitch
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWirePuzzleSwitch_C::InitializeWireSwitch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WirePuzzleSwitch_C", "InitializeWireSwitch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WirePuzzleSwitch.WirePuzzleSwitch_C.UpdateTargetPosition
// (Public, BlueprintCallable, BlueprintEvent)

void UWirePuzzleSwitch_C::UpdateTargetPosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WirePuzzleSwitch_C", "UpdateTargetPosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WirePuzzleSwitch.WirePuzzleSwitch_C.UpdateRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWirePuzzleSwitch_C::UpdateRotation(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WirePuzzleSwitch_C", "UpdateRotation");

	Params::WirePuzzleSwitch_C_UpdateRotation Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WirePuzzleSwitch.WirePuzzleSwitch_C.GetTargetRotationValue
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Rotation                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWirePuzzleSwitch_C::GetTargetRotationValue(bool Position, struct FRotator* Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WirePuzzleSwitch_C", "GetTargetRotationValue");

	Params::WirePuzzleSwitch_C_GetTargetRotationValue Parms{};

	Parms.Position = Position;

	UObject::ProcessEvent(Func, &Parms);

	if (Rotation != nullptr)
		*Rotation = std::move(Parms.Rotation);
}


// Function WirePuzzleSwitch.WirePuzzleSwitch_C.UpdateSwitchMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void UWirePuzzleSwitch_C::UpdateSwitchMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WirePuzzleSwitch_C", "UpdateSwitchMaterial");

	UObject::ProcessEvent(Func, nullptr);
}

}


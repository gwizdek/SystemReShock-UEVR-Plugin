#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: INTERACT_BreakablePanel

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "INTERACT_Base_classes.hpp"
#include "ENUM_InteractionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass INTERACT_BreakablePanel.INTERACT_BreakablePanel_C
// 0x0048 (0x0350 - 0x0308)
class AINTERACT_BreakablePanel_C : public AINTERACT_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_INTERACT_BreakablePanel_C;          // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCOMP_AttribManager_C*                  COMP_AttribManager;                                // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCOMP_VoxelCullable_C*                  COMP_VoxelCullable;                                // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          StartsActivated;                                   // 0x0320(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsActivated;                                       // 0x0321(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          IsPowered;                                         // 0x0322(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HasBeenInitialized;                                // 0x0323(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          ShouldBeVisible;                                   // 0x0324(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    DisableStoryQuest;                                 // 0x0328(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor)
	class FText                                   PanelDisabledMessage;                              // 0x0338(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_INTERACT_BreakablePanel(int32 EntryPoint);
	void BndEvt__COMP_AttribManager_K2Node_ComponentBoundEvent_0_OnDamageSignature__DelegateSignature(class AActor* OtherActor, const struct FAttribDamageInstance& DamageInstance, class UObject* UserParams);
	void BndEvt__COMP_VoxelCullable_K2Node_ComponentBoundEvent_2_CullableVisibilitySignature__DelegateSignature(bool bVisibleState);
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void InitializeBreakablePanel();
	void TryInitializeDisableQuest();
	void OnActivationStateChanged(bool State, bool OnBeginPlay);
	void TrySetActivationState(bool State, bool* Result);
	void SetActivationStateInternal(bool State);
	void OnDamageReceived(class AActor* SourceActor, class UAttribDamageType* DamageType, int32 DamageValue, class UPrimitiveComponent* HitComponent, int32 HitFaceIndex, const struct FVector& HitLocation, const struct FVector& HitNormal, float ImpactRadius, bool* Result);
	void SetShouldBeVisible(bool VisibleState, bool* Result);
	void CanTakeDamage(class UAttribDamageType* DamageType, class UOBJ_ImpactData_C* ImpactData, bool* Result);
	void EVENT_OnStoryQuestChanged(class FName StoryQuestName, bool Value);
	void IsActivatedAndPowered(bool* Result);
	void GetNormalizedLightColor(const struct FLinearColor& LightColor, struct FLinearColor* Result);
	void HasCompletedDisableQuest(bool* Result);
	void TryInteract(class AActor* SourceActor, class UPrimitiveComponent* CursorPrimitive, ENUM_InteractionType InteractionType, struct FSTRUCT_InteractResults* InteractResults);
	void IsInteractActivated(bool* Result);
	void GetInteractLocked(class AActor* SourceActor, bool* Result, class FText* LockMessage);
	void CanModifyInteractPower(bool* Result);
	void SetInteractPowered(bool State, bool* Result);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"INTERACT_BreakablePanel_C">();
	}
	static class AINTERACT_BreakablePanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AINTERACT_BreakablePanel_C>();
	}
};
static_assert(alignof(AINTERACT_BreakablePanel_C) == 0x000008, "Wrong alignment on AINTERACT_BreakablePanel_C");
static_assert(sizeof(AINTERACT_BreakablePanel_C) == 0x000350, "Wrong size on AINTERACT_BreakablePanel_C");
static_assert(offsetof(AINTERACT_BreakablePanel_C, UberGraphFrame_INTERACT_BreakablePanel_C) == 0x000308, "Member 'AINTERACT_BreakablePanel_C::UberGraphFrame_INTERACT_BreakablePanel_C' has a wrong offset!");
static_assert(offsetof(AINTERACT_BreakablePanel_C, COMP_AttribManager) == 0x000310, "Member 'AINTERACT_BreakablePanel_C::COMP_AttribManager' has a wrong offset!");
static_assert(offsetof(AINTERACT_BreakablePanel_C, COMP_VoxelCullable) == 0x000318, "Member 'AINTERACT_BreakablePanel_C::COMP_VoxelCullable' has a wrong offset!");
static_assert(offsetof(AINTERACT_BreakablePanel_C, StartsActivated) == 0x000320, "Member 'AINTERACT_BreakablePanel_C::StartsActivated' has a wrong offset!");
static_assert(offsetof(AINTERACT_BreakablePanel_C, IsActivated) == 0x000321, "Member 'AINTERACT_BreakablePanel_C::IsActivated' has a wrong offset!");
static_assert(offsetof(AINTERACT_BreakablePanel_C, IsPowered) == 0x000322, "Member 'AINTERACT_BreakablePanel_C::IsPowered' has a wrong offset!");
static_assert(offsetof(AINTERACT_BreakablePanel_C, HasBeenInitialized) == 0x000323, "Member 'AINTERACT_BreakablePanel_C::HasBeenInitialized' has a wrong offset!");
static_assert(offsetof(AINTERACT_BreakablePanel_C, ShouldBeVisible) == 0x000324, "Member 'AINTERACT_BreakablePanel_C::ShouldBeVisible' has a wrong offset!");
static_assert(offsetof(AINTERACT_BreakablePanel_C, DisableStoryQuest) == 0x000328, "Member 'AINTERACT_BreakablePanel_C::DisableStoryQuest' has a wrong offset!");
static_assert(offsetof(AINTERACT_BreakablePanel_C, PanelDisabledMessage) == 0x000338, "Member 'AINTERACT_BreakablePanel_C::PanelDisabledMessage' has a wrong offset!");

}


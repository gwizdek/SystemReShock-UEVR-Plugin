#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TextTyper

#include "Basic.hpp"


namespace SDK::Params
{

// Function TextTyper.TextTyper_C.SetTextMessage
// 0x0020 (0x0020 - 0x0000)
struct TextTyper_C_SetTextMessage final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	float                                         GameTimeSeconds;                                   // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x001C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextTyper_C_SetTextMessage) == 0x000008, "Wrong alignment on TextTyper_C_SetTextMessage");
static_assert(sizeof(TextTyper_C_SetTextMessage) == 0x000020, "Wrong size on TextTyper_C_SetTextMessage");
static_assert(offsetof(TextTyper_C_SetTextMessage, Message) == 0x000000, "Member 'TextTyper_C_SetTextMessage::Message' has a wrong offset!");
static_assert(offsetof(TextTyper_C_SetTextMessage, GameTimeSeconds) == 0x000018, "Member 'TextTyper_C_SetTextMessage::GameTimeSeconds' has a wrong offset!");
static_assert(offsetof(TextTyper_C_SetTextMessage, Result) == 0x00001C, "Member 'TextTyper_C_SetTextMessage::Result' has a wrong offset!");
static_assert(offsetof(TextTyper_C_SetTextMessage, CallFunc_NotEqual_TextText_ReturnValue) == 0x00001D, "Member 'TextTyper_C_SetTextMessage::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");

// Function TextTyper.TextTyper_C.ResetMessage
// 0x0002 (0x0002 - 0x0000)
struct TextTyper_C_ResetMessage final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetTextMessage_Result;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextTyper_C_ResetMessage) == 0x000001, "Wrong alignment on TextTyper_C_ResetMessage");
static_assert(sizeof(TextTyper_C_ResetMessage) == 0x000002, "Wrong size on TextTyper_C_ResetMessage");
static_assert(offsetof(TextTyper_C_ResetMessage, Result) == 0x000000, "Member 'TextTyper_C_ResetMessage::Result' has a wrong offset!");
static_assert(offsetof(TextTyper_C_ResetMessage, CallFunc_SetTextMessage_Result) == 0x000001, "Member 'TextTyper_C_ResetMessage::CallFunc_SetTextMessage_Result' has a wrong offset!");

// Function TextTyper.TextTyper_C.GetCurrentMessage
// 0x0048 (0x0048 - 0x0000)
struct TextTyper_C_GetCurrentMessage final
{
public:
	float                                         GameTimeSeconds;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Message;                                           // 0x0008(0x0018)(Parm, OutParm)
	int32                                         CallFunc_GetCurrentCharacterCount_Result;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetMessageWithCharacterCount_Message;     // 0x0028(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextTyper_C_GetCurrentMessage) == 0x000008, "Wrong alignment on TextTyper_C_GetCurrentMessage");
static_assert(sizeof(TextTyper_C_GetCurrentMessage) == 0x000048, "Wrong size on TextTyper_C_GetCurrentMessage");
static_assert(offsetof(TextTyper_C_GetCurrentMessage, GameTimeSeconds) == 0x000000, "Member 'TextTyper_C_GetCurrentMessage::GameTimeSeconds' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetCurrentMessage, Message) == 0x000008, "Member 'TextTyper_C_GetCurrentMessage::Message' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetCurrentMessage, CallFunc_GetCurrentCharacterCount_Result) == 0x000020, "Member 'TextTyper_C_GetCurrentMessage::CallFunc_GetCurrentCharacterCount_Result' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetCurrentMessage, CallFunc_GetMessageWithCharacterCount_Message) == 0x000028, "Member 'TextTyper_C_GetCurrentMessage::CallFunc_GetMessageWithCharacterCount_Message' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetCurrentMessage, CallFunc_TextIsEmpty_ReturnValue) == 0x000040, "Member 'TextTyper_C_GetCurrentMessage::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");

// Function TextTyper.TextTyper_C.HasMessage
// 0x0003 (0x0003 - 0x0000)
struct TextTyper_C_HasMessage final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(TextTyper_C_HasMessage) == 0x000001, "Wrong alignment on TextTyper_C_HasMessage");
static_assert(sizeof(TextTyper_C_HasMessage) == 0x000003, "Wrong size on TextTyper_C_HasMessage");
static_assert(offsetof(TextTyper_C_HasMessage, Result) == 0x000000, "Member 'TextTyper_C_HasMessage::Result' has a wrong offset!");
static_assert(offsetof(TextTyper_C_HasMessage, CallFunc_TextIsEmpty_ReturnValue) == 0x000001, "Member 'TextTyper_C_HasMessage::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextTyper_C_HasMessage, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'TextTyper_C_HasMessage::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function TextTyper.TextTyper_C.GetElapsedTime
// 0x000C (0x000C - 0x0000)
struct TextTyper_C_GetElapsedTime final
{
public:
	float                                         GameTimeSeconds;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedSeconds;                                    // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextTyper_C_GetElapsedTime) == 0x000004, "Wrong alignment on TextTyper_C_GetElapsedTime");
static_assert(sizeof(TextTyper_C_GetElapsedTime) == 0x00000C, "Wrong size on TextTyper_C_GetElapsedTime");
static_assert(offsetof(TextTyper_C_GetElapsedTime, GameTimeSeconds) == 0x000000, "Member 'TextTyper_C_GetElapsedTime::GameTimeSeconds' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetElapsedTime, ElapsedSeconds) == 0x000004, "Member 'TextTyper_C_GetElapsedTime::ElapsedSeconds' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetElapsedTime, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'TextTyper_C_GetElapsedTime::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");

// Function TextTyper.TextTyper_C.GetTargetMessage
// 0x0018 (0x0018 - 0x0000)
struct TextTyper_C_GetTargetMessage final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(TextTyper_C_GetTargetMessage) == 0x000008, "Wrong alignment on TextTyper_C_GetTargetMessage");
static_assert(sizeof(TextTyper_C_GetTargetMessage) == 0x000018, "Wrong size on TextTyper_C_GetTargetMessage");
static_assert(offsetof(TextTyper_C_GetTargetMessage, Message) == 0x000000, "Member 'TextTyper_C_GetTargetMessage::Message' has a wrong offset!");

// Function TextTyper.TextTyper_C.GetCurrentCharacterCount
// 0x0018 (0x0018 - 0x0000)
struct TextTyper_C_GetCurrentCharacterCount final
{
public:
	float                                         GameTimeSeconds;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Result;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetElapsedTime_ElapsedSeconds;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TextTyper_C_GetCurrentCharacterCount) == 0x000004, "Wrong alignment on TextTyper_C_GetCurrentCharacterCount");
static_assert(sizeof(TextTyper_C_GetCurrentCharacterCount) == 0x000018, "Wrong size on TextTyper_C_GetCurrentCharacterCount");
static_assert(offsetof(TextTyper_C_GetCurrentCharacterCount, GameTimeSeconds) == 0x000000, "Member 'TextTyper_C_GetCurrentCharacterCount::GameTimeSeconds' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetCurrentCharacterCount, Result) == 0x000004, "Member 'TextTyper_C_GetCurrentCharacterCount::Result' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetCurrentCharacterCount, CallFunc_GetElapsedTime_ElapsedSeconds) == 0x000008, "Member 'TextTyper_C_GetCurrentCharacterCount::CallFunc_GetElapsedTime_ElapsedSeconds' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetCurrentCharacterCount, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'TextTyper_C_GetCurrentCharacterCount::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetCurrentCharacterCount, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'TextTyper_C_GetCurrentCharacterCount::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetCurrentCharacterCount, CallFunc_FTrunc_ReturnValue) == 0x000014, "Member 'TextTyper_C_GetCurrentCharacterCount::CallFunc_FTrunc_ReturnValue' has a wrong offset!");

// Function TextTyper.TextTyper_C.GetMessageWithCharacterCount
// 0x0060 (0x0060 - 0x0000)
struct TextTyper_C_GetMessageWithCharacterCount final
{
public:
	int32                                         CharacterCount;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Message;                                           // 0x0008(0x0018)(Parm, OutParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_LeftChop_ReturnValue;                     // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0048(0x0018)()
};
static_assert(alignof(TextTyper_C_GetMessageWithCharacterCount) == 0x000008, "Wrong alignment on TextTyper_C_GetMessageWithCharacterCount");
static_assert(sizeof(TextTyper_C_GetMessageWithCharacterCount) == 0x000060, "Wrong size on TextTyper_C_GetMessageWithCharacterCount");
static_assert(offsetof(TextTyper_C_GetMessageWithCharacterCount, CharacterCount) == 0x000000, "Member 'TextTyper_C_GetMessageWithCharacterCount::CharacterCount' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetMessageWithCharacterCount, Message) == 0x000008, "Member 'TextTyper_C_GetMessageWithCharacterCount::Message' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetMessageWithCharacterCount, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'TextTyper_C_GetMessageWithCharacterCount::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetMessageWithCharacterCount, CallFunc_Len_ReturnValue) == 0x000030, "Member 'TextTyper_C_GetMessageWithCharacterCount::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetMessageWithCharacterCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000034, "Member 'TextTyper_C_GetMessageWithCharacterCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetMessageWithCharacterCount, CallFunc_LeftChop_ReturnValue) == 0x000038, "Member 'TextTyper_C_GetMessageWithCharacterCount::CallFunc_LeftChop_ReturnValue' has a wrong offset!");
static_assert(offsetof(TextTyper_C_GetMessageWithCharacterCount, CallFunc_Conv_StringToText_ReturnValue) == 0x000048, "Member 'TextTyper_C_GetMessageWithCharacterCount::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

}


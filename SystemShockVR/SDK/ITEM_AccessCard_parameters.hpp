#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ITEM_AccessCard

#include "Basic.hpp"


namespace SDK::Params
{

// Function ITEM_AccessCard.ITEM_AccessCard_C.ReceiveAnimationMessage
// 0x0018 (0x0018 - 0x0000)
struct ITEM_AccessCard_C_ReceiveAnimationMessage final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_AccessCard_C_ReceiveAnimationMessage) == 0x000008, "Wrong alignment on ITEM_AccessCard_C_ReceiveAnimationMessage");
static_assert(sizeof(ITEM_AccessCard_C_ReceiveAnimationMessage) == 0x000018, "Wrong size on ITEM_AccessCard_C_ReceiveAnimationMessage");
static_assert(offsetof(ITEM_AccessCard_C_ReceiveAnimationMessage, Message) == 0x000000, "Member 'ITEM_AccessCard_C_ReceiveAnimationMessage::Message' has a wrong offset!");
static_assert(offsetof(ITEM_AccessCard_C_ReceiveAnimationMessage, Result) == 0x000010, "Member 'ITEM_AccessCard_C_ReceiveAnimationMessage::Result' has a wrong offset!");

// Function ITEM_AccessCard.ITEM_AccessCard_C.GetDisplayProperties
// 0x0048 (0x0048 - 0x0000)
struct ITEM_AccessCard_C_GetDisplayProperties final
{
public:
	class USkeletalMesh*                          SkeletalMesh;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 AnimInstanceClass_0;                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsAnim_Instance;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ITEM_AccessCard_C_GetDisplayProperties) == 0x000008, "Wrong alignment on ITEM_AccessCard_C_GetDisplayProperties");
static_assert(sizeof(ITEM_AccessCard_C_GetDisplayProperties) == 0x000048, "Wrong size on ITEM_AccessCard_C_GetDisplayProperties");
static_assert(offsetof(ITEM_AccessCard_C_GetDisplayProperties, SkeletalMesh) == 0x000000, "Member 'ITEM_AccessCard_C_GetDisplayProperties::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(ITEM_AccessCard_C_GetDisplayProperties, AnimInstanceClass_0) == 0x000008, "Member 'ITEM_AccessCard_C_GetDisplayProperties::AnimInstanceClass_0' has a wrong offset!");
static_assert(offsetof(ITEM_AccessCard_C_GetDisplayProperties, OverrideMaterial) == 0x000010, "Member 'ITEM_AccessCard_C_GetDisplayProperties::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(ITEM_AccessCard_C_GetDisplayProperties, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000018, "Member 'ITEM_AccessCard_C_GetDisplayProperties::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_AccessCard_C_GetDisplayProperties, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000020, "Member 'ITEM_AccessCard_C_GetDisplayProperties::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(ITEM_AccessCard_C_GetDisplayProperties, K2Node_ClassDynamicCast_AsAnim_Instance) == 0x000028, "Member 'ITEM_AccessCard_C_GetDisplayProperties::K2Node_ClassDynamicCast_AsAnim_Instance' has a wrong offset!");
static_assert(offsetof(ITEM_AccessCard_C_GetDisplayProperties, K2Node_ClassDynamicCast_bSuccess) == 0x000030, "Member 'ITEM_AccessCard_C_GetDisplayProperties::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ITEM_AccessCard_C_GetDisplayProperties, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000038, "Member 'ITEM_AccessCard_C_GetDisplayProperties::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(ITEM_AccessCard_C_GetDisplayProperties, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'ITEM_AccessCard_C_GetDisplayProperties::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ITEM_AccessCard.ITEM_AccessCard_C.GetInventoryItemDetailsClass
// 0x0008 (0x0008 - 0x0000)
struct ITEM_AccessCard_C_GetInventoryItemDetailsClass final
{
public:
	class UClass*                                 InventoryItemDetailsWidget;                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ITEM_AccessCard_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong alignment on ITEM_AccessCard_C_GetInventoryItemDetailsClass");
static_assert(sizeof(ITEM_AccessCard_C_GetInventoryItemDetailsClass) == 0x000008, "Wrong size on ITEM_AccessCard_C_GetInventoryItemDetailsClass");
static_assert(offsetof(ITEM_AccessCard_C_GetInventoryItemDetailsClass, InventoryItemDetailsWidget) == 0x000000, "Member 'ITEM_AccessCard_C_GetInventoryItemDetailsClass::InventoryItemDetailsWidget' has a wrong offset!");

}

